#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 372 346 89 182 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 372 346 89 182 293 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 372 346 89 182 293 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 372 346 89 182 293 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 367 8 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
100 1 104 2 271 2 2 2 128 1 107 1 30 5 162 1 177 2 33 1 300 1 326 1 165 1 283 2 303 1 284 9 185 3 37 6 358 1 119 2 260 2 148 1 120 1 194 1 149 9 363 1 219 4 226 1 
100 1 104 2 271 2 2 2 128 1 107 1 30 5 162 1 177 2 33 1 300 1 326 1 165 1 283 2 303 1 284 9 185 3 37 6 358 1 119 2 260 2 148 1 120 1 194 1 149 9 363 1 219 4 226 1 
100 1 104 2 271 2 2 2 128 1 107 1 30 6 162 1 177 2 33 1 300 1 326 1 165 1 283 2 303 1 284 10 185 4 37 7 358 1 119 2 260 2 148 1 120 1 194 1 149 10 363 1 219 5 226 1 
100 1 104 2 271 2 2 1 128 1 107 1 30 4 162 1 177 2 33 1 300 1 326 1 165 1 283 2 284 7 185 2 37 4 358 1 119 2 260 2 148 1 120 1 194 1 149 7 363 1 219 3 226 1 
165 1 283 1 303 1 104 1 185 1 284 4 37 3 271 1 2 2 119 1 107 1 148 1 30 3 177 1 149 4 363 1 219 2 326 1 
35 1 165 1 283 1 284 2 271 1 234 1 119 1 260 1 30 1 107 1 296 1 177 1 149 2 194 1 326 1 226 1 
165 1 283 2 284 3 185 1 37 1 358 1 260 1 107 1 30 2 177 2 149 3 219 1 326 1 
231 1 104 1 271 1 2 2 253 1 107 1 30 5 162 1 177 2 33 1 326 1 165 1 283 2 303 1 185 3 284 9 37 7 358 1 119 1 260 1 148 1 149 9 363 1 219 4 
231 1 104 1 271 1 2 2 253 1 107 1 30 5 162 1 177 2 33 1 326 1 165 1 283 2 303 1 185 3 284 9 37 7 358 1 119 1 260 1 148 1 149 9 363 1 219 4 
98 1 4 1 344 1 
98 1 43 1 248 2 
227 1 302 2 192 2 139 2 309 1 114 2 42 2 53 2 
173 1 227 1 229 1 366 1 50 2 1 2 3 1 53 3 27 1 84 2 294 1 237 1 347 1 205 2 276 1 135 2 111 1 137 1 282 1 328 1 302 3 139 2 184 2 114 2 167 1 331 2 258 1 354 1 305 2 91 1 67 1 146 1 18 1 192 3 309 1 70 1 362 1 42 3 20 1 312 1 338 1 
67 1 302 1 192 1 139 1 309 1 130 1 114 1 263 1 42 1 53 1 
340 1 354 1 53 1 175 1 344 1 144 1 334 1 67 1 192 1 98 1 362 1 42 1 195 1 152 1 
302 1 139 1 114 1 354 1 53 1 175 2 344 1 334 1 67 1 192 1 98 1 362 1 42 1 195 1 152 2 
376 1 373 1 46 1 152 1 175 1 
359 1 376 1 98 1 186 1 46 1 152 2 175 2 344 1 
376 1 152 1 175 1 
302 1 139 1 114 1 53 1 175 1 55 1 67 1 309 1 192 1 130 1 263 1 42 1 46 1 152 1 
98 1 
376 1 98 1 186 1 46 1 152 2 245 1 175 2 344 1 
301 1 376 2 316 1 292 1 22 1 257 1 186 1 81 2 175 5 344 1 215 1 98 1 287 2 348 1 46 2 298 1 136 1 152 5 269 2 
366 1 50 2 341 1 1 1 53 2 27 1 84 2 239 1 135 1 137 1 328 1 302 2 114 1 167 1 331 1 305 2 354 1 67 1 192 2 193 1 362 1 20 1 42 2 312 1 
227 1 4 1 
227 2 302 1 139 1 192 2 114 1 42 2 53 2 48 1 225 1 
124 1 341 1 118 1 
227 1 302 1 366 1 50 2 1 1 167 1 331 1 354 1 305 2 53 1 27 1 84 2 67 1 240 1 192 1 362 1 42 1 20 1 312 1 135 1 137 1 328 1 
227 1 239 1 302 3 139 1 192 3 114 3 42 3 53 3 
67 1 302 1 192 1 130 1 114 1 42 1 53 1 
67 1 302 1 192 1 139 1 114 1 42 1 48 1 53 1 225 1 
227 1 366 1 50 2 1 1 3 1 53 4 27 1 175 1 84 2 370 1 294 1 237 1 239 1 347 1 205 2 276 1 87 1 135 1 111 1 137 1 282 1 328 1 302 4 139 2 184 1 114 3 167 1 331 1 305 2 354 2 91 1 334 1 67 2 146 1 192 4 193 1 309 1 70 1 362 2 42 4 20 1 312 1 195 1 152 1 225 1 
227 1 302 1 239 1 192 2 340 1 114 1 42 2 307 1 53 2 
302 3 139 1 114 3 354 1 53 3 175 1 334 1 67 1 239 2 193 1 192 3 98 1 362 1 42 3 277 1 195 1 87 1 152 1 225 1 
124 1 302 2 139 1 114 2 341 1 53 2 239 1 192 2 42 2 225 1 
227 1 302 1 366 1 50 2 1 1 167 1 331 1 354 1 305 2 53 1 27 1 84 2 67 1 192 1 362 1 42 1 20 1 312 1 135 1 137 1 328 1 
227 1 302 1 366 1 50 2 1 1 331 1 354 1 305 2 53 1 27 1 212 1 41 1 84 2 67 1 192 1 362 1 42 1 20 1 135 1 137 1 328 1 
124 2 341 2 202 1 3 1 237 1 347 1 205 2 111 1 242 1 61 1 282 1 351 1 140 1 184 4 14 1 258 2 118 2 380 1 146 2 70 1 44 1 266 1 364 1 197 1 
67 1 302 1 192 1 114 1 362 1 42 1 368 1 53 1 
78 1 227 1 302 4 139 1 340 1 114 4 307 1 53 5 239 2 192 5 193 1 216 1 42 5 225 1 
67 1 302 2 192 2 130 1 114 2 42 2 368 1 53 2 
238 1 319 1 
238 1 319 1 
0 1 211 1 
0 1 211 1 
0 1 211 1 
10 1 238 1 319 1 
238 1 319 1 244 1 
238 2 0 1 246 1 311 1 319 2 211 1 
10 1 238 1 319 1 
10 1 238 1 319 1 
238 1 360 1 319 1 
238 1 360 1 319 1 
238 1 360 1 319 1 
12 1 318 1 319 2 369 2 94 2 175 2 286 2 238 2 57 1 246 1 98 1 323 2 337 1 72 1 152 2 73 3 267 1 112 1 76 2 
227 1 302 2 166 1 12 1 114 2 200 1 319 1 353 1 369 1 244 1 53 2 94 1 175 1 204 1 286 1 238 1 192 2 132 1 42 2 86 1 323 1 152 1 73 1 327 1 
119 1 104 1 271 1 
35 1 119 1 271 1 
35 1 119 3 15 1 104 2 180 1 60 1 
35 1 101 1 119 2 15 1 104 1 60 1 
35 1 119 2 104 1 15 1 60 2 
102 1 123 1 292 3 200 1 81 1 274 2 175 5 5 1 344 1 85 1 348 1 86 1 298 2 61 1 166 1 376 1 14 1 186 1 95 1 380 1 19 2 98 2 44 1 43 1 287 1 46 4 222 1 152 5 248 3 198 2 314 1 269 1 
156 1 123 2 22 1 292 8 81 2 159 1 24 1 175 9 344 1 85 2 28 1 86 4 373 5 348 1 298 6 9 1 61 3 376 6 14 3 186 1 379 5 95 1 380 3 147 1 19 6 98 5 44 3 43 3 287 2 46 7 152 9 248 9 198 6 314 3 269 2 
102 1 123 1 22 1 292 3 81 1 274 1 175 3 344 1 5 1 85 1 86 1 298 2 61 1 14 1 380 1 19 2 98 3 44 1 43 2 287 1 46 2 152 3 269 1 314 1 198 2 248 4 
102 1 123 1 22 1 292 5 81 1 159 1 274 2 175 4 344 1 5 1 85 1 28 1 86 2 298 4 9 1 61 2 14 2 380 2 19 4 98 4 44 2 43 3 287 1 46 3 152 4 248 7 198 4 269 1 314 2 
275 1 4 1 84 1 
357 1 84 1 
232 1 
50 1 84 1 
50 1 99 1 305 1 106 1 275 2 84 3 
50 1 305 1 84 1 
171 1 84 1 
243 1 184 7 66 1 258 4 96 1 146 3 190 1 259 1 29 2 44 1 45 1 381 1 364 3 206 1 197 2 61 1 88 1 
243 1 184 7 66 1 258 4 96 1 146 3 190 1 259 1 29 2 44 1 45 1 381 1 364 3 206 1 197 2 61 1 88 1 
243 1 184 7 66 1 258 4 96 1 146 3 190 1 259 1 261 1 29 2 44 1 45 1 381 1 364 3 206 1 197 2 61 1 88 1 
237 1 346 1 56 1 161 1 372 4 29 3 205 2 206 1 208 1 111 1 88 2 282 1 61 4 138 1 243 2 184 31 14 3 90 3 66 2 115 1 258 16 96 1 146 15 190 2 380 3 259 1 70 1 44 4 381 1 45 5 364 10 220 1 197 5 314 3 
237 2 29 2 205 4 206 1 299 1 208 1 111 2 61 1 282 2 88 1 243 1 184 9 258 5 66 1 96 1 190 1 146 4 70 2 44 1 45 1 381 1 364 4 197 3 268 1 
249 1 366 1 104 1 1 1 250 1 271 1 272 1 30 1 107 1 177 1 135 1 137 1 180 1 326 1 35 1 165 1 283 1 183 1 13 1 284 2 304 1 37 1 331 1 187 1 356 1 40 1 97 1 119 2 260 1 149 2 
249 1 366 1 104 1 1 1 23 1 250 1 271 1 272 1 30 1 107 1 177 1 135 1 180 1 137 1 35 1 165 1 283 1 183 1 13 1 284 3 304 1 37 2 331 1 187 1 97 1 119 2 260 1 217 1 149 3 196 1 
249 1 366 1 104 1 1 1 272 1 271 1 30 1 107 1 135 1 137 1 180 1 35 1 165 1 183 1 13 1 284 2 304 1 37 2 331 1 97 1 119 2 260 1 217 1 149 2 196 1 
249 2 181 1 366 1 283 1 183 2 50 1 13 2 23 1 284 1 1 1 64 1 331 1 84 1 260 2 177 1 20 1 149 1 170 1 59 1 135 1 47 1 137 1 325 1 
249 1 366 1 104 1 1 1 250 1 271 1 272 1 177 1 135 1 137 1 180 1 326 1 35 1 283 1 183 1 13 1 284 1 304 1 331 1 187 1 356 1 97 1 119 2 260 1 217 1 149 1 
122 1 
50 1 292 2 340 1 1 2 158 1 53 1 344 1 251 2 348 1 298 2 110 1 255 4 209 1 354 1 67 1 213 1 121 1 362 1 20 2 170 1 224 2 269 1 366 1 126 2 320 1 81 1 26 2 175 5 84 1 85 1 241 1 131 2 31 2 135 2 279 1 137 1 376 6 329 1 285 1 186 3 331 2 143 2 144 1 334 1 192 1 335 1 98 2 43 2 287 1 42 1 195 1 47 1 152 5 288 1 248 2 
340 1 53 1 175 3 251 1 279 1 110 1 255 2 209 1 376 2 285 1 186 1 354 1 245 1 334 1 144 1 67 1 192 1 121 1 362 1 42 1 195 1 152 3 
340 1 26 1 53 1 175 3 344 1 279 1 110 1 255 3 209 1 376 1 285 1 186 1 354 1 245 1 334 1 144 1 67 1 192 1 121 1 362 1 98 1 42 1 195 1 152 3 
340 1 26 1 53 1 175 3 251 1 344 1 279 1 110 1 255 3 209 1 376 2 285 1 186 1 354 1 245 1 334 1 144 1 67 1 192 1 121 1 362 1 98 1 42 1 195 1 152 3 224 1 
340 1 292 1 53 1 251 4 344 5 348 1 110 1 298 1 255 6 209 1 354 1 67 1 68 1 213 1 362 1 121 1 224 4 269 1 126 2 80 1 81 1 26 4 83 1 175 5 131 2 31 2 133 1 279 1 376 7 285 1 186 3 378 1 143 2 245 1 334 1 144 1 192 1 335 1 98 5 42 1 287 1 43 2 195 1 152 5 
340 1 292 1 53 1 251 2 344 1 348 1 110 1 298 1 255 4 209 1 354 1 213 1 67 1 362 1 121 1 224 2 269 1 126 2 81 1 26 2 175 4 241 1 131 2 31 2 279 1 376 4 285 1 186 2 143 2 334 1 144 1 192 1 335 1 98 2 42 1 287 1 43 2 195 1 152 4 248 2 
126 2 292 1 340 1 80 1 81 1 26 2 53 1 83 1 175 4 344 1 251 2 131 2 31 2 348 1 298 1 279 1 110 1 255 4 209 1 376 4 285 1 186 2 354 1 143 2 334 1 144 1 213 1 67 1 68 1 192 1 335 1 98 1 121 1 362 1 43 2 42 1 287 1 195 1 152 4 224 2 269 1 
126 2 292 1 340 1 80 1 81 1 26 2 53 1 83 1 175 4 344 1 251 2 131 2 31 2 348 1 298 1 279 1 110 1 255 4 209 1 376 4 285 1 186 2 354 1 143 2 334 1 144 1 213 1 67 1 68 1 192 1 335 1 98 1 121 1 362 1 43 2 42 1 287 1 195 1 152 4 224 2 269 1 
292 1 340 1 80 1 81 1 26 2 53 1 175 4 344 1 251 2 252 2 131 2 348 1 109 1 298 1 279 1 110 1 255 4 209 1 376 4 285 1 38 2 186 2 354 1 39 1 143 2 334 1 144 1 67 1 192 1 335 1 98 1 265 1 121 1 362 1 42 1 287 1 195 1 152 4 224 2 248 2 269 1 
126 2 292 1 340 1 80 1 81 1 26 3 83 1 53 1 175 4 344 1 251 3 131 2 31 2 348 1 133 1 298 1 279 1 110 1 255 5 209 1 376 5 285 1 186 2 354 1 143 2 334 1 144 1 213 1 67 1 68 1 192 1 335 1 98 1 121 1 362 1 43 2 287 1 42 1 195 1 152 4 224 3 269 1 
126 2 292 1 340 1 80 1 81 1 26 3 83 1 53 1 175 4 344 1 251 3 131 2 31 2 348 1 133 1 298 1 279 1 110 1 255 5 209 1 376 5 285 1 186 2 354 1 143 2 334 1 144 1 213 1 67 1 68 1 192 1 335 1 98 1 121 1 362 1 43 2 287 1 42 1 195 1 152 4 224 3 269 1 
340 1 292 1 53 1 251 2 344 1 252 2 348 1 110 1 298 1 255 4 209 1 354 1 67 1 265 1 362 1 121 1 224 2 269 1 81 1 26 2 175 4 241 1 131 2 279 1 376 4 285 1 38 2 186 2 143 2 334 1 144 1 192 1 335 1 98 1 42 1 287 1 195 1 152 4 248 2 
227 2 124 1 341 1 3 1 4 1 237 1 347 1 29 1 205 2 206 1 111 1 242 1 88 1 282 1 61 1 184 6 66 1 258 3 118 1 96 1 146 3 70 1 44 1 381 1 364 2 197 2 
124 3 341 8 51 1 3 1 343 1 237 1 347 1 372 2 205 2 278 1 111 1 282 1 61 2 184 10 14 2 90 2 258 6 115 1 118 8 146 4 380 1 70 1 44 1 45 1 364 2 21 1 197 1 339 1 314 2 
227 1 154 1 366 1 124 1 125 1 50 2 1 1 3 1 53 2 27 1 84 2 237 1 294 1 240 1 239 1 347 1 205 2 108 1 135 1 137 1 111 1 328 1 282 1 302 2 114 1 184 2 167 1 331 1 354 1 305 2 258 1 67 1 146 1 192 2 193 1 18 1 70 1 362 1 20 1 42 2 312 1 21 1 
50 4 341 7 1 3 3 3 53 3 294 1 347 3 205 6 206 1 111 3 61 3 302 3 114 1 14 2 167 2 66 1 258 10 305 4 354 2 118 7 67 2 18 1 70 3 262 2 217 1 362 2 20 1 312 2 364 8 21 1 365 2 172 1 314 2 227 2 77 2 366 2 124 7 27 2 84 4 237 3 239 1 29 1 276 2 135 3 137 2 88 1 282 3 328 2 184 20 331 3 142 1 188 1 96 1 380 2 146 10 193 1 192 3 44 3 42 3 381 1 45 4 150 2 197 4 
49 1 366 2 127 1 50 2 1 8 3 2 53 1 84 3 237 2 294 1 239 1 347 2 205 4 135 8 242 1 137 2 111 2 281 1 282 2 302 1 114 1 184 2 331 7 258 1 116 1 17 1 40 1 191 1 146 1 192 1 18 1 70 2 217 1 42 1 20 2 170 1 47 1 74 1 338 2 
124 1 341 1 3 1 53 1 237 1 347 1 205 2 111 1 282 1 256 1 61 1 302 1 139 1 114 1 14 1 184 3 258 1 118 1 380 1 146 2 192 1 70 1 42 1 44 1 364 1 21 1 197 1 225 1 314 1 
124 1 341 1 184 2 14 1 258 2 3 1 118 1 237 1 347 1 70 1 205 2 45 1 364 1 242 1 111 1 282 1 351 1 61 1 
124 1 341 1 184 2 140 1 3 1 118 1 237 1 380 1 146 2 347 1 70 1 205 2 44 1 364 1 242 1 111 1 197 1 282 1 
124 2 341 2 184 4 14 1 258 2 3 1 118 2 237 1 146 2 380 1 347 1 70 1 205 2 44 1 45 1 364 2 242 1 111 1 197 1 282 1 314 1 61 1 
124 1 341 1 184 2 14 1 258 2 3 1 118 1 237 1 347 1 70 1 205 2 45 1 364 1 74 1 111 1 282 1 351 1 61 1 
124 1 341 1 184 2 140 1 3 1 118 1 237 1 380 1 146 2 347 1 70 1 205 2 44 1 364 1 74 1 111 1 197 1 282 1 
124 2 341 2 184 4 14 1 258 2 3 1 118 2 237 1 146 2 380 1 347 1 70 1 205 2 44 1 45 1 364 2 74 1 111 1 197 1 282 1 314 1 61 1 
124 2 341 2 14 1 184 4 258 2 3 1 118 2 237 1 146 2 380 1 347 1 70 1 205 2 44 1 45 1 364 2 111 1 197 1 282 1 314 1 61 1 
227 1 366 1 50 2 1 1 3 1 53 1 27 1 84 2 294 1 237 1 347 1 205 2 276 1 135 1 137 1 111 1 282 1 328 1 302 1 184 2 167 1 331 1 258 1 305 2 354 1 67 1 146 1 18 1 192 1 70 1 362 1 20 1 42 1 312 1 
227 1 366 1 50 2 1 1 3 1 236 1 53 1 27 1 84 2 294 1 237 1 347 1 205 2 135 1 137 1 111 1 282 1 328 1 302 1 184 2 331 1 258 1 305 2 354 1 41 1 212 1 67 1 146 1 18 1 192 1 70 1 362 1 20 1 42 1 
124 2 341 2 184 4 14 1 258 2 3 1 118 2 237 1 146 2 380 1 347 1 70 1 205 2 44 1 45 1 364 2 21 1 111 1 197 1 282 1 314 1 61 1 
77 1 124 2 366 1 341 2 50 2 1 1 3 1 53 1 27 1 84 2 237 1 347 1 205 2 276 1 135 1 111 1 137 1 61 1 282 1 328 1 302 1 184 4 14 1 167 1 331 1 258 2 305 2 354 1 118 2 40 1 67 1 146 2 380 1 192 1 70 1 362 1 44 1 42 1 45 1 312 1 364 2 197 1 314 1 
124 1 341 1 233 1 3 1 53 1 237 1 347 1 205 2 111 1 282 1 61 1 302 1 139 1 114 1 14 1 184 3 258 2 118 1 146 1 380 1 192 1 70 1 44 1 42 1 45 1 364 1 21 1 225 1 314 1 
228 1 157 1 230 1 293 1 25 1 345 1 346 1 237 2 372 2 205 4 111 2 282 2 61 3 182 1 184 19 14 3 90 1 258 9 115 1 92 2 146 10 380 3 70 2 264 2 44 3 45 3 364 6 197 3 268 1 314 3 
182 2 228 2 89 1 184 5 293 1 90 1 258 2 92 1 345 1 346 2 237 1 146 3 372 2 70 1 205 2 111 1 268 1 282 1 
228 2 157 1 230 1 293 1 345 1 346 3 237 2 321 1 372 4 205 4 111 2 282 2 61 2 182 1 89 1 184 18 14 2 90 2 258 8 115 1 92 2 146 10 380 2 70 2 264 1 44 2 45 2 364 3 197 1 268 1 314 2 
228 2 157 1 230 1 293 1 345 1 346 3 237 2 321 1 372 4 205 4 111 2 282 2 61 2 182 1 89 1 184 18 14 2 90 2 258 8 115 1 92 2 146 10 380 2 70 2 264 1 44 2 45 2 364 4 197 2 268 1 314 2 
228 1 293 1 345 1 346 2 237 1 29 1 372 3 205 2 206 1 111 1 88 1 282 1 61 3 182 1 89 1 184 20 14 2 90 2 66 1 258 10 115 1 92 1 96 1 146 10 380 2 70 1 44 3 381 1 45 2 364 5 197 3 268 1 339 1 314 2 
238 1 246 1 318 1 319 1 323 1 369 1 267 1 350 1 94 1 286 1 
244 1 327 1 
62 1 238 1 129 1 352 1 319 1 323 1 369 1 94 1 286 1 
12 1 318 1 319 1 369 1 94 1 175 1 286 1 238 1 57 1 246 1 98 1 323 1 72 1 152 1 73 2 267 1 112 1 76 1 
12 1 318 1 319 1 369 1 94 1 175 1 286 1 238 1 57 1 246 1 98 1 323 1 72 1 152 1 73 2 267 1 112 1 76 1 
12 1 318 1 319 1 369 1 94 1 175 1 286 1 238 1 57 1 246 1 98 1 323 1 72 1 152 1 73 2 267 1 112 1 76 1 
10 1 311 1 52 1 
10 1 311 1 52 1 
360 1 355 1 
360 1 311 1 355 1 
353 1 204 1 
227 1 302 2 374 1 166 1 114 2 200 1 319 1 353 1 369 1 53 2 244 1 94 1 175 1 204 1 286 1 238 1 192 2 132 1 42 2 86 1 323 1 46 1 73 1 152 1 327 1 112 1 76 1 
10 1 52 1 
360 1 311 1 355 1 
49 1 366 1 50 1 127 1 1 2 79 1 3 1 53 2 84 1 237 1 294 1 347 1 205 2 135 2 137 1 111 1 282 1 184 2 331 2 258 1 146 1 214 1 192 2 69 1 18 1 70 1 42 2 151 1 21 1 313 1 338 2 
35 1 249 1 366 1 290 1 104 1 1 2 304 1 250 1 271 1 331 2 117 1 40 1 97 1 119 2 217 1 32 1 135 2 180 1 137 1 
35 1 249 1 366 1 290 1 104 1 1 1 304 1 250 1 271 1 331 1 97 1 119 2 217 1 218 1 135 1 180 1 137 1 
249 1 366 1 199 1 50 1 1 1 331 1 84 1 20 1 32 1 170 1 135 1 47 1 137 1 325 1 
35 1 249 1 366 1 290 1 104 1 1 1 304 1 250 1 271 1 331 1 117 1 97 1 119 2 217 1 32 1 135 1 180 1 137 1 
105 1 
316 1 292 1 98 1 298 1 136 1 4 1 344 1 
126 1 292 1 81 1 175 1 344 1 31 1 348 1 298 1 376 1 186 1 213 1 98 2 43 1 287 1 152 1 269 1 248 1 
155 2 103 2 292 9 50 3 1 3 201 1 106 1 344 2 297 2 348 4 298 8 61 2 14 2 210 1 305 3 306 1 357 3 310 1 262 2 19 6 20 1 171 2 221 2 223 1 75 2 269 4 314 2 366 3 316 1 320 1 81 4 275 2 175 5 27 2 84 10 85 2 135 3 136 1 137 4 376 5 331 3 186 3 40 1 189 2 380 2 98 8 287 4 43 6 336 2 44 2 195 2 152 5 198 6 248 12 
103 2 292 8 320 1 81 2 174 1 175 1 344 2 346 1 85 1 58 1 372 1 348 2 298 5 324 1 61 2 376 1 89 1 377 1 14 2 186 1 90 1 332 1 145 1 380 2 19 5 98 5 336 1 287 2 43 3 44 2 152 1 248 6 198 5 269 2 314 2 
103 2 292 2 81 1 83 1 53 1 175 1 55 1 130 1 349 1 348 1 298 2 88 1 61 2 302 1 139 1 114 1 66 1 67 1 96 1 192 1 309 1 263 1 336 1 42 1 287 1 44 1 152 1 269 1 
316 1 292 1 81 1 344 1 98 1 287 1 348 1 136 1 298 1 269 1 
103 2 14 2 292 5 380 2 262 1 19 5 98 5 336 1 43 5 44 2 298 5 314 2 61 2 198 5 248 10 
376 1 98 1 186 1 152 1 175 1 344 1 
366 1 22 1 50 1 292 2 1 4 320 2 81 2 158 1 175 3 84 1 85 2 348 1 135 4 298 2 137 1 376 4 329 1 141 1 36 1 331 4 186 2 310 2 287 2 20 2 170 1 47 1 152 3 223 1 269 2 
227 1 366 1 50 2 1 1 3 1 53 3 27 1 84 2 294 1 237 1 347 1 205 2 276 1 135 1 111 1 137 1 282 1 328 1 302 3 139 2 184 1 114 2 167 1 331 1 91 1 305 2 354 1 67 1 146 1 192 3 309 1 70 1 362 1 20 1 42 3 312 1 
292 1 320 1 81 1 344 2 85 1 29 1 19 2 98 4 43 2 287 1 348 1 298 2 198 2 248 4 269 1 
270 1 323 1 286 1 
169 1 318 1 323 1 204 1 286 1 
270 1 323 1 286 1 
270 1 323 1 286 1 
295 1 323 1 286 1 
295 1 323 1 286 1 
295 1 323 1 286 1 
323 1 286 1 
238 1 319 1 
184 8 258 4 66 1 96 1 237 2 146 4 29 1 70 2 205 4 44 1 45 1 381 1 364 3 206 1 208 1 111 2 197 2 61 1 282 2 88 1 
184 6 66 1 258 3 4 1 96 1 146 3 29 1 44 1 381 1 206 1 364 2 197 2 88 1 61 1 
14 1 184 4 258 2 237 1 146 2 380 1 70 1 205 2 44 1 322 1 45 1 364 2 111 1 197 1 282 1 314 1 61 1 
184 7 14 1 90 1 258 3 115 1 346 1 380 1 146 4 372 2 44 1 45 1 364 2 197 1 314 1 61 1 
235 1 343 1 237 2 29 1 372 2 205 4 206 1 208 2 111 2 88 2 61 3 282 2 14 2 184 23 90 2 66 2 115 1 258 11 96 1 146 12 380 2 70 2 44 3 381 1 45 4 364 9 197 5 314 2 339 1 
146 1 184 1 372 1 
184 1 90 1 258 1 
184 6 14 1 258 3 237 1 146 3 380 1 70 1 262 1 205 2 322 1 44 1 45 1 364 3 111 1 197 2 282 1 314 1 61 1 
14 2 377 1 89 1 184 12 90 1 258 6 332 1 174 1 237 1 346 1 380 2 146 6 70 1 372 1 205 2 44 2 45 1 364 2 111 1 324 1 197 1 268 1 61 2 314 2 282 1 
184 6 258 3 66 1 96 1 146 3 44 1 45 1 364 2 197 1 61 1 88 1 
184 3 258 1 66 1 235 1 237 1 146 2 70 1 205 2 45 1 381 1 364 2 206 1 208 1 111 1 197 1 88 1 282 1 
184 10 66 2 258 5 96 1 237 1 146 5 70 1 205 2 44 2 349 1 45 2 364 5 111 1 197 3 268 1 282 1 88 2 61 2 
14 1 184 2 258 2 237 1 70 1 205 2 45 1 364 1 111 1 268 1 282 1 61 1 
14 1 184 4 258 2 237 1 146 2 380 1 70 1 205 2 44 1 45 1 364 2 111 1 197 1 268 1 282 1 314 1 61 1 
230 1 184 3 66 1 258 1 235 1 237 3 146 2 70 3 205 6 45 1 364 2 208 1 111 3 197 1 268 1 282 3 88 1 
230 1 235 1 346 1 56 1 237 5 29 1 372 4 205 10 322 1 206 1 208 2 111 5 88 3 138 1 282 5 61 5 184 34 14 3 90 3 66 3 258 16 115 1 96 2 146 18 380 3 70 5 44 5 381 1 45 5 364 12 220 1 197 7 268 1 314 3 
346 1 237 1 29 1 372 1 205 2 206 1 111 1 61 1 282 1 88 1 184 8 89 1 90 1 258 4 66 1 96 1 146 4 70 1 44 1 381 1 364 2 197 2 268 1 
346 1 237 2 29 1 372 2 205 4 322 1 206 1 111 2 88 1 282 2 61 2 184 11 89 1 14 1 90 1 66 1 258 6 115 1 96 1 146 5 70 2 44 1 381 1 45 1 364 3 197 2 268 1 314 1 
174 1 346 1 237 3 29 1 372 1 205 6 322 1 206 1 208 1 111 3 324 1 88 1 282 3 61 3 184 19 89 1 377 1 14 2 90 1 66 1 258 9 332 1 96 1 146 10 380 2 70 3 44 3 381 1 45 1 364 4 197 3 268 1 314 2 
174 1 346 1 237 3 29 1 372 1 205 6 322 1 206 1 208 1 111 3 324 1 88 1 282 3 61 3 184 17 89 1 377 1 14 2 90 1 66 1 258 10 332 1 96 1 146 7 380 1 70 3 44 2 381 1 45 2 364 5 197 3 268 1 314 2 
346 1 237 1 29 1 372 1 205 2 206 1 111 1 61 1 282 1 88 1 184 8 89 1 90 1 258 4 66 1 96 1 146 4 70 1 44 1 381 1 364 2 197 2 268 1 
14 2 377 1 89 1 184 12 90 1 258 6 332 1 174 1 237 1 346 1 380 2 146 6 70 1 372 1 205 2 44 2 45 1 364 2 111 1 324 1 197 1 268 1 61 2 314 2 282 1 
174 1 346 1 237 4 29 1 372 1 205 8 322 1 206 1 208 2 111 4 324 1 88 1 282 4 61 3 184 18 89 1 377 1 14 2 90 1 66 1 258 10 332 1 96 1 146 8 380 1 70 4 44 2 381 1 45 2 364 5 197 3 268 1 314 2 
230 1 174 1 346 1 237 4 372 1 205 8 208 2 111 4 324 1 282 4 61 3 184 16 89 1 377 1 14 3 90 1 258 9 332 1 146 7 380 2 70 4 44 2 45 3 364 6 197 3 268 1 314 3 
184 7 66 3 258 3 96 1 146 4 44 1 381 1 45 3 206 2 364 6 197 3 88 3 61 1 
230 1 174 1 346 1 237 4 29 1 372 1 205 8 206 1 208 2 111 4 324 1 88 1 282 4 61 3 184 18 89 1 377 1 14 2 90 1 66 1 258 10 332 1 96 1 146 8 380 1 70 4 44 2 381 1 45 1 364 4 197 3 268 1 314 2 
227 1 192 1 340 1 42 1 367 1 53 1 307 1 
160 1 361 1 367 1 8 1 16 1 333 1 
366 1 50 1 1 1 20 1 170 1 331 1 135 1 47 1 137 1 4 1 84 1 
227 1 302 2 366 1 50 2 114 1 1 1 167 1 331 1 354 1 305 2 53 2 27 1 84 2 67 1 239 1 192 2 362 1 42 2 20 1 135 1 137 1 328 1 
227 1 302 1 366 1 50 1 114 1 1 1 167 1 331 1 305 1 53 1 84 1 67 1 168 1 239 1 192 2 310 1 42 2 135 1 137 1 328 1 
227 1 302 1 366 1 50 1 114 1 1 1 331 1 305 1 53 1 84 1 41 1 67 1 168 1 239 1 192 2 310 1 42 2 135 1 137 1 328 1 
366 1 50 1 1 3 275 1 175 2 27 1 84 4 344 1 6 1 371 1 135 3 137 1 376 1 375 1 331 3 305 1 357 1 310 1 98 1 20 1 195 1 152 2 171 1 
155 1 366 1 376 1 50 1 1 3 331 3 305 1 27 1 175 2 275 1 344 1 84 4 357 1 371 1 310 1 98 1 20 1 195 1 135 3 171 1 137 1 152 2 
366 1 191 1 1 1 331 1 135 1 137 1 
49 1 366 2 50 2 1 7 331 6 305 1 116 1 106 1 54 1 17 1 40 1 84 3 191 1 217 1 20 2 135 7 207 1 338 1 137 3 281 1 153 1 
341 1 50 2 1 1 3 2 53 2 347 2 205 4 206 1 111 2 61 1 302 2 114 1 167 1 305 2 354 1 66 1 258 3 118 1 67 1 70 2 362 1 312 1 364 2 313 1 21 1 227 2 77 1 124 1 366 1 27 1 84 2 237 2 239 1 29 1 276 1 135 1 137 1 282 2 328 1 88 1 184 6 331 1 40 1 96 1 146 3 192 2 42 2 44 1 381 1 150 1 197 2 
155 1 316 1 292 1 1 1 81 2 175 3 275 1 344 1 84 2 297 1 348 2 135 1 298 1 136 1 376 2 331 1 186 1 357 1 189 1 98 1 20 1 287 2 46 1 195 1 152 3 223 1 75 1 269 2 
366 1 50 1 1 2 210 1 331 2 305 1 106 1 275 1 40 1 84 2 191 1 135 2 137 2 
366 1 50 1 1 4 331 4 342 1 40 1 84 1 371 1 20 1 170 1 135 4 47 1 137 1 
366 1 50 1 1 2 331 2 65 1 305 1 82 1 54 1 84 1 310 1 135 2 207 1 137 2 172 1 
35 1 366 1 119 1 304 1 1 1 20 1 271 1 331 1 135 1 137 1 
49 1 366 1 50 1 1 2 331 2 40 1 84 1 217 1 135 2 151 1 137 1 
49 1 366 2 50 2 1 5 331 4 342 1 40 1 17 1 84 3 310 1 20 1 170 1 135 5 47 1 137 2 281 1 
113 1 49 1 366 2 50 2 1 5 331 4 342 1 40 1 84 3 310 1 20 1 170 1 135 5 47 1 137 2 281 1 
227 1 302 2 366 1 50 2 114 1 1 1 331 1 354 1 305 2 53 2 27 1 84 2 41 1 67 1 239 1 192 2 362 1 42 2 20 1 135 1 137 1 328 1 
366 1 50 1 1 1 331 1 305 1 106 1 54 1 84 1 310 1 135 1 207 1 137 2 153 1 
192 1 214 1 69 1 7 1 79 1 42 1 178 1 53 1 203 1 
63 1 178 1 93 1 
227 1 11 1 7 1 178 1 203 1 
227 1 63 1 11 2 354 1 273 1 93 1 203 2 175 2 344 1 334 1 67 1 7 2 98 1 362 1 195 1 178 1 46 1 87 1 152 2 
165 1 30 1 107 1 4 1 
165 1 283 1 30 1 107 1 284 1 177 1 149 1 
260 1 183 1 149 1 
165 1 283 1 284 3 30 1 107 1 177 1 149 3 134 1 247 1 280 1 326 1 226 2 
165 1 283 1 30 1 107 1 284 2 37 1 177 1 149 2 2 1 
283 1 119 1 104 1 30 1 148 1 284 1 177 1 149 1 271 1 219 1 326 1 
165 1 283 1 30 1 284 1 177 1 149 1 326 1 
165 2 283 1 107 1 284 1 177 1 149 1 326 1 
289 1 165 1 283 2 30 1 284 2 177 2 149 2 34 1 326 1 163 1 
165 1 283 1 284 3 185 1 37 2 107 1 30 2 162 1 177 1 149 3 33 1 219 1 326 1 
35 1 164 1 165 1 283 1 104 1 284 2 37 1 271 1 119 2 30 1 107 1 177 1 149 2 180 1 326 1 
165 1 283 2 303 1 284 4 185 1 37 2 2 1 107 1 30 2 177 2 149 4 219 1 326 1 
165 1 283 1 30 1 107 1 284 1 177 1 149 1 326 1 
165 2 283 1 284 4 185 1 37 2 107 2 30 3 177 1 149 4 134 1 71 1 219 1 280 1 226 1 
165 1 283 1 330 1 284 2 37 1 308 1 253 1 30 1 107 1 177 1 149 2 326 1 
165 1 283 1 291 1 284 3 30 1 107 1 177 1 149 3 134 2 280 1 326 1 226 2 
315 2 317 1 30 2 176 1 
283 1 284 1 177 1 149 1 254 1 326 1 
165 1 283 1 30 1 107 1 284 2 37 1 177 1 149 2 33 1 326 1 
179 1 
165 1 283 1 30 1 107 1 284 1 177 1 149 1 326 1 
165 1 283 1 284 3 37 1 107 1 30 1 177 1 149 3 33 1 326 1 226 1 
30 1 185 1 71 1 219 1 
165 1 30 1 

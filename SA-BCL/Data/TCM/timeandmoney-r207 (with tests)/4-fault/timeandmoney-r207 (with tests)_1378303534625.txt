#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (99,112) (99,112) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (99,112) (99,112) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (99,112) (99,112) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (99,112) (99,112) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 17 247 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 17 247 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (257,258,318) (260,300,312) (260,300,312) (260,300,312) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (257,258,318) (260,300,312) (260,300,312) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (257,258,318) (260,300,312) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (257,258,318) (260,300,312) (260,300,312) (260,300,312) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 229 169 129 72 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 229 169 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 229 169 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 229 148 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 229 169 129 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 229 169 129 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (257,258,318) (257,258,318) (257,258,318) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (257,258,318) (257,258,318) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (257,258,318) (257,258,318) (257,258,318) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 364 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 1 356 1 193 1 292 1 154 1 284 1 374 1 68 1 112 1 99 1 114 1 365 1 
284 1 341 1 356 1 374 1 193 1 292 1 68 1 154 1 99 1 112 1 365 1 114 1 
284 1 341 1 356 1 374 1 193 1 292 1 68 1 154 1 99 1 112 1 365 1 114 1 
284 1 341 1 356 1 374 1 193 1 292 1 68 1 154 1 99 1 112 1 365 1 114 1 
165 1 21 1 284 1 341 1 374 2 17 1 44 1 292 1 68 2 71 1 46 1 114 1 
170 1 162 1 261 1 356 1 44 1 292 1 10 1 124 1 284 1 66 1 30 1 374 2 68 2 347 1 114 1 365 1 
292 2 44 2 208 1 10 1 165 1 124 1 284 1 374 3 68 3 71 1 266 1 114 2 365 1 
21 1 75 1 247 1 341 1 44 3 292 2 208 2 332 1 46 1 28 1 165 3 284 1 374 7 17 1 68 7 71 5 266 1 114 2 365 1 
21 1 75 1 247 1 341 1 44 3 292 2 208 2 332 1 46 1 28 1 165 3 284 1 374 7 17 1 68 7 71 5 266 1 114 2 365 1 
116 1 280 1 351 1 
290 1 56 2 280 1 
192 2 326 2 24 2 12 2 35 2 81 2 220 1 198 1 
267 1 331 2 192 2 152 1 33 1 58 1 62 1 358 1 35 2 194 1 272 2 4 1 198 1 227 2 38 1 311 2 160 1 132 1 40 1 319 1 136 1 137 1 24 3 25 1 302 1 81 3 142 1 322 1 82 1 188 1 326 2 84 1 146 2 12 2 330 1 220 1 306 1 
192 1 326 1 206 1 185 1 24 1 12 1 51 1 35 1 81 1 220 1 
116 1 233 1 182 1 280 1 248 1 206 1 24 1 138 1 173 1 370 1 81 1 175 1 12 1 317 1 
116 1 233 2 182 1 192 1 280 1 206 1 138 2 24 1 173 1 35 1 81 1 175 1 326 1 12 1 317 1 
233 1 138 1 253 1 197 1 164 1 
116 1 233 2 280 1 294 1 217 1 138 2 253 1 197 1 
233 1 138 1 197 1 
233 1 192 1 206 1 185 1 138 1 249 1 24 1 35 1 253 1 81 1 326 1 12 1 51 1 220 1 
280 1 
116 1 233 2 0 1 280 1 217 1 138 2 253 1 197 1 
116 1 233 5 42 1 280 1 298 2 309 1 138 5 237 1 45 1 253 2 197 2 107 1 96 1 168 1 6 1 217 1 130 2 286 2 133 1 
351 1 198 1 
224 1 192 1 103 1 24 2 35 1 81 2 198 2 326 1 12 2 
262 1 131 1 69 1 
331 1 319 1 33 1 24 1 62 1 194 1 302 1 81 1 4 1 198 1 227 1 311 1 132 1 316 1 330 1 306 1 
319 1 331 1 192 1 33 1 24 2 62 1 302 1 194 1 81 2 238 1 4 1 273 1 227 1 311 1 326 1 12 1 131 1 132 1 330 1 306 1 
192 3 326 3 24 3 12 3 35 1 81 3 238 1 198 1 
192 1 326 1 206 1 24 1 12 1 51 1 81 1 
224 1 192 1 103 1 326 1 206 1 24 1 12 1 35 1 81 1 
267 1 224 1 331 1 192 3 152 1 33 1 62 1 173 1 35 2 194 1 272 1 4 1 273 1 198 1 227 1 38 1 175 1 311 1 160 1 132 1 40 1 317 1 233 1 182 1 319 1 204 1 136 1 101 1 137 1 206 1 24 4 138 1 25 1 302 1 322 1 81 4 238 1 188 1 326 3 146 2 12 3 330 1 220 1 306 1 
192 1 326 1 24 2 12 2 370 1 94 1 81 2 238 1 198 1 
233 1 224 1 182 1 192 3 270 1 101 1 280 1 206 1 138 1 24 3 173 1 35 1 81 3 238 2 273 1 175 1 326 3 12 3 317 1 
224 1 192 2 262 1 24 2 35 1 81 2 238 1 326 2 12 2 131 1 
331 1 319 1 33 1 24 1 62 1 194 1 302 1 81 1 4 1 198 1 227 1 311 1 330 1 132 1 306 1 
366 1 331 1 183 1 33 1 24 1 62 1 194 1 302 1 81 1 4 1 198 1 227 1 311 1 330 1 132 1 
267 1 272 4 199 1 38 1 158 1 201 1 363 1 160 1 131 2 69 2 180 1 203 1 40 1 8 1 184 1 136 1 262 2 25 1 26 1 320 1 301 1 188 2 84 2 146 2 
182 1 192 1 326 1 206 1 346 1 24 1 12 1 81 1 
224 1 192 4 24 5 281 1 370 1 35 1 94 1 81 5 238 2 273 1 198 1 326 4 12 5 70 1 
192 2 326 2 346 1 206 1 24 2 12 2 51 1 81 2 
140 1 150 1 
140 1 150 1 
283 1 14 1 
283 1 14 1 
283 1 14 1 
29 1 140 1 150 1 
29 1 140 1 150 1 
29 1 140 1 150 1 
140 1 93 1 150 1 
57 1 140 1 150 1 
283 1 14 1 18 1 140 2 232 1 150 2 
140 1 93 1 150 1 
140 1 93 1 150 1 
288 2 233 2 76 1 280 1 368 1 23 2 282 1 138 2 139 1 186 2 140 2 16 1 362 2 242 1 285 3 85 2 109 1 232 1 150 2 
289 1 233 1 288 1 192 2 57 1 24 2 138 1 186 1 140 1 321 1 174 1 81 2 198 1 372 1 156 1 360 1 326 2 242 1 362 1 285 1 315 1 12 2 85 1 150 1 
341 1 
162 1 66 1 261 1 
66 1 261 1 145 1 341 2 
117 1 66 1 261 1 341 1 127 1 305 1 343 1 
117 2 66 1 261 1 341 1 127 1 343 1 
289 1 290 1 116 1 56 3 309 3 271 1 36 1 253 4 196 1 197 1 293 1 275 1 96 1 335 2 360 1 158 1 363 1 130 1 315 1 279 1 180 1 8 1 233 5 42 2 280 2 298 1 138 5 327 2 217 1 329 1 286 1 53 2 
290 3 116 1 56 9 34 1 309 8 271 2 253 7 196 2 197 6 293 1 275 3 96 1 65 1 335 6 158 3 128 1 363 3 315 4 130 2 180 3 134 1 8 3 233 9 42 6 280 5 298 2 138 9 237 1 47 1 164 5 327 6 217 1 286 2 221 5 115 1 
116 1 290 2 56 4 309 3 271 1 36 1 253 2 196 1 275 1 335 2 158 1 130 1 315 1 363 1 180 1 8 1 233 3 42 2 280 3 298 1 138 3 237 1 327 2 329 1 286 1 53 1 
116 1 290 3 56 7 34 1 309 5 271 1 36 1 196 1 253 3 275 2 65 1 335 4 158 2 128 1 130 1 315 2 363 2 180 2 8 2 233 4 42 4 280 4 298 1 138 4 237 1 327 4 329 1 286 1 53 2 
314 1 132 1 351 1 
121 1 132 1 
310 1 
33 1 132 1 
5 1 310 1 325 1 33 1 314 2 132 3 4 1 
33 1 132 1 4 1 
102 1 132 1 
320 2 272 7 252 1 274 1 334 1 123 2 324 1 264 1 276 1 188 3 158 1 84 4 180 1 287 1 149 1 203 3 74 1 
320 2 272 7 252 1 274 1 334 1 123 2 324 1 264 1 276 1 188 3 158 1 84 4 180 1 287 1 149 1 203 3 74 1 
61 1 320 2 272 7 252 1 274 1 334 1 123 2 264 1 324 1 276 1 188 3 158 1 84 4 180 1 287 1 149 1 203 3 74 1 
226 4 252 1 272 31 274 2 334 1 38 1 123 3 275 3 228 1 230 1 157 1 276 2 158 4 313 1 363 3 160 1 180 4 203 10 74 5 40 1 8 3 338 1 136 1 78 1 320 5 163 3 264 1 324 1 188 15 146 2 84 16 287 2 149 2 111 1 
32 1 272 9 274 1 38 2 123 2 334 1 276 1 158 1 160 2 180 1 203 4 74 1 40 2 136 2 320 3 324 1 264 1 188 4 146 4 84 5 111 1 149 1 287 1 350 1 
318 1 9 1 331 1 171 1 260 1 261 1 118 1 341 1 292 1 250 1 300 1 63 1 302 1 194 1 371 1 227 1 284 1 66 1 311 1 145 1 312 1 374 1 68 1 365 1 114 1 
171 1 331 1 118 1 292 1 250 1 63 1 194 1 227 1 311 1 66 1 312 1 19 1 68 2 337 1 71 1 365 1 318 1 9 1 261 1 341 1 300 1 209 1 302 1 145 1 374 2 114 1 
318 1 9 1 331 1 171 1 261 1 341 1 250 1 63 1 302 1 194 1 209 1 227 1 66 1 311 1 145 1 312 1 374 1 68 1 19 1 71 1 365 1 
151 1 171 2 331 1 33 1 292 1 63 2 194 1 37 1 227 1 311 1 68 1 132 1 337 1 365 2 9 2 259 1 302 1 48 1 374 1 110 1 330 1 190 1 114 1 
318 1 9 1 331 1 171 1 260 1 261 1 118 1 341 1 292 1 250 1 300 1 63 1 302 1 194 1 227 1 284 1 66 1 311 1 145 1 312 1 374 1 68 1 19 1 365 1 114 1 
125 1 
88 2 151 1 55 1 331 2 33 1 248 1 15 1 309 2 173 1 251 1 194 1 196 1 197 2 227 2 175 1 96 1 311 2 359 1 231 1 130 1 132 1 179 1 278 1 317 1 233 3 182 1 42 2 206 1 298 1 299 1 24 1 138 3 370 1 302 1 342 1 81 1 217 1 12 1 189 1 110 1 330 2 286 1 349 1 
88 2 54 1 55 1 0 1 248 1 15 1 173 1 197 2 175 1 231 1 317 1 233 3 182 1 206 1 24 1 138 3 370 1 81 1 217 1 12 1 189 1 349 1 
116 1 88 3 55 1 0 1 248 1 15 1 173 1 197 1 175 1 231 1 317 1 233 3 182 1 280 1 206 1 24 1 138 3 370 1 81 1 217 1 12 1 189 1 349 1 219 1 
116 1 88 3 54 1 55 1 0 1 248 1 15 1 173 1 197 2 175 1 231 1 317 1 233 3 182 1 339 1 280 1 206 1 24 1 138 3 370 1 81 1 217 1 12 1 189 1 349 1 219 1 
88 2 54 2 55 1 0 1 248 1 15 1 309 1 173 1 251 1 197 3 96 1 175 1 229 1 98 1 231 1 129 1 130 1 278 1 72 1 317 1 233 3 182 1 339 2 42 1 298 1 206 1 138 3 24 1 370 1 81 1 169 1 217 1 12 1 189 1 286 1 349 1 
88 2 55 1 248 1 15 1 309 1 173 1 251 1 96 1 175 1 231 1 130 1 278 1 317 1 233 2 182 1 42 1 298 1 206 1 138 2 24 1 370 1 81 1 12 1 189 1 286 1 349 1 
88 2 55 1 248 1 15 1 309 1 173 1 251 1 175 1 96 1 229 1 98 1 231 1 130 1 278 1 317 1 233 2 182 1 42 1 298 1 206 1 24 1 138 2 370 1 81 1 169 1 12 1 189 1 286 1 349 1 
88 2 55 1 248 1 15 1 309 1 173 1 251 1 175 1 96 1 229 1 98 1 231 1 130 1 278 1 317 1 233 2 182 1 42 1 298 1 206 1 24 1 138 2 370 1 81 1 169 1 12 1 189 1 286 1 349 1 
88 2 55 1 248 1 15 1 153 1 309 1 173 1 175 1 96 1 229 1 231 1 130 1 278 1 317 1 233 2 182 1 42 1 298 1 206 1 24 1 138 2 370 1 81 1 49 1 12 1 189 1 148 1 286 1 349 1 
88 3 54 1 55 1 248 1 15 1 309 1 173 1 251 1 197 1 96 1 175 1 229 1 98 1 231 1 129 1 130 1 278 1 317 1 233 2 182 1 339 1 42 1 298 1 206 1 24 1 138 2 370 1 81 1 169 1 12 1 189 1 286 1 349 1 219 1 
88 3 54 1 55 1 248 1 15 1 309 1 173 1 251 1 197 1 96 1 175 1 229 1 98 1 231 1 129 1 130 1 278 1 317 1 233 2 182 1 339 1 42 1 298 1 206 1 24 1 138 2 370 1 81 1 169 1 12 1 189 1 286 1 349 1 219 1 
88 2 55 1 248 1 15 1 309 1 173 1 96 1 175 1 231 1 130 1 278 1 317 1 233 2 182 1 42 1 298 1 206 1 138 2 24 1 370 1 81 1 49 1 12 1 189 1 286 1 349 1 
267 1 272 6 198 2 199 1 38 1 334 1 123 1 158 1 131 1 160 1 69 1 180 1 203 2 40 1 136 1 262 1 25 1 320 2 264 1 324 1 188 3 146 2 84 3 149 1 287 1 351 1 
223 1 267 2 152 1 355 1 358 1 226 3 272 14 198 1 176 1 38 2 275 2 230 1 157 1 158 2 363 2 160 2 131 11 69 11 180 1 203 2 74 1 40 2 8 1 136 2 262 4 25 1 320 1 163 3 211 1 188 6 146 4 84 8 265 1 
267 1 331 1 192 1 152 1 33 1 91 1 62 1 358 1 194 1 272 2 4 1 273 1 198 1 227 1 38 1 311 1 160 1 132 1 316 1 40 1 319 1 136 1 262 1 236 1 24 2 25 1 302 1 81 2 238 1 326 1 188 1 146 2 84 1 12 1 330 1 218 1 265 1 306 1 
331 3 192 1 152 1 33 2 1 1 194 2 4 2 198 2 334 1 38 3 200 2 158 3 160 3 203 8 40 3 8 2 262 7 104 1 302 2 210 1 264 1 345 2 12 1 265 1 306 2 267 3 62 2 358 1 272 20 273 1 227 3 123 1 275 2 311 3 126 2 363 2 19 1 131 7 132 2 69 7 180 3 74 4 319 2 136 3 24 3 25 3 320 4 81 3 322 2 238 1 241 2 324 1 188 10 326 1 146 6 84 10 330 1 287 1 149 1 
267 2 151 1 331 8 192 1 353 1 152 1 58 2 33 2 120 1 225 1 358 1 194 2 272 2 199 1 227 7 38 2 311 8 19 1 160 2 132 3 40 2 100 1 136 2 24 1 25 2 302 2 141 1 81 1 238 1 371 1 106 1 214 1 326 1 188 1 146 4 84 1 12 1 110 1 330 2 
224 1 267 1 192 1 35 1 272 3 38 1 275 1 158 1 363 1 131 1 160 1 69 1 180 1 203 1 40 1 8 1 136 1 262 1 24 1 25 1 320 1 81 1 108 1 326 1 188 2 146 2 84 1 12 1 265 1 
267 1 136 1 262 1 25 1 272 2 199 1 38 1 201 1 158 1 146 2 84 2 363 1 131 1 160 1 69 1 203 1 74 1 40 1 
8 1 267 1 136 1 262 1 25 1 320 1 26 1 272 2 199 1 38 1 188 2 146 2 131 1 160 1 69 1 180 1 203 1 40 1 
267 1 272 4 199 1 275 1 38 1 158 1 363 1 160 1 131 2 69 2 180 1 203 2 74 1 40 1 8 1 136 1 262 2 25 1 320 1 188 2 84 2 146 2 
267 1 353 1 136 1 262 1 25 1 272 2 38 1 201 1 158 1 146 2 84 2 363 1 131 1 160 1 69 1 203 1 74 1 40 1 
8 1 267 1 353 1 136 1 262 1 25 1 320 1 26 1 272 2 38 1 188 2 146 2 131 1 160 1 69 1 180 1 203 1 40 1 
267 1 353 1 272 4 275 1 38 1 158 1 363 1 160 1 131 2 69 2 180 1 203 2 74 1 40 1 8 1 136 1 262 2 25 1 320 1 188 2 84 2 146 2 
267 1 272 4 275 1 38 1 158 1 363 1 160 1 131 2 69 2 180 1 203 2 74 1 40 1 8 1 136 1 262 2 25 1 320 1 188 2 84 2 146 2 
267 1 331 1 152 1 33 1 62 1 358 1 194 1 272 2 4 1 198 1 227 1 38 1 311 1 160 1 132 1 40 1 319 1 136 1 24 1 25 1 302 1 322 1 81 1 188 1 84 1 146 2 330 1 306 1 
267 1 331 1 152 1 33 1 62 1 358 1 194 1 272 2 4 1 198 1 227 1 38 1 311 1 160 1 132 1 40 1 366 1 183 1 136 1 24 1 25 1 302 1 81 1 188 1 84 1 146 2 246 1 330 1 
267 1 272 4 275 1 38 1 158 1 363 1 160 1 131 2 69 2 180 1 203 2 74 1 40 1 8 1 136 1 262 2 25 1 320 1 188 2 84 2 146 2 265 1 
267 1 331 1 33 1 62 1 194 1 272 4 4 1 227 1 38 1 275 1 200 1 311 1 158 1 363 1 131 2 160 1 69 2 132 1 180 1 203 2 74 1 40 1 8 1 319 1 136 1 262 2 24 1 25 1 320 1 302 1 322 1 81 1 371 1 188 2 84 2 146 2 306 1 
224 1 267 1 192 1 35 1 272 3 38 1 275 1 177 1 158 1 363 1 160 1 131 1 69 1 180 1 203 1 74 1 40 1 8 1 136 1 262 1 24 1 25 1 81 1 188 1 326 1 146 2 84 2 12 1 265 1 
32 1 291 1 122 1 226 2 3 1 272 19 38 2 275 3 39 1 230 1 157 1 158 3 363 3 159 2 160 2 180 3 203 6 74 3 40 2 8 3 136 2 320 3 163 1 144 2 240 1 212 1 188 10 146 4 84 9 31 1 
32 1 291 1 122 2 226 2 272 26 38 3 275 3 39 1 157 2 158 3 363 3 159 4 160 3 180 2 203 4 135 1 74 2 40 3 8 2 136 3 235 1 320 2 369 1 163 2 144 1 240 2 187 1 188 12 146 6 84 14 147 1 245 1 31 1 111 2 
32 1 291 1 3 1 38 3 334 1 39 1 157 3 158 5 160 3 159 4 203 8 40 3 8 4 163 3 264 1 111 1 122 2 226 4 272 41 275 4 123 1 230 1 363 4 180 5 135 1 74 4 136 3 235 1 320 4 369 1 144 1 240 1 187 1 324 1 188 21 84 20 146 6 147 1 31 1 245 1 149 1 287 1 87 1 
32 1 291 1 122 2 226 4 3 1 272 38 123 1 334 1 38 4 275 4 39 1 230 1 157 3 158 5 363 4 159 4 160 4 180 4 135 1 203 7 74 3 40 4 8 3 136 4 235 1 369 1 320 4 163 3 144 1 240 1 187 1 264 1 324 1 188 18 146 8 84 20 147 1 245 1 31 1 287 1 149 1 111 2 87 1 
32 1 355 2 291 1 122 1 226 4 272 52 123 1 334 1 38 2 275 7 39 1 230 2 157 2 158 8 363 7 159 4 160 2 180 8 135 1 203 14 74 7 40 2 8 7 136 2 235 1 369 1 320 7 163 4 144 1 240 1 187 1 264 1 324 1 188 25 146 4 84 27 147 1 245 1 31 1 287 1 149 1 111 1 
288 1 282 1 362 1 140 1 186 1 85 1 16 1 232 1 20 1 150 1 
57 1 321 1 
222 1 288 1 269 1 362 1 140 1 186 1 85 1 27 1 150 1 
233 1 288 1 280 1 368 1 23 1 282 1 138 1 139 1 186 1 140 1 16 1 242 1 362 1 285 2 85 1 109 1 232 1 150 1 
233 1 288 1 280 1 368 1 23 1 282 1 138 1 139 1 186 1 140 1 16 1 242 1 362 1 285 2 85 1 109 1 232 1 150 1 
233 1 288 1 280 1 368 1 23 1 282 1 138 1 139 1 186 1 140 1 16 1 242 1 362 1 285 2 85 1 109 1 232 1 150 1 
29 1 18 1 95 1 
29 1 18 1 95 1 
307 1 93 1 
307 1 18 1 93 1 
156 1 174 1 
288 1 289 1 192 2 57 1 174 1 253 1 198 1 156 1 360 1 362 1 315 1 233 1 23 1 24 2 138 1 140 1 186 1 321 1 81 2 372 1 326 2 285 1 109 1 85 1 12 2 375 1 150 1 
29 1 95 1 
307 1 18 1 93 1 
267 1 331 2 152 1 33 1 58 2 225 1 358 1 194 1 272 2 155 1 227 2 38 1 311 2 361 1 160 1 132 1 161 1 40 1 100 1 136 1 24 2 25 1 302 1 81 2 167 1 188 1 146 2 84 1 12 2 265 1 86 1 
318 1 9 1 331 2 261 1 118 1 341 1 250 1 302 1 194 1 371 1 227 2 66 1 311 2 257 1 145 1 19 1 258 1 73 1 
318 1 9 1 331 1 261 1 118 1 341 1 250 1 194 1 302 1 2 1 227 1 66 1 311 1 257 1 145 1 19 1 
9 1 151 1 331 1 33 1 207 1 302 1 194 1 227 1 48 1 311 1 110 1 132 1 330 1 73 1 
318 1 9 1 331 1 261 1 118 1 341 1 250 1 302 1 194 1 227 1 66 1 311 1 257 1 145 1 19 1 258 1 73 1 
239 1 
116 1 107 1 42 1 168 1 280 1 309 1 351 1 
290 1 116 1 56 1 309 1 251 1 195 1 197 1 96 1 130 1 233 1 42 1 280 2 298 1 138 1 105 1 217 1 286 1 
331 1 33 1 298 1 309 1 121 1 302 2 194 1 196 1 4 1 227 1 96 1 325 1 311 1 130 1 296 1 132 2 286 1 330 1 364 1 
290 3 116 2 56 6 119 1 309 8 226 1 196 1 197 1 96 2 275 2 335 5 157 1 158 2 130 2 363 2 179 1 180 2 135 1 233 1 8 2 42 5 280 5 77 2 298 2 138 1 369 1 80 1 163 1 187 1 50 1 327 5 217 1 147 1 245 1 286 2 
192 1 309 2 249 1 35 1 96 1 334 1 98 1 158 2 130 1 180 1 233 1 42 2 206 1 77 2 298 1 185 1 24 1 138 1 263 1 81 1 326 1 50 1 12 1 51 1 286 1 287 1 149 1 220 1 
116 1 42 1 280 1 298 1 309 1 96 1 107 1 168 1 130 1 286 1 
290 5 8 2 42 5 56 10 280 5 77 2 309 5 241 1 275 2 335 5 158 2 50 1 327 5 363 2 180 2 
116 1 233 1 280 1 138 1 217 1 197 1 
151 1 331 4 191 1 33 1 309 2 194 1 196 2 197 4 227 4 96 1 311 4 359 1 295 1 130 2 132 1 179 2 233 3 42 2 299 1 298 2 138 3 237 1 302 1 344 1 243 2 217 2 110 1 286 2 330 2 
267 1 331 1 192 2 152 1 33 1 62 1 35 2 194 1 272 1 4 1 198 1 227 1 38 1 311 1 160 1 132 1 40 1 319 1 136 1 137 1 24 3 25 1 302 1 81 3 322 1 188 1 326 2 146 2 12 2 330 1 220 1 306 1 
290 2 116 2 56 4 42 2 280 4 298 1 309 1 196 1 123 1 96 1 335 2 327 2 130 1 286 1 179 1 
288 1 362 1 348 1 
288 1 362 1 348 1 
288 1 362 1 348 1 
288 1 336 1 362 1 
288 1 156 1 362 1 16 1 143 1 
288 1 336 1 362 1 
288 1 336 1 362 1 
288 1 362 1 
140 1 150 1 
136 2 320 2 272 8 123 1 334 1 38 2 324 1 264 1 158 1 188 4 84 4 146 4 160 2 180 1 111 1 149 1 287 1 203 3 74 1 40 2 
320 2 272 6 123 1 334 1 324 1 264 1 188 3 158 1 84 3 149 1 287 1 180 1 203 2 351 1 
8 1 136 1 43 1 320 1 272 4 38 1 275 1 188 2 158 1 146 2 84 2 363 1 160 1 180 1 203 2 74 1 40 1 
8 1 320 1 226 2 272 7 163 1 275 1 230 1 157 1 188 4 158 1 84 3 363 1 180 1 203 2 74 1 
355 1 226 2 272 23 123 1 334 1 275 2 176 1 38 2 230 1 158 3 363 2 160 2 180 3 203 9 74 4 40 2 8 2 136 2 320 5 79 1 163 2 264 1 324 1 188 12 84 11 146 4 287 2 149 2 111 2 
188 1 226 1 272 1 
84 1 272 1 163 1 
8 1 136 1 43 1 320 2 272 6 241 1 38 1 275 1 188 3 158 1 146 2 84 3 363 1 160 1 180 1 203 3 74 1 40 1 
32 1 226 1 272 12 38 1 275 2 157 1 158 2 363 2 160 1 180 2 135 1 203 2 74 1 40 1 8 2 136 1 369 1 320 1 163 1 187 1 188 6 146 2 84 6 147 1 245 1 
320 1 272 6 334 1 158 1 188 3 84 3 180 1 149 1 287 1 203 2 74 1 
136 1 320 1 79 1 272 3 38 1 264 1 324 1 188 2 84 1 146 2 160 1 287 1 149 1 111 1 203 2 74 1 40 1 
32 1 136 1 320 3 263 1 272 10 38 1 334 1 188 5 158 2 146 2 84 5 160 1 149 2 287 2 180 2 203 5 74 2 40 1 
32 1 136 1 272 2 38 1 158 1 146 2 84 2 363 1 160 1 203 1 74 1 40 1 
8 1 32 1 136 1 320 1 272 4 38 1 275 1 188 2 158 1 146 2 84 2 363 1 160 1 180 1 203 2 74 1 40 1 
32 1 136 3 320 1 79 1 3 1 272 3 38 3 188 2 146 6 84 1 160 3 111 1 149 1 287 1 203 2 74 1 40 3 
32 1 226 4 3 1 272 34 123 1 334 2 228 1 38 5 275 3 230 1 157 1 158 5 313 1 363 3 160 5 180 5 203 12 74 5 40 5 8 3 136 5 43 1 78 1 320 7 79 1 163 3 264 1 324 1 188 18 146 10 84 16 287 3 149 3 111 2 
32 1 226 1 272 8 123 1 38 1 334 1 157 1 158 1 160 1 180 1 203 2 40 1 136 1 320 2 163 1 324 1 264 1 188 4 146 2 84 4 147 1 149 1 287 1 
32 1 226 2 272 11 123 1 334 1 38 2 275 1 230 1 157 1 158 2 363 1 160 2 180 1 203 3 74 1 40 2 136 2 43 1 320 2 163 1 264 1 324 1 188 5 146 4 84 6 147 1 287 1 149 1 
32 1 226 1 272 19 123 1 334 1 38 3 275 2 157 1 158 3 363 2 160 3 180 3 135 1 203 4 74 1 40 3 8 2 136 3 43 1 369 1 320 3 163 1 187 1 264 1 324 1 188 10 146 6 84 9 147 1 245 1 287 1 149 1 111 1 
32 1 226 1 272 17 123 1 334 1 38 3 275 2 157 1 158 3 363 2 160 3 180 2 135 1 203 5 74 2 40 3 8 1 136 3 43 1 369 1 320 3 163 1 187 1 264 1 324 1 188 7 146 6 84 10 147 1 245 1 287 1 149 1 111 1 
32 1 226 1 272 8 123 1 38 1 334 1 157 1 158 1 160 1 180 1 203 2 40 1 136 1 320 2 163 1 324 1 264 1 188 4 146 2 84 4 147 1 149 1 287 1 
32 1 226 1 272 12 38 1 275 2 157 1 158 2 363 2 160 1 180 2 135 1 203 2 74 1 40 1 8 2 136 1 369 1 320 1 163 1 187 1 188 6 146 2 84 6 147 1 245 1 
32 1 226 1 272 18 123 1 334 1 38 4 275 2 157 1 158 3 363 2 160 4 180 2 135 1 203 5 74 2 40 4 8 1 136 4 43 1 369 1 320 3 163 1 187 1 264 1 324 1 188 8 146 8 84 10 147 1 245 1 287 1 149 1 111 2 
32 1 226 1 272 16 3 1 38 4 275 3 157 1 158 3 363 3 160 4 180 2 135 1 203 6 74 3 40 4 8 2 136 4 369 1 320 3 163 1 187 1 188 7 146 8 84 9 147 1 245 1 111 2 
320 3 272 7 334 1 324 1 264 2 188 4 158 1 84 3 180 1 149 3 287 3 203 6 74 3 
32 1 226 1 272 18 3 1 123 1 334 1 38 4 275 2 157 1 158 3 363 2 160 4 180 2 135 1 203 4 74 1 40 4 8 1 136 4 369 1 320 3 163 1 187 1 264 1 324 1 188 8 146 8 84 10 147 1 245 1 287 1 149 1 111 2 
268 1 24 1 12 1 370 1 81 1 94 1 198 1 
268 1 24 1 370 1 94 1 81 1 198 1 97 1 215 1 12 1 178 1 13 1 297 1 
227 1 151 1 331 1 311 1 33 1 110 1 132 1 330 1 302 1 194 1 351 1 
331 1 319 1 192 1 33 1 24 2 62 1 302 1 194 1 81 2 238 1 4 1 198 1 227 1 311 1 326 1 12 1 132 1 330 1 
41 1 182 1 331 1 319 1 192 1 102 1 33 2 206 1 24 2 62 1 302 1 194 1 81 2 238 1 4 2 198 1 227 1 175 1 311 1 326 2 243 1 12 2 132 3 
331 2 192 1 33 2 357 1 62 1 194 1 4 2 198 1 227 2 175 1 311 2 132 3 182 1 41 1 183 1 102 1 206 1 24 2 302 1 81 2 238 1 326 2 243 1 12 2 
116 1 331 3 33 1 357 1 59 1 121 1 173 1 194 1 197 1 4 1 227 3 311 3 314 1 132 4 233 2 41 1 205 1 102 1 280 1 138 2 302 1 243 1 330 1 
116 1 233 2 41 1 331 3 280 1 102 1 33 1 357 1 138 2 121 1 173 1 302 1 194 1 4 1 197 1 227 3 166 1 311 3 243 1 314 1 330 1 132 4 
227 1 331 1 311 1 120 1 302 1 194 1 
331 7 340 1 58 1 33 2 120 1 225 1 194 2 302 3 141 1 371 1 4 1 106 1 227 6 325 1 214 1 311 7 328 1 19 1 244 1 330 2 132 3 
267 2 331 1 192 1 33 1 62 1 194 1 272 6 4 1 198 2 227 1 123 1 334 1 38 2 311 1 200 1 158 1 126 1 131 1 160 2 69 1 132 1 180 1 203 2 40 2 319 1 136 2 262 1 24 2 25 2 320 2 302 1 81 2 322 1 238 1 371 1 264 1 324 1 167 1 188 3 326 1 84 3 146 4 12 1 287 1 149 1 265 1 306 1 
116 1 331 1 172 1 309 1 121 1 173 1 253 1 197 2 227 1 96 2 311 1 314 1 130 2 132 2 181 1 233 3 42 1 280 1 298 2 138 3 107 1 344 1 166 1 168 1 373 1 217 1 330 1 286 2 
331 2 33 1 120 1 194 1 302 2 371 1 4 1 227 2 325 1 311 2 314 1 296 1 132 2 
151 1 331 4 234 1 33 1 357 1 302 1 194 1 371 1 227 4 311 4 110 1 330 1 132 1 
331 2 340 1 90 1 33 1 104 1 194 1 302 2 4 1 227 2 311 2 83 1 243 1 328 1 132 1 
227 1 162 1 331 1 66 1 261 1 311 1 250 1 330 1 302 1 194 1 
227 2 331 2 311 2 33 1 225 1 19 1 132 1 302 1 194 1 155 1 371 1 
151 1 331 5 234 1 33 2 225 1 194 2 302 2 371 1 227 4 106 1 214 1 311 5 243 1 110 1 330 1 132 3 
151 1 331 5 234 1 33 2 225 1 194 2 302 2 371 1 227 4 106 1 255 1 311 5 243 1 110 1 330 1 132 3 
331 1 183 1 192 1 33 1 24 2 62 1 302 1 194 1 81 2 238 1 4 1 198 1 227 1 311 1 326 1 12 1 132 1 330 1 
331 1 340 1 33 1 194 1 302 2 4 1 227 1 325 1 311 1 243 1 328 1 244 1 132 1 
202 1 67 1 303 1 198 1 352 1 
116 1 233 2 182 1 367 1 101 1 280 1 206 1 138 2 173 1 92 1 253 1 303 2 198 1 175 1 202 2 67 1 52 1 352 2 317 1 
202 1 67 1 24 1 361 1 12 1 81 1 161 1 86 1 352 1 
67 1 92 1 52 1 
124 1 44 1 10 1 351 1 
124 1 374 1 44 1 292 1 68 1 10 1 114 1 
68 1 63 1 365 1 
308 1 44 1 292 1 10 1 254 1 256 1 124 1 284 1 30 2 374 3 68 3 114 1 
124 1 374 2 44 1 292 1 68 2 71 1 46 1 10 1 114 1 
165 1 21 1 284 1 341 1 374 1 44 1 292 1 68 1 114 1 
284 1 374 1 44 1 292 1 68 1 10 1 114 1 
124 1 284 1 374 1 292 1 68 1 10 2 114 1 
89 1 44 1 292 2 10 1 213 1 284 1 374 2 68 2 277 1 114 2 
75 1 292 1 44 2 208 1 10 1 28 1 165 1 124 1 284 1 374 3 68 3 71 2 114 1 
22 1 284 1 66 1 261 1 145 1 341 1 374 1 292 1 68 1 114 1 
292 2 44 2 208 1 46 1 10 1 64 1 165 1 124 1 284 1 374 4 68 4 71 2 114 2 
124 1 284 1 374 1 44 1 292 1 68 1 10 1 114 1 
308 1 292 1 44 3 208 1 10 2 11 1 165 1 256 1 124 2 30 1 374 4 68 4 71 2 114 1 
44 1 292 1 332 1 10 1 323 1 124 1 284 1 216 1 374 2 68 2 71 1 114 1 
308 2 44 1 292 1 333 1 10 1 256 1 124 1 284 1 30 2 374 3 68 3 114 1 
304 1 354 2 44 2 113 1 
284 1 60 1 374 1 292 1 68 1 114 1 
124 1 75 1 284 1 374 2 44 1 292 1 68 2 71 1 10 1 114 1 
7 1 
124 1 284 1 374 1 44 1 292 1 68 1 10 1 114 1 
75 1 124 1 284 1 30 1 374 3 44 1 292 1 68 3 71 1 10 1 114 1 
165 1 44 1 208 1 11 1 
44 1 10 1 

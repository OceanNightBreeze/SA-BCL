#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 2 236 1 209 1 290 6 91 1 211 1 295 2 191 1 26 2 317 1 57 5 270 1 98 1 30 4 64 1 101 9 201 1 203 2 353 1 182 1 282 3 41 1 72 2 109 1 113 2 74 9 135 2 260 1 
188 2 236 1 209 1 290 6 91 1 211 1 295 2 191 1 26 2 317 1 57 5 270 1 98 1 30 4 64 1 101 9 201 1 203 2 353 1 182 1 282 3 41 1 72 2 109 1 113 2 74 9 135 2 260 1 
188 2 236 1 209 1 290 7 91 1 211 1 295 2 191 1 26 2 317 1 57 6 270 1 98 1 30 5 64 1 101 10 201 1 203 2 353 1 182 1 282 4 41 1 72 2 109 1 113 2 74 10 135 2 260 1 
188 1 236 1 290 4 91 1 211 1 295 2 191 1 26 2 317 1 57 4 270 1 98 1 30 3 64 1 101 7 201 1 203 2 353 1 182 1 282 2 41 1 72 2 109 1 113 2 74 7 135 2 260 1 
188 2 64 1 236 1 209 1 101 4 290 3 203 1 353 1 282 1 26 1 317 1 72 1 57 3 113 1 270 1 30 2 135 1 74 4 
236 1 90 1 101 2 203 1 211 1 295 1 353 1 72 1 57 1 113 1 270 1 98 1 135 1 74 2 356 1 231 1 
236 1 101 3 290 1 295 1 353 1 282 1 72 2 109 1 57 2 270 1 30 1 135 2 74 3 
64 1 188 2 236 1 209 1 201 1 101 9 290 7 203 1 295 1 105 1 353 1 182 1 26 1 282 3 317 1 72 2 109 1 57 5 9 1 113 1 270 1 30 4 135 2 74 9 
64 1 188 2 236 1 209 1 201 1 101 9 290 7 203 1 295 1 105 1 353 1 182 1 26 1 282 3 317 1 72 2 109 1 57 5 9 1 113 1 270 1 30 4 135 2 74 9 
157 1 292 1 276 1 
175 2 157 1 266 1 
66 2 256 1 102 1 20 2 366 2 84 2 62 2 35 2 
137 2 192 2 214 2 118 1 366 2 97 1 321 1 323 1 62 2 123 1 171 1 169 1 35 3 124 1 174 1 82 1 66 3 369 2 145 1 102 1 84 2 14 1 373 1 279 1 329 1 222 2 150 1 184 1 331 1 111 1 256 1 154 1 334 1 20 2 226 1 312 1 207 1 
66 1 256 1 20 1 366 1 178 1 84 1 294 1 62 1 357 1 35 1 
66 1 178 1 292 1 371 1 190 1 253 1 53 1 364 1 157 1 88 1 62 1 143 1 35 1 34 1 
66 1 84 1 178 1 292 1 371 1 190 1 253 2 364 2 366 1 20 1 157 1 62 1 143 1 35 1 34 1 
330 1 95 1 364 1 351 1 253 1 
330 1 95 1 364 2 224 1 157 1 292 1 253 2 81 1 
330 1 364 1 253 1 
66 1 178 1 84 1 294 1 253 1 95 1 364 1 56 1 256 1 366 1 20 1 62 1 357 1 35 1 
157 1 
330 1 95 1 364 2 224 1 291 1 157 1 292 1 253 2 
288 2 47 2 103 1 4 1 292 1 161 1 253 5 69 1 17 1 330 2 95 2 364 5 342 2 333 1 224 1 141 1 157 1 368 1 114 1 
66 2 137 1 369 1 145 1 84 1 373 1 86 1 192 1 150 1 331 1 55 1 96 1 154 1 20 1 321 1 323 1 123 1 62 1 169 1 35 2 
66 5 102 1 249 1 84 4 86 1 96 2 20 4 366 1 217 1 10 1 88 1 159 1 62 5 35 5 
66 2 20 2 126 1 178 1 84 2 294 1 62 2 35 2 
66 3 96 1 366 1 102 1 20 3 84 3 62 3 35 3 
66 1 20 1 178 1 84 1 294 1 62 1 35 1 
66 1 20 1 366 1 178 1 84 1 31 1 10 1 62 1 35 1 
287 1 137 1 190 1 192 1 214 2 118 1 96 1 364 1 366 2 97 1 321 1 323 1 10 1 123 1 62 3 143 1 171 1 169 1 80 1 35 4 34 1 66 4 369 1 145 1 102 1 84 3 178 1 14 1 371 1 373 1 253 1 329 1 86 1 222 1 150 1 184 1 331 1 111 1 154 1 256 1 334 1 20 3 226 1 207 1 
66 2 96 1 102 1 20 1 84 1 88 1 159 1 62 2 35 2 
287 1 66 3 178 1 84 3 371 1 253 1 190 1 86 1 96 2 364 1 366 1 20 3 157 1 10 1 62 3 301 1 143 1 34 1 35 3 
66 2 84 2 96 1 55 1 366 1 20 2 10 1 62 2 360 1 35 2 
66 1 137 1 369 1 145 1 102 1 373 1 192 1 150 1 331 1 154 1 323 1 321 1 123 1 169 1 35 1 
66 1 137 1 369 1 102 1 373 1 192 1 150 1 331 1 332 1 154 1 321 1 123 1 271 1 169 1 35 1 
3 1 293 1 50 1 164 1 214 2 118 1 55 2 196 1 97 1 61 1 171 1 124 2 305 1 329 1 183 1 107 2 222 4 151 1 184 1 334 1 227 1 207 2 360 2 234 1 
66 1 20 1 178 1 84 1 126 1 190 1 62 1 35 1 
102 1 276 1 
66 2 102 2 84 1 366 1 20 1 31 1 10 1 62 2 35 2 
55 1 360 1 107 1 
144 1 66 1 137 1 369 1 145 1 102 1 373 1 192 1 150 1 331 1 154 1 323 1 321 1 123 1 169 1 35 1 
49 1 127 1 136 1 
49 1 127 1 136 1 
49 1 127 1 136 1 
127 1 136 1 
127 1 136 1 
51 1 309 1 
51 1 309 1 
51 1 309 1 
350 1 127 1 136 1 
350 1 127 1 136 1 
350 1 127 1 136 1 
127 1 136 1 281 1 
2 1 120 1 51 1 309 1 127 2 136 2 
235 1 0 1 314 1 213 1 364 1 216 1 298 1 62 2 35 2 66 2 102 1 84 2 349 1 127 1 253 1 281 1 255 1 153 1 20 2 375 1 155 1 228 1 379 1 136 1 
0 2 235 3 2 1 326 1 116 1 76 1 127 2 253 2 268 2 255 2 364 2 216 1 153 2 365 1 157 1 29 1 46 1 379 2 136 2 
113 1 203 1 26 1 
113 1 203 1 231 1 
242 1 113 3 179 1 336 1 231 1 26 2 
242 1 113 2 336 1 200 1 231 1 26 1 
242 2 113 2 336 1 231 1 26 1 
288 1 289 1 47 1 4 2 293 1 292 1 266 1 212 2 164 1 95 4 342 1 364 5 167 1 59 1 300 1 61 1 175 3 220 1 103 3 83 2 349 1 372 1 253 5 183 1 330 1 155 1 224 1 375 1 157 2 229 1 114 1 359 2 
288 2 289 2 237 1 47 2 4 6 293 3 292 1 266 3 212 6 164 3 78 1 95 7 364 9 7 1 342 2 27 1 59 2 300 1 302 1 61 3 175 9 273 5 103 8 351 5 253 9 183 3 330 6 333 1 375 4 224 1 157 5 229 3 114 1 232 1 359 6 
288 1 289 1 47 1 4 2 292 1 293 1 266 2 212 2 164 1 95 2 342 1 364 3 167 1 59 1 61 1 220 1 175 4 103 3 83 1 253 3 183 1 333 1 375 1 157 3 229 1 359 2 
288 1 289 1 47 1 4 4 292 1 293 2 266 3 212 4 164 2 95 3 342 1 364 4 27 1 167 1 59 1 302 1 61 2 175 7 220 1 103 5 83 2 253 4 183 2 333 1 375 2 157 4 229 2 359 4 232 1 
150 1 321 1 373 1 
150 1 318 1 
150 1 373 1 
338 1 373 1 362 1 150 2 19 1 244 2 321 1 
150 1 244 1 276 1 
150 1 344 1 
19 1 
124 4 89 1 13 1 3 2 293 1 348 1 162 1 183 1 222 7 196 3 44 1 257 1 73 1 207 3 381 1 233 1 261 2 
124 4 89 1 13 1 3 2 293 1 348 1 162 1 183 1 222 7 196 3 44 1 257 1 73 1 207 3 381 1 233 1 261 2 
124 4 89 1 13 1 3 2 293 1 348 1 162 1 183 1 106 1 222 7 196 3 44 1 257 1 73 1 207 3 381 1 233 1 261 2 
89 1 337 3 3 5 293 4 162 2 93 1 77 1 164 3 214 2 196 10 97 1 245 1 61 3 171 1 33 4 172 1 11 1 219 1 124 16 13 1 348 2 329 1 183 4 222 31 184 1 44 1 355 1 257 2 229 3 73 5 207 15 381 1 233 2 261 3 
89 1 3 3 293 1 162 1 214 4 196 4 97 2 245 1 171 2 124 5 221 1 348 1 329 2 183 1 222 9 184 2 44 1 185 1 257 1 73 1 207 4 233 1 381 1 261 2 
236 1 137 1 290 1 295 1 296 1 192 1 26 1 57 1 319 1 270 1 123 1 169 1 65 1 369 1 275 1 101 2 306 1 179 1 203 1 147 1 353 1 129 1 72 1 113 2 156 1 206 1 74 2 135 1 380 1 231 1 
236 1 137 1 160 1 290 2 295 1 296 1 192 1 26 1 57 1 319 1 218 1 123 1 169 1 65 1 369 1 275 1 101 3 179 1 306 1 203 1 353 1 284 1 129 1 72 1 113 2 206 1 74 3 135 1 380 1 231 1 
236 1 137 1 160 1 290 2 295 1 296 1 192 1 26 1 57 1 319 1 218 1 123 1 169 1 65 1 369 1 101 2 179 1 203 1 353 1 129 1 113 2 206 1 74 2 380 1 231 1 
137 1 295 2 192 1 28 1 121 1 123 1 169 1 65 2 274 1 369 1 101 1 373 1 148 1 284 1 150 1 331 1 72 1 129 2 74 1 135 1 380 2 259 1 187 1 
65 1 275 1 137 1 369 1 101 1 160 1 179 1 306 1 203 1 295 1 296 1 192 1 26 1 72 1 129 1 319 1 113 2 206 1 156 1 270 1 135 1 74 1 123 1 380 1 231 1 169 1 
70 1 
289 1 288 1 137 2 47 1 4 2 292 1 190 1 52 4 5 1 192 2 53 1 241 2 94 1 342 1 8 2 62 1 143 1 66 1 347 1 103 2 251 2 104 2 253 5 150 1 112 1 157 2 258 1 114 1 313 1 210 2 266 2 267 2 215 1 119 2 364 5 121 1 123 1 170 1 169 1 35 1 34 1 175 2 369 2 328 1 178 1 371 1 39 1 373 1 374 1 330 6 331 2 224 3 134 1 88 1 187 1 
291 1 190 1 52 2 53 1 94 1 364 3 62 1 143 1 35 1 34 1 66 1 328 1 178 1 371 1 251 1 253 3 374 1 330 2 112 1 224 1 134 1 88 1 
291 1 292 1 190 1 52 3 53 1 94 1 241 1 364 3 62 1 143 1 35 1 34 1 66 1 328 1 178 1 371 1 253 3 374 1 330 1 112 1 224 1 157 1 134 1 88 1 
291 1 292 1 190 1 52 3 53 1 94 1 241 1 364 3 8 1 62 1 143 1 35 1 34 1 66 1 328 1 178 1 371 1 251 1 253 3 374 1 330 2 112 1 224 1 157 1 134 1 88 1 
288 1 47 1 291 1 4 1 292 5 52 6 190 1 53 1 54 1 94 1 241 4 342 1 8 4 62 1 143 1 66 1 346 1 347 1 103 1 251 4 104 2 253 5 112 1 157 5 21 1 114 1 210 2 266 2 267 2 364 5 119 2 170 1 34 1 35 1 328 1 178 1 371 1 374 1 330 7 42 1 224 3 133 1 134 1 88 1 
288 1 210 2 47 1 4 1 292 1 266 2 267 2 190 1 52 4 53 1 241 2 94 1 119 2 342 1 364 4 8 2 62 1 143 1 170 1 35 1 34 1 175 2 66 1 347 1 328 1 103 1 178 1 371 1 251 2 104 2 253 4 374 1 330 4 112 1 224 2 157 2 134 1 258 1 88 1 114 1 
288 1 210 2 47 1 4 1 292 1 266 2 267 2 190 1 52 4 53 1 54 1 241 2 94 1 119 2 342 1 364 4 8 2 62 1 143 1 170 1 35 1 34 1 66 1 347 1 328 1 103 1 178 1 371 1 251 2 104 2 253 4 374 1 330 4 42 1 112 1 224 2 157 1 134 1 21 1 88 1 114 1 
288 1 210 2 47 1 4 1 292 1 266 2 267 2 190 1 52 4 53 1 54 1 241 2 94 1 119 2 342 1 364 4 8 2 62 1 143 1 170 1 35 1 34 1 66 1 347 1 328 1 103 1 178 1 371 1 251 2 104 2 253 4 374 1 330 4 42 1 112 1 224 2 157 1 134 1 21 1 88 1 114 1 
288 1 47 1 4 1 292 1 48 2 267 2 190 1 52 4 53 1 297 1 241 2 94 1 119 2 342 1 364 4 8 2 62 1 143 1 170 1 35 1 34 1 175 2 66 1 202 1 328 1 103 1 178 1 371 1 251 2 253 4 254 1 374 1 330 4 112 1 224 2 157 1 335 2 134 1 21 1 88 1 114 1 
288 1 210 2 47 1 4 1 292 1 266 2 267 2 190 1 52 5 53 1 54 1 94 1 241 3 119 2 342 1 364 4 8 3 62 1 143 1 170 1 35 1 34 1 66 1 346 1 347 1 328 1 103 1 178 1 371 1 251 3 104 2 253 4 374 1 330 5 42 1 112 1 224 2 157 1 134 1 21 1 88 1 114 1 
288 1 210 2 47 1 4 1 292 1 266 2 267 2 190 1 52 5 53 1 54 1 94 1 241 3 119 2 342 1 364 4 8 3 62 1 143 1 170 1 35 1 34 1 66 1 346 1 347 1 328 1 103 1 178 1 371 1 251 3 104 2 253 4 374 1 330 5 42 1 112 1 224 2 157 1 134 1 21 1 88 1 114 1 
288 1 47 1 4 1 292 1 48 2 267 2 190 1 52 4 53 1 241 2 94 1 119 2 342 1 364 4 8 2 62 1 143 1 170 1 35 1 34 1 175 2 66 1 328 1 103 1 178 1 371 1 251 2 253 4 374 1 254 1 330 4 112 1 224 2 157 1 335 2 134 1 258 1 88 1 114 1 
124 2 50 1 329 1 107 1 183 1 222 2 214 2 118 1 184 1 55 1 196 1 334 1 97 1 73 1 61 1 360 1 171 1 234 1 
3 1 293 1 50 1 329 1 164 1 107 1 222 2 214 2 118 1 184 1 151 1 55 1 196 1 334 1 97 1 207 2 360 1 171 1 
3 1 293 1 50 1 164 1 214 2 118 1 55 2 196 2 97 1 61 1 171 1 124 2 329 1 183 1 107 2 222 4 184 1 334 1 229 1 73 1 207 2 360 2 
124 2 329 1 107 1 183 1 222 2 214 2 118 1 184 1 55 1 196 1 334 1 97 1 73 1 100 1 61 1 360 1 171 1 234 1 
3 1 293 1 329 1 164 1 107 1 222 2 214 2 118 1 184 1 151 1 55 1 196 1 334 1 97 1 100 1 207 2 360 1 171 1 
3 1 293 1 164 1 214 2 118 1 55 2 196 2 97 1 61 1 100 1 171 1 124 2 329 1 183 1 107 2 222 4 184 1 334 1 229 1 73 1 207 2 360 2 
3 1 293 1 164 1 214 2 118 1 55 2 196 2 97 1 61 1 171 1 124 2 329 1 183 1 107 2 222 4 184 1 334 1 229 1 73 1 207 2 360 2 
137 1 192 1 214 2 118 1 97 1 321 1 323 1 123 1 169 1 171 1 35 1 124 1 174 1 66 1 369 1 145 1 102 1 14 1 373 1 329 1 222 2 150 1 331 1 184 1 154 1 111 1 334 1 207 1 
137 1 192 1 214 2 118 1 97 1 367 1 321 1 123 1 169 1 271 1 171 1 35 1 124 1 174 1 66 1 369 1 102 1 373 1 329 1 222 2 150 1 331 1 184 1 332 1 154 1 111 1 334 1 207 1 
3 1 293 1 117 1 164 1 214 2 118 1 55 2 196 2 97 1 61 1 171 1 124 2 329 1 183 1 107 2 222 4 184 1 334 1 229 1 73 1 207 2 360 2 
137 1 3 1 293 1 164 1 192 1 214 2 118 1 55 2 196 2 97 1 321 1 323 1 322 1 61 1 123 1 169 1 171 1 35 1 124 2 66 1 369 1 145 1 14 1 147 1 373 1 329 1 107 2 183 1 222 4 150 1 184 1 154 1 334 1 229 1 73 1 207 2 360 2 
293 1 117 1 164 1 214 2 118 1 55 1 196 1 366 1 97 1 10 1 62 1 61 1 171 1 35 1 124 2 66 1 84 1 329 1 183 1 107 1 222 3 184 1 334 1 20 1 131 1 229 1 73 1 207 1 360 1 
89 1 3 2 293 1 50 1 214 2 118 1 55 1 196 2 97 1 171 1 124 3 102 2 276 1 329 1 183 1 107 1 222 6 184 1 44 1 334 1 257 1 207 3 360 1 233 1 381 1 261 1 
337 3 3 1 293 1 117 1 164 1 214 4 118 1 55 11 165 1 196 2 97 2 61 2 171 2 172 1 33 3 174 1 124 8 102 1 307 1 329 2 107 11 183 2 222 14 184 2 111 1 334 2 355 1 229 2 73 1 377 1 207 6 22 1 360 4 
137 1 265 1 117 1 192 1 214 2 118 1 96 1 97 1 321 1 323 1 123 1 62 1 169 1 171 1 35 2 144 1 174 1 124 1 66 2 369 1 145 1 102 1 84 1 373 1 181 1 86 1 329 1 150 1 222 2 331 1 184 1 154 1 111 1 334 1 20 1 158 1 207 1 360 1 
89 1 137 3 3 4 293 3 140 2 192 3 96 1 55 7 196 8 97 3 62 1 61 2 66 3 145 2 102 2 308 1 14 2 149 2 107 7 150 2 311 2 111 1 154 2 20 1 257 1 73 4 207 10 360 7 261 1 160 1 117 1 164 2 214 6 118 3 322 2 323 2 321 2 123 2 79 1 171 3 169 2 35 3 174 1 124 10 369 3 84 1 373 2 329 3 86 1 183 3 222 20 331 1 184 3 44 1 334 3 229 2 186 1 381 1 233 1 
137 7 160 1 138 1 50 1 192 8 341 1 214 4 118 2 96 1 269 1 97 2 121 1 62 1 123 2 100 1 32 1 169 2 171 2 272 1 35 1 174 1 124 1 82 2 66 1 369 8 84 1 280 1 147 1 373 2 329 2 150 3 222 2 331 2 184 2 111 1 20 1 334 2 207 1 187 1 
264 1 3 1 293 1 117 1 164 1 214 2 118 1 55 1 196 1 366 1 97 1 10 1 62 1 61 1 171 1 35 1 124 1 66 1 84 1 329 1 107 1 183 1 222 3 184 1 334 1 20 1 229 1 207 2 360 1 
89 1 337 3 3 4 293 5 195 1 58 1 196 8 97 3 245 1 142 1 99 2 61 4 352 1 252 1 354 1 16 1 205 1 355 1 257 1 73 4 207 21 261 1 361 1 164 4 214 6 171 3 172 3 33 4 124 20 327 4 38 1 329 3 183 5 222 41 283 1 223 1 184 3 44 1 185 1 130 1 229 4 233 1 381 1 
89 1 337 3 361 1 3 4 293 4 164 3 214 8 195 1 58 1 196 7 97 4 142 1 245 2 99 2 61 4 171 4 33 4 172 3 124 20 327 4 38 1 252 1 352 1 354 1 329 4 16 1 183 5 223 1 283 1 222 38 184 4 44 1 205 1 130 1 185 1 355 1 257 1 229 4 73 3 207 18 381 1 233 1 261 1 
89 1 337 4 361 1 3 7 293 8 164 7 214 4 195 1 58 1 196 14 97 2 245 1 99 1 61 7 171 2 33 4 172 2 124 27 327 4 38 1 307 2 252 1 352 1 354 1 329 2 16 1 183 8 223 1 283 1 222 52 184 2 44 1 205 1 185 1 355 2 257 1 229 7 73 7 207 25 381 1 233 1 261 1 
337 1 3 3 293 3 164 3 214 4 195 1 196 6 97 2 99 1 61 3 171 2 33 2 172 1 124 9 327 2 352 1 329 2 16 1 183 3 223 1 222 19 184 2 205 2 130 1 185 1 355 1 229 3 87 1 73 3 207 10 
337 2 361 1 3 2 293 2 164 2 214 6 195 2 58 1 196 4 97 3 245 2 99 2 61 3 171 3 172 2 33 2 124 14 327 4 38 1 352 1 252 1 354 1 329 3 16 1 183 3 223 1 283 1 222 26 184 3 205 1 185 1 229 3 73 2 207 12 
350 1 25 1 
120 1 49 1 208 1 
0 1 235 2 2 1 326 1 76 1 127 1 253 1 268 1 255 1 216 1 364 1 153 1 365 1 157 1 29 1 46 1 379 1 136 1 
0 1 235 2 2 1 326 1 76 1 127 1 253 1 268 1 255 1 216 1 364 1 153 1 365 1 157 1 29 1 46 1 379 1 136 1 
0 1 235 2 2 1 326 1 76 1 127 1 253 1 268 1 255 1 216 1 364 1 153 1 365 1 157 1 29 1 46 1 379 1 136 1 
120 1 350 1 25 1 
120 1 350 1 25 1 
49 1 208 1 
120 1 49 1 208 1 
298 1 213 1 
0 1 235 1 115 1 314 1 213 1 268 1 95 1 364 1 29 1 298 1 62 2 35 2 66 2 102 1 84 2 349 1 127 1 253 1 281 1 255 1 153 1 375 1 155 1 20 2 228 1 379 1 136 1 
0 1 255 1 2 1 326 1 153 1 365 1 60 1 127 1 379 1 136 1 
228 1 281 1 
18 1 0 1 325 1 255 1 153 1 127 1 85 1 379 1 136 1 
137 2 117 1 192 2 240 1 214 2 118 1 269 1 97 1 123 1 62 2 248 1 169 1 171 1 173 1 35 2 174 1 124 1 82 2 66 2 369 2 304 1 373 1 280 1 128 1 329 1 150 1 222 2 184 1 111 1 334 1 207 1 
137 2 369 2 160 1 179 1 306 1 203 1 250 1 339 1 147 1 296 1 40 1 192 2 26 1 129 1 113 2 206 1 123 1 231 1 169 1 
137 1 369 1 160 1 179 1 306 1 203 1 296 1 40 1 192 1 26 1 129 1 113 2 206 1 132 1 123 1 231 1 169 1 
137 1 369 1 339 1 373 1 192 1 150 1 331 1 129 1 197 1 121 1 123 1 259 1 187 1 169 1 
137 1 369 1 160 1 179 1 306 1 203 1 250 1 339 1 296 1 40 1 192 1 26 1 129 1 113 2 206 1 123 1 231 1 169 1 
168 1 
103 1 4 1 157 1 292 1 276 1 368 1 17 1 
288 1 47 1 210 1 4 1 292 1 266 1 342 1 364 1 175 1 347 1 103 1 104 1 253 1 330 1 224 1 157 2 114 1 
286 2 289 2 288 4 137 3 47 4 338 1 4 8 292 2 293 2 92 2 139 2 140 2 192 3 342 4 344 3 244 2 61 2 247 2 103 9 147 1 253 5 17 1 150 10 157 8 114 4 358 1 75 2 359 6 315 2 266 6 212 6 163 2 164 2 215 1 364 5 318 2 320 2 368 1 321 3 123 4 169 3 36 1 34 2 176 1 175 12 369 3 177 1 37 1 373 3 183 2 330 5 331 1 224 3 229 2 
289 1 288 2 337 1 47 2 4 5 293 2 292 2 315 2 266 3 212 5 164 2 215 1 364 1 342 2 58 1 320 1 61 2 33 1 172 1 175 6 125 1 103 8 38 1 67 1 252 1 253 1 354 1 183 2 283 1 330 1 224 1 157 5 229 2 114 2 359 5 
288 1 47 1 4 2 293 1 294 1 315 2 54 1 342 1 364 1 56 1 366 1 320 1 122 1 62 1 35 1 66 1 103 2 178 1 84 1 253 1 183 2 256 1 20 1 257 1 114 1 357 1 233 1 381 1 
288 1 342 1 47 1 103 1 4 1 157 1 292 1 368 1 114 1 17 1 
175 10 4 5 103 5 293 2 315 2 266 5 140 1 212 5 164 2 183 2 157 5 320 1 229 2 61 2 359 5 
330 1 364 1 224 1 157 1 292 1 253 1 
288 2 289 2 137 4 47 2 4 2 316 1 5 1 192 4 215 2 342 2 364 3 121 1 246 1 123 1 169 1 36 1 369 4 103 2 373 1 253 3 150 1 330 4 331 2 333 1 224 2 313 1 114 1 358 2 187 1 
137 1 192 1 214 2 118 1 366 2 97 1 323 1 321 1 62 2 123 1 171 1 169 1 35 3 66 3 369 1 145 1 102 1 84 2 14 1 373 1 329 1 222 1 150 1 184 1 331 1 111 1 256 1 154 1 20 2 334 1 226 1 207 1 
175 4 288 1 289 1 47 1 4 2 103 1 292 2 266 2 212 2 215 1 342 1 157 4 114 1 359 2 261 1 
363 1 0 1 153 1 
363 1 0 1 153 1 
363 1 0 1 153 1 
0 1 153 1 
127 1 136 1 
0 1 153 1 310 1 
0 1 153 1 310 1 
0 1 153 1 310 1 
0 1 153 1 365 1 180 1 213 1 
89 1 337 1 3 2 293 1 214 2 196 2 97 1 171 1 33 1 172 1 124 4 252 1 329 1 183 1 222 8 184 1 44 1 185 1 257 1 207 4 233 1 381 1 261 1 
89 1 337 1 3 2 293 1 214 4 196 3 97 2 61 1 171 2 63 1 33 2 172 1 124 6 252 1 329 2 183 2 222 11 184 2 44 1 185 1 355 1 257 1 229 1 73 1 207 5 381 1 233 1 261 1 
89 1 337 1 3 3 293 3 164 2 214 6 58 1 196 4 97 3 245 1 61 2 63 1 171 3 33 1 172 1 124 9 38 1 252 1 354 1 329 3 183 3 283 1 222 19 184 3 44 1 185 1 257 1 229 2 73 1 207 10 381 1 233 1 261 1 
89 1 337 1 3 3 293 2 164 1 214 6 58 1 196 5 97 3 245 1 61 2 63 1 171 3 33 1 172 1 124 10 38 1 252 1 354 1 329 3 183 3 222 17 283 1 184 3 44 1 185 1 257 1 229 2 73 2 207 7 381 1 233 1 261 1 
89 1 337 1 3 2 293 1 214 2 196 2 97 1 171 1 33 1 172 1 124 4 252 1 329 1 183 1 222 8 184 1 44 1 185 1 257 1 207 4 233 1 381 1 261 1 
337 1 3 1 293 2 164 2 214 2 58 1 196 2 97 1 61 2 171 1 33 1 172 1 124 6 38 1 252 1 354 1 329 1 183 2 222 12 283 1 184 1 185 1 229 2 73 1 207 6 
89 1 337 1 3 3 293 2 164 1 214 8 58 1 196 5 97 4 245 2 61 2 63 1 171 4 33 1 172 1 124 10 38 1 252 1 354 1 329 4 183 3 283 1 222 18 184 4 44 1 185 1 257 1 229 2 73 2 207 8 381 1 233 1 261 1 
337 1 3 3 293 2 164 2 214 8 58 1 196 6 97 4 245 2 61 3 171 4 33 1 172 1 124 9 38 1 252 1 354 1 329 4 183 3 283 1 222 16 184 4 185 1 130 1 229 3 73 3 207 7 
124 3 89 1 3 3 293 1 183 1 222 7 44 2 196 6 257 3 73 3 207 4 233 3 381 1 
89 1 337 1 3 3 293 2 164 1 214 8 58 1 196 4 97 4 245 2 61 2 171 4 33 1 172 1 124 10 38 1 252 1 354 1 329 4 183 3 283 1 222 18 184 4 44 1 185 1 130 1 257 1 229 2 73 1 207 8 381 1 233 1 261 1 
124 4 89 1 3 2 293 1 329 2 183 1 222 8 214 4 184 2 196 3 44 1 97 2 245 1 257 1 73 1 207 4 381 1 171 2 233 1 261 1 
124 3 89 1 3 2 276 1 293 1 183 1 222 6 44 1 196 2 257 1 207 3 233 1 381 1 261 1 
124 2 3 1 293 1 329 1 164 1 183 1 214 2 222 4 184 1 196 2 97 1 229 1 73 1 207 2 61 1 63 1 171 1 
124 3 337 1 3 1 293 1 164 1 183 1 222 7 196 2 355 1 229 1 73 1 207 4 61 1 172 1 33 2 
89 1 337 2 3 5 23 1 293 3 164 2 214 4 165 1 196 9 97 2 245 2 61 2 171 2 33 2 124 11 307 1 329 2 183 3 222 23 184 2 44 1 355 1 257 2 229 2 73 4 207 12 381 1 233 2 261 1 
222 1 207 1 33 1 
222 1 124 1 337 1 
124 3 3 2 293 1 140 1 329 1 164 1 183 1 214 2 222 6 184 1 196 3 97 1 229 1 73 1 207 3 61 1 171 1 63 1 
337 1 3 1 293 2 164 2 214 2 58 1 196 2 97 1 61 2 171 1 33 1 172 1 124 6 38 1 252 1 354 1 329 1 183 2 222 12 283 1 184 1 185 1 229 2 73 1 207 6 
124 3 3 1 293 1 183 1 222 6 196 2 257 1 73 1 207 3 381 1 233 1 
124 1 89 1 3 1 23 1 329 1 222 3 214 2 184 1 196 2 44 1 97 1 257 1 245 1 73 1 207 2 233 1 171 1 
124 4 3 2 293 2 183 2 222 8 196 3 122 1 257 1 73 1 207 4 233 1 381 1 
124 2 329 1 183 1 214 2 222 2 184 1 196 1 97 1 185 1 73 1 61 1 171 1 
124 2 3 1 293 1 329 1 164 1 183 1 214 2 222 4 184 1 196 2 97 1 185 1 229 1 73 1 207 2 61 1 171 1 
124 1 3 1 23 1 329 3 222 3 214 6 184 3 196 2 97 3 130 1 185 1 245 1 257 1 73 1 207 2 171 3 233 1 
89 1 337 3 3 7 23 1 293 5 93 1 77 1 164 3 214 10 196 12 97 5 245 2 61 3 63 1 171 5 219 1 33 4 172 1 124 16 329 5 183 5 222 34 184 5 44 1 130 1 185 1 355 1 257 3 229 3 73 5 207 18 381 2 233 3 261 1 
71 1 66 1 102 1 88 1 159 1 62 1 35 1 
262 1 66 1 102 1 277 1 340 1 71 1 343 1 285 1 159 1 88 1 62 1 35 1 
66 2 137 1 369 1 102 1 84 1 373 1 192 1 150 1 331 1 96 1 332 1 154 1 20 1 321 1 123 1 62 1 169 1 35 2 
137 1 369 1 338 1 373 1 192 1 194 1 150 1 204 1 243 1 321 1 123 2 358 1 169 1 
150 1 331 1 369 1 137 1 121 1 276 1 373 1 123 1 187 1 169 1 192 1 
66 2 137 1 369 1 102 1 84 1 373 1 192 1 150 1 331 1 96 1 154 1 20 1 321 1 323 1 123 1 62 1 169 1 35 2 
66 2 137 1 369 1 102 1 178 1 84 1 371 1 139 1 373 2 190 1 192 1 150 3 96 1 154 1 318 1 20 2 321 2 323 1 123 1 62 2 358 1 169 1 35 2 
137 2 139 1 190 1 192 2 96 1 318 1 321 2 62 2 123 1 169 1 35 2 12 1 66 2 369 2 102 1 84 1 178 1 371 1 373 2 150 3 332 1 154 1 20 2 358 1 
12 1 303 1 137 3 369 3 292 1 24 1 139 1 373 1 253 2 192 3 150 4 330 1 331 1 364 2 318 1 157 1 344 1 244 1 321 1 123 1 358 1 169 1 34 1 
12 1 137 3 369 3 292 1 139 1 92 1 373 1 253 2 192 3 150 4 330 1 331 1 364 2 318 1 157 1 344 1 244 1 321 1 123 1 358 1 169 1 34 1 
369 1 137 1 123 1 32 1 169 1 192 1 
82 1 137 6 369 7 160 1 138 1 338 1 280 1 147 1 373 2 192 7 341 1 194 1 150 3 204 1 331 2 243 1 321 1 123 3 32 1 169 2 272 1 
89 1 137 1 3 2 293 1 192 1 96 1 55 1 196 2 97 2 62 1 66 2 145 1 102 2 14 1 147 1 149 1 107 1 150 1 154 1 20 1 257 1 207 3 360 1 261 1 117 1 214 4 118 2 323 1 322 1 321 1 123 1 171 2 169 1 35 2 173 1 124 3 369 1 84 1 373 1 329 2 183 1 222 6 184 2 334 2 44 1 233 1 381 1 
288 2 137 1 47 2 4 1 292 1 92 1 163 1 192 1 95 1 342 2 364 3 344 1 244 1 368 1 247 1 36 1 34 1 369 1 103 1 253 3 17 1 150 2 330 2 331 1 224 1 157 1 114 2 75 1 
176 1 137 2 369 2 338 1 147 1 373 1 192 2 150 2 244 1 321 1 123 2 32 1 169 1 
12 1 137 4 369 4 370 1 147 1 373 1 192 4 150 1 331 1 121 1 123 1 187 1 169 1 
137 2 369 2 308 1 146 1 373 1 192 2 150 1 204 1 152 1 243 1 321 1 123 2 358 1 169 1 
331 1 369 1 137 1 113 1 206 1 203 1 123 1 231 1 169 1 192 1 
137 2 369 2 160 1 147 1 280 1 373 1 192 2 240 1 150 1 123 1 169 1 
137 4 369 5 370 1 138 1 147 1 280 1 373 2 192 5 341 1 150 3 331 1 121 1 123 2 358 1 187 1 169 2 
137 4 369 5 370 1 138 1 147 1 280 1 373 2 192 5 150 3 331 1 121 1 299 1 123 2 358 1 187 1 169 2 
66 1 304 1 278 1 128 1 199 1 230 1 62 1 248 1 35 1 
345 1 199 1 239 1 
102 1 199 1 45 1 278 1 230 1 
345 1 287 1 102 1 178 1 292 1 371 1 278 2 190 1 253 2 193 1 239 1 95 1 364 2 157 1 199 1 45 2 230 2 143 1 34 1 
236 1 57 1 276 1 353 1 
236 1 72 1 101 1 57 1 74 1 135 1 353 1 
65 1 101 1 295 1 
236 1 72 1 101 3 57 1 225 1 189 1 270 1 98 2 74 3 135 1 353 1 378 1 
188 1 236 1 72 1 101 2 57 1 290 1 74 2 135 1 353 1 
64 1 101 1 203 1 26 1 72 1 57 1 113 1 270 1 30 1 135 1 74 1 
72 1 101 1 57 1 270 1 74 1 135 1 353 1 
236 1 72 1 101 1 270 1 74 1 135 1 353 2 
101 2 353 1 108 1 72 2 6 1 57 1 166 1 270 1 135 2 74 2 
236 1 101 3 201 1 290 2 353 1 182 1 282 1 72 1 57 2 270 1 30 1 135 1 74 3 
236 1 101 2 290 1 179 1 203 1 353 1 26 1 72 1 57 1 43 1 113 2 270 1 135 1 74 2 231 1 
188 1 236 1 101 4 209 1 290 2 353 1 282 1 72 2 57 2 270 1 30 1 135 2 74 4 
236 1 72 1 101 1 57 1 270 1 74 1 135 1 353 1 
236 2 101 4 290 2 189 1 353 2 282 1 72 1 57 3 98 1 30 1 324 1 74 4 135 1 378 1 
236 1 101 2 238 1 290 1 105 1 353 1 72 1 57 1 270 1 135 1 74 2 376 1 
236 1 101 3 189 1 68 1 353 1 72 1 57 1 270 1 98 2 135 1 74 3 378 2 
110 1 57 2 198 1 15 2 
72 1 263 1 101 1 270 1 74 1 135 1 
236 1 72 1 201 1 101 2 57 1 290 1 270 1 74 2 135 1 353 1 
1 1 
236 1 72 1 101 1 57 1 270 1 74 1 135 1 353 1 
236 1 72 1 201 1 101 3 57 1 290 1 270 1 98 1 74 3 135 1 353 1 
57 1 30 1 324 1 282 1 
57 1 353 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 29 323 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 29 323 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 362 6 4 9 32 1 317 2 248 1 13 1 251 1 200 1 234 1 272 3 327 4 67 2 69 2 89 2 20 1 376 5 256 1 377 9 331 2 72 1 332 2 280 1 358 1 215 1 130 1 132 2 309 1 
334 1 362 6 4 9 32 1 317 2 248 1 13 1 251 1 200 1 234 1 272 3 327 4 67 2 69 2 89 2 20 1 376 5 256 1 377 9 331 2 72 1 332 2 280 1 358 1 215 1 130 1 132 2 309 1 
334 1 362 7 4 10 32 1 317 2 248 1 13 1 251 1 200 1 234 1 272 4 327 5 67 2 69 2 89 2 20 1 376 6 256 1 377 10 331 2 72 1 332 2 280 1 358 1 215 1 130 1 132 2 309 1 
334 1 362 4 4 7 32 1 317 2 248 1 13 1 251 1 200 1 272 2 327 3 67 2 69 1 89 2 20 1 376 4 256 1 377 7 331 2 72 1 332 2 280 1 358 1 215 1 130 1 132 2 309 1 
362 3 234 1 272 1 327 2 4 4 67 1 69 2 89 1 32 1 376 3 377 4 331 1 332 1 358 1 215 1 251 1 132 1 309 1 
200 1 4 2 89 1 20 1 376 1 70 1 377 2 117 1 317 1 148 1 331 1 332 1 358 1 215 1 132 1 309 1 
362 1 272 1 327 1 4 3 376 2 377 3 317 1 331 2 332 2 280 1 358 1 215 1 309 1 
334 1 362 7 4 9 32 1 317 1 248 1 251 1 161 1 234 1 327 4 272 3 67 1 69 2 89 1 376 5 377 9 278 1 331 2 332 2 280 1 358 1 215 1 132 1 309 1 
334 1 362 7 4 9 32 1 317 1 248 1 251 1 161 1 234 1 327 4 272 3 67 1 69 2 89 1 376 5 377 9 278 1 331 2 332 2 280 1 358 1 215 1 132 1 309 1 
311 1 199 1 260 1 
311 1 238 1 179 2 
227 2 174 1 160 1 253 2 304 2 319 2 336 2 269 2 
25 1 53 1 95 1 266 1 336 2 5 2 269 3 227 2 160 1 249 1 83 1 319 2 342 1 38 1 39 1 230 1 197 1 122 2 299 1 42 2 237 2 253 3 166 1 373 2 304 2 125 1 205 1 172 1 91 1 210 1 173 1 212 1 174 1 242 1 129 1 281 1 216 1 
321 1 75 1 227 1 160 1 253 1 304 1 319 1 336 1 168 1 269 1 
311 1 321 1 199 1 246 1 56 1 253 1 304 1 269 1 353 1 158 1 330 1 178 1 229 1 262 1 
311 1 321 1 199 1 246 1 56 1 253 1 336 1 304 1 269 1 353 1 158 2 227 1 178 2 319 1 262 1 
158 1 80 1 178 1 92 1 255 1 
311 1 199 1 158 2 40 1 80 1 250 1 178 2 92 1 
158 1 178 1 92 1 
321 1 75 1 41 1 253 1 336 1 304 1 168 1 269 1 158 1 80 1 227 1 160 1 178 1 319 1 
311 1 
311 1 199 1 287 1 158 2 80 1 250 1 178 2 92 1 
311 1 282 2 199 1 361 1 153 1 363 1 43 1 349 1 47 2 337 2 98 1 116 1 158 5 189 1 80 2 211 1 250 1 178 5 92 2 
162 1 53 1 122 1 266 1 42 1 253 2 155 1 304 1 5 1 269 2 91 1 212 1 227 1 340 1 129 1 319 1 342 1 38 1 281 1 197 1 
174 1 260 1 
114 1 220 1 253 2 304 2 336 1 269 2 227 1 174 2 319 1 
298 1 155 1 105 1 
122 1 53 1 266 1 42 1 253 1 5 1 269 1 91 1 212 1 174 1 104 1 129 1 342 1 281 1 38 1 197 1 
162 2 114 1 253 5 326 1 304 5 336 1 269 5 226 1 227 4 330 1 174 1 23 1 340 1 319 4 
321 1 75 1 227 2 253 2 304 2 319 2 350 1 269 2 
162 1 227 3 174 1 253 3 336 1 304 3 319 3 269 3 
321 1 75 1 227 1 253 1 304 1 319 1 269 1 
321 1 227 1 114 1 220 1 253 1 304 1 319 1 336 1 269 1 
182 1 53 1 246 1 95 1 266 1 114 1 56 1 314 1 336 2 5 1 269 4 158 1 227 3 160 1 249 1 83 1 340 1 319 3 342 1 38 1 197 1 230 1 162 1 321 1 122 1 299 1 42 1 237 1 253 4 373 2 304 3 125 1 205 1 353 1 91 1 173 1 212 1 174 1 178 1 242 1 129 1 281 1 216 1 262 1 
162 1 226 1 227 1 174 1 330 1 253 2 304 2 319 1 269 2 
311 1 321 1 162 2 246 1 114 1 56 1 253 3 336 1 304 3 314 1 169 1 269 3 353 1 158 1 227 3 178 1 340 1 319 3 262 1 
162 1 298 1 227 2 114 1 253 2 155 1 304 2 319 2 336 1 269 2 
122 1 53 1 266 1 42 1 253 1 5 1 269 1 91 1 212 1 174 1 129 1 281 1 38 1 342 1 197 1 
122 1 53 1 85 1 266 1 42 1 253 1 5 1 269 1 99 1 91 1 212 1 174 1 38 1 342 1 197 1 
94 1 25 2 95 2 155 2 6 1 225 1 290 1 249 1 119 1 105 2 195 1 298 2 299 1 237 4 300 1 373 2 205 1 352 1 108 1 209 1 173 1 242 1 150 1 216 1 
321 1 227 1 56 1 253 1 304 1 319 1 350 1 269 1 
374 1 57 1 
374 1 57 1 
202 1 78 1 
202 1 78 1 
202 1 78 1 
61 1 374 1 57 1 
164 1 374 1 57 1 
202 1 241 1 335 1 374 2 57 2 78 1 
61 1 374 1 57 1 
61 1 374 1 57 1 
374 1 57 1 121 1 
374 1 57 1 121 1 
374 1 57 1 121 1 
24 1 181 1 28 1 222 1 57 1 269 2 115 1 158 1 247 1 79 1 227 2 35 1 319 2 322 1 164 1 253 2 304 2 274 1 374 1 174 1 178 1 307 1 357 1 333 1 
311 1 232 1 24 2 151 1 1 1 2 1 322 2 239 1 28 2 303 1 374 2 274 3 57 2 158 2 247 1 241 1 178 2 333 2 74 2 
67 1 132 1 89 1 
70 1 132 1 89 1 
70 1 316 1 214 1 187 1 67 2 89 3 
198 1 70 1 214 1 187 1 67 1 89 2 
70 1 214 1 67 1 187 2 89 2 
282 1 311 2 94 1 153 1 265 1 337 1 225 1 116 2 79 1 158 5 318 1 80 4 9 1 250 1 37 1 65 1 199 1 235 2 165 2 238 1 300 1 68 1 349 3 47 1 257 2 307 1 178 5 261 1 92 1 357 1 179 3 150 1 
311 5 282 2 94 3 153 1 221 5 337 2 225 3 116 6 158 9 318 3 80 7 289 1 9 1 250 1 37 2 138 1 65 2 199 1 370 1 270 1 235 6 238 3 300 3 375 1 255 5 349 8 47 2 21 1 211 1 257 6 178 9 92 6 357 4 179 9 150 3 
311 3 282 1 94 1 265 1 337 1 225 1 116 2 158 3 80 2 318 1 37 1 65 1 199 1 235 2 165 1 238 2 300 1 68 1 349 3 47 1 211 1 257 2 178 3 357 1 179 4 150 1 
311 4 282 1 94 2 265 1 337 1 225 2 116 4 158 4 80 3 318 2 289 1 37 1 138 1 65 1 199 1 235 4 165 2 238 3 300 2 375 1 68 1 349 5 47 1 257 4 211 1 178 4 357 2 179 7 150 2 
328 1 260 1 342 1 
366 1 342 1 
126 1 
53 1 342 1 38 1 
342 1 367 1 
342 1 38 1 
305 1 53 1 328 2 81 1 342 3 38 1 
310 1 141 1 360 2 25 4 95 3 113 1 237 7 300 1 88 1 225 1 315 1 290 3 292 1 341 1 119 2 64 1 180 1 
310 1 141 1 360 2 25 4 95 3 113 1 237 7 300 1 88 1 225 1 315 1 290 3 292 1 341 1 119 2 64 1 180 1 
310 1 141 1 360 2 25 4 95 3 113 1 237 7 300 1 88 1 225 1 170 1 315 1 290 3 292 1 341 1 119 2 64 1 180 1 
360 1 25 3 95 3 218 1 315 2 136 1 290 2 249 1 341 1 119 1 64 1 140 1 141 1 299 1 123 1 203 1 237 6 373 2 18 1 205 1 88 1 207 1 173 1 180 1 
310 1 141 1 360 2 25 5 95 4 299 2 113 1 218 1 237 9 300 1 373 4 205 2 88 1 225 1 315 1 290 4 173 2 249 2 292 1 12 1 341 1 119 3 293 1 180 1 
244 1 362 1 4 2 5 1 316 1 100 1 317 1 101 1 192 1 295 1 345 1 346 1 197 1 122 1 42 1 46 1 67 1 89 2 376 1 70 1 377 2 212 1 331 1 332 1 358 1 215 1 132 1 243 1 309 1 51 1 
244 1 362 2 54 1 4 3 5 1 31 1 316 1 100 1 317 1 101 1 192 1 345 1 346 1 197 1 122 1 42 1 46 1 67 1 66 1 89 2 376 1 70 1 377 3 212 1 331 1 332 1 358 1 132 1 309 1 51 1 
244 1 362 2 54 1 4 2 5 1 31 1 316 1 317 1 100 1 101 1 345 1 346 1 197 1 122 1 42 1 67 1 89 2 376 1 70 1 377 2 212 1 358 1 132 1 309 1 51 1 
244 2 133 1 134 1 4 1 5 1 100 2 317 2 294 1 38 1 342 1 197 1 122 1 42 1 66 1 275 1 91 1 377 1 212 1 331 1 332 1 128 1 51 2 109 1 
244 1 54 1 4 1 5 1 316 1 100 1 317 1 101 1 192 1 345 1 346 1 197 1 122 1 42 1 46 1 67 1 89 2 70 1 377 1 212 1 331 1 332 1 215 1 132 1 243 1 51 1 
351 1 
282 1 283 2 246 1 133 1 134 1 56 1 5 2 337 1 250 3 342 1 15 1 106 1 197 1 65 1 199 1 142 2 253 1 301 2 347 1 304 1 349 2 353 1 208 1 306 1 212 1 259 2 262 1 311 2 153 1 312 4 313 1 269 1 33 2 116 2 158 5 34 1 84 2 38 1 229 1 120 1 321 1 122 2 42 2 238 2 167 2 273 1 87 1 47 1 276 1 91 2 277 1 330 1 178 5 92 6 179 2 
321 1 312 2 246 1 142 1 56 1 253 1 304 1 87 1 269 1 353 1 287 1 158 3 34 1 277 1 330 1 250 1 178 3 92 2 15 1 229 1 106 1 262 1 
311 1 246 1 312 3 56 1 269 1 33 1 287 1 158 3 34 1 250 1 229 1 15 1 106 1 321 1 199 1 253 1 304 1 87 1 353 1 277 1 330 1 178 3 92 1 262 1 
311 1 283 1 246 1 312 3 56 1 269 1 287 1 33 1 158 3 34 1 250 1 229 1 15 1 106 1 321 1 199 1 142 1 253 1 304 1 87 1 353 1 277 1 330 1 178 3 92 2 262 1 
282 1 283 4 246 1 55 1 56 1 337 1 287 1 60 1 8 1 250 3 15 1 106 1 199 5 142 4 253 1 301 2 304 1 349 1 353 1 259 2 262 1 311 5 264 1 312 6 153 1 269 1 33 4 116 1 158 5 34 1 84 2 229 1 120 1 321 1 167 2 238 2 273 1 87 1 47 1 127 1 277 1 330 1 178 5 92 7 
311 2 282 1 283 2 153 1 246 1 312 4 313 1 56 1 337 1 269 1 33 2 116 1 158 4 34 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 2 253 1 301 2 238 2 167 2 304 1 273 1 349 1 87 1 47 1 353 1 277 1 330 1 259 2 178 4 92 4 179 2 262 1 
311 1 282 1 283 2 264 1 246 1 312 4 153 1 56 1 337 1 269 1 33 2 60 1 116 1 158 4 34 1 8 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 2 253 1 301 2 238 2 167 2 273 1 304 1 349 1 87 1 47 1 353 1 277 1 330 1 259 2 178 4 92 4 262 1 
311 1 282 1 283 2 264 1 246 1 312 4 153 1 56 1 337 1 269 1 33 2 60 1 116 1 158 4 34 1 8 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 2 253 1 301 2 238 2 167 2 273 1 304 1 349 1 87 1 47 1 353 1 277 1 330 1 259 2 178 4 92 4 262 1 
311 1 282 1 283 2 246 1 312 4 153 1 56 1 154 2 337 1 269 1 33 2 60 1 116 1 158 4 34 1 250 2 84 2 229 1 15 1 120 1 106 1 196 1 321 1 199 1 142 2 253 1 167 2 304 1 349 1 87 1 47 1 353 1 147 2 378 1 277 1 330 1 178 4 92 4 179 2 93 1 262 1 
311 1 282 1 283 3 264 1 153 1 246 1 312 5 55 1 56 1 337 1 269 1 60 1 116 1 33 3 158 4 34 1 8 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 3 253 1 301 2 238 2 167 2 273 1 304 1 349 1 87 1 47 1 353 1 277 1 330 1 259 2 178 4 92 5 262 1 
311 1 282 1 283 3 264 1 153 1 246 1 312 5 55 1 56 1 337 1 269 1 60 1 116 1 33 3 158 4 34 1 8 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 3 253 1 301 2 238 2 167 2 273 1 304 1 349 1 87 1 47 1 353 1 277 1 330 1 259 2 178 4 92 5 262 1 
311 1 282 1 283 2 153 1 246 1 312 4 313 1 56 1 154 2 337 1 269 1 33 2 116 1 158 4 34 1 250 2 84 2 229 1 15 1 120 1 106 1 321 1 199 1 142 2 253 1 167 2 304 1 349 1 87 1 47 1 353 1 147 2 378 1 277 1 330 1 178 4 92 4 179 2 262 1 
310 1 360 1 25 3 95 3 113 1 155 1 225 1 290 2 249 1 292 1 341 1 119 2 105 1 195 1 298 1 299 1 237 6 300 1 373 2 205 1 173 1 174 2 260 1 242 1 216 1 180 1 
94 2 25 7 95 5 223 1 155 8 225 1 318 2 290 1 82 1 249 2 83 1 119 1 105 8 320 1 140 2 321 1 369 1 298 2 299 2 372 1 237 12 44 1 300 2 373 4 205 2 207 2 210 1 173 2 174 1 242 2 150 1 359 1 216 1 
53 1 25 1 266 1 95 1 3 1 5 1 269 2 227 1 249 1 104 1 83 1 340 1 319 1 342 1 38 1 296 1 197 1 162 1 122 1 298 1 299 1 42 1 372 1 237 2 253 2 304 1 373 2 205 1 91 1 210 1 212 1 173 1 174 1 129 1 242 1 281 1 216 1 50 1 
94 2 53 2 54 1 95 10 285 2 5 3 290 8 291 2 249 3 292 1 341 1 340 1 342 2 105 7 197 2 298 7 201 1 299 3 253 3 300 3 304 1 19 1 205 3 210 1 212 2 150 2 216 3 310 1 360 1 25 10 266 2 113 1 155 7 77 2 364 1 156 2 225 3 269 3 318 2 227 1 83 1 119 4 319 1 38 2 230 2 162 1 122 3 42 3 372 1 237 20 373 6 88 4 91 1 173 3 174 2 242 3 129 2 281 2 180 1 
25 1 133 1 54 1 95 1 134 1 5 7 269 1 227 1 249 2 103 1 83 1 14 1 319 1 342 3 343 1 38 2 344 1 295 1 195 1 39 2 197 2 162 1 122 8 299 2 42 8 237 2 253 1 86 1 304 1 373 4 205 2 171 1 91 2 210 1 212 2 173 2 242 2 131 1 216 2 
94 1 25 1 95 2 114 1 155 1 336 1 269 1 225 1 318 1 290 1 227 1 249 1 119 1 319 1 105 1 298 1 299 1 372 1 237 3 253 1 300 1 373 2 304 1 205 1 107 1 173 1 242 1 150 1 216 1 
94 1 25 2 298 1 299 1 237 2 300 1 155 1 373 2 205 1 352 1 88 1 290 1 173 1 249 1 242 1 105 1 195 1 216 1 
298 1 299 1 95 2 237 2 155 1 373 2 205 1 225 1 209 1 290 1 173 1 249 1 242 1 119 1 105 1 195 1 150 1 216 1 
94 1 25 2 95 2 155 2 225 1 318 1 290 2 249 1 119 1 105 2 195 1 298 2 299 1 237 4 300 1 373 2 205 1 88 1 173 1 242 1 150 1 216 1 
94 1 25 2 298 1 299 1 237 2 300 1 155 1 373 2 205 1 352 1 88 1 171 1 290 1 173 1 249 1 242 1 105 1 216 1 
298 1 299 1 95 2 237 2 155 1 373 2 205 1 225 1 171 1 209 1 290 1 173 1 249 1 242 1 119 1 105 1 150 1 216 1 
94 1 25 2 95 2 155 2 225 1 318 1 290 2 249 1 119 1 105 2 298 2 299 1 237 4 300 1 373 2 205 1 88 1 171 1 173 1 242 1 150 1 216 1 
94 1 25 2 95 2 155 2 225 1 318 1 290 2 249 1 119 1 105 2 298 2 299 1 237 4 300 1 373 2 205 1 88 1 173 1 242 1 150 1 216 1 
25 1 53 1 266 1 95 1 5 1 269 1 249 1 83 1 38 1 342 1 197 1 230 1 122 1 299 1 42 1 237 2 253 1 373 2 205 1 91 1 210 1 212 1 173 1 174 1 129 1 242 1 281 1 216 1 
245 1 25 1 53 1 266 1 95 1 5 1 269 1 99 1 249 1 83 1 38 1 342 1 197 1 122 1 85 1 299 1 42 1 237 2 253 1 373 2 205 1 91 1 210 1 212 1 173 1 174 1 242 1 216 1 
94 1 25 2 95 2 155 2 225 1 318 1 290 2 249 1 119 1 105 2 298 2 299 1 372 1 237 4 300 1 373 2 205 1 88 1 173 1 242 1 150 1 216 1 
94 1 25 2 53 1 95 2 266 1 285 1 155 2 5 1 225 1 269 1 318 1 290 2 249 1 119 1 105 2 38 1 342 1 295 1 197 1 230 1 122 1 298 2 299 1 42 1 237 4 253 1 300 1 373 2 205 1 88 1 212 1 173 1 129 1 242 1 281 1 150 1 216 1 
94 1 25 2 95 1 114 1 336 1 155 1 225 1 269 1 318 1 290 1 227 1 249 1 319 1 105 1 252 1 298 1 299 1 372 1 237 3 253 1 300 1 373 2 304 1 205 1 88 1 173 1 242 1 150 1 216 1 
310 1 360 1 94 3 25 19 95 18 113 1 218 2 186 1 29 1 225 4 159 1 288 1 318 3 290 7 249 4 292 1 341 1 193 1 119 3 293 1 140 3 368 1 299 4 144 1 323 1 237 37 325 4 348 1 300 4 373 8 18 3 205 4 88 4 206 1 207 3 48 1 49 1 329 1 173 4 308 2 150 3 180 1 
310 1 360 1 94 3 25 17 95 16 113 1 218 2 186 1 29 1 225 4 159 1 288 1 318 3 290 5 249 4 292 1 341 1 193 1 119 2 293 1 140 2 368 1 299 4 144 1 323 1 237 33 325 3 348 1 300 4 373 8 18 2 205 4 88 3 207 2 48 1 49 1 329 1 173 4 308 1 150 3 180 1 
94 2 25 11 95 11 218 2 186 1 29 1 225 2 159 1 288 1 318 2 290 4 249 3 193 1 119 2 293 1 140 2 368 1 299 3 144 1 323 1 237 22 325 3 348 1 300 2 373 6 18 2 205 3 88 2 207 2 49 1 329 1 173 3 308 1 150 2 
310 1 360 1 94 3 111 1 25 17 95 16 113 1 218 2 186 1 29 1 225 4 159 1 288 1 318 3 290 5 249 4 292 1 341 1 193 1 119 2 293 1 140 2 368 1 299 4 144 1 237 33 325 3 348 1 300 4 373 8 18 2 205 4 88 3 207 2 48 1 49 1 329 1 173 4 308 1 150 3 180 1 
94 3 25 13 95 11 218 2 186 2 29 1 225 2 159 1 288 1 318 3 290 2 249 3 193 1 119 1 293 1 140 2 368 1 299 3 144 1 323 1 237 24 325 3 348 1 300 3 373 6 205 3 18 2 88 1 207 2 49 1 329 1 173 3 308 2 150 2 
22 1 24 1 2 1 322 1 241 1 239 1 28 1 374 1 57 1 333 1 
164 1 222 1 
24 1 322 1 36 1 185 1 228 1 28 1 374 1 57 1 333 1 
61 1 188 1 
26 1 335 1 121 1 
311 1 232 1 24 1 1 1 2 1 322 1 239 1 28 1 303 1 374 1 274 2 57 1 247 1 158 1 241 1 178 1 333 1 74 1 
311 1 232 1 24 1 1 1 2 1 322 1 239 1 28 1 303 1 374 1 274 2 57 1 247 1 158 1 241 1 178 1 333 1 74 1 
311 1 232 1 24 1 1 1 2 1 322 1 239 1 28 1 303 1 374 1 274 2 57 1 247 1 158 1 241 1 178 1 333 1 74 1 
61 1 335 1 188 1 
61 1 335 1 188 1 
26 1 121 1 
26 1 335 1 121 1 
115 1 35 1 
24 1 181 1 1 1 28 1 222 1 57 1 269 2 115 1 158 1 79 1 80 1 227 2 35 1 319 2 322 1 164 1 253 2 304 2 374 1 274 1 174 1 175 1 178 1 307 1 357 1 333 1 74 1 
25 1 95 1 224 1 5 2 269 2 190 1 249 1 83 1 14 1 342 1 38 1 343 1 39 2 197 1 371 1 122 2 299 1 42 2 372 1 124 1 237 2 253 2 304 2 373 2 205 1 240 1 210 1 212 1 173 1 242 1 216 1 
122 2 112 1 54 1 42 2 96 1 67 1 5 2 89 2 70 1 316 1 100 1 212 1 101 1 192 1 149 1 295 1 346 1 132 1 197 1 
122 1 54 1 42 1 96 1 145 1 67 1 5 1 89 2 70 1 316 1 100 1 101 1 212 1 192 1 346 1 132 1 197 1 
122 1 133 1 134 1 42 1 5 1 58 1 91 1 100 1 212 1 149 1 342 1 38 1 197 1 109 1 
122 1 112 1 54 1 42 1 96 1 67 1 5 1 89 2 70 1 316 1 100 1 101 1 212 1 192 1 149 1 346 1 132 1 197 1 
279 1 
311 1 199 1 116 1 43 1 260 1 349 1 98 1 
282 1 311 2 153 1 337 1 116 1 158 1 250 1 199 1 238 1 301 1 273 1 349 1 47 1 259 1 178 1 92 1 179 1 
282 4 94 2 53 3 246 2 5 3 337 4 98 1 286 1 339 1 250 3 342 10 295 1 16 1 197 4 65 2 199 2 17 2 300 2 349 9 305 1 306 1 257 6 212 3 213 2 73 2 150 2 263 2 311 8 153 4 268 2 156 2 225 2 30 2 116 8 158 5 318 2 366 3 38 3 367 2 233 2 122 3 163 2 42 3 235 6 43 1 238 6 47 4 91 1 328 2 177 1 178 5 92 5 179 12 379 1 
282 2 311 6 94 4 153 2 337 2 225 4 116 7 159 1 158 1 318 4 250 1 193 1 368 1 140 2 369 1 199 1 17 4 235 8 44 1 254 1 348 1 238 5 300 4 349 12 18 1 47 2 207 2 257 8 329 1 178 1 92 1 179 10 150 4 
75 1 282 1 153 1 336 1 337 1 269 1 225 1 116 2 158 1 7 1 8 1 227 1 160 1 292 1 341 1 319 1 321 1 17 2 41 1 253 1 300 2 304 1 349 2 168 1 47 1 213 1 178 1 180 1 
282 1 311 1 199 1 153 1 43 1 349 1 47 1 337 1 98 1 116 1 
311 5 94 2 17 2 235 5 300 2 238 5 349 5 156 1 225 2 116 5 318 2 257 5 213 1 179 10 150 2 
311 1 199 1 158 1 250 1 178 1 92 1 
282 2 183 1 153 1 133 1 134 1 5 4 337 2 59 1 116 2 158 3 339 2 250 2 342 1 38 1 197 1 65 2 122 4 42 4 347 1 349 2 47 2 276 1 91 2 211 1 306 2 212 1 177 1 178 3 92 4 
53 1 95 1 266 1 336 2 5 1 269 3 227 2 160 1 249 1 83 1 319 2 38 1 342 1 230 1 197 1 122 1 299 1 42 1 237 1 253 3 373 2 304 2 125 1 205 1 91 1 173 1 212 1 174 1 129 1 242 1 281 1 216 1 
282 1 65 1 311 4 360 1 199 2 153 1 235 2 238 2 349 1 47 1 337 1 116 2 257 2 306 1 179 4 
24 1 71 1 322 1 
24 1 322 1 35 1 239 1 135 1 
24 1 71 1 322 1 
24 1 71 1 322 1 
24 1 322 1 236 1 
24 1 322 1 236 1 
24 1 322 1 236 1 
24 1 322 1 
374 1 57 1 
94 2 25 7 95 4 218 1 225 1 159 1 318 2 290 2 249 2 293 1 119 1 193 1 140 1 368 1 299 2 237 11 348 1 300 2 373 4 18 1 205 2 88 1 207 1 329 1 173 2 150 1 
94 2 25 7 95 4 218 1 225 1 159 1 318 2 290 2 249 3 293 1 119 1 193 1 140 1 368 1 299 3 237 11 348 1 300 2 373 6 18 1 205 3 88 1 207 1 329 1 173 3 258 1 150 1 
94 2 25 6 95 7 218 1 225 2 159 1 318 2 290 2 249 3 293 1 119 1 193 1 140 1 368 1 299 3 237 13 348 1 300 2 373 6 18 1 205 3 88 1 207 1 329 1 173 3 258 1 150 2 
94 2 25 7 95 4 218 1 225 1 159 1 318 2 290 2 249 3 293 1 119 1 193 1 140 1 368 1 299 3 237 11 348 1 300 2 373 6 18 1 205 3 88 1 207 1 329 1 173 3 258 1 150 1 
94 2 25 7 95 4 218 1 225 1 159 1 318 2 290 2 249 2 293 1 119 1 193 1 140 1 368 1 299 2 237 11 348 1 300 2 373 4 18 1 205 2 88 1 207 1 329 1 173 2 150 1 
94 2 25 6 95 6 225 2 159 1 318 2 290 2 249 1 293 1 119 1 193 1 140 1 368 1 299 1 237 12 348 1 300 2 373 2 18 1 205 1 88 1 207 1 329 1 173 1 150 2 
94 2 25 7 95 5 218 2 225 1 159 1 318 2 290 2 249 4 193 1 293 1 119 1 140 1 368 1 299 4 237 12 348 1 300 2 373 8 18 1 205 4 88 1 207 1 329 1 173 4 258 1 150 1 
94 2 25 7 95 5 218 2 225 1 159 1 318 2 290 4 249 4 193 1 293 1 119 2 140 1 368 1 299 4 237 12 348 1 300 2 373 8 18 1 205 4 88 2 207 1 48 1 329 1 173 4 150 1 
310 2 25 3 95 4 113 1 237 7 300 1 88 3 225 1 290 6 292 1 341 3 119 3 180 3 
94 2 25 7 95 5 218 2 225 1 159 1 318 2 290 2 249 4 193 1 293 1 119 1 140 1 368 1 299 4 237 12 348 1 300 2 373 8 18 1 205 4 88 1 207 1 48 1 329 1 173 4 150 1 
310 1 360 1 25 4 95 4 299 2 113 1 218 1 237 8 300 1 373 4 205 2 88 1 225 1 290 3 173 2 249 2 292 1 341 1 119 2 180 1 
310 1 360 1 25 3 95 3 113 1 237 6 300 1 225 1 290 2 292 1 260 1 341 1 119 2 180 1 
94 1 25 2 95 2 299 1 237 4 300 1 373 2 205 1 88 1 225 1 318 1 290 2 173 1 249 1 258 1 119 1 150 1 
207 1 25 1 95 1 237 2 18 1 140 1 
310 1 360 1 94 2 25 13 95 13 113 1 218 1 223 1 225 5 318 2 7 1 290 7 249 1 292 2 341 2 119 5 140 2 369 1 299 1 237 26 44 1 300 5 373 2 205 1 88 2 207 2 173 1 150 2 180 2 
207 1 95 1 237 1 
25 1 237 1 140 1 
94 1 25 3 299 1 95 3 237 6 300 1 373 2 205 1 156 1 88 1 225 1 318 1 173 1 290 3 249 1 258 1 119 2 150 1 
94 2 25 6 95 6 225 2 159 1 318 2 290 2 249 1 293 1 119 1 193 1 140 1 368 1 299 1 237 12 348 1 300 2 373 2 18 1 205 1 88 1 207 1 329 1 173 1 150 2 
25 3 95 3 237 6 300 1 88 1 225 1 290 2 292 1 341 1 119 1 180 1 
310 1 25 1 95 2 299 1 123 1 113 1 218 1 237 3 373 2 205 1 88 1 290 2 173 1 249 1 341 1 119 1 180 1 
25 5 299 1 95 5 237 10 300 2 373 2 205 1 88 2 225 2 7 1 173 1 290 5 249 1 292 1 341 2 293 1 119 3 180 2 
94 1 25 2 299 1 237 2 300 1 373 2 205 1 88 1 173 1 290 1 249 1 293 1 
94 1 25 2 95 2 299 1 237 4 300 1 373 2 205 1 88 1 225 1 318 1 290 2 173 1 249 1 119 1 293 1 150 1 
25 1 95 2 299 3 123 1 218 1 237 3 373 6 205 3 88 1 48 1 173 3 290 2 249 3 341 1 293 1 119 1 180 1 
310 1 25 7 95 8 113 1 218 1 225 2 7 1 290 6 136 1 249 4 292 1 341 2 293 1 119 3 140 1 299 4 123 1 237 15 300 2 373 8 18 1 205 4 88 3 207 1 48 1 173 4 258 1 180 2 
157 1 226 1 174 1 330 1 253 1 304 1 269 1 
0 1 184 1 324 1 253 1 304 1 97 1 269 1 157 1 226 1 174 1 330 1 194 1 
91 1 122 1 133 1 212 1 134 1 42 1 260 1 342 1 38 1 5 1 197 1 
162 1 53 1 122 1 266 1 42 1 253 2 304 1 5 1 269 2 91 1 227 1 212 1 174 1 319 1 342 1 38 1 281 1 197 1 
263 1 321 1 162 1 53 2 122 1 266 1 42 1 56 1 253 2 304 2 5 1 269 2 339 1 227 2 212 1 174 1 319 1 367 1 342 3 38 2 281 1 262 1 197 1 
263 1 321 1 162 1 217 1 53 2 122 2 266 1 42 2 56 1 253 2 304 2 5 2 269 2 99 1 339 1 227 2 212 1 174 1 319 1 367 1 342 3 38 2 262 1 197 1 
311 1 263 1 199 1 217 1 246 1 53 1 122 3 42 3 267 1 5 3 91 1 158 2 354 1 339 1 328 1 212 1 178 2 366 1 92 1 367 1 38 1 342 4 197 1 
311 1 263 1 199 1 217 1 246 1 53 1 122 3 42 3 5 3 91 1 158 2 339 1 328 1 212 1 178 2 366 1 92 1 367 1 38 1 73 1 342 4 197 1 
122 1 212 1 42 1 86 1 5 1 197 1 
122 7 53 1 54 1 42 7 219 1 86 1 5 6 146 1 91 2 305 1 338 1 212 2 103 1 14 1 38 2 342 3 344 1 295 1 39 1 131 1 197 3 
310 1 360 1 25 3 53 1 95 3 266 1 113 1 285 1 155 1 5 1 225 1 269 2 290 2 227 1 291 1 249 2 292 1 341 1 119 2 319 1 105 1 342 1 38 1 295 1 197 1 230 1 162 1 122 1 298 1 299 2 372 1 42 1 237 6 253 2 300 1 304 1 373 4 205 2 240 1 212 1 173 2 174 2 242 2 129 1 281 1 216 2 180 1 
311 1 282 2 153 2 246 1 268 1 5 1 337 2 98 1 30 1 116 1 158 3 80 1 250 1 366 1 342 2 233 1 199 1 122 1 42 1 43 1 349 1 47 2 91 1 328 1 177 1 178 3 92 2 73 1 
305 1 53 1 122 2 328 1 212 1 42 2 86 1 342 2 38 1 5 2 295 1 379 1 197 2 
110 1 91 1 217 1 122 4 133 1 212 1 134 1 42 4 342 1 38 1 5 4 295 1 197 1 
231 1 122 2 53 1 201 1 42 2 219 1 5 2 146 1 339 1 212 1 176 1 38 1 342 1 197 2 
70 1 91 1 122 1 212 1 42 1 5 1 346 1 132 1 89 1 197 1 
122 2 54 1 42 2 5 2 190 1 212 1 14 1 38 1 342 1 295 1 197 1 
110 1 122 5 133 1 134 1 42 5 5 4 91 1 339 1 212 2 103 1 14 1 38 2 342 3 295 1 344 1 197 2 
110 1 297 1 122 5 133 1 134 1 42 5 5 4 91 1 339 1 212 2 14 1 38 2 342 3 295 1 344 1 197 2 
162 1 53 1 122 1 266 1 42 1 253 2 304 1 5 1 269 2 99 1 91 1 227 1 212 1 174 1 319 1 342 1 38 1 197 1 
122 1 53 1 42 1 219 1 5 1 146 1 305 1 338 1 339 1 212 1 38 1 342 1 197 2 
152 1 143 1 174 1 45 1 63 1 
311 1 321 1 199 1 152 1 246 1 76 1 143 2 56 1 302 1 45 2 314 1 353 1 158 2 80 1 174 1 137 1 178 2 63 2 262 1 
371 1 152 1 124 1 253 1 45 1 304 1 224 1 269 1 63 1 
152 1 76 1 137 1 
376 1 260 1 358 1 309 1 
376 1 377 1 331 1 332 1 4 1 358 1 309 1 
377 1 317 1 51 1 
376 1 284 1 377 3 331 1 332 1 62 1 204 1 4 3 358 1 215 1 309 1 20 2 
376 1 377 2 362 1 331 1 332 1 4 2 358 1 69 1 309 1 
376 1 32 1 377 1 331 1 332 1 327 1 4 1 67 1 215 1 132 1 89 1 
376 1 377 1 331 1 332 1 4 1 358 1 215 1 
377 1 331 1 332 1 4 1 358 2 215 1 309 1 
271 1 4 2 376 1 377 2 355 1 331 2 332 2 356 1 358 1 215 1 
334 1 362 2 272 1 327 1 4 3 376 2 377 3 331 1 248 1 332 1 358 1 215 1 309 1 
362 1 4 2 67 1 89 2 376 1 70 1 377 2 316 1 331 1 332 1 358 1 215 1 139 1 132 1 309 1 
362 2 234 1 272 1 327 1 4 4 69 1 376 2 377 4 331 2 332 2 358 1 215 1 309 1 
376 1 377 1 331 1 332 1 4 1 358 1 215 1 309 1 
362 2 272 1 327 1 204 1 4 4 20 1 376 3 377 4 331 1 11 1 332 1 62 1 358 2 309 2 
362 1 4 2 376 1 377 2 331 1 102 1 10 1 332 1 358 1 215 1 161 1 309 1 
204 1 4 3 20 2 376 1 377 3 331 1 332 1 191 1 62 2 215 1 358 1 309 1 
376 2 365 1 118 1 90 2 
52 1 377 1 331 1 332 1 4 1 215 1 
376 1 377 2 362 1 248 1 331 1 332 1 4 2 358 1 215 1 309 1 
27 1 
376 1 377 1 331 1 332 1 4 1 358 1 215 1 309 1 
376 1 377 3 362 1 248 1 331 1 332 1 4 3 358 1 215 1 309 1 20 1 
376 1 11 1 327 1 272 1 
376 1 358 1 

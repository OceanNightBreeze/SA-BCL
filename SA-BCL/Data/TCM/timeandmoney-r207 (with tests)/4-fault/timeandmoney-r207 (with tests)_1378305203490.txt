#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 285 298 14 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 285 298 14 36 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 6 148 1 347 2 97 1 267 1 350 1 329 9 66 5 154 1 278 1 352 2 131 1 71 1 109 1 110 2 355 1 135 1 374 2 158 1 320 1 53 2 377 2 254 4 85 9 255 1 58 2 27 3 59 1 
62 6 347 2 148 1 97 1 267 1 350 1 329 9 66 5 154 1 278 1 352 2 131 1 71 1 109 1 110 2 355 1 135 1 374 2 158 1 320 1 53 2 377 2 254 4 85 9 255 1 58 2 27 3 59 1 
62 7 347 2 148 1 97 1 267 1 350 1 329 10 66 6 154 1 278 1 352 2 131 1 71 1 109 1 110 2 355 1 135 1 374 2 158 1 320 1 53 2 377 2 254 5 85 10 255 1 58 2 27 4 59 1 
62 4 347 2 148 1 267 1 350 1 329 7 66 4 154 1 278 1 352 2 131 1 71 1 109 1 110 2 355 1 135 1 374 1 158 1 320 1 53 2 377 2 254 3 85 7 255 1 58 2 27 2 59 1 
352 1 71 1 110 1 355 1 62 3 347 1 374 2 97 1 158 1 267 1 53 1 329 4 377 1 254 2 66 3 85 4 27 1 278 1 
145 1 352 1 71 1 110 1 94 1 135 1 148 1 267 1 53 1 329 2 377 1 332 1 66 1 85 2 58 1 278 1 
352 2 131 1 71 1 62 1 267 1 53 2 329 3 254 1 66 2 85 3 58 1 27 1 278 1 
62 7 263 1 347 1 97 1 267 1 329 9 66 5 278 1 352 2 131 1 71 1 109 1 73 1 110 1 355 1 374 2 158 1 53 2 377 1 254 4 85 9 255 1 58 1 27 3 
62 7 263 1 347 1 97 1 267 1 329 9 66 5 278 1 352 2 131 1 71 1 109 1 73 1 110 1 355 1 374 2 158 1 53 2 377 1 254 4 85 9 255 1 58 1 27 3 
91 1 126 1 290 1 
126 1 134 2 279 1 
323 2 138 2 356 2 186 2 301 1 310 1 338 2 363 2 
323 2 0 1 179 1 264 1 365 1 234 2 301 1 181 1 8 1 152 1 351 1 186 2 40 1 68 1 128 1 171 1 310 1 224 1 335 1 44 1 356 3 46 1 292 2 248 2 338 2 79 1 138 2 51 1 250 1 360 2 202 1 295 1 24 1 340 1 297 2 363 3 341 1 
323 1 123 1 138 1 312 1 356 1 186 1 167 1 310 1 338 1 363 1 
323 2 285 1 91 1 167 2 123 1 168 1 102 1 270 1 272 1 126 1 186 1 219 1 310 1 13 1 312 1 356 2 338 1 138 1 52 1 113 1 363 2 
323 2 312 1 91 1 356 2 167 2 338 2 123 1 138 2 168 1 52 2 102 1 113 1 270 1 126 1 186 2 219 2 310 1 363 2 13 1 
52 1 9 1 151 1 77 1 219 1 
52 2 91 1 177 1 9 1 126 1 151 1 25 1 219 2 
52 1 151 1 219 1 
323 1 312 1 356 1 167 1 338 1 123 1 138 1 52 1 102 1 9 1 186 1 219 1 310 1 363 1 
126 1 
52 2 91 1 9 1 126 1 151 1 25 1 166 1 219 2 
370 1 223 1 130 2 372 1 353 1 91 1 4 1 227 1 52 5 252 2 54 2 142 1 9 2 126 1 25 1 151 2 219 5 42 1 188 1 
301 1 290 1 
323 2 133 1 356 2 301 2 338 1 138 1 186 1 363 2 70 1 
170 1 258 1 122 1 
207 1 224 1 335 1 356 1 46 1 292 1 234 1 301 1 248 1 8 1 295 1 24 1 152 1 351 1 171 1 363 1 
323 1 224 1 335 1 356 2 18 1 46 1 292 1 280 1 234 1 248 1 138 1 8 1 295 1 24 1 152 1 351 1 186 1 171 1 258 1 363 2 
323 3 138 3 356 3 186 3 280 1 301 1 338 1 363 3 
323 1 123 1 138 1 356 1 186 1 167 1 363 1 
323 1 138 1 133 1 356 1 186 1 167 1 338 1 363 1 70 1 
264 1 167 2 301 1 168 1 8 1 270 1 351 1 219 1 128 1 68 1 171 1 310 1 13 1 133 1 224 1 356 4 18 1 280 1 138 3 360 2 24 1 363 4 323 3 234 1 365 1 181 1 33 1 238 1 106 1 152 1 186 3 335 1 44 1 46 1 292 1 248 1 338 2 52 1 250 1 51 1 202 1 113 1 295 1 340 1 297 1 
323 2 138 1 285 1 356 2 186 1 298 1 280 1 301 1 363 2 
323 3 190 1 133 1 356 3 18 1 280 2 167 1 338 1 138 3 168 1 52 1 113 1 238 1 270 1 126 1 186 3 219 1 13 1 363 3 
323 2 133 1 356 2 280 1 338 1 138 2 186 2 170 1 363 2 258 1 
224 1 335 1 356 1 46 1 292 1 234 1 301 1 248 1 295 1 8 1 24 1 152 1 351 1 171 1 363 1 
344 1 335 1 356 1 292 1 234 1 301 1 248 1 295 1 8 1 24 1 104 1 152 1 351 1 171 1 363 1 
0 2 264 1 365 1 327 1 181 1 122 2 236 1 308 1 128 1 68 2 170 2 44 1 136 1 247 1 375 1 157 1 294 1 51 1 360 2 283 1 57 1 230 1 297 4 258 2 
323 1 138 1 270 1 356 1 186 1 246 1 167 1 363 1 
323 3 133 1 356 3 18 1 280 2 167 1 301 1 338 1 138 3 106 1 186 3 363 3 
323 2 123 1 138 2 356 2 246 1 186 2 167 1 363 2 
333 1 318 1 
333 1 318 1 
359 1 21 1 
359 1 21 1 
359 1 21 1 
345 1 333 1 318 1 
345 1 333 1 318 1 
203 1 333 1 318 1 
231 1 87 1 359 1 21 1 333 2 318 2 
345 1 333 1 318 1 
38 1 333 1 318 1 
38 1 333 1 318 1 
38 1 333 1 318 1 
231 1 1 2 222 3 132 2 197 2 318 2 99 1 52 2 150 2 218 1 239 2 126 1 333 2 296 1 219 2 289 1 257 1 153 1 322 1 
323 2 1 1 301 1 150 1 288 1 239 1 186 2 333 1 219 1 12 1 241 1 222 1 72 1 356 2 194 1 226 1 197 1 318 1 19 1 138 2 52 1 296 1 203 1 363 2 
377 1 110 1 347 1 
377 1 110 1 332 1 
83 1 110 3 332 1 111 1 347 2 189 1 
83 1 110 2 332 1 111 1 347 1 328 1 
83 2 110 2 332 1 111 1 347 1 
91 1 4 1 63 2 215 1 236 1 9 4 276 1 151 1 126 2 308 1 219 5 12 1 241 1 279 1 16 1 130 1 372 2 134 3 194 1 195 1 136 1 249 1 319 1 161 2 52 5 252 1 54 1 142 3 25 1 57 1 26 1 116 2 
91 1 4 1 287 1 215 1 236 3 369 1 9 7 276 3 151 6 126 5 308 3 219 9 12 4 279 3 130 2 353 1 372 6 336 1 134 9 77 5 136 3 160 1 319 2 161 6 23 1 52 9 252 2 54 2 339 5 176 1 142 8 25 1 57 3 26 2 116 6 
91 1 63 1 236 1 9 2 126 3 276 1 308 1 219 3 12 1 279 2 16 1 130 1 353 1 372 2 134 4 136 1 249 1 319 1 161 2 52 3 252 1 54 1 142 3 57 1 26 1 116 2 
91 1 63 2 236 2 369 1 9 3 126 4 276 2 308 2 219 4 12 2 279 3 130 1 16 1 353 1 372 4 336 1 134 7 136 2 249 1 319 1 161 4 23 1 52 4 252 1 54 1 142 5 57 2 26 1 116 4 
8 1 290 1 213 1 
8 1 29 1 
101 1 
8 1 335 1 
8 3 335 1 152 1 144 1 379 1 213 2 
8 1 335 1 152 1 
2 1 8 1 
0 4 208 1 119 1 136 1 247 2 293 1 317 1 112 1 235 2 7 1 98 1 361 1 283 3 308 1 68 3 297 7 107 1 
0 4 208 1 119 1 136 1 247 2 293 1 317 1 112 1 235 2 7 1 98 1 361 1 283 3 308 1 68 3 297 7 107 1 
0 4 208 1 119 1 136 1 247 2 293 1 317 1 112 1 235 2 7 1 98 1 361 1 103 1 283 3 308 1 68 3 297 7 107 1 
0 16 165 1 208 1 93 1 264 1 119 5 365 1 265 4 181 1 348 1 235 3 98 1 7 1 214 1 236 3 303 1 275 3 276 3 308 4 68 15 128 1 107 1 334 1 74 1 293 2 136 4 247 5 317 2 112 2 360 2 361 2 283 10 57 3 297 31 
0 5 208 1 264 2 119 1 365 2 181 2 235 2 98 1 34 1 64 1 308 1 128 2 68 4 107 1 74 1 136 1 247 3 293 1 317 1 112 1 360 4 361 1 283 4 297 9 
88 1 206 1 260 1 62 1 346 1 347 1 234 1 267 1 269 1 329 2 368 1 332 1 66 1 10 1 171 1 278 1 189 1 371 1 352 1 71 1 110 2 156 1 292 1 248 1 199 1 53 1 377 1 295 1 85 2 58 1 
88 1 206 1 260 1 62 2 346 1 347 1 234 1 267 1 329 3 368 1 332 1 66 1 240 1 10 1 171 1 189 1 371 1 352 1 71 1 17 1 110 2 156 1 292 1 248 1 201 1 53 1 377 1 295 1 85 3 58 1 
88 1 206 1 260 1 62 2 347 1 234 1 267 1 329 2 368 1 332 1 66 1 240 1 171 1 189 1 371 1 71 1 17 1 110 2 156 1 292 1 248 1 295 1 377 1 85 2 58 1 
342 1 88 2 234 1 211 1 124 1 329 1 8 1 171 1 371 2 352 1 243 1 354 1 335 1 156 2 292 1 248 1 201 1 53 1 295 1 24 1 56 1 85 1 58 2 
88 1 206 1 260 1 346 1 347 1 234 1 329 1 368 1 332 1 10 1 171 1 278 1 189 1 371 1 352 1 17 1 110 2 156 1 292 1 248 1 199 1 53 1 377 1 295 1 85 1 58 1 
299 1 
259 2 261 1 4 1 5 2 211 1 167 1 168 1 65 2 8 1 270 1 272 1 126 4 307 2 219 5 171 1 13 1 279 2 130 1 354 1 134 2 356 1 358 1 20 1 174 1 175 1 22 4 24 2 141 1 142 2 25 3 26 1 363 1 323 1 285 1 91 3 232 1 364 2 95 1 234 2 151 6 184 1 372 2 335 1 47 2 292 2 248 2 48 1 200 1 251 2 52 5 252 1 113 1 54 1 295 1 378 1 
323 1 285 1 91 2 166 1 167 1 168 1 270 1 272 1 126 2 151 2 184 1 219 3 13 1 356 1 47 1 48 1 174 1 175 1 22 2 52 3 113 1 141 1 25 1 363 1 
323 1 285 1 91 2 356 1 5 1 167 1 48 1 174 1 175 1 22 3 168 1 52 2 113 1 141 1 270 1 272 1 126 2 184 1 219 2 13 1 363 1 
323 1 285 1 91 3 166 1 5 1 167 1 168 1 270 1 272 1 126 3 151 2 184 1 219 3 13 1 356 1 47 1 48 1 174 1 175 1 22 3 52 3 251 1 113 1 141 1 25 1 363 1 
259 2 4 1 166 1 5 3 167 2 123 1 168 1 65 2 270 1 272 1 126 4 306 1 307 2 219 5 310 1 13 1 279 2 130 1 312 1 356 2 174 1 175 1 138 1 22 5 141 1 142 1 25 3 363 2 323 2 285 1 91 4 232 1 364 2 95 1 366 1 102 1 183 1 37 1 151 7 184 1 186 1 372 1 47 4 338 1 48 1 52 5 251 4 113 1 252 1 54 1 115 1 
259 2 261 1 4 1 5 2 167 1 168 1 65 2 270 1 272 1 126 4 307 2 219 4 13 1 279 2 130 1 356 1 134 2 174 1 175 1 22 4 141 1 142 1 25 2 363 1 323 1 285 1 91 3 232 1 364 2 95 1 151 4 184 1 372 1 47 2 48 1 52 4 251 2 113 1 252 1 54 1 
259 2 323 1 285 1 91 3 232 1 4 1 364 2 5 2 95 1 167 1 366 1 168 1 65 2 270 1 272 1 151 4 306 1 126 3 307 2 184 1 219 4 13 1 279 2 130 1 372 1 356 1 47 2 48 1 174 1 175 1 22 4 251 2 52 4 113 1 252 1 54 1 141 1 142 1 25 2 115 1 363 1 
259 2 323 1 285 1 91 3 232 1 4 1 364 2 5 2 95 1 167 1 366 1 168 1 65 2 270 1 272 1 151 4 306 1 126 3 307 2 184 1 219 4 13 1 279 2 130 1 372 1 356 1 47 2 48 1 174 1 175 1 22 4 251 2 52 4 113 1 252 1 54 1 141 1 142 1 25 2 115 1 363 1 
259 2 323 1 285 1 164 1 91 3 61 1 4 1 5 2 95 1 96 1 167 1 168 1 125 2 65 2 270 1 272 1 151 4 306 1 126 3 184 1 219 4 13 1 130 1 372 1 134 2 356 1 47 2 48 1 174 1 175 1 22 4 251 2 52 4 113 1 252 1 54 1 141 1 142 1 25 2 204 2 363 1 
259 2 323 1 285 1 91 3 232 1 4 1 364 2 95 1 5 3 167 1 366 1 168 1 65 2 270 1 37 1 272 1 306 1 126 3 151 5 307 2 184 1 219 4 13 1 279 2 130 1 372 1 356 1 47 3 48 1 174 1 175 1 22 5 52 4 251 3 252 1 113 1 54 1 141 1 142 1 25 2 115 1 363 1 
259 2 323 1 285 1 91 3 232 1 4 1 364 2 95 1 5 3 167 1 366 1 168 1 65 2 270 1 37 1 272 1 306 1 126 3 151 5 307 2 184 1 219 4 13 1 279 2 130 1 372 1 356 1 47 3 48 1 174 1 175 1 22 5 52 4 251 3 252 1 113 1 54 1 141 1 142 1 25 2 115 1 363 1 
259 2 261 1 4 1 5 2 167 1 168 1 65 2 125 2 270 1 272 1 126 3 219 4 13 1 130 1 356 1 134 2 174 1 175 1 22 4 141 1 142 1 25 2 363 1 323 1 285 1 91 3 96 1 95 1 151 4 184 1 372 1 47 2 48 1 52 4 251 2 113 1 252 1 54 1 204 2 
0 3 208 1 264 1 365 1 181 1 301 2 235 1 98 1 122 1 308 1 170 1 128 1 68 3 107 1 290 1 44 1 293 1 247 2 136 1 317 1 294 1 51 1 360 2 283 2 297 6 258 1 
0 8 31 1 119 1 264 2 265 3 365 2 301 1 181 2 367 1 122 11 214 1 236 1 304 1 274 1 275 3 276 2 308 2 40 1 68 6 128 2 170 4 334 1 44 2 247 1 136 1 80 1 51 1 360 4 340 1 283 2 57 2 297 14 258 11 
323 1 0 1 207 1 3 1 264 1 234 1 365 1 301 1 181 1 367 1 8 1 152 1 351 1 186 1 170 1 128 1 68 1 40 1 171 1 220 1 41 1 224 1 335 1 44 1 356 2 46 1 18 1 292 1 280 1 248 1 138 1 51 1 360 2 295 1 24 1 340 1 297 2 363 2 
0 10 208 1 300 2 264 3 119 4 301 2 122 7 8 2 276 2 351 2 67 2 308 3 68 10 128 3 170 7 171 2 224 2 17 1 356 3 18 1 280 1 136 3 317 1 138 1 360 6 140 1 24 1 283 8 363 3 323 1 234 3 365 3 181 3 182 1 235 1 367 1 98 1 236 2 152 2 186 1 40 1 107 1 187 2 242 1 335 2 44 3 46 2 292 3 293 1 247 4 248 3 337 2 51 3 250 2 295 2 340 1 57 2 297 20 258 7 
323 1 0 1 178 1 210 1 264 2 234 7 365 2 181 2 211 1 349 1 169 1 269 1 8 3 186 1 128 2 40 1 68 1 171 2 311 1 108 1 354 1 17 1 335 2 44 2 356 1 292 8 280 1 248 8 294 1 138 1 51 2 360 4 295 2 24 2 340 1 163 1 297 2 363 1 341 2 
323 1 0 1 264 1 365 1 326 1 181 1 367 1 122 1 236 1 276 1 186 1 308 1 170 1 128 1 68 2 133 1 44 1 356 1 247 1 136 1 338 1 138 1 51 1 360 2 283 1 57 1 297 3 258 1 363 1 
0 2 44 1 119 1 264 1 365 1 181 1 157 1 122 1 294 1 51 1 360 2 283 1 57 1 308 1 170 1 297 2 128 1 258 1 
44 1 264 1 365 1 247 1 181 1 327 1 136 1 122 1 294 1 236 1 51 1 360 2 283 1 170 1 297 2 128 1 68 2 258 1 
0 2 264 1 119 1 365 1 181 1 122 2 236 1 276 1 308 1 128 1 170 2 68 2 44 1 136 1 247 1 294 1 51 1 360 2 283 2 57 1 297 4 258 2 
0 2 178 1 44 1 119 1 264 1 365 1 181 1 157 1 122 1 51 1 360 2 283 1 57 1 308 1 170 1 297 2 128 1 258 1 
178 1 44 1 264 1 365 1 247 1 181 1 327 1 136 1 122 1 236 1 51 1 360 2 283 1 170 1 297 2 128 1 68 2 258 1 
0 2 178 1 264 1 119 1 365 1 181 1 122 2 236 1 276 1 308 1 128 1 170 2 68 2 44 1 136 1 247 1 51 1 360 2 283 2 57 1 297 4 258 2 
0 2 264 1 119 1 365 1 181 1 122 2 236 1 276 1 308 1 128 1 170 2 68 2 44 1 136 1 247 1 51 1 360 2 283 2 57 1 297 4 258 2 
0 1 264 1 234 1 365 1 301 1 181 1 8 1 152 1 351 1 40 1 128 1 68 1 171 1 224 1 335 1 44 1 356 1 46 1 292 1 248 1 250 1 51 1 360 2 295 1 24 1 340 1 297 2 363 1 
0 1 344 1 264 1 234 1 365 1 301 1 181 1 8 1 104 1 152 1 351 1 40 1 128 1 68 1 171 1 291 1 335 1 44 1 356 1 292 1 248 1 51 1 360 2 295 1 24 1 340 1 297 2 363 1 
0 2 264 1 119 1 365 1 181 1 367 1 122 2 236 1 276 1 308 1 128 1 170 2 68 2 44 1 136 1 247 1 51 1 360 2 283 2 57 1 297 4 258 2 
0 2 300 1 119 1 264 1 234 1 365 1 181 1 122 2 236 1 269 1 8 1 152 1 276 1 351 1 308 1 68 2 170 2 128 1 171 1 224 1 335 1 44 1 356 1 46 1 292 1 247 1 136 1 248 1 250 1 51 1 360 2 295 1 283 2 57 1 297 4 258 2 363 1 
323 1 0 2 325 1 119 1 264 1 365 1 181 1 367 1 122 1 236 1 276 1 186 1 308 1 68 1 128 1 170 1 133 1 44 1 356 1 136 1 338 1 138 1 51 1 360 2 283 1 57 1 297 3 363 1 258 1 
343 1 0 9 324 1 147 1 264 2 119 3 265 2 365 2 181 2 214 1 236 3 64 1 330 2 275 1 276 3 308 3 128 2 68 10 334 1 313 2 247 3 136 3 159 1 137 1 50 1 82 1 360 4 283 6 57 3 297 19 
343 1 0 14 147 2 119 2 264 3 365 3 265 2 181 3 6 1 236 2 64 1 330 1 275 2 276 3 308 3 68 12 128 3 277 1 334 2 129 1 74 2 313 4 315 1 247 2 136 2 357 1 159 1 137 2 50 1 360 6 84 1 283 4 57 3 297 26 
0 20 343 1 208 1 119 4 264 3 265 4 6 1 214 1 64 1 276 4 275 3 308 5 68 21 128 3 277 1 129 1 74 1 313 4 315 1 136 5 357 1 317 1 137 1 360 6 84 1 283 8 324 1 147 2 365 3 181 3 235 1 98 1 236 4 35 1 330 1 107 1 334 3 247 4 293 1 159 1 50 1 57 4 297 41 
343 1 0 20 324 1 208 1 147 2 264 4 119 3 265 4 365 4 6 1 181 4 235 1 98 1 214 1 236 3 35 1 64 1 330 1 275 3 276 4 308 5 128 4 68 18 107 1 277 1 129 1 334 3 74 2 313 4 315 1 293 1 247 4 136 4 317 1 357 1 159 1 137 1 50 1 360 8 84 1 283 7 57 4 297 38 
343 1 0 27 208 1 147 1 264 2 119 7 265 4 365 2 6 1 181 2 235 1 98 1 214 2 236 7 64 1 330 1 274 2 275 4 276 7 308 8 128 2 68 25 107 1 277 1 129 1 334 2 74 1 313 4 315 1 293 1 247 7 136 8 317 1 357 1 159 1 137 1 50 1 360 4 84 1 283 14 57 7 297 52 
231 1 1 1 237 1 150 1 239 1 333 1 289 1 197 1 257 1 318 1 
288 1 203 1 
43 1 1 1 150 1 373 1 305 1 239 1 333 1 197 1 318 1 
231 1 1 1 222 2 132 1 197 1 318 1 52 1 150 1 218 1 239 1 126 1 296 1 333 1 219 1 289 1 257 1 153 1 322 1 
231 1 1 1 222 2 132 1 197 1 318 1 52 1 150 1 218 1 239 1 126 1 296 1 333 1 219 1 289 1 257 1 153 1 322 1 
231 1 1 1 222 2 132 1 197 1 318 1 52 1 150 1 218 1 239 1 126 1 296 1 333 1 219 1 289 1 257 1 153 1 322 1 
87 1 345 1 212 1 
87 1 345 1 212 1 
217 1 38 1 
87 1 217 1 38 1 
72 1 226 1 
323 2 1 1 301 1 302 1 150 1 288 1 9 1 239 1 333 1 186 2 219 1 12 1 241 1 222 1 132 1 72 1 356 2 194 1 226 1 197 1 318 1 19 1 138 2 52 1 203 1 363 2 322 1 
345 1 212 1 
87 1 217 1 38 1 
323 2 0 1 262 1 264 1 365 1 234 2 181 1 367 1 121 1 100 1 8 1 128 1 40 1 68 1 171 1 108 1 335 1 44 1 356 2 244 1 292 2 248 2 51 1 360 2 295 1 55 1 340 1 163 1 297 2 363 2 341 2 
88 1 260 1 110 2 17 1 347 1 292 2 180 1 234 2 248 2 282 1 269 1 377 1 295 1 368 1 332 1 273 1 10 1 171 1 189 1 
88 1 260 1 110 2 17 1 347 1 292 1 234 1 248 1 377 1 368 1 295 1 332 1 273 1 10 1 171 1 11 1 189 1 
342 1 88 1 354 1 335 1 292 1 234 1 248 1 211 1 282 1 295 1 8 1 24 1 228 1 171 1 
88 1 260 1 110 2 17 1 347 1 292 1 180 1 234 1 248 1 282 1 377 1 295 1 368 1 332 1 273 1 10 1 171 1 189 1 
76 1 
223 1 372 1 91 1 142 1 126 1 227 1 290 1 
91 1 232 1 4 1 364 1 126 2 151 1 307 1 219 1 279 1 130 1 372 1 134 1 52 1 252 1 54 1 142 1 25 1 
117 1 118 1 4 2 213 1 8 4 271 1 126 3 276 1 67 1 308 1 219 2 171 1 13 1 279 3 130 2 172 1 225 1 134 6 136 1 81 1 24 1 142 4 25 1 26 1 286 1 29 2 234 1 236 1 152 1 151 2 372 3 335 1 292 1 248 1 161 3 52 2 252 2 295 2 54 2 162 1 57 1 116 3 379 1 
91 2 4 2 265 1 6 1 236 2 105 1 151 1 126 5 275 1 276 2 308 2 219 1 334 1 129 1 279 3 130 2 372 5 315 1 134 6 196 1 136 2 357 1 161 5 200 1 52 1 252 2 54 2 84 1 162 2 142 8 25 1 57 2 26 1 229 1 116 5 
323 1 208 1 4 1 167 1 366 1 123 1 102 1 105 1 308 2 186 1 219 1 310 1 130 1 372 2 312 1 356 1 293 1 136 1 317 1 338 1 138 1 52 1 252 1 114 1 54 1 162 2 142 2 363 1 
130 1 223 1 372 1 91 1 4 1 227 1 252 1 54 1 142 1 126 1 
372 5 134 10 136 2 161 5 236 2 162 2 142 5 105 1 276 2 126 5 57 2 67 1 308 2 116 5 279 5 
52 1 91 1 126 1 151 1 25 1 219 1 
4 1 146 1 234 4 211 1 120 2 216 1 8 1 151 4 219 3 171 1 130 2 353 1 372 2 354 1 335 1 292 4 248 4 358 1 20 1 49 1 200 2 52 3 252 2 295 1 54 2 24 2 142 2 25 2 26 2 
323 2 264 1 365 1 234 1 301 1 181 1 8 1 152 1 351 1 186 2 68 1 128 1 171 1 310 1 224 1 335 1 44 1 356 3 46 1 292 1 248 1 338 2 138 2 250 1 51 1 360 2 202 1 295 1 24 1 340 1 297 1 363 3 
130 1 372 2 91 2 4 1 134 4 235 1 161 2 200 1 252 1 54 1 142 1 126 4 26 1 116 2 279 2 
1 1 150 1 45 1 
1 1 150 1 45 1 
1 1 72 1 150 1 362 1 257 1 
1 1 150 1 45 1 
1 1 150 1 316 1 
1 1 150 1 316 1 
1 1 150 1 316 1 
1 1 150 1 
333 1 318 1 
0 4 208 1 74 1 119 1 264 2 365 2 136 1 247 2 181 2 293 1 317 1 235 1 98 1 360 4 283 3 308 1 68 4 297 8 128 2 107 1 
0 3 208 1 293 1 247 2 136 1 317 1 235 1 98 1 283 2 308 1 68 3 297 6 107 1 290 1 
0 2 264 1 119 1 365 1 247 1 136 1 181 1 236 1 360 2 331 1 283 2 276 1 57 1 308 1 68 2 128 1 297 4 
0 3 119 1 265 2 247 1 136 1 214 1 236 1 283 2 275 1 276 1 57 1 308 1 68 4 297 7 334 1 
0 11 208 1 119 4 264 2 265 2 365 2 181 2 235 1 98 1 214 1 236 2 276 2 275 2 274 1 308 3 68 12 128 2 107 1 74 2 293 2 136 3 247 5 317 2 80 1 360 4 283 9 57 2 297 23 205 1 
297 1 68 1 265 1 
0 1 275 1 297 1 
0 3 264 1 119 1 365 1 181 1 136 1 247 2 236 1 360 2 331 1 283 3 276 1 57 1 67 1 308 1 128 1 68 3 297 6 
0 6 119 1 264 1 265 1 365 1 6 1 181 1 236 2 64 1 275 1 276 2 308 2 68 6 128 1 334 1 129 1 315 1 136 2 247 1 357 1 360 2 84 1 283 2 57 2 297 12 
0 3 208 1 119 1 136 1 293 1 247 1 317 1 283 2 308 1 297 6 68 3 
0 1 74 1 119 1 264 1 365 1 247 1 293 1 181 1 317 1 98 1 360 2 283 2 68 2 297 3 128 1 107 1 205 1 
0 5 208 1 264 1 119 2 365 1 181 1 293 2 247 3 136 2 317 2 64 1 360 2 114 1 283 5 308 2 128 1 297 10 68 5 
0 2 264 1 119 1 365 1 181 1 64 1 360 2 283 1 57 1 308 1 128 1 297 2 
0 2 264 1 119 1 365 1 247 1 136 1 181 1 236 1 64 1 360 2 283 2 276 1 57 1 308 1 68 2 128 1 297 4 
0 1 324 1 74 1 264 3 119 1 365 3 181 3 293 1 247 1 317 1 64 1 360 6 283 2 68 2 297 3 128 3 205 1 
0 16 165 1 324 1 208 2 93 1 264 5 119 5 265 4 365 5 181 5 235 1 98 1 214 1 236 3 303 1 64 1 331 1 275 3 276 3 308 5 68 18 128 5 107 1 334 1 74 2 293 3 136 5 247 7 317 3 360 10 283 12 57 3 297 34 205 1 
0 4 208 1 264 1 265 1 365 1 6 1 181 1 235 1 98 1 64 1 275 1 308 1 68 4 128 1 107 1 334 1 136 1 293 1 247 2 317 1 360 2 283 2 297 8 
0 6 208 1 264 2 119 1 265 2 365 2 6 1 181 2 235 1 98 1 214 1 64 1 331 1 275 1 276 1 308 2 68 5 128 2 107 1 334 1 136 1 247 2 293 1 317 1 360 4 283 3 57 1 297 11 
0 9 208 1 119 1 264 3 265 1 365 3 6 1 181 3 235 1 98 1 236 2 64 1 331 1 275 1 276 2 308 3 68 10 128 3 107 1 334 1 129 1 74 1 315 1 293 1 136 3 247 3 317 1 357 1 360 6 84 1 283 4 57 2 297 19 
0 10 208 1 119 2 264 3 265 1 365 3 6 1 181 3 235 1 98 1 236 1 64 1 331 1 275 1 276 2 308 3 68 7 128 3 107 1 334 1 129 1 74 1 315 1 293 1 136 2 247 3 317 1 357 1 360 6 84 1 283 5 57 2 297 17 
0 4 208 1 264 1 265 1 365 1 6 1 181 1 235 1 98 1 64 1 275 1 308 1 68 4 128 1 107 1 334 1 136 1 293 1 247 2 317 1 360 2 283 2 297 8 
0 6 119 1 264 1 265 1 365 1 6 1 181 1 236 2 64 1 275 1 276 2 308 2 68 6 128 1 334 1 129 1 315 1 136 2 247 1 357 1 360 2 84 1 283 2 57 2 297 12 
0 10 208 1 119 2 264 4 265 1 365 4 6 1 181 4 235 1 98 1 236 1 64 1 331 1 275 1 276 2 308 3 68 8 128 4 107 1 334 1 129 1 74 2 315 1 293 1 136 2 247 3 317 1 357 1 360 8 84 1 283 5 57 2 297 18 
0 9 324 1 119 3 264 4 265 1 365 4 6 1 181 4 236 2 64 1 275 1 276 3 308 3 68 7 128 4 334 1 129 1 74 2 315 1 136 2 247 3 357 1 360 8 84 1 283 6 57 3 297 16 
0 3 208 1 119 3 136 1 293 3 247 3 317 3 98 1 283 6 308 1 68 4 297 7 107 2 
0 10 324 1 208 1 119 1 264 4 265 1 365 4 6 1 181 4 235 1 98 1 236 1 64 1 275 1 276 2 308 3 68 8 128 4 107 1 334 1 129 1 74 2 315 1 293 1 136 2 247 3 317 1 357 1 360 8 84 1 283 4 57 2 297 18 
285 1 298 1 14 1 
285 1 89 1 90 1 36 1 209 1 284 1 298 1 14 1 
354 1 295 1 8 1 335 1 24 1 292 1 234 1 171 1 211 1 248 1 290 1 
323 1 224 1 335 1 356 2 292 1 280 1 234 1 301 1 248 1 138 1 8 1 295 1 24 1 152 1 351 1 186 1 171 1 363 2 
323 2 2 1 234 1 301 1 167 1 120 1 168 1 8 3 270 1 152 2 351 1 186 1 171 1 224 1 335 2 356 2 292 1 280 1 248 1 138 2 295 1 86 1 363 2 
323 2 2 1 344 1 234 2 301 1 167 1 120 1 168 1 8 3 270 1 152 2 351 1 186 1 309 1 171 1 335 2 356 2 292 2 280 1 248 2 138 2 295 1 86 1 363 2 
323 1 2 1 91 1 29 1 234 1 167 1 120 1 213 1 123 1 102 1 8 4 151 1 152 1 126 1 186 1 219 2 171 1 310 1 13 1 312 1 191 1 335 1 356 1 292 1 248 1 338 1 376 1 138 1 52 2 295 1 86 1 363 1 
323 1 2 1 286 1 91 1 29 1 234 1 167 1 120 1 213 1 123 1 102 1 8 4 151 1 152 1 126 1 186 1 219 2 171 1 310 1 13 1 312 1 335 1 356 1 292 1 248 1 338 1 138 1 52 2 295 1 86 1 363 1 
295 1 210 1 292 1 234 1 171 1 248 1 
17 1 335 2 210 1 245 1 292 7 234 6 248 7 78 1 349 1 169 1 269 1 8 3 295 3 24 2 152 1 163 1 171 2 311 1 256 1 379 1 341 1 
0 3 208 1 300 1 264 2 301 2 121 1 122 1 269 1 8 1 351 1 308 1 170 1 128 2 68 3 171 1 224 1 356 2 280 1 136 1 317 1 138 1 360 4 283 2 363 2 323 1 234 1 365 2 181 2 367 1 235 1 98 1 152 1 186 1 107 1 335 1 44 2 46 1 292 1 337 1 248 1 293 1 247 2 250 1 51 2 295 1 297 6 258 1 
208 1 118 1 4 2 167 1 213 1 123 1 8 2 271 1 9 1 126 2 308 2 219 3 310 1 13 1 130 2 223 1 312 1 172 1 356 1 136 2 227 1 317 1 138 1 24 1 142 4 25 1 363 1 323 1 286 1 91 2 29 1 234 1 102 1 105 1 151 2 186 1 372 5 292 1 248 1 293 1 338 1 49 1 52 3 252 2 54 2 114 1 162 2 
117 1 335 1 210 1 292 2 234 2 248 2 213 1 269 1 8 2 295 2 152 1 171 1 379 1 
354 1 335 1 30 1 292 4 234 4 248 4 211 1 269 1 295 1 8 1 24 1 309 1 171 1 
242 1 335 1 245 1 292 2 234 2 248 2 78 1 120 1 198 1 8 1 295 2 152 1 171 1 155 1 
260 1 377 1 110 1 295 1 24 1 332 1 292 1 234 1 171 1 248 1 
17 1 335 1 292 2 234 2 248 2 269 1 8 1 295 1 55 1 163 1 171 1 
354 1 335 2 30 1 292 5 234 4 211 1 248 5 120 1 349 1 169 1 269 1 8 3 295 2 24 1 163 1 171 2 
354 1 335 2 30 1 292 5 234 4 211 1 248 5 120 1 349 1 268 1 269 1 8 3 295 2 24 1 163 1 171 2 
323 1 344 1 335 1 356 2 292 1 280 1 234 1 301 1 248 1 138 1 8 1 295 1 24 1 152 1 351 1 186 1 171 1 363 2 
335 1 245 1 292 1 234 1 248 1 78 1 120 1 8 1 295 2 152 1 171 1 256 1 379 1 
193 1 233 1 185 1 301 1 28 1 
323 1 91 1 233 1 167 2 149 1 123 1 168 1 102 1 238 1 270 1 9 1 126 1 186 1 185 1 39 1 219 2 310 1 13 1 312 1 193 1 356 1 338 1 138 1 52 2 113 1 143 1 363 1 28 1 
323 1 100 1 262 1 193 1 356 1 233 1 244 1 185 1 363 1 
233 1 143 1 39 1 
71 1 66 1 290 1 267 1 
352 1 71 1 329 1 53 1 66 1 85 1 267 1 
329 1 156 1 58 1 
352 1 71 1 314 1 173 1 135 2 267 1 53 1 329 3 66 1 85 3 278 1 221 1 
352 1 71 1 329 2 53 1 66 1 62 1 85 2 374 1 267 1 
352 1 110 1 347 1 158 1 53 1 329 1 377 1 254 1 66 1 85 1 278 1 
352 1 329 1 53 1 66 1 85 1 267 1 278 1 
352 1 71 1 329 1 53 1 85 1 267 2 278 1 
15 1 352 2 192 1 267 1 139 1 53 2 329 2 66 1 85 2 278 1 
352 1 71 1 109 1 62 2 267 1 53 1 329 3 254 1 66 2 85 3 255 1 27 1 278 1 
352 1 71 1 110 2 62 1 347 1 267 1 281 1 53 1 329 2 377 1 332 1 66 1 85 2 278 1 189 1 
352 2 71 1 62 2 374 1 97 1 267 1 53 2 329 4 254 1 66 2 85 4 27 1 278 1 
352 1 71 1 329 1 53 1 66 1 85 1 267 1 278 1 
352 1 71 2 314 1 62 2 135 1 267 2 253 1 329 4 53 1 254 1 66 3 85 4 27 1 221 1 
352 1 60 1 71 1 73 1 62 1 267 1 53 1 329 2 66 1 85 2 321 1 278 1 
352 1 71 1 314 2 135 2 267 1 53 1 329 3 66 1 127 1 85 3 221 1 278 1 
92 1 66 2 32 2 69 1 
352 1 329 1 53 1 75 1 85 1 278 1 
352 1 71 1 329 2 53 1 66 1 62 1 85 2 255 1 267 1 278 1 
266 1 
352 1 71 1 329 1 53 1 66 1 85 1 267 1 278 1 
352 1 71 1 62 1 135 1 267 1 53 1 329 3 66 1 85 3 255 1 278 1 
253 1 254 1 66 1 27 1 
66 1 267 1 

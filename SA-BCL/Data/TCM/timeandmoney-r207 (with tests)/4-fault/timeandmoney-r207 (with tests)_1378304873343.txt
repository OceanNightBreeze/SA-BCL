#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (212,330) (212,330) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (227,239,292) (227,239,292) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 174 224 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 118 260 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 189 69 361 246 265 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 189 69 361 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 189 69 361 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 189 69 361 246 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 189 69 361 246 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 49 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 208 (263,335) 27 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 332 25 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (212,330) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 118 260 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (212,330) (212,330) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 336 2 73 1 276 1 164 6 3 3 279 1 309 1 357 2 253 2 216 1 316 9 258 1 144 2 234 1 53 1 235 1 221 9 320 1 18 1 296 2 298 5 155 4 65 2 207 1 349 1 93 1 274 1 
0 2 73 1 336 2 276 1 164 6 3 3 279 1 309 1 357 2 253 2 216 1 316 9 258 1 144 2 234 1 53 1 235 1 221 9 320 1 18 1 296 2 298 5 155 4 65 2 207 1 349 1 93 1 274 1 
0 2 73 1 336 2 276 1 164 7 3 4 279 1 309 1 357 2 253 2 216 1 316 10 258 1 144 2 234 1 53 1 235 1 221 10 320 1 18 1 296 2 298 6 155 5 65 2 207 1 349 1 93 1 274 1 
0 2 73 1 336 1 276 1 164 4 3 2 279 1 309 1 357 2 253 2 216 1 316 7 258 1 144 2 234 1 53 1 235 1 221 7 320 1 18 1 296 2 298 4 155 3 65 2 207 1 349 1 274 1 
0 1 336 2 164 3 3 1 279 1 296 1 357 1 253 1 298 3 155 2 258 1 316 4 349 1 144 1 93 1 221 4 320 1 274 1 
0 1 116 1 296 1 357 1 298 1 244 1 216 1 65 1 217 1 207 1 258 1 316 2 349 1 144 1 221 2 274 1 
0 2 164 1 3 1 309 1 296 2 298 2 155 1 65 1 258 1 316 3 349 1 221 3 274 1 
0 2 73 1 336 2 164 7 3 3 309 1 279 1 310 1 357 1 253 1 316 9 258 1 234 1 144 1 221 9 320 1 296 2 298 5 155 4 183 1 65 1 349 1 93 1 274 1 
0 2 73 1 336 2 164 7 3 3 309 1 279 1 310 1 357 1 253 1 316 9 258 1 234 1 144 1 221 9 320 1 296 2 298 5 155 4 183 1 65 1 349 1 93 1 274 1 
49 1 129 1 308 1 
173 2 284 1 308 1 
114 2 329 2 132 2 66 2 123 1 108 2 278 1 333 2 
28 2 74 1 114 2 303 1 43 1 2 1 278 1 281 1 47 1 31 2 48 1 314 1 123 1 176 2 34 1 126 1 321 1 60 2 241 1 343 1 201 1 180 1 107 1 324 1 108 3 90 1 297 1 130 2 110 1 345 1 329 2 132 2 66 2 247 1 273 1 333 3 187 1 
114 1 205 1 329 1 132 1 66 1 30 1 123 1 139 1 108 1 333 1 
129 1 30 1 96 1 181 1 4 1 108 1 308 1 266 1 233 1 329 1 257 1 333 1 26 1 87 1 
114 1 129 1 30 1 96 2 181 2 108 1 308 1 266 1 66 1 132 1 329 1 257 1 333 1 26 1 87 1 
269 1 96 1 191 1 181 1 109 1 
269 1 129 1 96 2 181 2 109 1 308 1 249 1 232 1 
269 1 96 1 181 1 
114 1 30 1 96 1 139 1 181 1 109 1 108 1 22 1 205 1 66 1 132 1 329 1 123 1 333 1 
308 1 
269 1 129 1 96 2 181 2 109 1 308 1 300 1 249 1 
137 1 212 1 129 1 96 5 181 5 305 1 109 2 308 1 5 2 252 1 141 1 122 1 269 2 193 1 330 1 142 1 317 2 159 2 249 1 
49 1 278 1 
114 1 108 2 278 2 226 1 329 2 66 1 132 1 272 1 333 2 
188 1 156 1 13 1 
28 1 74 1 60 1 180 1 324 1 107 1 108 1 2 1 278 1 90 1 356 1 297 1 31 1 48 1 333 1 126 1 
28 1 74 1 114 1 60 1 180 1 95 1 107 1 324 1 108 2 2 1 90 1 297 1 153 1 156 1 48 1 31 1 132 1 329 1 333 2 126 1 
114 3 66 1 329 3 132 3 95 1 108 3 278 1 333 3 
114 1 329 1 132 1 30 1 139 1 108 1 333 1 
114 1 329 1 132 1 66 1 30 1 108 1 272 1 226 1 333 1 
28 1 74 1 114 3 303 1 43 1 30 1 95 1 96 1 2 1 278 1 48 1 31 1 314 1 257 1 123 1 176 2 126 1 87 1 60 1 241 1 343 1 201 1 180 1 107 1 324 1 181 1 108 4 90 1 266 1 297 1 20 1 153 1 130 1 110 1 345 1 66 2 329 3 132 3 247 1 273 1 272 1 333 4 26 1 334 1 
114 1 329 2 132 1 219 1 95 1 108 2 278 1 333 2 233 1 
114 3 30 1 96 1 95 2 181 1 108 3 308 1 266 1 153 1 20 1 184 1 66 1 132 3 329 3 257 1 272 1 333 3 26 1 87 1 
188 1 114 2 95 1 108 2 156 1 66 1 132 2 329 2 272 1 333 2 
28 1 74 1 60 1 180 1 324 1 107 1 108 1 2 1 278 1 90 1 297 1 31 1 48 1 333 1 126 1 
28 1 74 1 60 1 180 1 324 1 107 1 108 1 278 1 90 1 297 1 6 1 31 1 48 1 333 1 186 1 
188 2 43 1 117 1 76 1 306 1 140 1 170 1 13 2 176 2 363 1 34 2 237 1 15 1 59 1 200 1 241 2 343 1 201 1 19 1 110 1 345 1 130 4 156 2 273 1 
114 1 17 1 329 1 132 1 30 1 108 1 266 1 333 1 
231 1 114 4 95 2 108 5 278 1 153 1 233 1 132 4 329 5 66 1 219 1 272 1 333 5 105 1 
114 2 17 1 329 2 132 2 30 1 139 1 108 2 333 2 
239 1 50 1 
239 1 50 1 
204 1 227 1 
204 1 227 1 
204 1 227 1 
239 1 50 1 111 1 
239 1 50 1 111 1 
239 2 50 2 204 1 227 1 
239 1 50 1 292 1 
239 1 50 1 111 1 
239 1 50 1 38 1 
239 1 50 1 38 1 
239 1 50 1 38 1 
161 2 239 2 94 1 240 2 96 2 181 2 64 1 308 1 294 1 166 1 338 1 21 1 312 2 50 2 218 1 195 2 179 1 178 2 198 3 
161 1 114 2 96 1 97 1 307 1 278 1 192 1 167 1 50 1 195 1 220 1 178 1 198 1 292 1 239 1 240 1 181 1 108 2 294 1 203 1 270 1 132 2 329 2 333 2 
144 1 357 1 253 1 
116 1 144 1 357 1 
116 1 242 1 357 3 236 1 253 2 346 1 
116 1 54 1 357 2 236 1 253 1 346 1 
116 1 357 2 253 1 236 2 346 1 
42 1 129 1 149 1 96 4 181 4 109 3 308 1 5 1 267 1 311 1 269 1 122 1 193 1 174 1 317 1 159 1 249 1 302 1 
129 1 149 1 96 4 181 4 191 1 151 1 109 3 308 1 5 1 121 1 311 1 358 1 122 1 269 2 193 1 174 1 317 1 159 1 249 1 
42 1 96 2 181 2 109 1 5 1 311 1 193 1 142 1 174 1 317 1 159 1 302 1 
42 1 96 1 181 1 5 1 311 1 193 1 142 1 174 1 317 1 159 1 302 1 224 1 
49 1 90 1 86 1 
106 1 90 1 
211 1 
74 1 90 1 
74 1 107 1 86 2 90 3 280 1 254 1 
74 1 107 1 90 1 
328 1 90 1 
162 1 1 1 241 3 306 1 76 1 19 3 119 2 140 2 325 1 268 1 130 7 23 1 365 1 34 4 35 1 342 1 72 1 
162 1 1 1 241 3 306 1 76 1 19 3 119 2 140 2 325 1 268 1 130 7 23 1 365 1 34 4 35 1 342 1 72 1 
162 1 1 1 241 3 306 1 76 1 19 3 119 2 140 2 325 1 268 1 130 7 23 1 68 1 365 1 34 4 35 1 342 1 72 1 
162 2 1 1 43 1 76 4 306 4 119 3 140 5 359 3 7 1 51 1 175 1 287 1 176 2 365 1 34 16 35 5 342 2 58 4 15 3 59 3 241 15 343 1 19 10 295 3 62 1 325 1 268 2 130 31 110 1 23 1 271 1 273 1 332 1 72 2 
162 1 1 1 43 2 306 1 76 1 119 2 140 3 84 1 287 1 176 4 34 5 365 1 35 1 342 1 241 4 343 2 19 4 368 1 110 2 130 9 268 1 23 1 273 2 72 1 
28 1 0 1 116 1 163 1 164 1 357 2 253 1 31 1 48 1 316 2 258 1 144 1 196 1 221 2 56 1 125 1 127 1 147 1 60 1 324 1 296 1 242 1 298 1 154 1 65 1 158 1 349 1 351 1 248 1 274 1 
28 1 0 1 116 1 29 1 163 1 164 2 357 2 253 1 80 1 31 1 48 1 316 3 144 1 196 1 221 3 127 1 147 1 60 1 324 1 242 1 296 1 298 1 154 1 65 1 158 1 349 1 351 1 350 1 248 1 274 1 
28 1 116 1 163 1 164 2 357 2 253 1 80 1 31 1 48 1 316 2 144 1 196 1 221 2 127 1 147 1 60 1 324 1 242 1 298 1 65 1 349 1 351 1 350 1 248 1 274 1 
28 1 0 1 74 1 354 1 29 1 45 1 120 1 48 1 31 1 316 1 221 1 196 2 127 2 148 1 60 1 324 1 296 1 90 1 297 1 65 2 348 1 351 2 24 1 
28 1 147 1 0 1 116 1 60 1 163 1 324 1 242 1 296 1 357 2 253 1 154 1 80 1 48 1 65 1 31 1 158 1 258 1 316 1 144 1 248 1 351 1 221 1 196 1 125 1 127 1 
275 1 
28 1 60 1 96 1 118 1 181 1 5 1 297 1 311 1 31 1 122 1 193 1 317 1 260 1 159 1 
30 1 96 3 181 3 4 1 108 1 214 1 266 1 233 1 269 2 255 1 171 1 257 1 329 1 133 1 319 2 288 1 300 1 26 1 333 1 249 1 301 1 87 1 
129 1 30 1 96 3 181 3 4 1 108 1 308 1 214 1 266 1 233 1 269 1 255 1 171 1 329 1 257 1 133 1 319 3 209 1 300 1 26 1 333 1 249 1 301 1 87 1 
30 1 96 3 4 1 214 1 308 1 215 1 233 1 255 1 171 1 257 1 319 3 288 1 87 1 129 1 181 3 108 1 266 1 269 2 329 1 133 1 209 1 300 1 333 1 26 1 249 1 301 1 
189 1 337 1 30 1 96 3 4 1 214 1 5 1 215 2 141 1 233 1 122 1 8 1 255 1 193 1 361 1 171 1 257 1 317 1 319 2 288 2 177 1 87 1 181 3 108 1 265 1 266 1 269 3 329 1 133 1 246 1 69 1 159 1 160 1 113 1 300 1 333 1 26 1 249 1 301 1 
189 1 337 1 30 1 96 2 4 1 214 1 5 1 141 1 233 1 122 1 255 1 8 1 193 1 171 1 257 1 317 1 319 2 177 1 87 1 181 2 108 1 266 1 329 1 133 1 159 1 113 1 333 1 26 1 301 1 
189 1 337 1 30 1 96 2 4 1 214 1 5 1 141 1 233 1 122 1 8 1 255 1 193 1 171 1 361 1 257 1 317 1 319 2 177 1 87 1 181 2 108 1 266 1 329 1 133 1 69 1 160 1 159 1 113 1 333 1 26 1 301 1 
189 1 337 1 30 1 96 2 4 1 214 1 5 1 141 1 233 1 122 1 8 1 255 1 193 1 171 1 361 1 257 1 317 1 319 2 177 1 87 1 181 2 108 1 266 1 329 1 133 1 69 1 160 1 159 1 113 1 333 1 26 1 301 1 
189 1 30 1 96 4 4 1 308 1 214 1 5 1 215 2 141 1 233 1 81 1 122 1 255 1 193 1 171 1 257 1 173 2 11 2 317 1 319 4 288 2 177 2 223 2 87 1 129 1 181 4 108 1 266 1 243 1 269 4 329 1 133 1 69 1 228 1 209 2 159 1 113 2 333 1 26 1 249 2 301 1 
189 1 337 1 30 1 96 2 4 1 214 1 5 1 215 1 141 1 233 1 122 1 8 1 255 1 193 1 171 1 361 1 257 1 317 1 319 3 288 1 177 1 87 1 181 2 108 1 266 1 269 1 329 1 133 1 246 1 69 1 159 1 160 1 209 1 113 1 333 1 26 1 301 1 
189 1 337 1 30 1 96 2 4 1 214 1 5 1 215 1 141 1 233 1 122 1 8 1 255 1 193 1 171 1 361 1 257 1 317 1 319 3 288 1 177 1 87 1 181 2 108 1 266 1 269 1 329 1 133 1 246 1 69 1 159 1 160 1 209 1 113 1 333 1 26 1 301 1 
189 1 30 1 96 4 4 1 308 1 214 1 5 1 215 2 141 1 233 1 122 1 255 1 193 1 171 1 257 1 173 2 11 2 317 1 319 4 288 2 177 2 223 2 87 1 129 1 181 4 108 1 266 1 269 4 206 1 329 1 133 1 228 1 209 2 159 1 113 2 333 1 26 1 249 2 301 1 
188 1 200 1 162 1 1 1 241 3 43 1 343 1 201 1 306 1 76 1 19 2 119 1 278 2 140 2 130 6 345 1 110 1 268 1 156 1 49 1 23 1 13 1 176 2 273 1 34 3 365 1 
188 4 43 2 76 2 306 1 278 1 140 1 99 1 359 2 314 1 13 11 175 1 289 1 176 4 34 8 35 1 58 3 15 2 59 1 241 6 343 2 201 2 19 2 295 3 152 1 110 2 345 1 130 14 91 1 156 11 331 1 332 1 273 2 187 1 
28 1 188 1 74 1 114 1 43 1 95 1 2 1 278 1 356 1 100 1 79 1 48 1 31 1 314 1 176 2 34 1 126 1 60 1 241 1 343 1 180 1 201 1 36 1 107 1 324 1 108 2 90 1 152 1 297 1 153 1 110 1 345 1 130 2 329 1 132 1 273 1 333 2 187 1 
188 7 335 2 1 1 43 3 95 1 2 2 278 2 140 4 48 2 339 1 13 7 291 2 15 2 238 2 59 2 60 3 241 10 343 3 201 3 107 2 19 8 108 3 152 1 297 1 153 1 345 3 110 3 156 7 23 1 210 1 28 3 162 1 114 1 74 2 355 2 303 2 306 3 76 3 119 1 80 1 359 2 31 3 314 1 176 6 365 1 34 10 35 4 126 2 180 2 324 2 90 2 268 1 130 20 132 1 329 1 273 3 333 3 187 1 229 1 
136 1 28 7 114 1 74 2 43 2 95 1 45 1 47 2 80 1 48 2 31 8 314 1 256 1 176 4 34 1 56 1 200 1 60 8 241 1 343 2 201 2 61 1 324 2 225 1 108 1 367 1 63 1 90 3 297 2 110 2 345 2 130 2 329 1 132 1 273 2 24 1 333 1 134 1 187 1 
188 1 114 1 43 1 76 1 306 1 140 1 168 1 359 1 13 1 176 2 34 1 15 1 59 1 241 2 343 1 201 1 19 1 108 1 152 1 110 1 345 1 130 3 156 1 66 1 132 1 329 1 272 1 273 1 333 1 
188 1 15 1 200 1 43 1 343 1 201 1 19 1 76 1 130 2 345 1 110 1 156 1 13 1 176 2 273 1 363 1 34 2 35 1 
188 1 200 1 59 1 241 2 43 1 343 1 201 1 19 1 306 1 140 1 130 2 345 1 110 1 156 1 170 1 13 1 176 2 273 1 
188 2 43 1 76 1 306 1 140 1 359 1 13 2 176 2 34 2 35 1 15 1 200 1 59 1 241 2 343 1 201 1 19 2 110 1 345 1 130 4 156 2 273 1 
188 1 15 1 43 1 343 1 201 1 19 1 76 1 63 1 130 2 345 1 110 1 156 1 13 1 176 2 273 1 363 1 34 2 35 1 
188 1 59 1 241 2 43 1 343 1 201 1 19 1 306 1 140 1 63 1 130 2 345 1 110 1 156 1 170 1 13 1 176 2 273 1 
188 2 43 1 76 1 306 1 140 1 359 1 13 2 176 2 34 2 35 1 15 1 59 1 241 2 343 1 201 1 19 2 63 1 110 1 345 1 130 4 156 2 273 1 
188 2 43 1 76 1 306 1 140 1 359 1 13 2 176 2 34 2 35 1 15 1 59 1 241 2 343 1 201 1 19 2 130 4 110 1 345 1 156 2 273 1 
28 1 74 1 303 1 43 1 2 1 278 1 48 1 31 1 314 1 176 2 34 1 126 1 60 1 241 1 343 1 180 1 201 1 107 1 324 1 108 1 90 1 297 1 130 2 345 1 110 1 273 1 333 1 187 1 
28 1 74 1 43 1 278 1 6 1 48 1 31 1 314 1 176 2 34 1 60 1 241 1 343 1 180 1 201 1 107 1 324 1 108 1 90 1 297 1 130 2 345 1 110 1 347 1 273 1 333 1 186 1 187 1 
188 2 43 1 76 1 306 1 140 1 359 1 13 2 176 2 34 2 35 1 15 1 59 1 241 2 343 1 201 1 19 2 152 1 110 1 345 1 130 4 156 2 273 1 
188 2 28 1 74 1 303 1 43 1 306 1 76 1 2 1 140 1 359 1 48 1 31 1 13 2 176 2 34 2 291 1 35 1 56 1 126 1 15 1 59 1 60 1 241 2 343 1 180 1 201 1 19 2 107 1 324 1 108 1 90 1 130 4 345 1 110 1 156 2 273 1 333 1 
188 1 114 1 43 1 306 1 76 1 359 1 13 1 176 2 261 1 34 2 35 1 15 1 59 1 241 1 343 1 201 1 19 1 108 1 152 1 110 1 345 1 130 3 156 1 66 1 132 1 329 1 272 1 273 1 333 1 
43 2 44 1 76 3 306 3 140 3 359 3 172 1 362 2 341 1 175 1 176 4 34 9 197 1 35 3 88 2 58 2 15 3 59 3 128 1 293 1 241 10 343 2 89 1 19 6 295 1 368 1 110 2 130 19 332 1 273 2 
43 3 44 1 75 1 306 2 76 3 140 2 359 3 318 1 362 4 341 1 287 2 176 6 34 14 35 2 197 2 88 1 58 2 57 1 15 3 59 2 293 1 241 12 343 3 89 2 19 4 295 2 368 1 110 3 130 26 273 3 332 2 25 1 39 1 135 1 
1 1 43 3 44 1 140 4 104 1 341 1 287 1 197 1 15 4 58 4 57 1 59 4 293 1 241 21 343 3 19 8 295 3 110 3 23 1 25 1 162 1 306 5 76 5 75 1 119 1 359 4 172 1 175 1 362 4 318 1 176 6 34 20 365 1 35 4 88 1 89 2 368 1 130 41 268 1 273 3 332 3 39 1 135 1 
162 1 1 1 43 4 44 1 75 1 76 5 306 4 119 1 140 4 359 4 172 1 104 1 318 1 362 4 341 1 175 1 287 2 176 8 365 1 34 20 197 1 35 3 88 1 57 1 58 4 15 4 59 3 293 1 241 18 343 4 89 2 19 7 295 3 368 1 268 1 110 4 130 38 23 1 332 3 273 4 25 1 39 1 135 1 
162 1 1 1 43 2 44 1 75 1 76 8 306 8 119 1 140 7 359 7 318 1 362 4 341 1 175 2 287 1 176 4 365 1 34 27 197 1 35 7 88 1 57 1 58 4 15 7 59 7 293 1 241 25 343 2 89 1 19 14 295 4 368 1 268 1 110 2 130 52 91 2 23 1 332 2 273 2 25 1 39 1 135 1 
161 1 239 1 50 1 240 1 112 1 195 1 166 1 21 1 179 1 178 1 
203 1 292 1 
161 1 322 1 239 1 50 1 240 1 202 1 195 1 37 1 178 1 
161 1 239 1 94 1 240 1 96 1 181 1 308 1 294 1 166 1 338 1 21 1 312 1 50 1 218 1 195 1 179 1 178 1 198 2 
161 1 239 1 94 1 240 1 96 1 181 1 308 1 294 1 166 1 338 1 21 1 312 1 50 1 218 1 195 1 179 1 178 1 198 2 
161 1 239 1 94 1 240 1 96 1 181 1 308 1 294 1 166 1 338 1 21 1 312 1 50 1 218 1 195 1 179 1 178 1 198 2 
111 1 323 1 12 1 
111 1 323 1 12 1 
245 1 38 1 
245 1 323 1 38 1 
97 1 307 1 
161 1 94 1 114 2 96 1 97 1 307 1 278 1 192 1 167 1 312 1 50 1 194 1 195 1 220 1 178 1 198 1 292 1 239 1 240 1 181 1 108 2 109 1 203 1 270 1 132 2 329 2 333 2 
111 1 12 1 
245 1 323 1 38 1 
28 2 74 1 43 1 165 1 47 2 48 1 31 2 314 1 102 1 285 1 286 1 176 2 34 1 124 1 60 2 241 1 343 1 201 1 324 1 108 2 367 1 90 1 152 1 110 1 345 1 130 2 329 2 273 1 333 2 134 1 187 1 
28 2 147 1 116 1 60 2 324 1 98 1 242 1 357 2 253 1 154 1 80 1 48 1 31 2 282 1 144 1 248 1 196 1 56 1 250 1 
28 1 147 1 116 1 60 1 324 1 98 1 242 1 357 2 253 1 154 1 80 1 31 1 48 1 340 1 144 1 248 1 196 1 
28 1 74 1 60 1 324 1 304 1 45 1 90 1 120 1 297 1 48 1 31 1 196 1 24 1 250 1 
28 1 147 1 116 1 60 1 324 1 98 1 242 1 357 2 253 1 154 1 80 1 48 1 31 1 282 1 144 1 248 1 196 1 250 1 
199 1 
212 1 49 1 193 1 129 1 330 1 308 1 141 1 
122 1 8 1 337 1 193 1 317 1 159 1 5 1 141 1 
106 1 28 1 74 1 60 1 263 1 324 1 107 1 90 2 5 1 297 1 311 1 254 1 327 1 48 2 31 1 122 1 193 1 208 1 317 1 159 1 27 1 
58 1 122 1 193 1 317 1 295 1 332 1 159 1 25 1 5 1 141 1 
162 1 96 1 306 1 76 2 181 1 5 1 268 1 141 2 122 1 193 1 259 1 317 1 33 1 160 1 159 1 364 2 365 1 
122 1 193 1 129 1 330 1 317 1 308 1 159 1 5 1 141 1 
15 1 59 1 150 1 76 1 306 1 308 1 141 2 359 1 193 1 173 2 284 1 71 1 
269 1 129 1 96 1 181 1 308 1 249 1 
28 1 60 1 118 1 5 1 297 1 311 1 31 1 122 1 193 1 283 1 317 1 260 1 159 1 
28 1 114 2 74 1 303 1 43 1 2 1 278 1 31 1 48 1 314 1 123 1 176 2 126 1 60 1 241 1 343 1 180 1 201 1 324 1 107 1 108 3 90 1 297 1 130 1 345 1 110 1 329 2 132 2 66 2 247 1 273 1 333 3 
114 1 30 1 139 1 308 1 5 1 311 1 122 1 193 1 317 1 123 1 129 1 108 1 22 1 205 1 66 1 132 1 329 1 159 1 333 1 
161 1 143 1 195 1 
161 1 143 1 195 1 
161 1 213 1 97 1 195 1 179 1 
161 1 143 1 195 1 
161 1 277 1 195 1 
161 1 277 1 195 1 
161 1 277 1 195 1 
161 1 195 1 
239 1 50 1 
162 1 1 1 241 4 43 2 343 2 306 1 76 1 19 3 119 1 140 2 130 8 110 2 268 1 23 1 287 1 176 4 273 2 365 1 34 4 35 1 
162 1 49 1 1 1 241 3 23 1 306 1 76 1 19 2 119 1 140 2 34 3 365 1 130 6 268 1 
15 1 59 1 241 2 43 1 343 1 306 1 19 2 76 1 140 1 110 1 130 4 359 1 290 1 176 2 273 1 34 2 35 1 
58 2 15 1 59 1 241 4 306 1 76 1 19 2 140 1 295 1 130 7 359 1 175 1 332 1 34 3 35 1 
162 2 1 1 43 2 76 3 306 3 119 1 140 5 359 2 175 1 287 2 289 1 176 4 365 1 34 11 35 4 15 2 58 2 59 2 241 12 343 2 19 9 295 2 268 2 130 23 110 2 182 1 91 1 23 1 273 2 
58 1 241 1 130 1 
295 1 34 1 130 1 
15 1 238 1 59 1 241 3 343 1 43 1 76 1 19 3 306 1 140 2 110 1 130 6 359 1 273 1 176 2 290 1 34 3 35 1 
43 1 76 2 306 2 75 1 140 1 359 2 318 1 176 2 34 6 35 1 58 1 57 1 15 2 59 2 241 6 343 1 19 2 295 1 368 1 130 12 110 1 332 1 273 1 25 1 135 1 
162 1 241 3 76 1 306 1 19 2 140 1 130 6 268 1 365 1 34 3 35 1 
162 1 1 1 241 2 43 1 343 1 19 2 140 1 268 1 130 3 110 1 182 1 23 1 287 1 176 2 273 1 34 1 35 1 
162 2 241 5 343 1 43 1 19 5 76 2 306 2 140 3 368 1 110 1 268 2 130 10 33 1 273 1 176 2 34 5 365 1 35 2 
15 1 43 1 343 1 76 1 19 1 368 1 110 1 130 2 176 2 273 1 34 2 35 1 
15 1 59 1 241 2 43 1 343 1 306 1 19 2 76 1 140 1 368 1 110 1 130 4 359 1 176 2 273 1 34 2 35 1 
162 1 241 2 43 3 343 3 19 2 140 1 368 1 130 3 110 3 268 1 182 1 172 1 287 1 176 6 273 3 34 1 35 1 
162 3 1 1 43 5 76 5 306 5 119 1 140 7 359 3 7 1 51 1 172 1 175 1 287 2 290 1 176 10 365 2 34 16 35 5 58 4 15 3 59 3 241 18 343 5 19 12 295 3 368 1 268 3 110 5 130 34 182 1 23 1 271 1 332 1 273 5 
162 1 1 1 43 1 306 1 76 1 119 1 140 2 176 2 34 4 365 1 58 1 241 4 343 1 19 2 295 1 368 1 130 8 110 1 268 1 23 1 332 1 273 1 25 1 
162 1 1 1 43 2 306 1 76 2 119 1 140 2 359 1 175 1 176 4 290 1 365 1 34 6 35 1 58 2 15 1 241 5 343 2 19 3 295 1 368 1 268 1 130 11 110 2 23 1 332 1 273 2 25 1 
162 1 1 1 43 3 75 1 76 3 306 3 119 1 140 3 359 2 318 1 287 1 290 1 176 6 365 1 34 9 35 1 58 1 57 1 15 2 59 2 241 10 343 3 19 4 295 1 368 1 268 1 130 19 110 3 23 1 332 1 273 3 25 1 135 1 
162 1 1 1 43 3 76 3 306 2 75 1 119 1 140 3 359 2 318 1 287 1 290 1 176 6 365 1 34 10 35 2 58 1 57 1 15 2 59 1 241 7 343 3 19 5 295 1 368 1 268 1 130 17 110 3 23 1 332 1 273 3 25 1 135 1 
162 1 1 1 43 1 306 1 76 1 119 1 140 2 176 2 34 4 365 1 58 1 241 4 343 1 19 2 295 1 368 1 130 8 110 1 268 1 23 1 332 1 273 1 25 1 
43 1 76 2 306 2 75 1 140 1 359 2 318 1 176 2 34 6 35 1 58 1 57 1 15 2 59 2 241 6 343 1 19 2 295 1 368 1 130 12 110 1 332 1 273 1 25 1 135 1 
162 1 1 1 43 4 75 1 76 3 306 2 119 1 140 3 359 2 318 1 287 2 290 1 176 8 365 1 34 10 35 2 58 1 57 1 15 2 59 1 241 8 343 4 19 5 295 1 368 1 268 1 130 18 110 4 23 1 332 1 273 4 25 1 135 1 
43 4 75 1 76 3 306 2 140 3 359 3 172 1 318 1 287 2 176 8 34 9 35 3 58 1 57 1 15 3 59 2 241 7 343 4 19 6 295 1 368 1 130 16 110 4 332 1 273 4 25 1 135 1 
162 3 1 1 241 4 306 1 19 6 76 1 140 3 130 7 268 3 23 2 365 1 34 3 35 3 
162 1 1 1 43 4 75 1 76 3 306 2 119 1 140 3 359 2 172 1 318 1 287 2 176 8 365 1 34 10 35 1 58 1 57 1 15 2 59 1 241 8 343 4 19 4 295 1 368 1 268 1 130 18 110 4 23 1 332 1 273 4 25 1 135 1 
329 1 262 1 219 1 108 1 278 1 333 1 233 1 
41 1 190 1 262 1 108 1 278 1 77 1 131 1 233 1 329 1 219 1 222 1 333 1 
48 1 31 1 28 1 74 1 49 1 60 1 324 1 45 1 90 1 24 1 297 1 
28 1 74 1 114 1 60 1 180 1 95 1 107 1 324 1 108 2 278 1 90 1 297 1 48 1 31 1 132 1 329 1 333 2 126 1 
28 1 74 2 114 1 60 1 30 1 180 1 95 1 107 2 324 1 108 2 278 1 266 1 90 3 48 1 31 1 328 1 132 2 329 2 26 1 333 2 353 1 126 1 230 1 
28 2 74 2 114 1 60 2 30 1 180 1 95 1 107 2 324 1 108 2 278 1 266 1 90 3 46 1 48 1 31 2 328 1 132 2 329 2 26 1 333 2 186 1 353 1 230 1 
28 3 115 1 74 1 96 2 308 1 46 1 31 3 48 1 10 1 86 1 87 1 106 1 60 3 129 1 324 1 181 2 107 1 90 4 297 1 269 1 328 1 353 1 230 1 
28 3 106 1 74 1 129 1 60 3 96 2 107 1 181 2 324 1 308 1 344 1 90 4 46 1 297 1 48 1 31 3 269 1 328 1 86 1 353 1 87 1 230 1 
48 1 31 1 28 1 60 1 324 1 225 1 
136 1 28 6 74 2 60 7 61 1 107 1 324 2 225 1 367 1 90 3 297 2 47 1 254 1 80 1 313 1 31 7 82 1 48 3 256 1 56 1 352 1 
188 1 335 1 1 1 43 2 95 1 2 1 140 2 278 2 48 1 285 1 13 1 291 1 56 1 60 1 241 3 343 2 201 2 107 1 19 2 108 2 152 1 345 2 110 2 156 1 23 1 28 1 114 1 74 1 162 1 303 1 76 1 306 1 119 1 31 1 176 4 365 1 34 3 126 1 180 1 324 1 90 1 268 1 130 6 132 1 329 1 273 2 333 2 
28 1 212 1 96 3 308 1 5 2 141 1 31 1 122 2 83 1 193 1 283 1 317 2 86 1 87 1 106 1 129 1 60 1 263 1 181 3 109 1 344 1 90 2 297 1 269 2 330 1 208 1 159 2 249 1 
28 2 74 1 60 2 107 1 324 1 225 1 90 2 254 1 327 1 31 2 48 2 86 1 56 1 
28 4 74 1 60 4 324 1 45 1 90 1 46 1 297 1 48 1 31 4 103 1 24 1 56 1 
28 2 16 1 74 1 60 2 107 1 324 1 90 1 313 1 31 2 82 1 48 2 299 1 339 1 230 1 
48 1 31 1 28 1 116 1 60 1 144 1 324 1 248 1 357 1 297 1 
48 1 31 2 28 2 74 1 60 2 324 1 367 1 90 1 124 1 56 1 80 1 
28 4 136 1 74 2 60 5 324 2 45 1 367 1 90 3 297 1 31 5 48 2 256 1 103 1 24 1 56 1 230 1 
28 4 136 1 74 2 60 5 324 2 45 1 367 1 90 3 297 1 31 5 48 2 32 1 103 1 24 1 56 1 230 1 
28 1 74 1 114 1 60 1 180 1 95 1 107 1 324 1 108 2 278 1 90 1 297 1 48 1 31 1 132 1 329 1 333 2 186 1 
28 1 74 1 60 1 107 1 324 1 90 1 254 1 313 1 31 1 82 1 48 2 352 1 230 1 
92 1 366 1 278 1 326 1 146 1 
129 1 30 1 96 2 181 2 366 2 109 1 278 1 308 1 266 1 326 2 20 1 101 1 92 2 257 1 67 1 14 1 26 1 146 1 87 1 
102 1 329 1 366 1 108 1 286 1 165 1 333 1 326 1 146 1 
101 1 14 1 146 1 
49 1 349 1 298 1 274 1 
0 1 316 1 349 1 221 1 296 1 298 1 274 1 
65 1 221 1 127 1 
0 1 296 1 298 1 216 2 157 1 360 1 258 1 316 3 349 1 221 3 40 1 274 1 
0 1 336 1 316 2 349 1 164 1 221 2 296 1 298 1 274 1 
0 1 279 1 296 1 357 1 253 1 298 1 155 1 258 1 316 1 144 1 221 1 
0 1 316 1 258 1 349 1 221 1 296 1 298 1 
0 1 316 1 258 1 349 2 221 1 296 1 274 1 
251 1 0 2 296 2 298 1 78 1 258 1 316 2 349 1 221 2 55 1 
0 1 73 1 164 2 3 1 296 1 298 2 155 1 258 1 316 3 349 1 234 1 221 3 274 1 
0 1 116 1 164 1 296 1 242 1 357 2 253 1 298 1 258 1 316 2 349 1 144 1 221 2 145 1 274 1 
0 2 336 1 164 2 3 1 296 2 298 2 155 1 258 1 316 4 349 1 93 1 221 4 274 1 
0 1 316 1 258 1 349 1 221 1 296 1 298 1 274 1 
0 1 164 2 3 1 296 1 298 3 216 1 155 1 360 1 316 4 349 2 52 1 221 4 40 1 274 2 
0 1 264 1 164 1 296 1 310 1 298 1 315 1 258 1 316 2 349 1 221 2 274 1 
0 1 296 1 298 1 216 2 360 2 258 1 316 3 349 1 221 3 185 1 40 1 274 1 
9 1 138 1 169 2 298 2 
0 1 316 1 258 1 221 1 70 1 296 1 
0 1 73 1 316 2 258 1 349 1 164 1 221 2 296 1 298 1 274 1 
85 1 
0 1 316 1 258 1 349 1 221 1 296 1 298 1 274 1 
0 1 73 1 316 3 258 1 349 1 164 1 221 3 296 1 298 1 274 1 216 1 
52 1 3 1 298 1 155 1 
349 1 298 1 

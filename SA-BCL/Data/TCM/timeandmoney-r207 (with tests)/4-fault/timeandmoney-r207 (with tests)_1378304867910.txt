#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (323,344) (246,339) (246,339) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 28 201 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (323,344) (323,344) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (323,344) (246,339) (246,339) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (323,344) (246,339) (246,339) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (323,344) (246,339) (246,339) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 28 201 229 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 108 (40,373) (40,373) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 3 26 1 195 1 40 1 251 1 373 1 167 3 310 1 108 1 205 1 275 2 13 2 82 1 
0 1 26 2 241 1 214 1 29 2 147 1 76 1 167 9 108 4 222 2 80 1 13 2 82 4 16 9 266 1 195 3 40 1 176 1 117 1 251 6 22 2 373 1 231 1 310 1 337 2 340 1 205 1 275 2 
0 1 26 2 241 1 214 1 29 2 147 1 76 1 167 9 108 4 222 2 80 1 13 2 82 4 16 9 266 1 195 3 40 1 176 1 117 1 251 6 22 2 373 1 231 1 310 1 337 2 340 1 205 1 275 2 
0 1 26 2 241 1 214 1 29 2 147 1 76 1 167 10 108 5 222 2 80 1 13 2 82 5 16 10 266 1 195 4 40 1 176 1 117 1 251 7 22 2 373 1 231 1 310 1 337 2 340 1 205 1 275 2 
26 2 241 1 214 1 29 2 147 1 76 1 167 7 108 3 222 2 80 1 13 2 82 3 16 7 266 1 195 2 40 1 176 1 117 1 251 4 22 2 373 1 231 1 310 1 337 1 340 1 205 1 275 2 
0 1 16 4 195 1 40 1 251 3 29 1 22 1 373 1 167 4 231 1 337 2 108 2 222 1 80 1 205 1 275 1 13 1 82 2 
133 1 16 2 26 1 211 1 40 1 176 1 117 1 22 1 373 1 160 1 167 2 222 1 205 1 275 1 13 1 
26 1 0 1 214 1 29 1 167 9 59 1 108 4 222 1 80 1 82 4 13 2 16 9 266 1 195 3 40 1 251 7 197 1 22 1 373 1 231 1 310 1 337 2 205 1 275 2 
26 1 0 1 214 1 29 1 167 9 59 1 108 4 222 1 80 1 82 4 13 2 16 9 266 1 195 3 40 1 251 7 197 1 22 1 373 1 231 1 310 1 337 2 205 1 275 2 
210 1 153 1 54 1 296 1 216 1 324 1 253 1 262 1 68 1 58 1 170 1 171 1 140 1 124 1 
32 1 
363 1 262 1 68 2 32 1 19 1 60 1 296 2 217 1 
363 1 365 1 100 2 277 1 345 1 5 1 164 1 296 5 243 1 217 2 65 2 262 2 184 1 233 2 149 1 68 5 32 1 237 1 60 1 
363 1 271 1 32 1 
200 1 74 2 32 1 
170 2 58 1 153 2 140 2 171 2 230 1 253 2 324 2 
187 1 316 1 291 1 2 1 239 1 188 1 4 2 347 1 324 2 352 1 189 1 170 3 58 1 264 2 171 2 151 1 360 1 194 2 225 1 39 1 366 1 300 1 250 1 153 2 369 1 230 1 253 3 272 1 43 1 70 2 256 1 71 2 95 1 140 2 377 1 185 1 315 1 
210 1 170 1 58 1 153 1 140 1 171 1 124 1 216 1 253 1 324 1 
363 1 210 1 88 1 156 1 296 1 331 1 253 1 122 1 68 1 32 1 170 1 94 1 140 1 224 1 
363 1 210 1 88 1 153 1 296 2 331 1 324 1 253 1 122 1 68 2 32 1 170 1 94 1 171 1 140 1 
262 1 77 1 68 1 296 1 217 1 
363 1 61 1 262 1 68 2 32 1 60 1 296 2 217 1 
68 1 296 1 217 1 
52 1 153 1 155 1 230 2 253 2 324 1 170 2 140 2 171 1 
116 1 281 1 34 1 
316 1 188 1 4 1 230 1 347 1 253 1 272 1 43 1 70 1 170 1 161 1 264 1 151 1 185 1 377 1 360 1 
271 1 230 1 
316 1 188 1 4 1 177 1 347 1 324 1 253 2 245 1 272 1 43 1 70 1 170 2 264 1 151 1 171 1 140 1 34 1 377 1 185 1 360 1 
170 3 153 1 140 3 171 3 177 1 230 1 253 3 324 3 
210 1 170 1 140 1 171 1 124 1 253 1 324 1 
52 1 210 1 170 1 153 1 140 1 171 1 155 1 253 1 324 1 
316 1 291 1 2 1 239 1 210 1 188 1 4 1 296 1 347 1 324 3 352 1 75 1 104 1 245 1 170 4 58 1 264 1 151 1 171 3 360 1 194 2 225 1 39 1 300 1 88 1 250 1 153 2 369 1 155 1 177 1 230 1 331 1 253 4 272 1 43 1 122 1 68 1 70 1 71 1 94 1 95 1 140 3 377 1 185 1 
170 2 93 1 140 2 171 1 224 1 177 1 230 1 253 2 324 1 
329 1 210 1 88 1 153 1 155 1 296 1 177 2 331 1 324 3 253 3 245 1 75 1 122 1 68 1 32 1 170 3 94 1 171 3 140 3 
116 1 153 1 177 1 155 1 324 2 253 2 170 2 171 2 140 2 34 1 
316 1 188 1 4 1 230 1 347 1 253 1 272 1 43 1 70 1 170 1 264 1 151 1 185 1 377 1 360 1 
316 1 4 1 282 1 230 1 347 1 253 1 371 1 272 1 43 1 70 1 170 1 264 1 151 1 377 1 360 1 
187 2 291 2 239 1 27 1 163 1 279 1 281 2 259 1 352 1 354 1 34 2 194 2 225 1 300 1 87 1 116 2 250 1 228 1 369 1 183 1 71 4 257 1 206 1 289 1 
210 1 325 1 170 1 88 1 140 1 171 1 253 1 324 1 
267 1 153 1 177 2 155 1 230 1 324 4 253 5 245 1 170 5 93 1 171 4 140 5 224 1 236 1 
210 1 325 1 170 2 140 2 171 2 124 1 253 2 324 2 
47 1 64 1 298 1 
62 1 306 1 139 1 252 1 64 2 298 2 
64 1 298 1 
64 1 298 1 
62 1 252 1 
62 1 252 1 
62 1 252 1 
109 1 64 1 298 1 
109 1 64 1 298 1 
109 1 64 1 298 1 
305 1 64 1 298 1 
305 1 64 1 298 1 
305 1 64 1 298 1 
344 1 6 1 296 2 41 2 67 1 273 1 246 1 123 2 68 2 32 1 339 1 130 2 35 2 328 2 
28 1 296 1 145 1 41 1 324 1 253 1 201 1 273 1 123 1 68 1 170 1 375 1 314 1 130 1 171 1 140 1 35 1 328 1 
38 1 22 2 190 2 211 1 29 1 
22 1 222 1 29 1 
22 1 211 1 222 1 
38 1 22 3 190 1 211 1 29 2 118 1 
38 1 22 2 190 1 211 1 101 1 29 1 
100 1 277 2 279 1 345 1 5 3 259 1 296 5 145 1 217 1 284 2 74 3 262 4 354 1 32 2 81 2 60 1 363 1 330 1 228 1 199 1 65 1 158 2 200 1 233 1 203 1 68 5 24 1 375 1 338 1 162 1 314 1 141 1 
100 2 277 6 279 3 345 1 5 8 243 1 259 3 296 9 217 6 349 1 350 1 284 6 74 9 106 1 262 7 354 3 77 5 32 5 172 1 81 6 60 1 363 1 330 2 114 1 268 1 228 3 368 5 199 2 65 2 200 3 233 2 203 3 68 9 24 1 314 4 
100 1 277 2 279 1 5 3 259 1 296 3 243 1 284 2 74 4 262 2 354 1 32 3 81 2 363 1 330 1 228 1 199 1 65 1 158 1 200 2 233 1 68 3 203 1 162 1 314 1 141 1 
100 1 277 4 279 2 5 5 259 2 296 4 243 1 349 1 284 4 74 7 106 1 262 3 354 2 32 4 172 1 81 4 363 1 330 1 228 2 199 1 65 1 158 2 200 3 233 1 68 4 203 2 162 1 314 2 141 1 
144 1 
316 1 271 1 312 1 
316 1 148 1 
316 1 377 1 
316 3 43 1 312 2 213 1 367 1 377 1 
316 1 43 1 377 1 
316 1 318 1 
187 4 291 3 301 1 163 3 27 2 18 1 215 1 295 1 228 1 8 1 105 1 354 1 23 1 31 2 71 7 33 1 48 1 96 1 
187 14 291 12 51 1 239 1 279 2 163 8 27 4 215 1 295 4 259 2 8 1 105 2 354 3 11 3 31 3 33 1 192 1 194 2 112 1 300 1 301 2 18 2 250 1 154 3 228 3 369 1 288 1 159 1 254 1 203 2 71 26 48 2 96 1 
25 1 187 5 291 4 239 2 27 3 163 4 295 1 283 1 8 1 105 1 354 1 31 2 33 1 194 4 300 2 301 1 18 1 250 2 228 1 369 2 254 1 71 9 48 1 96 1 
187 4 291 3 301 1 163 3 27 2 18 1 215 1 295 1 228 1 8 1 105 1 354 1 31 2 71 7 33 1 48 1 96 1 
187 4 291 3 301 1 163 3 27 2 18 1 215 1 295 1 228 1 8 1 105 1 354 1 31 2 71 7 33 1 48 1 96 1 
316 1 15 2 342 1 99 2 26 2 16 1 4 1 90 1 272 1 333 1 167 1 92 1 136 1 255 1 70 1 264 1 313 2 12 1 151 1 377 1 360 1 275 1 13 1 
99 1 26 1 293 1 211 1 4 1 29 1 167 1 127 1 264 1 222 1 151 1 13 1 360 1 362 1 15 1 16 1 304 1 118 1 270 1 22 2 121 1 70 1 313 1 46 1 205 1 275 1 
99 1 26 1 293 1 211 1 4 1 29 1 167 2 127 1 264 1 222 1 191 1 151 1 13 1 360 1 15 1 16 2 304 1 40 1 251 1 118 1 270 1 22 2 373 1 121 1 70 1 313 1 46 1 205 1 275 1 
342 1 99 1 26 1 293 1 211 1 4 1 29 1 167 3 264 1 222 1 151 1 13 1 360 1 362 1 15 1 16 3 304 1 40 1 118 1 251 2 270 1 22 2 373 1 121 1 70 1 313 1 46 1 275 1 97 1 
99 1 26 1 293 1 211 1 4 1 29 1 167 2 264 1 222 1 151 1 360 1 362 1 15 1 16 2 40 1 251 2 118 1 270 1 22 2 373 1 70 1 313 1 46 1 97 1 
169 1 
316 1 100 1 50 1 320 2 277 2 3 1 4 2 5 2 103 1 151 1 60 3 330 1 196 2 156 1 331 1 253 1 65 1 200 2 333 1 122 1 68 5 70 2 202 1 210 1 345 1 296 5 217 6 261 1 351 1 74 2 357 1 32 2 264 2 170 1 79 2 223 2 224 1 360 1 363 1 37 2 299 4 84 1 88 1 370 1 178 2 372 1 181 1 272 2 135 2 136 1 233 1 45 1 94 1 140 1 377 1 
210 1 3 1 103 1 296 3 217 2 261 1 170 1 224 1 60 1 299 2 37 1 88 1 19 1 156 1 331 1 253 1 370 1 372 1 122 1 68 3 94 1 140 1 
210 1 3 1 103 1 296 3 217 1 261 1 170 1 32 1 224 1 60 1 299 3 363 1 88 1 19 1 156 1 331 1 253 1 370 1 372 1 122 1 135 1 68 3 94 1 140 1 
210 1 3 1 103 1 296 3 217 2 261 1 170 1 32 1 79 1 60 1 224 1 299 3 37 1 363 1 88 1 19 1 156 1 331 1 253 1 370 1 372 1 122 1 135 1 68 3 94 1 140 1 
100 1 50 1 277 1 320 2 3 1 5 1 103 1 56 1 248 1 60 3 196 2 19 1 156 1 331 1 157 1 253 1 65 1 200 2 122 1 68 5 210 1 345 1 296 5 217 7 261 1 170 1 32 5 78 1 79 4 223 2 224 1 37 4 299 6 363 5 84 1 88 1 370 1 372 1 178 2 135 4 234 1 233 1 94 1 140 1 
100 1 50 1 277 1 320 2 3 1 5 1 103 1 60 2 196 2 156 1 331 1 253 1 65 1 200 2 122 1 68 4 210 1 345 1 296 4 217 4 261 1 74 2 170 1 32 2 79 2 223 2 224 1 299 4 37 2 363 1 84 1 88 1 370 1 372 1 178 2 181 1 135 2 233 1 94 1 140 1 
100 1 50 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 4 261 1 32 1 78 1 170 1 79 2 223 2 248 1 60 2 224 1 363 1 37 2 299 4 84 1 196 2 88 1 156 1 331 1 253 1 370 1 178 2 65 1 372 1 200 2 122 1 135 2 234 1 233 1 68 4 94 1 140 1 
100 1 50 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 4 261 1 32 1 78 1 170 1 79 2 223 2 248 1 60 2 224 1 363 1 37 2 299 4 84 1 196 2 88 1 156 1 331 1 253 1 370 1 178 2 65 1 372 1 200 2 122 1 135 2 234 1 233 1 68 4 94 1 140 1 
343 1 100 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 4 7 2 261 1 74 2 32 1 78 1 170 1 79 2 129 1 60 2 224 1 363 1 37 2 299 4 84 1 86 2 88 1 156 1 331 1 253 1 370 1 178 2 65 1 372 1 122 1 135 2 44 1 233 1 68 4 94 1 140 1 
100 1 50 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 5 261 1 56 1 32 1 78 1 170 1 79 3 223 2 248 1 60 2 224 1 363 1 299 5 37 3 84 1 196 2 88 1 156 1 331 1 253 1 370 1 178 2 65 1 372 1 200 2 122 1 135 3 233 1 234 1 68 4 94 1 140 1 
100 1 50 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 5 261 1 56 1 32 1 78 1 170 1 79 3 223 2 248 1 60 2 224 1 363 1 299 5 37 3 84 1 196 2 88 1 156 1 331 1 253 1 370 1 178 2 65 1 372 1 200 2 122 1 135 3 233 1 234 1 68 4 94 1 140 1 
100 1 343 1 320 2 277 1 210 1 3 1 345 1 5 1 103 1 296 4 217 4 7 2 261 1 74 2 32 1 170 1 79 2 60 2 224 1 363 1 37 2 299 4 84 1 86 2 88 1 156 1 331 1 253 1 370 1 178 2 372 1 65 1 181 1 122 1 135 2 233 1 68 4 94 1 140 1 
316 3 187 1 291 1 239 2 321 1 242 1 4 8 346 1 348 1 324 1 352 2 30 1 170 1 264 7 297 1 191 1 171 1 151 2 360 2 362 1 194 4 225 2 366 2 300 2 250 2 177 1 369 2 253 1 272 2 333 1 136 1 70 8 235 1 71 2 140 1 95 1 377 2 206 1 315 1 
187 1 291 2 239 1 163 1 27 1 279 1 281 1 259 1 324 1 352 1 354 1 247 1 170 1 171 1 34 1 194 2 225 1 113 1 300 1 116 1 153 1 250 1 155 1 369 1 228 1 253 1 203 1 71 3 140 1 
187 3 291 3 194 2 225 1 300 1 239 1 301 1 163 2 27 2 116 1 250 1 281 1 228 1 369 1 230 2 8 1 352 1 271 1 105 1 354 1 31 1 71 6 33 1 34 1 206 1 96 1 
187 8 291 6 239 2 163 2 27 1 279 2 212 1 295 1 281 11 259 1 352 2 354 1 107 1 11 3 247 1 34 11 112 1 194 4 225 1 134 1 300 2 302 1 116 4 250 2 154 3 369 2 269 1 228 2 230 1 203 2 71 14 95 1 315 1 
316 1 187 1 291 1 239 1 188 1 4 1 347 1 324 1 352 1 245 1 247 1 264 1 170 2 151 1 171 1 360 1 194 2 225 1 300 1 116 1 250 1 369 1 177 1 230 1 253 2 272 1 43 1 232 1 334 1 336 1 70 1 161 1 71 2 140 1 95 1 377 1 185 1 315 1 
316 2 143 2 187 10 1 2 2 2 239 3 188 2 279 2 4 3 281 7 324 1 8 1 105 1 245 1 247 1 151 2 194 6 116 7 250 3 253 3 70 3 203 2 71 20 291 10 27 4 163 8 126 1 295 4 259 2 347 2 352 3 354 3 31 1 264 3 170 3 33 1 171 1 34 7 173 2 360 2 362 1 83 2 225 3 300 3 301 1 177 1 369 3 228 3 230 2 272 1 43 2 95 1 140 1 185 2 377 2 315 1 238 1 378 1 96 1 
187 2 194 2 225 1 300 1 239 1 163 1 279 1 116 1 250 1 295 1 281 1 369 1 228 1 352 1 183 1 71 2 34 1 206 1 
194 2 291 2 225 1 300 1 239 1 163 1 27 1 116 1 87 1 250 1 281 1 369 1 259 1 352 1 354 1 71 2 34 1 206 1 
187 2 291 2 239 1 279 1 163 2 27 1 281 2 295 1 259 1 352 1 354 1 34 2 194 2 225 1 300 1 116 2 250 1 228 1 369 1 203 1 71 4 206 1 
187 2 194 2 225 1 300 1 239 1 163 1 279 1 116 1 250 1 295 1 281 1 369 1 228 1 352 1 183 1 297 1 71 2 34 1 
194 2 291 2 225 1 300 1 239 1 163 1 27 1 116 1 87 1 250 1 281 1 369 1 259 1 352 1 354 1 297 1 71 2 34 1 
187 2 291 2 239 1 279 1 163 2 27 1 281 2 295 1 259 1 352 1 354 1 297 1 34 2 194 2 225 1 300 1 116 2 250 1 228 1 369 1 203 1 71 4 
187 2 291 2 239 1 279 1 163 2 27 1 281 2 295 1 259 1 352 1 354 1 34 2 194 2 225 1 300 1 116 2 250 1 228 1 369 1 203 1 71 4 
187 1 316 1 291 1 2 1 239 1 188 1 4 1 347 1 352 1 264 1 170 1 151 1 360 1 194 2 225 1 300 1 250 1 369 1 230 1 253 1 272 1 43 1 70 1 71 2 95 1 377 1 185 1 315 1 
187 1 316 1 291 1 239 1 4 1 282 1 347 1 352 1 264 1 170 1 151 1 360 1 194 2 225 1 300 1 250 1 369 1 230 1 253 1 371 1 272 1 43 1 70 1 71 2 95 1 377 1 315 1 98 1 
187 2 291 2 239 1 279 1 163 2 27 1 281 2 295 1 259 1 352 1 354 1 247 1 34 2 194 2 225 1 300 1 116 2 250 1 228 1 369 1 203 1 71 4 
187 2 316 1 291 2 2 1 239 1 188 1 27 1 163 2 279 1 4 1 295 1 281 2 259 1 347 1 352 1 354 1 264 1 170 1 191 1 151 1 34 2 360 1 173 1 194 2 225 1 300 1 116 2 250 1 228 1 369 1 253 1 43 1 70 1 203 1 71 4 185 1 377 1 
187 2 291 1 239 1 163 1 279 1 295 1 281 1 259 1 324 1 352 1 354 1 247 1 170 1 171 1 34 1 36 1 194 2 225 1 300 1 116 1 153 1 250 1 155 1 369 1 228 1 253 1 203 1 71 3 140 1 
187 7 291 7 239 2 27 2 163 4 279 2 55 1 295 2 259 2 283 1 354 2 356 1 11 1 219 1 220 2 327 1 364 1 112 1 194 4 300 2 226 1 17 1 250 2 154 1 369 2 228 2 335 2 203 2 71 14 
187 14 291 12 239 3 163 4 27 2 279 3 322 1 295 2 55 1 259 2 260 1 283 1 354 2 356 1 11 2 220 4 219 2 364 1 194 6 112 2 175 1 300 3 303 1 17 2 250 3 154 2 369 3 228 3 286 1 287 1 335 1 254 2 203 3 71 26 
187 18 291 18 239 3 163 6 27 3 279 3 322 1 295 3 55 1 259 3 260 1 8 1 283 1 105 1 354 4 356 1 11 3 219 2 220 4 31 1 33 1 364 1 112 3 194 6 175 1 300 3 301 1 226 1 303 1 17 1 250 3 154 3 369 3 228 4 286 1 287 1 335 1 254 1 203 3 376 1 71 36 96 1 
187 18 291 15 239 4 163 5 27 3 279 3 322 1 295 2 55 1 259 2 260 1 8 1 283 1 105 1 354 3 356 1 11 3 219 2 220 4 31 1 33 1 364 1 112 3 194 8 175 1 300 4 301 1 226 1 303 1 17 1 250 4 154 3 369 4 228 4 286 1 287 1 335 1 254 2 203 3 376 1 71 33 96 1 
187 15 291 14 239 1 163 5 27 3 279 3 322 1 295 2 55 1 259 3 260 1 8 1 283 1 105 1 354 4 356 1 11 2 219 1 220 3 31 1 33 1 364 1 112 2 194 2 175 1 300 1 301 1 303 1 17 1 250 1 154 2 369 1 228 4 286 1 287 1 335 1 203 3 71 29 96 1 
344 1 123 1 323 1 35 1 41 1 328 1 
28 1 
123 1 115 1 35 1 41 1 328 1 
344 1 6 1 296 1 41 1 67 1 273 1 246 1 123 1 68 1 32 1 339 1 130 2 35 1 328 1 
344 1 6 1 296 1 41 1 67 1 273 1 246 1 123 1 68 1 32 1 339 1 130 2 35 1 328 1 
344 1 6 1 296 1 41 1 67 1 273 1 246 1 123 1 68 1 32 1 339 1 130 2 35 1 328 1 
353 1 
353 1 
285 1 
285 1 
72 1 294 1 
28 1 6 1 296 1 229 1 145 1 41 1 67 1 262 1 201 1 123 1 68 1 375 1 314 1 130 1 35 1 328 1 
353 1 
285 1 
316 1 187 1 291 1 239 1 242 1 4 2 102 1 352 1 30 1 358 1 247 1 221 1 170 2 264 2 151 1 360 1 132 1 85 1 194 2 225 1 366 2 300 1 250 1 369 1 253 2 70 2 71 2 140 2 95 1 377 1 315 1 
316 1 15 1 227 1 4 1 272 1 333 1 92 1 136 1 70 1 264 1 151 1 377 1 110 1 360 1 
15 1 293 1 211 1 304 1 4 1 29 1 118 1 22 2 10 1 70 1 264 1 46 1 222 1 359 1 151 1 110 1 360 1 362 1 
15 1 293 1 211 1 304 1 4 2 29 1 118 1 22 2 10 1 70 2 264 2 46 1 222 1 359 1 191 1 151 1 110 1 360 1 362 1 
193 1 15 1 293 1 211 1 304 1 4 1 29 1 118 1 22 2 10 1 70 1 264 1 46 1 222 1 151 1 360 1 362 1 
89 1 
363 1 65 1 100 1 277 1 233 1 149 1 32 1 345 1 5 1 237 1 
83 1 277 5 279 2 5 5 198 2 228 2 259 2 284 5 182 1 74 10 200 5 354 2 203 2 32 5 81 5 
363 1 68 1 32 1 296 1 60 1 217 1 
316 1 100 2 258 1 277 2 345 1 4 4 5 2 243 1 296 3 217 4 9 1 357 1 264 4 150 2 151 1 60 2 360 1 330 2 65 2 272 2 333 1 233 2 136 1 202 1 70 4 45 2 68 3 138 1 377 1 
363 1 271 1 277 1 149 1 32 1 5 1 237 1 
363 1 100 1 50 1 277 1 196 1 345 1 5 1 296 1 217 1 65 1 74 1 200 1 233 1 68 1 32 2 223 1 60 1 
316 10 318 2 100 4 277 8 279 2 4 3 5 9 284 6 148 3 149 1 150 1 191 1 151 4 60 3 330 2 198 2 119 2 66 2 65 4 200 6 122 2 70 3 68 5 203 2 204 1 207 2 345 4 296 5 259 2 217 5 74 12 354 2 264 3 32 8 128 1 81 6 360 3 131 1 363 2 83 2 367 1 307 2 228 2 272 1 182 2 43 3 91 2 309 2 233 4 45 1 138 1 312 2 237 1 377 3 
100 2 277 5 279 2 322 1 345 2 5 8 296 1 259 2 217 1 260 1 284 5 74 6 354 2 11 1 32 5 60 1 81 5 363 2 112 1 330 1 175 1 154 1 198 2 228 2 286 1 65 2 287 1 182 1 200 3 233 2 45 1 68 1 69 1 203 2 274 1 
100 1 277 2 210 1 278 1 345 1 5 2 54 1 296 1 216 1 324 1 105 1 354 1 170 1 58 1 171 1 301 1 153 1 198 2 228 2 253 1 65 1 182 1 233 1 234 1 68 1 140 1 124 1 96 1 
316 1 291 1 2 1 239 1 188 1 4 1 347 1 324 2 352 1 264 1 170 3 58 1 171 2 151 1 360 1 194 2 39 1 225 1 300 1 250 1 153 2 369 1 230 1 253 3 272 1 43 1 70 1 71 1 95 1 140 2 185 1 377 1 
363 2 100 1 330 1 277 2 345 1 5 1 65 1 284 2 200 2 74 4 233 1 31 1 45 1 32 4 81 2 
240 1 249 1 294 1 35 1 41 1 
326 1 35 1 41 1 
326 1 35 1 41 1 
326 1 35 1 41 1 
49 1 35 1 41 1 
49 1 35 1 41 1 
49 1 35 1 41 1 
35 1 41 1 
64 1 298 1 
187 5 194 2 291 5 300 1 239 1 301 2 278 1 27 3 163 5 250 1 295 2 369 1 228 2 283 1 105 2 354 2 71 10 96 1 
187 2 194 2 300 1 239 1 279 1 163 1 250 1 295 1 369 1 228 1 283 1 71 2 
187 2 291 2 194 2 300 1 239 1 27 1 163 2 279 1 250 1 295 1 259 1 369 1 228 1 283 1 354 1 203 1 71 4 
187 1 291 2 194 6 300 3 239 3 301 1 226 1 27 1 163 2 250 3 295 1 369 3 283 1 105 1 332 1 254 1 71 3 
290 1 187 14 291 15 51 1 239 5 279 2 163 10 27 6 295 4 259 2 8 1 283 1 105 3 354 4 11 3 31 1 33 1 192 1 112 1 194 10 300 5 301 3 226 1 250 5 154 3 369 5 228 4 159 1 332 1 254 2 203 2 71 29 96 2 
187 4 291 4 239 1 27 2 163 2 283 1 8 1 105 1 354 1 11 1 31 1 33 1 112 1 194 2 300 1 301 1 250 1 154 1 228 1 369 1 286 1 71 8 96 1 
290 1 187 4 291 4 239 2 27 2 163 2 283 1 8 1 105 1 354 1 11 1 31 1 33 1 112 1 194 4 300 2 301 1 250 2 154 1 228 1 369 2 286 1 71 8 96 1 
290 1 187 9 291 10 239 3 279 2 27 3 163 4 322 1 295 1 259 2 260 1 8 1 283 1 105 1 354 3 11 1 31 1 33 1 112 1 194 6 175 1 300 3 301 1 250 3 154 1 369 3 228 3 286 1 287 1 254 1 203 2 71 19 96 1 
290 1 187 10 291 7 239 3 279 2 27 3 163 5 322 1 295 2 259 1 260 1 8 1 283 1 105 1 354 2 11 1 31 1 33 1 112 1 194 6 300 3 175 1 301 1 250 3 154 1 369 3 228 3 286 1 287 1 254 1 203 2 71 17 96 1 
187 4 291 4 239 1 27 2 163 2 283 1 8 1 105 1 354 1 11 1 31 1 33 1 112 1 194 2 300 1 301 1 250 1 154 1 228 1 369 1 286 1 71 8 96 1 
187 6 291 6 239 1 279 2 27 1 163 2 322 1 295 1 259 2 260 1 283 1 354 2 11 1 112 1 194 2 300 1 175 1 250 1 154 1 369 1 228 2 286 1 287 1 203 2 71 12 
290 1 187 10 291 8 239 4 279 2 27 3 163 5 322 1 295 2 259 1 260 1 8 1 283 1 105 1 354 2 11 1 31 1 33 1 112 1 194 8 175 1 300 4 301 1 250 4 154 1 369 4 228 3 286 1 287 1 254 2 203 2 71 18 96 1 
187 9 291 7 239 4 279 3 27 3 163 6 322 1 295 3 259 2 260 1 283 1 354 2 11 1 112 1 194 8 175 1 300 4 226 1 250 4 154 1 369 4 228 3 286 1 287 1 254 2 203 3 71 16 
187 3 291 4 301 3 27 3 163 6 295 3 228 1 8 2 105 3 354 1 71 7 33 1 96 1 
187 10 291 8 239 4 279 2 27 3 163 4 322 1 295 1 259 1 260 1 8 1 283 1 105 1 354 2 11 1 31 1 33 1 112 1 194 8 175 1 300 4 301 1 226 1 250 4 154 1 369 4 228 3 286 1 287 1 254 2 203 2 71 18 96 1 
187 4 291 4 194 4 300 2 239 2 301 1 163 3 27 2 250 2 295 1 228 1 369 2 8 1 105 1 354 1 254 1 31 1 71 8 33 1 96 1 
187 3 291 3 301 1 27 2 163 2 228 1 8 1 271 1 105 1 354 1 31 1 33 1 71 6 96 1 
290 1 187 2 291 2 194 2 300 1 239 1 27 1 163 2 279 1 250 1 295 1 259 1 369 1 228 1 354 1 203 1 71 4 
187 1 291 1 112 1 11 1 71 2 154 1 
187 11 291 12 239 2 163 9 279 2 27 5 212 1 295 4 259 2 8 1 105 2 354 3 11 2 31 1 33 1 194 4 134 1 300 2 301 2 250 2 154 2 228 3 269 1 369 2 332 1 254 2 203 2 71 23 96 1 
291 1 71 1 154 1 
187 1 11 1 71 1 
290 1 83 1 187 3 194 2 291 3 300 1 239 1 279 1 163 3 27 2 250 1 295 1 369 1 228 1 259 1 354 1 203 1 71 6 
187 6 291 6 239 1 279 2 27 1 163 2 322 1 295 1 259 2 260 1 283 1 354 2 11 1 112 1 194 2 300 1 175 1 250 1 154 1 369 1 228 2 286 1 287 1 203 2 71 12 
187 3 291 3 105 1 354 1 301 1 163 2 27 1 71 6 295 1 228 1 96 1 
187 1 291 2 194 2 300 1 301 1 239 1 163 2 27 1 250 1 295 1 369 1 8 1 105 1 332 1 254 1 71 3 33 1 
170 1 93 1 140 1 224 1 230 1 253 1 308 1 
230 1 20 1 165 1 244 1 308 1 253 1 311 1 170 1 93 1 140 1 224 1 361 1 
316 1 4 4 180 1 272 1 333 1 136 1 70 4 264 4 191 1 151 1 377 1 360 1 111 1 
316 1 280 1 4 2 146 1 42 1 43 1 168 1 70 2 264 2 150 1 151 2 377 1 360 1 378 1 
22 1 272 1 211 1 70 1 264 1 46 1 222 1 4 1 151 1 360 1 
316 1 4 2 30 1 358 1 70 2 264 2 191 1 151 1 377 1 360 1 362 1 
316 3 321 1 4 5 180 1 272 1 333 1 30 1 136 1 70 5 264 4 235 1 150 1 191 1 151 2 377 2 360 2 
316 3 321 1 4 5 180 1 179 1 272 1 333 1 30 1 136 1 70 5 264 4 150 1 191 1 151 2 377 2 360 2 
316 1 271 1 272 1 333 1 136 1 70 1 264 1 4 1 151 1 377 1 360 1 
316 1 4 1 177 1 230 1 347 1 324 1 253 2 272 1 43 1 70 1 170 2 264 1 151 1 171 1 140 1 377 1 185 1 360 1 
316 3 318 1 210 1 4 1 347 1 324 1 264 1 170 2 150 1 171 2 151 1 360 1 88 1 177 1 230 1 253 2 43 2 91 1 70 1 94 1 140 2 185 1 377 2 
316 3 318 1 210 1 4 2 282 1 347 1 324 1 264 2 170 2 150 1 171 2 151 1 360 1 111 1 88 1 177 1 230 1 253 2 43 2 91 1 70 2 94 1 140 2 377 2 
316 4 318 1 4 3 296 2 217 1 166 1 148 1 264 3 32 1 150 1 151 1 360 1 111 1 363 1 120 1 272 1 91 1 43 1 122 1 70 3 68 2 312 1 377 1 
363 1 207 1 316 4 318 1 4 3 296 2 217 1 272 1 122 1 43 1 91 1 148 1 68 2 70 3 32 1 264 3 312 1 150 1 151 1 377 1 360 1 111 1 
70 1 264 1 4 1 151 1 360 1 346 1 
316 3 366 1 53 1 321 1 280 1 4 7 367 1 346 1 348 1 146 1 272 2 30 1 43 1 70 7 264 6 235 1 191 1 151 3 377 2 360 2 362 1 
187 3 316 1 291 3 1 1 2 1 239 2 188 1 163 2 27 2 4 1 281 1 347 1 324 1 8 1 352 2 105 1 354 1 31 1 247 1 170 2 264 1 33 1 191 1 151 1 171 1 34 1 360 1 173 1 85 1 194 4 225 2 300 2 301 1 116 1 250 2 228 1 369 2 177 1 230 2 253 2 43 1 70 1 71 6 140 1 377 1 185 1 96 1 
207 1 316 2 100 2 277 1 345 2 4 1 5 1 296 3 217 2 262 1 148 1 149 1 32 1 264 1 60 1 363 1 119 1 65 2 66 1 272 1 122 1 309 1 233 2 70 1 68 3 138 1 312 1 237 1 
316 2 4 2 367 1 346 1 43 1 70 2 312 1 264 2 204 1 191 1 151 2 377 1 360 1 
316 1 4 1 282 1 177 1 230 1 347 1 324 1 253 2 272 1 43 1 70 1 170 2 264 1 151 1 171 1 140 1 377 1 360 1 
316 1 53 1 280 1 4 1 367 1 146 1 43 1 70 1 264 1 150 1 151 2 377 1 360 1 
132 1 317 1 209 1 102 1 253 1 57 1 221 1 170 1 140 1 
21 1 209 1 292 1 
317 1 174 1 57 1 209 1 230 1 
363 1 317 2 209 1 174 2 292 1 210 1 63 1 88 1 296 2 230 1 331 1 21 1 57 2 75 1 122 1 262 1 68 2 32 1 94 1 
373 1 16 1 167 1 40 1 205 1 13 1 275 1 
16 4 195 1 176 1 40 2 251 2 373 2 218 1 167 4 137 1 374 1 108 1 275 1 13 1 82 1 
208 1 16 2 40 1 197 1 251 1 373 1 167 2 263 1 205 1 275 1 13 1 
373 1 16 3 218 2 167 3 137 1 40 1 176 2 205 1 13 1 275 1 186 1 
125 2 73 1 108 2 341 1 
319 1 16 1 167 1 205 1 13 1 275 1 
373 1 266 1 16 2 167 2 40 1 251 1 205 1 13 1 275 1 
276 1 
373 1 16 1 167 1 40 1 205 1 13 1 275 1 
373 1 271 1 40 1 
373 1 16 1 167 1 40 1 13 1 275 1 
26 1 167 1 313 1 
373 1 16 3 218 1 167 3 355 1 137 1 40 1 176 2 205 1 13 1 275 1 
373 1 16 2 167 2 337 1 40 1 251 1 13 1 275 1 
22 1 16 1 231 1 167 1 108 1 222 1 29 1 205 1 82 1 13 1 275 1 
16 1 167 1 40 1 205 1 13 1 275 1 
373 1 16 1 167 1 108 1 40 1 205 1 13 1 275 1 
265 1 142 1 152 1 16 2 167 2 40 1 205 1 13 2 275 2 
16 3 266 1 195 1 40 1 214 1 251 2 373 1 167 3 108 1 205 1 275 1 13 1 82 1 
14 1 16 2 211 1 40 1 118 1 29 1 251 1 22 2 373 1 167 2 222 1 205 1 275 1 13 1 
16 4 0 1 195 1 40 1 251 2 373 1 167 4 337 1 108 1 205 1 275 2 13 2 82 1 
373 1 266 1 16 3 167 3 40 1 176 1 251 1 205 1 13 1 275 1 
195 1 374 1 108 1 82 1 
40 1 

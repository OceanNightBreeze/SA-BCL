#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 91 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 91 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 179 128 (187,226) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 179 128 (46,117) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 1 361 1 264 1 93 2 114 1 33 1 365 2 58 1 59 1 218 1 220 9 244 2 177 2 224 1 13 1 376 9 255 3 129 2 87 2 230 1 21 4 206 1 137 1 138 6 359 2 167 1 24 1 186 5 
330 1 361 1 264 1 93 2 114 1 33 1 365 2 58 1 59 1 218 1 220 9 244 2 177 2 224 1 13 1 376 9 255 3 129 2 87 2 230 1 21 4 206 1 137 1 138 6 167 1 24 1 359 2 186 5 
330 1 361 1 264 1 93 2 114 1 33 1 365 2 58 1 59 1 218 1 220 10 244 2 177 2 224 1 13 1 376 10 255 4 129 2 87 2 230 1 21 5 206 1 137 1 138 7 167 1 24 1 359 2 186 6 
330 1 361 1 264 1 93 2 33 1 365 2 58 1 59 1 218 1 220 7 244 2 177 2 224 1 13 1 376 7 255 2 129 2 87 2 230 1 21 3 206 1 137 1 138 4 167 1 24 1 359 1 186 4 
224 1 361 1 376 4 114 1 255 1 365 1 129 1 87 1 21 2 59 1 206 1 137 1 138 3 220 4 244 1 177 1 359 2 186 3 
224 1 376 2 93 1 31 1 129 1 87 1 327 1 230 1 173 1 59 1 137 1 220 2 244 1 24 1 177 1 186 1 
224 1 376 3 93 1 255 1 129 2 58 1 21 1 59 1 137 1 138 1 220 3 244 2 186 2 
92 1 361 1 264 1 93 1 114 1 33 1 365 1 58 1 59 1 220 9 244 2 177 1 224 1 376 9 255 3 303 1 129 2 87 1 21 4 206 1 137 1 138 7 359 2 186 5 
92 1 361 1 264 1 93 1 114 1 33 1 365 1 58 1 59 1 220 9 244 2 177 1 224 1 376 9 255 3 303 1 129 2 87 1 21 4 206 1 137 1 138 7 359 2 186 5 
91 1 77 1 340 1 
351 1 340 1 164 2 
43 2 2 2 4 2 175 2 328 1 80 2 207 2 16 1 
2 2 331 1 141 2 4 2 190 2 7 1 118 1 271 1 97 1 174 1 342 1 175 2 152 1 199 1 80 3 11 1 300 2 250 2 346 1 279 1 12 1 82 1 128 1 285 1 160 2 16 1 323 1 43 3 85 1 20 1 45 1 47 1 328 1 140 1 48 1 207 2 187 1 
43 1 188 1 2 1 4 1 132 1 23 1 175 1 328 1 80 1 207 1 
81 1 293 1 267 1 43 1 242 1 307 1 272 1 77 1 340 1 23 1 357 1 318 1 207 1 80 1 
2 1 81 2 4 1 293 1 267 1 43 1 242 2 272 1 77 1 340 1 23 1 175 1 357 1 207 1 80 1 
18 1 242 1 81 1 370 1 253 1 
18 1 249 1 242 2 81 2 77 1 340 1 253 1 111 1 
18 1 242 1 81 1 
374 1 188 1 2 1 81 1 4 1 253 1 43 1 242 1 132 1 23 1 175 1 328 1 207 1 80 1 
340 1 
18 1 249 1 242 2 81 2 77 1 340 1 253 1 54 1 
290 2 249 1 81 5 236 1 253 2 39 1 304 2 65 1 18 2 242 5 95 2 148 1 67 1 77 1 340 1 60 1 231 1 49 1 50 1 
346 1 2 1 310 1 141 1 82 1 128 1 7 1 160 1 118 1 323 1 43 2 368 1 185 1 342 1 175 1 199 1 207 1 80 2 187 1 300 1 
91 1 16 1 
2 1 4 1 362 1 313 1 16 2 43 2 175 1 207 2 80 2 
337 1 185 1 314 1 
346 1 141 1 82 1 321 1 128 1 160 1 7 1 16 1 118 1 43 1 323 1 342 1 199 1 80 1 300 1 187 1 
43 3 2 3 310 1 4 1 175 3 80 3 207 3 16 1 
43 1 2 1 132 1 23 1 175 1 80 1 207 1 
43 1 2 1 4 1 362 1 23 1 175 1 313 1 80 1 207 1 
2 3 310 1 141 1 4 2 293 1 313 1 267 1 190 1 7 1 118 1 242 1 271 1 272 1 97 1 368 1 317 1 342 1 175 3 152 1 199 1 80 4 300 1 250 2 346 1 279 1 12 1 81 1 82 1 128 1 180 1 285 1 160 1 16 1 323 1 43 4 85 1 23 1 45 1 357 1 47 1 328 1 140 1 207 3 187 1 
43 2 307 1 2 1 310 1 211 1 175 1 80 2 207 2 16 1 
2 3 81 1 310 2 4 1 293 1 313 1 267 1 43 3 242 1 75 1 272 1 340 1 368 1 317 1 23 1 357 1 175 3 207 3 80 3 
43 2 2 2 310 1 4 1 185 1 175 2 313 1 314 1 80 2 207 2 
346 1 141 1 82 1 128 1 160 1 7 1 16 1 118 1 43 1 323 1 342 1 199 1 80 1 300 1 187 1 
346 1 141 1 82 1 14 1 128 1 160 1 7 1 16 1 117 1 118 1 43 1 323 1 199 1 80 1 300 1 
331 2 212 1 5 1 28 1 29 1 115 1 239 1 190 4 314 2 337 2 97 1 152 1 250 2 12 1 279 2 348 1 305 1 285 1 163 1 325 1 185 2 47 1 140 1 235 1 
43 1 2 1 292 1 23 1 267 1 175 1 80 1 207 1 
2 4 310 2 211 1 4 1 6 1 313 1 240 1 16 1 43 5 307 1 368 1 175 4 207 5 80 5 
43 2 2 2 292 1 132 1 23 1 175 2 80 2 207 2 
378 1 103 1 
378 1 103 1 
99 1 34 1 
99 1 34 1 
99 1 34 1 
265 1 378 1 103 1 
378 1 64 1 103 1 
99 1 149 1 34 1 268 1 378 2 103 2 
265 1 378 1 103 1 
265 1 378 1 103 1 
378 1 103 1 286 1 
378 1 103 1 286 1 
378 1 103 1 286 1 
188 1 2 1 168 1 4 1 312 2 52 1 214 2 242 2 55 2 76 1 79 1 175 1 80 1 246 2 374 1 81 2 378 2 103 2 43 1 162 1 86 1 109 1 132 1 23 1 288 1 165 2 328 1 207 1 
2 2 333 1 312 1 52 1 214 1 55 1 242 1 172 1 78 1 175 2 80 2 246 1 81 1 252 1 378 1 103 1 322 1 64 1 16 1 43 2 88 1 68 1 165 1 207 2 
365 1 87 1 177 1 
87 1 173 1 177 1 
365 2 87 3 35 1 173 1 63 1 261 1 
365 1 87 2 295 1 35 1 173 1 261 1 
365 1 87 2 35 1 173 1 261 2 
290 1 332 1 291 1 212 1 5 1 236 1 74 1 95 1 242 5 148 3 172 1 77 1 340 2 121 2 249 1 301 2 81 5 252 1 348 1 253 4 281 1 282 2 102 1 305 1 304 1 322 1 351 1 18 1 67 2 381 1 164 3 234 1 
290 2 332 2 291 2 212 3 5 3 236 1 146 1 242 9 95 2 148 8 77 1 370 5 340 5 121 6 123 1 249 1 81 9 347 1 348 3 253 7 282 6 228 1 305 3 304 2 322 4 350 1 351 3 18 6 67 6 287 1 381 3 164 9 382 5 234 1 50 1 
290 1 332 1 291 1 212 1 5 1 95 1 242 3 148 3 77 1 340 3 121 2 301 1 81 3 348 1 253 2 281 1 102 1 282 2 304 1 305 1 322 1 351 2 67 2 381 1 164 4 50 1 
290 1 332 1 291 1 212 2 5 2 95 1 242 4 148 5 77 1 340 4 121 4 123 1 301 2 81 4 348 2 253 3 281 1 282 4 102 1 228 1 304 1 305 2 322 2 351 3 67 4 287 1 381 2 164 7 50 1 
91 1 258 1 118 1 
341 1 118 1 
208 1 
323 1 118 1 
323 1 258 2 82 1 198 1 315 1 118 3 
323 1 82 1 118 1 
112 1 118 1 
27 1 3 2 331 8 142 1 212 3 72 1 239 5 190 14 215 2 279 6 348 3 256 2 203 1 257 1 325 4 133 1 289 2 383 1 
27 1 3 2 331 8 142 1 212 3 72 1 239 7 190 14 215 2 279 6 348 3 256 2 203 1 257 1 325 4 133 1 289 2 383 3 
27 1 3 2 331 8 142 1 212 3 72 1 239 5 190 14 363 1 215 2 279 6 348 3 256 2 203 1 257 1 325 4 133 1 289 2 383 1 
27 1 3 3 331 21 142 1 5 3 212 6 72 2 239 14 190 40 170 1 32 1 215 3 319 1 278 4 250 2 61 3 279 19 12 1 348 6 256 2 203 1 305 3 379 1 285 1 257 2 325 7 259 1 381 3 131 1 133 1 289 3 47 1 140 1 70 1 383 7 
27 1 3 2 331 9 142 1 212 3 72 1 238 1 239 7 190 16 215 2 319 1 250 4 12 2 279 7 348 3 256 2 203 1 285 2 257 1 352 1 325 5 289 2 47 2 140 2 383 2 
329 1 141 1 93 1 7 1 365 1 173 1 59 1 220 2 244 1 177 1 300 1 224 1 346 1 376 2 320 1 377 1 157 1 202 1 15 1 159 1 63 1 160 1 306 1 17 1 129 1 87 2 137 1 138 1 25 1 186 1 
329 1 141 1 93 1 7 1 365 1 269 1 173 1 220 3 244 1 177 1 300 1 224 1 153 1 346 1 280 1 376 3 320 1 377 1 157 1 159 1 63 1 160 1 306 1 17 1 129 1 87 2 137 1 138 2 25 1 186 1 
329 1 141 1 93 1 7 1 365 1 269 1 173 1 220 2 177 1 300 1 224 1 346 1 280 1 376 2 320 1 157 1 159 1 63 1 160 1 17 1 87 2 137 1 138 2 25 1 186 1 
141 1 93 2 7 1 118 1 147 1 366 1 220 1 371 1 199 1 244 1 300 1 375 1 153 1 346 1 376 1 320 2 157 2 42 1 160 1 17 2 323 1 129 1 166 1 
329 1 141 1 93 1 7 1 365 1 269 1 173 1 59 1 220 1 244 1 177 1 300 1 346 1 376 1 320 1 377 1 157 1 15 1 159 1 63 1 160 1 306 1 17 1 129 1 87 2 25 1 
38 1 
290 1 141 2 291 1 236 1 293 1 294 2 7 1 94 1 242 5 95 1 148 2 340 2 196 1 344 4 199 2 297 1 300 2 98 2 249 3 346 1 158 2 304 1 160 2 351 2 18 6 66 1 67 2 307 1 164 2 23 1 357 1 166 1 110 1 207 1 209 2 311 1 213 2 267 1 171 1 118 1 120 2 272 1 77 1 366 1 216 1 36 1 219 1 318 1 124 1 80 1 81 5 83 2 323 1 43 1 384 1 
249 1 81 3 311 1 293 1 158 1 267 1 54 1 18 2 43 1 242 3 307 1 272 1 23 1 219 1 357 1 36 1 344 2 110 1 318 1 207 1 80 1 384 1 
293 1 311 1 267 1 54 1 242 3 272 1 120 1 77 1 340 1 36 1 219 1 344 3 318 1 80 1 249 1 81 3 18 1 43 1 307 1 23 1 357 1 110 1 207 1 384 1 
249 1 81 3 311 1 293 1 158 1 213 1 267 1 54 1 18 2 43 1 242 3 307 1 120 1 272 1 77 1 340 1 23 1 219 1 357 1 36 1 344 3 110 1 318 1 207 1 80 1 384 1 
290 1 209 2 236 1 311 1 293 1 294 2 267 1 213 4 54 1 95 1 242 5 148 1 120 4 272 1 77 5 196 1 340 5 277 1 36 1 219 1 344 6 318 1 80 1 98 2 249 3 81 5 62 1 158 4 304 1 83 2 351 2 84 1 18 7 43 1 66 1 67 1 307 1 107 1 108 1 23 1 357 1 110 1 207 1 384 1 
290 1 236 1 293 1 294 2 242 4 95 1 148 1 196 1 340 2 344 4 98 2 249 2 158 2 304 1 351 2 18 4 66 1 307 1 67 1 164 2 23 1 357 1 110 1 207 1 209 2 311 1 267 1 213 2 272 1 120 2 77 1 219 1 36 1 318 1 80 1 124 1 81 4 83 2 43 1 384 1 
290 1 209 2 236 1 293 1 311 1 294 2 213 2 267 1 95 1 242 4 148 1 120 2 272 1 77 1 340 1 196 1 36 1 219 1 344 4 318 1 80 1 249 2 98 2 81 4 158 2 62 1 304 1 83 2 18 4 351 2 43 1 84 1 66 1 67 1 307 1 107 1 23 1 357 1 110 1 207 1 384 1 
290 1 209 2 236 1 293 1 311 1 294 2 213 2 267 1 95 1 242 4 148 1 120 2 272 1 77 1 340 1 196 1 36 1 219 1 344 4 318 1 80 1 249 2 98 2 81 4 158 2 62 1 304 1 83 2 18 4 351 2 43 1 84 1 66 1 67 1 307 1 107 1 23 1 357 1 110 1 207 1 384 1 
290 1 209 2 334 1 236 1 293 1 311 1 213 2 267 1 95 1 242 4 148 1 120 2 272 1 77 1 339 2 151 1 340 1 196 1 367 1 36 1 219 1 344 4 318 1 80 1 249 2 98 2 81 4 158 2 62 1 304 1 18 4 43 1 324 2 67 1 307 1 164 2 23 1 357 1 110 1 207 1 384 1 
290 1 209 2 236 1 293 1 311 1 294 2 267 1 213 3 95 1 242 4 148 1 272 1 120 3 77 1 340 1 196 1 36 1 219 1 344 5 318 1 80 1 249 2 98 2 81 4 62 1 158 3 304 1 83 2 351 2 84 1 43 1 18 5 66 1 67 1 307 1 108 1 107 1 23 1 357 1 110 1 207 1 384 1 
290 1 209 2 236 1 293 1 311 1 294 2 267 1 213 3 95 1 242 4 148 1 272 1 120 3 77 1 340 1 196 1 36 1 219 1 344 5 318 1 80 1 249 2 98 2 81 4 62 1 158 3 304 1 83 2 351 2 84 1 43 1 18 5 66 1 67 1 307 1 108 1 107 1 23 1 357 1 110 1 207 1 384 1 
290 1 209 2 236 1 311 1 293 1 213 2 267 1 95 1 242 4 148 1 120 2 272 1 77 1 339 2 340 1 196 1 367 1 36 1 219 1 344 4 318 1 124 1 80 1 249 2 98 2 81 4 158 2 304 1 18 4 43 1 324 2 67 1 307 1 164 2 23 1 357 1 110 1 207 1 384 1 
91 1 3 1 250 2 279 2 331 3 12 1 142 1 212 1 348 1 256 1 239 2 203 1 190 5 285 1 16 2 215 1 325 2 97 1 289 1 47 1 152 1 140 1 235 1 
331 8 5 1 212 1 239 2 190 14 314 4 145 1 271 1 337 11 97 2 152 1 278 3 250 4 279 6 12 2 61 3 154 1 348 2 178 1 305 2 285 2 16 1 325 1 20 1 259 1 183 1 381 2 185 11 139 1 47 2 383 1 140 2 70 1 
1 1 2 1 141 1 310 1 331 1 190 2 314 1 7 1 118 1 271 1 97 1 368 1 342 1 175 1 199 1 152 1 80 2 300 1 222 1 346 1 250 2 12 1 279 1 82 1 321 1 156 1 128 1 160 1 285 1 16 1 323 1 43 2 20 1 183 1 47 1 140 1 207 1 187 1 
3 1 2 1 141 1 331 14 142 1 5 2 239 7 190 27 7 2 193 1 337 6 97 3 150 2 342 2 199 1 152 3 300 1 250 6 346 2 12 3 348 5 201 2 256 2 203 1 305 2 160 1 16 3 20 1 23 1 207 1 26 1 27 1 310 1 212 5 314 6 215 2 118 2 271 1 119 2 274 1 368 1 175 1 80 3 279 13 82 2 227 2 128 2 285 3 43 3 323 2 325 6 183 1 381 2 289 2 185 6 45 2 47 3 383 1 140 3 187 2 
2 1 310 1 141 8 331 1 237 1 190 2 336 1 7 2 118 3 192 1 269 1 273 1 271 1 97 2 366 1 217 1 174 2 175 1 199 2 152 2 80 1 9 1 300 7 346 2 250 4 12 2 279 1 202 1 160 8 285 2 43 1 323 2 20 1 233 1 47 2 140 2 166 1 207 1 235 1 
2 1 331 1 4 1 5 1 212 1 239 1 313 1 190 3 314 1 337 1 97 1 175 1 152 1 80 1 373 1 250 2 12 1 279 2 348 1 305 1 285 1 43 1 325 1 183 1 381 1 185 1 47 1 140 1 207 1 
250 2 12 1 331 2 348 1 28 1 239 1 190 2 314 1 305 1 285 1 337 1 97 1 185 1 47 1 383 1 152 1 140 1 235 1 
250 2 12 1 279 2 5 1 212 1 29 1 239 1 190 2 314 1 285 1 325 1 337 1 97 1 185 1 47 1 152 1 140 1 235 1 
331 2 5 1 212 1 239 2 190 4 314 2 337 2 97 1 152 1 250 2 12 1 279 2 348 1 305 1 285 1 325 1 381 1 185 2 47 1 140 1 383 1 235 1 
250 2 12 1 331 2 348 1 28 1 239 1 190 2 314 1 305 1 285 1 337 1 97 1 217 1 185 1 47 1 383 1 152 1 140 1 
250 2 12 1 279 2 5 1 212 1 29 1 239 1 190 2 314 1 285 1 325 1 337 1 97 1 217 1 185 1 47 1 152 1 140 1 
331 2 5 1 212 1 239 2 190 4 314 2 337 2 97 1 217 1 152 1 250 2 12 1 279 2 348 1 305 1 285 1 325 1 381 1 185 2 47 1 140 1 383 1 
250 2 279 2 12 1 331 2 212 1 5 1 348 1 239 2 190 4 314 2 305 1 285 1 325 1 337 2 97 1 381 1 185 2 47 1 383 1 152 1 140 1 
331 1 141 1 190 2 7 1 118 1 271 1 97 1 342 1 199 1 152 1 80 1 300 1 346 1 250 2 12 1 279 1 82 1 128 1 160 1 285 1 16 1 323 1 43 1 20 1 45 1 47 1 140 1 187 1 
331 1 141 1 190 2 7 1 117 1 118 1 271 1 97 1 199 1 152 1 80 1 300 1 346 1 250 2 12 1 279 1 82 1 155 1 14 1 128 1 160 1 285 1 16 1 323 1 43 1 20 1 47 1 140 1 
331 2 5 1 212 1 239 2 190 4 314 2 337 2 97 1 152 1 250 2 12 1 279 2 348 1 305 1 285 1 325 1 381 1 183 1 185 2 47 1 140 1 383 1 
331 2 141 1 212 1 5 1 239 2 190 4 314 2 7 1 118 1 337 2 150 1 97 1 342 1 152 1 80 1 300 1 346 1 250 2 279 2 12 1 348 1 82 1 202 1 305 1 128 1 160 1 285 1 323 1 43 1 325 1 381 1 185 2 45 1 47 1 383 1 140 1 187 1 
2 1 331 2 212 1 5 1 4 1 239 1 313 1 190 3 314 1 337 1 97 1 175 1 152 1 80 1 221 1 250 2 279 1 12 1 348 1 305 1 285 1 43 1 183 1 381 1 185 1 47 1 383 1 140 1 207 1 
309 1 3 1 263 1 331 20 142 1 5 4 212 5 266 1 238 1 239 8 190 41 116 4 215 1 194 1 319 1 299 1 248 2 278 4 126 1 100 1 250 6 12 3 279 21 61 3 348 5 127 1 256 1 203 1 284 1 305 4 285 3 105 1 354 1 325 4 326 1 259 3 381 4 289 1 47 3 260 1 140 3 70 1 383 4 
309 1 3 1 263 1 331 20 142 1 5 3 212 4 266 1 238 1 239 7 190 38 116 4 215 1 194 1 319 2 299 1 248 2 278 4 126 1 100 1 250 8 12 4 279 18 61 3 348 5 127 1 256 1 203 1 284 1 305 4 285 4 105 1 354 1 325 4 326 1 259 3 381 4 289 1 47 4 260 1 140 4 70 1 383 3 
309 1 3 1 263 1 331 27 142 1 5 7 212 8 266 1 238 1 239 14 190 52 116 4 215 1 194 1 319 1 299 1 248 1 278 4 126 1 100 1 250 4 12 2 279 25 61 4 348 8 127 1 256 1 178 2 203 1 284 1 305 7 285 2 354 1 325 7 259 2 381 7 289 1 47 2 260 1 140 2 70 2 383 7 
309 2 263 1 331 9 5 3 212 3 238 1 239 6 190 19 116 2 241 1 194 1 248 1 278 2 250 4 12 2 279 10 61 1 348 3 127 1 284 1 305 3 285 2 325 3 326 1 259 1 381 3 47 2 140 2 70 1 383 3 
309 1 263 1 331 14 212 2 5 2 266 1 239 4 238 1 190 26 116 4 194 1 319 2 248 2 299 1 278 2 126 1 100 1 250 6 279 12 12 3 61 2 348 3 127 1 284 2 305 3 285 3 354 1 325 2 259 2 381 3 47 3 383 2 140 3 260 1 
55 1 149 1 195 1 197 1 134 1 165 1 378 1 214 1 103 1 246 1 
88 1 64 1 
19 1 55 1 210 1 122 1 165 1 378 1 214 1 103 1 246 1 
188 1 2 1 168 1 4 1 312 2 52 1 214 1 55 1 242 1 76 1 79 1 175 1 80 1 246 1 374 1 81 1 378 1 103 1 43 1 162 1 86 1 109 1 132 1 23 1 288 1 165 1 328 1 207 1 
188 1 2 1 168 1 4 1 312 2 52 1 214 1 55 1 242 1 76 1 79 1 175 1 80 1 246 1 374 1 81 1 378 1 103 1 43 1 162 1 86 1 109 1 132 1 23 1 288 1 165 1 328 1 207 1 
188 1 2 1 168 1 4 1 312 2 52 1 214 1 55 1 242 1 76 1 79 1 175 1 80 1 246 1 374 1 81 1 378 1 103 1 43 1 162 1 86 1 109 1 132 1 23 1 288 1 165 1 328 1 207 1 
265 1 69 1 268 1 
265 1 69 1 268 1 
37 1 286 1 
37 1 268 1 286 1 
68 1 78 1 
2 2 333 1 312 1 214 1 242 1 55 1 172 1 78 1 175 2 80 2 246 1 81 1 252 1 253 1 378 1 40 1 103 1 322 1 64 1 16 1 43 2 162 1 88 1 68 1 288 1 165 1 207 2 
265 1 69 1 
37 1 268 1 286 1 
141 2 331 1 113 1 237 1 190 2 7 1 118 1 271 1 97 1 174 2 243 1 152 1 80 2 9 1 125 1 300 2 346 1 250 2 12 1 279 1 283 1 160 2 285 1 323 1 43 2 20 1 183 1 232 1 47 1 140 1 207 2 
329 1 346 1 141 2 377 1 157 1 202 1 191 1 63 1 7 1 160 2 365 1 269 1 96 1 87 2 173 1 358 1 177 1 25 1 300 2 
329 1 346 1 141 1 377 1 157 1 63 1 160 1 7 1 365 1 269 1 87 2 173 1 184 1 358 1 177 1 25 1 300 1 
346 1 141 1 157 1 191 1 42 1 7 1 160 1 118 1 323 1 366 1 199 1 166 1 300 1 200 1 
329 1 346 1 141 1 377 1 157 1 191 1 63 1 7 1 160 1 365 1 269 1 96 1 87 2 173 1 358 1 177 1 25 1 300 1 
275 1 
91 1 148 1 67 1 77 1 340 1 49 1 65 1 
290 1 236 1 294 1 95 1 242 1 148 1 77 1 340 2 249 1 81 1 304 1 83 1 351 1 18 1 66 1 67 1 164 1 
0 2 290 4 141 3 291 2 236 4 5 2 7 4 94 1 95 4 242 5 148 9 340 8 341 3 199 1 300 3 249 3 346 3 348 2 349 2 202 1 304 4 305 2 160 3 65 1 353 1 18 5 351 6 205 2 258 2 67 8 308 2 164 12 357 2 112 2 212 2 315 1 118 10 119 2 77 2 369 1 276 1 121 6 176 1 223 1 81 5 82 3 226 2 282 6 179 2 323 3 229 2 380 2 381 2 49 1 
290 2 291 1 236 2 5 2 212 2 266 1 94 1 242 1 95 2 56 1 148 8 77 2 340 5 121 5 299 1 278 1 249 1 126 1 100 1 81 1 61 1 348 2 225 1 282 5 304 2 305 2 18 1 351 3 380 1 67 5 259 1 381 2 308 2 164 6 260 1 
290 1 27 1 188 1 2 1 236 1 212 1 4 1 215 1 95 1 242 1 148 2 175 1 80 1 374 1 81 1 348 2 256 1 304 1 43 1 84 1 380 1 67 2 132 1 308 2 23 1 289 1 328 1 207 1 
290 1 236 1 304 1 65 1 95 1 67 1 148 1 77 1 340 1 49 1 
348 2 5 2 212 2 282 5 305 2 351 5 380 1 67 5 148 5 119 1 381 2 340 5 121 5 308 2 164 10 
18 1 242 1 249 1 81 1 77 1 340 1 
290 2 141 4 291 2 236 1 30 1 7 1 171 1 118 1 95 2 94 2 242 3 148 2 216 1 366 1 369 2 199 2 300 4 249 2 346 1 81 3 304 2 160 4 181 1 323 1 353 1 18 4 67 2 166 1 50 1 
2 2 141 1 4 2 190 1 7 1 118 1 271 1 97 1 342 1 175 2 199 1 152 1 80 3 300 1 250 2 346 1 279 1 12 1 82 1 128 1 285 1 160 1 16 1 43 3 85 1 323 1 45 1 47 1 328 1 140 1 207 2 187 1 
290 1 3 1 291 1 236 1 282 2 304 1 351 2 95 1 94 1 67 2 148 1 77 2 340 4 121 2 164 4 
90 1 55 1 165 1 
55 1 197 1 78 1 165 1 10 1 
90 1 55 1 165 1 
90 1 55 1 165 1 
55 1 165 1 345 1 
55 1 165 1 345 1 
55 1 165 1 345 1 
55 1 165 1 
378 1 103 1 
27 1 3 1 331 8 142 1 212 3 238 1 239 5 190 15 215 2 278 1 250 2 61 1 279 7 12 1 348 3 256 2 203 1 285 1 325 4 259 1 289 2 47 1 383 1 260 1 140 1 
27 1 3 1 331 10 142 1 212 3 238 1 239 6 190 18 215 2 343 1 278 2 250 4 279 8 12 2 61 1 348 4 256 2 203 1 305 1 285 2 325 4 259 1 381 1 289 2 47 2 260 1 140 2 70 1 383 2 
27 1 3 1 331 13 142 1 5 2 212 5 266 1 238 1 239 7 190 26 215 2 343 1 319 1 299 1 278 1 126 1 100 1 250 6 61 1 279 13 12 3 348 5 256 2 203 1 305 2 285 3 325 5 259 1 381 2 289 2 47 3 383 2 260 1 140 3 
27 1 3 1 331 14 142 1 5 1 212 4 266 1 238 1 239 9 190 24 215 2 343 1 319 1 299 1 278 1 126 1 250 6 100 1 61 1 279 10 12 3 348 5 256 2 203 1 305 2 285 3 325 5 259 1 381 2 289 2 47 3 383 4 260 1 140 3 
27 1 3 1 331 8 142 1 212 3 238 1 239 5 190 15 215 2 278 1 250 2 61 1 279 7 12 1 348 3 256 2 203 1 285 1 325 4 259 1 289 2 47 1 383 1 260 1 140 1 
331 6 5 2 212 2 266 1 238 1 239 2 190 12 299 1 278 1 126 1 250 2 100 1 61 1 279 6 12 1 348 2 305 2 285 1 325 1 259 1 381 2 47 1 383 1 260 1 140 1 
27 1 3 1 331 14 142 1 5 1 212 4 266 1 238 1 239 7 190 25 215 2 343 1 319 2 299 1 278 1 126 1 100 1 250 8 279 11 12 4 61 1 348 5 256 2 203 1 305 2 285 4 325 5 259 1 381 2 289 2 47 4 383 2 260 1 140 4 
331 9 5 2 212 2 266 1 238 1 239 6 190 16 319 2 299 1 278 1 126 1 100 1 250 8 279 7 12 4 61 1 348 3 305 3 285 4 325 3 326 1 259 1 381 3 47 4 383 3 260 1 140 4 
279 4 331 3 142 2 212 1 348 1 256 1 203 1 239 6 190 7 215 3 325 3 289 3 383 3 
27 1 3 1 331 14 142 1 5 1 212 4 266 1 238 1 239 7 190 25 215 2 319 2 299 1 278 1 126 1 100 1 250 8 279 11 12 4 61 1 348 5 256 2 203 1 305 2 285 4 325 5 326 1 259 1 381 2 289 2 47 4 383 2 260 1 140 4 
27 1 3 1 331 9 142 1 212 3 239 7 190 17 215 2 319 1 250 4 12 2 279 8 348 3 256 2 203 1 285 2 325 4 289 2 47 2 140 2 383 3 
91 1 3 1 279 2 331 3 142 1 348 1 212 1 256 1 203 1 239 2 190 5 215 1 325 2 289 1 
250 2 279 2 12 1 331 2 212 1 5 1 348 1 239 2 190 4 305 1 285 1 325 1 381 1 343 1 47 1 140 1 383 1 
278 2 279 4 61 1 331 3 212 1 5 1 348 1 239 2 190 7 305 1 325 1 259 1 381 1 70 1 383 1 
27 1 3 1 331 13 142 1 212 5 5 2 239 7 190 25 215 2 319 1 278 2 250 2 61 2 279 12 12 1 348 5 256 2 178 1 203 1 305 2 285 1 325 5 381 2 289 2 139 1 47 1 70 1 383 2 140 1 
278 1 279 1 190 1 
331 1 61 1 190 1 
250 2 12 1 279 3 331 3 348 1 5 1 212 1 239 3 190 6 305 1 285 1 325 2 119 1 381 1 343 1 47 1 140 1 383 1 
331 6 5 2 212 2 266 1 238 1 239 2 190 12 299 1 278 1 126 1 250 2 100 1 61 1 279 6 12 1 348 2 305 2 285 1 325 1 259 1 381 2 47 1 383 1 260 1 140 1 
331 3 279 3 348 1 212 1 256 1 239 2 190 6 215 1 325 1 289 1 383 1 
250 2 331 1 279 2 12 1 142 1 239 2 203 1 169 1 190 3 285 1 215 1 325 1 289 1 47 1 383 1 319 1 140 1 
27 1 250 2 12 1 331 5 279 5 348 2 212 2 256 1 238 1 239 5 190 10 285 1 215 2 325 3 289 2 47 1 140 1 383 2 
250 2 12 1 331 2 348 1 238 1 239 1 190 2 305 1 285 1 47 1 140 1 383 1 
250 2 279 2 12 1 331 2 212 1 5 1 348 1 239 2 238 1 190 4 305 1 285 1 325 1 381 1 47 1 140 1 383 1 
250 6 279 2 12 3 331 1 238 1 239 2 169 1 190 3 285 3 215 1 325 1 326 1 289 1 47 3 319 1 140 3 383 1 
27 1 3 1 331 16 142 1 5 2 212 5 238 1 239 9 190 31 32 1 215 2 343 1 319 1 278 3 250 8 279 15 12 4 61 3 348 5 256 2 203 1 305 2 379 1 285 4 325 5 326 1 259 1 381 2 131 1 289 2 47 4 140 4 383 4 
43 1 307 1 211 1 80 1 207 1 204 1 16 1 
372 1 211 1 204 1 16 1 43 1 307 1 130 1 182 1 356 1 8 1 207 1 80 1 
323 1 91 1 346 1 141 1 366 1 166 1 199 1 7 1 160 1 118 1 300 1 
2 1 346 1 310 1 141 1 82 1 128 1 7 1 160 1 16 1 118 1 323 1 43 2 175 1 199 1 207 1 80 2 300 1 187 1 
112 1 2 1 346 1 310 1 141 1 82 2 179 1 128 1 7 1 160 1 118 3 323 2 43 1 369 1 175 1 207 1 80 1 300 1 187 1 
112 1 2 1 346 1 310 1 141 1 82 2 179 1 128 1 7 1 160 1 118 3 117 1 323 2 43 1 369 1 175 1 207 1 80 1 300 1 
112 1 141 3 7 1 118 4 242 2 77 1 369 1 340 1 341 1 199 1 300 3 346 1 81 2 82 1 179 1 160 3 161 1 18 1 323 1 258 1 22 1 46 1 357 1 
112 1 346 1 81 2 141 3 82 1 226 1 179 1 7 1 160 3 118 4 323 1 18 1 242 2 258 1 77 1 340 1 369 1 22 1 341 1 357 1 199 1 300 3 
346 1 141 1 336 1 7 1 160 1 300 1 
346 2 141 7 82 1 237 1 202 1 144 1 336 1 364 1 160 7 315 1 7 3 118 3 192 1 323 2 269 1 273 1 296 1 174 1 233 1 199 2 300 6 
2 1 3 1 141 1 331 7 142 1 239 5 190 13 7 1 193 1 150 1 97 2 342 1 152 2 300 1 250 4 346 1 12 2 348 3 201 1 202 1 256 2 203 1 160 1 16 3 23 1 207 1 27 1 310 1 212 3 118 1 215 2 175 1 80 2 279 6 82 1 283 1 128 1 285 2 43 2 323 1 325 4 183 1 289 2 45 1 47 2 383 1 140 2 187 1 
290 2 0 1 141 1 236 2 118 2 95 2 242 3 148 1 77 1 340 1 341 1 199 1 300 1 249 1 81 3 253 1 226 1 304 2 160 1 65 1 353 1 18 2 229 1 67 1 205 1 258 1 357 1 49 1 
223 1 346 1 141 2 82 1 202 1 336 1 160 2 315 1 7 2 118 2 323 1 258 1 300 2 
346 1 141 4 335 1 202 1 7 1 160 4 118 1 323 1 366 1 22 1 199 1 166 1 300 4 
346 1 141 2 251 1 82 1 254 1 144 1 364 1 160 2 7 2 118 1 323 1 316 1 369 1 300 2 
346 1 87 1 141 1 173 1 199 1 177 1 25 1 7 1 160 1 300 1 
323 1 346 1 269 1 141 2 237 1 202 1 243 1 7 1 160 2 118 1 300 2 
346 2 141 5 335 1 202 1 237 1 160 5 7 2 118 3 192 1 323 2 366 1 369 1 233 1 166 1 199 1 300 4 
346 2 141 5 335 1 202 1 237 1 160 5 7 2 118 3 323 2 366 1 369 1 233 1 166 1 199 1 300 4 247 1 
2 1 346 1 310 1 141 1 82 1 128 1 7 1 160 1 16 1 118 1 117 1 323 1 43 2 175 1 199 1 207 1 80 2 300 1 
346 1 141 1 82 1 144 1 364 1 160 1 315 1 7 2 118 1 323 1 296 1 369 1 300 1 
43 1 89 1 302 1 113 1 232 1 80 1 207 1 104 1 125 1 
302 1 57 1 136 1 
89 1 302 1 44 1 104 1 16 1 
89 2 302 1 81 2 253 1 293 1 267 1 104 2 16 1 242 2 272 1 77 1 355 1 57 1 44 2 340 1 317 1 23 1 357 1 136 1 
91 1 224 1 137 1 186 1 
224 1 129 1 376 1 137 1 220 1 244 1 186 1 
320 1 93 1 220 1 
224 1 129 1 376 3 230 2 71 1 59 1 137 1 53 1 220 3 244 1 41 1 186 1 
224 1 129 1 376 2 137 1 138 1 220 2 244 1 359 1 186 1 
376 1 365 1 129 1 87 1 21 1 59 1 206 1 220 1 244 1 177 1 186 1 
129 1 376 1 59 1 137 1 220 1 244 1 186 1 
224 1 129 1 376 1 59 1 137 2 220 1 244 1 
51 1 129 2 101 1 376 2 59 1 137 1 220 2 244 2 73 1 186 1 
224 1 376 3 264 1 255 1 33 1 129 1 21 1 59 1 137 1 138 2 220 3 244 1 186 2 
224 1 376 2 63 1 365 1 129 1 87 2 173 1 59 1 135 1 137 1 138 1 220 2 244 1 177 1 186 1 
224 1 376 4 114 1 255 1 129 2 21 1 59 1 137 1 138 2 220 4 244 2 359 1 186 2 
224 1 129 1 376 1 59 1 137 1 220 1 244 1 186 1 
224 2 376 4 71 1 255 1 53 1 129 1 230 1 21 1 137 2 138 2 220 4 244 1 245 1 186 3 
92 1 224 1 376 2 129 1 106 1 59 1 137 1 138 1 220 2 244 1 186 1 360 1 
224 1 376 3 71 2 53 1 129 1 270 1 230 2 59 1 137 1 220 3 244 1 186 1 
262 1 338 2 189 1 186 2 
129 1 376 1 59 1 143 1 220 1 244 1 
224 1 129 1 376 2 264 1 59 1 137 1 138 1 220 2 244 1 186 1 
298 1 
224 1 129 1 376 1 59 1 137 1 220 1 244 1 186 1 
224 1 376 3 264 1 129 1 230 1 59 1 138 1 137 1 220 3 244 1 186 1 
21 1 255 1 245 1 186 1 
137 1 186 1 

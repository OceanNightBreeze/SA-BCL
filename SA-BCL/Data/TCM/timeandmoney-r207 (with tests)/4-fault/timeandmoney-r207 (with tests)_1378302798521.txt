#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 126 (197,328,331) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 195 9 120 1 179 4 336 2 125 1 267 1 202 1 290 1 43 1 294 1 253 2 130 1 183 1 185 2 48 9 70 3 233 1 92 1 368 1 375 6 346 2 95 2 144 2 172 1 173 5 118 2 32 1 
176 1 195 9 120 1 179 4 336 2 125 1 267 1 202 1 290 1 43 1 294 1 253 2 130 1 183 1 185 2 48 9 70 3 233 1 92 1 368 1 375 6 346 2 95 2 172 1 144 2 173 5 118 2 32 1 
176 1 195 10 120 1 179 5 336 2 125 1 267 1 202 1 290 1 43 1 294 1 253 2 130 1 183 1 185 2 48 10 70 4 233 1 92 1 368 1 375 7 346 2 95 2 172 1 144 2 173 6 118 2 32 1 
195 7 120 1 179 3 336 2 125 1 267 1 202 1 290 1 43 1 294 1 253 2 130 1 183 1 185 2 48 7 70 2 233 1 92 1 368 1 375 4 346 2 95 2 172 1 144 1 173 4 118 2 32 1 
70 1 176 1 48 4 195 4 179 2 267 1 202 1 375 3 346 1 43 1 95 1 144 2 253 1 173 3 130 1 118 1 183 1 185 1 
48 2 195 2 120 1 92 1 336 1 202 1 181 1 95 1 173 1 253 1 362 1 130 1 118 1 183 1 226 1 185 1 
48 3 70 1 195 3 179 1 336 1 125 1 202 1 375 1 253 2 173 2 130 1 118 2 183 1 
176 1 48 9 70 3 195 9 233 1 179 4 368 1 50 1 336 1 267 1 125 1 202 1 375 7 346 1 43 1 95 1 144 2 173 5 253 2 130 1 118 2 57 1 183 1 185 1 
176 1 48 9 70 3 195 9 233 1 179 4 368 1 50 1 336 1 267 1 125 1 202 1 375 7 346 1 43 1 95 1 144 2 173 5 253 2 130 1 118 2 57 1 183 1 185 1 
204 1 365 1 84 1 
204 1 340 2 248 1 
220 2 116 2 136 1 26 2 245 1 13 2 310 2 80 2 
0 1 220 3 245 1 4 1 8 1 288 1 270 1 44 1 157 1 13 2 272 1 107 1 228 2 184 1 89 1 18 1 90 1 49 1 110 1 111 1 136 1 299 2 211 2 300 1 369 1 372 1 213 1 344 1 235 2 259 1 116 2 53 1 26 2 326 2 281 1 310 3 80 2 
220 1 116 1 136 1 26 1 13 1 378 1 310 1 149 1 374 1 80 1 
220 1 71 1 178 1 84 1 60 1 247 1 9 1 374 1 204 1 306 1 261 1 310 1 274 1 80 1 
220 1 178 2 84 1 60 1 247 1 9 1 374 1 204 1 306 2 116 1 26 1 13 1 310 1 274 1 80 1 
306 1 178 1 23 1 67 1 174 1 
204 1 306 2 178 2 309 1 84 1 67 1 174 1 227 1 
306 1 178 1 174 1 
220 1 83 1 178 1 136 1 149 1 374 1 306 1 116 1 26 1 13 1 378 1 310 1 67 1 80 1 
204 1 
204 1 306 2 178 2 84 1 160 1 67 1 174 1 227 1 
36 1 38 1 178 5 284 1 84 1 244 1 204 1 306 5 190 1 62 1 216 2 97 2 320 1 262 2 256 1 225 1 67 2 174 2 227 1 
365 1 245 1 
220 2 245 2 100 1 116 1 26 1 158 1 13 1 310 2 80 2 
151 1 171 1 162 1 
0 1 220 1 110 1 285 1 299 1 211 1 245 1 369 1 288 1 344 1 235 1 270 1 53 1 157 1 310 1 107 1 
0 1 162 1 220 2 19 1 110 1 299 1 211 1 369 1 288 1 344 1 11 1 235 1 270 1 53 1 26 1 157 1 13 1 310 2 107 1 80 1 
220 5 35 1 19 2 315 1 245 1 100 1 201 1 11 1 116 1 261 1 26 4 13 4 310 5 80 5 
220 2 26 2 13 2 378 1 310 2 169 1 374 1 80 2 
220 3 116 1 19 1 26 3 245 1 13 3 310 3 80 3 
220 1 26 1 13 1 378 1 310 1 374 1 80 1 
220 1 116 1 26 1 158 1 13 1 310 1 100 1 374 1 80 1 
0 1 282 1 220 4 178 1 245 1 60 1 247 1 100 1 8 1 288 1 9 1 11 1 270 1 157 1 13 3 107 1 274 1 228 1 184 1 89 1 18 1 90 1 323 1 19 1 49 1 110 1 111 1 136 1 299 1 211 1 300 1 369 1 372 1 374 1 213 1 344 1 235 1 306 1 116 2 53 1 26 3 326 2 310 4 80 3 
220 2 35 1 19 1 261 1 26 1 245 1 13 1 310 2 80 2 
220 3 323 1 19 2 178 1 60 1 247 1 100 1 9 1 374 1 11 1 204 1 306 1 116 1 26 3 13 3 310 3 274 1 15 1 80 3 
220 2 162 1 19 1 100 1 171 1 116 1 26 2 13 2 310 2 80 2 
0 1 220 1 110 1 299 1 211 1 245 1 369 1 288 1 344 1 235 1 270 1 53 1 157 1 310 1 107 1 
0 1 235 1 220 1 110 1 270 1 53 1 187 1 198 1 211 1 299 1 245 1 369 1 310 1 288 1 344 1 
283 1 8 1 151 2 45 1 184 1 89 1 228 4 17 1 132 1 90 1 18 2 162 2 111 1 213 1 303 1 24 1 376 1 171 2 27 1 326 2 281 2 312 1 379 1 194 1 
220 1 26 1 13 1 310 1 9 1 374 1 80 1 169 1 
358 1 328 1 
358 1 328 1 
197 1 126 1 
197 1 126 1 
197 1 126 1 
65 1 358 1 328 1 
197 1 358 1 126 1 328 1 
331 1 358 1 328 1 
65 1 358 1 328 1 
65 1 358 1 328 1 
105 1 358 1 328 1 
105 1 358 1 328 1 
105 1 358 1 328 1 
220 2 91 1 331 1 2 1 178 1 123 1 245 1 112 1 373 1 113 1 170 1 41 1 305 1 306 1 25 1 86 1 358 1 26 2 159 1 13 2 310 2 79 1 328 1 80 2 
297 1 91 1 2 2 196 1 178 2 209 1 343 1 93 1 170 2 41 3 204 1 306 2 86 2 358 2 252 2 159 2 58 1 328 2 321 1 
346 1 95 1 185 1 
181 1 95 1 185 1 
346 2 332 1 181 1 239 1 363 1 185 3 
264 1 346 1 332 1 181 1 239 1 185 2 
346 1 332 2 181 1 239 1 185 2 
283 1 334 1 178 5 284 3 244 2 84 1 6 1 248 1 61 1 204 2 340 3 104 1 62 1 45 1 67 4 227 1 232 1 367 2 210 2 373 1 303 1 306 5 52 1 25 1 27 1 216 1 97 1 262 1 79 1 174 1 33 1 146 2 
220 1 83 1 178 2 84 1 149 1 249 1 222 1 204 1 66 1 13 1 67 2 136 1 23 1 374 1 306 2 116 1 26 1 378 1 310 1 174 1 80 1 
283 1 38 1 334 1 178 3 284 3 84 1 244 2 6 1 248 2 61 1 204 3 104 1 340 4 45 1 67 2 367 2 210 2 373 1 303 1 306 3 52 1 27 1 216 1 97 1 262 1 146 1 
283 2 38 1 334 1 178 4 284 5 84 1 244 4 6 1 150 1 356 1 248 3 61 1 204 4 340 7 104 1 45 2 67 3 367 4 210 4 373 2 303 2 306 4 52 2 27 2 216 1 97 1 327 1 262 1 146 2 
365 1 110 1 168 1 
110 1 161 1 
134 1 
110 1 270 1 288 1 
110 1 124 1 
110 1 288 1 
110 3 270 1 168 2 273 1 288 1 218 1 
132 3 17 2 133 1 18 3 283 1 221 1 268 1 355 1 10 1 269 1 42 2 45 1 318 1 349 1 281 4 217 1 228 7 
132 3 17 2 133 1 18 3 283 1 221 1 268 1 355 1 10 1 269 1 42 2 45 1 318 1 349 1 281 4 217 1 228 7 
132 3 17 2 133 1 18 3 283 1 257 1 221 1 268 1 355 1 10 1 269 1 42 2 45 1 318 1 349 1 281 4 217 1 228 7 
283 4 221 1 7 4 354 1 268 5 338 1 355 1 8 1 10 2 269 2 316 1 64 3 42 3 318 1 45 4 228 31 133 1 132 10 17 5 18 15 90 1 111 1 167 1 277 1 302 1 213 1 303 3 52 3 54 1 27 3 349 2 326 2 281 16 217 2 
283 1 175 1 221 1 268 1 338 1 355 1 8 2 10 1 269 1 42 2 45 1 318 1 228 9 17 3 132 4 90 2 18 4 111 2 213 2 215 1 349 1 326 4 281 5 217 1 
0 1 329 1 195 2 266 1 336 1 202 1 250 1 181 1 361 1 253 1 130 1 183 1 363 1 185 2 48 2 72 1 211 1 299 1 375 1 114 1 235 1 346 1 141 1 51 1 53 1 95 1 30 1 173 1 118 1 351 1 
0 1 195 3 336 1 202 1 250 1 12 1 181 1 361 1 14 1 253 1 183 1 363 1 185 2 48 3 164 1 72 1 211 1 299 1 375 2 114 1 235 1 346 1 141 1 51 1 53 1 95 1 30 1 173 1 118 1 351 1 
0 1 195 2 336 1 202 1 250 1 12 1 181 1 14 1 183 1 363 1 185 2 48 2 72 1 211 1 299 1 375 2 235 1 141 1 346 1 51 1 53 1 95 1 30 1 173 1 351 1 
0 1 243 1 164 1 48 1 110 1 195 1 121 1 165 1 3 1 299 1 211 1 5 1 336 2 369 1 288 1 235 1 250 2 51 2 53 1 360 1 30 2 253 1 118 1 
0 1 329 1 195 1 336 1 250 1 12 1 181 1 361 1 253 1 130 1 363 1 185 2 48 1 72 1 211 1 299 1 114 1 235 1 346 1 141 1 51 1 53 1 95 1 30 1 118 1 351 1 
119 1 
0 1 243 1 334 1 284 2 3 1 244 2 60 1 247 1 288 1 9 1 248 2 204 2 340 2 102 1 103 1 62 1 292 2 155 2 156 2 16 1 109 1 110 1 71 1 299 2 211 2 74 4 301 1 306 5 117 1 261 1 76 1 216 1 29 2 78 1 262 1 310 1 174 6 80 1 220 1 178 5 84 1 40 2 87 1 271 1 274 1 227 3 46 1 369 2 138 2 374 1 235 2 142 1 53 1 97 1 147 2 
220 1 178 3 60 1 247 1 9 1 271 1 87 1 160 1 274 1 46 1 227 1 71 1 74 2 374 1 138 1 306 3 142 1 261 1 78 1 310 1 174 2 80 1 
220 1 178 3 60 1 84 1 247 1 9 1 204 1 271 1 87 1 160 1 274 1 46 1 227 1 71 1 74 3 374 1 306 3 142 1 261 1 29 1 78 1 310 1 174 1 80 1 
220 1 178 3 60 1 84 1 247 1 9 1 204 1 292 1 271 1 87 1 160 1 274 1 227 1 46 1 71 1 74 3 374 1 138 1 306 3 142 1 261 1 29 1 78 1 310 1 174 2 80 1 
284 1 60 1 244 1 247 1 199 1 9 1 248 2 204 5 103 1 62 1 292 4 155 2 156 2 160 1 109 1 71 1 74 6 306 5 261 1 308 1 216 1 29 4 78 1 310 1 262 1 174 7 80 1 220 1 178 5 84 5 40 2 87 1 271 1 274 1 46 1 227 3 229 1 234 1 138 4 374 1 142 1 97 1 240 1 147 2 
284 1 60 1 244 1 247 1 9 1 248 2 204 2 103 1 340 2 62 1 292 2 155 2 156 2 109 1 71 1 74 4 306 4 117 1 261 1 216 1 29 2 78 1 310 1 262 1 174 4 80 1 220 1 178 4 84 1 40 2 87 1 271 1 274 1 46 1 227 2 374 1 138 2 142 1 97 1 147 2 
220 1 178 4 284 1 84 1 244 1 60 1 247 1 9 1 40 2 248 2 204 1 103 1 62 1 292 2 155 2 271 1 87 1 156 2 274 1 227 2 46 1 229 1 109 1 71 1 234 1 74 4 138 2 374 1 306 4 142 1 261 1 216 1 29 2 97 1 78 1 262 1 310 1 240 1 174 4 147 2 80 1 
220 1 178 4 284 1 84 1 244 1 60 1 247 1 9 1 40 2 248 2 204 1 103 1 62 1 292 2 155 2 271 1 87 1 156 2 274 1 227 2 46 1 229 1 109 1 71 1 234 1 74 4 138 2 374 1 306 4 142 1 261 1 216 1 29 2 97 1 78 1 262 1 310 1 240 1 174 4 147 2 80 1 
82 1 220 1 178 4 284 1 180 1 84 1 244 1 60 1 247 1 9 1 204 1 340 2 62 1 292 2 271 1 87 1 156 2 274 1 227 2 46 1 206 1 109 1 71 1 73 2 234 1 74 4 137 2 138 2 374 1 306 4 142 1 261 1 216 1 29 2 97 1 78 1 262 1 310 1 174 4 147 2 80 1 
220 1 178 4 284 1 84 1 244 1 60 1 247 1 199 1 9 1 40 2 248 2 204 1 103 1 62 1 292 3 155 2 271 1 87 1 156 2 274 1 227 2 46 1 229 1 109 1 71 1 234 1 74 5 374 1 138 3 306 4 142 1 261 1 216 1 29 3 97 1 78 1 262 1 310 1 240 1 174 5 147 2 80 1 
220 1 178 4 284 1 84 1 244 1 60 1 247 1 199 1 9 1 40 2 248 2 204 1 103 1 62 1 292 3 155 2 271 1 87 1 156 2 274 1 227 2 46 1 229 1 109 1 71 1 234 1 74 5 374 1 138 3 306 4 142 1 261 1 216 1 29 3 97 1 78 1 262 1 310 1 240 1 174 5 147 2 80 1 
284 1 60 1 244 1 247 1 9 1 204 1 340 2 62 1 292 2 156 2 206 1 109 1 71 1 73 2 74 4 306 4 117 1 261 1 216 1 29 2 78 1 310 1 262 1 174 4 80 1 220 1 178 4 84 1 87 1 271 1 274 1 46 1 227 2 137 2 374 1 138 2 142 1 97 1 147 2 
283 1 221 1 245 2 355 1 8 1 269 1 151 1 42 1 318 1 45 1 184 1 89 1 228 6 17 2 132 2 162 1 365 1 90 1 18 3 111 1 213 1 376 1 171 1 326 2 281 3 217 1 
283 1 245 1 7 3 337 1 268 1 101 1 8 2 151 11 63 1 64 3 45 2 184 2 89 1 228 14 132 2 17 1 18 6 90 2 162 11 49 1 111 2 277 1 167 1 75 1 213 2 303 2 171 4 259 1 52 2 347 1 27 1 326 4 281 8 
0 1 220 2 34 1 285 1 245 1 288 1 8 1 11 1 270 1 157 1 13 1 107 1 184 1 89 1 228 2 90 1 18 1 19 1 110 1 49 1 111 1 211 1 299 1 369 1 344 1 213 1 235 1 171 1 259 1 347 1 53 1 26 1 143 1 326 2 310 2 281 1 98 1 80 1 
0 2 283 3 1 2 245 2 335 2 8 3 288 2 11 1 151 7 293 1 12 1 157 2 13 1 107 2 17 4 18 10 163 2 162 7 19 1 110 2 111 3 211 3 299 3 213 3 344 2 303 2 171 7 259 1 347 1 26 1 27 2 310 3 217 1 80 1 220 3 221 1 268 4 355 1 269 1 42 1 270 2 318 1 45 3 319 2 89 3 184 3 228 20 132 8 90 3 231 1 49 1 188 1 369 1 372 2 235 3 52 2 53 2 326 6 281 10 
0 2 220 1 243 1 265 1 266 1 3 1 246 1 4 2 8 2 288 2 12 1 13 1 254 1 68 1 184 2 89 2 228 2 90 2 18 1 19 1 110 3 49 1 111 2 211 8 299 7 369 2 370 1 213 2 376 1 235 8 259 1 53 2 26 1 237 1 31 1 326 4 310 1 281 1 80 1 
220 1 283 1 100 1 8 1 151 1 45 1 13 1 184 1 89 1 228 3 132 1 17 1 162 1 90 1 18 2 111 1 276 1 213 1 303 1 171 1 116 1 52 1 347 1 26 1 27 1 326 2 310 1 281 1 80 1 
132 1 162 1 90 1 111 1 268 1 8 1 213 1 303 1 151 1 376 1 171 1 45 1 326 2 281 2 228 2 89 1 184 1 194 1 
132 1 17 1 162 1 90 1 283 1 18 2 111 1 8 1 213 1 151 1 376 1 24 1 171 1 27 1 326 2 228 2 89 1 184 1 
283 1 268 1 8 1 151 2 45 1 184 1 89 1 228 4 132 2 17 1 90 1 162 2 18 2 111 1 303 1 213 1 376 1 171 2 52 1 27 1 326 2 281 2 
132 1 162 1 90 1 111 1 268 1 8 1 213 1 303 1 151 1 171 1 45 1 326 2 254 1 281 2 228 2 89 1 184 1 194 1 
132 1 17 1 162 1 90 1 283 1 18 2 111 1 8 1 213 1 151 1 24 1 171 1 27 1 326 2 254 1 228 2 89 1 184 1 
283 1 268 1 8 1 151 2 45 1 254 1 184 1 89 1 228 4 132 2 17 1 90 1 162 2 18 2 111 1 303 1 213 1 171 2 52 1 27 1 326 2 281 2 
283 1 268 1 8 1 151 2 45 1 228 4 184 1 89 1 132 2 17 1 90 1 162 2 18 2 111 1 303 1 213 1 171 2 52 1 27 1 326 2 281 2 
0 1 220 1 245 1 288 1 8 1 270 1 157 1 107 1 228 2 89 1 184 1 90 1 18 1 110 1 49 1 111 1 211 1 299 1 369 1 372 1 344 1 213 1 235 1 259 1 53 1 326 2 281 1 310 1 
0 1 220 1 198 1 245 1 288 1 8 1 270 1 228 2 89 1 184 1 296 1 90 1 18 1 110 1 49 1 187 1 111 1 211 1 299 1 369 1 344 1 213 1 235 1 259 1 53 1 326 2 281 1 310 1 
283 1 268 1 8 1 151 2 45 1 184 1 89 1 228 4 132 2 17 1 90 1 162 2 18 2 111 1 303 1 213 1 171 2 52 1 347 1 27 1 326 2 281 2 
0 1 283 1 220 1 266 1 268 1 288 1 8 1 151 2 270 1 45 1 157 1 107 1 228 4 89 1 184 1 17 1 132 2 18 2 162 2 163 1 90 1 110 1 111 1 211 1 299 1 372 1 303 1 344 1 213 1 235 1 171 2 52 1 53 1 27 1 326 2 281 2 310 1 
283 1 220 1 268 1 100 1 8 1 151 1 45 1 13 1 184 1 89 1 228 3 132 1 18 1 90 1 162 1 111 1 213 1 303 1 171 1 116 1 52 1 347 1 27 1 26 1 348 1 326 2 310 1 281 2 80 1 
175 1 283 3 39 1 7 2 268 3 8 2 153 1 64 1 341 1 45 3 224 1 182 2 88 1 342 1 228 19 17 3 132 6 90 2 18 10 22 2 111 2 277 1 167 1 213 2 303 3 52 3 27 3 326 4 281 9 241 1 
283 2 175 1 314 1 39 2 7 2 268 2 338 2 8 3 289 1 64 2 341 1 45 3 224 1 182 1 295 1 342 2 228 26 132 4 17 2 18 12 90 3 20 1 22 4 111 3 277 2 213 3 303 3 140 1 278 1 52 3 27 2 326 6 281 14 241 1 
314 1 175 1 283 5 221 1 39 2 7 4 338 1 268 4 355 1 8 3 269 1 289 1 153 1 64 3 42 1 341 1 223 1 318 1 45 5 224 1 182 1 295 1 342 1 228 41 17 4 132 8 90 3 18 21 20 1 22 4 111 3 277 3 167 1 213 3 303 4 140 1 278 1 52 4 27 4 326 6 281 20 217 1 241 1 
314 1 175 1 283 4 221 1 39 2 7 4 338 2 268 3 355 1 8 4 269 1 289 1 153 1 64 3 42 1 341 1 223 1 318 1 45 5 224 1 182 1 295 1 342 1 228 38 17 4 132 7 90 4 18 18 20 1 22 4 111 4 277 3 167 1 213 4 303 4 140 1 278 1 52 4 27 3 326 8 281 20 217 1 241 1 
314 1 175 1 283 8 221 1 39 1 7 4 338 1 101 2 268 7 355 1 8 2 269 1 289 1 64 4 42 1 341 1 318 1 45 8 224 1 182 1 295 1 342 1 228 52 17 7 132 14 90 2 18 25 20 1 22 4 111 2 277 2 167 2 213 2 303 7 140 1 278 1 52 7 27 7 326 4 281 27 217 1 241 1 
236 1 2 1 86 1 358 1 159 1 58 1 343 1 328 1 321 1 170 1 
305 1 331 1 
128 1 69 1 2 1 86 1 358 1 159 1 328 1 311 1 170 1 
364 1 65 1 
129 1 105 1 251 1 
91 1 2 1 196 1 178 1 209 1 343 1 93 1 170 1 41 2 204 1 306 1 86 1 358 1 252 1 159 1 58 1 328 1 321 1 
91 1 2 1 196 1 178 1 209 1 343 1 93 1 170 1 41 2 204 1 306 1 86 1 358 1 252 1 159 1 58 1 328 1 321 1 
91 1 2 1 196 1 178 1 209 1 343 1 93 1 170 1 41 2 204 1 306 1 86 1 358 1 252 1 159 1 58 1 328 1 321 1 
364 1 129 1 65 1 
364 1 129 1 65 1 
105 1 251 1 
129 1 105 1 251 1 
123 1 112 1 
220 2 330 1 331 1 2 1 196 1 178 1 123 1 245 1 112 1 373 1 113 1 41 1 170 1 305 1 306 1 25 1 86 1 358 1 26 2 252 1 13 2 159 1 310 2 79 1 328 1 67 1 80 2 
0 1 219 1 220 2 246 1 4 2 288 1 8 1 317 1 68 1 184 1 89 1 228 2 90 1 18 1 110 1 49 1 111 1 211 2 299 2 213 1 235 2 94 1 259 1 347 1 53 1 326 2 193 1 310 2 281 1 80 2 59 1 
0 1 298 1 266 1 299 2 211 2 200 1 235 2 346 1 141 1 181 1 12 1 53 1 95 1 361 1 30 1 145 1 363 1 351 1 185 2 
0 1 299 1 211 1 200 1 235 1 346 1 141 1 181 1 12 1 53 1 205 1 95 1 361 1 30 1 363 1 351 1 185 2 
0 1 243 1 110 1 298 1 166 1 121 1 299 1 211 1 3 1 369 1 288 1 235 1 53 1 30 1 
0 1 298 1 299 1 211 1 200 1 235 1 346 1 141 1 181 1 12 1 53 1 95 1 361 1 30 1 145 1 363 1 351 1 185 2 
352 1 
204 1 365 1 190 1 284 1 84 1 244 1 320 1 
178 1 284 1 244 1 84 1 248 1 40 1 204 2 103 1 340 1 62 1 155 1 227 1 306 1 216 1 97 1 262 1 174 1 
0 4 283 2 1 2 334 2 333 2 284 9 244 8 247 2 148 2 288 3 248 6 204 8 291 1 340 12 62 4 106 2 161 3 16 1 110 10 299 3 211 3 210 6 168 2 303 2 304 1 306 5 216 4 27 2 262 4 174 5 218 1 81 1 313 1 178 5 266 1 124 2 84 2 85 2 127 2 270 3 45 2 320 1 227 3 47 1 367 6 369 1 235 3 190 1 52 2 53 3 280 2 97 4 238 2 99 2 
314 1 283 2 334 1 178 1 284 8 244 5 84 2 287 1 7 1 248 3 289 1 204 5 340 6 62 2 64 1 45 2 295 1 16 1 227 1 367 5 210 5 277 1 303 2 140 1 306 1 278 1 52 2 216 2 27 2 192 1 280 2 238 1 97 2 262 2 174 1 
220 1 283 1 83 1 178 1 284 2 244 2 149 1 269 1 62 1 318 1 45 2 13 1 229 1 136 1 371 1 374 1 306 1 116 1 216 1 26 1 280 2 238 1 97 1 378 1 310 1 262 1 217 1 80 1 
284 1 244 1 84 1 204 1 62 1 190 1 216 1 97 1 320 1 262 1 
283 2 1 1 367 5 284 5 210 5 244 5 248 5 303 2 204 5 340 10 52 2 27 2 45 2 280 2 238 1 
204 1 306 1 178 1 84 1 174 1 227 1 
81 2 0 1 313 1 243 1 38 1 334 2 178 3 284 2 3 1 286 1 244 2 288 1 102 1 62 1 16 2 227 2 110 1 211 4 299 4 369 2 139 1 235 4 306 3 53 1 76 1 216 2 97 2 262 2 174 4 
0 1 220 3 245 1 8 1 288 1 270 1 157 1 13 2 107 1 228 1 89 1 184 1 18 1 90 1 49 1 110 1 111 1 136 1 211 1 299 1 300 1 369 1 372 1 213 1 344 1 235 1 116 2 53 1 26 2 326 2 310 3 80 2 
334 1 367 2 284 1 210 2 244 2 84 2 248 2 204 4 340 4 62 1 42 1 216 1 97 1 262 1 16 1 
2 1 86 1 279 1 
345 1 2 1 86 1 112 1 58 1 
2 1 86 1 279 1 
2 1 86 1 279 1 
2 1 86 1 208 1 
2 1 86 1 208 1 
2 1 86 1 208 1 
2 1 86 1 
358 1 328 1 
132 3 17 2 283 1 18 4 90 2 221 1 111 2 268 1 338 1 355 1 8 2 269 1 213 2 42 1 45 1 318 1 326 4 281 4 217 1 228 8 
17 2 132 2 18 3 365 1 283 1 221 1 355 1 269 1 42 1 318 1 45 1 281 3 217 1 228 6 
17 1 132 2 18 2 283 1 90 1 111 1 268 1 8 1 213 1 303 1 52 1 307 1 27 1 45 1 326 2 281 2 228 4 
17 1 132 2 283 1 18 4 277 1 167 1 7 2 268 1 303 1 64 1 52 1 27 1 45 1 281 3 228 7 
283 3 221 1 7 2 268 4 101 1 338 2 355 1 8 2 269 2 64 2 63 1 42 1 318 1 45 3 255 1 228 23 132 9 17 5 18 12 90 2 111 2 167 1 303 2 213 2 52 2 27 2 326 4 281 11 217 2 
18 1 7 1 228 1 
64 1 281 1 228 1 
132 3 17 2 90 1 18 3 283 1 1 1 111 1 268 1 8 1 213 1 303 1 52 1 307 1 27 1 45 1 326 2 281 3 228 6 
175 1 314 1 283 2 7 1 268 1 8 1 289 1 64 1 45 2 295 1 228 12 17 1 132 2 18 6 90 1 111 1 277 1 213 1 303 2 140 1 278 1 52 2 27 2 326 2 281 6 
17 1 132 2 283 1 18 3 268 1 269 1 318 1 45 1 281 3 217 1 228 6 
132 2 17 1 18 2 90 1 221 1 111 1 268 1 338 1 355 1 8 1 269 1 213 1 326 2 255 1 281 1 217 1 228 3 
17 3 132 5 90 1 175 1 18 5 283 2 111 1 268 2 371 1 8 1 269 2 213 1 318 1 45 2 326 2 281 5 217 2 228 10 
132 1 175 1 90 1 111 1 268 1 8 1 213 1 303 1 45 1 326 2 281 2 228 2 
17 1 132 2 18 2 283 1 175 1 90 1 111 1 268 1 8 1 213 1 303 1 52 1 27 1 45 1 326 2 281 2 228 4 
17 1 132 2 18 2 175 1 90 3 111 3 338 1 268 1 8 3 269 1 213 3 153 1 326 6 255 1 281 1 217 1 228 3 
175 1 283 5 221 1 354 1 7 4 338 2 268 5 355 1 8 5 269 3 316 1 153 1 64 3 42 1 318 2 45 5 255 1 228 34 132 12 17 7 18 18 90 5 111 5 277 1 167 1 302 1 213 5 303 3 52 3 307 1 27 3 326 10 281 16 217 3 
283 1 175 1 221 1 7 1 355 1 8 1 269 1 64 1 42 1 45 1 318 1 295 1 228 8 17 2 132 2 18 4 90 1 111 1 277 1 213 1 326 2 281 4 217 1 
283 1 175 1 221 1 7 2 268 1 355 1 8 2 269 1 64 1 42 1 318 1 45 2 295 1 228 11 17 2 132 3 18 5 90 2 111 2 277 1 167 1 213 2 303 1 52 1 307 1 326 4 281 6 217 1 
175 1 314 1 283 3 221 1 7 1 268 1 338 1 355 1 8 3 269 1 289 1 64 1 42 1 318 1 45 3 295 1 228 19 17 3 132 4 18 10 90 3 111 3 277 1 213 3 303 2 140 1 278 1 52 2 307 1 27 2 326 6 281 9 217 1 
175 1 314 1 283 2 221 1 7 1 338 1 268 2 355 1 8 3 269 1 289 1 64 1 42 1 318 1 45 3 295 1 228 17 17 3 132 5 18 7 90 3 111 3 277 1 213 3 303 2 140 1 278 1 52 2 307 1 27 1 326 6 281 10 217 1 
283 1 175 1 221 1 7 1 355 1 8 1 269 1 64 1 42 1 45 1 318 1 295 1 228 8 17 2 132 2 18 4 90 1 111 1 277 1 213 1 326 2 281 4 217 1 
175 1 314 1 283 2 7 1 268 1 8 1 289 1 64 1 45 2 295 1 228 12 17 1 132 2 18 6 90 1 111 1 277 1 213 1 303 2 140 1 278 1 52 2 27 2 326 2 281 6 
175 1 314 1 283 2 221 1 7 1 268 2 338 2 355 1 8 4 269 1 289 1 64 1 42 1 318 1 45 3 295 1 228 18 17 3 132 5 18 8 90 4 111 4 277 1 213 4 303 2 140 1 278 1 52 2 307 1 27 1 326 8 281 10 217 1 
175 1 314 1 283 2 7 1 268 3 338 2 8 4 289 1 153 1 64 1 45 3 295 1 228 16 17 3 132 6 18 7 90 4 111 4 277 1 213 4 303 3 140 1 278 1 52 3 27 2 326 8 281 9 
17 3 132 6 18 4 283 1 221 1 268 3 355 2 269 3 318 1 45 1 281 3 217 3 228 7 
175 1 314 1 283 2 221 1 7 1 268 1 338 2 355 1 8 4 269 1 289 1 153 1 64 1 42 1 318 1 45 3 295 1 228 18 17 3 132 4 18 8 90 4 111 4 277 1 213 4 303 2 140 1 278 1 52 2 27 1 326 8 281 10 217 1 
220 1 35 1 261 1 245 1 56 1 310 1 80 1 
220 1 35 1 245 1 324 1 191 1 325 1 261 1 96 1 56 1 310 1 275 1 80 1 
0 1 235 1 365 1 243 1 110 1 53 1 3 1 211 1 299 1 369 1 288 1 
0 1 220 2 19 1 110 1 299 1 211 1 245 1 369 1 288 1 344 1 235 1 270 1 53 1 26 1 157 1 13 1 310 2 80 1 
81 1 0 1 220 2 333 1 124 1 245 1 60 1 288 2 9 1 270 2 157 1 13 2 19 1 110 3 211 1 299 1 374 1 344 1 235 1 53 1 26 1 310 2 80 2 
81 1 0 1 220 2 333 1 124 1 245 1 60 1 288 2 9 1 270 2 13 2 322 1 19 1 110 3 187 1 211 2 299 2 374 1 344 1 235 2 53 1 26 1 310 2 80 2 
81 1 0 1 333 1 178 2 124 1 84 1 247 1 288 1 204 1 270 1 161 1 322 1 186 1 110 4 211 3 299 3 168 1 369 1 258 1 235 3 306 2 53 1 174 1 
0 1 81 1 333 1 110 4 178 2 124 1 299 3 211 3 84 1 168 1 369 1 247 1 288 1 85 1 204 1 235 3 306 2 270 1 53 1 161 1 174 1 322 1 
0 1 235 1 53 1 211 1 299 1 237 1 
0 3 265 1 110 3 266 1 366 1 299 6 211 7 4 1 246 1 369 2 370 1 288 2 115 1 235 7 12 1 270 1 53 2 359 1 237 1 31 1 218 1 
0 1 283 1 220 2 221 1 266 1 245 2 355 1 288 1 8 2 269 1 151 1 42 1 270 1 45 1 318 1 319 1 157 1 13 1 107 1 228 6 184 2 89 2 132 2 17 2 162 1 18 3 90 2 163 1 19 1 110 1 111 2 299 1 211 1 372 1 344 1 213 2 94 1 235 1 171 1 347 1 53 1 26 1 326 4 281 3 310 2 217 1 80 1 
313 1 178 3 284 1 84 1 244 1 247 1 148 1 85 1 204 1 62 2 106 1 320 1 161 1 67 1 227 1 110 2 211 1 299 1 168 1 369 1 235 1 306 3 190 1 216 2 97 2 262 2 99 1 174 2 
0 2 110 2 266 1 299 2 211 2 168 1 288 1 235 2 291 1 270 1 53 1 237 1 218 1 
0 1 243 1 110 1 266 1 299 4 211 4 3 1 369 1 288 1 235 4 260 1 53 1 322 1 
81 1 0 2 37 1 110 1 188 1 299 2 211 2 288 1 115 1 235 2 270 1 53 1 359 1 263 1 
0 1 235 1 141 1 181 1 53 1 95 1 211 1 299 1 369 1 185 1 
0 1 110 1 266 1 299 2 211 2 246 1 288 1 235 2 12 1 53 1 317 1 
81 1 0 2 243 1 265 1 110 3 266 1 3 1 299 4 211 5 246 1 369 1 288 2 235 5 260 1 53 2 31 1 
81 1 0 2 243 1 110 3 266 1 3 1 299 4 211 5 246 1 369 1 288 2 235 5 260 1 53 2 31 1 350 1 
0 1 220 2 19 1 110 1 187 1 299 1 211 1 245 1 369 1 288 1 344 1 235 1 270 1 53 1 26 1 13 1 310 2 80 1 
81 1 0 2 110 1 366 1 299 1 211 1 288 1 115 1 235 1 270 1 53 1 359 1 218 1 
154 1 245 1 189 1 203 1 357 1 
323 1 178 2 177 1 245 1 84 1 60 1 247 1 9 1 374 1 189 2 357 1 203 2 204 1 306 2 154 2 77 1 28 1 67 1 274 1 
219 1 220 1 189 1 357 1 154 1 193 1 310 1 80 1 59 1 
177 1 28 1 357 1 
365 1 173 1 183 1 202 1 
48 1 195 1 173 1 253 1 118 1 183 1 202 1 
250 1 195 1 336 1 
207 1 48 3 195 3 353 1 92 2 212 1 202 1 173 1 253 1 130 1 118 1 183 1 
48 2 195 2 144 1 173 1 253 1 118 1 183 1 202 1 375 1 
346 1 43 1 48 1 195 1 179 1 95 1 173 1 253 1 118 1 130 1 185 1 
48 1 195 1 173 1 253 1 118 1 130 1 183 1 
48 1 195 1 253 1 118 1 130 1 183 2 202 1 
242 1 48 2 195 2 152 1 214 1 173 1 253 2 130 1 118 2 183 1 
48 3 70 1 195 3 233 1 179 1 368 1 202 1 375 2 253 1 173 2 130 1 118 1 183 1 
48 2 21 1 195 2 202 1 375 1 346 1 181 1 95 1 173 1 253 1 130 1 118 1 183 1 363 1 185 2 
48 4 176 1 70 1 195 4 179 1 202 1 375 2 144 1 253 2 173 2 130 1 118 2 183 1 
48 1 195 1 173 1 253 1 118 1 130 1 183 1 202 1 
48 4 70 1 195 4 353 1 92 1 179 1 212 1 202 2 375 2 377 1 253 1 173 3 118 1 183 2 
48 2 195 2 122 1 339 1 202 1 375 1 173 1 253 1 130 1 118 1 57 1 183 1 
48 3 195 3 135 1 353 2 92 2 212 1 202 1 173 1 253 1 130 1 118 1 183 1 
230 2 173 2 108 1 131 1 
48 1 195 1 55 1 253 1 118 1 130 1 
48 2 195 2 368 1 173 1 253 1 118 1 130 1 183 1 202 1 375 1 
380 1 
48 1 195 1 173 1 253 1 118 1 130 1 183 1 202 1 
48 3 195 3 92 1 368 1 202 1 375 1 253 1 173 1 130 1 118 1 183 1 
70 1 179 1 377 1 173 1 
173 1 183 1 

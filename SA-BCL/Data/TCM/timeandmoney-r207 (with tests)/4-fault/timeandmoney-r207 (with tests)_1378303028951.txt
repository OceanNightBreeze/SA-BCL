#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 3 343 1 32 2 269 2 295 1 4 1 96 1 365 1 256 2 11 4 368 1 59 2 219 1 329 2 328 2 164 1 193 5 166 9 199 1 283 1 45 2 238 9 110 6 314 1 29 1 50 1 289 1 30 1 
53 3 343 1 32 2 269 2 295 1 4 1 96 1 365 1 256 2 11 4 368 1 59 2 219 1 329 2 328 2 164 1 193 5 166 9 199 1 283 1 45 2 238 9 110 6 314 1 29 1 50 1 289 1 30 1 
53 4 343 1 32 2 269 2 295 1 4 1 96 1 365 1 256 2 11 5 368 1 59 2 219 1 329 2 328 2 164 1 193 6 166 10 199 1 283 1 45 2 238 10 110 7 314 1 29 1 50 1 289 1 30 1 
53 2 343 1 32 2 269 2 295 1 4 1 96 1 365 1 256 2 11 3 368 1 59 1 219 1 329 2 328 2 164 1 193 4 166 7 199 1 283 1 45 2 238 7 110 4 29 1 50 1 289 1 30 1 
328 1 329 1 53 1 193 3 269 1 166 4 96 1 283 1 365 1 256 1 45 1 238 4 11 2 110 3 368 1 59 2 314 1 50 1 
328 1 164 1 193 1 32 1 269 1 166 2 282 1 96 1 365 1 256 1 45 1 238 2 184 1 368 1 230 1 289 1 
96 1 365 1 256 2 11 1 238 3 110 1 193 2 53 1 368 1 32 1 166 3 269 2 219 1 
53 3 32 1 269 2 96 1 365 1 256 2 11 4 368 1 59 2 219 1 329 1 328 1 193 5 166 9 137 1 283 1 45 1 238 9 110 7 241 1 29 1 314 1 50 1 30 1 
53 3 32 1 269 2 96 1 365 1 256 2 11 4 368 1 59 2 219 1 329 1 328 1 193 5 166 9 137 1 283 1 45 1 238 9 110 7 241 1 29 1 314 1 50 1 30 1 
200 1 248 1 221 1 
200 1 320 1 196 2 
259 2 88 2 115 1 179 2 132 1 103 2 58 2 245 2 
316 1 88 2 115 1 69 1 179 3 357 2 358 1 92 1 72 2 296 1 322 1 366 1 58 2 99 1 259 2 261 2 274 1 372 1 101 1 132 1 232 2 133 1 233 1 103 3 80 1 280 1 22 1 284 2 141 1 170 1 285 1 142 1 243 1 144 1 245 2 290 1 208 1 
259 1 88 1 115 1 179 1 292 1 103 1 203 1 58 1 245 1 146 1 
259 1 373 1 179 1 118 1 103 1 197 1 221 1 34 1 200 1 216 1 299 1 246 1 272 1 146 1 
259 1 88 1 373 1 179 1 118 2 103 1 197 2 221 1 34 1 200 1 299 1 58 1 245 1 272 1 146 1 
323 1 118 1 197 1 128 1 54 1 
200 1 118 2 197 2 221 1 128 1 106 1 187 1 54 1 
118 1 197 1 128 1 
259 1 115 1 88 1 179 1 292 1 118 1 103 1 197 1 54 1 301 1 203 1 58 1 245 1 146 1 
200 1 
200 1 118 2 71 1 197 2 221 1 128 1 106 1 54 1 
331 1 17 1 118 5 197 5 352 2 156 2 221 1 106 1 263 1 54 2 5 1 200 1 9 1 123 1 336 1 217 1 367 2 128 2 129 1 
248 1 132 1 
259 2 88 1 179 2 132 2 151 1 103 2 25 1 58 1 245 1 
95 1 204 1 130 1 
316 1 265 1 261 1 101 1 179 1 132 1 232 1 103 1 233 1 92 1 80 1 72 1 296 1 366 1 285 1 208 1 
316 1 259 1 88 1 261 1 101 1 179 2 232 1 233 1 103 2 92 1 182 1 80 1 72 1 296 1 8 1 366 1 285 1 245 1 130 1 208 1 
259 5 260 1 25 1 88 4 8 2 348 1 179 5 132 1 103 5 182 1 58 1 313 1 245 4 246 1 
259 2 88 2 304 1 179 2 292 1 103 2 245 2 146 1 
259 3 8 1 88 3 179 3 132 1 103 3 58 1 245 3 
259 1 88 1 179 1 292 1 103 1 245 1 146 1 
259 1 88 1 25 1 179 1 151 1 103 1 58 1 245 1 146 1 
316 1 88 3 115 1 69 1 179 4 357 2 118 1 358 1 92 1 182 1 296 1 72 1 34 1 322 1 8 1 299 1 366 1 58 2 14 1 272 1 259 3 261 1 274 1 373 1 101 1 132 1 232 1 133 1 233 1 103 4 197 1 80 1 280 1 22 1 25 1 284 1 141 1 285 1 243 1 171 1 144 1 245 3 146 1 208 1 
259 2 88 1 8 1 348 1 179 2 132 1 103 2 245 1 246 1 
259 3 88 3 373 1 52 1 179 3 118 1 103 3 182 1 197 1 34 1 25 1 200 1 8 2 299 1 58 1 171 1 245 3 146 1 272 1 
259 2 88 2 179 2 103 2 8 1 25 1 204 1 58 1 245 2 130 1 
316 1 261 1 101 1 179 1 132 1 232 1 103 1 233 1 92 1 80 1 72 1 296 1 366 1 285 1 208 1 
316 1 261 1 101 1 179 1 132 1 232 1 103 1 233 1 92 1 253 1 80 1 72 1 138 1 285 1 208 1 
116 1 357 2 2 1 358 1 3 1 360 1 322 1 95 2 183 1 55 1 130 2 63 1 133 1 134 1 350 1 22 1 280 2 167 1 139 1 141 1 284 4 170 2 243 1 204 2 
259 1 88 1 299 1 304 1 179 1 103 1 245 1 146 1 
37 1 326 1 
37 1 326 1 
310 1 279 1 
310 1 279 1 
310 1 279 1 
37 1 326 1 225 1 
308 1 37 1 326 1 
341 1 37 2 310 1 321 1 326 2 279 1 
37 1 326 1 225 1 
37 1 326 1 225 1 
37 1 351 1 326 1 
37 1 351 1 326 1 
37 1 351 1 326 1 
88 2 179 2 118 1 149 1 121 1 7 1 35 1 37 1 75 1 369 1 326 1 162 1 347 1 303 1 259 2 132 1 306 1 103 2 197 1 308 1 140 1 240 1 245 2 147 1 
341 1 354 1 0 1 118 2 306 1 149 2 197 2 121 3 200 1 43 1 35 2 363 2 300 1 37 2 240 2 257 1 326 2 162 2 77 1 
328 1 329 1 45 1 
328 1 45 1 230 1 
329 2 328 3 235 1 143 1 230 1 207 1 
329 1 328 2 36 1 143 1 230 1 207 1 
329 1 328 2 143 2 230 1 207 1 
116 1 118 5 320 1 3 1 156 1 158 1 54 4 5 3 324 1 9 2 215 1 94 1 75 1 367 1 76 1 128 1 347 1 78 2 63 1 196 3 352 1 197 5 106 1 377 1 221 1 139 1 200 2 107 2 336 1 147 1 113 2 209 1 
88 1 291 1 292 1 3 2 152 4 156 2 54 6 5 6 94 2 215 2 9 4 301 1 58 1 347 4 259 1 63 2 103 1 352 2 221 1 106 1 172 1 113 4 115 1 116 2 179 1 267 1 318 1 118 8 320 2 323 4 123 1 185 1 367 2 128 5 78 4 42 1 196 6 197 8 377 1 139 2 200 4 336 1 203 1 245 1 146 1 209 2 
116 1 118 3 320 2 3 1 156 1 158 1 54 2 5 3 94 1 215 1 9 2 123 1 367 1 76 1 347 1 78 2 63 1 196 4 352 1 197 3 221 1 139 1 200 3 107 1 209 1 113 2 
88 1 292 1 3 1 156 1 158 1 54 2 5 3 9 2 215 1 94 1 301 1 58 1 347 2 259 1 63 1 103 1 352 1 221 1 107 1 172 1 113 2 115 1 116 1 179 1 318 1 118 3 320 2 123 1 185 1 367 1 76 1 78 2 196 4 197 3 139 1 200 3 203 1 245 1 146 1 209 1 
248 1 233 1 371 1 
124 1 233 1 
81 1 
285 1 233 1 92 1 
218 1 233 1 
233 1 92 1 
285 1 233 3 92 1 153 1 371 2 67 1 
273 1 190 1 63 1 194 1 3 1 280 3 360 2 198 1 183 3 335 1 284 7 170 4 160 1 205 1 370 1 188 1 340 2 
273 1 190 1 63 1 194 1 3 1 280 3 360 2 198 1 183 3 335 1 284 7 170 4 160 1 205 1 370 1 188 1 340 2 
190 1 273 1 63 1 194 1 3 1 280 3 360 2 198 1 183 3 335 1 108 1 284 7 170 4 160 1 205 1 370 1 188 1 340 2 
317 1 116 3 357 2 358 1 3 4 360 5 215 3 183 10 325 1 160 1 229 1 346 1 370 1 188 5 190 1 273 1 62 1 194 2 133 1 63 4 79 1 334 3 280 15 198 2 22 1 139 3 335 2 141 1 284 31 170 16 222 1 205 2 111 4 340 3 
90 1 357 4 358 2 3 1 360 3 183 4 160 1 188 1 273 1 190 1 63 1 133 2 194 1 22 2 198 1 280 4 335 1 141 2 284 9 170 5 239 1 222 1 205 1 340 2 
316 1 89 1 1 1 293 1 32 1 269 1 154 1 212 1 72 1 96 1 365 1 256 1 368 1 230 1 329 1 328 2 261 1 276 1 193 1 232 1 166 2 20 1 235 1 45 1 238 2 110 1 27 1 47 1 206 1 208 1 
316 1 89 1 1 1 293 1 32 1 269 1 154 1 72 1 213 1 96 1 256 1 368 1 230 1 329 1 328 2 261 1 276 1 193 1 232 1 166 3 20 1 235 1 45 1 238 3 110 2 27 1 83 1 85 1 206 1 208 1 
316 1 89 1 1 1 32 1 154 1 72 1 213 1 96 1 368 1 230 1 328 2 329 1 261 1 276 1 193 1 232 1 166 2 20 1 235 1 45 1 238 2 110 2 27 1 85 1 208 1 
316 1 261 1 276 2 232 1 1 2 233 1 234 1 92 1 32 2 269 1 166 1 294 1 80 1 72 1 21 1 20 2 378 1 109 1 256 1 237 1 238 1 83 1 208 1 
316 1 89 1 1 1 293 1 32 1 269 1 154 1 72 1 213 1 365 1 256 1 230 1 329 1 328 2 261 1 276 1 232 1 166 1 20 1 235 1 45 1 238 1 27 1 47 1 206 1 208 1 
211 1 
92 1 344 1 156 1 157 1 5 2 9 2 94 1 216 1 299 1 161 1 15 4 302 1 60 2 259 1 261 2 305 2 103 1 18 1 352 1 221 1 106 3 24 1 169 1 26 2 109 1 316 1 266 2 178 2 179 1 118 5 320 2 72 2 74 1 34 1 367 1 126 1 128 6 272 1 373 1 131 2 191 2 232 2 233 1 196 2 197 5 80 2 200 2 44 1 237 1 336 1 288 1 246 1 146 1 208 1 86 1 
259 1 266 1 373 1 179 1 118 3 103 1 71 1 18 1 197 3 106 1 74 1 34 1 299 1 216 1 126 1 15 2 288 1 128 2 146 1 272 1 246 1 86 1 
178 1 179 1 118 3 71 1 74 1 34 1 216 1 299 1 126 1 15 3 128 1 272 1 259 1 373 1 103 1 18 1 197 3 221 1 106 1 200 1 288 1 246 1 146 1 86 1 
266 1 178 1 179 1 118 3 71 1 74 1 34 1 216 1 299 1 126 1 15 3 272 1 128 2 259 1 373 1 131 1 103 1 18 1 197 3 106 1 221 1 200 1 288 1 246 1 146 1 86 1 
156 1 157 1 5 1 9 1 299 1 216 1 15 6 302 1 60 2 259 1 305 2 103 1 18 1 220 1 352 1 106 3 221 5 26 2 315 1 176 1 266 4 178 4 179 1 118 5 71 1 320 2 74 1 34 1 367 1 126 1 272 1 128 7 373 1 131 4 191 2 197 5 200 5 336 1 201 1 286 1 288 1 146 1 246 1 86 1 
156 1 157 1 5 1 9 1 299 1 216 1 15 4 302 1 60 2 259 1 305 2 103 1 18 1 352 1 106 2 221 1 169 1 26 2 266 2 178 2 179 1 118 4 320 2 74 1 34 1 367 1 126 1 272 1 128 4 373 1 131 2 191 2 196 2 197 4 200 2 336 1 288 1 146 1 246 1 86 1 
176 1 266 2 178 2 179 1 118 4 320 2 156 1 157 1 74 1 5 1 34 1 9 1 216 1 299 1 367 1 126 1 15 4 302 1 128 4 60 2 272 1 259 1 373 1 131 2 191 2 305 2 103 1 220 1 18 1 197 4 352 1 221 1 106 2 200 1 26 2 336 1 286 1 288 1 246 1 146 1 86 1 
176 1 266 2 178 2 179 1 118 4 320 2 156 1 157 1 74 1 5 1 34 1 9 1 216 1 299 1 367 1 126 1 15 4 302 1 128 4 60 2 272 1 259 1 373 1 131 2 191 2 305 2 103 1 220 1 18 1 197 4 352 1 221 1 106 2 200 1 26 2 336 1 286 1 288 1 246 1 146 1 86 1 
266 2 178 2 179 1 148 1 118 4 150 2 156 1 157 1 74 1 5 1 34 1 9 1 6 1 216 1 299 1 367 1 126 1 15 4 128 4 60 2 272 1 259 1 373 1 131 2 305 2 103 1 220 1 18 1 196 2 197 4 352 1 221 1 106 2 200 1 336 1 338 2 49 1 288 1 246 1 146 1 86 1 
176 1 266 3 178 3 179 1 118 4 320 2 156 1 157 1 74 1 5 1 34 1 9 1 216 1 299 1 367 1 126 1 15 5 302 1 60 2 272 1 128 5 259 1 373 1 131 3 191 2 305 2 103 1 220 1 18 1 352 1 197 4 221 1 106 2 200 1 26 2 336 1 201 1 286 1 288 1 246 1 146 1 86 1 
176 1 266 3 178 3 179 1 118 4 320 2 156 1 157 1 74 1 5 1 34 1 9 1 216 1 299 1 367 1 126 1 15 5 302 1 60 2 272 1 128 5 259 1 373 1 131 3 191 2 305 2 103 1 220 1 18 1 352 1 197 4 221 1 106 2 200 1 26 2 336 1 201 1 286 1 288 1 246 1 146 1 86 1 
266 2 178 2 179 1 118 4 148 1 150 2 156 1 157 1 74 1 5 1 34 1 9 1 216 1 299 1 367 1 126 1 15 4 128 4 60 2 272 1 259 1 373 1 131 2 305 2 103 1 18 1 196 2 352 1 197 4 221 1 106 2 169 1 200 1 336 1 338 2 288 1 246 1 146 1 86 1 
248 1 357 2 358 1 3 1 360 2 322 1 183 2 95 1 160 1 130 1 190 1 273 1 132 2 133 1 134 1 194 1 63 1 22 1 280 3 141 1 284 6 170 3 243 1 204 1 205 1 340 1 
317 1 116 2 357 2 268 1 358 1 3 1 360 1 227 1 183 2 322 1 95 8 215 2 159 1 271 1 188 1 130 8 133 1 63 2 280 4 22 1 334 2 139 1 141 1 284 10 170 6 242 1 243 1 111 2 204 3 
316 1 265 1 88 1 179 2 357 2 92 1 182 1 358 1 296 1 72 1 322 1 8 1 159 1 366 1 259 1 261 1 16 1 274 1 101 1 262 1 132 1 232 1 133 1 233 1 103 2 80 1 22 1 280 1 168 1 141 1 284 2 170 1 285 1 243 1 204 1 245 1 208 1 290 1 
88 1 252 2 92 2 3 3 296 2 213 1 8 1 95 7 215 2 159 1 160 1 259 1 261 3 101 2 165 2 63 3 103 3 22 3 307 1 170 10 264 1 316 2 116 2 179 3 180 2 357 6 358 3 182 1 72 3 360 4 322 3 183 8 366 2 188 4 130 7 190 1 273 1 274 1 192 1 132 2 232 3 194 1 133 3 233 2 333 2 80 1 280 10 139 2 141 3 284 20 285 2 243 3 205 1 204 7 144 2 245 1 340 1 290 1 208 2 
316 2 88 1 179 1 357 4 358 2 92 2 212 1 254 1 72 8 213 1 8 1 322 2 214 1 39 1 259 1 261 8 274 1 372 2 102 1 232 7 349 1 134 1 133 2 103 1 233 3 80 2 22 2 23 1 280 1 141 2 284 2 109 1 170 1 237 1 224 1 243 2 245 1 208 2 290 1 
88 1 116 1 179 1 357 2 358 1 3 1 360 1 183 1 95 1 322 1 215 1 159 1 364 1 58 1 130 1 259 1 133 1 63 1 103 1 22 1 280 2 139 1 25 1 141 1 284 3 170 1 243 1 204 1 245 1 
116 1 134 1 357 2 133 1 63 1 350 1 358 1 22 1 183 1 95 1 322 1 284 2 141 1 170 2 243 1 204 1 188 1 130 1 
134 1 357 2 133 1 358 1 3 1 360 1 22 1 280 2 167 1 139 1 183 1 95 1 322 1 284 2 141 1 243 1 204 1 130 1 
116 1 357 2 358 1 3 1 360 1 215 1 322 1 95 2 183 2 188 1 130 2 63 1 133 1 134 1 22 1 280 2 139 1 141 1 284 4 170 2 243 1 204 2 
116 1 357 2 133 1 63 1 350 1 358 1 23 1 22 1 183 1 95 1 322 1 284 2 141 1 170 2 243 1 204 1 188 1 130 1 
357 2 133 1 358 1 3 1 360 1 23 1 22 1 280 2 167 1 139 1 183 1 95 1 322 1 284 2 141 1 243 1 204 1 130 1 
116 1 357 2 358 1 3 1 360 1 215 1 322 1 95 2 183 2 188 1 130 2 63 1 133 1 22 1 23 1 280 2 139 1 141 1 284 4 170 2 243 1 204 2 
116 1 357 2 358 1 3 1 360 1 215 1 322 1 95 2 183 2 188 1 130 2 63 1 133 1 22 1 280 2 139 1 284 4 141 1 170 2 243 1 204 2 
316 1 179 1 357 2 92 1 358 1 296 1 72 1 322 1 366 1 261 1 274 1 101 1 132 1 232 1 133 1 233 1 103 1 80 1 22 1 280 1 284 2 141 1 170 1 285 1 243 1 144 1 290 1 208 1 
316 1 179 1 357 2 92 1 358 1 253 1 72 1 322 1 97 1 261 1 274 1 101 1 132 1 232 1 133 1 233 1 103 1 80 1 22 1 280 1 138 1 284 2 141 1 170 1 285 1 243 1 290 1 208 1 
116 1 357 2 358 1 3 1 360 1 215 1 322 1 95 2 183 2 159 1 188 1 130 2 63 1 133 1 22 1 280 2 139 1 141 1 284 4 170 2 243 1 204 2 
316 1 116 1 179 1 357 2 92 1 358 1 3 1 212 1 296 1 72 1 360 1 183 2 95 2 322 1 215 1 366 1 188 1 130 2 261 1 101 1 165 1 232 1 63 1 133 1 233 1 103 1 280 2 22 1 139 1 284 4 141 1 170 2 285 1 243 1 204 2 144 1 208 1 
88 1 116 1 179 1 357 2 358 1 3 1 183 1 322 1 215 1 95 1 159 1 58 1 188 1 130 1 259 1 277 1 133 1 63 1 103 1 280 1 22 1 139 1 25 1 141 1 284 3 170 2 243 1 204 1 245 1 
68 2 87 1 317 1 116 3 90 1 357 4 358 2 3 3 360 3 215 3 183 6 127 1 188 3 133 2 63 3 79 1 19 1 195 1 376 1 22 2 280 10 334 1 139 3 141 2 284 19 170 9 381 2 111 2 339 1 175 1 
68 1 116 3 90 1 357 6 356 1 358 3 3 2 155 1 360 2 183 4 215 3 10 1 12 1 127 1 188 2 133 3 63 3 79 2 195 1 376 2 280 12 22 3 334 2 139 2 141 3 284 26 170 14 222 2 223 1 381 4 111 2 145 1 339 2 175 1 
87 1 90 1 3 5 155 1 215 4 10 1 160 1 12 1 63 5 22 3 170 20 222 1 223 1 111 4 175 1 317 1 68 1 116 4 357 6 356 1 358 3 360 4 183 8 127 1 188 4 273 1 190 1 133 3 194 1 79 3 195 1 376 1 334 3 280 21 139 4 284 41 141 3 381 4 205 1 145 1 244 1 339 2 340 1 
68 1 87 1 317 1 116 4 90 1 356 1 357 8 358 4 3 4 155 1 360 4 215 4 183 7 10 1 160 1 12 1 127 1 188 3 190 1 273 1 194 1 133 4 63 5 79 3 195 1 376 1 22 4 280 18 334 3 139 3 141 4 284 38 170 20 222 2 223 1 381 4 205 1 111 4 244 1 145 1 340 1 339 2 175 1 
68 1 317 2 116 7 90 1 356 1 357 4 358 2 3 8 155 1 360 7 215 7 183 14 10 1 160 1 12 1 127 1 188 7 190 1 273 1 194 1 133 2 63 8 79 2 195 1 376 1 22 2 280 25 334 4 139 7 141 2 284 52 170 27 222 1 223 1 381 4 242 2 205 1 111 4 145 1 340 1 339 1 175 1 
341 1 43 1 35 1 300 1 37 1 240 1 278 1 149 1 326 1 162 1 
308 1 7 1 
35 1 37 1 240 1 311 1 149 1 332 1 326 1 162 1 120 1 
202 1 225 1 
321 1 351 1 136 1 
341 1 354 1 306 1 118 1 149 1 197 1 121 2 200 1 43 1 35 1 363 1 300 1 37 1 240 1 257 1 326 1 162 1 77 1 
341 1 354 1 306 1 118 1 149 1 197 1 121 2 200 1 43 1 35 1 363 1 300 1 37 1 240 1 257 1 326 1 162 1 77 1 
341 1 354 1 306 1 118 1 149 1 197 1 121 2 200 1 43 1 35 1 363 1 300 1 37 1 240 1 257 1 326 1 162 1 77 1 
321 1 202 1 225 1 
321 1 202 1 225 1 
351 1 136 1 
321 1 351 1 136 1 
140 1 369 1 
88 2 179 2 118 1 149 1 121 1 54 1 7 1 363 1 35 1 37 1 75 1 257 1 369 1 326 1 162 1 347 1 303 1 189 1 259 2 132 1 103 2 197 1 308 1 140 1 240 1 245 2 147 1 
316 1 179 2 357 2 92 1 358 1 254 1 72 2 322 1 228 1 214 1 159 1 100 1 259 2 261 2 274 1 372 2 232 2 133 1 233 1 103 2 22 1 280 1 64 1 141 1 284 2 170 1 82 1 243 1 84 1 208 1 290 1 
329 1 328 2 316 1 261 2 114 1 89 1 276 1 210 1 232 2 293 1 212 1 72 2 213 1 281 1 235 1 45 1 27 1 230 1 208 1 
329 1 328 2 316 1 261 1 89 1 276 1 210 1 232 1 293 1 72 1 213 1 235 1 45 1 345 1 27 1 230 1 208 1 
316 1 261 1 276 1 232 1 233 1 92 1 80 1 72 1 21 1 281 1 109 1 237 1 163 1 208 1 
329 1 328 2 316 1 261 1 114 1 89 1 276 1 210 1 232 1 293 1 72 1 213 1 281 1 235 1 45 1 27 1 230 1 208 1 
33 1 
5 1 200 1 9 1 248 1 17 1 221 1 263 1 
191 1 118 1 320 1 196 1 197 1 352 1 156 1 221 1 106 1 5 1 200 2 9 1 26 1 336 1 367 1 302 1 128 1 
250 2 92 3 3 2 212 1 156 4 297 1 5 9 94 2 215 2 9 8 218 2 261 3 17 1 63 2 104 1 105 2 352 4 221 2 106 3 263 1 353 2 112 1 173 2 67 1 113 6 316 4 226 1 116 2 180 2 118 5 320 6 72 3 124 3 367 4 38 2 128 5 371 2 231 2 40 2 330 2 373 2 78 6 232 3 233 10 135 1 196 12 80 1 197 5 139 2 200 8 44 1 336 4 285 3 208 3 
317 1 116 4 251 1 356 1 118 1 320 5 3 4 155 1 156 2 5 13 94 1 9 8 215 4 10 1 367 2 38 1 12 1 128 1 78 8 63 4 79 1 196 10 105 5 197 1 352 2 106 1 221 2 334 2 139 4 200 7 44 1 236 1 336 2 242 1 111 2 145 1 113 8 
176 1 115 1 88 1 177 1 179 1 292 1 118 1 3 1 156 1 5 2 9 2 160 1 367 1 38 1 301 1 58 1 259 1 194 1 63 2 103 1 105 2 352 1 197 1 336 1 203 1 205 1 245 1 146 1 
5 1 200 1 9 1 336 1 17 1 367 1 156 1 352 1 221 1 263 1 
116 2 78 5 180 1 63 2 320 5 3 2 105 2 196 10 139 2 5 5 215 2 9 5 200 5 38 1 113 5 
200 1 118 1 197 1 221 1 128 1 106 1 
316 1 226 2 118 3 92 1 344 1 156 2 72 4 5 2 362 1 94 2 9 2 123 1 367 2 270 1 128 4 261 4 232 4 233 1 104 1 352 2 80 2 197 3 106 2 24 1 44 2 109 1 237 1 336 1 208 1 
316 1 88 2 115 1 69 1 179 3 357 2 358 1 92 1 72 1 296 1 322 1 366 1 58 2 259 2 261 1 274 1 101 1 132 1 232 1 133 1 103 3 233 1 80 1 280 1 22 1 284 1 141 1 285 1 243 1 144 1 245 2 208 1 
78 2 320 2 196 4 352 1 156 1 221 2 5 1 9 2 94 1 200 4 44 1 336 1 367 1 340 1 113 2 
240 1 162 1 51 1 
140 1 300 1 337 1 240 1 162 1 
240 1 162 1 51 1 
240 1 162 1 51 1 
240 1 162 1 48 1 
240 1 162 1 48 1 
240 1 162 1 48 1 
240 1 162 1 
37 1 326 1 
273 1 190 1 63 1 357 4 133 2 194 1 358 2 3 1 280 4 360 2 22 2 183 3 284 8 141 2 170 4 160 1 222 1 205 1 188 1 340 1 
273 1 190 1 248 1 194 1 63 1 3 1 280 3 360 2 183 2 284 6 170 3 160 1 205 1 340 1 
247 1 116 1 357 2 133 1 63 1 358 1 3 1 360 1 280 2 22 1 139 1 183 2 215 1 141 1 284 4 170 2 188 1 
317 1 116 1 63 1 79 1 3 1 360 1 280 4 334 1 139 1 215 1 183 2 284 7 170 3 111 2 188 1 
317 1 116 2 357 4 268 1 358 2 3 3 360 5 183 9 215 2 160 1 188 4 190 1 273 1 194 2 63 3 133 2 334 2 280 12 22 2 139 2 284 23 141 2 170 11 222 2 242 1 205 2 111 2 174 1 340 1 
284 1 111 1 280 1 
284 1 170 1 334 1 
247 1 116 1 180 1 133 1 357 2 63 1 358 1 3 1 22 1 280 3 360 2 139 1 215 1 183 3 141 1 284 6 170 3 188 1 
116 2 90 1 357 2 356 1 358 1 3 2 155 1 360 1 215 2 183 2 10 1 12 1 188 1 133 1 63 2 79 1 334 1 280 6 22 1 139 2 284 12 141 1 170 6 111 1 145 1 
63 1 194 1 3 1 280 3 360 1 183 2 284 6 170 3 160 1 205 1 188 1 
190 1 273 1 194 1 357 2 133 1 358 1 360 1 280 2 22 1 183 2 284 3 141 1 170 1 222 1 205 1 188 1 174 1 
177 1 90 1 133 1 357 2 194 2 63 2 358 1 3 2 22 1 360 3 280 5 183 5 141 1 284 10 170 5 160 1 205 2 188 2 
116 1 90 1 357 2 133 1 63 1 358 1 22 1 183 1 141 1 284 2 170 2 188 1 
116 1 90 1 357 2 133 1 63 1 358 1 3 1 360 1 280 2 22 1 139 1 183 2 215 1 141 1 284 4 170 2 188 1 
87 1 90 1 357 6 133 3 194 1 358 3 280 2 22 3 360 1 183 2 284 3 141 3 170 1 222 1 205 1 174 1 188 1 
247 1 87 1 317 1 116 3 90 1 357 10 358 5 3 5 360 7 215 3 183 12 160 2 346 1 229 1 188 5 190 1 273 1 62 1 194 3 133 5 63 5 79 1 280 18 22 5 334 3 139 3 141 5 284 34 170 16 222 2 205 3 111 4 174 1 340 1 
90 1 357 2 358 1 3 1 360 2 183 2 160 1 12 1 273 1 190 1 63 1 133 1 194 1 79 1 334 1 280 4 22 1 284 8 141 1 170 4 111 1 205 1 340 1 
247 1 317 1 116 1 90 1 357 4 358 2 3 1 360 2 215 1 183 3 160 1 12 1 188 1 190 1 273 1 194 1 133 2 63 2 79 1 280 5 22 2 334 1 284 11 141 2 170 6 205 1 111 2 340 1 
247 1 116 2 90 1 357 6 356 1 358 3 3 3 155 1 360 3 215 2 183 4 10 1 160 1 12 1 188 1 190 1 273 1 194 1 133 3 63 3 79 1 334 1 280 10 22 3 139 2 284 19 141 3 170 9 222 1 205 1 111 1 145 1 340 1 
247 1 116 2 90 1 357 6 356 1 358 3 3 2 155 1 360 3 215 2 183 5 10 1 160 1 12 1 188 2 190 1 273 1 194 1 133 3 63 3 79 1 334 1 280 7 22 3 139 1 284 17 141 3 170 10 222 1 205 1 111 1 145 1 340 1 
90 1 357 2 358 1 3 1 360 2 183 2 160 1 12 1 273 1 190 1 63 1 133 1 194 1 79 1 334 1 280 4 22 1 284 8 141 1 170 4 111 1 205 1 340 1 
116 2 90 1 357 2 356 1 358 1 3 2 155 1 360 1 215 2 183 2 10 1 12 1 188 1 133 1 63 2 79 1 334 1 280 6 22 1 139 2 284 12 141 1 170 6 111 1 145 1 
247 1 116 2 90 1 357 8 356 1 358 4 3 2 155 1 360 3 215 2 183 5 10 1 160 1 12 1 188 2 190 1 273 1 194 1 133 4 63 3 79 1 280 8 22 4 334 1 139 1 284 18 141 4 170 10 222 2 205 1 111 1 145 1 340 1 
87 1 116 3 90 1 357 8 356 1 358 4 3 2 155 1 360 3 215 3 183 6 10 1 12 1 188 3 133 4 63 3 79 1 280 7 22 4 334 1 139 2 284 16 141 4 170 9 222 2 111 1 145 1 
273 1 190 2 194 3 63 1 3 1 280 4 360 3 183 6 284 7 170 3 160 1 205 3 188 3 
87 1 116 2 90 1 357 8 356 1 358 4 3 2 155 1 360 3 215 2 183 4 10 1 160 1 12 1 188 1 190 1 273 1 194 1 133 4 63 3 79 1 280 8 22 4 334 1 139 1 284 18 141 4 170 10 222 2 205 1 111 1 145 1 340 1 
259 1 348 1 179 1 132 1 103 1 287 1 246 1 
61 1 259 1 348 1 179 1 132 1 103 1 361 1 56 1 46 1 13 1 287 1 246 1 
316 1 261 1 248 1 109 1 237 1 232 1 233 1 92 1 72 1 80 1 208 1 
316 1 259 1 88 1 261 1 101 1 179 2 132 1 232 1 233 1 103 2 92 1 80 1 72 1 8 1 366 1 285 1 245 1 208 1 
316 1 88 2 226 1 250 1 179 2 92 2 72 1 8 1 299 1 366 1 218 1 272 1 259 2 261 1 101 1 132 1 232 1 103 2 233 3 285 2 245 1 146 1 208 1 
316 1 88 2 226 1 249 1 250 1 179 2 92 2 253 1 72 2 8 1 299 1 218 1 272 1 259 2 261 2 101 1 132 1 232 2 103 2 233 3 285 2 245 1 146 1 208 1 
316 1 261 3 373 1 226 1 249 1 250 1 342 1 232 3 374 1 118 2 233 4 92 1 80 1 197 2 72 3 221 1 200 1 124 1 218 1 285 1 128 1 371 1 208 1 
316 1 261 3 373 1 226 1 249 1 250 1 232 3 118 2 233 4 92 1 80 1 197 2 72 3 221 1 200 1 124 1 218 1 285 1 128 1 371 1 231 1 208 1 
316 1 261 1 232 1 39 1 72 1 208 1 
261 1 70 1 232 1 72 1 80 1 
88 1 252 1 92 1 3 1 212 1 296 1 8 1 95 1 159 1 160 1 259 1 261 1 101 1 165 1 63 1 103 2 22 2 170 3 316 1 179 2 357 4 358 2 72 1 360 2 228 1 322 2 183 2 366 1 130 1 273 1 190 1 232 1 132 2 133 2 194 1 233 1 280 3 141 2 284 6 285 1 243 2 204 1 205 1 144 1 245 1 208 1 340 1 
118 3 156 2 72 1 54 1 5 1 9 1 124 1 367 2 128 2 371 1 231 1 261 1 330 1 373 1 17 1 232 1 233 2 104 1 80 1 352 2 197 3 221 1 106 1 263 1 200 1 336 2 353 1 173 1 
316 2 261 2 232 2 233 2 92 1 135 1 212 1 72 2 285 1 39 1 371 1 67 1 208 1 
316 1 261 4 249 1 232 4 233 1 92 1 212 1 80 1 72 4 109 1 237 1 28 1 208 1 
316 2 261 2 226 1 232 2 41 1 117 1 233 1 92 1 72 2 73 1 307 1 380 1 285 1 208 1 
328 1 316 1 261 1 89 1 45 1 232 1 230 1 72 1 80 1 208 1 
316 1 261 2 232 2 233 1 92 1 212 1 254 1 72 2 208 1 100 1 213 1 
316 2 261 5 226 1 102 1 232 4 233 3 92 2 212 1 80 1 72 5 254 1 109 1 237 1 28 1 224 1 208 2 
316 2 261 5 226 1 232 4 181 1 233 3 92 2 212 1 80 1 72 5 254 1 109 1 237 1 28 1 224 1 208 2 
316 1 259 1 88 1 261 1 101 1 179 2 132 1 232 1 233 1 103 2 92 1 253 1 80 1 72 1 8 1 285 1 245 1 208 1 
261 1 226 1 70 1 232 1 72 1 
259 1 179 1 103 1 93 1 119 1 64 1 125 1 82 1 84 1 
319 1 375 1 119 1 
309 1 125 1 132 1 93 1 119 1 
373 1 132 1 118 2 319 1 375 1 93 2 119 1 197 2 221 1 54 1 34 1 200 1 309 2 299 1 379 1 125 2 171 1 146 1 272 1 
96 1 248 1 193 1 368 1 
96 1 256 1 238 1 193 1 368 1 166 1 269 1 
238 1 32 1 20 1 
275 1 193 1 269 1 166 3 96 1 365 1 256 1 238 3 57 1 368 1 186 1 289 2 
96 1 256 1 238 2 193 1 110 1 368 1 59 1 166 2 269 1 
328 1 329 1 365 1 256 1 45 1 11 1 238 1 193 1 166 1 269 1 50 1 
365 1 256 1 238 1 193 1 368 1 166 1 269 1 
96 1 365 1 256 1 238 1 368 2 166 1 269 1 
65 1 122 1 365 1 256 2 238 2 193 1 368 1 66 1 166 2 269 2 
96 1 365 1 256 1 11 1 238 3 193 2 53 1 110 2 368 1 166 3 269 1 29 1 30 1 
328 2 329 1 355 1 193 1 269 1 166 2 96 1 235 1 365 1 256 1 45 1 238 2 110 1 368 1 230 1 
96 1 365 1 256 2 11 1 238 4 193 2 53 1 110 2 368 1 59 1 166 4 269 2 314 1 
96 1 365 1 256 1 238 1 193 1 368 1 166 1 269 1 
275 1 53 1 193 3 166 4 269 1 96 2 256 1 238 4 11 1 110 2 368 2 312 1 186 1 289 1 
258 1 193 1 269 1 166 2 96 1 365 1 256 1 255 1 238 2 110 1 368 1 241 1 
96 1 275 2 365 1 256 1 98 1 238 3 193 1 368 1 166 3 269 1 186 1 289 2 
193 2 91 1 31 1 359 2 
365 1 256 1 238 1 166 1 269 1 298 1 
96 1 365 1 256 1 238 2 193 1 110 1 368 1 166 2 269 1 30 1 
327 1 
96 1 365 1 256 1 238 1 193 1 368 1 166 1 269 1 
193 1 269 1 166 3 96 1 365 1 256 1 238 3 110 1 368 1 289 1 30 1 
11 1 193 1 53 1 312 1 
193 1 368 1 

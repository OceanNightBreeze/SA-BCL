#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 125 332 360 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 59 36 56 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 59 36 56 29 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
250 2 1 1 240 2 95 1 111 1 369 1 124 2 84 3 127 3 340 1 184 1 145 1 259 1 
250 5 1 1 0 1 310 1 77 1 205 1 177 2 111 1 291 1 275 1 84 9 159 2 340 2 184 4 259 1 279 1 240 2 91 1 95 6 122 1 166 2 369 3 67 1 124 2 127 9 348 2 305 1 145 1 
250 5 1 1 0 1 310 1 77 1 205 1 177 2 111 1 291 1 275 1 84 9 159 2 340 2 184 4 259 1 279 1 240 2 91 1 95 6 122 1 166 2 369 3 67 1 124 2 127 9 348 2 305 1 145 1 
250 6 1 1 0 1 310 1 77 1 205 1 177 2 111 1 291 1 275 1 84 10 159 2 340 2 184 5 259 1 279 1 240 2 91 1 95 7 122 1 166 2 369 4 67 1 124 2 127 10 348 2 305 1 145 1 
250 4 1 1 310 1 77 1 205 1 177 2 111 1 291 1 275 1 84 7 159 1 340 2 184 3 259 1 279 1 240 2 91 1 95 4 122 1 166 2 369 2 67 1 124 2 127 7 348 2 305 1 145 1 
250 3 1 1 0 1 310 1 240 1 95 3 177 1 166 1 369 1 124 1 275 1 84 4 127 4 348 1 159 2 184 2 145 1 259 1 
250 1 1 1 174 1 240 1 91 1 77 1 177 1 124 1 84 2 31 1 127 2 348 1 340 1 145 1 259 1 160 1 
250 5 1 1 0 1 310 1 155 1 111 1 177 1 275 1 84 9 159 2 340 1 184 4 259 1 280 1 240 2 95 7 166 1 369 3 67 1 124 2 127 9 348 1 305 1 145 1 
250 5 1 1 0 1 310 1 155 1 111 1 177 1 275 1 84 9 159 2 340 1 184 4 259 1 280 1 240 2 95 7 166 1 369 3 67 1 124 2 127 9 348 1 305 1 145 1 
239 1 13 1 299 1 165 1 345 1 327 1 154 1 302 1 82 1 356 1 371 1 85 1 268 1 158 1 
46 1 
2 1 46 1 70 1 191 1 302 2 82 2 356 1 370 1 
74 1 131 2 343 1 46 1 109 1 191 1 302 5 38 1 16 1 82 5 142 1 356 2 221 1 370 2 136 1 70 1 375 2 378 1 43 2 
46 1 70 1 79 1 
46 1 197 1 271 2 
371 1 239 2 268 2 85 2 373 1 158 2 345 2 327 2 
172 1 309 1 149 1 106 2 26 2 151 1 230 1 81 1 289 1 83 1 315 1 206 1 85 2 158 2 114 1 238 1 58 1 163 1 239 2 189 1 345 3 190 2 327 2 15 1 93 1 282 1 141 2 371 1 264 1 19 1 268 3 373 1 100 2 68 1 42 1 105 1 249 1 
371 1 239 1 13 1 268 1 85 1 299 1 158 1 345 1 165 1 327 1 
287 1 59 1 239 1 299 1 46 1 345 1 300 1 302 1 82 1 293 1 5 1 268 1 70 1 270 1 
239 1 299 1 46 1 345 1 327 1 300 1 302 2 82 2 293 1 5 1 85 1 268 1 158 1 70 1 270 1 
44 1 302 1 82 1 356 1 370 1 
339 1 46 1 70 1 191 1 302 2 82 2 356 1 370 1 
302 1 82 1 370 1 
239 2 201 1 260 1 345 2 327 1 268 2 85 1 158 1 373 2 
22 1 37 1 130 1 
309 1 149 1 60 1 106 1 26 1 345 1 190 1 230 1 93 1 282 1 81 1 289 1 315 1 264 1 268 1 373 1 
373 1 79 1 
149 1 239 1 309 1 106 1 26 1 345 2 190 1 230 1 327 1 93 1 282 1 97 1 81 1 289 1 315 1 264 1 268 2 158 1 130 1 199 1 
239 3 85 1 268 3 373 1 158 3 345 3 327 3 199 1 
239 1 13 1 268 1 299 1 158 1 345 1 327 1 
239 1 201 1 268 1 85 1 260 1 299 1 158 1 345 1 327 1 
172 1 149 1 309 1 106 1 26 1 47 1 230 1 81 1 289 1 82 1 293 1 315 1 206 1 5 1 85 2 158 3 114 1 58 1 163 1 239 3 260 1 299 1 189 1 345 4 190 1 327 3 300 1 15 1 93 1 282 1 96 1 97 1 302 1 141 1 371 1 264 1 268 4 373 1 100 2 68 1 270 1 105 1 199 1 249 1 
59 1 239 2 268 2 373 1 158 1 345 2 36 1 327 1 199 1 
239 3 148 1 260 1 299 1 46 1 345 3 327 3 300 1 97 1 96 1 302 1 82 1 293 1 5 1 85 1 268 3 158 3 270 1 199 2 
239 2 268 2 85 1 260 1 158 2 22 1 345 2 327 2 130 1 199 1 
309 1 149 1 106 1 26 1 345 1 190 1 230 1 93 1 282 1 81 1 289 1 315 1 264 1 268 1 373 1 
149 1 106 1 26 1 345 1 190 1 252 1 230 1 93 1 282 1 81 1 289 1 315 1 268 1 373 1 167 1 
172 1 272 1 76 1 206 1 114 1 295 1 182 1 87 1 237 1 320 1 238 2 58 1 189 2 326 1 15 1 37 2 141 4 372 1 330 1 22 2 100 2 306 1 130 2 105 1 
239 1 268 1 299 1 158 1 345 1 327 1 245 1 270 1 
59 1 185 1 239 5 260 1 345 5 36 1 327 4 97 1 113 1 268 5 85 1 158 4 373 1 199 2 
239 2 13 1 268 2 299 1 158 2 345 2 327 2 245 1 
12 1 322 1 175 1 
135 1 322 2 175 2 243 1 88 1 137 1 
322 1 175 1 
322 1 175 1 
88 1 137 1 
88 1 137 1 
88 1 137 1 
347 1 322 1 175 1 
347 1 322 1 175 1 
347 1 322 1 175 1 
322 1 175 1 236 1 
322 1 175 1 236 1 
322 1 175 1 236 1 
35 2 322 2 175 2 187 1 353 1 46 1 336 1 243 1 254 2 244 1 302 2 112 1 82 2 98 2 313 2 195 2 144 3 235 1 377 1 
175 1 108 1 254 1 112 1 82 1 313 1 158 2 7 1 35 1 12 1 322 1 239 2 242 1 345 2 327 2 302 1 140 1 65 1 98 1 268 2 373 1 144 1 128 1 307 1 
31 1 348 2 210 2 312 1 166 1 
348 1 177 1 166 1 
31 1 348 1 177 1 
162 1 31 1 348 3 210 1 312 1 166 2 
31 1 348 2 210 1 312 1 166 1 355 1 
131 1 74 1 46 2 76 1 156 1 4 2 82 5 356 4 30 2 207 1 136 2 320 1 242 1 62 1 139 1 326 1 191 1 302 5 140 1 16 3 370 1 265 1 197 1 70 1 71 1 351 1 375 1 271 3 306 1 335 2 307 1 43 1 
107 1 86 1 49 1 302 1 82 1 356 1 
131 1 46 3 76 1 109 1 156 1 4 1 82 3 356 2 30 2 207 1 136 2 320 1 242 1 62 1 326 1 302 3 16 3 197 2 70 1 71 1 375 1 351 1 271 4 306 1 335 2 43 1 
131 1 46 5 76 2 109 1 156 1 4 2 82 4 356 3 30 4 207 1 136 4 320 2 242 2 63 1 62 1 326 2 302 4 16 5 283 1 18 1 197 4 70 1 71 1 375 1 351 2 271 8 306 2 335 4 43 1 
317 1 
8 1 282 1 79 1 
176 1 282 1 
93 1 282 1 
315 1 8 2 346 1 93 1 282 3 104 1 
315 1 93 1 282 1 
61 1 282 1 
308 1 238 4 189 3 203 1 121 1 218 1 141 7 143 1 338 1 55 2 181 1 182 3 296 1 237 2 306 1 320 1 376 1 379 1 
308 1 172 1 147 1 25 1 203 2 76 3 338 1 55 3 206 1 358 3 181 1 182 10 296 2 318 1 237 5 320 4 238 16 58 1 90 1 189 15 326 3 15 1 218 2 301 1 368 1 263 1 141 31 143 2 266 4 100 2 351 3 376 1 306 4 379 5 
308 1 172 2 150 1 203 1 338 1 55 2 206 2 182 4 181 1 9 1 296 1 237 3 320 1 238 5 58 2 189 4 15 2 218 1 263 1 141 9 143 1 100 4 306 1 379 1 
238 4 308 1 189 3 203 1 218 1 141 7 143 1 338 1 55 2 181 1 182 3 296 1 237 2 306 1 320 1 376 1 379 1 
238 4 308 1 189 3 203 1 218 1 141 7 143 1 338 1 55 2 181 1 182 3 296 1 237 2 306 1 320 1 376 1 379 1 
173 1 149 1 311 1 26 1 106 1 251 1 81 1 51 2 289 1 84 1 340 2 240 1 214 1 190 1 92 2 93 1 282 1 219 2 123 1 124 1 127 1 129 1 170 1 
149 1 26 1 106 1 45 1 228 1 81 1 177 1 51 1 84 1 232 1 31 1 340 1 259 1 117 1 162 1 240 1 366 1 190 1 216 1 92 1 166 1 219 1 124 1 127 1 348 2 102 1 
250 1 1 1 149 1 26 1 106 1 228 1 81 1 177 1 51 1 84 2 232 1 31 1 340 1 259 1 117 1 162 1 240 1 14 1 366 1 190 1 216 1 92 1 95 1 166 1 219 1 124 1 127 2 348 2 145 1 102 1 
250 1 1 1 149 1 26 1 106 1 45 1 228 1 81 1 177 1 51 1 255 1 84 3 232 1 31 1 340 1 162 1 117 1 240 1 366 1 190 1 92 1 95 2 166 1 219 1 124 1 127 3 348 2 129 1 145 1 102 1 
250 1 1 1 149 1 26 1 106 1 45 1 228 1 81 1 51 1 177 1 255 1 84 2 232 1 31 1 340 1 162 1 366 1 190 1 92 1 95 2 219 1 166 1 127 2 348 2 145 1 
11 1 
287 1 149 1 106 2 46 2 251 1 337 1 110 1 204 1 289 2 293 1 5 1 164 2 59 1 214 1 299 1 120 1 344 1 345 1 300 1 217 1 302 5 16 2 125 1 268 1 70 1 71 1 168 1 72 2 271 2 270 1 226 1 74 1 131 1 227 1 26 2 81 1 82 5 314 2 136 2 33 2 239 1 241 1 190 2 94 2 93 1 191 3 282 1 367 4 370 6 246 2 40 1 197 2 374 2 375 1 43 1 
226 1 2 1 287 1 59 1 239 1 299 1 344 1 345 1 300 1 191 1 367 2 217 1 302 3 204 1 82 3 370 2 293 1 246 1 5 1 268 1 168 1 270 1 
226 1 287 1 2 1 46 1 204 1 82 3 293 1 5 1 239 1 59 1 164 1 299 1 344 1 345 1 300 1 217 1 367 3 191 1 302 3 370 1 268 1 70 1 168 1 270 1 
226 1 2 1 287 1 46 1 204 1 82 3 293 1 5 1 239 1 59 1 164 1 299 1 344 1 345 1 300 1 94 1 191 1 217 1 367 3 302 3 370 2 246 1 268 1 70 1 168 1 270 1 
2 1 287 1 46 5 337 1 204 1 293 1 294 1 5 1 59 1 164 4 299 1 344 1 345 1 300 1 217 1 302 5 16 1 125 1 268 1 223 1 70 5 168 1 270 1 72 2 226 1 74 1 131 1 132 1 231 1 82 5 314 2 136 1 33 2 239 1 94 4 367 6 191 3 370 7 246 4 332 1 374 2 197 2 375 1 43 1 
287 1 46 2 337 1 204 1 293 1 5 1 59 1 164 2 299 1 344 1 345 1 300 1 217 1 302 4 16 1 125 1 268 1 70 1 168 1 270 1 271 2 72 2 226 1 74 1 131 1 82 4 314 2 136 1 33 2 239 1 94 2 367 4 191 2 370 4 246 2 40 1 374 2 197 2 375 1 43 1 
226 1 287 1 74 1 131 1 46 1 132 1 337 1 204 1 82 4 314 2 293 1 5 1 136 1 33 2 164 2 239 1 59 1 299 1 344 1 345 1 300 1 94 2 191 2 217 1 367 4 302 4 16 1 370 4 246 2 125 1 268 1 223 1 197 2 374 2 332 1 70 1 168 1 375 1 72 2 270 1 43 1 
226 1 287 1 74 1 131 1 46 1 132 1 337 1 204 1 82 4 314 2 293 1 5 1 136 1 33 2 164 2 239 1 59 1 299 1 344 1 345 1 300 1 94 2 191 2 217 1 367 4 302 4 16 1 370 4 246 2 125 1 268 1 223 1 197 2 374 2 332 1 70 1 168 1 375 1 72 2 270 1 43 1 
226 1 287 1 204 1 82 2 314 1 293 1 5 1 360 1 33 1 239 1 59 1 299 1 344 1 345 1 300 1 217 1 367 2 302 2 125 1 268 1 332 1 168 1 270 1 
226 1 287 1 131 1 74 1 46 1 132 1 337 1 204 1 231 1 82 4 314 2 293 1 5 1 136 1 33 2 239 1 59 1 164 3 299 1 344 1 345 1 300 1 94 3 191 2 217 1 367 5 302 4 16 1 370 5 246 3 125 1 268 1 223 1 197 2 374 2 332 1 70 1 375 1 168 1 72 2 270 1 43 1 
226 1 287 1 131 1 74 1 46 1 132 1 337 1 204 1 231 1 82 4 314 2 293 1 5 1 136 1 33 2 239 1 59 1 164 3 299 1 344 1 345 1 300 1 94 3 191 2 217 1 367 5 302 4 16 1 370 5 246 3 125 1 268 1 223 1 197 2 374 2 332 1 70 1 375 1 168 1 72 2 270 1 43 1 
287 1 46 1 204 1 293 1 5 1 59 1 164 2 299 1 344 1 345 1 300 1 217 1 302 4 16 1 125 1 268 1 24 2 70 1 168 1 270 1 271 2 226 1 74 1 131 1 82 4 314 2 316 2 136 1 33 2 138 1 239 1 94 2 367 4 191 2 370 4 246 2 40 1 375 1 43 1 
172 2 149 2 45 1 26 8 106 7 251 1 78 1 81 2 289 2 206 2 158 1 114 2 87 1 361 1 116 1 238 1 58 2 239 1 163 1 214 1 14 1 189 1 345 1 190 8 327 1 15 2 93 2 282 3 141 2 39 1 304 1 268 1 19 2 247 1 100 4 248 1 42 1 199 1 105 2 
172 1 76 1 80 1 277 1 206 1 85 1 158 1 114 1 182 1 237 1 320 1 238 1 58 1 239 1 260 1 189 2 345 1 327 1 326 1 37 1 15 1 141 3 268 1 22 1 100 2 351 1 130 1 306 1 105 1 
308 1 172 1 203 1 79 1 338 1 55 1 206 1 114 1 182 2 181 1 87 1 296 1 237 2 320 1 238 3 58 1 189 3 15 1 37 1 141 6 373 2 22 1 100 2 130 1 306 1 105 1 
171 1 172 2 76 1 80 1 206 2 233 1 358 3 114 1 257 1 182 2 318 1 237 1 320 2 238 8 58 2 163 1 186 1 189 6 326 2 15 2 37 11 368 1 141 14 266 3 373 1 22 4 100 4 42 1 351 2 130 11 306 1 105 2 379 1 
172 1 149 1 309 1 26 1 106 1 230 1 80 1 153 1 81 1 289 1 315 1 206 1 158 1 114 1 238 1 58 1 239 1 163 1 60 1 189 1 190 1 345 2 327 1 93 1 15 1 282 1 97 1 192 1 141 2 329 1 264 1 268 2 373 1 22 1 100 2 42 1 105 1 199 1 
149 2 45 1 106 3 203 1 289 1 338 1 55 1 206 3 158 1 114 3 296 1 161 2 212 1 298 1 58 3 163 1 345 3 15 3 17 2 264 2 268 3 22 7 68 2 351 2 306 3 130 7 225 2 308 1 172 3 309 2 26 3 76 2 230 2 80 1 81 2 315 2 181 1 182 8 237 4 320 3 238 10 239 1 189 10 190 3 327 1 326 2 93 2 37 7 97 1 282 2 141 20 373 2 99 2 100 6 286 1 42 1 199 1 105 3 379 4 
238 2 58 1 172 1 326 1 37 1 15 1 141 2 206 1 114 1 22 1 100 2 295 1 182 1 87 1 130 1 320 1 105 1 379 1 
58 1 172 1 189 2 76 1 37 1 15 1 141 2 372 1 206 1 114 1 22 1 100 2 182 1 87 1 237 1 130 1 306 1 105 1 
172 1 76 1 206 1 114 1 182 2 87 1 237 1 320 1 238 2 58 1 189 2 326 1 15 1 37 2 141 4 22 2 100 2 351 1 130 2 306 1 105 1 379 1 
238 2 58 1 172 1 326 1 37 1 15 1 141 2 39 1 206 1 114 1 22 1 100 2 295 1 182 1 130 1 320 1 105 1 379 1 
58 1 172 1 189 2 76 1 37 1 15 1 141 2 39 1 372 1 206 1 114 1 22 1 100 2 182 1 237 1 130 1 306 1 105 1 
172 1 76 1 206 1 114 1 182 2 237 1 320 1 238 2 58 1 189 2 326 1 15 1 37 2 141 4 39 1 22 2 100 2 351 1 130 2 306 1 105 1 379 1 
238 2 58 1 172 1 189 2 76 1 326 1 37 2 15 1 141 4 206 1 114 1 22 2 100 2 182 2 237 1 351 1 306 1 130 2 320 1 105 1 379 1 
172 1 149 1 309 1 26 1 106 1 230 1 81 1 289 1 315 1 206 1 114 1 238 1 58 1 163 1 189 1 190 1 345 1 93 1 15 1 282 1 141 2 264 1 268 1 373 1 68 1 100 2 42 1 105 1 
172 1 149 1 26 1 106 1 230 1 252 1 81 1 289 1 315 1 206 1 114 1 238 1 58 1 163 1 281 1 189 1 190 1 345 1 93 1 15 1 282 1 141 2 268 1 373 1 167 1 100 2 42 1 105 1 
172 1 76 1 80 1 206 1 114 1 182 2 237 1 320 1 238 2 58 1 189 2 326 1 15 1 37 2 141 4 22 2 100 2 351 1 130 2 306 1 105 1 379 1 
172 1 149 1 309 1 26 1 106 1 76 1 230 1 81 1 315 1 206 1 114 1 182 2 237 1 320 1 238 2 58 1 189 2 14 1 190 1 345 1 326 1 37 2 93 1 15 1 282 1 141 4 264 1 268 1 22 2 68 1 100 2 351 1 306 1 130 2 225 1 105 1 379 1 
172 1 202 1 76 1 80 1 206 1 85 1 158 1 114 1 182 1 320 1 238 2 58 1 239 1 260 1 189 1 345 1 327 1 326 1 15 1 37 1 141 3 268 1 22 1 100 2 351 1 306 1 130 1 105 1 379 1 
172 2 76 3 50 1 134 2 206 2 358 1 234 1 359 1 258 2 182 6 9 1 318 1 237 3 57 1 320 3 238 9 58 2 189 10 328 1 326 3 15 2 368 1 141 19 266 2 267 1 284 1 100 4 351 3 306 3 379 3 
172 3 76 2 28 1 253 1 50 2 134 1 206 3 208 1 358 2 234 1 258 4 182 4 9 1 237 2 278 1 57 1 89 1 320 3 238 14 58 3 189 12 188 1 326 3 15 3 368 2 263 2 141 26 267 2 266 2 284 1 100 6 351 3 306 2 379 2 
203 1 253 1 50 2 338 1 55 1 206 3 208 1 258 4 9 1 296 1 57 1 58 3 15 3 263 1 267 1 266 4 351 4 306 5 308 1 172 3 76 4 28 1 133 1 134 1 358 3 234 1 182 8 181 1 318 1 237 4 278 1 89 1 320 5 238 20 189 21 188 1 326 4 328 1 368 3 141 41 284 1 100 6 379 4 
308 1 172 4 203 1 76 3 28 1 133 1 253 1 50 2 134 1 338 1 55 1 206 4 208 1 358 3 234 1 258 4 181 1 182 7 296 1 9 1 318 1 278 1 237 4 89 1 57 1 320 5 238 20 58 4 188 1 189 18 328 1 326 4 15 4 368 3 263 2 141 38 266 4 267 1 284 1 100 8 351 4 306 4 379 3 
308 1 172 2 203 1 76 7 28 1 253 1 50 1 134 1 338 1 55 1 206 2 208 1 358 4 234 1 258 4 181 1 182 14 296 1 9 1 318 2 278 1 237 7 89 1 57 1 320 8 238 27 58 2 186 2 188 1 189 25 326 7 15 2 368 2 263 1 141 52 266 4 267 1 284 1 100 4 351 7 306 8 379 7 
35 1 322 1 175 1 353 1 235 1 243 1 254 1 334 1 313 1 98 1 
12 1 128 1 
146 1 35 1 322 1 352 1 175 1 254 1 333 1 313 1 98 1 
35 1 322 1 175 1 353 1 46 1 336 1 243 1 254 1 244 1 302 1 112 1 82 1 98 1 313 1 195 1 144 2 235 1 377 1 
35 1 322 1 175 1 353 1 46 1 336 1 243 1 254 1 244 1 302 1 112 1 82 1 98 1 313 1 195 1 144 2 235 1 377 1 
35 1 322 1 175 1 353 1 46 1 336 1 243 1 254 1 244 1 302 1 112 1 82 1 98 1 313 1 195 1 144 2 235 1 377 1 
135 1 347 1 290 1 
135 1 347 1 290 1 
215 1 236 1 
135 1 215 1 236 1 
7 1 108 1 
175 1 108 1 254 1 82 1 356 1 313 1 158 2 7 1 35 1 12 1 321 1 322 1 239 2 242 1 345 2 327 2 302 1 140 1 65 1 98 1 268 2 373 1 195 1 144 1 128 1 377 1 307 1 
347 1 290 1 
135 1 215 1 236 1 
172 1 149 1 73 1 26 2 106 2 80 1 81 1 206 1 114 1 319 1 116 1 238 1 58 1 239 2 163 1 189 1 190 2 345 2 93 1 15 1 282 1 262 1 141 2 304 1 268 2 19 2 100 2 42 1 350 1 105 1 103 1 
149 1 26 1 106 1 214 1 251 1 190 1 101 1 93 1 282 1 81 1 219 1 303 1 289 1 170 1 
162 1 149 1 45 1 106 1 26 1 228 1 366 1 190 1 81 1 177 1 166 1 303 1 219 1 222 1 31 1 348 2 102 1 363 1 
162 1 149 1 45 1 106 2 26 2 228 1 14 1 366 1 190 2 81 1 177 1 166 1 303 1 219 1 222 1 31 1 348 2 102 1 363 1 
162 1 149 1 45 1 106 1 26 1 228 1 366 1 190 1 81 1 177 1 166 1 219 1 31 1 348 2 196 1 102 1 363 1 
152 1 
74 1 131 1 46 1 16 1 142 1 136 1 70 1 375 1 43 1 378 1 
46 5 76 2 326 2 52 2 16 5 292 1 30 5 136 5 99 1 197 5 351 2 271 10 320 2 306 2 335 5 
46 1 70 1 191 1 302 1 82 1 370 1 
149 1 131 2 74 1 26 4 106 4 227 2 251 1 109 1 81 1 110 1 289 2 82 3 54 1 136 2 115 1 362 1 34 2 214 1 120 1 190 4 93 1 282 1 191 2 302 3 16 2 370 4 71 2 375 2 43 2 
136 1 46 1 70 1 79 1 16 1 142 1 378 1 
131 1 74 1 46 2 337 1 82 1 136 1 191 1 302 1 16 1 370 1 197 1 374 1 70 1 375 1 271 1 72 1 43 1 
200 2 149 4 106 3 46 8 289 1 52 2 292 2 157 1 5 2 8 2 115 1 342 2 61 2 14 1 346 1 302 5 64 2 16 9 69 2 224 2 70 2 71 2 351 2 271 12 306 2 74 4 131 4 227 1 26 3 176 3 76 2 81 3 82 5 30 6 315 3 357 2 136 8 320 2 34 1 364 1 325 1 190 3 326 2 93 3 282 10 191 3 142 1 370 5 99 2 197 6 375 4 335 6 378 1 43 4 
131 2 74 2 227 1 46 5 76 2 3 1 28 1 253 1 82 1 52 2 292 1 30 5 256 1 358 1 136 5 278 1 89 1 320 2 188 1 326 2 191 1 302 1 368 1 16 8 370 1 266 1 197 3 71 1 70 2 375 2 351 2 271 6 306 2 335 5 43 2 
131 1 74 1 203 1 154 1 52 2 82 1 292 1 85 1 136 2 158 1 179 1 181 1 296 1 320 2 239 1 13 1 299 1 345 1 165 1 327 1 302 1 16 2 371 1 268 1 223 1 375 1 306 1 43 1 
172 1 309 1 149 1 26 1 106 1 230 1 81 1 289 1 315 1 206 1 85 2 158 2 114 1 58 1 163 1 239 2 189 1 190 1 345 3 327 2 15 1 93 1 282 1 141 1 371 1 264 1 268 3 373 1 100 2 68 1 105 1 249 1 
74 1 131 1 227 1 46 4 16 1 30 2 55 1 136 2 197 2 71 1 70 2 375 1 271 4 335 2 43 1 
35 1 324 1 7 1 235 1 313 1 
35 1 213 1 313 1 
35 1 213 1 313 1 
35 1 213 1 313 1 
35 1 10 1 313 1 
35 1 10 1 313 1 
35 1 10 1 313 1 
35 1 313 1 
322 1 175 1 
238 5 172 1 58 1 189 5 203 2 15 1 141 10 206 1 179 1 100 2 182 5 181 1 9 1 296 2 237 3 320 2 306 2 379 2 
238 2 58 1 172 1 326 1 15 1 141 2 206 1 100 2 182 1 9 1 320 1 379 1 
238 2 58 1 172 1 189 2 76 1 326 1 15 1 141 4 206 1 100 2 182 2 9 1 237 1 351 1 306 1 320 1 379 1 
238 1 58 3 172 3 189 2 203 1 328 1 15 3 263 1 141 3 178 1 206 3 100 6 182 2 9 1 296 1 237 1 379 1 
308 1 172 5 25 1 203 3 76 3 178 1 276 1 338 1 55 1 206 5 358 3 181 2 182 12 296 3 9 1 318 1 237 7 320 5 238 16 58 5 90 1 189 18 328 1 326 3 15 5 301 1 368 1 263 2 141 34 266 4 100 10 351 3 306 5 379 5 
238 4 308 1 58 2 172 2 189 4 203 1 15 2 263 1 141 8 338 1 55 1 206 2 100 4 181 1 182 3 296 1 237 2 306 1 320 1 379 1 
238 3 308 1 55 1 189 3 203 1 181 1 182 2 296 1 79 1 237 2 306 1 141 6 320 1 338 1 
238 2 58 1 172 1 189 2 76 1 326 1 15 1 141 4 276 1 206 1 100 2 182 2 237 1 351 1 306 1 320 1 379 1 
238 3 189 4 76 1 326 1 368 1 141 7 266 2 358 1 182 2 318 1 237 1 351 1 306 1 320 1 379 1 
308 1 171 1 172 2 203 2 76 2 178 1 338 1 55 1 206 2 358 2 181 1 182 9 296 2 318 1 237 5 320 3 238 11 58 2 186 1 189 12 326 2 15 2 263 2 141 23 266 2 100 4 351 2 306 3 379 4 
266 1 189 1 141 1 
238 1 358 1 141 1 
238 3 172 1 58 1 189 3 76 1 326 1 15 1 141 6 276 1 206 1 99 1 100 2 182 3 351 1 237 2 320 1 306 1 379 1 
172 1 76 2 28 1 253 1 206 1 358 1 182 2 9 1 278 1 237 1 89 1 320 2 238 6 58 1 189 6 188 1 326 2 15 1 368 1 141 12 266 1 100 2 351 2 306 2 379 1 
238 3 189 3 203 1 141 6 181 1 182 2 296 1 237 1 320 1 306 1 379 1 
238 1 308 1 58 1 172 1 189 2 203 1 15 1 263 1 141 3 178 1 338 1 206 1 100 2 182 2 296 1 237 1 379 1 
308 1 172 1 203 1 338 1 55 1 206 1 358 1 182 2 181 1 9 1 296 1 237 2 320 1 238 4 58 1 189 4 188 1 15 1 368 1 141 8 266 1 100 2 306 1 
308 1 172 2 203 1 276 1 338 1 55 1 206 2 358 1 181 1 182 3 296 1 9 1 318 1 237 2 320 2 238 6 58 2 189 5 188 1 326 1 15 2 368 1 141 11 266 2 100 4 351 1 306 1 379 1 
308 1 172 3 203 1 76 2 28 1 253 1 276 1 338 1 55 1 206 3 358 1 181 1 182 4 296 1 9 1 278 1 237 3 89 1 320 3 238 9 58 3 189 10 188 1 326 2 15 3 368 1 263 1 141 19 266 1 100 6 351 2 306 3 379 1 
308 1 172 3 203 1 76 1 28 1 253 1 276 1 338 1 55 1 206 3 358 1 181 1 182 5 296 1 9 1 278 1 237 3 89 1 320 3 238 10 58 3 189 7 188 1 326 2 15 3 368 1 263 1 141 17 266 1 100 6 351 2 306 2 379 2 
308 1 172 1 203 1 338 1 55 1 206 1 358 1 182 2 181 1 9 1 296 1 237 2 320 1 238 4 58 1 189 4 188 1 15 1 368 1 141 8 266 1 100 2 306 1 
172 1 76 2 28 1 253 1 206 1 358 1 182 2 9 1 278 1 237 1 89 1 320 2 238 6 58 1 189 6 188 1 326 2 15 1 368 1 141 12 266 1 100 2 351 2 306 2 379 1 
308 1 172 4 203 1 76 1 28 1 253 1 276 1 338 1 55 1 206 4 358 1 181 1 182 5 296 1 9 1 278 1 237 3 89 1 320 3 238 10 58 4 189 8 188 1 326 2 15 4 368 1 263 2 141 18 266 1 100 8 351 2 306 2 379 2 
172 4 76 2 28 1 253 1 206 4 358 1 182 6 9 1 278 1 237 3 89 1 320 3 238 9 58 4 189 7 188 1 328 1 326 3 15 4 368 1 263 2 141 16 266 1 100 8 351 3 306 2 379 3 
308 2 238 3 189 4 203 3 141 7 338 1 182 6 181 1 296 3 237 3 306 1 320 1 379 3 
308 1 172 4 203 1 76 1 28 1 253 1 338 1 55 1 206 4 358 1 181 1 182 4 296 1 9 1 278 1 237 3 89 1 320 3 238 10 58 4 189 8 188 1 328 1 326 2 15 4 368 1 263 2 141 18 266 1 100 8 351 2 306 2 379 1 
59 1 56 1 36 1 
59 1 56 1 20 1 269 1 36 1 29 1 288 1 220 1 
149 1 106 4 26 4 214 1 75 1 14 1 251 1 190 4 93 1 282 1 81 1 289 1 21 1 
149 2 119 1 106 2 26 2 190 2 93 1 282 1 81 1 315 1 53 1 285 1 286 1 23 1 34 1 
31 1 149 1 26 1 106 1 348 1 228 1 190 1 81 1 177 1 289 1 
73 1 149 1 106 2 26 2 45 1 14 1 190 2 93 1 282 1 81 1 116 1 
149 2 106 4 26 5 214 1 75 1 251 1 14 1 190 5 93 2 282 3 81 2 289 1 248 1 361 1 34 1 116 1 
149 2 106 4 26 5 214 1 75 1 251 1 14 1 190 5 93 2 282 3 81 2 289 1 349 1 248 1 34 1 116 1 
149 1 26 1 106 1 214 1 251 1 190 1 93 1 282 1 79 1 81 1 289 1 
149 1 239 1 106 1 26 1 345 2 190 1 230 1 327 1 93 1 282 1 81 1 289 1 315 1 264 1 268 2 373 1 158 1 199 1 
149 1 26 1 106 1 230 1 81 1 315 2 158 1 34 1 239 2 299 1 61 1 190 1 345 2 327 2 300 1 93 2 282 3 264 1 268 2 373 1 69 1 270 1 199 1 
149 1 26 2 106 2 230 1 81 1 315 2 158 1 34 1 239 2 299 1 61 1 190 2 345 2 327 2 300 1 93 2 282 3 268 2 373 1 21 1 167 1 69 1 270 1 199 1 
149 1 106 3 26 3 61 1 229 1 46 1 190 3 176 1 93 1 282 4 302 2 81 1 289 1 193 1 82 2 370 1 315 1 5 1 21 1 8 1 69 1 70 1 34 1 
149 1 106 3 26 3 61 1 46 1 190 3 176 1 93 1 282 4 302 2 81 1 289 1 82 2 370 1 315 1 5 1 21 1 8 1 69 1 224 1 70 1 34 1 
149 1 26 1 106 1 190 1 78 1 81 1 
118 1 149 3 45 1 119 1 106 6 26 7 14 1 190 7 346 1 78 1 93 2 282 3 81 2 289 2 315 1 53 1 19 1 247 1 248 1 361 1 116 1 
308 1 172 2 149 1 309 1 106 1 26 1 203 1 230 1 80 1 81 1 338 1 315 1 55 1 206 2 158 1 114 2 181 1 182 2 296 1 237 2 319 1 320 1 238 3 58 2 239 1 189 3 14 1 345 2 190 1 327 1 37 1 93 1 15 2 282 1 141 6 17 1 264 1 268 2 373 2 22 1 100 4 68 1 130 1 306 1 105 2 199 1 225 1 
131 2 74 2 106 1 26 1 46 1 176 1 289 1 82 3 356 1 357 1 5 1 136 1 8 1 115 1 342 1 190 1 282 2 191 1 302 3 64 1 16 1 142 1 370 2 224 1 70 1 375 2 378 1 43 2 
149 2 106 2 26 2 325 1 14 1 190 2 346 1 78 1 93 1 282 2 81 1 315 1 8 1 
149 1 239 1 106 1 26 1 345 2 190 1 230 1 327 1 93 1 282 1 81 1 289 1 315 1 268 2 373 1 158 1 167 1 199 1 
118 1 149 2 119 1 106 1 26 1 190 1 346 1 93 1 282 1 81 1 315 1 53 1 34 1 
323 1 239 1 345 1 262 1 274 1 32 1 268 1 350 1 103 1 
323 1 341 1 297 1 
365 1 323 1 32 1 373 1 274 1 
323 1 365 2 299 1 46 1 300 1 354 1 96 1 302 2 82 2 274 2 356 1 293 1 5 1 32 2 373 1 70 1 341 1 270 1 297 1 
250 1 1 1 84 1 127 1 240 1 145 1 259 1 124 1 
250 3 1 2 240 1 91 1 95 2 261 1 369 1 124 1 84 4 127 4 211 1 184 1 145 2 198 1 
250 1 1 1 240 1 95 1 155 1 124 1 84 2 126 1 127 2 180 1 145 1 259 1 
250 1 1 1 240 1 91 2 124 1 84 3 127 3 211 2 183 1 145 1 198 1 259 1 
250 2 41 2 273 1 48 1 
84 1 127 1 240 1 331 1 259 1 124 1 
250 1 1 1 84 2 127 2 240 1 305 1 95 1 145 1 259 1 124 1 
27 1 
250 1 1 1 84 1 127 1 240 1 145 1 259 1 124 1 
250 1 1 1 79 1 145 1 
250 1 1 1 84 1 127 1 240 1 145 1 124 1 
127 1 340 1 51 1 
250 1 1 1 240 1 91 2 124 1 84 3 127 3 211 1 169 1 145 1 259 1 198 1 
250 1 1 1 84 2 127 2 240 1 159 1 95 1 145 1 124 1 
250 1 310 1 240 1 166 1 177 1 124 1 84 1 127 1 348 1 184 1 259 1 
250 1 1 1 84 1 127 1 240 1 259 1 124 1 
1 2 84 1 127 1 240 1 145 1 259 1 124 1 
250 1 1 1 240 2 124 2 194 1 84 2 127 2 6 1 209 1 259 1 
250 2 1 1 240 1 95 2 67 1 369 1 124 1 84 3 127 3 305 1 184 1 145 1 259 1 
250 1 1 1 162 1 240 1 95 1 166 1 177 1 66 1 124 1 84 2 31 1 127 2 348 2 145 1 259 1 
250 2 1 1 0 1 240 2 95 2 369 1 124 2 84 4 127 4 159 1 184 1 145 1 259 1 
250 1 1 1 84 3 127 3 240 1 91 1 305 1 95 1 145 1 259 1 124 1 
250 1 261 1 184 1 369 1 
250 1 1 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 182 222 (67,127) (67,127) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 182 222 (67,127) (67,127) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 182 222 (67,127) (67,127) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 182 222 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 182 222 13 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 182 222 13 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
82 1 193 1 194 3 312 2 174 1 196 7 4 4 5 2 182 2 10 1 67 1 369 2 222 1 293 1 18 1 186 2 324 2 98 1 297 3 249 1 146 1 127 1 207 7 259 1 282 2 
82 1 193 1 194 3 312 2 174 1 196 7 4 4 5 2 182 2 10 1 67 1 369 2 222 1 293 1 18 1 186 2 324 2 98 1 297 3 249 1 146 1 127 1 207 7 259 1 282 2 
82 1 193 1 194 3 312 2 174 1 196 7 4 4 5 2 182 2 10 1 67 1 369 2 222 1 293 1 18 1 186 2 324 2 98 1 297 3 249 1 146 1 127 1 207 7 259 1 282 2 
82 1 193 1 194 3 312 2 214 1 174 1 133 1 196 7 4 4 5 2 182 2 10 1 67 1 369 2 222 1 293 1 18 1 186 2 324 2 98 1 297 4 249 1 146 1 127 1 207 7 259 1 282 2 
186 1 98 1 194 1 312 1 297 1 196 2 4 1 5 1 207 2 182 1 10 1 282 1 222 1 293 1 
186 1 212 1 214 1 174 1 297 1 133 1 196 2 249 1 63 1 5 1 207 2 182 1 369 1 17 1 282 1 293 1 
146 1 186 2 324 1 194 1 207 3 214 1 297 2 133 1 196 3 369 1 4 1 5 2 293 1 
186 2 82 1 324 2 98 1 194 3 312 1 297 3 202 1 196 7 4 5 5 2 146 1 207 7 182 1 10 1 13 1 369 1 282 1 222 1 18 1 293 1 
186 2 82 1 324 2 98 1 194 3 312 1 297 3 202 1 196 7 4 5 5 2 146 1 207 7 182 1 10 1 13 1 369 1 282 1 222 1 18 1 293 1 
48 1 
190 2 23 1 64 1 
289 1 224 2 156 1 38 2 236 2 337 2 101 2 125 2 
315 1 112 1 62 2 3 1 152 1 337 3 338 1 181 1 197 1 365 1 288 1 289 1 345 1 156 1 198 2 92 1 15 1 142 2 38 3 39 1 94 1 370 1 72 1 224 2 163 1 101 2 328 1 125 2 356 1 79 2 232 2 332 1 235 1 54 1 130 1 236 2 170 1 
254 1 287 1 343 1 224 1 156 1 38 1 236 1 337 1 101 1 125 1 
337 2 64 1 217 1 287 1 343 2 267 1 156 1 158 1 38 2 224 1 298 1 225 1 75 1 164 1 101 1 125 1 254 1 149 1 129 1 236 2 29 1 
224 1 298 1 225 1 75 2 101 1 337 1 64 1 125 1 343 1 149 1 267 2 158 1 38 1 236 1 29 1 
173 1 267 1 123 1 75 1 6 1 
304 1 173 1 149 1 267 2 123 1 199 1 75 2 64 1 
173 1 267 1 75 1 
224 1 123 1 75 1 101 1 337 1 125 1 217 1 254 1 287 1 343 1 267 1 156 1 38 1 236 1 
64 1 
173 1 337 1 64 1 217 1 287 1 343 1 267 2 156 1 199 1 38 1 224 1 123 1 75 2 101 1 125 1 329 1 254 1 149 1 236 1 
19 2 213 2 173 2 132 1 123 2 286 1 75 5 76 1 274 1 252 2 64 1 303 1 148 1 149 1 103 1 307 1 267 5 141 1 199 1 
48 1 
224 1 336 1 337 2 101 1 125 1 289 2 367 1 38 2 236 2 
161 1 281 1 258 1 
107 1 62 1 163 1 3 1 337 1 328 1 79 1 197 1 232 1 289 1 332 1 235 1 38 1 39 1 170 1 370 1 
289 1 224 3 38 3 87 1 236 3 337 3 101 3 125 1 
254 1 343 1 224 1 38 1 236 1 337 1 101 1 
343 1 224 1 367 1 336 1 38 1 236 1 337 1 101 1 125 1 
261 1 315 1 336 1 112 1 62 1 3 1 87 1 152 1 337 4 181 1 197 1 365 1 343 1 289 1 267 1 156 1 198 1 92 1 158 1 142 2 38 4 39 1 94 1 370 1 371 1 72 1 224 3 298 1 225 1 163 1 75 1 101 3 328 1 125 2 356 1 79 1 232 1 332 1 235 1 54 1 236 3 170 1 29 1 192 1 
224 1 87 1 101 1 337 2 164 1 343 1 243 1 289 1 331 1 38 2 236 2 
261 1 224 3 336 1 298 1 225 1 75 1 87 2 101 3 337 3 125 1 64 1 343 1 267 1 381 1 158 1 38 3 236 3 29 1 192 1 
224 2 336 1 87 1 101 2 337 2 125 1 281 1 38 2 258 1 236 2 
62 1 163 1 3 1 337 1 328 1 79 1 197 1 232 1 289 1 235 1 332 1 38 1 39 1 170 1 370 1 
350 1 62 1 163 1 3 1 77 1 337 1 328 1 79 1 197 1 232 1 289 1 235 1 332 1 38 1 370 1 
284 1 195 1 177 1 152 1 65 1 181 1 365 2 366 1 9 1 345 2 198 4 142 2 200 1 94 1 72 1 161 2 270 1 203 1 226 1 356 1 53 1 54 1 281 2 258 2 
343 1 224 1 38 1 236 1 29 1 337 1 101 1 41 1 
224 1 62 1 163 1 3 1 87 1 101 1 337 2 328 1 79 1 197 1 232 1 332 1 235 1 38 2 258 1 39 1 236 1 170 1 370 1 192 1 
323 1 224 4 336 1 87 2 164 1 101 4 337 5 125 1 243 1 343 1 289 1 89 1 331 1 38 5 236 5 192 1 
254 1 343 1 224 2 38 2 236 2 337 2 101 2 41 1 
342 1 228 1 
342 1 228 1 
33 1 21 1 
33 1 21 1 
33 1 21 1 
342 1 326 1 228 1 
342 1 326 1 228 1 
342 1 228 1 260 1 
33 1 342 2 279 1 52 1 21 1 228 2 
342 1 326 1 228 1 
342 1 250 1 228 1 
342 1 250 1 228 1 
342 1 250 1 228 1 
310 1 42 2 120 2 97 1 30 2 262 2 215 1 113 1 75 2 227 1 228 2 64 1 136 1 318 1 342 2 52 1 36 2 267 2 209 3 
30 1 262 1 215 1 337 2 7 1 342 1 289 1 36 1 267 1 183 1 38 2 20 1 120 1 187 1 224 2 75 1 228 1 101 2 78 1 102 1 169 1 209 1 236 2 260 1 
312 1 182 1 282 1 
212 1 182 1 282 1 
379 1 238 1 312 2 212 1 221 1 282 3 
238 1 312 1 212 1 221 1 282 2 172 1 
238 1 312 1 212 1 221 2 282 2 
57 1 108 2 284 1 263 1 213 1 173 1 84 2 64 2 7 1 341 1 366 1 267 5 141 1 199 1 200 1 320 1 19 1 190 3 123 4 226 1 353 1 23 1 75 5 76 2 252 1 78 1 102 1 148 3 149 1 208 1 309 1 106 2 
311 1 211 1 108 6 284 3 173 6 213 2 84 6 6 5 64 5 341 1 118 1 366 3 139 1 344 5 267 9 141 1 199 1 200 3 320 2 292 1 19 2 190 9 123 7 191 1 226 3 353 3 23 3 75 9 76 6 252 2 303 1 102 4 148 8 149 1 309 2 
57 1 108 2 284 1 213 1 84 2 64 3 366 1 267 3 200 1 320 1 19 1 190 4 123 2 353 1 226 1 23 2 75 3 252 1 76 2 303 1 102 1 148 3 149 1 208 1 309 1 106 1 
57 1 311 1 211 1 108 4 284 2 213 1 84 4 64 4 118 1 366 2 267 4 200 2 320 1 19 1 190 7 123 3 353 2 226 2 23 3 75 4 252 1 76 4 303 1 102 2 148 5 149 1 208 1 309 1 106 2 
48 1 
277 1 332 1 
121 1 
332 1 235 1 
25 1 332 3 235 1 268 2 377 1 328 1 
332 1 235 1 328 1 
332 1 40 1 
372 1 295 1 351 2 226 1 265 1 272 1 339 1 365 3 9 3 345 4 53 2 167 1 198 7 14 1 200 1 80 1 56 1 
372 1 295 1 351 2 226 1 265 1 272 1 339 1 365 3 9 3 345 4 53 2 167 1 198 7 14 1 200 1 80 1 56 1 
322 1 372 1 295 1 351 2 226 1 272 1 265 1 339 1 365 3 9 3 345 4 53 2 167 1 198 7 14 1 200 1 80 1 56 1 
284 3 178 1 265 2 152 1 181 1 339 5 365 15 366 3 9 10 345 16 218 1 155 1 198 31 14 2 142 2 200 4 372 1 246 1 295 2 72 1 351 3 272 1 22 3 204 4 353 3 226 4 256 1 53 5 167 2 54 1 27 1 80 1 237 1 56 1 
265 1 152 2 181 2 339 1 365 4 9 4 345 5 155 1 198 9 142 4 14 1 200 1 71 1 72 2 295 1 325 1 351 2 226 1 272 1 53 3 167 1 54 2 80 1 56 1 
312 1 212 1 214 1 85 1 133 1 62 1 196 2 3 1 4 1 5 1 88 1 182 1 346 1 11 1 69 1 369 1 159 1 370 1 293 1 186 1 294 1 43 1 297 1 355 1 46 1 379 1 79 1 232 1 207 2 282 2 
312 1 212 1 214 1 60 1 133 1 62 1 196 3 3 1 4 2 5 1 88 1 182 1 346 1 69 1 369 1 159 1 370 1 95 1 186 1 294 1 43 1 297 1 355 1 46 1 379 1 79 1 232 1 207 3 128 1 282 2 
212 1 312 1 214 1 60 1 133 1 62 1 196 2 3 1 4 2 88 1 182 1 346 1 69 1 369 1 159 1 370 1 95 1 297 1 355 1 46 1 379 1 79 1 232 1 207 2 282 2 
186 1 189 1 176 1 62 1 196 1 3 1 5 1 88 2 79 1 197 1 232 1 207 1 8 1 128 1 346 2 332 1 235 1 119 1 157 1 369 2 159 2 171 1 370 1 
312 1 212 1 62 1 196 1 3 1 5 1 88 1 182 1 346 1 11 1 69 1 369 1 159 1 370 1 95 1 293 1 186 1 294 1 43 1 355 1 46 1 379 1 79 1 232 1 207 1 282 2 
299 1 
62 2 114 2 3 1 337 1 64 2 116 1 197 2 343 1 8 1 154 1 119 1 158 1 199 3 244 2 19 1 347 2 298 1 23 2 75 5 251 2 76 2 252 1 164 1 79 2 129 1 29 1 309 1 173 6 213 1 313 1 216 1 180 1 32 1 319 4 267 5 141 1 93 1 38 1 370 1 185 1 190 2 225 1 45 1 276 1 47 2 232 2 148 2 51 1 380 2 149 1 235 1 332 1 236 1 283 1 382 2 
173 2 180 1 337 1 32 1 343 1 319 2 154 1 267 3 158 1 38 1 199 1 185 1 244 1 298 1 225 1 75 3 164 1 276 1 329 1 129 1 236 1 29 1 
298 1 225 1 114 1 75 2 180 1 164 1 337 1 276 1 32 1 319 3 343 1 154 1 267 2 158 1 38 1 129 1 236 1 29 1 185 1 
173 2 114 1 180 1 337 1 32 1 343 1 319 3 154 1 267 3 158 1 199 1 38 1 185 1 244 1 298 1 225 1 75 3 164 1 276 1 47 1 329 1 129 1 236 1 29 1 
61 1 114 2 240 1 337 2 64 1 287 1 343 2 154 1 156 1 158 1 199 3 244 4 19 1 347 2 298 1 75 5 23 2 252 1 76 1 251 2 164 1 125 1 254 1 166 1 305 1 129 1 29 1 173 7 213 1 180 1 32 1 217 1 319 4 267 5 141 1 38 2 93 1 185 1 224 1 225 1 101 1 45 1 276 1 275 1 47 4 329 1 148 1 380 2 149 1 236 2 382 2 
114 2 337 1 64 2 343 1 154 1 158 1 199 2 244 2 19 1 347 2 298 1 75 4 23 2 252 1 76 1 251 2 164 1 129 1 29 1 213 1 173 4 180 1 32 1 319 4 267 4 141 1 38 1 93 1 185 1 190 2 225 1 45 1 276 1 47 2 148 1 380 2 51 1 149 1 236 1 382 2 
173 4 213 1 61 1 114 2 180 1 337 1 64 1 32 1 343 1 319 4 154 1 267 4 158 1 141 1 199 2 93 1 38 1 244 2 185 1 19 1 347 2 298 1 225 1 23 2 75 4 251 2 76 1 252 1 45 1 164 1 276 1 47 2 148 1 380 2 166 1 149 1 305 1 129 1 236 1 29 1 382 2 
173 4 213 1 61 1 114 2 180 1 337 1 64 1 32 1 343 1 319 4 154 1 267 4 158 1 141 1 199 2 93 1 38 1 244 2 185 1 19 1 347 2 298 1 225 1 23 2 75 4 251 2 76 1 252 1 45 1 164 1 276 1 47 2 148 1 380 2 166 1 149 1 305 1 129 1 236 1 29 1 382 2 
173 4 213 1 114 2 180 1 337 1 64 1 32 1 343 1 319 4 154 1 267 4 158 1 12 1 141 1 199 2 93 1 38 1 143 1 244 2 185 1 19 1 347 2 190 2 298 1 225 1 75 4 100 2 300 2 76 1 252 1 164 1 276 1 47 2 148 1 233 1 149 1 305 1 129 1 236 1 29 1 382 2 
213 1 173 5 61 1 114 3 180 1 337 1 64 1 32 1 343 1 319 5 154 1 267 4 141 1 158 1 199 2 93 1 38 1 185 1 244 3 19 1 347 2 298 1 225 1 23 2 75 4 251 2 76 1 252 1 45 1 164 1 276 1 275 1 47 3 148 1 380 2 166 1 149 1 305 1 129 1 236 1 29 1 382 2 
213 1 173 5 61 1 114 3 180 1 337 1 64 1 32 1 343 1 319 5 154 1 267 4 141 1 158 1 199 2 93 1 38 1 185 1 244 3 19 1 347 2 298 1 225 1 23 2 75 4 251 2 76 1 252 1 45 1 164 1 276 1 275 1 47 3 148 1 380 2 166 1 149 1 305 1 129 1 236 1 29 1 382 2 
114 2 337 1 64 1 343 1 154 1 158 1 199 2 244 2 19 1 347 2 298 1 75 4 252 1 76 1 300 2 164 1 129 1 29 1 213 1 173 4 180 1 32 1 319 4 267 4 141 1 38 1 93 1 143 1 185 1 190 2 225 1 100 2 276 1 47 2 148 1 51 1 149 1 236 1 382 2 
48 1 356 1 72 1 195 1 54 1 142 2 94 1 152 1 181 1 
284 1 315 1 111 1 152 2 181 2 339 1 365 6 366 2 289 1 9 2 345 8 218 1 184 1 198 14 15 1 142 4 200 1 94 1 72 2 161 11 348 1 188 1 99 1 204 3 22 3 353 2 226 2 356 2 256 1 53 1 54 2 281 4 258 11 
107 1 239 1 315 1 62 1 3 1 179 1 87 1 152 1 337 2 115 1 181 1 197 1 365 1 289 1 345 1 198 2 38 2 142 2 15 1 39 1 94 1 370 1 72 1 224 1 99 1 163 1 101 1 328 1 79 1 356 1 232 1 332 1 235 1 281 1 54 1 236 1 170 1 192 1 
1 2 284 2 62 3 3 2 152 3 337 3 339 4 197 1 289 2 9 8 345 10 198 20 14 1 15 1 200 3 70 2 72 3 247 2 161 7 351 1 163 2 353 2 79 3 356 3 167 1 359 1 258 7 80 1 170 2 315 1 131 1 317 2 87 1 181 3 365 10 366 2 266 1 92 2 142 6 38 3 39 2 94 3 370 2 95 1 224 1 99 1 272 1 226 3 101 1 328 2 232 3 53 4 235 2 332 2 54 3 281 7 236 1 192 1 56 1 
362 1 85 1 315 1 195 1 62 7 3 2 87 1 152 2 337 1 181 2 197 2 365 1 8 1 345 1 198 2 119 1 38 1 142 4 15 1 94 2 370 2 95 1 72 2 271 1 224 1 349 1 374 1 145 1 101 1 79 8 356 2 232 8 280 1 332 3 235 2 257 1 54 2 236 1 130 2 
284 1 335 1 336 1 152 1 337 1 181 1 366 1 365 2 9 1 345 1 198 3 142 2 38 1 200 1 94 1 161 1 72 1 224 1 99 1 353 1 226 1 101 1 125 1 356 1 53 1 281 1 54 1 258 1 236 1 
161 1 72 1 195 1 177 1 226 1 152 1 181 1 339 1 356 1 366 1 9 1 345 2 198 2 281 1 142 2 54 1 258 1 94 1 
161 1 72 1 284 1 195 1 203 1 152 1 181 1 356 1 365 2 9 1 53 1 198 2 281 1 142 2 54 1 258 1 200 1 94 1 
284 1 195 1 152 1 181 1 339 1 366 1 365 2 9 2 345 2 198 4 142 2 200 1 94 1 72 1 161 2 226 1 353 1 356 1 53 1 54 1 281 2 258 2 
161 1 72 1 349 1 177 1 226 1 152 1 181 1 339 1 356 1 366 1 9 1 345 2 198 2 281 1 142 2 54 1 258 1 94 1 
161 1 72 1 284 1 349 1 203 1 152 1 181 1 356 1 365 2 9 1 53 1 198 2 281 1 142 2 54 1 258 1 200 1 94 1 
284 1 152 1 181 1 339 1 366 1 365 2 9 2 345 2 198 4 142 2 200 1 94 1 72 1 161 2 349 1 226 1 353 1 356 1 53 1 54 1 281 2 258 2 
284 1 161 2 72 1 353 1 226 1 152 1 181 1 339 1 356 1 365 2 366 1 9 2 345 2 53 1 198 4 281 2 142 2 54 1 200 1 258 2 94 1 
315 1 62 1 3 1 152 1 337 1 181 1 197 1 365 1 289 1 345 1 198 2 92 1 15 1 38 1 142 2 39 1 94 1 370 1 72 1 163 1 328 1 79 1 356 1 232 1 235 1 332 1 54 1 170 1 
315 1 62 1 3 1 152 1 337 1 181 1 197 1 365 1 289 1 345 1 198 2 15 1 38 1 142 2 94 1 370 1 72 1 350 1 163 1 77 1 328 1 79 1 356 1 232 1 235 1 332 1 54 1 361 1 
284 1 152 1 181 1 339 1 366 1 365 2 9 2 345 2 198 4 142 2 200 1 94 1 72 1 161 2 99 1 226 1 353 1 356 1 53 1 54 1 281 2 258 2 
284 1 85 1 62 1 3 1 152 1 337 1 181 1 339 1 365 2 366 1 9 2 345 2 198 4 92 1 38 1 142 2 200 1 39 1 94 1 370 1 161 2 247 1 72 1 226 1 163 1 353 1 328 1 79 1 356 1 232 1 53 1 235 1 332 1 281 2 54 1 258 2 170 1 
284 1 336 1 152 1 337 1 181 1 339 1 365 1 366 1 9 1 345 2 198 3 142 2 38 1 200 1 94 1 72 1 161 1 224 1 99 1 353 1 226 1 74 1 101 1 125 1 356 1 54 1 281 1 258 1 236 1 
284 3 83 1 150 1 175 1 152 2 181 2 364 1 339 3 365 10 366 3 9 6 345 9 218 1 219 1 198 19 142 4 200 3 291 1 71 1 72 2 204 2 22 1 353 3 226 3 205 1 378 2 256 1 53 3 54 2 26 2 
284 2 83 2 134 1 152 3 181 3 339 2 364 1 365 12 366 3 9 4 345 14 155 2 219 1 218 2 198 26 142 6 200 2 291 1 321 1 71 1 72 3 375 1 204 2 22 2 353 3 226 3 205 2 378 1 306 1 53 2 54 3 168 1 26 4 28 1 
284 4 83 2 175 1 134 1 152 3 181 3 364 1 339 4 365 21 366 4 9 8 345 20 155 1 218 3 219 1 198 41 14 1 142 6 200 5 291 1 321 1 71 1 72 3 351 1 375 1 272 1 204 4 22 3 353 4 226 5 205 1 253 1 378 1 256 1 306 1 53 4 167 1 168 1 54 3 26 4 28 1 80 1 56 1 
284 3 83 2 175 1 134 1 152 4 181 4 364 1 339 3 365 18 366 4 9 7 345 20 155 2 218 3 219 1 198 38 14 1 142 8 200 4 291 1 321 1 71 1 72 4 351 1 375 1 272 1 204 4 22 3 353 4 226 5 205 1 253 1 378 1 256 1 306 1 53 4 167 1 168 1 54 4 26 4 28 1 80 1 56 1 
284 7 83 1 134 1 152 2 181 2 364 1 339 7 365 25 366 7 9 14 345 27 155 1 218 2 219 1 198 52 14 1 142 4 200 8 291 1 321 1 71 1 72 2 348 2 351 1 375 1 272 1 204 4 22 4 353 7 226 8 205 1 378 1 256 2 306 1 53 7 167 1 168 1 54 2 26 4 28 1 80 1 56 1 
342 1 120 1 97 1 30 1 52 1 262 1 36 1 113 1 376 1 228 1 
187 1 260 1 
96 1 342 1 120 1 30 1 262 1 122 1 36 1 91 1 228 1 
310 1 42 1 120 1 97 1 30 1 262 1 215 1 113 1 75 1 227 1 228 1 64 1 318 1 342 1 52 1 267 1 36 1 209 2 
310 1 42 1 120 1 97 1 30 1 262 1 215 1 113 1 75 1 227 1 228 1 64 1 318 1 342 1 52 1 267 1 36 1 209 2 
310 1 42 1 120 1 97 1 30 1 262 1 215 1 113 1 75 1 227 1 228 1 64 1 318 1 342 1 52 1 267 1 36 1 209 2 
279 1 326 1 302 1 
279 1 326 1 302 1 
250 1 301 1 
279 1 250 1 301 1 
20 1 183 1 
310 1 30 1 262 1 337 2 7 1 342 1 289 1 267 1 36 1 183 1 38 2 42 1 20 1 120 1 187 1 224 2 123 1 75 1 228 1 78 1 101 2 126 1 102 1 169 1 209 1 236 2 260 1 
326 1 302 1 
279 1 250 1 301 1 
362 1 264 1 315 1 62 2 3 1 152 1 337 2 181 1 365 1 35 1 345 1 198 2 68 1 38 2 142 2 15 1 94 1 370 1 72 1 99 1 273 1 79 2 356 1 232 2 280 1 332 1 235 1 358 1 54 1 236 2 130 2 
269 1 333 1 294 1 160 1 312 1 212 1 85 1 62 2 3 1 355 1 379 1 88 1 79 2 232 2 182 1 69 1 282 2 370 1 95 1 
269 1 294 1 312 1 212 1 352 1 62 1 3 1 355 1 379 1 88 1 79 1 232 1 182 1 69 1 282 2 370 1 95 1 
333 1 176 1 62 1 316 1 3 1 88 1 79 1 197 1 232 1 8 1 332 1 235 1 119 1 370 1 
269 1 333 1 294 1 160 1 312 1 212 1 62 1 3 1 355 1 379 1 88 1 79 1 232 1 182 1 69 1 282 2 370 1 95 1 
162 1 
48 1 
19 1 173 1 213 1 190 1 75 1 23 1 251 1 252 1 76 1 45 1 64 2 148 1 380 1 149 1 267 1 141 1 199 1 
108 6 284 2 62 3 3 4 64 8 197 1 290 2 16 2 199 3 200 2 19 4 248 2 296 2 353 2 75 5 23 6 252 4 76 8 79 3 24 1 25 1 307 1 309 2 81 2 213 4 173 5 85 1 84 6 86 1 317 2 366 2 368 1 267 5 140 2 220 1 141 4 268 2 40 2 370 3 144 1 190 12 225 2 226 2 274 1 328 3 232 3 148 9 277 3 149 2 234 2 332 10 235 3 55 2 283 1 
81 2 108 5 284 2 173 1 213 2 2 1 84 5 134 1 135 1 64 5 366 2 267 1 218 1 141 2 199 1 200 2 321 1 19 2 190 6 375 1 204 1 22 1 353 2 226 2 75 1 23 3 252 2 76 5 148 8 234 1 149 2 306 1 168 1 283 1 309 1 
81 2 213 1 61 1 337 1 217 1 287 1 343 1 267 1 156 1 141 1 38 1 14 1 200 1 19 1 73 1 224 1 226 2 75 1 252 1 76 2 101 1 125 1 254 1 148 2 234 1 167 1 236 1 80 1 
19 1 213 1 274 1 252 1 76 1 64 1 148 1 149 1 307 1 141 1 
81 2 108 5 284 2 84 5 190 10 317 1 353 2 226 2 23 5 76 5 64 5 366 2 148 5 234 1 200 2 
173 1 149 1 267 1 199 1 75 1 64 1 
59 1 213 2 173 4 216 1 62 4 3 1 116 1 197 2 8 1 368 2 267 3 141 1 119 1 199 2 370 1 144 1 19 2 75 3 252 2 76 2 303 1 79 4 232 4 148 2 104 1 332 1 235 1 283 2 309 2 
315 1 62 1 112 1 3 1 152 1 337 3 181 1 197 1 365 1 289 1 156 1 198 1 92 1 142 2 38 3 39 1 94 1 370 1 72 1 224 2 163 1 101 2 125 2 328 1 79 1 356 1 232 1 235 1 332 1 54 1 236 2 170 1 
19 1 108 2 213 1 351 1 84 2 190 4 23 2 76 2 252 1 64 4 148 1 149 2 141 1 283 1 309 1 
262 1 36 1 363 1 
262 1 36 1 363 1 
20 1 97 1 109 1 262 1 36 1 
262 1 36 1 363 1 
262 1 36 1 242 1 
262 1 36 1 242 1 
262 1 36 1 242 1 
262 1 36 1 
342 1 228 1 
72 2 351 1 226 1 272 1 152 2 181 2 339 1 365 4 9 3 345 4 53 2 155 1 198 8 167 1 142 4 54 2 14 1 200 1 80 1 56 1 
48 1 
284 1 72 1 353 1 226 1 152 1 181 1 339 1 34 1 365 2 366 1 9 2 345 2 53 1 198 4 142 2 54 1 200 1 
284 1 204 2 22 1 353 1 226 1 339 1 365 4 366 1 9 2 345 3 256 1 53 1 218 1 198 7 200 1 
284 2 152 2 181 2 339 4 366 2 365 12 9 9 345 11 184 1 155 2 198 23 37 1 14 2 142 4 200 3 72 2 348 1 351 1 272 1 226 3 353 2 22 2 204 2 256 1 53 5 167 2 54 2 80 1 56 1 
365 1 198 1 204 1 
345 1 198 1 22 1 
72 1 284 1 317 1 353 1 226 1 152 1 181 1 339 1 34 1 365 3 366 1 9 3 345 3 53 2 198 6 54 1 142 2 200 1 
284 2 134 1 152 1 181 1 339 1 365 6 366 2 9 2 345 6 218 1 198 12 142 2 200 2 321 1 71 1 72 1 375 1 22 1 204 1 353 2 226 2 53 1 306 1 54 1 168 1 
226 1 339 1 365 3 9 2 345 3 53 1 198 6 167 1 14 1 200 1 80 1 
72 1 272 1 152 1 181 1 339 1 365 2 9 2 345 1 53 1 155 1 167 1 37 1 198 3 14 1 142 2 54 1 56 1 
71 1 72 1 73 1 226 2 152 1 181 1 339 2 365 5 9 5 345 5 53 3 167 2 198 10 54 1 142 2 14 2 200 2 80 1 
71 1 72 1 226 1 152 1 181 1 339 1 366 1 9 1 345 2 198 2 142 2 54 1 
71 1 284 1 72 1 353 1 226 1 152 1 181 1 339 1 365 2 366 1 9 2 345 2 53 1 198 4 142 2 54 1 200 1 
71 1 72 3 175 1 152 3 181 3 339 1 365 2 9 2 345 1 155 1 53 1 37 1 198 3 167 1 142 6 54 3 14 1 
284 3 175 1 178 1 152 5 181 5 339 5 34 1 365 18 366 3 9 12 345 16 155 2 218 1 37 1 198 34 14 3 142 10 200 5 71 1 72 5 351 1 272 1 204 4 22 3 353 3 226 5 256 1 53 7 167 3 54 5 27 1 80 2 237 1 56 1 
134 1 152 1 181 1 365 4 9 2 345 4 218 1 198 8 142 2 14 1 200 1 71 1 72 1 351 1 226 1 22 1 204 1 272 1 53 2 167 1 54 1 80 1 56 1 
134 1 152 2 181 2 339 1 34 1 365 5 366 1 9 3 345 6 218 1 198 11 14 1 142 4 200 1 71 1 72 2 351 1 272 1 204 2 22 1 353 1 226 2 256 1 53 2 167 1 54 2 80 1 56 1 
284 2 134 1 152 3 181 3 339 1 34 1 365 10 366 2 9 4 345 9 218 1 155 1 198 19 14 1 142 6 200 3 321 1 71 1 72 3 351 1 375 1 272 1 22 1 204 1 353 2 226 3 53 3 306 1 167 1 54 3 168 1 80 1 56 1 
284 1 134 1 152 3 181 3 339 2 34 1 365 7 366 2 9 5 345 10 155 1 218 1 198 17 14 1 142 6 200 2 321 1 71 1 72 3 351 1 375 1 272 1 22 1 204 1 353 2 226 3 53 3 306 1 167 1 54 3 168 1 80 1 56 1 
134 1 152 1 181 1 365 4 9 2 345 4 218 1 198 8 142 2 14 1 200 1 71 1 72 1 351 1 226 1 22 1 204 1 272 1 53 2 167 1 54 1 80 1 56 1 
284 2 134 1 152 1 181 1 339 1 365 6 366 2 9 2 345 6 218 1 198 12 142 2 200 2 321 1 71 1 72 1 375 1 22 1 204 1 353 2 226 2 53 1 306 1 54 1 168 1 
284 1 134 1 152 4 181 4 339 2 34 1 365 8 366 2 9 5 345 10 218 1 155 2 198 18 14 1 142 8 200 2 321 1 71 1 72 4 351 1 375 1 272 1 204 1 22 1 353 2 226 3 306 1 53 3 167 1 54 4 168 1 80 1 56 1 
284 2 175 1 134 1 152 4 181 4 339 3 365 7 366 3 9 6 345 9 218 1 155 2 198 16 142 8 200 2 321 1 71 1 72 4 375 1 204 1 22 1 353 3 226 3 306 1 53 3 54 4 168 1 
272 2 226 1 339 3 365 4 9 6 345 3 53 3 198 7 167 3 14 3 200 1 80 1 56 1 
284 1 175 1 134 1 152 4 181 4 339 1 365 8 366 2 9 4 345 10 218 1 155 2 198 18 14 1 142 8 200 2 321 1 71 1 72 4 351 1 375 1 272 1 204 1 22 1 353 2 226 3 306 1 53 3 167 1 54 4 168 1 80 1 56 1 
0 1 164 1 337 1 343 1 243 1 289 1 331 1 38 1 236 1 
0 1 285 1 229 1 164 1 337 1 230 1 343 1 243 1 289 1 66 1 331 1 38 1 236 1 223 1 
48 1 79 1 232 1 197 1 62 1 
224 1 62 1 163 1 3 1 87 1 101 1 337 2 328 1 79 1 197 1 232 1 289 1 332 1 235 1 38 2 236 1 170 1 370 1 
248 1 224 2 298 1 62 1 163 1 3 1 87 1 101 1 337 2 328 2 79 1 232 1 343 1 289 1 368 1 332 3 235 2 38 2 40 1 236 2 29 1 170 1 370 1 
373 1 248 1 224 2 350 1 298 1 62 2 163 1 3 1 87 1 101 1 337 2 328 2 79 2 232 2 343 1 289 1 368 1 332 3 235 2 38 2 40 1 236 2 29 1 370 1 
373 1 248 1 173 1 314 1 225 1 62 3 3 1 75 2 64 1 328 1 79 3 197 1 232 3 277 1 149 1 90 1 267 2 368 1 235 1 332 4 268 1 40 1 370 1 
373 1 248 1 173 1 225 1 62 3 3 1 75 2 64 1 328 1 79 3 197 1 232 3 277 1 149 1 267 2 368 1 235 1 332 4 16 1 268 1 40 1 370 1 
79 1 232 1 62 1 3 1 145 1 370 1 
362 1 271 1 85 1 374 1 62 6 145 1 3 3 241 1 328 1 79 7 25 1 197 2 232 7 147 1 235 2 332 3 257 1 130 1 370 2 95 1 245 1 
62 1 3 1 152 2 337 2 289 2 9 2 345 3 198 6 14 1 200 1 70 1 247 1 72 2 161 1 351 1 163 1 79 1 356 2 358 1 167 1 258 1 170 1 80 1 85 1 87 1 181 2 365 3 92 1 142 4 38 2 39 1 94 2 370 1 224 1 99 1 272 1 226 1 101 1 328 1 232 1 53 2 235 1 332 1 281 1 54 2 236 1 56 1 
213 2 173 2 62 1 64 1 197 1 290 1 267 3 141 2 16 1 268 1 199 1 144 1 19 2 296 1 123 1 225 1 75 3 76 1 274 1 252 2 79 1 232 1 148 1 277 1 149 1 307 1 332 2 55 1 
25 1 79 2 232 2 85 1 86 1 332 2 235 1 62 2 268 1 3 2 145 1 370 1 328 1 
373 1 85 1 62 4 3 1 79 4 197 1 232 4 278 1 8 1 119 1 235 1 332 1 370 1 
334 1 62 2 3 2 241 1 328 1 79 2 165 1 232 2 266 1 368 1 235 1 332 1 370 1 245 1 
79 1 232 1 197 1 212 1 182 1 62 1 3 1 282 1 370 1 355 1 
79 2 362 1 232 2 85 1 332 1 235 1 62 2 68 1 3 1 370 1 95 1 
362 1 85 1 374 1 62 4 3 2 79 5 197 1 232 5 278 1 8 1 368 1 119 1 235 2 332 3 257 1 370 2 
362 1 85 1 62 4 3 2 79 5 197 1 232 5 278 1 138 1 8 1 368 1 119 1 235 2 332 3 257 1 370 2 
224 1 350 1 62 1 163 1 3 1 87 1 101 1 337 2 328 1 79 1 197 1 232 1 289 1 332 1 235 1 38 2 236 1 370 1 
62 1 3 2 241 1 328 1 79 1 25 1 232 1 147 1 368 1 235 1 332 1 370 1 245 1 
264 1 273 1 337 1 49 1 153 1 35 1 38 1 236 1 210 1 
50 1 58 1 210 1 
231 1 49 1 153 1 289 1 210 1 
261 1 58 1 298 1 225 1 123 1 31 1 75 2 64 1 50 1 49 2 231 2 153 2 343 1 289 1 149 1 267 2 158 1 29 1 210 1 
48 1 
186 1 207 1 214 1 297 1 133 1 196 1 5 1 
346 1 196 1 369 1 
186 1 117 1 207 3 214 1 174 2 297 1 133 1 196 3 354 1 44 1 5 1 293 1 
186 1 207 2 214 1 10 1 297 1 133 1 196 2 4 1 5 1 
186 1 194 1 98 1 312 1 207 1 182 1 297 1 196 1 282 1 5 1 293 1 
186 1 207 1 214 1 297 1 196 1 5 1 293 1 
186 1 207 1 214 2 133 1 196 1 5 1 293 1 
186 2 214 1 110 1 297 1 196 2 206 1 124 1 5 2 207 2 293 1 
186 1 82 1 324 1 194 1 207 3 214 1 297 2 133 1 196 3 4 2 18 1 5 1 293 1 
186 1 212 1 312 1 214 1 297 1 133 1 196 2 4 1 5 1 379 1 357 1 207 2 182 1 282 2 293 1 
186 2 324 1 194 1 214 1 297 2 133 1 151 1 196 4 4 2 5 2 207 4 10 1 293 1 
186 1 207 1 214 1 297 1 133 1 196 1 5 1 293 1 
186 1 324 1 194 1 214 2 174 1 297 3 133 2 327 1 196 4 354 1 44 1 4 2 5 1 207 4 
186 1 214 1 297 1 202 1 133 1 196 2 4 1 5 1 340 1 207 2 255 1 293 1 
186 1 214 1 174 2 297 1 133 1 196 3 44 1 354 2 5 1 207 3 105 1 293 1 
330 1 297 2 201 1 308 2 
186 1 207 1 196 1 360 1 5 1 293 1 
186 1 82 1 207 2 214 1 297 1 133 1 196 2 4 1 5 1 293 1 
137 1 
186 1 207 1 214 1 297 1 133 1 196 1 5 1 293 1 
186 1 82 1 207 3 214 1 174 1 297 1 133 1 196 3 4 1 5 1 293 1 
324 1 194 1 297 1 327 1 
214 1 297 1 

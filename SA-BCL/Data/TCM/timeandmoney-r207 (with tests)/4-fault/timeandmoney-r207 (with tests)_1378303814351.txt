#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 9 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 9 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 156 2 42 1 23 9 162 1 164 1 248 1 54 9 271 1 369 1 272 7 250 1 132 1 60 1 112 2 172 2 324 5 302 3 255 1 205 1 206 1 305 4 66 1 307 1 
118 1 369 1 271 1 156 2 272 7 42 1 250 1 132 1 23 9 60 1 172 2 112 2 324 5 255 1 302 3 162 1 205 1 206 1 164 1 305 4 66 1 248 1 54 9 307 1 
156 2 272 1 132 1 23 3 112 2 324 2 302 1 162 1 205 1 164 1 305 1 248 1 54 3 
118 2 185 1 156 2 42 2 23 9 218 1 162 1 164 2 248 1 54 9 110 1 56 1 369 1 272 6 250 1 132 1 149 1 112 2 172 2 324 5 302 3 255 1 205 1 206 2 305 4 66 1 233 1 307 1 
118 2 185 1 156 2 42 2 23 9 218 1 162 1 164 2 248 1 54 9 110 1 56 1 369 1 272 6 250 1 132 1 149 1 112 2 172 2 324 5 302 3 255 1 205 1 206 2 305 4 66 1 233 1 307 1 
118 2 185 1 156 2 42 2 23 10 218 1 162 1 164 2 248 1 54 10 110 1 56 1 369 1 272 7 250 1 132 1 149 1 112 2 172 2 324 6 302 4 255 1 205 1 206 2 305 5 66 1 233 1 307 1 
118 2 185 1 156 2 42 2 23 7 218 1 162 1 164 2 248 1 54 7 110 1 56 1 369 1 272 4 250 1 132 1 149 1 112 2 172 1 324 4 302 2 255 1 205 1 206 2 305 3 233 1 307 1 
118 1 156 1 272 3 42 1 250 1 132 1 23 4 112 1 172 2 324 3 302 1 162 1 206 1 305 2 66 1 248 1 54 4 307 1 
185 1 156 1 42 1 132 1 23 2 112 1 227 1 324 1 162 1 206 1 164 1 248 1 180 1 367 1 54 2 56 1 
0 1 211 1 195 1 346 1 168 1 71 1 143 1 25 1 220 1 176 1 283 1 38 1 293 1 139 1 
30 1 
41 1 262 1 220 2 71 1 207 1 30 1 348 1 139 2 
0 1 211 1 41 1 262 1 2 2 71 2 45 1 102 2 215 1 143 1 25 1 216 2 241 2 49 1 220 5 107 1 293 1 79 1 30 1 296 4 55 1 195 1 346 1 321 1 320 2 168 1 62 1 373 1 348 2 377 1 204 1 203 1 280 4 283 1 176 1 38 1 95 2 139 5 
262 1 9 1 30 1 
83 2 30 1 242 1 
195 2 283 2 346 2 176 2 38 2 143 2 25 1 40 1 
100 1 99 1 22 1 310 1 142 1 143 2 25 1 47 1 48 1 163 1 106 1 51 1 315 1 10 1 316 2 249 2 269 1 317 1 82 1 297 2 33 2 298 1 195 3 346 2 300 2 202 1 115 1 18 1 283 2 176 2 38 3 327 1 94 1 138 1 181 1 98 1 40 1 
0 1 211 1 195 1 283 1 346 1 176 1 38 1 168 1 143 1 25 1 
0 1 262 1 195 1 69 1 322 1 323 1 143 1 220 1 38 1 292 1 92 1 30 1 139 1 11 1 
0 1 262 1 195 1 346 1 69 1 143 1 176 1 283 1 220 2 38 1 292 1 92 1 30 1 139 2 11 1 
220 1 71 1 247 1 348 1 139 1 
41 1 262 1 220 2 71 1 30 1 348 1 139 2 286 1 
220 1 348 1 139 1 
195 2 346 1 134 1 143 2 26 1 176 1 283 1 38 2 40 2 
225 1 161 1 120 1 
317 1 33 1 195 1 310 1 142 1 300 1 202 1 63 1 163 1 38 1 94 1 10 1 98 1 40 1 249 1 269 1 
9 1 40 1 
317 1 120 1 33 1 195 2 346 1 310 1 142 1 24 1 300 1 143 1 202 1 163 1 283 1 38 2 94 1 50 1 10 1 98 1 269 1 249 1 
370 1 195 5 346 4 371 1 323 1 24 2 143 5 26 1 362 1 283 4 176 1 38 5 50 1 40 1 
0 1 195 2 283 2 346 2 38 2 159 1 168 1 143 2 
195 3 176 1 283 3 346 3 38 3 24 1 143 3 40 1 
0 1 195 1 283 1 346 1 38 1 168 1 143 1 
0 1 195 1 283 1 346 1 176 1 38 1 134 1 143 1 26 1 
100 1 0 1 186 1 22 1 310 1 142 1 69 1 24 1 143 3 25 1 26 1 48 1 163 1 220 1 292 1 50 1 315 1 10 1 11 1 316 1 269 1 249 1 317 1 297 2 33 1 298 1 195 4 346 3 300 1 202 1 115 1 18 1 176 2 283 3 38 4 92 1 94 1 327 1 138 1 181 1 182 1 139 1 98 1 40 1 
195 2 283 1 346 1 371 1 38 2 323 1 24 1 143 2 40 1 
0 1 195 3 346 3 69 1 214 1 24 2 143 3 26 1 176 1 220 1 283 3 38 3 292 1 92 1 50 1 30 1 139 1 182 1 11 1 
161 1 120 1 195 2 283 2 346 2 176 1 38 2 24 1 143 2 26 1 
317 1 33 1 195 1 310 1 142 1 300 1 202 1 163 1 38 1 94 1 10 1 98 1 40 1 249 1 269 1 
317 1 33 1 195 1 310 1 239 1 142 1 263 1 300 1 163 1 38 1 94 1 10 1 98 1 40 1 249 1 
100 1 120 2 22 1 2 1 161 2 106 2 315 1 343 1 12 1 316 4 225 2 297 2 193 1 298 1 133 1 170 1 375 1 115 1 16 1 229 1 95 1 138 2 181 1 285 1 
0 1 195 1 283 1 346 1 69 1 38 1 159 1 143 1 
158 1 59 1 188 1 
256 1 59 2 86 1 188 2 189 1 325 1 
59 1 188 1 
59 1 188 1 
256 1 189 1 
256 1 189 1 
256 1 189 1 
59 1 188 1 31 1 
59 1 188 1 31 1 
59 1 188 1 31 1 
59 1 188 1 360 1 
59 1 188 1 360 1 
59 1 188 1 360 1 
158 1 3 1 265 1 44 1 188 1 143 2 334 1 75 1 220 1 195 2 346 2 59 1 349 1 374 1 350 1 282 1 283 2 38 2 177 1 258 1 139 1 40 1 183 1 355 1 
238 1 59 2 359 1 265 2 188 2 73 1 349 2 325 1 232 1 190 1 75 3 146 1 282 2 220 2 177 1 30 1 139 2 128 2 355 2 
118 1 378 2 206 2 246 1 180 1 
118 1 206 1 42 1 
206 1 42 1 180 1 
378 1 118 2 206 3 246 1 180 1 278 1 
378 1 118 1 206 2 246 1 287 1 180 1 
41 1 157 2 262 1 2 1 71 4 102 1 216 1 334 1 242 1 241 1 289 1 220 5 364 1 108 1 30 2 340 1 296 2 270 1 83 3 34 1 348 1 229 1 204 1 350 1 280 3 64 1 304 2 95 1 258 1 97 2 139 5 285 1 
308 1 41 1 262 1 2 3 71 7 102 2 216 2 242 3 243 5 241 2 7 1 220 9 247 5 341 1 30 5 340 2 296 6 270 1 373 1 83 9 34 3 15 1 348 6 229 3 204 1 280 8 64 2 36 1 304 6 95 3 258 4 97 6 139 9 285 3 330 1 
157 1 262 1 71 2 2 1 102 1 216 1 242 2 241 1 289 1 220 3 364 1 30 3 340 1 296 2 373 1 34 1 83 4 229 1 280 3 64 1 304 2 95 1 258 1 97 2 139 3 285 1 
308 1 157 2 262 1 71 3 2 2 102 1 216 1 242 3 241 1 289 1 220 4 364 1 30 4 340 1 296 4 83 7 373 1 34 2 15 1 229 2 280 5 64 1 36 1 304 4 95 2 258 2 97 4 139 4 285 2 
199 1 
235 1 9 1 
163 1 342 1 
163 1 142 1 98 1 
163 1 313 1 
163 1 142 1 
235 2 199 1 142 1 267 1 105 1 163 1 98 1 
261 1 68 1 2 1 311 1 45 1 133 2 276 1 375 3 144 1 279 2 49 1 106 4 95 1 138 3 234 1 55 1 208 1 316 7 
260 1 261 1 22 1 68 2 2 4 311 5 45 1 144 1 6 1 245 3 49 2 106 16 221 1 29 1 55 2 316 31 297 2 298 1 34 3 14 1 133 5 276 1 277 4 151 1 375 10 228 1 115 1 279 3 229 3 95 4 138 15 181 1 234 2 285 3 
261 1 22 2 68 1 2 1 311 1 45 1 217 1 144 1 49 1 106 5 32 1 316 9 55 1 297 4 298 2 14 1 133 3 375 4 115 2 279 2 95 1 138 4 181 2 234 1 
261 1 68 1 2 1 311 1 45 1 133 2 276 1 375 3 144 1 279 2 49 1 106 4 95 1 138 3 234 1 55 1 316 7 
261 1 68 1 2 1 311 1 45 1 133 2 276 1 375 3 144 1 279 2 49 1 106 4 95 1 138 3 234 1 55 1 316 7 
317 1 344 1 156 1 33 1 194 1 310 1 142 1 131 2 23 1 372 1 84 1 300 1 112 1 301 2 254 1 116 2 163 1 164 2 147 1 52 1 10 1 54 1 249 1 
118 1 259 1 156 1 187 1 42 1 23 1 162 1 164 1 295 1 10 1 54 1 249 1 317 1 33 1 131 1 300 1 301 1 112 1 150 1 278 1 113 1 116 1 206 2 381 1 96 1 180 1 
118 1 259 1 156 1 187 1 42 1 23 2 162 1 164 1 248 1 295 1 10 1 54 2 249 1 317 1 272 1 33 1 132 1 131 1 300 1 301 1 112 1 150 1 278 1 324 1 113 1 174 1 116 1 206 2 381 1 180 1 
118 1 259 1 156 1 187 1 42 1 23 3 164 1 248 1 295 1 10 1 54 3 249 1 317 1 57 1 33 1 272 2 132 1 131 1 372 1 300 1 301 1 112 1 150 1 278 1 324 1 113 1 116 1 206 2 96 1 180 1 
118 1 187 1 42 1 23 2 164 1 248 1 10 1 54 2 249 1 317 1 57 1 33 1 272 2 132 1 131 1 300 1 301 1 150 1 278 1 324 1 113 1 116 1 206 2 96 1 180 1 
252 1 
0 1 41 2 102 1 4 1 143 1 288 1 241 1 46 1 242 2 337 1 8 3 292 1 11 1 296 1 192 1 195 1 251 2 348 5 204 1 303 5 352 1 117 1 257 2 19 3 20 2 262 1 69 1 216 1 220 4 30 1 222 1 166 1 129 1 322 1 323 1 137 3 280 1 230 2 38 1 92 1 139 4 184 1 
0 1 41 2 262 1 69 1 4 1 102 1 143 1 288 1 216 1 242 2 46 1 241 1 337 1 220 4 8 3 292 1 30 1 222 1 166 1 296 1 129 1 11 1 192 1 195 1 251 2 323 1 322 1 348 5 204 1 137 3 230 2 280 1 303 5 352 1 38 1 117 1 92 1 257 2 19 3 20 2 139 4 184 1 
0 1 41 2 102 1 4 1 143 1 241 1 337 1 8 2 292 1 11 1 296 1 192 1 195 1 348 4 204 1 152 2 303 4 117 1 257 2 19 2 20 2 212 1 262 1 69 1 216 1 220 4 80 1 222 1 30 1 83 2 323 1 322 1 137 2 280 1 38 1 92 1 328 2 139 4 184 1 
0 1 41 3 142 1 102 1 4 1 143 1 288 1 242 2 241 1 337 1 8 2 292 1 10 1 296 2 11 1 249 2 192 1 344 1 195 1 251 2 348 6 300 2 253 1 254 1 204 1 303 4 64 1 117 1 257 2 19 2 20 2 212 1 262 1 310 2 69 1 216 1 163 1 220 5 30 2 222 1 317 1 33 2 319 1 83 2 322 1 323 1 137 2 230 2 280 2 38 1 284 1 92 1 179 1 139 5 184 1 
0 1 41 1 195 1 69 1 322 1 323 1 348 2 143 1 303 2 337 1 8 1 220 3 38 1 92 1 117 1 292 1 207 1 222 1 139 3 11 1 192 1 184 1 
0 1 41 1 262 1 195 1 69 1 322 1 323 1 348 1 143 1 303 3 337 1 220 3 38 1 92 1 117 1 292 1 207 1 30 1 19 1 222 1 139 3 11 1 192 1 184 1 
0 1 41 1 262 1 69 1 143 1 337 1 220 3 8 1 292 1 222 1 30 1 11 1 192 1 195 1 323 1 322 1 348 2 137 1 303 3 38 1 117 1 92 1 207 1 19 1 139 3 184 1 
0 1 41 3 102 1 4 1 143 1 288 1 241 1 46 1 242 2 337 1 8 4 292 1 11 1 296 1 192 1 195 1 251 2 348 7 204 1 303 6 352 1 117 1 257 2 207 1 19 4 20 2 262 5 69 1 216 1 220 5 222 1 30 5 166 1 129 1 322 1 323 1 137 4 89 1 280 1 230 2 38 1 92 1 139 5 184 1 
0 1 41 2 102 1 4 1 143 1 288 1 241 1 242 2 337 1 8 2 292 1 11 1 296 1 192 1 195 1 251 2 348 4 204 1 303 4 117 1 257 2 19 2 20 2 212 1 262 1 69 1 216 1 220 4 222 1 30 2 83 2 323 1 322 1 137 2 280 1 230 2 38 1 92 1 139 4 184 1 
0 1 41 2 262 1 69 1 4 1 102 1 143 1 288 1 216 1 242 2 46 1 241 1 337 1 8 2 220 4 292 1 30 1 222 1 166 1 296 1 11 1 129 1 192 1 195 1 251 2 323 1 322 1 348 4 137 2 204 1 230 2 280 1 303 4 38 1 117 1 92 1 257 2 19 2 20 2 139 4 184 1 
0 1 41 2 262 1 69 1 4 1 102 1 143 1 288 1 216 1 242 2 46 1 241 1 337 1 8 2 220 4 292 1 30 1 222 1 166 1 296 1 11 1 129 1 192 1 195 1 251 2 323 1 322 1 348 4 137 2 204 1 230 2 280 1 303 4 38 1 117 1 92 1 257 2 19 2 20 2 139 4 184 1 
0 1 41 2 262 1 69 1 4 1 102 1 143 1 216 1 46 1 241 1 337 1 8 2 220 4 292 1 314 1 30 1 80 1 222 1 296 1 11 1 192 1 195 1 167 1 83 2 323 1 322 1 348 4 137 2 204 1 152 2 280 1 303 4 38 1 117 1 92 1 257 2 328 2 19 2 20 2 139 4 184 1 
100 2 356 1 22 2 310 2 142 2 122 1 24 1 143 1 47 2 27 1 336 1 163 3 48 1 106 1 10 2 315 2 12 1 249 8 316 2 317 2 297 4 82 1 344 1 33 7 318 1 195 1 298 2 346 1 300 8 174 1 115 2 254 1 90 1 283 1 38 1 178 1 96 1 138 1 181 2 
100 1 120 1 22 1 2 1 160 1 143 1 26 1 161 1 106 1 315 1 316 3 225 1 297 2 298 1 195 1 346 1 34 1 133 1 169 1 375 1 115 1 229 1 176 1 283 1 38 1 95 1 138 2 181 1 285 1 
100 1 120 1 261 1 22 1 2 1 45 1 144 1 161 1 49 1 9 1 106 3 315 1 12 1 55 1 316 6 225 1 297 2 298 1 133 2 375 2 115 1 279 1 95 1 138 3 181 1 40 2 
100 1 120 11 22 2 2 2 311 1 160 1 245 3 161 4 48 1 290 1 106 8 29 1 315 2 316 14 225 11 82 1 297 4 298 2 274 1 34 2 133 1 85 1 136 1 277 3 375 2 228 1 115 2 229 2 95 1 138 6 181 2 285 1 40 1 
100 1 21 1 22 1 310 1 142 1 160 1 72 1 24 1 143 1 161 1 163 1 48 1 106 1 50 1 10 1 315 1 269 1 249 1 316 2 317 1 297 2 82 1 33 1 298 1 195 2 346 1 111 1 300 1 202 1 115 1 63 1 283 1 38 2 94 1 138 1 181 1 98 1 40 1 
100 3 237 2 142 2 332 1 2 3 43 2 45 1 143 1 144 1 49 1 48 1 106 10 50 1 10 2 55 1 249 3 297 6 195 3 298 3 346 1 300 3 202 2 115 3 261 1 120 7 22 3 310 1 160 1 311 4 24 1 161 7 163 2 315 3 316 20 269 2 317 2 225 7 82 1 33 3 34 2 133 4 375 8 87 1 279 1 229 2 35 2 380 2 283 1 38 3 93 1 327 2 94 2 96 1 95 3 138 10 181 3 98 2 285 2 40 2 
225 1 100 1 120 1 297 2 298 1 22 1 2 1 311 1 375 1 115 1 16 1 229 1 161 1 106 2 315 1 181 1 316 2 12 1 
225 1 100 1 120 1 297 2 298 1 22 1 193 1 133 1 375 1 115 1 161 1 95 1 315 1 138 2 181 1 285 1 316 2 12 1 
100 1 120 2 22 1 2 1 311 1 161 2 106 2 315 1 12 1 316 4 225 2 297 2 298 1 34 1 133 1 375 2 229 1 115 1 95 1 138 2 181 1 285 1 
225 1 100 1 120 1 297 2 298 1 22 1 2 1 311 1 375 1 115 1 16 1 229 1 161 1 106 2 178 1 315 1 181 1 316 2 
225 1 100 1 120 1 297 2 298 1 22 1 193 1 133 1 375 1 115 1 161 1 178 1 95 1 315 1 138 2 181 1 285 1 316 2 
100 1 120 2 22 1 2 1 311 1 161 2 106 2 315 1 316 4 225 2 297 2 298 1 34 1 133 1 375 2 229 1 115 1 178 1 95 1 138 2 181 1 285 1 
100 1 120 2 22 1 2 1 311 1 161 2 106 2 315 1 316 4 225 2 297 2 298 1 34 1 133 1 375 2 229 1 115 1 95 1 138 2 181 1 285 1 
100 1 22 1 310 1 142 1 163 1 48 1 106 1 10 1 315 1 316 2 269 1 249 1 317 1 82 1 297 2 33 1 195 1 298 1 300 1 202 1 115 1 38 1 94 1 327 1 138 1 181 1 98 1 40 1 
100 1 22 1 239 1 310 1 142 1 263 1 335 1 163 1 48 1 106 1 10 1 315 1 316 2 249 1 317 1 82 1 297 2 33 1 195 1 298 1 300 1 115 1 38 1 94 1 138 1 181 1 98 1 40 1 
100 1 120 2 22 1 2 1 160 1 311 1 161 2 106 2 315 1 316 4 225 2 297 2 298 1 34 1 133 1 375 2 229 1 115 1 95 1 138 2 181 1 285 1 
100 1 120 2 22 1 142 1 2 1 311 1 161 2 163 1 106 2 10 1 315 1 316 4 269 1 249 1 225 2 317 1 297 2 33 1 195 1 298 1 34 1 133 1 300 1 375 2 202 1 229 1 174 1 115 1 35 1 38 1 94 1 327 1 95 1 138 2 181 1 285 1 98 1 
100 1 120 1 22 1 2 1 311 1 160 1 143 1 26 1 161 1 106 2 315 1 316 3 225 1 297 2 298 1 195 1 346 1 34 1 375 1 115 1 229 1 176 1 283 1 38 1 95 1 39 1 138 1 181 1 285 1 
1 1 22 2 2 3 311 3 217 1 245 1 291 1 145 1 106 9 29 1 316 19 297 4 13 2 196 1 298 2 148 1 347 1 34 3 133 3 277 2 375 6 228 1 115 2 229 3 281 1 95 3 329 2 138 10 181 2 285 3 
210 1 1 1 22 3 2 3 311 2 217 1 125 1 245 2 291 2 145 2 338 1 106 14 29 2 316 26 297 6 13 4 196 1 298 3 148 1 200 1 14 2 34 3 133 2 277 2 375 4 115 3 229 3 91 1 95 2 329 1 138 12 181 3 285 2 382 1 
1 1 2 5 45 1 144 1 245 3 145 1 291 2 49 1 338 1 106 20 55 1 297 6 148 1 298 3 196 1 13 4 14 1 200 1 115 3 210 1 261 1 22 3 311 4 217 1 125 1 29 3 316 41 34 4 133 4 226 1 277 4 375 8 228 1 229 4 279 1 281 1 91 1 95 5 138 21 329 1 181 3 285 4 382 1 
210 1 261 1 1 1 22 4 2 5 311 3 45 1 144 1 217 1 125 1 245 3 49 1 291 2 145 1 338 1 106 20 29 3 55 1 316 38 297 8 13 4 196 1 298 4 148 1 200 1 14 2 34 4 226 1 133 4 277 4 375 7 228 1 279 1 115 4 229 4 281 1 91 1 95 4 329 1 138 18 181 4 285 3 382 1 
210 1 261 1 1 1 22 2 2 8 311 7 45 1 144 1 217 1 125 1 245 4 49 1 291 1 145 1 338 1 106 27 29 2 55 1 316 52 297 4 13 4 196 1 298 2 148 1 274 2 200 1 14 1 34 7 133 7 277 4 375 14 228 2 279 1 115 2 229 7 91 1 95 8 329 1 138 25 181 2 285 7 382 1 
238 1 146 1 282 1 59 1 265 1 188 1 349 1 103 1 325 1 355 1 
158 1 44 1 
282 1 59 1 153 1 265 1 188 1 366 1 349 1 74 1 355 1 
351 1 31 1 
86 1 360 1 331 1 
238 1 59 1 359 1 265 1 188 1 73 1 349 1 325 1 190 1 75 2 146 1 282 1 220 1 177 1 30 1 139 1 128 1 355 1 
238 1 59 1 359 1 265 1 188 1 73 1 349 1 325 1 190 1 75 2 146 1 282 1 220 1 177 1 30 1 139 1 128 1 355 1 
238 1 59 1 359 1 265 1 188 1 73 1 349 1 325 1 190 1 75 2 146 1 282 1 220 1 177 1 30 1 139 1 128 1 355 1 
351 1 86 1 31 1 
351 1 86 1 31 1 
360 1 331 1 
86 1 360 1 331 1 
3 1 183 1 
158 1 71 1 3 1 265 1 44 1 73 1 188 1 143 2 334 1 75 1 220 1 128 1 195 2 59 1 346 2 349 1 374 1 114 1 350 1 282 1 283 2 38 2 258 1 139 1 40 1 183 1 355 1 
100 1 356 1 22 1 123 1 160 1 143 2 124 1 244 1 47 2 48 1 106 1 78 1 10 1 315 1 249 2 316 2 317 1 297 2 82 1 33 2 298 1 195 2 300 2 115 1 379 1 38 2 138 1 181 1 
317 1 357 1 344 1 33 1 194 1 310 1 142 1 300 1 254 1 116 1 163 1 10 1 249 1 141 1 
118 1 317 1 119 1 33 1 187 1 42 1 300 1 150 1 278 1 206 2 116 1 180 1 96 1 295 1 10 1 249 1 141 1 209 1 
118 1 317 1 119 1 33 2 187 1 42 1 300 2 150 1 278 1 174 1 206 2 116 1 180 1 96 1 295 1 10 1 249 2 141 1 209 1 
118 1 317 1 119 1 33 1 187 1 42 1 300 1 150 1 278 1 206 2 116 1 180 1 96 1 127 1 295 1 10 1 249 1 
76 1 
100 1 22 1 310 1 142 1 143 2 25 1 48 1 163 1 10 1 315 1 316 1 249 1 269 1 317 1 297 2 33 1 195 3 298 1 346 2 300 1 202 1 115 1 18 1 283 2 176 2 38 3 327 1 94 1 138 1 181 1 98 1 40 1 
262 2 83 4 102 1 216 1 242 2 241 1 279 1 204 1 280 1 64 1 304 2 179 1 97 2 30 4 296 2 
204 1 102 1 215 1 216 1 241 1 
320 2 2 2 34 2 83 10 242 5 229 2 280 5 380 1 304 5 79 1 95 2 97 5 30 5 296 5 285 2 
41 1 262 1 220 1 30 1 348 1 139 1 
41 2 310 2 142 1 102 2 216 2 241 2 163 1 220 3 10 1 296 2 249 4 317 1 344 1 33 4 58 1 198 2 319 1 373 1 300 4 348 4 204 1 254 1 280 2 64 2 284 1 179 2 354 1 139 3 67 1 
203 1 9 1 215 1 
41 1 262 1 102 1 288 1 216 1 242 1 241 1 220 1 30 2 296 1 251 1 83 1 348 1 204 1 280 1 230 1 139 1 
0 1 235 2 41 3 240 1 142 3 2 4 45 1 333 2 102 4 143 1 241 4 242 6 49 1 293 1 10 3 342 3 11 2 296 11 55 1 249 1 109 2 195 1 197 2 346 1 61 2 300 1 348 5 203 1 204 4 64 2 304 6 67 1 211 1 262 2 310 1 70 2 215 1 25 1 216 4 267 1 163 6 220 5 77 1 79 3 30 8 317 4 33 1 321 1 320 4 168 1 83 12 34 2 88 1 229 2 280 12 380 2 283 1 176 1 37 2 38 1 179 1 95 4 97 6 139 5 98 3 285 2 
210 1 41 1 262 2 2 2 102 2 216 2 241 2 242 3 125 1 245 1 361 1 338 1 220 1 79 1 29 1 368 1 30 5 296 5 320 2 83 6 34 2 348 1 277 1 204 2 229 2 280 8 64 1 304 5 91 1 179 1 95 2 97 5 139 1 285 2 382 1 
0 1 211 1 2 2 45 1 102 1 143 1 25 1 216 1 241 1 49 1 220 1 293 1 79 1 129 1 296 2 55 1 195 1 346 1 320 2 321 1 168 1 204 1 280 2 176 1 283 1 38 1 95 1 139 1 
238 1 282 1 3 1 349 1 191 1 
282 1 155 1 349 1 
282 1 155 1 349 1 
282 1 155 1 349 1 
282 1 339 1 349 1 
282 1 339 1 349 1 
282 1 339 1 349 1 
282 1 349 1 
59 1 188 1 
297 2 22 1 298 1 321 1 2 2 311 2 133 3 45 1 375 5 217 1 115 1 49 2 106 5 95 2 138 5 181 1 55 2 316 10 
297 2 298 1 22 1 2 1 311 1 375 1 217 1 115 1 229 1 106 2 181 1 316 2 
297 2 298 1 22 1 2 1 34 1 311 1 133 1 375 2 217 1 115 1 229 1 106 2 95 1 138 2 181 1 285 1 316 4 
297 6 298 3 22 3 14 1 311 1 133 1 135 1 375 2 217 1 115 3 281 1 49 1 106 1 138 2 181 3 316 3 55 1 
260 1 261 1 22 5 2 5 311 5 45 2 144 1 217 1 6 1 245 3 49 3 106 16 221 1 29 1 55 3 316 34 297 10 298 5 14 2 34 3 133 7 135 1 277 4 375 12 228 1 279 1 115 5 229 3 281 1 326 1 95 5 138 18 181 5 285 3 
261 1 22 1 2 1 45 1 217 1 144 1 125 1 245 1 49 1 106 4 29 1 316 8 55 1 297 2 298 1 133 2 277 1 375 2 279 1 115 1 95 1 138 4 181 1 
261 1 22 2 2 2 311 1 45 1 144 1 217 1 125 1 245 1 49 1 106 6 29 1 55 1 316 11 297 4 298 2 34 1 133 2 277 2 375 3 228 1 279 1 115 2 229 1 326 1 95 1 138 5 181 2 
210 1 261 1 22 3 2 3 311 1 45 1 144 1 217 1 125 1 245 1 49 1 338 1 106 9 29 1 55 1 316 19 297 6 298 3 34 2 14 1 133 3 277 1 375 4 279 1 115 3 229 2 91 1 326 1 95 3 138 10 181 3 285 2 382 1 
210 1 261 1 22 3 2 3 311 2 45 1 144 1 217 1 125 1 245 1 49 1 338 1 106 10 29 1 55 1 316 17 297 6 298 3 14 1 34 2 133 3 277 1 375 5 279 1 115 3 229 2 91 1 326 1 95 2 138 7 181 3 285 1 382 1 
261 1 22 1 2 1 45 1 217 1 144 1 125 1 245 1 49 1 106 4 29 1 316 8 55 1 297 2 298 1 133 2 277 1 375 2 279 1 115 1 95 1 138 4 181 1 
210 1 22 1 2 2 311 1 217 1 125 1 245 1 338 1 106 6 29 1 316 12 297 2 298 1 34 2 133 1 277 1 375 2 115 1 229 2 91 1 95 2 138 6 181 1 285 2 382 1 
210 1 261 1 22 4 2 3 311 2 45 1 144 1 217 1 125 1 245 1 49 1 338 1 106 10 29 1 55 1 316 18 297 8 298 4 34 2 14 2 133 3 277 1 375 5 279 1 115 4 229 2 91 1 326 1 95 2 138 8 181 4 285 1 382 1 
210 1 22 4 2 3 311 3 217 1 125 1 245 1 338 1 106 9 29 1 316 16 297 8 298 4 34 3 14 2 133 3 277 1 375 6 115 4 229 3 281 1 91 1 95 2 138 7 181 4 285 2 382 1 
261 1 2 1 311 3 133 3 45 1 375 6 144 2 49 3 106 3 95 1 138 4 316 7 55 3 
210 1 261 1 22 4 2 3 311 1 45 1 144 1 217 1 125 1 245 1 49 1 338 1 106 10 29 1 55 1 316 18 297 8 298 4 34 2 14 2 133 3 277 1 375 4 279 1 115 4 229 2 281 1 91 1 95 2 138 8 181 4 285 1 382 1 
297 4 261 1 298 2 22 2 2 1 311 1 14 1 45 1 133 2 375 3 144 1 279 1 115 2 49 1 106 4 95 1 138 4 181 2 316 8 55 1 
279 1 261 1 49 1 9 1 106 3 2 1 95 1 45 1 133 2 138 3 375 2 316 6 55 1 144 1 
297 2 298 1 22 1 2 1 34 1 311 1 133 1 375 2 115 1 229 1 106 2 326 1 95 1 138 2 181 1 285 1 316 4 
2 1 34 1 311 1 133 1 277 2 375 2 228 1 229 1 245 1 106 3 95 1 29 1 138 4 285 1 316 7 
261 1 22 2 2 3 311 4 45 1 144 1 245 2 49 2 106 11 55 2 316 23 297 4 298 2 274 1 34 2 14 2 133 5 85 1 135 1 277 2 375 9 228 1 279 1 229 2 115 2 95 3 138 12 181 2 285 2 
138 1 277 1 316 1 
245 1 106 1 316 1 
297 2 22 1 298 1 2 1 34 1 311 1 133 2 375 3 115 1 229 1 380 1 106 3 326 1 95 1 138 3 181 1 285 1 316 6 
210 1 22 1 2 2 311 1 217 1 125 1 245 1 338 1 106 6 29 1 316 12 297 2 298 1 34 2 133 1 277 1 375 2 115 1 229 2 91 1 95 2 138 6 181 1 285 2 382 1 
2 1 311 1 45 1 133 1 375 2 49 1 106 3 95 1 138 3 316 6 55 1 
297 2 261 1 298 1 22 1 311 1 14 1 133 1 135 1 375 2 144 1 115 1 49 1 106 1 138 2 181 1 55 1 316 3 
104 1 195 1 38 1 371 1 323 1 143 1 40 1 
309 1 195 1 371 1 358 1 323 1 143 1 104 1 175 1 38 1 126 1 40 1 130 1 
224 1 317 1 344 1 33 4 310 1 142 1 300 4 174 1 254 1 163 1 306 1 10 1 249 4 
317 2 273 1 33 2 198 1 142 1 300 2 163 1 93 1 28 1 365 1 53 1 10 1 98 1 249 2 
317 1 206 1 187 1 33 1 42 1 310 1 180 1 10 1 300 1 249 1 
317 1 174 1 33 2 78 1 96 1 10 1 300 2 249 2 
317 2 344 1 33 4 198 1 310 1 142 2 122 1 300 5 254 1 174 1 336 1 90 1 163 3 306 1 10 2 249 5 
317 2 344 1 33 4 198 1 310 1 142 2 122 1 300 5 254 1 174 1 17 1 90 1 163 3 306 1 10 2 249 5 
317 1 254 1 344 1 33 1 163 1 9 1 310 1 142 1 10 1 300 1 249 1 
317 1 33 1 195 2 346 1 310 1 142 1 24 1 300 1 143 1 163 1 283 1 38 2 94 1 10 1 98 1 40 1 249 1 269 1 
0 2 142 2 69 1 24 1 143 1 163 3 313 1 10 1 223 1 269 1 249 1 317 1 33 1 195 1 198 1 346 1 61 1 300 1 283 1 38 1 92 1 94 1 98 2 40 1 
0 2 142 2 69 1 263 1 24 1 143 1 163 3 313 1 10 1 223 1 249 1 317 1 33 1 195 1 198 1 346 1 61 1 300 1 283 1 38 1 92 1 94 1 98 2 40 1 
235 1 262 1 310 1 142 1 163 3 220 2 313 1 10 1 30 1 342 1 11 1 249 3 224 1 317 1 33 3 198 1 299 1 61 1 348 1 300 3 173 1 139 2 98 1 
224 1 317 1 235 1 33 3 262 1 310 1 198 1 142 1 61 1 300 3 348 1 163 3 220 2 313 1 30 1 10 1 139 2 11 1 98 1 342 1 249 3 109 1 
317 1 27 1 33 1 10 1 300 1 249 1 
317 3 273 1 33 6 318 1 310 2 142 2 122 1 300 7 5 1 174 1 47 1 27 1 90 1 336 1 267 1 163 3 96 1 365 1 10 2 98 1 249 7 
100 2 237 1 142 1 2 1 45 1 143 1 144 1 49 1 106 3 10 1 249 1 55 1 297 4 195 2 298 2 346 1 300 1 202 1 115 2 261 1 120 1 22 2 160 1 24 1 161 1 163 1 315 2 269 1 316 6 317 1 225 1 33 1 133 2 375 2 174 1 279 1 35 1 379 1 283 1 38 2 327 1 94 1 95 1 138 3 181 2 98 1 40 2 
0 1 235 1 41 1 142 1 2 2 333 1 45 1 102 2 143 1 241 2 49 1 293 1 10 1 342 1 11 1 296 4 249 1 55 1 109 1 195 1 197 1 346 1 61 1 348 2 300 1 204 2 203 1 67 1 211 1 262 1 310 1 71 1 215 1 25 1 216 2 163 2 220 3 79 1 30 1 317 1 33 1 321 1 320 2 168 1 280 4 283 1 176 1 37 1 38 1 95 2 139 3 98 1 
235 1 317 2 33 1 199 1 240 1 142 1 300 1 27 1 267 1 163 1 10 1 98 1 249 1 
317 1 33 1 195 2 346 1 310 1 142 1 263 1 24 1 300 1 143 1 163 1 283 1 38 2 94 1 10 1 98 1 40 1 249 1 
317 2 273 1 33 1 198 1 142 1 300 1 5 1 267 1 163 1 365 1 10 1 98 1 249 1 
236 1 345 1 165 1 201 1 40 1 
0 1 236 1 121 1 345 2 262 1 69 1 71 1 101 1 201 2 171 1 220 2 92 1 165 2 292 1 30 1 139 2 182 1 11 1 40 1 
236 1 195 1 123 1 201 1 143 1 124 1 244 1 38 1 165 1 
236 1 121 1 171 1 
369 1 156 1 162 1 272 1 132 1 23 3 248 1 112 1 54 3 324 1 56 1 
302 1 305 1 154 1 324 1 
132 1 324 1 
156 1 162 1 132 1 23 1 248 1 112 1 54 1 324 1 
156 1 213 1 272 2 132 2 23 4 112 1 324 3 302 1 363 1 305 1 248 2 154 1 54 4 56 1 
156 1 162 1 272 1 132 1 60 1 353 1 23 2 248 1 264 1 112 1 54 2 324 1 
156 1 213 2 132 1 23 3 112 1 324 1 162 1 219 1 363 1 248 1 54 3 56 2 
294 2 268 1 266 1 324 2 
231 1 156 1 162 1 23 1 112 1 54 1 
369 1 156 1 162 1 272 1 132 1 23 2 248 1 112 1 54 2 324 1 
376 1 
156 1 162 1 132 1 23 1 248 1 112 1 54 1 324 1 
9 1 132 1 248 1 324 1 
156 1 132 1 23 1 248 1 112 1 54 1 324 1 
164 1 131 1 54 1 
156 1 213 1 132 1 23 3 112 1 324 1 162 1 363 1 248 1 140 1 54 3 56 2 
156 1 272 1 132 1 23 2 248 1 172 1 112 1 54 2 324 1 
118 1 156 1 42 1 250 1 23 1 112 1 324 1 162 1 206 1 305 1 54 1 
156 1 162 1 132 1 23 1 112 1 54 1 324 1 
156 1 162 1 132 2 23 1 248 1 112 1 54 1 
156 2 132 1 275 1 23 2 312 1 112 2 324 1 162 1 65 1 54 2 
369 1 156 1 272 2 132 1 23 3 112 1 324 2 255 1 302 1 162 1 305 1 248 1 54 3 
118 1 156 1 272 1 42 1 132 1 23 2 112 1 278 1 324 1 162 1 206 2 248 1 180 1 81 1 54 2 
156 2 272 2 132 1 23 4 112 2 172 1 324 2 302 1 162 1 305 1 66 1 248 1 54 4 

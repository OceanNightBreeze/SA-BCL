#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 54 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 54 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 155 2 338 1 311 3 68 2 215 1 205 1 376 1 272 3 28 2 161 1 60 1 132 1 
0 3 155 2 338 6 311 9 67 1 68 5 135 1 205 1 256 2 345 1 317 1 28 2 161 1 77 2 145 2 146 1 213 1 85 1 215 2 376 4 56 1 152 2 37 1 272 9 38 1 60 1 305 1 132 1 
0 3 155 2 338 6 311 9 67 1 68 5 135 1 205 1 256 2 345 1 317 1 28 2 161 1 77 2 145 2 146 1 213 1 85 1 215 2 376 4 56 1 152 2 37 1 272 9 38 1 60 1 305 1 132 1 
0 4 155 2 338 7 311 10 67 1 68 6 135 1 205 1 256 2 345 1 317 1 28 2 161 1 77 2 145 2 146 1 213 1 85 1 215 2 376 5 56 1 152 2 37 1 272 10 38 1 60 1 305 1 132 1 
0 2 155 2 338 4 311 7 67 1 68 4 135 1 205 1 256 2 345 1 317 1 28 2 161 1 77 2 145 2 146 1 213 1 85 1 215 2 376 3 56 1 152 1 37 1 272 7 60 1 305 1 132 1 
0 1 155 1 145 1 338 3 311 4 213 1 68 3 85 1 256 1 205 1 376 2 152 2 272 4 38 1 28 1 161 1 77 1 132 1 
265 1 155 1 67 1 311 2 68 1 215 1 205 1 219 1 256 1 344 1 37 1 272 2 28 1 161 1 77 1 132 1 
0 3 145 1 155 2 338 7 213 1 311 9 68 5 85 1 215 1 135 1 256 1 205 1 376 4 152 2 195 1 272 9 38 1 28 2 161 1 77 1 107 1 305 1 60 1 132 1 
0 3 145 1 155 2 338 7 213 1 311 9 68 5 85 1 215 1 135 1 256 1 205 1 376 4 152 2 195 1 272 9 38 1 28 2 161 1 77 1 107 1 305 1 60 1 132 1 
229 1 12 1 178 1 166 1 66 1 4 1 190 1 268 1 193 1 158 1 15 1 242 1 198 1 330 1 
29 1 
229 2 166 1 8 1 29 1 352 1 353 1 158 2 208 1 
229 5 375 1 166 2 280 1 361 1 119 1 352 1 204 2 218 1 158 5 270 1 140 1 208 1 89 1 8 2 29 1 245 1 228 2 238 2 
54 1 29 1 208 1 
300 2 303 1 29 1 
12 1 66 2 330 2 4 2 268 2 193 2 15 2 32 1 
178 1 310 1 66 2 133 1 250 1 95 1 4 3 134 1 362 1 254 1 207 1 368 1 260 1 261 2 106 1 319 1 10 1 291 2 11 1 32 1 80 1 126 1 12 1 13 1 321 1 241 2 150 1 268 2 322 1 193 2 55 1 324 1 57 1 15 3 273 2 114 1 330 2 275 2 153 1 
12 1 178 1 66 1 198 1 330 1 4 1 190 1 268 1 193 1 15 1 
229 1 178 1 4 1 193 1 99 1 158 1 15 1 208 1 315 1 326 1 75 1 29 1 306 1 61 1 
229 2 178 1 66 1 4 1 268 1 193 1 158 2 15 1 208 1 315 1 75 1 29 1 330 1 306 1 61 1 
229 1 166 1 8 1 98 1 158 1 
229 2 166 1 8 1 29 1 352 1 158 2 208 1 196 1 
229 1 8 1 158 1 
66 1 360 1 4 2 268 1 193 2 15 2 367 1 330 1 32 2 
19 1 128 1 206 1 
65 1 95 1 4 1 241 1 15 1 57 1 273 1 368 1 260 1 114 1 275 1 319 1 10 1 153 1 32 1 126 1 
44 1 66 4 4 5 268 1 193 5 99 1 15 5 129 1 367 1 330 4 292 1 263 1 334 2 32 1 
266 1 178 1 66 2 198 1 330 2 4 2 193 2 15 2 
54 1 32 1 
44 1 66 1 95 1 4 2 241 1 193 1 206 1 57 1 15 2 273 1 368 1 260 1 114 1 330 1 275 1 10 1 319 1 153 1 334 1 126 1 
66 3 330 3 4 3 268 1 193 3 334 1 15 3 32 1 
178 1 66 1 198 1 330 1 4 1 193 1 15 1 
178 1 367 1 66 1 360 1 330 1 4 1 268 1 193 1 15 1 
229 1 44 1 178 1 66 3 250 1 95 1 4 4 134 1 232 1 254 1 158 1 315 1 367 1 368 1 260 1 75 1 261 2 106 1 10 1 319 1 291 1 11 1 32 1 80 1 126 1 12 1 13 1 321 1 148 1 241 1 268 2 322 1 193 3 324 1 57 1 15 4 273 1 114 1 330 3 275 1 153 1 334 1 306 1 61 1 
66 1 330 1 4 2 193 2 99 1 263 1 334 1 15 2 32 1 
229 1 178 1 44 1 66 3 4 3 268 1 232 1 193 3 158 1 323 1 15 3 315 1 367 1 75 1 29 1 330 3 334 2 306 1 61 1 
66 2 4 2 268 1 193 2 206 1 15 2 367 1 330 2 19 1 334 1 
95 1 4 1 241 1 15 1 57 1 273 1 368 1 114 1 260 1 275 1 319 1 10 1 153 1 32 1 126 1 
296 1 4 1 241 1 351 1 15 1 57 1 273 1 368 1 114 1 260 1 275 1 10 1 153 1 32 1 126 1 
70 1 281 1 231 1 254 1 206 2 47 1 261 2 212 1 106 1 291 4 11 2 80 1 81 1 13 1 321 1 150 2 128 2 191 1 192 1 322 1 194 1 354 1 223 1 19 2 
178 1 266 1 66 1 330 1 4 1 193 1 61 1 15 1 
287 1 111 1 290 1 
186 1 286 1 287 2 331 1 240 1 290 2 
287 1 290 1 
287 1 290 1 
286 1 240 1 
286 1 240 1 
286 1 240 1 
287 1 290 1 343 1 
287 1 290 1 343 1 
287 1 290 1 343 1 
287 1 290 1 175 1 
287 1 290 1 175 1 
287 1 290 1 175 1 
177 1 229 1 66 2 249 1 313 1 312 1 4 2 180 1 158 1 365 1 287 1 290 1 237 1 32 1 373 1 214 1 111 1 193 2 87 1 15 2 17 1 330 2 244 1 335 1 
248 1 64 1 229 2 177 3 313 2 180 2 120 1 158 2 257 1 365 2 50 2 304 1 287 2 331 1 29 1 244 2 290 2 357 1 335 1 
265 1 145 1 252 2 256 2 92 1 
145 1 77 1 256 1 
265 1 77 1 256 1 
265 1 145 2 171 1 252 1 256 3 92 1 
265 1 145 1 309 1 252 1 256 2 92 1 
229 5 361 1 69 1 233 2 204 1 158 5 208 1 140 3 8 1 29 2 212 1 348 2 185 1 238 1 81 1 166 4 82 1 214 1 191 1 192 1 352 1 218 2 168 1 87 1 300 3 303 1 17 1 224 1 328 1 329 2 277 1 228 1 
229 9 94 1 280 1 361 1 98 5 233 6 204 2 158 9 121 1 208 1 140 8 184 5 8 6 29 5 212 3 348 6 238 2 33 1 81 3 166 7 110 1 189 1 82 3 191 3 192 3 352 1 269 1 218 6 168 2 87 4 300 9 303 3 224 1 328 2 228 2 
229 3 280 1 69 1 204 1 233 2 158 3 208 1 140 3 29 3 212 1 348 2 185 1 238 1 81 1 166 2 82 1 192 1 191 1 168 1 218 2 87 1 300 4 303 2 328 1 329 1 228 1 
229 4 280 1 69 1 233 4 204 1 158 4 121 1 208 1 140 5 29 4 212 2 348 4 185 1 238 1 33 1 81 2 166 3 189 1 82 2 192 2 191 2 168 1 218 4 87 2 300 7 303 3 328 1 329 2 228 1 
63 1 
368 1 260 1 57 1 
260 1 116 1 
288 1 260 1 54 1 
260 1 382 1 
368 1 260 1 
288 2 239 1 368 1 260 3 211 1 57 1 
157 1 314 1 70 4 283 1 212 2 320 1 291 9 11 4 350 1 125 1 187 1 267 1 150 5 191 2 151 1 88 2 223 3 274 1 199 2 
156 4 2 1 314 1 70 13 254 1 283 1 316 1 261 2 212 5 106 1 320 1 291 35 11 17 350 1 80 1 125 2 187 1 81 3 267 2 321 1 82 3 150 18 192 3 191 5 151 7 88 3 221 1 223 6 199 3 274 2 41 1 381 3 226 1 227 1 358 1 
70 6 314 1 254 2 283 1 261 4 212 2 318 1 106 2 320 1 291 11 11 5 80 2 125 1 187 1 267 1 321 2 150 6 191 2 151 2 88 2 223 4 274 1 199 2 41 1 336 1 
314 1 70 4 283 1 212 2 320 1 291 9 11 4 350 1 125 1 187 1 267 1 150 5 191 2 151 1 88 2 223 3 274 1 199 2 
314 1 70 6 283 1 212 2 320 1 291 9 11 4 350 1 125 1 187 1 267 1 150 5 191 2 151 3 88 2 223 3 274 1 199 2 
23 1 155 1 311 1 341 2 241 1 215 2 253 1 36 2 159 1 272 1 273 1 368 1 172 1 114 1 260 1 28 1 275 1 76 2 123 1 10 1 153 1 176 1 295 1 
155 1 311 1 341 1 364 1 205 1 256 2 284 1 71 1 183 1 28 1 76 1 10 1 77 1 265 1 145 1 241 1 215 1 216 1 36 1 112 1 272 1 273 1 171 1 114 1 275 1 332 1 
155 1 338 1 311 2 341 1 68 1 6 1 205 1 256 2 284 1 71 1 183 1 28 1 161 1 76 1 10 1 77 1 265 1 145 1 241 1 215 1 216 1 36 1 112 1 272 2 273 1 171 1 114 1 275 1 332 1 132 1 
155 1 338 2 311 3 341 1 68 1 364 1 256 2 284 1 71 1 183 1 28 1 161 1 76 1 123 1 9 1 10 1 77 1 265 1 145 1 241 1 215 1 36 1 112 1 272 3 171 1 273 1 114 1 275 1 332 1 132 1 
338 2 311 2 341 1 68 1 364 1 256 2 71 1 161 1 76 1 9 1 10 1 77 1 265 1 145 1 241 1 215 1 36 1 112 1 272 2 273 1 171 1 114 1 275 1 332 1 132 1 
363 1 
229 5 1 1 178 1 4 1 230 4 45 1 99 1 347 1 285 2 140 2 8 6 105 2 10 1 294 2 238 1 241 2 352 3 193 1 15 1 300 2 303 2 243 1 114 1 153 2 306 1 61 1 62 1 23 1 361 1 204 1 158 5 122 1 159 1 208 1 315 1 368 1 260 1 75 1 29 2 371 1 262 1 264 2 372 2 374 1 84 1 169 2 218 2 168 1 273 2 326 1 380 1 225 2 275 2 276 1 228 1 
1 1 229 3 178 1 4 1 230 2 99 1 158 3 315 1 75 1 8 2 262 1 264 1 374 1 352 1 193 1 353 1 15 1 326 1 380 1 276 1 306 1 61 1 
1 1 229 3 178 1 4 1 230 3 99 1 158 3 208 1 315 1 8 1 75 1 29 1 262 1 374 1 352 1 193 1 169 1 353 1 15 1 326 1 380 1 276 1 306 1 61 1 
1 1 229 3 178 1 4 1 230 3 99 1 158 3 208 1 315 1 75 1 8 2 29 1 105 1 262 1 264 1 374 1 352 1 193 1 169 1 353 1 15 1 326 1 380 1 276 1 306 1 61 1 
229 5 1 1 178 1 279 1 4 1 230 6 136 1 99 1 347 1 285 2 140 1 8 7 105 4 349 1 294 2 238 1 108 1 352 3 193 1 353 1 15 1 303 2 61 1 306 1 361 1 204 1 158 5 122 1 208 5 315 1 75 1 29 5 262 1 264 4 372 2 374 1 169 4 218 1 170 1 326 1 380 1 225 2 276 1 228 1 
229 4 1 1 178 1 4 1 230 4 99 1 347 1 285 2 140 1 8 4 105 2 294 2 238 1 352 2 193 1 15 1 300 2 303 2 243 1 61 1 306 1 361 1 204 1 158 4 122 1 208 1 315 1 75 1 29 2 262 1 372 2 264 2 374 1 218 1 169 2 326 1 380 1 225 2 276 1 228 1 
1 1 229 4 178 1 279 1 4 1 361 1 230 4 204 1 136 1 99 1 158 4 122 1 347 1 285 2 208 1 140 1 315 1 8 4 75 1 29 1 105 2 262 1 264 2 372 2 294 2 238 1 374 1 352 2 169 2 218 1 193 1 15 1 170 1 303 2 326 1 380 1 225 2 276 1 306 1 61 1 228 1 
1 1 229 4 178 1 279 1 4 1 361 1 230 4 204 1 136 1 99 1 158 4 122 1 347 1 285 2 208 1 140 1 315 1 8 4 75 1 29 1 105 2 262 1 264 2 372 2 294 2 238 1 374 1 352 2 169 2 218 1 193 1 15 1 170 1 303 2 326 1 380 1 225 2 276 1 306 1 61 1 228 1 
1 1 229 4 178 1 4 1 361 1 230 4 204 1 136 1 99 1 158 4 122 1 208 1 140 1 315 1 27 1 8 4 75 1 29 1 105 2 262 1 264 2 372 2 294 2 238 1 374 1 352 2 169 2 218 1 193 1 15 1 16 2 300 2 326 1 380 1 91 1 20 2 276 1 306 1 61 1 228 1 307 1 
1 1 229 4 178 1 279 1 361 1 4 1 230 5 204 1 136 1 99 1 158 4 122 1 347 1 285 2 208 1 140 1 315 1 75 1 8 5 29 1 105 3 262 1 372 2 294 2 264 3 238 1 374 1 108 1 352 2 218 1 193 1 169 3 15 1 170 1 303 2 326 1 380 1 225 2 276 1 228 1 306 1 61 1 
1 1 229 4 178 1 279 1 361 1 4 1 230 5 204 1 136 1 99 1 158 4 122 1 347 1 285 2 208 1 140 1 315 1 75 1 8 5 29 1 105 3 262 1 372 2 294 2 264 3 238 1 374 1 108 1 352 2 218 1 193 1 169 3 15 1 170 1 303 2 326 1 380 1 225 2 276 1 228 1 306 1 61 1 
229 4 1 1 178 1 4 1 230 4 99 1 140 1 8 4 105 2 294 2 238 1 352 2 193 1 15 1 16 2 300 2 243 1 20 2 61 1 306 1 307 1 361 1 204 1 158 4 122 1 208 1 315 1 75 1 29 1 262 1 372 2 264 2 374 1 218 1 169 2 326 1 380 1 276 1 228 1 
23 1 66 1 310 2 4 1 6 1 134 1 254 2 362 1 364 1 181 1 258 1 159 1 48 1 368 2 260 3 261 4 106 2 10 2 291 2 11 1 80 2 13 2 321 2 241 8 150 1 35 1 322 2 193 1 15 1 273 8 354 1 114 2 90 1 330 1 173 1 275 7 59 1 153 2 334 1 
66 1 4 1 70 1 254 1 206 1 367 1 261 2 289 1 212 1 106 1 291 3 11 2 80 1 13 1 81 1 321 1 82 1 128 1 150 1 268 1 192 1 191 1 322 1 193 1 15 1 378 1 223 1 330 1 19 1 
13 1 321 1 54 1 70 1 314 1 322 1 254 1 283 1 88 1 223 1 354 1 199 1 261 2 106 1 80 1 
156 3 2 1 3 1 70 2 134 1 362 1 254 2 206 11 316 1 261 4 212 1 106 2 291 14 124 1 11 6 164 1 32 1 80 2 13 1 81 1 321 2 82 2 128 11 150 8 192 2 191 2 151 1 322 2 378 1 223 1 381 3 19 4 201 1 
65 1 44 1 66 1 95 1 4 2 134 1 254 1 362 1 235 1 368 1 260 1 261 2 106 1 10 1 319 1 291 2 11 1 32 1 126 1 31 1 80 1 13 1 321 1 241 1 150 1 322 1 193 1 57 1 15 2 378 1 273 1 130 1 114 1 330 1 275 1 19 1 153 1 334 1 
178 1 44 1 95 2 4 3 134 1 283 1 182 2 7 2 106 3 10 2 291 22 11 11 187 1 13 3 241 1 150 11 192 2 191 4 151 1 193 1 55 1 15 3 57 2 301 2 114 2 199 2 200 1 19 6 153 1 66 1 314 1 70 6 362 1 254 3 206 6 368 2 260 2 261 6 212 4 320 1 319 2 32 1 80 3 126 2 81 2 321 3 82 2 128 6 86 1 322 3 88 2 324 2 325 2 378 1 273 1 223 5 330 1 275 1 334 1 
13 1 321 1 70 1 128 1 150 2 192 1 191 1 151 1 322 1 254 1 206 1 47 1 354 1 261 2 19 1 106 1 291 2 80 1 
13 1 81 1 321 1 70 1 128 1 281 1 322 1 254 1 206 1 223 1 354 1 261 2 19 1 212 1 106 1 291 2 11 2 80 1 
81 1 13 1 321 1 82 1 70 2 128 2 150 2 192 1 191 1 151 1 322 1 254 1 206 2 223 1 354 1 261 2 212 1 19 2 106 1 291 4 11 2 80 1 
13 1 321 1 70 1 128 1 150 2 192 1 191 1 151 1 322 1 254 1 206 1 47 1 48 1 261 2 19 1 106 1 291 2 80 1 
13 1 81 1 321 1 70 1 128 1 281 1 322 1 254 1 206 1 48 1 223 1 261 2 19 1 212 1 106 1 291 2 11 2 80 1 
81 1 13 1 321 1 82 1 70 2 128 2 150 2 192 1 191 1 151 1 322 1 254 1 206 2 48 1 223 1 261 2 212 1 19 2 106 1 291 4 11 2 80 1 
81 1 13 1 321 1 82 1 70 2 128 2 150 2 192 1 191 1 151 1 322 1 254 1 206 2 223 1 261 2 212 1 19 2 106 1 291 4 11 2 80 1 
95 1 4 1 134 1 362 1 254 1 368 1 260 1 261 2 106 1 10 1 319 1 291 2 11 1 32 1 126 1 80 1 13 1 321 1 241 1 150 1 322 1 324 1 57 1 15 1 273 1 114 1 275 1 153 1 
4 1 134 1 362 1 254 1 342 1 368 1 260 1 261 2 106 1 10 1 291 2 11 1 32 1 126 1 80 1 296 1 13 1 321 1 241 1 150 1 351 1 322 1 57 1 15 1 273 1 114 1 275 1 153 1 
81 1 13 1 321 1 82 1 70 2 128 2 150 2 192 1 191 1 151 1 322 1 254 1 206 2 378 1 223 1 261 2 212 1 19 2 106 1 291 4 11 2 80 1 
95 1 4 1 70 2 6 1 254 1 206 2 7 1 368 1 260 1 261 2 212 1 106 1 10 1 319 1 291 4 11 2 126 1 80 1 81 1 13 1 321 1 82 1 241 1 128 2 150 2 191 1 192 1 151 1 322 1 324 1 57 1 15 1 273 1 223 1 114 1 275 1 19 2 
66 1 4 1 70 1 254 1 206 1 367 1 261 2 212 1 106 1 291 3 11 1 80 1 81 1 13 1 321 1 297 1 82 1 150 2 128 1 268 1 192 1 191 1 151 1 322 1 193 1 15 1 378 1 330 1 19 1 
156 2 2 1 70 6 254 2 316 1 103 1 51 1 261 4 212 3 106 2 291 19 293 1 11 10 165 1 80 2 81 3 321 2 82 3 150 9 192 3 191 3 151 3 299 2 302 1 223 3 58 1 381 1 42 1 336 1 22 2 
156 2 339 1 359 1 2 2 70 4 254 3 103 1 51 1 261 6 212 2 106 3 162 1 291 26 11 12 165 2 80 3 81 2 188 1 321 3 82 3 83 1 150 14 192 3 191 3 151 2 14 1 299 1 223 2 41 2 58 1 381 2 42 2 336 1 22 4 
156 4 339 1 359 1 2 3 314 1 70 8 254 3 283 1 316 1 103 1 51 1 261 6 212 4 106 3 162 1 291 36 11 19 165 2 80 3 81 4 188 1 321 3 82 4 83 1 150 17 192 4 191 4 151 4 14 1 88 1 299 1 302 1 39 1 223 4 199 1 41 1 58 1 381 3 42 1 336 1 22 4 
156 4 339 1 359 1 2 3 314 1 70 7 254 4 283 1 316 1 103 1 51 1 261 8 212 3 106 4 162 1 291 33 11 16 165 2 80 4 81 3 188 1 321 4 82 4 83 1 150 17 192 4 191 4 151 3 14 1 88 1 299 1 302 1 39 1 223 4 199 1 41 2 58 1 381 3 42 1 336 1 22 4 
156 4 339 1 359 1 2 2 314 1 70 14 254 2 283 1 316 2 103 1 51 1 261 4 212 7 106 2 162 1 291 47 124 2 11 23 165 1 80 2 81 7 188 1 321 2 82 7 83 1 150 24 192 7 191 7 151 7 14 1 88 1 299 1 223 7 199 1 41 1 58 1 381 4 42 1 336 1 22 4 
304 1 287 1 313 1 331 1 244 1 290 1 180 1 120 1 144 1 365 1 
111 1 237 1 
287 1 313 1 244 1 18 1 290 1 180 1 246 1 160 1 365 1 
343 1 370 1 
186 1 175 1 137 1 
64 1 229 1 177 2 313 1 180 1 120 1 158 1 257 1 365 1 50 1 304 1 287 1 331 1 29 1 244 1 290 1 357 1 335 1 
64 1 229 1 177 2 313 1 180 1 120 1 158 1 257 1 365 1 50 1 304 1 287 1 331 1 29 1 244 1 290 1 357 1 335 1 
64 1 229 1 177 2 313 1 180 1 120 1 158 1 257 1 365 1 50 1 304 1 287 1 331 1 29 1 244 1 290 1 357 1 335 1 
186 1 343 1 370 1 
186 1 343 1 370 1 
175 1 137 1 
186 1 175 1 137 1 
312 1 373 1 
229 1 177 1 249 1 66 2 313 1 312 1 4 2 180 1 257 1 158 1 365 1 50 1 287 1 290 1 237 1 32 1 373 1 166 1 214 1 111 1 193 2 87 1 15 2 17 1 244 1 330 2 355 1 
43 1 310 2 4 2 5 1 134 1 254 1 362 1 258 1 368 1 260 1 261 2 106 1 10 1 143 1 291 2 11 1 80 1 13 1 321 1 241 2 150 1 322 1 193 2 15 2 378 1 220 1 273 2 197 1 114 1 173 1 275 2 
308 1 118 1 23 1 241 1 253 1 159 1 273 1 368 1 114 1 260 1 275 1 76 1 10 1 153 1 
265 1 308 1 145 1 241 1 364 1 256 2 284 1 71 1 271 1 171 1 273 1 114 1 275 1 332 1 76 1 236 1 10 1 77 1 
265 1 308 1 145 1 241 2 6 1 364 1 256 2 284 1 71 1 271 1 171 1 273 2 114 1 275 2 332 1 76 1 236 1 10 1 77 1 
265 1 145 1 241 1 364 1 256 2 284 1 71 1 271 1 171 1 273 1 114 1 275 1 332 1 76 1 10 1 77 1 131 1 
138 1 
361 1 204 1 218 1 270 1 208 1 140 1 245 1 29 1 228 1 238 1 
81 2 82 2 192 2 191 2 233 5 218 5 325 1 140 5 49 1 300 10 303 5 29 5 212 2 369 2 348 5 
229 1 8 1 29 1 352 1 158 1 208 1 
229 3 23 1 337 1 280 1 361 1 45 1 204 2 158 3 346 1 159 1 140 2 368 1 260 1 8 4 52 1 10 1 371 2 238 2 109 2 241 4 84 1 352 2 168 2 218 2 273 4 114 1 275 4 153 2 228 2 
54 1 29 1 245 1 218 1 270 1 140 1 208 1 
229 1 361 1 204 1 158 1 347 1 285 1 140 1 208 1 8 1 29 2 238 1 352 1 218 1 300 1 303 1 225 1 228 1 
229 5 179 2 6 1 282 2 233 6 234 1 140 9 49 2 288 2 8 5 52 1 348 6 10 2 238 4 109 1 239 1 241 3 352 3 192 2 191 2 57 1 113 2 300 12 303 6 114 1 245 1 115 1 153 1 247 1 361 4 204 4 158 5 208 2 315 2 368 1 260 6 29 8 212 2 369 2 371 1 78 2 81 2 82 2 168 2 218 8 270 1 325 2 273 3 40 2 275 3 382 3 228 4 
229 1 156 1 339 1 359 1 2 1 361 2 233 5 204 2 158 1 139 1 140 8 208 2 49 1 8 1 29 5 212 2 30 1 369 2 348 5 371 1 238 2 81 2 188 1 82 2 83 1 352 1 192 2 191 2 168 1 218 5 14 1 300 6 303 3 381 1 228 2 
229 1 178 1 66 1 279 1 4 1 361 1 204 1 158 1 140 2 49 1 212 1 369 2 320 1 238 1 187 1 12 1 190 1 191 2 268 1 218 2 193 1 88 1 15 1 242 1 198 1 199 1 330 1 228 1 
66 2 250 1 95 1 4 3 134 1 254 1 368 1 260 1 261 2 106 1 319 1 10 1 291 1 11 1 32 1 80 1 126 1 12 1 13 1 321 1 241 1 268 2 322 1 193 2 324 1 15 3 57 1 273 1 114 1 330 2 275 1 153 1 
361 1 233 2 204 1 218 2 168 1 140 1 208 2 300 4 303 2 274 1 29 4 348 2 371 1 228 1 238 1 
304 1 141 1 180 1 365 1 373 1 
366 1 180 1 365 1 
366 1 180 1 365 1 
366 1 180 1 365 1 
180 1 25 1 365 1 
180 1 25 1 365 1 
180 1 25 1 365 1 
180 1 365 1 
287 1 290 1 
187 1 321 1 70 5 150 5 191 2 254 1 151 2 88 2 223 3 261 2 199 2 212 2 106 1 320 1 291 10 11 5 336 1 80 1 
321 1 150 2 70 1 192 1 191 1 254 1 151 1 261 2 106 1 291 2 336 1 80 1 
81 1 321 1 82 1 70 2 150 2 192 1 191 1 254 1 151 1 223 1 261 2 212 1 106 1 291 4 11 2 336 1 80 1 
53 1 321 3 70 2 150 1 254 3 151 1 88 1 302 1 223 1 261 6 199 1 41 1 106 3 291 3 11 2 336 1 80 3 
156 3 2 1 314 1 70 8 254 4 283 1 261 8 212 4 142 1 106 4 320 1 291 26 11 13 80 4 187 1 81 2 321 4 82 2 150 13 192 2 191 4 151 4 88 2 221 1 302 1 223 4 199 2 41 1 381 3 336 1 227 1 358 1 
156 1 2 1 314 1 70 4 254 1 283 1 261 2 212 2 106 1 320 1 291 10 11 5 80 1 187 1 188 1 321 1 150 5 191 2 151 1 88 2 223 3 199 2 381 1 336 1 
156 2 2 1 314 1 70 5 254 2 283 1 316 1 261 4 212 2 106 2 142 1 320 1 291 13 11 6 80 2 187 1 188 1 321 2 82 1 150 7 192 1 191 3 151 2 88 2 223 3 199 2 381 1 336 1 
156 1 339 1 359 1 2 1 314 1 70 6 254 3 283 1 261 6 212 4 142 1 106 3 320 1 291 21 11 11 80 3 187 1 81 2 188 1 321 3 82 2 83 1 150 10 192 2 191 4 151 2 14 1 88 2 223 4 199 2 41 1 381 1 336 1 
156 1 339 1 359 1 2 1 314 1 70 8 254 3 283 1 261 6 212 3 142 1 106 3 320 1 291 19 11 8 80 3 187 1 81 1 188 1 321 3 82 2 83 1 150 11 192 2 191 4 151 4 14 1 88 2 223 4 199 2 41 1 381 1 336 1 
156 1 2 1 314 1 70 4 254 1 283 1 261 2 212 2 106 1 320 1 291 10 11 5 80 1 187 1 188 1 321 1 150 5 191 2 151 1 88 2 223 3 199 2 381 1 336 1 
156 1 339 1 359 1 2 1 70 2 254 1 261 2 212 2 106 1 291 12 11 6 80 1 81 2 188 1 321 1 82 2 83 1 150 6 192 2 191 2 151 1 14 1 223 1 381 1 336 1 
156 1 339 1 359 1 2 1 314 1 70 6 254 4 283 1 261 8 212 3 142 1 106 4 320 1 291 20 11 9 80 4 187 1 81 1 188 1 321 4 82 2 83 1 150 11 192 2 191 4 151 2 14 1 88 2 223 4 199 2 41 2 381 1 336 1 
156 1 339 1 359 1 2 1 70 6 254 4 261 8 212 2 106 4 291 16 11 7 80 4 81 2 188 1 321 4 82 3 83 1 150 9 192 3 191 3 151 3 14 1 302 1 223 3 41 2 381 1 336 1 
187 1 150 2 314 1 70 6 191 1 151 3 283 1 88 3 223 3 199 3 212 1 320 1 291 5 11 3 
156 1 339 1 359 1 2 1 314 1 70 6 254 4 283 1 261 8 212 3 106 4 320 1 291 20 11 9 80 4 187 1 81 1 188 1 321 4 82 2 83 1 150 11 192 2 191 4 151 2 14 1 88 2 302 1 223 4 199 2 41 2 381 1 336 1 
314 1 70 6 254 2 283 1 261 4 212 2 106 2 320 1 291 12 11 6 80 2 187 1 321 2 150 6 191 2 151 3 88 2 223 3 199 2 41 1 
223 1 54 1 199 1 70 1 314 1 283 1 88 1 
81 1 321 1 82 1 70 2 150 2 192 1 191 1 254 1 151 1 223 1 261 2 212 1 142 1 106 1 291 4 11 2 80 1 
81 1 156 2 2 1 82 1 150 3 70 2 192 1 191 1 151 1 316 1 223 1 212 1 381 1 291 7 11 4 
156 2 314 1 70 6 254 1 283 1 316 1 261 2 212 4 106 1 320 1 291 20 124 1 11 10 80 1 187 1 81 2 321 1 82 2 150 10 191 4 192 2 151 2 88 2 223 4 199 2 41 1 381 2 201 1 
156 1 291 1 11 1 
381 1 150 1 291 1 
81 1 321 1 82 1 150 3 70 3 192 1 191 1 254 1 151 1 325 1 223 2 261 2 212 1 106 1 142 1 291 6 11 3 80 1 
156 1 339 1 359 1 2 1 70 2 254 1 261 2 212 2 106 1 291 12 11 6 80 1 81 2 188 1 321 1 82 2 83 1 150 6 192 2 191 2 151 1 14 1 223 1 381 1 336 1 
187 1 150 3 70 2 191 1 151 1 88 1 223 1 199 1 212 1 291 6 11 3 
53 1 321 1 150 1 70 2 314 1 151 1 254 1 283 1 88 1 223 1 199 1 261 2 41 1 106 1 291 3 11 2 80 1 
4 1 193 1 99 1 263 1 15 1 32 1 72 1 
154 1 149 1 4 1 193 1 99 1 15 1 72 1 356 1 263 1 163 1 278 1 32 1 
23 1 202 1 241 4 6 1 159 1 273 4 368 1 260 1 114 1 209 1 275 4 10 1 153 1 
109 1 127 1 147 1 96 1 97 1 241 2 57 1 73 1 273 2 368 1 260 1 114 1 275 2 10 2 
265 1 273 1 114 1 275 1 332 1 241 1 10 1 77 1 153 1 256 1 
43 1 273 2 368 1 114 1 260 1 275 2 241 2 6 1 10 1 364 1 258 1 
23 1 109 1 202 1 241 5 6 1 35 1 159 1 258 1 273 5 368 2 260 3 114 2 275 4 59 1 10 2 153 1 
23 1 109 1 202 1 241 5 6 1 159 1 258 1 273 5 368 2 260 3 114 2 275 4 59 1 10 2 153 1 79 1 
66 1 4 2 241 1 351 1 193 1 57 1 15 2 273 1 368 1 260 1 114 1 330 1 275 1 10 1 153 1 334 1 32 1 126 1 
109 1 239 1 127 1 96 1 241 1 298 1 57 1 273 1 368 1 260 1 114 1 275 1 10 2 
23 1 273 1 368 1 114 1 260 1 54 1 275 1 241 1 10 1 153 1 159 1 
66 1 95 1 4 2 241 1 193 1 57 1 15 2 273 1 368 1 260 1 114 1 330 1 275 1 10 1 153 1 334 1 32 1 126 1 
178 1 66 1 95 1 4 2 368 2 260 3 10 1 32 1 126 1 109 1 241 1 193 2 377 1 15 2 57 2 273 1 114 1 330 2 275 1 334 1 306 1 61 1 116 1 
178 1 66 1 4 2 368 2 260 3 209 1 10 1 32 1 126 1 109 1 241 2 351 1 193 2 377 1 15 2 57 2 273 2 114 1 330 2 275 2 334 1 306 1 61 1 116 1 
117 1 229 2 158 2 208 1 315 1 288 1 368 1 8 1 260 4 209 1 29 1 10 1 109 1 34 1 241 3 377 1 57 1 273 3 114 1 275 3 153 1 382 1 116 1 
229 2 178 1 66 1 4 1 158 2 208 1 315 1 288 1 8 1 260 2 29 1 12 1 109 1 241 1 190 1 268 1 193 1 15 1 242 1 273 1 198 1 40 1 330 1 275 1 382 1 
273 1 114 1 90 1 275 1 241 1 10 1 
239 1 310 1 127 1 96 1 241 7 6 1 35 1 364 1 181 1 258 1 298 1 57 1 273 7 368 2 260 3 114 2 90 1 275 6 59 1 10 3 153 2 
178 1 95 1 4 2 6 1 283 1 7 1 106 2 10 1 291 8 11 4 187 1 13 2 241 1 150 4 191 2 151 1 193 1 55 1 15 2 57 1 301 1 197 1 114 1 199 2 66 1 314 1 70 4 254 2 368 1 260 1 261 4 212 2 319 1 320 1 80 2 126 1 32 1 321 2 322 2 324 1 88 2 378 1 273 1 223 3 330 1 275 1 334 1 
229 3 179 1 361 2 204 2 282 1 158 3 140 1 208 1 315 1 288 1 260 2 8 2 29 1 52 1 78 1 238 2 166 1 241 1 352 1 218 1 270 1 273 1 245 1 40 1 275 1 153 1 382 1 228 2 
239 1 241 2 6 1 234 1 57 1 288 1 273 2 368 1 260 2 114 1 90 1 275 2 10 2 
93 1 74 1 174 1 100 1 32 1 
229 2 178 1 166 1 93 2 167 1 232 1 158 2 100 2 208 1 315 1 222 1 74 1 75 1 29 1 174 2 333 1 61 1 306 1 32 1 
220 1 74 1 93 1 4 1 5 1 174 1 143 1 193 1 15 1 
74 1 167 1 333 1 
272 1 155 1 311 1 28 1 68 1 161 1 205 1 132 1 
0 1 155 1 338 2 67 1 311 4 68 3 217 1 376 1 272 4 102 1 379 1 28 1 161 2 132 2 
155 1 338 1 311 2 68 1 251 1 205 1 26 1 272 2 28 1 161 1 107 1 132 1 
272 3 102 2 155 1 67 2 311 3 28 1 24 1 68 1 161 1 217 1 205 1 132 1 
104 1 68 2 46 2 21 1 
101 1 272 1 155 1 311 1 28 1 205 1 
272 2 155 1 338 1 311 2 28 1 68 1 161 1 305 1 205 1 132 1 
259 1 
272 1 155 1 311 1 28 1 68 1 161 1 205 1 132 1 
54 1 68 1 161 1 132 1 
272 1 155 1 311 1 28 1 68 1 161 1 132 1 
272 1 341 1 215 1 
272 3 102 1 155 1 327 1 67 2 311 3 28 1 68 1 161 1 217 1 205 1 132 1 
272 2 155 1 338 1 311 2 28 1 68 1 161 1 152 1 132 1 
155 1 145 1 311 1 68 1 85 1 205 1 376 1 256 1 272 1 28 1 77 1 
272 1 155 1 311 1 28 1 68 1 161 1 205 1 
272 1 155 1 311 1 28 1 161 2 205 1 132 1 
272 2 155 2 311 2 28 2 340 1 210 1 68 1 161 1 255 1 205 1 
0 1 155 1 338 2 311 3 68 2 135 1 205 1 376 1 272 3 28 1 161 1 305 1 132 1 
265 1 155 1 145 1 338 1 311 2 203 1 68 1 256 2 205 1 272 2 171 1 28 1 161 1 77 1 132 1 
0 1 155 2 338 2 311 4 68 2 205 1 376 1 152 1 272 4 28 2 38 1 161 1 132 1 
272 3 155 1 338 1 67 1 311 3 28 1 68 1 161 1 305 1 205 1 132 1 
0 1 379 1 68 1 376 1 
68 1 161 1 

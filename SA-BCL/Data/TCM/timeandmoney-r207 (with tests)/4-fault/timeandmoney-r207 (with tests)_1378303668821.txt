#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
260 1 203 2 1 1 285 2 88 1 263 1 186 1 39 9 210 2 143 2 192 3 214 1 317 4 44 2 46 1 346 5 216 1 96 1 126 1 99 1 78 1 368 2 174 1 326 1 371 1 22 2 180 9 81 6 
260 1 203 2 1 1 285 2 88 1 263 1 186 1 39 9 210 2 143 2 192 3 214 1 317 4 44 2 46 1 346 5 216 1 96 1 126 1 99 1 78 1 368 2 174 1 326 1 371 1 22 2 180 9 81 6 
260 1 203 2 1 1 285 2 88 1 263 1 186 1 39 10 210 2 143 2 192 4 214 1 317 5 44 2 46 1 346 6 216 1 96 1 126 1 99 1 78 1 368 2 174 1 326 1 371 1 22 2 180 10 81 7 
203 2 1 1 285 2 88 1 263 1 186 1 39 7 210 1 143 2 192 2 214 1 317 3 44 2 46 1 346 4 216 1 96 1 126 1 99 1 78 1 368 2 174 1 326 1 371 1 22 2 180 7 81 4 
260 1 203 1 346 3 1 1 126 1 186 1 368 1 39 4 326 1 210 2 22 1 143 1 192 1 180 4 81 3 317 2 44 1 46 1 
346 1 203 1 109 1 285 1 216 1 126 1 186 1 368 1 39 2 371 1 326 1 163 1 143 1 22 1 257 1 180 2 
203 2 346 2 285 1 88 1 126 1 186 1 39 3 326 1 143 2 192 1 180 3 81 1 317 1 
260 1 346 5 203 2 1 1 285 1 96 1 88 1 126 1 186 1 99 1 368 1 39 9 210 2 326 1 22 1 143 2 57 1 192 3 180 9 213 1 81 7 317 4 44 1 46 1 
260 1 346 5 203 2 1 1 285 1 96 1 88 1 126 1 186 1 99 1 368 1 39 9 210 2 326 1 22 1 143 2 57 1 192 3 180 9 213 1 81 7 317 4 44 1 46 1 
31 1 
347 1 169 1 64 1 183 1 185 1 160 1 324 1 5 1 220 1 246 1 193 1 107 1 135 1 62 1 
294 1 
294 1 307 1 137 1 184 1 251 1 193 2 324 1 135 2 
294 1 307 1 336 1 2 2 137 1 184 2 324 2 162 2 189 1 238 1 227 2 242 1 219 1 193 5 135 5 70 1 304 1 85 1 45 1 
294 1 300 1 72 2 
240 1 169 2 183 2 64 2 185 2 160 2 220 2 107 1 
32 1 0 1 282 1 205 1 183 2 64 2 185 2 65 1 160 3 225 1 340 1 187 1 237 2 240 1 145 1 9 2 247 1 149 2 123 1 269 1 169 2 16 1 74 1 172 1 252 1 272 1 369 2 298 1 327 1 329 2 133 1 301 1 60 1 220 3 107 1 84 1 280 1 
347 1 169 1 183 1 64 1 185 1 160 1 220 1 246 1 107 1 62 1 
12 1 294 1 137 1 185 1 160 1 311 1 356 1 130 1 330 1 220 1 246 1 193 1 268 1 135 1 
294 1 169 1 64 1 183 1 137 1 185 1 160 1 311 1 356 1 330 1 220 1 246 1 193 2 268 1 135 2 
184 1 152 1 193 1 324 1 135 1 
281 1 294 1 307 1 137 1 184 1 193 2 324 1 135 2 
184 1 193 1 135 1 
31 1 
34 1 169 1 64 1 183 1 185 2 160 2 177 1 240 2 220 2 
315 1 303 1 309 1 
282 1 65 1 74 1 160 1 172 1 340 1 237 1 240 1 25 1 9 1 220 1 60 1 247 1 149 1 123 1 280 1 
282 1 64 1 183 1 74 1 185 1 65 1 160 2 172 1 66 1 340 1 237 1 9 1 60 1 220 2 303 1 247 1 182 1 149 1 123 1 280 1 
12 1 34 1 169 1 64 4 183 4 185 5 160 5 66 2 206 1 97 1 240 1 231 1 220 5 182 1 
347 1 183 2 64 2 185 2 160 2 220 2 246 1 202 1 
347 1 183 1 64 1 185 1 160 1 220 1 246 1 
177 1 34 1 169 1 183 1 64 1 185 1 160 1 220 1 246 1 
0 1 34 1 282 1 205 1 183 3 64 3 283 1 65 1 185 3 160 4 66 1 340 1 225 1 311 1 356 1 237 1 240 1 9 1 246 1 193 1 247 1 268 1 149 1 123 1 269 1 169 2 74 1 172 1 252 1 272 1 100 1 369 2 298 1 329 1 133 1 301 1 330 1 60 1 220 4 107 1 182 1 135 1 84 1 280 1 
12 1 240 1 231 1 183 1 64 1 185 2 160 2 220 2 66 1 
34 1 169 1 294 1 64 3 183 3 283 1 185 3 160 3 66 2 311 1 356 1 330 1 121 1 220 3 193 1 246 1 268 1 182 1 135 1 
34 1 169 1 64 2 183 2 185 2 160 2 66 1 309 1 220 2 303 1 
282 1 65 1 74 1 160 1 172 1 340 1 237 1 240 1 9 1 220 1 60 1 247 1 149 1 123 1 280 1 
282 1 160 1 172 1 340 1 237 1 117 1 240 1 9 1 220 1 60 1 82 1 247 1 149 1 123 1 280 1 
0 1 63 1 205 1 139 1 337 1 309 2 115 1 315 2 194 1 11 1 269 1 16 2 369 2 79 1 297 1 298 1 329 4 179 1 27 1 133 2 301 1 303 2 106 1 84 1 
183 1 64 1 185 1 160 1 220 1 246 1 356 1 202 1 
169 1 240 1 183 3 64 3 185 3 160 3 66 1 220 3 
322 1 120 2 364 2 36 1 29 1 188 1 
120 1 364 1 277 1 
120 1 364 1 
120 1 364 1 
36 1 188 1 
36 1 188 1 
36 1 188 1 
165 1 120 1 364 1 
165 1 120 1 364 1 
165 1 120 1 364 1 
120 1 364 1 53 1 
120 1 364 1 53 1 
120 1 364 1 53 1 
183 2 64 2 185 2 160 2 141 1 240 1 239 1 290 1 314 1 120 1 193 1 166 1 318 1 363 1 364 1 95 1 154 1 328 1 178 1 220 2 277 1 233 1 258 1 135 1 
294 1 322 1 111 1 140 1 223 2 95 2 364 2 154 2 325 1 129 1 118 1 156 1 239 3 328 2 178 2 120 2 193 2 233 1 135 2 
22 1 368 1 44 1 
109 1 22 1 368 1 
109 1 33 1 14 1 76 1 44 2 368 3 
109 1 33 1 14 1 148 1 44 1 368 2 
109 1 33 1 14 2 44 1 368 2 
307 1 2 1 336 1 139 1 184 1 137 1 337 1 141 1 207 2 162 1 227 1 314 1 267 1 193 5 11 1 72 3 294 2 362 2 93 1 49 2 127 1 324 4 101 1 179 1 26 1 300 1 219 3 181 1 258 1 135 5 352 1 85 2 
307 1 336 1 2 2 139 3 184 6 137 1 337 3 38 1 207 6 265 5 162 2 227 2 242 1 267 2 193 9 11 3 72 9 168 1 294 5 362 6 125 1 152 5 127 2 324 7 19 1 101 1 179 3 26 3 300 3 219 8 234 1 258 4 135 9 201 1 85 6 
2 1 137 1 139 1 337 1 207 2 162 1 227 1 242 1 267 1 193 3 11 1 72 4 294 3 93 1 362 2 49 1 127 1 324 2 179 1 26 1 300 2 219 3 258 1 135 3 352 1 85 2 
2 1 137 1 139 2 337 2 207 4 162 1 227 1 242 1 267 1 193 4 11 2 72 7 294 4 362 4 93 1 49 2 125 1 127 1 324 3 19 1 179 2 26 2 300 3 219 5 234 1 258 2 135 4 352 1 85 4 
31 1 
144 1 
282 1 365 1 
282 1 60 1 172 1 
282 1 159 1 
282 1 60 1 
282 3 60 1 172 1 278 1 310 2 334 1 
306 1 63 2 124 1 16 4 173 1 161 1 370 1 329 7 133 3 179 1 157 1 316 1 59 2 106 3 158 1 11 1 374 1 
306 1 63 2 124 1 16 4 173 1 161 1 370 1 329 7 133 3 179 1 157 1 316 1 59 2 106 3 158 1 11 1 374 1 
306 1 63 2 124 1 16 4 173 1 161 1 370 1 266 1 329 7 133 3 179 1 157 1 316 1 59 2 106 3 158 1 11 1 374 1 
306 1 0 1 63 5 139 3 113 3 337 3 339 1 236 1 161 2 316 5 292 4 11 4 167 1 124 2 16 16 217 1 173 1 369 2 20 1 370 2 298 1 132 1 329 31 133 15 26 3 179 4 157 1 59 3 301 1 158 1 106 10 200 1 84 1 374 2 
0 2 306 1 63 3 161 1 316 1 293 1 11 1 124 1 16 5 369 4 20 1 370 1 298 2 299 1 329 9 179 1 133 4 157 1 301 2 59 2 106 4 158 1 84 2 374 1 
203 1 109 1 285 1 186 1 237 1 39 2 143 1 6 1 9 1 245 1 247 1 149 1 44 1 123 1 346 1 171 1 126 1 76 1 273 1 98 1 368 2 349 1 326 1 22 1 131 1 180 2 81 1 373 1 333 1 83 1 
203 1 109 1 285 1 87 1 186 1 237 1 39 3 143 1 6 1 9 1 247 1 149 1 44 1 123 1 249 1 346 1 126 1 76 1 273 1 98 1 368 2 349 1 22 1 131 1 180 3 81 2 373 1 331 1 333 1 83 1 
109 1 285 1 186 1 237 1 39 2 6 1 9 1 247 1 149 1 123 1 44 1 249 1 346 1 126 1 76 1 273 1 368 2 349 1 131 1 22 1 180 2 81 2 373 1 331 1 83 1 
203 1 282 1 285 2 87 1 114 1 273 2 116 1 237 1 39 1 349 2 143 1 7 1 343 1 164 1 9 1 198 1 180 1 60 1 373 2 247 1 149 1 123 1 280 1 
203 1 109 1 285 1 237 1 39 1 143 1 6 1 9 1 245 1 247 1 149 1 44 1 123 1 76 1 273 1 98 1 368 2 349 1 326 1 22 1 131 1 180 1 373 1 331 1 333 1 83 1 
41 1 
307 2 2 1 336 1 137 1 3 1 184 5 286 1 185 1 308 2 160 1 355 1 311 1 356 1 313 1 162 1 227 1 91 3 193 4 246 1 10 1 268 1 12 1 294 1 295 2 321 3 48 3 51 1 367 2 130 1 80 1 155 2 24 1 300 2 219 1 330 1 302 1 220 1 134 1 350 5 135 4 279 1 85 1 
307 2 2 1 336 1 137 1 3 1 184 5 286 1 185 1 308 2 160 1 355 1 311 1 356 1 313 1 162 1 227 1 91 3 193 4 246 1 10 1 268 1 12 1 294 1 295 2 321 3 48 3 51 1 367 2 130 1 80 1 155 2 24 1 300 2 219 1 330 1 302 1 220 1 134 1 350 5 135 4 279 1 85 1 
336 1 2 1 286 1 160 1 289 2 162 1 10 1 246 1 72 2 12 1 294 1 295 2 18 2 80 1 130 1 219 1 220 1 134 1 350 4 135 4 85 1 307 2 184 4 137 1 185 1 355 1 311 1 356 1 313 1 227 1 91 2 193 4 268 1 43 1 321 2 48 2 229 1 155 2 330 1 
282 1 307 1 2 1 336 1 184 2 185 1 160 1 114 1 355 1 311 1 356 1 313 1 237 2 162 1 227 1 267 1 9 2 343 1 344 1 10 1 246 1 193 3 268 1 247 1 149 2 123 1 12 1 130 1 80 1 102 1 28 1 330 1 219 1 220 1 60 1 134 1 350 2 332 1 135 3 280 2 85 1 
307 1 184 2 185 1 160 1 355 1 311 1 356 1 313 1 193 3 246 1 10 1 268 1 12 1 321 1 251 1 130 1 80 1 330 1 220 1 134 1 350 2 135 3 
307 1 184 1 137 1 185 1 160 1 355 1 311 1 356 1 313 1 193 3 246 1 10 1 268 1 12 1 294 1 48 1 251 1 130 1 80 1 330 1 220 1 134 1 350 3 135 3 
307 1 184 2 137 1 185 1 160 1 355 1 311 1 356 1 313 1 91 1 193 3 246 1 10 1 268 1 12 1 294 1 321 1 48 1 251 1 130 1 80 1 330 1 220 1 134 1 350 3 135 3 
307 3 2 1 336 1 3 1 137 5 184 7 286 1 185 1 308 2 160 1 355 1 311 1 356 1 313 1 162 1 227 1 212 1 91 4 193 5 246 1 10 1 268 1 12 1 294 5 295 2 48 4 321 4 51 1 251 1 367 2 130 1 80 1 155 2 24 1 300 2 219 1 330 1 302 1 220 1 134 1 350 6 135 5 279 1 85 1 
336 1 2 1 3 1 286 1 160 1 162 1 10 1 246 1 72 2 12 1 294 2 295 2 80 1 130 1 300 2 219 1 220 1 134 1 350 4 135 4 85 1 307 2 184 4 137 1 185 1 308 2 355 1 311 1 356 1 313 1 227 1 91 2 193 4 268 1 43 1 321 2 48 2 367 2 155 2 330 1 
307 2 336 1 2 1 137 1 184 4 3 1 286 1 185 1 308 2 160 1 355 1 311 1 356 1 313 1 162 1 227 1 91 2 193 4 246 1 10 1 268 1 12 1 294 1 48 2 321 2 295 2 51 1 367 2 130 1 80 1 155 2 24 1 300 2 219 1 330 1 302 1 220 1 134 1 350 4 135 4 85 1 
307 2 336 1 2 1 137 1 184 4 3 1 286 1 185 1 308 2 160 1 355 1 311 1 356 1 313 1 162 1 227 1 91 2 193 4 246 1 10 1 268 1 12 1 294 1 48 2 321 2 295 2 51 1 367 2 130 1 80 1 155 2 24 1 300 2 219 1 330 1 302 1 220 1 134 1 350 4 135 4 85 1 
307 2 336 1 2 1 137 1 184 4 286 1 185 1 160 1 289 2 355 1 264 1 311 1 356 1 341 1 313 1 162 1 227 1 91 2 193 4 246 1 10 1 268 1 72 2 12 1 294 1 48 2 321 2 295 2 229 1 18 2 130 1 80 1 155 2 219 1 330 1 302 1 220 1 134 1 350 4 135 4 85 1 
31 1 0 1 297 1 298 1 269 1 205 1 301 1 84 1 369 2 
32 1 0 2 63 1 205 2 139 2 113 3 337 1 288 1 309 4 240 1 315 11 316 1 292 3 11 2 215 1 269 1 16 8 217 1 252 1 153 1 369 4 256 1 298 2 132 1 329 14 133 6 26 2 179 1 301 2 276 1 106 2 303 11 84 2 
0 2 32 1 282 3 183 1 64 1 205 2 185 1 224 1 160 1 66 1 114 1 142 1 237 8 89 1 9 8 145 2 343 1 247 2 149 7 359 1 123 2 269 2 16 1 171 1 252 1 369 4 297 1 175 1 56 1 298 2 103 1 329 2 133 1 301 2 220 1 60 2 331 1 84 2 280 2 
0 1 34 1 261 1 63 1 64 1 205 1 183 1 139 1 185 1 337 1 160 1 309 1 315 1 11 1 169 1 269 1 16 1 369 2 256 1 298 1 329 3 26 1 179 1 133 2 301 1 220 1 106 1 303 1 84 1 
0 1 32 1 282 1 205 1 183 1 64 1 65 1 185 1 160 2 66 1 340 1 309 1 237 1 240 1 8 1 9 1 68 1 247 1 149 1 123 1 269 1 74 1 16 1 172 1 252 1 253 1 369 2 256 1 298 1 25 1 329 2 133 1 301 1 60 1 220 2 182 1 84 1 280 1 
0 3 63 4 282 2 64 1 205 3 112 2 65 2 337 2 160 3 66 1 340 2 161 1 237 3 342 2 240 2 9 3 247 2 248 1 11 3 123 2 73 1 74 2 16 10 172 2 252 1 256 1 176 2 298 3 179 3 133 10 26 2 301 3 220 3 221 1 303 7 182 1 84 3 306 1 32 1 183 1 139 2 185 1 225 2 309 7 228 2 315 7 316 4 149 3 269 3 369 6 370 1 329 20 157 1 59 1 60 2 158 1 106 8 331 1 280 1 
0 1 269 1 205 1 139 1 16 2 309 1 369 2 297 1 298 1 329 2 315 1 316 1 301 1 106 1 303 1 194 1 84 1 11 1 
0 1 63 1 269 1 205 1 337 1 309 1 369 2 297 1 298 1 329 2 27 1 179 1 133 2 315 1 301 1 106 1 303 1 84 1 
0 1 63 1 205 1 139 1 337 1 309 2 315 2 316 1 11 1 269 1 16 2 369 2 297 1 298 1 329 4 26 1 179 1 133 2 301 1 303 2 106 2 84 1 
0 1 269 1 205 1 139 1 16 2 309 1 369 2 175 1 298 1 329 2 315 1 316 1 301 1 106 1 303 1 194 1 84 1 11 1 
0 1 63 1 269 1 205 1 337 1 309 1 369 2 175 1 298 1 329 2 27 1 179 1 133 2 315 1 301 1 106 1 303 1 84 1 
0 1 63 1 205 1 139 1 337 1 309 2 315 2 316 1 11 1 269 1 16 2 369 2 175 1 298 1 329 4 26 1 179 1 133 2 301 1 303 2 106 2 84 1 
0 1 63 1 205 1 139 1 337 1 309 2 315 2 316 1 11 1 269 1 16 2 369 2 298 1 329 4 26 1 179 1 133 2 301 1 303 2 106 2 84 1 
32 1 0 1 282 1 205 1 65 1 160 1 340 1 225 1 237 1 240 1 9 1 247 1 149 1 123 1 269 1 16 1 74 1 172 1 252 1 369 2 298 1 329 2 133 1 301 1 60 1 220 1 84 1 280 1 
32 1 0 1 282 1 205 1 160 1 340 1 237 1 117 1 240 1 9 1 247 1 149 1 123 1 269 1 16 1 172 1 252 1 369 2 298 1 329 2 133 1 301 1 60 1 220 1 82 1 136 1 84 1 280 1 
0 1 63 1 205 1 139 1 337 1 309 2 315 2 316 1 11 1 269 1 16 2 369 2 256 1 298 1 329 4 26 1 179 1 133 2 301 1 303 2 106 2 84 1 
0 1 63 1 282 1 205 1 139 1 337 1 65 1 160 1 340 1 225 1 309 2 237 1 228 1 9 1 315 2 316 1 247 1 149 1 11 1 123 1 269 1 16 2 74 1 172 1 171 1 369 2 298 1 329 4 133 2 179 1 26 1 301 1 60 1 220 1 106 2 303 2 84 1 
0 1 34 1 64 1 205 1 183 1 139 1 337 1 185 1 160 1 309 1 315 1 316 1 11 1 169 1 269 1 16 2 274 1 369 2 256 1 298 1 329 3 133 1 179 1 26 1 301 1 220 1 106 1 303 1 84 1 
0 3 63 3 337 4 113 3 4 1 161 1 292 4 11 5 71 1 345 1 170 1 16 20 217 1 128 1 20 1 299 1 298 3 132 3 179 5 26 4 133 21 301 3 84 3 306 1 139 4 191 1 90 1 316 4 42 4 150 1 360 2 195 1 361 1 319 1 94 1 369 6 370 1 329 41 157 1 59 1 106 7 61 1 158 1 
0 4 63 4 337 3 113 3 4 1 161 1 292 4 11 5 71 1 345 1 170 1 16 20 217 1 128 1 20 2 299 1 298 4 132 3 179 4 26 4 133 18 301 4 84 4 306 1 139 4 191 1 90 1 316 3 42 4 150 1 360 2 195 1 361 1 319 1 94 1 369 8 370 1 329 38 157 1 59 1 106 7 61 1 158 1 
306 1 0 2 63 7 139 7 113 4 337 7 161 1 4 1 90 1 191 1 316 7 42 4 292 4 150 1 11 8 71 1 360 1 345 1 195 1 361 1 170 1 16 27 217 2 128 1 153 2 369 4 20 1 370 1 298 2 299 1 132 2 329 52 133 25 26 7 179 8 157 1 59 1 301 2 158 1 61 1 106 14 84 2 
0 2 63 3 139 3 113 1 337 3 90 2 316 3 42 2 292 2 11 3 360 1 195 1 319 1 170 1 16 9 296 1 217 1 128 1 369 4 298 2 299 1 132 1 329 19 133 10 26 3 179 3 301 2 61 1 106 6 84 2 
0 3 63 1 139 3 113 2 337 2 4 1 90 1 191 1 316 1 42 4 292 2 150 1 11 3 360 2 71 1 195 2 345 1 361 1 170 1 16 14 128 1 369 6 20 2 298 3 299 1 329 26 132 2 179 2 133 12 26 3 301 3 106 2 61 1 84 3 
0 1 32 1 282 1 205 1 185 2 160 2 142 1 312 1 237 2 291 1 357 1 9 2 145 2 247 1 359 1 149 2 123 1 269 1 320 1 16 1 252 1 369 2 256 1 298 1 58 1 329 2 133 1 301 1 60 1 220 2 84 1 
109 1 230 1 171 1 76 1 368 2 237 2 349 1 22 1 131 1 9 2 247 1 331 1 149 2 333 1 83 1 44 1 123 1 92 1 305 1 
109 1 230 1 76 1 368 2 237 1 349 1 22 1 131 1 9 1 69 1 247 1 331 1 149 1 333 1 83 1 44 1 123 1 
282 1 114 1 237 1 349 1 9 1 343 1 372 1 198 1 60 1 247 1 149 1 123 1 280 1 92 1 
109 1 230 1 76 1 368 2 237 1 349 1 22 1 131 1 9 1 247 1 331 1 149 1 333 1 83 1 44 1 123 1 92 1 305 1 
21 1 
31 1 
294 1 336 1 2 1 137 1 162 1 189 1 227 1 219 1 45 1 85 1 
294 5 362 5 139 2 112 1 337 2 52 2 207 5 26 2 179 2 300 5 219 5 11 2 259 1 85 5 72 10 
294 1 307 1 137 1 184 1 193 1 135 1 
282 1 307 2 2 2 336 1 184 4 338 1 114 1 237 4 162 2 226 2 227 2 242 1 267 2 9 4 343 1 344 1 358 1 193 3 247 1 149 4 123 1 102 2 105 1 219 2 60 1 332 1 135 3 280 2 85 2 
0 1 282 1 183 2 64 2 205 1 185 2 65 1 160 3 225 1 340 1 237 1 240 1 9 1 247 1 149 1 123 1 169 2 269 1 74 1 172 1 252 1 272 1 369 2 298 1 329 1 133 1 301 1 220 3 60 1 107 1 84 1 280 1 
294 4 362 2 336 1 2 1 137 2 207 2 162 1 227 1 102 1 267 1 300 2 59 1 219 1 72 4 85 2 
307 1 2 1 336 1 3 1 184 1 137 1 308 1 162 1 227 1 193 1 72 1 294 2 367 1 300 1 219 1 135 1 85 1 
204 2 235 1 282 10 336 4 2 4 159 2 112 2 337 2 207 6 237 3 162 4 9 3 243 1 247 4 11 2 123 3 72 12 294 8 13 2 171 1 172 3 75 2 23 2 26 2 179 2 300 6 219 9 135 5 259 2 85 8 354 1 307 3 137 2 184 5 139 2 310 2 226 1 189 1 227 4 267 2 358 1 193 5 149 3 45 1 362 6 52 2 365 3 102 1 197 2 330 2 60 3 108 2 334 1 280 1 
307 1 2 2 336 2 138 1 184 1 139 2 137 2 113 1 337 2 4 1 207 5 162 2 227 2 191 1 267 1 193 1 292 1 11 2 72 6 71 1 345 1 361 1 294 5 362 5 250 1 52 2 102 1 132 1 26 2 179 2 300 3 219 8 135 1 259 1 85 5 
306 1 2 1 336 1 64 1 183 1 185 1 160 1 161 1 5 1 162 1 227 1 246 1 193 1 11 2 347 1 169 1 52 2 275 1 370 1 24 1 179 1 219 2 220 1 107 1 135 1 62 1 259 1 85 2 
290 1 328 1 178 1 111 1 271 1 
328 1 178 1 86 1 
328 1 178 1 86 1 
328 1 178 1 86 1 
218 1 328 1 178 1 
218 1 328 1 178 1 
218 1 328 1 178 1 
328 1 178 1 
120 1 364 1 
306 1 0 2 63 2 16 4 161 1 369 4 20 1 370 1 298 2 329 8 179 1 133 4 157 1 59 1 316 1 301 2 106 3 158 1 11 1 84 2 
31 1 
0 1 63 1 139 1 337 1 16 2 369 2 298 1 329 4 133 2 179 1 26 1 301 1 316 1 106 2 147 1 84 1 11 1 
63 1 139 1 337 1 113 1 16 3 217 1 132 1 329 7 179 1 133 4 26 1 316 1 292 2 106 2 11 1 
306 1 0 2 63 5 139 2 113 2 337 2 288 1 161 2 316 4 292 2 11 3 16 11 217 1 153 1 369 4 20 2 370 2 298 2 55 1 329 23 26 2 133 12 179 3 157 1 59 1 301 2 158 1 106 9 84 2 
329 1 133 1 292 1 
329 1 16 1 113 1 
0 1 63 2 139 1 112 1 16 3 337 1 369 2 298 1 329 6 133 3 26 1 179 1 301 1 316 1 147 1 106 3 84 1 11 1 
0 1 63 1 139 2 113 1 337 2 4 1 191 1 316 1 292 1 11 2 71 1 345 1 361 1 16 6 369 2 298 1 299 1 329 12 132 1 133 6 26 2 179 2 301 1 106 2 84 1 
306 1 63 1 16 3 161 1 370 1 329 6 179 1 133 3 316 1 106 2 11 1 
0 1 63 1 16 1 161 1 369 2 20 1 370 1 55 1 298 1 329 3 133 2 157 1 316 1 301 1 106 2 158 1 84 1 
0 1 306 1 63 2 113 1 161 1 292 1 11 1 345 1 16 4 369 2 370 1 298 1 299 1 329 8 132 1 179 1 133 4 157 1 59 1 301 1 158 1 106 2 84 1 
306 1 0 2 63 2 139 1 113 1 161 1 316 1 292 2 147 1 11 2 345 1 16 6 217 1 369 4 370 1 299 1 298 2 329 11 132 1 179 1 133 5 26 1 157 1 59 1 301 2 158 1 106 3 84 2 
306 1 0 3 63 3 139 2 113 1 337 2 161 1 4 1 191 1 316 1 147 1 292 1 11 3 71 1 345 1 361 1 16 9 369 6 20 1 370 1 298 3 299 1 329 19 132 1 133 10 26 2 179 3 157 1 59 1 301 3 158 1 106 4 84 3 
306 1 0 3 63 3 139 2 113 1 337 1 161 1 4 1 191 1 316 2 147 1 292 1 11 3 71 1 345 1 361 1 16 10 369 6 20 1 370 1 298 3 299 1 329 17 132 1 133 7 26 2 179 2 157 1 59 1 301 3 158 1 106 5 84 3 
0 1 306 1 63 2 113 1 161 1 292 1 11 1 345 1 16 4 369 2 370 1 298 1 299 1 329 8 132 1 179 1 133 4 157 1 59 1 301 1 158 1 106 2 84 1 
0 1 63 1 139 2 113 1 337 2 4 1 191 1 316 1 292 1 11 2 71 1 345 1 361 1 16 6 369 2 298 1 299 1 329 12 132 1 133 6 26 2 179 2 301 1 106 2 84 1 
306 1 0 4 63 3 139 2 113 1 337 1 161 1 4 1 191 1 316 2 292 1 147 1 11 3 71 1 345 1 361 1 16 10 369 8 20 2 370 1 298 4 299 1 329 18 132 1 133 8 26 2 179 2 157 1 59 1 301 4 158 1 106 5 84 4 
0 4 63 3 139 3 113 1 337 2 4 1 191 1 316 3 292 1 11 3 71 1 345 1 319 1 361 1 16 9 369 8 20 2 299 1 298 4 329 16 132 1 133 7 26 3 179 2 301 4 106 6 84 4 
306 1 63 3 16 3 161 3 370 3 329 7 133 4 179 1 157 1 316 3 158 2 106 6 11 1 
306 1 0 4 63 3 139 2 113 1 337 1 161 1 4 1 191 1 316 1 292 1 11 3 71 1 345 1 319 1 361 1 16 10 369 8 20 2 370 1 299 1 298 4 329 18 132 1 133 8 26 2 179 2 157 1 59 1 301 4 158 1 106 4 84 4 
0 1 306 1 63 3 16 5 161 2 369 2 275 1 370 2 298 1 299 1 329 10 133 5 179 2 301 1 316 2 106 5 84 1 11 2 
0 1 139 1 16 2 369 2 299 1 298 1 329 2 301 1 316 1 106 1 84 1 11 1 
0 1 63 1 139 1 337 1 16 2 369 2 299 1 298 1 329 4 133 2 179 1 26 1 301 1 316 1 106 2 84 1 11 1 
0 3 319 1 63 1 16 1 161 1 369 6 20 1 370 1 55 1 299 1 298 3 329 3 133 2 301 3 316 1 106 2 84 3 
306 2 0 5 63 7 139 3 113 3 337 3 339 1 236 1 161 3 316 5 292 4 147 1 11 5 167 1 319 1 16 16 217 1 369 10 20 2 370 3 55 1 298 5 299 1 132 1 329 34 133 18 26 3 179 5 157 1 59 1 301 5 158 1 106 12 84 5 
335 1 12 1 47 1 15 1 185 1 160 1 208 1 119 1 240 1 231 1 220 1 353 1 
12 1 240 1 47 1 231 1 185 1 160 1 220 1 
31 1 9 1 149 1 237 1 280 1 
282 1 171 1 114 1 366 1 237 4 9 4 343 1 244 1 60 1 247 1 149 4 123 1 280 1 
282 1 284 1 172 1 77 1 237 2 226 1 40 1 67 1 9 2 60 1 221 1 247 2 149 2 123 1 
109 1 22 1 131 1 9 1 247 1 149 1 368 1 123 1 237 1 280 1 
282 1 58 1 9 2 60 1 171 1 247 1 331 1 149 2 142 1 123 1 237 2 
282 3 224 1 114 1 171 1 142 1 237 5 226 1 89 1 343 1 9 5 244 1 60 2 247 2 149 4 123 2 280 1 
282 3 224 1 114 1 171 1 142 1 237 5 226 1 343 1 9 5 244 1 122 1 60 2 247 2 149 4 123 2 280 1 
282 1 64 1 183 1 185 1 160 2 172 1 66 1 340 1 237 1 240 1 9 1 60 1 220 2 247 1 82 1 149 1 123 1 280 1 
282 1 284 1 172 1 77 1 237 1 226 1 255 1 9 1 60 1 247 2 149 1 334 1 123 1 
282 1 64 1 183 1 185 1 74 1 160 2 172 1 66 1 340 1 237 1 240 1 9 1 60 1 220 2 247 1 149 1 123 1 280 1 
282 3 183 2 64 1 159 1 185 2 160 2 66 1 340 1 311 1 356 1 237 1 226 1 240 1 9 1 246 1 247 1 149 1 123 1 74 1 172 2 23 1 220 2 60 2 
282 3 183 2 64 1 159 1 185 2 160 2 66 1 340 1 311 1 356 1 237 2 226 1 240 1 9 2 246 1 247 1 149 2 123 1 172 2 366 1 23 1 220 2 60 2 82 1 
294 1 282 4 137 1 184 1 159 1 172 1 262 1 365 1 366 1 310 1 237 3 226 1 54 1 23 1 9 3 330 1 60 1 193 2 247 1 149 3 135 2 123 1 280 1 
294 1 282 4 137 1 13 1 184 1 159 1 172 1 365 1 366 1 310 1 237 3 226 1 23 1 9 3 330 1 60 1 193 2 247 1 149 3 135 2 123 1 280 1 
56 1 9 1 247 1 149 1 123 1 237 1 
282 3 284 1 224 1 171 1 172 1 142 1 77 1 237 7 89 1 255 1 56 1 103 1 145 1 9 7 60 2 247 3 331 1 149 6 334 1 123 2 280 2 
0 2 282 1 63 2 64 1 205 2 65 1 160 2 66 1 340 1 161 1 237 1 240 2 291 1 9 1 247 1 11 1 123 1 74 1 16 3 171 1 172 1 256 1 176 1 298 2 179 1 133 3 301 2 220 2 303 1 84 2 306 1 183 1 185 1 225 1 309 1 228 1 315 1 149 1 269 2 369 4 370 1 329 6 157 1 59 1 60 1 158 1 106 2 
204 1 282 2 307 1 2 2 336 2 137 1 184 2 310 1 237 1 162 2 189 1 227 2 9 1 358 1 193 3 149 1 45 1 294 1 13 1 365 1 324 1 197 1 219 1 330 1 135 3 108 1 85 1 280 1 
235 1 282 2 171 1 172 1 310 1 237 2 56 1 9 2 60 1 247 2 149 2 334 1 123 1 
240 1 104 1 270 1 146 1 222 1 
294 1 137 1 283 1 348 1 270 2 324 1 311 1 356 1 240 1 104 1 241 1 330 1 146 2 246 1 193 2 268 1 30 1 222 2 135 2 
320 1 357 1 104 1 185 1 270 1 160 1 220 1 146 1 312 1 
241 1 104 1 30 1 
31 1 
346 1 203 1 143 1 180 1 126 1 186 1 39 1 
285 1 180 1 373 1 
151 1 346 1 203 1 126 1 186 1 254 1 39 3 326 1 371 2 143 1 211 1 180 3 
346 1 203 1 210 1 143 1 180 2 81 1 126 1 186 1 39 2 
346 1 203 1 326 1 22 1 1 1 143 1 180 1 317 1 368 1 44 1 39 1 
346 1 203 1 326 1 143 1 180 1 126 1 39 1 
203 1 326 1 143 1 180 1 126 2 186 1 39 1 
346 1 203 2 17 1 126 1 39 2 209 1 326 1 143 2 180 2 199 1 
346 2 203 1 326 1 143 1 192 1 96 1 180 3 81 2 126 1 186 1 317 1 99 1 39 3 
346 1 109 1 203 1 126 1 186 1 323 1 76 1 368 2 39 2 326 1 143 1 22 1 180 2 81 1 44 1 
346 2 260 1 203 2 210 1 326 1 143 2 192 1 180 4 81 2 126 1 186 1 317 1 39 4 
346 1 203 1 326 1 143 1 180 1 126 1 186 1 39 1 
203 1 346 3 287 1 126 2 186 2 254 1 39 4 371 1 143 1 211 1 192 1 180 4 81 2 317 1 
346 1 203 1 110 1 126 1 186 1 39 2 326 1 190 1 143 1 57 1 180 2 81 1 
346 1 203 1 196 1 126 1 186 1 254 2 39 3 326 1 371 2 143 1 211 1 180 3 
346 2 37 2 232 1 351 1 
203 1 326 1 143 1 50 1 180 1 39 1 
346 1 203 1 326 1 143 1 180 2 81 1 126 1 186 1 99 1 39 2 
35 1 
346 1 203 1 326 1 143 1 180 1 126 1 186 1 39 1 
346 1 203 1 371 1 326 1 143 1 180 3 81 1 126 1 186 1 99 1 39 3 
346 1 287 1 192 1 317 1 
346 1 126 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) (2,47) (2,47) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) (2,47) (2,47) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) (2,47) (2,47) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) (2,47) (2,47) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 236 (39,45,46,311) 256 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) 130 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 236 9 (172,320) 130 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (296,346) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (296,346) 146 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (296,346) 146 308 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 236 (39,45,46,311) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 236 9 141 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 236 9 347 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 236 9 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
120 1 282 2 2 1 320 1 177 1 196 1 245 1 288 1 313 2 292 3 47 1 172 1 233 1 74 1 190 2 49 1 9 1 297 3 236 1 12 1 
120 1 282 2 2 1 320 1 177 1 196 1 245 1 288 1 313 2 292 3 47 1 172 1 233 1 74 1 190 2 49 1 9 1 297 3 236 1 12 1 
120 1 282 2 2 1 320 1 177 1 196 1 245 1 288 1 313 2 292 3 47 1 172 1 233 1 74 1 190 2 49 1 9 1 297 3 236 1 12 1 
120 1 282 2 2 1 320 1 177 1 196 1 245 1 288 1 313 2 292 3 47 1 172 1 233 1 74 1 190 2 49 1 9 1 297 3 236 1 12 1 
311 1 233 1 256 1 190 1 297 2 177 1 236 1 75 1 288 1 292 2 313 1 220 1 
120 1 282 1 283 1 196 1 245 1 288 1 290 1 313 1 292 2 207 1 233 1 189 1 74 1 190 1 297 2 92 1 
172 1 282 1 233 1 190 2 9 1 297 2 177 1 236 1 288 1 292 2 313 2 
130 1 282 1 177 1 288 1 313 2 292 3 46 1 172 1 233 1 190 2 297 3 9 1 236 1 220 1 
130 1 282 1 177 1 288 1 313 2 292 3 46 1 172 1 233 1 190 2 297 3 9 1 236 1 220 1 
274 1 276 1 187 1 
276 1 359 1 324 2 
247 2 305 2 180 1 201 2 77 2 185 2 64 1 243 2 
239 1 107 1 285 1 240 1 176 1 294 1 5 1 263 2 316 1 217 1 201 3 91 1 179 1 243 2 142 1 10 1 344 2 36 1 15 1 59 1 147 2 148 1 305 3 180 1 77 2 18 1 182 1 185 2 152 1 247 2 174 2 22 1 211 1 212 1 64 1 310 2 129 1 
247 1 82 1 305 1 180 1 201 1 77 1 70 1 43 1 185 1 243 1 
319 1 16 1 305 1 77 1 20 1 274 1 135 1 276 1 175 1 82 1 137 1 201 1 234 1 252 1 
305 1 77 1 20 2 185 1 274 1 135 1 276 1 247 1 175 1 82 1 137 1 201 1 234 2 243 1 252 1 
68 1 234 1 352 1 20 1 244 1 
222 1 68 1 234 2 20 2 274 1 218 1 276 1 244 1 
234 1 20 1 244 1 
109 1 180 1 305 1 77 1 68 1 70 1 43 1 20 1 185 1 247 1 82 1 201 1 234 1 243 1 
276 1 
222 1 68 1 234 2 20 2 274 1 258 1 276 1 244 1 
213 1 222 1 29 1 53 1 68 2 215 1 20 5 151 1 274 1 275 2 80 1 276 1 89 1 202 1 234 5 204 2 76 1 145 2 244 2 
64 1 187 1 
247 1 305 2 201 2 77 2 185 1 64 2 243 1 231 1 241 1 
342 1 273 1 19 1 
107 1 305 1 284 1 176 1 18 1 182 1 152 1 174 1 263 1 217 1 201 1 179 1 64 1 142 1 310 1 15 1 
107 1 305 2 77 1 176 1 18 1 19 1 182 1 152 1 185 1 289 1 339 1 247 1 174 1 263 1 217 1 201 2 179 1 142 1 310 1 15 1 
247 3 305 3 201 3 77 3 185 3 243 1 64 1 289 1 
247 1 82 1 305 1 201 1 77 1 43 1 185 1 
247 1 82 1 305 1 201 1 77 1 185 1 243 1 231 1 241 1 
107 1 239 1 176 1 240 1 289 1 135 1 294 1 241 1 32 1 339 1 263 1 316 1 217 1 137 1 201 4 179 1 243 2 142 1 10 1 344 1 36 1 15 1 59 1 147 2 305 4 180 1 77 3 18 1 20 1 182 1 152 1 185 3 154 1 247 3 175 1 82 1 174 1 22 1 234 1 212 1 64 1 252 1 310 1 129 1 
247 1 16 1 305 2 201 2 77 2 185 1 64 1 289 1 118 1 
305 3 77 3 20 1 185 3 289 2 135 1 276 1 241 1 188 1 339 1 247 3 32 1 82 1 175 1 137 1 201 3 234 1 243 1 252 1 
305 2 77 2 19 1 185 2 289 1 241 1 247 2 201 2 342 1 243 1 
107 1 305 1 176 1 18 1 152 1 182 1 174 1 263 1 217 1 201 1 179 1 64 1 142 1 310 1 15 1 
305 1 349 1 28 1 176 1 18 1 182 1 174 1 263 1 217 1 201 1 179 1 64 1 142 1 310 1 15 1 
67 1 294 2 338 1 261 1 316 1 138 1 91 2 342 2 10 1 344 4 93 1 36 1 59 1 147 2 121 1 169 1 273 2 79 1 19 2 351 1 183 1 212 1 238 1 129 1 
247 1 82 1 305 1 201 1 77 1 224 1 185 1 135 1 
16 1 305 5 77 5 254 1 159 1 185 4 289 2 241 1 247 4 339 1 201 5 243 1 64 1 118 1 
247 2 82 1 305 2 201 2 77 2 224 1 43 1 185 2 
296 1 11 1 
296 1 11 1 
170 1 346 1 
170 1 346 1 
170 1 346 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
296 1 11 1 
146 1 296 1 255 1 11 1 
146 1 296 1 255 1 234 1 308 1 20 1 11 1 
196 1 245 1 12 1 
196 1 92 1 245 1 
41 1 92 1 245 3 12 2 63 1 55 1 
41 1 331 1 92 1 245 2 12 1 63 1 
41 1 92 1 245 2 12 1 63 2 
213 1 108 1 67 1 68 4 215 3 286 2 73 1 113 1 261 1 138 1 202 2 203 2 204 1 93 1 145 1 244 1 345 1 222 1 226 1 20 5 275 1 274 1 98 1 324 3 276 2 123 1 234 5 330 1 66 1 23 1 105 2 359 1 
213 1 67 3 68 7 215 8 286 6 113 2 261 3 138 3 202 6 203 6 143 1 269 5 204 2 76 1 93 3 244 6 145 2 303 1 348 1 222 1 226 2 352 5 20 9 98 4 274 1 275 2 228 1 324 9 276 5 123 3 210 1 234 9 65 1 66 1 359 3 
67 1 68 2 215 3 286 2 73 1 113 1 261 1 138 1 202 2 203 2 204 1 76 1 345 1 145 1 93 1 226 1 20 3 274 1 275 1 98 1 276 3 324 4 123 1 234 3 105 1 359 2 
67 2 68 3 215 5 286 4 73 1 113 1 261 2 138 2 202 4 203 4 143 1 204 1 76 1 145 1 345 1 93 2 303 1 226 1 20 4 274 1 275 1 98 2 228 1 276 4 324 7 123 2 234 4 105 2 359 3 
182 1 206 1 187 1 
182 1 230 1 
83 1 
182 1 15 1 
279 1 356 1 217 1 182 3 206 2 15 1 
217 1 182 1 15 1 
267 1 182 1 
67 1 169 3 95 1 88 2 294 3 293 1 295 1 338 2 340 1 341 1 138 1 91 4 51 1 268 1 344 7 281 1 192 1 
67 1 169 3 95 1 88 2 294 3 293 1 295 1 338 2 340 1 341 1 138 1 91 4 51 1 268 1 344 7 281 1 192 1 
67 1 169 3 195 1 95 1 88 2 294 3 293 1 295 1 338 2 340 1 341 1 138 1 91 4 51 1 268 1 344 7 281 1 192 1 
67 4 27 4 30 1 88 3 293 2 294 15 295 1 338 5 340 1 341 1 200 3 261 3 316 1 138 4 8 1 91 16 299 1 268 2 10 1 344 31 93 3 119 1 36 1 59 1 147 2 169 10 95 2 62 1 123 3 51 5 191 1 237 1 281 2 192 1 
67 1 88 2 294 4 293 1 338 3 340 1 341 1 316 2 138 1 91 5 268 1 10 2 344 9 36 2 59 2 147 4 60 1 169 4 95 1 150 1 51 1 191 1 281 1 192 1 
282 1 283 1 176 1 196 1 288 1 292 2 313 1 55 1 263 1 264 1 90 1 265 1 7 1 297 2 179 1 92 1 12 1 220 1 40 1 245 2 153 1 354 1 174 1 233 1 102 1 189 1 190 1 104 1 157 1 310 1 
282 1 283 1 176 1 160 1 196 1 288 1 292 3 313 1 55 1 263 1 264 1 90 1 7 1 297 3 179 1 92 1 12 1 220 2 271 1 40 1 38 1 245 2 153 1 354 1 174 1 102 1 189 1 190 1 157 1 310 1 
282 1 283 1 176 1 160 1 196 1 288 1 292 2 55 1 263 1 264 1 90 1 297 2 179 1 92 1 12 1 220 2 40 1 38 1 245 2 153 1 354 1 174 1 189 1 157 1 310 1 
270 1 282 2 271 1 40 2 176 1 182 1 337 1 323 1 287 1 313 1 292 1 174 1 263 1 264 2 90 2 190 1 298 1 297 1 179 1 142 1 58 1 310 1 15 1 
282 1 40 1 176 1 160 1 196 1 245 2 153 1 354 1 313 1 292 1 55 1 174 1 102 1 233 1 263 1 90 1 264 1 7 1 265 1 190 1 297 1 179 1 92 1 12 1 157 1 310 1 
31 1 
213 1 176 1 215 2 135 1 259 1 263 2 137 1 56 1 179 1 142 2 58 1 14 1 145 1 15 1 319 1 272 1 16 1 222 3 226 1 20 5 184 2 182 1 322 4 274 1 275 1 276 2 324 2 155 1 101 1 327 2 234 5 235 1 24 1 334 1 287 1 114 1 242 2 201 1 202 2 166 1 117 2 204 1 35 1 244 6 305 1 77 1 306 2 355 2 174 2 175 1 82 1 251 2 252 1 359 2 310 2 
319 1 16 1 305 1 222 1 77 1 20 3 322 2 258 1 135 1 155 1 259 1 82 1 175 1 242 1 137 1 56 1 201 1 234 3 235 1 35 1 252 1 244 2 
319 1 16 1 305 1 222 1 77 1 20 3 322 3 258 1 274 1 306 1 135 1 276 1 155 1 259 1 82 1 175 1 137 1 56 1 201 1 234 3 235 1 35 1 252 1 244 1 
258 1 135 1 259 1 242 1 137 1 201 1 56 1 35 1 244 2 319 1 305 1 16 1 222 1 77 1 20 3 322 3 274 1 306 1 355 1 276 1 155 1 175 1 82 1 234 3 235 1 252 1 
0 1 213 1 215 1 258 1 135 1 259 1 137 1 56 1 145 1 319 1 16 1 222 3 223 1 20 5 322 6 184 2 274 5 275 1 276 5 155 1 101 1 327 2 234 5 235 1 334 1 194 1 72 1 242 4 201 1 202 1 117 2 35 1 204 1 244 7 305 1 77 1 306 4 355 4 82 1 175 1 251 2 252 1 309 1 359 2 
213 1 215 1 135 1 259 1 137 1 56 1 145 1 319 1 16 1 272 1 222 2 20 4 322 4 184 2 275 1 274 1 324 2 276 2 155 1 101 1 327 2 234 4 235 1 334 1 242 2 201 1 202 1 117 2 35 1 204 1 244 4 305 1 77 1 306 2 355 2 82 1 175 1 251 2 252 1 359 2 
334 1 213 1 194 1 215 1 135 1 72 1 259 1 242 2 137 1 201 1 56 1 202 1 117 2 204 1 35 1 244 4 145 1 319 1 305 1 16 1 222 2 77 1 223 1 20 4 184 2 322 4 274 1 275 1 306 2 276 1 355 2 155 1 101 1 175 1 82 1 327 2 234 4 235 1 251 2 252 1 359 2 
334 1 213 1 194 1 215 1 135 1 72 1 259 1 242 2 137 1 201 1 56 1 202 1 117 2 204 1 35 1 244 4 145 1 319 1 305 1 16 1 222 2 77 1 223 1 20 4 184 2 322 4 274 1 275 1 306 2 276 1 355 2 155 1 101 1 175 1 82 1 327 2 234 4 235 1 251 2 252 1 359 2 
213 1 215 1 312 2 135 1 72 1 259 1 242 2 137 1 201 1 56 1 202 1 117 2 204 1 35 1 244 4 145 1 319 1 304 1 305 1 16 1 222 2 77 1 20 4 322 4 274 1 275 1 306 2 276 1 355 2 324 2 155 1 101 1 175 1 82 1 328 2 327 2 103 1 358 1 234 4 235 1 252 1 
334 1 213 1 194 1 215 1 135 1 72 1 259 1 242 3 137 1 201 1 56 1 202 1 117 2 204 1 35 1 145 1 244 5 319 1 305 1 16 1 222 2 223 1 77 1 20 4 184 2 322 5 274 1 275 1 306 3 276 1 355 3 155 1 101 1 175 1 82 1 327 2 234 4 235 1 251 2 252 1 309 1 359 2 
334 1 213 1 194 1 215 1 135 1 72 1 259 1 242 3 137 1 201 1 56 1 202 1 117 2 204 1 35 1 145 1 244 5 319 1 305 1 16 1 222 2 223 1 77 1 20 4 184 2 322 5 274 1 275 1 306 3 276 1 355 3 155 1 101 1 175 1 82 1 327 2 234 4 235 1 251 2 252 1 309 1 359 2 
213 1 215 1 312 2 135 1 259 1 242 2 137 1 56 1 201 1 202 1 117 2 204 1 35 1 244 4 145 1 319 1 272 1 16 1 305 1 222 2 77 1 20 4 322 4 274 1 275 1 306 2 276 1 355 2 324 2 155 1 101 1 175 1 82 1 328 2 327 2 103 1 234 4 235 1 252 1 
67 1 88 1 293 1 294 3 338 2 340 1 341 1 316 1 138 1 342 1 91 3 10 1 344 6 36 1 59 1 147 2 169 2 273 1 19 1 187 1 212 1 64 2 281 1 238 1 129 1 192 1 
67 1 27 3 285 1 87 1 294 6 163 1 338 1 112 1 200 3 261 1 316 2 138 2 116 1 8 1 91 8 342 4 10 2 344 14 93 2 36 2 59 2 147 4 169 2 273 11 19 11 62 1 208 1 123 2 22 1 51 1 212 2 64 1 129 1 
107 1 284 1 176 1 285 1 289 1 294 1 6 1 112 1 339 1 263 1 217 1 316 1 201 2 342 1 91 1 179 1 142 1 10 1 344 2 15 1 36 1 59 1 147 2 305 2 77 1 18 1 227 1 182 1 152 1 185 1 122 1 247 1 174 1 22 1 212 1 64 1 310 1 129 1 
176 2 132 2 133 1 88 1 54 2 263 3 261 2 316 3 217 2 138 3 91 10 179 2 142 1 10 3 219 1 93 2 15 2 59 3 147 6 18 2 273 7 19 7 185 1 152 2 182 2 22 1 64 2 25 1 281 1 192 1 239 2 107 2 67 3 285 1 160 1 289 1 293 1 294 10 338 4 339 1 112 1 340 1 341 1 201 3 342 7 344 20 36 3 169 8 305 3 77 1 247 1 174 3 123 2 125 2 212 3 50 2 51 4 310 3 129 3 
176 2 285 1 160 1 287 1 289 1 314 1 294 1 136 1 263 8 316 2 201 1 91 1 317 1 179 2 142 2 10 2 58 1 344 2 168 1 36 2 15 2 59 2 147 4 149 1 305 1 77 1 225 1 185 1 182 3 247 1 174 7 22 1 211 2 212 2 104 1 52 1 238 1 310 8 129 2 
67 1 3 1 294 2 241 1 338 1 112 1 261 1 316 1 201 1 138 1 342 1 91 1 243 1 10 1 344 3 93 1 36 1 59 1 147 2 169 1 305 1 77 1 273 1 19 1 185 1 247 1 123 1 212 1 129 1 
59 1 147 2 169 1 273 1 19 1 351 1 316 1 138 1 342 1 91 2 51 1 212 1 10 1 344 2 238 1 93 1 129 1 36 1 
59 1 147 2 169 1 67 1 273 1 19 1 183 1 294 2 338 1 261 1 316 1 342 1 212 1 10 1 344 2 238 1 129 1 36 1 
67 1 294 2 338 1 261 1 316 1 138 1 91 2 342 2 10 1 344 4 93 1 36 1 59 1 147 2 169 2 273 2 19 2 123 1 212 1 51 1 238 1 129 1 
59 1 147 2 169 1 149 1 273 1 19 1 351 1 316 1 138 1 342 1 91 2 51 1 212 1 10 1 344 2 93 1 129 1 36 1 
59 1 147 2 169 1 149 1 67 1 273 1 19 1 183 1 294 2 338 1 261 1 316 1 342 1 212 1 10 1 344 2 129 1 36 1 
67 1 294 2 338 1 261 1 316 1 138 1 91 2 342 2 10 1 344 4 93 1 36 1 59 1 147 2 149 1 169 2 273 2 19 2 123 1 212 1 51 1 129 1 
67 1 294 2 338 1 261 1 316 1 138 1 91 2 342 2 10 1 344 4 93 1 36 1 59 1 147 2 169 2 273 2 19 2 123 1 212 1 51 1 129 1 
107 1 239 1 285 1 176 1 294 1 263 1 217 1 316 1 201 1 91 1 179 1 142 1 10 1 344 2 15 1 36 1 59 1 147 2 305 1 18 1 152 1 182 1 174 1 22 1 212 1 64 1 310 1 129 1 
214 1 28 1 285 1 176 1 294 1 263 1 217 1 316 1 201 1 91 1 179 1 142 1 10 1 344 2 15 1 36 1 59 1 147 2 349 1 305 1 18 1 182 1 174 1 22 1 212 1 64 1 310 1 129 1 
67 1 294 2 112 1 338 1 261 1 316 1 138 1 91 2 342 2 10 1 344 4 93 1 36 1 59 1 147 2 169 2 273 2 19 2 123 1 212 1 51 1 129 1 
107 1 239 1 67 1 176 1 54 1 294 2 338 1 261 1 263 1 217 1 316 1 138 1 201 1 342 2 91 2 179 1 10 1 344 4 93 1 15 1 36 1 59 1 147 2 169 2 305 1 273 2 18 1 19 2 152 1 182 1 174 1 123 1 51 1 212 1 104 1 310 1 129 1 
67 1 294 1 241 1 112 1 261 1 316 1 201 1 138 1 91 2 342 1 243 1 300 1 10 1 344 3 93 1 36 1 59 1 147 2 169 1 305 1 77 1 273 1 19 1 185 1 247 1 123 1 51 1 212 1 129 1 
106 1 67 3 27 2 71 1 294 10 338 3 198 1 200 1 261 3 316 2 138 3 33 2 8 1 139 1 140 1 91 9 10 2 344 19 93 3 36 2 59 2 147 4 169 6 78 1 205 2 150 1 62 1 123 3 249 1 51 3 
106 1 67 2 27 2 86 1 134 1 71 2 294 12 216 1 338 2 198 1 200 2 261 2 316 3 138 3 33 1 91 14 10 3 344 26 93 3 221 1 36 3 59 3 147 6 169 4 78 1 205 4 150 1 62 2 277 1 171 1 123 3 249 2 51 2 191 2 
106 1 67 5 27 4 86 1 88 1 134 1 71 1 293 1 294 21 216 1 338 4 198 1 340 1 341 1 200 3 261 4 316 3 138 5 33 1 8 1 140 1 91 20 10 3 344 41 93 4 221 1 36 3 59 3 147 6 169 8 78 1 205 4 150 1 62 3 171 1 277 1 123 4 249 2 51 4 191 1 156 1 281 1 192 1 
106 1 67 4 27 4 86 1 88 1 134 1 71 1 293 1 294 18 216 1 338 4 198 1 340 1 341 1 200 3 261 3 316 4 138 5 33 1 8 1 140 1 91 20 10 4 344 38 93 4 221 1 36 4 59 4 147 8 169 7 78 1 205 4 150 1 62 3 171 1 277 1 123 4 249 2 51 3 191 2 156 1 281 1 192 1 
106 1 67 8 27 4 86 1 88 1 134 1 71 1 293 1 294 25 163 2 216 1 338 7 198 1 340 1 341 1 200 4 261 7 316 2 138 8 33 1 8 2 91 27 10 2 344 52 93 7 221 1 36 2 59 2 147 4 169 14 78 1 205 4 150 1 62 2 171 1 277 1 123 7 249 1 51 7 191 1 281 1 192 1 
176 1 285 1 294 1 112 1 260 1 263 2 316 1 201 2 91 1 317 1 179 1 343 1 10 1 344 2 36 1 59 1 147 2 305 2 77 2 232 1 174 2 22 1 329 1 211 2 212 1 332 1 310 2 129 1 
176 1 84 1 160 1 196 1 245 2 153 1 354 1 100 1 55 1 174 2 263 2 102 1 264 1 357 1 179 1 92 1 12 1 104 1 310 2 
176 1 160 1 196 1 245 2 153 1 354 1 326 1 55 1 174 1 263 1 102 1 264 1 357 1 179 1 92 1 12 1 310 1 
270 1 176 1 84 1 182 1 287 1 174 1 199 1 263 1 264 1 179 1 142 1 58 1 310 1 15 1 
176 1 84 1 160 1 196 1 245 2 153 1 354 1 100 1 55 1 174 1 263 1 102 1 264 1 357 1 179 1 92 1 12 1 310 1 
127 1 
202 1 29 1 53 1 215 1 274 1 276 1 187 1 
334 1 213 1 215 1 202 1 204 1 145 1 244 1 222 1 20 1 184 1 275 1 274 1 324 1 276 2 234 1 251 1 359 1 
213 4 53 1 176 4 257 2 215 9 315 2 178 2 263 3 261 2 217 3 138 2 267 2 179 3 142 1 145 4 93 2 15 3 17 1 222 3 226 2 321 1 96 2 20 5 182 10 274 2 275 4 230 3 324 12 276 8 279 1 234 5 104 1 67 2 29 1 110 2 286 6 114 1 165 1 202 8 34 2 203 6 204 4 167 2 244 5 350 1 206 2 81 2 174 3 123 2 50 2 250 1 252 2 359 6 310 3 
213 2 67 2 27 1 215 8 111 1 286 5 86 1 134 1 216 1 114 1 200 1 261 2 138 2 202 5 203 5 204 2 167 2 318 1 244 1 145 2 93 2 222 1 226 1 20 1 275 2 274 2 62 1 81 1 324 6 276 5 277 1 171 1 123 2 234 1 359 3 
213 1 67 1 109 1 70 1 215 2 293 1 201 1 138 2 202 2 204 1 243 1 167 2 145 1 305 1 180 1 223 1 77 1 43 1 20 1 185 1 275 1 81 1 247 1 82 1 124 1 234 1 281 1 192 1 
213 1 53 1 29 1 215 1 275 1 274 1 276 1 202 1 204 1 145 1 
67 2 215 5 286 5 81 1 324 10 276 5 123 2 261 2 138 2 202 5 203 5 50 1 167 2 359 5 93 2 
222 1 234 1 20 1 274 1 276 1 244 1 
213 1 176 1 215 2 287 1 114 2 263 4 202 2 166 1 179 1 204 2 142 2 58 1 76 1 145 2 244 4 15 1 350 2 222 2 226 2 20 3 182 1 275 2 229 1 174 4 234 3 126 1 250 1 24 1 310 4 
239 1 107 1 240 1 176 1 294 1 263 1 217 1 316 1 201 3 179 1 142 1 243 2 10 1 344 1 36 1 15 1 59 1 147 2 305 3 180 1 77 2 18 1 185 2 152 1 182 1 247 2 174 1 22 1 212 1 64 1 310 1 129 1 
213 1 226 1 215 1 286 2 275 1 274 2 88 1 324 4 276 4 114 1 202 2 203 2 204 1 359 2 145 1 
333 1 48 1 131 1 
333 1 131 1 248 1 97 1 13 1 
333 1 48 1 131 1 
333 1 48 1 131 1 
333 1 131 1 69 1 
333 1 131 1 69 1 
333 1 131 1 69 1 
333 1 131 1 
296 1 11 1 
59 2 147 4 67 1 169 3 88 1 294 4 293 1 338 2 340 1 341 1 316 2 138 1 91 4 51 1 191 1 10 2 344 8 281 1 192 1 36 2 
169 2 67 1 88 1 294 3 293 1 187 1 338 2 340 1 341 1 138 1 91 3 344 6 281 1 192 1 
59 1 147 2 67 1 169 2 294 2 338 1 123 1 261 1 316 1 138 1 91 2 51 1 10 1 344 4 253 1 93 1 36 1 
67 1 169 2 27 2 62 1 294 4 338 1 123 1 261 1 200 1 138 1 8 1 91 3 51 1 344 7 93 1 
193 1 67 3 27 2 88 1 293 2 294 12 163 1 338 5 340 1 341 1 200 2 261 2 316 2 138 3 8 1 116 1 91 11 10 2 344 23 93 2 36 2 59 2 147 4 169 9 123 2 51 4 191 2 281 2 192 1 
27 1 344 1 294 1 
200 1 91 1 344 1 
59 1 147 2 169 3 67 1 294 3 338 2 123 1 261 1 316 1 138 1 91 3 50 1 51 1 10 1 344 6 253 1 93 1 36 1 
67 2 27 1 86 1 134 1 294 6 216 1 338 1 200 1 261 2 316 1 138 2 91 6 10 1 344 12 93 2 36 1 59 1 147 2 169 2 150 1 62 1 277 1 171 1 123 2 51 1 
67 1 169 2 294 3 293 1 338 1 138 1 91 3 51 1 344 6 281 1 192 1 
193 1 59 1 147 2 169 2 293 1 294 2 338 1 340 1 341 1 316 1 91 1 51 1 191 1 10 1 344 3 281 1 36 1 
59 1 147 2 169 5 67 2 150 1 293 2 294 5 338 3 124 1 316 1 138 2 91 5 51 2 10 1 344 10 281 2 36 1 192 1 
59 1 147 2 169 1 150 1 316 1 138 1 91 2 51 1 10 1 344 2 93 1 36 1 
59 1 147 2 67 1 169 2 150 1 294 2 338 1 123 1 261 1 316 1 138 1 91 2 51 1 10 1 344 4 93 1 36 1 
193 1 59 3 147 6 169 2 150 1 294 2 293 1 338 1 316 3 140 1 91 1 51 1 191 1 10 3 344 3 281 1 36 3 
193 1 67 5 27 4 30 1 88 1 293 3 294 18 338 7 340 1 341 1 200 3 261 3 316 5 138 5 8 1 140 1 91 16 10 5 344 34 119 1 93 3 36 5 59 5 147 10 169 12 150 1 62 1 123 3 51 5 191 2 237 1 281 3 253 1 192 2 
67 1 27 1 88 1 294 4 293 1 338 2 340 1 200 1 341 1 316 1 138 1 91 4 10 1 344 8 36 1 59 1 147 2 169 2 150 1 62 1 277 1 281 1 192 1 
67 1 27 2 88 1 293 1 294 5 338 2 340 1 341 1 200 1 316 2 138 2 8 1 91 6 10 2 344 11 93 1 36 2 59 2 147 4 169 3 150 1 62 1 277 1 123 1 51 1 281 1 253 1 192 1 
67 3 27 1 86 1 88 1 134 1 293 1 294 10 216 1 338 3 340 1 341 1 200 1 261 2 316 3 138 3 91 9 10 3 344 19 93 2 36 3 59 3 147 6 169 4 150 1 62 1 277 1 171 1 123 2 51 1 191 1 281 1 253 1 192 1 
67 2 27 1 86 1 88 1 134 1 293 1 294 7 216 1 338 3 340 1 341 1 200 1 261 1 316 3 138 3 91 10 10 3 344 17 93 2 36 3 59 3 147 6 169 5 150 1 62 1 277 1 171 1 123 2 51 2 191 1 281 1 253 1 192 1 
67 1 27 1 88 1 294 4 293 1 338 2 340 1 200 1 341 1 316 1 138 1 91 4 10 1 344 8 36 1 59 1 147 2 169 2 150 1 62 1 277 1 281 1 192 1 
67 2 27 1 86 1 134 1 294 6 216 1 338 1 200 1 261 2 316 1 138 2 91 6 10 1 344 12 93 2 36 1 59 1 147 2 169 2 150 1 62 1 277 1 171 1 123 2 51 1 
67 2 27 1 86 1 88 1 134 1 293 1 294 8 216 1 338 3 340 1 341 1 200 1 261 1 316 4 138 3 91 10 10 4 344 18 93 2 36 4 59 4 147 8 169 5 150 1 62 1 277 1 171 1 123 2 51 2 191 2 281 1 253 1 192 1 
67 2 27 1 86 1 134 1 294 7 216 1 338 3 200 1 261 2 316 4 138 3 140 1 91 9 10 4 344 16 93 3 36 4 59 4 147 8 169 6 150 1 62 1 277 1 171 1 123 3 51 3 191 2 
67 1 169 6 294 4 293 3 338 3 340 1 341 2 138 1 91 3 51 3 344 7 281 3 192 1 
67 2 27 1 86 1 88 1 134 1 293 1 294 8 216 1 338 3 340 1 341 1 200 1 261 1 316 4 138 3 140 1 91 10 10 4 344 18 93 2 36 4 59 4 147 8 169 4 150 1 62 1 277 1 171 1 123 2 51 1 191 2 281 1 192 1 
262 1 305 1 16 1 201 1 77 1 64 1 118 1 
16 1 305 1 1 1 77 1 161 1 336 1 353 1 262 1 201 1 57 1 64 1 118 1 
174 1 263 1 176 1 179 1 182 1 142 1 287 1 58 1 187 1 310 1 15 1 
305 2 77 1 176 1 18 1 182 1 185 1 152 1 289 1 247 1 174 1 263 1 217 1 201 2 179 1 64 1 142 1 310 1 15 1 
305 2 350 1 77 2 176 1 18 1 182 3 185 1 152 1 289 1 135 1 247 2 82 1 174 1 263 1 137 1 217 2 201 2 34 1 267 1 179 1 64 1 310 1 15 2 
176 1 289 1 135 1 263 2 217 2 137 1 201 2 34 1 267 1 179 1 15 2 349 1 350 1 305 2 77 2 18 1 185 1 182 3 247 2 173 1 174 2 82 1 64 1 310 2 
176 1 263 3 217 1 34 1 267 1 179 1 142 1 244 1 15 1 350 1 42 1 20 2 182 4 274 1 206 1 230 1 276 1 278 1 173 1 174 3 234 2 252 1 310 3 
350 1 176 1 20 2 182 4 274 1 206 1 315 1 230 1 276 1 173 1 174 3 263 3 217 1 34 1 234 2 267 1 179 1 142 1 252 1 310 3 244 1 15 1 
174 1 263 1 176 1 179 1 314 1 310 1 
335 1 176 3 225 1 160 1 182 3 314 1 136 1 174 6 279 1 263 7 115 1 217 1 211 1 266 1 179 2 142 2 104 1 52 1 310 7 168 1 15 2 
176 1 88 1 54 1 263 1 316 2 217 1 138 1 91 3 179 1 10 2 15 1 59 2 147 4 18 1 273 1 19 1 152 1 185 1 182 1 332 1 64 2 104 1 281 1 192 1 107 1 239 1 67 1 289 1 293 1 294 3 112 1 338 2 340 1 341 1 201 2 342 1 344 6 36 2 169 2 305 2 77 1 247 1 174 1 125 1 212 2 310 1 129 2 
213 2 29 1 53 1 68 1 215 1 257 1 110 1 315 1 178 1 263 1 202 1 142 1 204 2 145 2 244 2 222 1 20 3 182 2 274 1 275 2 206 1 230 1 276 1 174 1 234 3 250 1 252 1 310 1 
176 2 321 1 182 2 206 1 314 1 174 2 279 1 263 2 217 1 179 1 104 1 310 2 15 1 
176 1 182 1 287 1 173 1 174 4 263 4 209 1 179 1 142 1 58 1 104 1 310 4 15 1 
335 1 350 1 176 2 182 1 197 1 174 2 21 1 263 2 217 1 266 1 179 1 25 1 310 2 15 1 
174 1 263 1 176 1 179 1 196 1 92 1 142 1 245 1 354 1 310 1 
260 1 174 2 263 2 176 1 160 1 179 1 104 1 310 2 
350 1 176 2 225 1 182 3 287 1 174 4 136 1 263 5 209 1 179 2 142 1 58 1 104 1 310 5 15 2 168 1 
350 1 176 2 225 1 182 3 287 1 162 1 174 4 263 5 209 1 179 2 142 1 58 1 104 1 310 5 15 2 168 1 
305 2 349 1 77 1 176 1 18 1 182 1 185 1 289 1 247 1 174 1 263 1 217 1 201 2 179 1 64 1 142 1 310 1 15 1 
335 1 350 1 176 2 182 1 174 1 279 1 263 1 115 1 217 1 266 1 179 1 310 1 15 1 
164 1 181 1 64 1 44 1 291 1 
181 2 68 1 20 2 274 1 44 1 4 1 246 1 135 1 291 2 276 1 32 1 82 1 175 1 164 2 137 1 234 2 64 1 252 1 144 1 
305 1 181 1 201 1 77 1 329 1 343 1 44 1 291 1 232 1 
44 1 246 1 144 1 
283 1 189 1 288 1 187 1 
283 1 189 1 190 1 297 1 288 1 292 1 313 1 
282 1 90 1 292 1 
283 1 158 1 288 1 313 1 292 3 233 1 74 2 189 1 190 1 297 3 301 1 26 1 
283 1 189 1 190 1 297 2 75 1 288 1 292 2 313 1 220 1 
311 1 233 1 190 1 297 1 177 1 236 1 288 1 292 1 313 1 
233 1 283 1 190 1 297 1 288 1 292 1 313 1 
233 1 283 2 189 1 190 1 297 1 292 1 313 1 
283 1 61 1 85 1 288 1 313 2 292 2 233 1 190 2 297 2 94 1 
233 1 280 1 190 1 9 1 297 2 141 1 177 1 236 1 288 1 292 2 313 1 220 1 
302 1 283 1 196 1 245 2 288 1 313 1 292 2 55 1 233 1 189 1 190 1 297 2 92 1 12 1 220 1 
233 1 190 1 9 1 297 2 177 1 236 1 75 1 288 1 292 2 313 1 220 1 347 1 
233 1 283 1 189 1 190 1 297 1 288 1 292 1 313 1 
190 1 9 1 297 2 236 1 177 2 288 1 313 1 292 2 220 1 
233 1 39 1 283 1 189 1 190 1 297 2 45 1 288 1 292 2 313 1 220 1 46 1 
37 1 283 1 288 1 313 1 292 3 233 1 74 2 189 1 190 1 297 3 301 1 26 2 
186 1 288 2 325 1 128 2 
233 1 190 1 297 1 307 1 292 1 313 1 
233 1 283 1 280 1 189 1 190 1 297 2 288 1 292 2 313 1 220 1 
99 1 
233 1 283 1 189 1 190 1 297 1 288 1 292 1 313 1 
233 1 280 1 283 1 189 1 74 1 190 1 297 3 288 1 292 3 313 1 220 1 
297 1 9 1 236 1 288 1 292 1 220 1 
283 1 288 1 

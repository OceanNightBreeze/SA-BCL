#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 148 202 243 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 148 294 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 148 202 243 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 148 294 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 148 202 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 148 249 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
270 9 93 1 317 1 96 2 230 1 301 2 57 1 210 4 164 1 212 7 365 1 280 5 140 2 258 1 324 3 260 1 81 9 285 1 306 1 41 1 246 1 378 1 176 1 121 1 
270 9 93 1 317 1 96 2 230 1 301 2 57 1 210 4 164 1 212 7 365 1 280 5 140 2 258 1 324 3 260 1 81 9 285 1 306 1 41 1 246 1 378 1 176 1 121 1 
155 1 270 9 93 1 317 1 96 2 230 1 301 2 357 1 56 1 57 2 210 4 164 2 212 6 280 5 193 1 140 2 258 1 324 3 260 2 81 9 285 1 306 1 41 2 350 1 246 1 176 1 352 1 121 1 
155 1 270 9 93 1 317 1 96 2 230 1 301 2 357 1 56 1 57 2 210 4 164 2 212 6 280 5 193 1 140 2 258 1 324 3 260 2 81 9 285 1 306 1 41 2 350 1 246 1 176 1 352 1 121 1 
155 1 270 10 93 1 317 1 96 2 230 1 301 2 357 1 56 1 57 2 210 5 164 2 212 7 280 6 193 1 140 2 258 1 324 4 260 2 81 10 285 1 306 1 41 2 350 1 246 1 176 1 352 1 121 1 
155 1 270 7 317 1 96 2 230 1 301 1 357 1 56 1 57 2 210 3 164 2 212 4 280 4 193 1 140 2 258 1 324 2 260 2 81 7 285 1 306 1 41 2 350 1 246 1 176 1 352 1 121 1 
258 1 140 1 324 1 270 4 93 1 260 1 81 4 317 1 96 1 230 1 306 1 301 2 57 1 246 1 210 2 164 1 212 3 280 3 
258 1 140 1 0 1 155 1 270 2 260 1 81 2 96 1 230 1 306 1 41 1 164 1 380 1 352 1 280 1 215 1 
258 1 140 2 324 1 270 3 81 3 96 2 230 1 306 1 41 1 210 1 212 1 280 2 121 1 
377 1 208 1 256 1 
295 1 377 1 213 2 
97 2 366 2 376 1 134 1 167 2 16 2 298 2 286 2 
51 1 271 2 298 2 53 1 300 1 207 1 54 1 160 1 97 3 209 1 134 1 103 1 33 2 361 1 77 2 78 1 191 1 139 2 366 2 62 1 15 2 144 1 167 3 347 1 16 2 284 1 330 1 286 2 169 1 173 1 217 1 376 1 309 1 42 1 44 1 45 1 333 1 
97 1 366 1 325 1 141 1 376 1 167 1 16 1 298 1 286 1 319 1 
124 1 167 1 286 1 127 1 273 1 319 1 229 1 97 1 6 1 175 1 377 1 99 1 256 1 204 1 
366 1 124 2 167 1 298 1 16 1 286 1 127 1 273 1 319 1 229 1 97 1 6 2 175 1 377 1 256 1 
6 1 124 1 227 1 68 1 95 1 
6 2 377 1 124 2 43 1 256 1 227 1 252 1 68 1 
6 1 124 1 227 1 
366 1 325 1 141 1 124 1 167 1 298 1 16 1 286 1 319 1 6 1 97 1 65 1 376 1 68 1 
377 1 
6 2 174 1 377 1 124 2 43 1 256 1 227 1 68 1 
124 5 92 2 107 1 147 2 261 1 227 2 287 1 187 1 6 5 377 1 43 1 114 1 256 1 68 2 362 2 104 1 23 1 220 1 203 1 
208 1 134 1 
366 1 167 2 298 1 16 1 328 1 168 1 286 2 97 2 134 2 
135 1 345 1 172 1 
122 1 167 1 347 1 144 1 271 1 284 1 207 1 54 1 97 1 217 1 134 1 33 1 42 1 361 1 77 1 333 1 
366 4 182 1 167 5 16 4 298 1 225 1 168 1 286 5 130 1 97 5 134 1 332 2 237 1 204 1 
97 2 366 2 109 1 325 1 167 2 16 2 286 2 319 1 
182 1 366 1 144 1 347 1 167 2 271 1 16 1 284 1 286 1 207 1 54 1 97 2 217 1 42 1 33 1 332 1 135 1 361 1 77 1 333 1 
97 3 366 3 134 1 167 3 332 1 298 1 16 3 286 3 
97 1 366 1 325 1 167 1 16 1 286 1 319 1 
97 1 366 1 167 1 16 1 298 1 328 1 168 1 286 1 319 1 
182 1 124 1 271 1 298 2 53 1 300 1 207 1 54 1 127 1 273 1 319 1 229 1 160 1 97 4 6 1 209 1 134 1 103 1 33 1 361 1 77 1 78 1 139 1 366 3 15 2 144 1 347 1 167 4 283 1 16 3 284 1 168 1 286 3 169 1 88 1 173 1 175 1 217 1 376 1 309 1 42 1 44 1 332 1 333 1 
97 2 366 1 134 1 167 2 332 1 16 1 286 2 237 1 204 1 
182 1 366 3 124 1 167 3 298 1 16 3 168 1 286 3 127 1 273 1 319 1 88 1 229 1 6 1 97 3 175 1 377 1 332 2 24 1 
366 2 167 2 298 1 16 2 168 1 286 2 97 2 332 1 135 1 345 1 
167 1 347 1 144 1 271 1 284 1 207 1 54 1 97 1 217 1 134 1 33 1 42 1 77 1 361 1 333 1 
167 1 347 1 144 1 271 1 207 1 5 1 97 1 217 1 134 1 33 1 42 1 77 1 361 1 34 1 333 1 
53 1 336 1 160 1 209 2 103 1 276 1 135 2 78 1 191 2 236 1 323 1 345 2 139 4 79 1 15 2 371 1 241 1 172 2 108 1 309 1 200 1 44 1 223 1 28 1 
97 1 366 1 109 1 167 1 16 1 286 1 273 1 319 1 
46 1 344 1 
46 1 344 1 
224 1 304 1 
224 1 304 1 
224 1 304 1 
226 1 46 1 344 1 
226 1 46 1 344 1 
46 1 219 1 344 1 
39 1 224 1 304 1 46 2 344 2 250 1 
226 1 46 1 344 1 
302 1 46 1 344 1 
302 1 46 1 344 1 
302 1 46 1 344 1 
124 1 2 1 315 1 318 1 129 1 6 1 97 2 55 1 134 1 232 1 341 1 364 1 344 1 366 2 167 2 282 1 16 2 83 1 286 2 264 1 291 1 46 1 219 1 91 1 
124 2 3 1 335 1 83 2 129 3 199 1 6 2 55 2 375 2 377 1 232 2 312 1 46 2 364 2 136 1 70 1 91 1 344 2 250 1 
57 1 260 1 164 1 
260 1 164 1 380 1 
351 1 57 2 240 1 164 3 263 1 380 1 
57 1 240 1 17 1 164 2 263 1 380 1 
57 1 240 1 164 2 263 2 380 1 
295 1 92 1 124 5 2 1 227 1 187 1 157 1 339 1 6 5 100 1 362 1 256 1 104 3 236 1 213 3 323 1 238 2 61 1 282 1 107 2 147 1 241 1 149 1 108 1 377 2 66 2 43 1 291 1 68 4 268 1 27 2 353 1 
295 3 124 9 92 2 227 6 95 5 187 1 188 1 6 9 100 2 211 1 256 1 362 2 104 8 236 3 213 9 323 3 61 3 107 6 327 1 147 2 241 3 287 1 149 1 305 1 108 3 267 1 377 5 66 6 43 1 291 4 310 1 68 7 379 5 27 6 353 2 
295 2 92 1 124 3 298 1 157 1 319 1 97 1 6 3 100 1 256 1 362 1 104 3 236 1 213 4 323 1 366 1 238 1 325 1 141 1 61 1 167 1 107 2 16 1 147 1 241 1 286 1 287 1 108 1 65 1 376 1 377 3 66 2 291 1 68 2 268 1 27 2 353 1 
295 2 92 1 298 1 157 1 97 1 6 4 100 1 256 1 104 3 213 5 61 2 107 4 167 1 16 1 108 2 305 1 65 1 66 3 310 1 68 3 268 1 27 3 353 1 124 4 319 1 362 1 236 1 323 1 238 2 366 1 325 1 141 1 327 1 147 1 241 2 286 1 287 1 377 3 376 1 291 2 
331 1 208 1 361 1 
361 1 137 1 
221 1 
217 1 144 1 361 1 
194 1 361 1 
217 1 361 1 
331 2 217 1 144 1 361 3 4 1 262 1 
139 7 64 1 184 1 336 2 126 1 86 1 337 2 171 1 108 1 209 3 236 1 177 1 165 1 191 4 71 1 222 1 28 3 
139 7 64 1 184 1 336 2 126 1 86 1 337 2 171 1 108 1 209 3 236 1 177 1 165 1 191 4 71 1 222 1 28 3 
139 7 368 1 64 1 184 1 336 2 126 1 86 1 337 2 171 1 108 1 209 3 236 1 177 1 165 1 191 4 71 1 222 1 28 3 
139 20 61 3 297 3 64 3 241 3 272 1 336 1 126 1 337 1 186 1 108 3 358 1 209 10 288 1 340 1 360 1 105 1 117 4 236 3 165 2 191 10 323 3 28 4 
53 1 184 1 126 1 336 3 337 1 254 1 131 1 160 1 209 5 340 1 236 2 191 6 165 1 38 1 139 11 15 2 64 2 86 1 171 1 108 2 309 1 44 1 177 1 222 1 28 5 
206 1 334 1 270 2 271 1 73 1 94 1 185 1 96 1 230 1 320 1 161 1 57 1 33 1 77 1 164 2 212 1 280 1 140 1 258 1 259 1 347 1 260 1 81 2 244 1 306 1 307 1 41 1 351 1 42 1 380 1 
206 1 334 1 270 3 271 1 73 1 94 1 185 1 96 1 230 1 161 1 57 1 33 1 77 1 164 2 212 2 59 1 280 1 140 1 259 1 347 1 260 1 81 3 306 1 307 1 41 1 351 1 42 1 380 1 152 1 180 1 
334 1 270 2 271 1 73 1 94 1 185 1 230 1 57 1 33 1 77 1 164 2 212 2 59 1 280 1 259 1 347 1 260 1 81 2 306 1 41 1 307 1 351 1 42 1 380 1 152 1 
334 2 50 1 270 1 271 1 185 2 96 1 33 1 77 1 361 1 277 1 278 1 214 1 192 1 140 1 347 1 81 1 242 1 307 2 41 2 217 1 42 1 333 1 180 1 
206 1 334 1 270 1 271 1 73 1 94 1 185 1 96 1 161 1 57 1 33 1 77 1 164 2 140 1 258 1 259 1 347 1 260 1 81 1 244 1 307 1 41 1 351 1 42 1 380 1 152 1 
179 1 
48 1 295 2 92 1 156 2 6 4 97 1 99 1 256 1 104 1 167 1 107 1 170 1 175 1 22 1 110 2 111 3 115 1 124 4 125 1 227 5 273 1 127 1 187 1 319 1 229 1 189 1 231 5 359 1 234 2 322 1 362 1 142 2 147 1 195 1 286 1 197 3 245 1 374 3 377 1 150 1 43 2 204 1 
295 2 48 1 92 1 124 4 125 1 227 5 156 2 187 1 127 1 273 1 319 1 189 1 229 1 97 1 6 4 231 5 99 1 359 1 234 2 322 1 256 1 362 1 104 1 142 2 107 1 167 1 147 1 195 1 170 1 286 1 245 1 197 3 374 3 175 1 22 1 377 1 110 2 150 1 111 3 43 2 115 1 204 1 
48 1 92 1 156 2 338 2 97 1 6 4 99 1 256 1 104 1 213 2 167 1 107 1 175 1 111 2 124 4 125 1 227 4 273 1 127 1 187 1 319 1 229 1 231 4 359 1 362 1 37 2 142 2 80 1 147 1 195 1 286 1 87 1 245 1 197 2 374 2 150 1 377 1 43 2 204 1 
295 2 48 1 50 1 92 1 156 2 6 5 97 1 99 1 100 1 256 1 104 2 213 2 107 2 347 1 167 1 175 1 110 2 217 1 111 2 26 1 124 5 125 1 271 2 316 1 227 6 187 1 127 1 273 1 319 1 229 1 189 1 231 4 359 1 33 2 234 2 77 2 361 1 362 1 363 1 142 2 80 1 147 1 195 1 242 1 286 1 197 2 245 1 374 2 377 2 150 1 43 3 42 1 333 2 47 1 204 1 
48 1 124 3 125 1 227 2 127 1 273 1 319 1 229 1 97 1 6 3 231 2 99 1 359 1 167 1 195 1 286 1 175 1 174 1 150 1 111 1 43 1 204 1 
48 1 124 3 125 1 227 1 127 1 273 1 319 1 229 1 97 1 6 3 231 3 99 1 359 1 256 1 167 1 195 1 286 1 374 1 175 1 174 1 150 1 377 1 43 1 204 1 
48 1 124 3 125 1 227 2 127 1 273 1 319 1 229 1 97 1 6 3 231 3 99 1 359 1 256 1 167 1 195 1 286 1 197 1 374 1 174 1 175 1 150 1 377 1 111 1 43 1 204 1 
295 2 48 1 92 1 124 5 125 1 227 7 156 2 187 1 127 1 273 1 319 1 189 1 229 1 6 5 97 1 231 6 99 1 359 1 234 2 322 1 362 1 256 5 104 1 142 2 107 1 167 1 147 1 195 1 170 1 286 1 245 1 197 4 374 4 22 1 174 1 175 1 110 2 377 5 150 1 111 4 43 3 113 1 115 1 204 1 
48 1 295 2 92 1 156 2 97 1 6 4 99 1 256 1 104 1 213 2 167 1 107 1 175 1 110 2 111 2 124 4 125 1 227 4 273 1 127 1 187 1 319 1 189 1 229 1 231 4 359 1 234 2 362 1 142 2 80 1 147 1 195 1 286 1 245 1 197 2 374 2 150 1 377 2 43 2 204 1 
295 2 48 1 92 1 124 4 125 1 227 4 156 2 127 1 273 1 187 1 319 1 189 1 229 1 97 1 6 4 231 4 99 1 359 1 234 2 322 1 256 1 362 1 104 1 142 2 107 1 167 1 147 1 195 1 286 1 170 1 197 2 245 1 374 2 175 1 22 1 377 1 110 2 150 1 111 2 43 2 204 1 
295 2 48 1 92 1 124 4 125 1 227 4 156 2 127 1 273 1 187 1 319 1 189 1 229 1 97 1 6 4 231 4 99 1 359 1 234 2 322 1 256 1 362 1 104 1 142 2 107 1 167 1 147 1 195 1 286 1 170 1 197 2 245 1 374 2 175 1 22 1 377 1 110 2 150 1 111 2 43 2 204 1 
48 1 92 1 124 4 125 1 227 4 156 2 127 1 273 1 187 1 338 2 319 1 229 1 97 1 6 4 231 4 99 1 359 1 322 1 256 1 362 1 104 1 213 2 37 2 142 2 326 1 107 1 167 1 372 1 147 1 195 1 286 1 87 1 197 2 245 1 374 2 175 1 377 1 150 1 111 2 43 2 204 1 
53 1 184 1 336 2 337 1 160 1 208 1 209 3 103 1 134 2 135 1 78 1 191 3 236 1 345 1 139 6 15 2 86 1 171 1 172 1 108 1 309 1 200 1 44 1 177 1 222 1 28 2 
297 3 53 2 272 1 336 1 186 1 160 2 209 6 255 1 7 1 134 1 103 2 135 11 78 1 191 8 236 1 343 1 345 4 323 1 139 14 61 2 62 1 15 4 64 1 241 2 265 1 172 11 108 2 173 1 309 2 290 1 44 2 117 3 28 2 
182 1 122 1 271 1 53 1 207 1 54 1 160 1 97 2 209 1 7 1 134 1 33 1 103 1 101 1 361 1 77 1 78 1 191 1 345 1 281 1 366 1 139 2 369 1 144 1 347 1 167 2 15 2 62 1 16 1 284 1 286 1 173 1 217 1 309 1 42 1 44 1 332 1 333 1 
299 2 53 3 300 2 336 4 207 2 337 1 158 2 54 2 97 3 160 3 209 10 7 1 103 3 345 7 61 2 62 1 15 6 167 3 347 2 16 1 64 4 18 2 171 1 172 7 108 3 173 1 217 2 309 3 177 1 222 1 28 8 182 1 271 3 184 1 132 1 275 2 134 2 33 3 77 3 361 2 135 7 78 3 236 3 191 10 323 2 366 1 139 20 144 2 284 2 82 1 241 2 286 1 86 1 42 2 332 1 44 3 333 1 152 1 153 1 
354 1 50 1 271 4 53 2 320 1 97 1 160 2 76 1 209 1 33 4 103 2 361 3 77 4 78 2 191 1 366 1 139 2 144 1 167 1 347 3 15 4 62 1 145 1 16 1 148 1 286 1 242 1 243 1 198 1 173 1 217 3 200 1 309 2 42 2 332 1 44 2 90 1 45 1 202 1 178 1 333 2 
298 1 53 1 336 1 160 1 97 1 209 2 7 1 103 1 135 1 10 1 78 1 191 1 236 1 345 1 323 1 366 1 139 3 61 1 15 2 167 1 16 1 241 1 168 1 286 1 172 1 108 1 309 1 44 1 28 1 
139 2 15 2 371 1 64 1 53 1 241 1 172 1 108 1 160 1 200 1 309 1 103 1 44 1 135 1 78 1 191 2 345 1 28 1 
139 2 15 2 53 1 336 1 172 1 160 1 209 2 200 1 309 1 103 1 44 1 135 1 78 1 236 1 345 1 323 1 223 1 28 1 
53 1 336 1 160 1 209 2 103 1 135 2 78 1 191 2 236 1 345 2 323 1 139 4 61 1 15 2 241 1 64 1 172 2 108 1 309 1 200 1 44 1 28 2 
139 2 354 1 15 2 371 1 64 1 53 1 241 1 172 1 108 1 160 1 309 1 103 1 44 1 135 1 78 1 191 2 345 1 28 1 
139 2 354 1 15 2 53 1 336 1 172 1 160 1 209 2 309 1 103 1 44 1 135 1 78 1 236 1 345 1 323 1 223 1 28 1 
354 1 53 1 336 1 160 1 209 2 103 1 135 2 78 1 191 2 236 1 345 2 323 1 139 4 61 1 15 2 241 1 64 1 172 2 108 1 309 1 44 1 28 2 
53 1 336 1 160 1 209 2 103 1 135 2 78 1 191 2 236 1 345 2 323 1 139 4 61 1 15 2 241 1 64 1 172 2 108 1 309 1 44 1 28 2 
271 1 53 1 300 1 207 1 54 1 97 1 160 1 209 1 134 1 33 1 103 1 77 1 361 1 78 1 191 1 139 2 62 1 144 1 347 1 167 1 15 2 284 1 173 1 217 1 309 1 42 1 44 1 333 1 
271 1 53 1 207 1 5 1 97 1 160 1 209 1 134 1 33 1 103 1 77 1 361 1 34 1 78 1 191 1 36 1 139 2 62 1 144 1 347 1 167 1 15 2 173 1 217 1 309 1 42 1 44 1 333 1 
53 1 336 1 160 1 209 2 7 1 103 1 135 2 78 1 191 2 236 1 345 2 323 1 139 4 61 1 15 2 241 1 64 1 172 2 108 1 309 1 44 1 28 2 
271 1 53 1 300 1 336 1 207 1 54 1 158 1 320 1 97 1 160 1 209 2 33 1 103 1 135 2 77 1 361 1 78 1 236 1 191 2 323 1 345 2 139 4 61 1 144 1 347 1 167 1 15 2 284 1 64 1 241 1 172 2 108 1 217 1 309 1 42 1 44 1 28 2 
298 1 53 1 160 1 97 1 209 1 7 1 103 1 135 1 78 1 236 1 191 2 323 1 345 1 366 1 139 3 61 1 15 2 167 1 16 1 64 1 241 1 168 1 286 1 19 1 172 1 108 1 309 1 44 1 28 1 
72 1 297 1 356 1 228 1 53 2 272 1 336 3 186 1 274 2 254 1 160 2 209 10 191 9 236 3 58 1 323 3 139 19 367 1 61 3 15 4 146 1 241 3 64 3 85 2 108 3 309 2 67 1 44 2 117 2 28 6 
72 1 297 2 228 1 53 1 336 1 186 2 274 2 254 1 133 1 160 1 209 8 340 2 233 1 236 1 191 10 58 1 323 1 139 18 239 1 367 2 61 2 15 2 64 1 241 2 85 1 108 2 112 1 309 1 201 1 67 2 44 1 117 2 120 1 28 2 
72 1 297 3 356 1 228 1 53 2 272 1 336 2 186 3 274 3 254 1 133 1 160 2 209 17 340 1 233 1 191 15 236 4 58 1 323 4 239 1 139 32 367 2 61 4 15 4 241 4 64 3 85 1 108 4 112 1 309 2 201 1 67 1 44 2 117 4 119 1 120 1 28 5 
72 1 297 3 356 1 228 1 53 2 272 1 336 3 186 3 274 3 254 1 133 1 160 2 209 15 340 2 233 1 191 16 236 3 58 1 323 3 239 1 139 31 367 2 61 4 15 4 241 4 64 3 85 1 108 4 112 1 309 2 201 1 67 1 44 2 117 4 119 1 120 1 28 6 
72 1 297 4 228 1 53 1 272 2 184 1 336 7 337 1 186 2 274 3 254 1 133 1 160 1 209 24 340 1 233 1 191 26 236 8 58 1 323 7 239 1 139 50 367 1 61 7 15 2 241 7 64 7 85 1 86 1 171 1 108 8 112 1 309 1 201 1 290 2 67 1 44 1 117 4 177 1 222 1 120 1 28 14 
199 1 55 1 232 1 83 1 46 1 364 1 136 1 279 1 344 1 250 1 
219 1 318 1 
21 1 40 1 55 1 232 1 63 1 83 1 46 1 364 1 344 1 
9 1 226 1 
39 1 302 1 349 1 
124 1 335 1 83 1 129 2 199 1 6 1 55 1 375 1 377 1 232 1 312 1 46 1 364 1 136 1 70 1 91 1 344 1 250 1 
124 1 335 1 83 1 129 2 199 1 6 1 55 1 375 1 377 1 232 1 312 1 46 1 364 1 136 1 70 1 91 1 344 1 250 1 
124 1 335 1 83 1 129 2 199 1 6 1 55 1 375 1 377 1 232 1 312 1 46 1 364 1 136 1 70 1 91 1 344 1 250 1 
39 1 9 1 226 1 
39 1 9 1 226 1 
302 1 349 1 
39 1 302 1 349 1 
341 1 315 1 
124 1 2 1 335 1 315 1 318 1 129 1 97 2 6 1 55 1 134 1 232 1 341 1 257 1 364 1 344 1 366 2 167 2 282 1 16 2 83 1 286 2 264 1 375 1 291 1 68 1 46 1 219 1 
271 2 251 1 53 1 160 1 97 2 76 1 98 1 209 1 7 1 103 1 33 2 361 2 77 2 78 1 191 1 139 2 347 2 144 1 167 2 15 2 62 1 145 1 148 1 84 1 286 2 198 1 173 1 217 2 309 1 42 1 44 1 90 1 45 2 151 1 178 1 294 1 
347 1 259 1 260 1 271 2 74 1 94 1 320 1 307 1 75 1 351 1 161 1 57 1 42 1 33 2 77 2 164 2 292 1 380 1 152 1 
259 1 347 1 260 1 271 1 94 1 307 1 75 1 351 1 161 1 57 1 33 1 42 1 77 1 164 2 342 1 380 1 152 1 
50 1 347 1 271 1 242 1 307 1 217 1 42 1 33 1 361 1 77 1 292 1 277 1 333 1 181 1 
347 1 259 1 260 1 271 1 74 1 94 1 307 1 75 1 351 1 161 1 57 1 33 1 42 1 77 1 164 2 292 1 380 1 152 1 
293 1 
271 1 298 2 53 1 300 1 207 1 54 1 97 3 160 1 209 1 134 1 33 1 103 1 77 1 361 1 78 1 139 1 366 2 15 2 167 3 347 1 144 1 16 2 284 1 286 2 169 1 173 1 376 1 217 1 309 1 42 1 44 1 333 1 
295 2 92 1 107 2 147 1 337 1 187 1 377 4 66 2 100 1 362 1 256 2 104 1 213 4 47 1 27 2 
377 1 208 1 107 1 256 1 104 1 220 1 203 1 
295 1 92 1 124 1 227 1 187 1 189 1 6 1 234 1 362 1 256 1 104 1 213 1 107 1 147 1 377 2 110 1 43 1 
154 1 295 6 92 4 253 2 159 2 6 5 162 1 100 2 256 2 104 9 106 2 213 12 61 2 347 4 107 8 262 1 18 2 108 2 217 3 66 6 116 2 220 1 118 2 27 6 124 5 271 3 227 5 187 4 128 1 229 2 320 1 33 3 361 10 77 3 362 4 236 2 137 3 323 2 144 3 194 2 370 1 147 4 241 2 196 2 331 2 377 8 89 2 42 3 43 3 247 2 333 1 47 1 203 1 205 1 
295 3 124 1 92 2 297 1 355 1 227 1 186 1 187 2 133 1 6 1 100 1 233 1 362 2 256 2 104 8 236 2 213 6 323 2 239 1 61 2 107 5 329 1 147 2 241 2 108 2 89 1 377 5 112 1 43 1 66 5 247 2 117 1 47 1 27 5 120 1 
92 1 124 1 298 1 184 1 187 1 319 1 131 1 97 1 6 1 362 1 104 2 236 1 366 1 325 1 141 1 167 1 107 2 16 1 147 1 170 1 286 1 86 1 108 2 65 1 89 1 376 1 247 2 177 1 
92 1 107 1 147 1 187 1 377 1 362 1 256 1 104 1 220 1 203 1 
295 5 61 2 107 5 241 2 18 1 108 2 89 1 377 5 66 5 247 2 104 5 236 2 213 10 27 5 323 2 
6 1 377 1 124 1 43 1 256 1 227 1 
1 1 92 2 124 3 50 1 271 4 316 1 227 4 187 1 6 3 162 1 33 4 100 2 361 1 77 4 362 2 363 1 104 2 13 1 347 1 107 2 370 2 147 2 242 1 287 1 217 1 42 1 43 2 333 2 47 2 
232 1 311 1 364 1 
232 1 311 1 364 1 
289 1 232 1 341 1 364 1 136 1 
232 1 311 1 364 1 
8 1 232 1 364 1 
8 1 232 1 364 1 
8 1 232 1 364 1 
232 1 364 1 
46 1 344 1 
53 1 184 1 336 2 131 1 160 1 209 5 340 1 191 5 236 2 139 10 15 2 64 2 86 1 171 1 108 2 309 1 44 1 177 1 222 1 28 4 
139 6 184 1 336 2 86 1 337 1 171 1 108 1 209 3 208 1 177 1 191 3 236 1 222 1 28 2 
139 4 61 1 15 2 53 1 241 1 64 1 336 1 108 1 160 1 209 2 309 1 44 1 236 1 191 2 11 1 323 1 28 2 
139 7 61 1 297 1 272 1 241 1 64 1 336 1 186 1 108 1 209 4 117 2 236 1 191 3 323 1 28 2 
297 2 272 1 184 1 336 3 131 1 209 10 340 1 236 4 191 10 323 2 139 20 61 2 241 2 64 2 86 1 265 1 171 1 108 4 290 1 117 2 177 1 222 1 28 5 
139 1 209 1 117 1 
139 1 297 1 191 1 
139 6 61 1 15 2 53 1 241 1 64 1 336 2 18 1 108 1 160 1 209 3 309 1 44 1 191 3 236 1 11 1 323 1 28 3 
297 1 53 1 336 1 186 1 254 1 160 1 133 1 209 6 233 1 191 6 236 2 323 2 139 12 239 1 61 2 15 2 64 1 241 2 108 2 309 1 112 1 44 1 117 1 120 1 28 2 
139 6 64 1 184 1 336 1 86 1 108 1 209 3 191 3 236 1 177 1 28 2 
139 1 209 1 308 1 340 1 
139 10 15 2 53 1 64 2 184 2 336 3 86 1 254 1 131 1 108 2 160 1 209 5 309 1 44 1 177 2 191 5 236 2 28 5 
139 2 15 2 53 1 241 1 64 1 254 1 108 1 160 1 309 1 44 1 191 2 28 1 
139 4 61 1 15 2 53 1 241 1 64 1 336 1 254 1 108 1 160 1 209 2 309 1 44 1 236 1 191 2 323 1 28 2 
139 3 15 4 356 1 53 2 64 1 184 1 336 1 254 1 160 2 308 1 209 2 309 2 44 2 340 1 177 1 191 1 28 2 
297 3 356 1 53 3 184 1 336 3 186 1 254 1 131 1 160 3 209 12 340 1 360 1 105 1 191 12 236 4 11 1 323 2 139 24 61 2 15 6 241 2 64 3 86 1 171 1 108 4 309 3 288 1 44 3 117 3 177 1 222 1 28 6 
297 1 53 1 184 1 336 2 337 1 186 1 254 1 160 1 209 4 236 1 191 4 139 8 239 1 15 2 86 1 171 1 108 1 309 1 44 1 117 1 177 1 222 1 28 2 
297 1 53 2 272 1 184 1 336 2 337 1 186 1 254 1 160 2 209 5 236 1 191 6 11 1 139 11 239 1 61 1 15 4 241 1 64 1 86 1 171 1 108 2 309 2 44 2 117 2 177 1 222 1 28 3 
297 1 53 2 336 1 186 1 254 1 160 2 133 1 209 7 233 1 340 1 191 6 236 2 11 1 323 2 139 13 239 1 61 2 15 4 64 1 241 2 108 2 112 1 309 2 44 2 117 1 120 1 28 2 
297 1 53 2 336 1 186 1 254 1 160 2 133 1 209 4 340 1 233 1 191 7 236 1 11 1 323 1 139 11 239 1 61 2 15 4 64 1 241 2 108 2 309 2 112 1 44 2 117 1 120 1 28 2 
297 1 53 1 184 1 336 2 337 1 186 1 254 1 160 1 209 4 236 1 191 4 139 8 239 1 15 2 86 1 171 1 108 1 309 1 44 1 117 1 177 1 222 1 28 2 
297 1 53 1 336 1 186 1 254 1 160 1 133 1 209 6 233 1 191 6 236 2 323 2 139 12 239 1 61 2 15 2 64 1 241 2 108 2 309 1 112 1 44 1 117 1 120 1 28 2 
297 1 53 2 336 1 186 1 254 1 133 1 160 2 209 5 233 1 340 2 191 7 236 1 11 1 323 1 139 12 239 1 61 2 15 4 64 1 241 2 108 2 112 1 309 2 44 2 117 1 120 1 28 2 
297 1 356 1 53 2 336 2 186 1 254 1 133 1 160 2 209 5 233 1 340 2 191 7 236 1 323 1 139 12 239 1 61 2 15 4 64 2 241 2 108 2 112 1 309 2 44 2 117 1 120 1 28 4 
139 7 64 3 184 3 336 3 86 1 171 2 108 1 209 4 236 1 177 3 191 3 222 1 28 6 
297 1 356 1 53 2 336 1 186 1 254 1 133 1 160 2 209 5 233 1 340 2 191 7 236 1 323 1 139 12 239 1 61 2 15 4 64 1 241 2 108 2 112 1 309 2 44 2 117 1 120 1 28 2 
97 1 14 1 134 1 167 1 286 1 237 1 204 1 
14 1 49 1 143 1 167 1 286 1 20 1 97 1 134 1 321 1 248 1 237 1 204 1 
217 1 208 1 50 1 347 1 42 1 33 1 271 1 361 1 77 1 242 1 333 1 
366 1 144 1 347 1 167 2 271 1 16 1 284 1 286 1 207 1 97 2 217 1 134 1 33 1 42 1 332 1 361 1 77 1 333 1 
271 1 207 1 127 1 273 1 319 1 97 2 134 1 33 1 77 1 361 3 366 1 167 2 347 1 144 2 194 1 370 1 16 2 284 1 286 2 196 1 217 2 42 1 332 1 
271 2 207 1 5 1 127 1 273 1 319 1 97 2 134 1 33 2 77 2 361 3 366 1 167 2 347 1 144 2 194 1 370 1 16 2 286 2 196 1 217 2 42 1 332 1 25 1 
183 1 124 2 271 3 227 1 229 1 6 2 190 1 33 3 361 4 77 3 256 1 137 1 347 1 144 1 194 1 370 1 196 1 331 1 217 1 377 1 42 1 333 1 25 1 
124 2 194 1 144 1 347 1 370 1 271 3 227 1 229 1 196 1 6 2 331 1 377 1 217 1 33 3 42 1 77 3 361 4 256 1 333 1 25 1 106 1 137 1 
31 1 347 1 42 1 33 1 271 1 77 1 
60 1 144 2 347 4 271 3 148 1 262 1 243 1 320 1 198 2 76 1 217 3 33 3 42 2 90 1 77 3 361 3 202 1 178 2 333 2 
271 1 53 2 184 1 300 1 336 2 207 1 337 1 158 1 54 1 320 1 160 2 97 2 275 1 209 3 7 1 134 2 103 2 33 1 135 1 361 1 77 1 78 2 236 1 191 3 345 1 139 6 366 1 144 1 347 1 167 2 15 4 16 1 284 1 84 1 286 1 86 1 171 1 172 1 108 1 217 1 309 2 42 1 44 2 332 1 177 1 222 1 28 2 
92 2 124 3 271 1 227 2 253 1 187 2 229 1 6 3 162 1 33 1 77 1 361 2 256 1 362 2 104 1 106 1 137 1 107 1 147 2 331 1 377 1 43 1 116 1 68 1 220 1 333 1 118 1 203 1 
144 1 347 2 271 2 262 1 320 1 31 1 331 1 217 1 33 2 42 1 77 2 361 2 205 1 
123 1 50 1 347 1 271 4 242 1 320 1 217 1 33 4 42 1 77 4 361 1 333 1 25 1 
144 1 347 2 370 1 271 2 82 1 198 1 76 1 217 1 33 2 42 1 90 1 77 2 361 1 178 1 
347 1 42 1 33 1 260 1 271 1 94 1 77 1 164 1 380 1 333 1 
347 2 144 1 271 2 148 1 198 1 320 1 217 2 76 1 42 1 33 2 90 1 77 2 361 2 178 1 152 1 294 1 
347 2 144 1 271 2 148 1 198 1 320 1 217 2 76 1 42 1 33 2 90 1 77 2 361 2 202 1 178 1 333 1 
347 2 144 1 271 2 148 1 198 1 320 1 217 2 76 1 42 1 33 2 90 1 77 2 361 2 178 1 333 1 249 1 
366 1 144 1 347 1 167 2 271 1 16 1 286 1 207 1 5 1 97 2 217 1 134 1 33 1 42 1 332 1 361 1 77 1 333 1 
60 1 217 1 347 2 42 1 144 1 33 1 271 1 370 1 361 1 77 1 262 1 178 1 198 1 
303 1 216 1 134 1 138 1 12 1 
303 2 296 1 216 2 124 2 273 1 127 1 319 1 88 1 229 1 6 2 175 1 377 1 134 1 102 1 256 1 68 1 138 1 166 1 12 2 
303 1 167 1 251 1 286 1 97 1 98 1 151 1 138 1 12 1 
296 1 138 1 166 1 
306 1 140 1 258 1 270 3 176 1 81 3 212 1 352 1 96 1 280 1 230 1 
324 1 270 1 210 1 81 1 212 1 280 1 
280 1 230 1 
306 1 208 1 280 1 230 1 
306 1 140 1 270 1 81 1 96 1 280 1 230 1 
41 1 81 1 185 1 
258 1 140 1 346 1 270 3 81 3 96 1 230 1 30 1 306 1 218 1 352 2 280 1 
306 1 301 1 140 1 270 2 81 2 212 1 96 1 280 1 230 1 
258 1 140 1 270 1 260 1 81 1 96 1 57 1 246 1 210 1 164 1 280 1 
140 1 258 1 270 1 81 1 96 1 280 1 230 1 
306 1 140 1 258 1 270 1 81 1 96 1 230 2 
258 1 140 2 270 2 81 2 96 2 230 1 373 1 35 1 313 1 280 1 
258 1 140 1 324 1 270 3 81 3 285 1 96 1 230 1 306 1 210 1 176 1 212 2 280 2 
258 1 140 1 270 2 260 1 81 2 96 1 230 1 306 1 351 1 57 1 164 2 212 1 380 1 280 1 269 1 
258 1 140 2 324 1 270 4 93 1 81 4 96 2 230 1 306 1 301 1 210 1 212 2 280 2 
306 1 140 1 258 1 270 1 81 1 96 1 280 1 230 1 
140 1 324 1 346 1 270 4 81 4 96 1 230 2 306 2 32 1 218 1 210 1 212 2 352 1 280 3 
258 1 140 1 270 2 52 1 81 2 96 1 230 1 266 1 306 1 212 1 280 1 365 1 
258 1 140 1 346 1 270 3 81 3 96 1 230 1 306 1 218 2 352 2 280 1 314 1 
29 1 348 2 235 1 280 2 
140 1 258 1 270 1 163 1 81 1 96 1 
306 1 140 1 258 1 270 2 176 1 81 2 212 1 96 1 280 1 230 1 
69 1 
306 1 140 1 258 1 270 1 81 1 96 1 280 1 230 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 111 105 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
153 2 7 1 300 2 201 3 302 1 38 1 71 1 163 3 139 1 32 1 377 1 72 2 340 1 
300 5 201 9 302 3 327 1 149 1 4 2 32 1 227 1 340 2 363 1 153 2 278 1 365 1 7 6 38 1 313 1 65 2 232 1 347 1 373 2 314 2 71 1 163 9 139 4 377 1 264 1 72 2 19 1 
300 5 201 9 302 3 327 1 149 1 4 2 32 1 227 1 340 2 363 1 153 2 278 1 365 1 7 6 38 1 313 1 65 2 232 1 347 1 373 2 314 2 71 1 163 9 139 4 377 1 264 1 72 2 19 1 
300 6 201 10 302 4 327 1 149 1 4 2 32 1 227 1 340 2 363 1 153 2 278 1 365 1 7 7 38 1 313 1 65 2 232 1 347 1 373 2 314 2 71 1 163 10 139 5 377 1 264 1 72 2 19 1 
300 4 201 7 302 2 327 1 149 1 4 2 32 1 340 2 363 1 153 2 278 1 365 1 7 4 38 1 313 1 65 1 232 1 347 1 373 2 314 2 71 1 163 7 139 3 377 1 264 1 72 2 19 1 
153 1 7 3 300 3 302 1 201 4 65 2 347 1 373 1 149 1 314 1 71 1 4 1 163 4 139 2 32 1 377 1 227 1 72 1 
153 1 154 1 300 1 201 2 232 1 373 1 316 1 71 1 163 2 4 1 32 1 377 1 72 1 264 1 166 1 340 1 
153 2 278 1 7 7 300 5 201 9 37 1 302 3 313 1 38 1 65 2 215 1 347 1 373 1 149 1 314 1 71 1 4 1 163 9 139 4 32 1 377 1 227 1 72 2 340 1 
153 2 278 1 7 7 300 5 201 9 37 1 302 3 313 1 38 1 65 2 215 1 347 1 373 1 149 1 314 1 71 1 4 1 163 9 139 4 32 1 377 1 227 1 72 2 340 1 
221 1 120 1 282 1 131 1 244 1 182 1 370 1 99 1 333 1 16 1 305 1 186 1 102 1 251 1 
259 1 
99 1 259 1 194 1 46 1 170 1 182 2 102 2 234 1 
194 1 280 2 107 1 301 2 156 1 202 1 182 5 110 1 234 2 235 1 148 1 99 2 259 1 46 1 101 2 57 1 350 1 102 5 294 1 
259 1 194 1 380 1 
259 1 206 2 269 1 
221 1 374 1 333 2 305 2 244 2 131 2 282 2 251 2 
220 1 319 1 221 1 267 2 322 1 244 2 52 1 145 2 75 1 53 2 25 1 172 1 273 1 357 2 223 1 333 3 305 3 274 1 251 2 178 2 62 1 131 2 282 2 109 1 346 1 285 1 158 1 256 1 66 1 236 1 374 1 14 1 70 1 135 1 290 1 140 1 297 1 
221 1 333 1 120 1 305 1 16 1 244 1 131 1 282 1 251 1 370 1 
143 1 194 1 320 1 121 1 244 1 255 1 182 1 370 1 304 1 188 1 259 1 333 1 305 1 102 1 
194 1 320 1 121 1 282 1 131 1 244 1 255 1 182 2 370 1 304 1 259 1 333 1 305 1 102 2 251 1 
99 1 272 1 182 1 102 1 234 1 
221 1 120 1 244 1 99 1 333 1 305 1 102 2 251 1 194 1 282 1 131 1 182 2 234 1 370 1 259 1 46 1 16 1 186 1 138 1 
182 1 102 1 234 1 
143 1 35 1 131 4 244 5 282 1 312 1 333 5 374 1 305 5 115 1 117 1 251 4 379 1 296 2 
333 2 34 1 120 1 305 2 244 2 131 2 251 2 370 1 
35 1 244 2 282 1 131 1 216 1 333 2 374 2 305 2 251 1 
190 1 231 1 165 1 
178 1 220 1 21 1 267 1 52 1 75 1 53 1 25 1 346 1 158 1 66 1 374 1 333 1 305 1 70 1 274 1 
374 1 380 1 
220 1 178 1 267 1 131 1 244 1 52 1 75 1 346 1 25 1 53 1 158 1 66 1 333 2 70 1 305 2 190 1 274 1 117 1 251 1 296 1 
374 1 333 3 305 3 282 1 244 3 131 3 251 3 296 1 
333 1 120 1 305 1 244 1 131 1 251 1 370 1 
333 1 35 1 305 1 244 1 131 1 282 1 251 1 216 1 370 1 
220 1 221 1 320 1 121 1 267 1 322 1 244 3 52 1 145 2 75 1 25 1 53 1 2 1 172 1 273 1 357 1 304 1 223 1 333 4 305 4 274 1 251 3 102 1 178 1 62 1 35 1 255 1 282 2 131 3 182 1 346 1 158 1 285 1 256 1 370 1 66 1 374 1 14 1 70 1 289 1 117 1 140 1 297 1 296 1 
143 1 374 1 333 2 305 2 244 2 131 1 312 1 251 1 296 1 
320 1 35 1 121 1 282 1 131 3 244 3 255 1 182 1 370 1 304 1 259 1 333 3 305 3 117 1 289 1 102 1 251 3 177 1 296 2 
333 2 35 1 305 2 244 2 131 2 282 1 190 1 251 2 231 1 296 1 
178 1 220 1 267 1 52 1 75 1 53 1 25 1 346 1 158 1 66 1 374 1 333 1 305 1 70 1 274 1 
178 1 220 1 267 1 52 1 75 1 53 1 346 1 66 1 260 1 374 1 333 1 305 1 70 1 274 1 351 1 
319 2 222 1 145 2 172 1 273 1 357 4 77 1 223 1 332 1 80 1 190 2 225 1 309 1 229 1 84 1 129 1 231 2 256 1 14 1 165 2 140 2 297 1 
333 1 34 1 305 1 244 1 131 1 251 1 370 1 304 1 
103 1 40 1 372 1 
249 1 167 1 243 1 349 1 40 2 372 2 
40 1 372 1 
40 1 372 1 
249 1 243 1 
249 1 243 1 
249 1 243 1 
185 1 40 1 372 1 
185 1 40 1 372 1 
185 1 40 1 372 1 
40 1 372 1 98 1 
40 1 372 1 98 1 
40 1 372 1 98 1 
244 2 355 1 333 2 335 1 305 2 174 1 251 2 102 1 275 1 103 1 338 1 341 1 155 1 131 2 182 1 132 1 10 1 40 1 372 1 41 1 374 1 15 1 114 1 291 1 
298 1 155 3 367 1 182 2 132 2 204 1 10 2 40 2 195 1 372 2 41 1 55 2 259 1 335 2 56 1 136 1 349 1 102 2 275 2 
314 1 23 1 133 2 373 2 166 1 
314 1 4 1 373 1 
4 1 373 1 166 1 
33 1 314 2 23 1 133 1 373 3 166 1 
162 1 314 1 23 1 133 1 373 2 166 1 
222 1 92 2 269 1 301 1 354 1 355 1 202 3 77 1 148 1 99 4 206 3 250 2 101 1 31 1 337 1 102 5 309 1 193 1 229 1 280 1 194 1 127 1 212 1 182 5 234 1 235 2 42 2 259 2 15 1 88 1 46 1 114 1 
222 3 92 6 200 1 269 3 301 2 354 1 51 1 202 8 272 5 248 1 77 3 99 7 148 1 206 9 250 6 101 2 337 2 81 1 102 9 309 3 193 3 229 3 194 1 280 2 127 2 182 9 110 1 234 6 235 6 259 5 68 1 315 1 114 4 46 1 219 5 
222 1 92 2 269 2 301 1 202 3 77 1 99 2 206 4 101 1 250 2 337 1 102 3 309 1 193 1 229 1 194 1 280 1 127 1 212 1 182 3 110 1 235 2 42 1 259 3 88 1 114 1 
222 2 92 4 200 1 269 3 301 1 51 1 202 5 77 2 99 3 206 7 250 4 101 1 337 1 102 4 309 2 193 2 229 2 194 1 280 1 127 1 212 1 182 4 110 1 235 4 42 2 259 4 68 1 88 1 114 2 
220 1 70 1 274 1 
274 1 96 1 
83 1 
274 1 146 1 380 1 
168 1 274 1 
220 1 274 1 
220 1 184 1 70 1 274 3 146 2 11 1 
142 1 277 1 319 4 222 1 268 1 144 1 369 1 24 1 357 7 77 1 189 3 258 2 124 1 218 1 261 1 252 1 362 2 140 3 
319 19 142 5 222 5 266 2 268 1 144 2 270 1 145 4 203 1 172 2 247 4 273 2 357 37 77 5 124 1 189 8 252 1 362 3 309 4 208 4 277 2 193 4 229 4 281 1 369 1 256 2 258 3 286 1 218 2 261 2 116 1 263 1 292 1 378 1 140 18 297 2 
319 5 142 1 222 1 266 1 144 1 268 1 145 4 172 2 273 2 357 9 77 1 27 1 189 4 124 1 252 1 362 2 277 1 256 2 44 1 258 3 218 1 261 1 140 4 297 2 
142 1 277 1 319 4 222 1 144 1 268 1 369 1 357 7 77 1 189 3 258 2 124 1 218 1 261 1 252 1 362 2 140 3 
142 1 277 1 319 4 222 1 144 1 268 1 369 1 357 7 77 1 189 3 258 2 124 1 218 1 261 1 252 1 362 2 140 3 
220 1 153 1 178 1 364 2 90 2 241 1 267 1 201 1 271 1 52 1 346 1 53 1 122 2 13 1 66 1 28 1 274 1 163 1 5 1 48 1 199 1 72 1 340 2 
90 1 267 1 201 1 323 1 53 1 122 1 4 1 340 1 178 1 153 1 33 1 364 1 106 1 108 1 311 1 254 1 9 1 346 1 373 2 66 1 314 1 238 1 71 1 163 1 72 1 166 1 
90 1 300 1 267 1 201 2 323 1 53 1 122 1 4 1 32 1 340 1 178 1 153 1 33 1 364 1 106 1 209 1 7 1 311 1 254 1 9 1 346 1 373 2 66 1 314 1 238 1 71 1 163 2 377 1 72 1 166 1 
90 1 300 1 267 1 201 3 323 1 53 1 122 1 4 1 32 1 340 1 33 1 178 1 153 1 364 1 106 1 7 2 108 1 130 1 254 1 9 1 346 1 373 2 66 1 314 1 238 1 163 3 48 1 377 1 72 1 166 1 
90 1 300 1 267 1 201 2 53 1 122 1 4 1 32 1 340 1 178 1 33 1 364 1 106 1 7 2 108 1 130 1 254 1 346 1 373 2 66 1 314 1 238 1 163 2 377 1 166 1 
61 1 
220 1 143 1 93 1 320 1 267 2 50 1 321 2 269 2 52 2 53 2 148 1 188 1 333 1 101 1 151 1 274 1 58 1 102 5 194 1 280 1 346 1 234 6 235 2 13 1 66 1 197 2 17 1 295 2 242 2 121 1 301 1 244 1 202 2 304 1 123 1 206 2 28 1 306 1 305 1 361 1 82 1 176 2 178 2 310 1 126 1 127 1 128 4 366 1 255 1 182 5 371 2 370 1 259 2 46 3 47 2 
143 1 320 1 121 1 50 1 242 1 170 1 244 1 304 1 188 1 123 1 333 1 305 1 58 1 361 1 102 3 310 1 128 2 255 1 182 3 370 1 234 2 46 1 
143 1 320 1 121 1 50 1 170 1 244 1 304 1 188 1 123 1 333 1 305 1 58 1 361 1 102 3 310 1 194 1 128 3 255 1 182 3 234 1 370 1 259 1 197 1 46 1 
143 1 320 1 121 1 50 1 242 1 170 1 244 1 304 1 188 1 123 1 333 1 305 1 58 1 361 1 102 3 176 1 310 1 194 1 128 3 255 1 182 3 370 1 234 2 259 1 197 1 46 1 
310 1 105 1 143 1 320 1 242 2 50 1 121 1 128 2 170 1 255 1 244 1 182 3 111 1 370 1 234 3 304 1 123 1 188 1 333 1 305 1 46 1 58 1 102 3 361 1 176 2 192 1 
143 1 320 1 50 1 269 2 321 2 148 1 188 1 333 1 101 1 58 1 102 4 280 1 194 1 234 4 235 1 197 2 295 2 121 1 242 2 301 1 244 1 202 1 304 1 123 1 206 2 305 1 306 1 361 1 82 1 176 2 310 1 128 4 255 1 366 1 182 4 370 1 371 2 259 2 46 2 47 2 
143 1 320 1 242 2 121 1 50 1 321 2 269 2 301 1 244 1 202 1 304 1 148 1 188 1 123 1 333 1 3 1 306 1 305 1 101 1 58 1 361 1 102 4 82 1 176 2 310 1 194 1 280 1 128 4 255 1 182 4 284 1 111 1 234 4 371 2 370 1 235 1 259 1 197 2 46 2 47 2 295 2 
143 1 320 1 242 2 121 1 50 1 321 2 269 2 301 1 244 1 202 1 304 1 148 1 188 1 123 1 333 1 3 1 306 1 305 1 101 1 58 1 361 1 102 4 82 1 176 2 310 1 194 1 280 1 128 4 255 1 182 4 284 1 111 1 234 4 371 2 370 1 235 1 259 1 197 2 46 2 47 2 295 2 
143 1 320 1 242 2 121 1 50 1 301 1 244 1 202 1 304 1 148 1 188 1 123 1 206 2 333 1 3 1 306 1 305 1 101 1 58 1 361 1 102 4 176 2 310 1 194 1 280 1 128 4 255 1 182 4 214 1 234 4 371 2 370 1 235 1 160 2 161 2 259 1 67 1 197 2 46 2 47 2 89 1 
143 1 320 1 121 1 50 1 242 3 321 2 269 2 301 1 244 1 202 1 304 1 148 1 188 1 123 1 333 1 3 1 306 1 101 1 305 1 58 1 361 1 102 4 82 1 176 3 310 1 105 1 194 1 280 1 128 5 255 1 182 4 284 1 111 1 371 2 370 1 234 5 235 1 259 1 197 3 46 2 47 2 295 2 
143 1 320 1 121 1 50 1 242 3 321 2 269 2 301 1 244 1 202 1 304 1 148 1 188 1 123 1 333 1 3 1 306 1 101 1 305 1 58 1 361 1 102 4 82 1 176 3 310 1 105 1 194 1 280 1 128 5 255 1 182 4 284 1 111 1 371 2 370 1 234 5 235 1 259 1 197 3 46 2 47 2 295 2 
143 1 320 1 50 1 148 1 188 1 333 1 101 1 58 1 102 4 280 1 194 1 234 4 235 1 160 2 161 2 197 2 121 1 242 2 301 1 244 1 202 1 304 1 123 1 206 2 305 1 306 1 361 1 176 2 310 1 128 4 255 1 366 1 182 4 214 1 370 1 371 2 259 1 46 2 47 2 
220 2 319 1 20 1 267 8 322 1 244 1 52 2 145 4 53 8 147 1 172 2 273 2 357 2 223 2 333 1 28 1 224 1 305 1 360 1 274 3 251 1 339 1 178 7 209 1 108 1 129 1 131 1 109 1 346 2 86 1 256 2 13 1 66 2 134 1 236 2 14 2 140 1 296 1 297 2 
119 1 319 1 222 1 244 1 145 2 172 1 273 1 357 3 77 1 223 1 333 1 305 1 190 1 251 1 309 1 193 1 229 1 35 1 131 1 282 1 231 1 256 1 14 1 293 1 165 1 140 2 297 1 
319 3 277 1 222 1 129 1 268 1 145 2 231 1 256 1 172 1 273 1 357 6 77 1 189 2 258 2 124 1 223 1 374 2 14 1 261 1 190 1 252 1 362 1 165 1 140 3 297 1 380 1 
142 1 319 8 222 2 322 1 203 1 145 4 172 2 247 3 273 2 357 14 77 1 189 1 223 1 150 1 190 11 309 2 208 3 193 2 229 1 109 1 231 4 256 2 286 1 374 1 14 2 69 1 262 1 263 1 293 1 165 11 140 6 297 2 
220 1 319 1 21 1 353 1 267 1 322 1 244 1 52 1 75 1 145 2 25 1 53 1 172 1 273 1 357 2 223 1 333 2 305 2 274 1 251 1 178 1 279 1 131 1 109 1 283 1 346 1 158 1 231 1 256 1 66 1 374 1 14 1 70 1 117 1 293 1 140 1 297 1 296 1 
220 2 319 10 142 4 222 3 267 3 268 1 322 1 52 1 145 6 53 3 273 3 189 6 223 3 333 3 274 2 190 7 191 1 277 1 193 2 6 1 229 2 108 1 109 1 346 2 285 2 158 2 231 7 66 2 14 3 70 2 239 2 117 1 293 1 165 7 296 1 297 3 244 1 75 2 25 2 172 3 357 20 77 3 124 1 29 2 305 3 251 1 252 1 362 1 309 2 178 3 210 2 180 1 131 1 256 3 258 2 374 2 45 2 261 1 140 10 
142 1 319 2 222 1 129 1 145 2 231 1 256 1 172 1 273 1 357 2 189 1 223 1 14 1 190 1 225 1 165 1 309 1 297 1 
84 1 229 1 129 1 145 2 231 1 256 1 172 1 273 1 357 2 77 1 223 1 14 1 190 1 165 1 140 2 297 1 
142 1 193 1 319 2 229 1 222 1 129 1 145 2 231 2 256 1 172 1 273 1 357 4 77 1 189 1 223 1 14 1 190 2 165 2 140 2 309 1 297 1 
142 1 319 2 222 1 145 2 231 1 86 1 256 1 172 1 273 1 357 2 189 1 223 1 14 1 190 1 225 1 165 1 309 1 297 1 
84 1 229 1 145 2 231 1 86 1 256 1 172 1 273 1 357 2 77 1 223 1 14 1 190 1 165 1 140 2 297 1 
193 1 319 2 229 1 222 1 145 2 231 2 86 1 256 1 172 1 273 1 357 4 77 1 223 1 14 1 190 2 165 2 140 2 309 1 297 1 
142 1 193 1 319 2 229 1 222 1 145 2 231 2 256 1 172 1 273 1 357 4 77 1 189 1 223 1 14 1 190 2 165 2 140 2 309 1 297 1 
220 1 319 1 267 1 322 1 52 1 75 1 145 2 25 1 53 1 172 1 273 1 357 2 223 1 333 1 305 1 274 1 178 1 109 1 346 1 158 1 285 1 256 1 66 1 374 1 14 1 70 1 140 1 297 1 
220 1 319 1 267 1 322 1 52 1 75 1 145 2 53 1 172 1 273 1 357 2 223 1 333 1 305 1 274 1 228 1 178 1 109 1 346 1 256 1 66 1 260 1 374 1 14 1 70 1 351 1 140 1 297 1 
142 1 193 1 319 2 229 1 222 1 145 2 231 2 256 1 172 1 273 1 357 4 77 1 189 1 223 1 14 1 190 2 293 1 165 2 140 2 309 1 297 1 
220 1 142 1 319 2 222 1 267 1 75 1 145 2 25 1 53 1 172 1 273 1 357 4 77 1 189 1 223 1 333 1 305 1 190 2 274 1 309 1 178 1 193 1 229 1 209 1 346 1 231 2 158 1 285 1 256 1 66 1 45 1 14 1 70 1 165 2 140 2 297 1 
142 1 319 2 222 1 244 1 145 2 172 1 273 1 357 3 77 1 189 1 223 1 333 1 305 1 190 1 251 1 308 1 309 1 193 1 229 1 35 1 131 1 282 1 231 1 256 1 14 1 293 1 165 1 140 1 297 1 
142 9 319 30 222 9 266 2 268 1 94 1 145 8 97 1 273 4 189 11 331 1 59 1 193 8 277 1 229 7 159 1 348 1 12 1 286 2 112 1 287 1 288 1 164 2 297 4 169 1 203 2 172 4 247 4 357 57 77 8 124 1 358 4 252 1 362 1 309 8 208 4 368 1 256 4 217 1 44 1 258 2 261 1 263 2 140 27 
142 2 319 14 266 2 222 3 169 1 94 1 145 6 97 1 172 3 273 3 247 2 357 26 77 2 189 3 331 1 358 4 309 3 208 2 193 3 229 2 368 2 159 1 256 3 217 1 348 1 12 1 258 1 44 1 286 2 287 2 288 1 164 1 140 12 297 3 
142 9 319 33 222 9 266 2 268 2 94 1 145 8 97 1 273 4 189 12 331 1 193 7 277 2 229 7 159 1 348 1 12 1 286 3 112 1 287 2 288 1 164 1 297 4 169 1 203 2 172 4 247 5 357 64 173 1 77 9 124 2 358 4 252 2 362 2 309 7 208 5 368 1 256 4 217 1 44 1 258 3 261 2 263 2 140 31 
319 28 142 7 266 2 222 8 268 1 169 1 94 1 203 2 145 8 97 1 172 4 247 4 273 4 357 53 77 7 124 1 189 9 331 1 358 4 252 1 362 1 309 7 208 4 277 1 193 7 229 6 368 1 159 1 256 4 217 1 348 1 12 1 258 2 44 1 112 1 286 2 287 1 261 1 288 1 263 2 164 1 140 25 297 4 
319 27 142 7 266 1 222 8 268 1 169 1 94 1 203 2 145 4 97 1 172 2 247 4 273 2 357 52 77 8 124 1 189 8 331 1 358 4 252 1 362 1 309 7 208 4 277 1 193 7 229 7 368 1 159 1 256 2 217 1 348 1 12 1 258 1 44 1 286 2 287 1 261 1 288 1 263 2 164 1 140 25 297 2 
185 1 326 1 
113 1 167 1 98 1 
298 1 335 1 349 1 95 1 132 1 275 1 204 1 10 1 40 1 372 1 
341 1 103 1 
335 1 230 1 175 1 132 1 275 1 26 1 10 1 40 1 372 1 
298 1 155 2 367 1 182 1 132 1 204 1 10 1 40 1 41 1 372 1 55 1 259 1 335 1 56 1 136 1 349 1 102 1 275 1 
298 1 155 2 367 1 182 1 132 1 204 1 10 1 40 1 41 1 372 1 55 1 259 1 335 1 56 1 136 1 349 1 102 1 275 1 
298 1 155 2 367 1 182 1 132 1 204 1 10 1 40 1 41 1 372 1 55 1 259 1 335 1 56 1 136 1 349 1 102 1 275 1 
167 1 185 1 326 1 
167 1 185 1 326 1 
113 1 98 1 
113 1 167 1 98 1 
174 1 338 1 
244 2 355 1 99 1 55 1 333 2 56 1 359 1 335 1 305 2 174 1 102 1 251 2 275 1 103 1 338 1 341 1 155 1 131 2 182 1 132 1 10 1 40 1 372 1 374 1 15 1 114 1 291 1 
220 1 319 1 20 1 91 1 267 2 322 1 244 2 145 2 53 2 76 1 172 1 273 1 357 2 223 1 333 2 305 2 274 1 226 1 178 2 179 1 211 1 109 1 346 1 256 1 66 1 134 1 236 2 14 1 293 1 140 1 297 1 
220 1 178 1 364 1 241 1 267 1 52 1 346 1 53 1 13 1 66 1 196 1 28 1 274 1 49 1 
33 1 178 1 364 1 267 1 108 1 323 1 254 1 74 1 53 1 346 1 329 1 373 2 66 1 314 1 238 1 4 1 49 1 166 1 
33 1 178 2 364 1 209 1 267 2 108 1 323 1 254 1 74 1 346 1 53 2 329 1 373 2 66 1 314 1 238 1 4 1 49 1 166 1 
33 1 178 1 364 1 267 1 108 1 323 1 254 1 74 1 53 1 346 1 373 2 66 1 314 1 238 1 4 1 118 1 166 1 
22 1 
280 1 194 1 107 1 301 1 156 1 202 1 235 1 148 1 259 1 101 1 
193 2 222 2 229 2 210 1 92 5 269 5 202 5 235 5 77 2 206 10 259 5 250 5 60 1 309 2 
259 1 194 1 46 1 182 1 102 1 234 1 
220 1 318 2 93 1 267 4 301 2 303 1 202 2 52 2 53 4 246 1 148 1 28 1 101 2 151 2 274 1 102 3 152 1 178 4 126 1 280 2 127 2 182 3 110 1 346 1 234 4 235 2 13 1 66 1 46 2 
259 1 194 1 107 1 156 1 202 1 235 1 380 1 
269 1 301 1 321 1 202 1 148 1 206 1 101 1 102 1 82 1 280 1 194 1 182 1 234 1 235 1 259 2 46 1 295 1 
220 1 265 1 73 1 299 1 168 2 121 1 0 1 267 1 301 2 202 1 52 1 146 1 53 1 205 1 148 2 101 2 274 4 102 2 178 1 280 2 8 1 127 1 182 2 346 1 234 2 11 1 66 2 46 1 70 1 18 1 
222 2 92 5 169 1 301 2 269 3 202 8 97 1 356 1 247 1 54 1 148 2 77 2 206 6 331 1 250 5 101 2 151 1 102 1 60 1 309 2 208 1 193 2 229 2 280 2 194 2 127 1 182 1 181 2 234 1 235 5 12 1 286 1 259 5 288 1 46 1 
221 1 222 2 120 1 301 1 244 1 202 2 148 1 77 1 333 1 305 1 101 1 336 1 102 1 251 1 60 1 252 1 277 1 280 1 282 1 131 1 181 2 182 1 284 1 370 1 235 2 261 1 16 1 186 1 
220 1 221 1 267 1 322 1 244 2 52 1 145 2 75 1 53 1 25 1 172 1 273 1 357 1 223 1 333 3 305 3 274 1 251 2 178 1 62 1 131 2 282 2 346 1 285 1 158 1 256 1 66 1 374 1 14 1 70 1 140 1 297 1 
92 2 280 1 194 2 127 1 269 2 301 1 202 1 235 2 148 1 206 4 259 4 250 2 101 1 151 1 362 1 
343 1 335 1 275 1 204 1 338 1 
79 1 335 1 275 1 
79 1 335 1 275 1 
79 1 335 1 275 1 
335 1 198 1 275 1 
335 1 198 1 275 1 
335 1 198 1 275 1 
335 1 275 1 
40 1 372 1 
277 2 142 2 319 5 222 2 145 2 172 1 256 1 273 1 357 10 77 2 44 1 258 3 189 5 261 2 336 1 252 1 140 5 297 1 
319 2 142 1 222 1 145 2 256 1 172 1 273 1 357 2 44 1 189 1 309 1 297 1 
193 1 319 2 142 1 229 1 222 1 145 2 256 1 172 1 273 1 357 4 77 1 189 1 44 1 140 2 309 1 297 1 
277 1 142 1 319 1 266 1 270 1 145 6 256 3 172 3 273 3 357 3 44 1 258 1 189 2 112 1 261 1 140 2 297 3 
319 20 142 7 266 2 222 6 268 1 270 1 145 10 203 1 172 5 247 4 273 5 357 41 77 6 124 1 189 11 252 2 362 1 309 4 208 4 277 3 104 1 193 4 229 4 281 1 256 5 258 4 44 1 286 1 112 1 261 3 116 1 263 1 378 1 140 21 297 5 
208 1 277 1 319 4 222 1 268 1 169 1 145 2 256 1 172 1 273 1 247 1 357 8 77 1 189 2 258 2 124 1 44 1 286 1 261 1 252 1 362 1 140 4 297 1 
319 6 142 1 222 2 268 1 169 1 145 4 172 2 247 2 273 2 357 11 77 1 124 1 189 3 252 1 362 1 309 1 208 1 277 1 104 1 193 1 256 2 258 2 44 1 286 1 261 1 263 1 140 5 297 2 
142 1 319 9 222 3 266 1 268 1 169 1 145 6 172 3 97 1 247 1 273 3 357 19 77 3 124 1 189 4 331 1 252 1 362 1 309 2 208 1 277 1 104 1 193 2 229 2 256 3 12 1 44 1 258 3 286 1 261 1 288 1 140 10 297 3 
319 10 142 2 266 1 222 3 268 1 169 1 145 6 172 3 97 1 247 1 273 3 357 17 77 2 124 1 189 4 331 1 252 1 362 1 309 2 208 1 277 1 104 1 193 2 229 1 256 3 12 1 258 2 44 1 286 1 261 1 288 1 140 7 297 3 
208 1 277 1 319 4 222 1 268 1 169 1 145 2 256 1 172 1 273 1 247 1 357 8 77 1 189 2 258 2 124 1 44 1 286 1 261 1 252 1 362 1 140 4 297 1 
319 6 142 1 222 2 169 1 145 2 172 1 97 1 247 1 273 1 357 12 77 2 189 1 331 1 309 2 208 1 193 2 229 2 256 1 12 1 44 1 286 1 288 1 140 6 297 1 
142 2 319 10 222 3 266 2 268 1 169 1 145 8 97 1 172 4 247 1 273 4 357 18 77 2 124 1 189 5 331 1 252 1 362 1 309 2 208 1 277 1 104 1 193 2 229 1 256 4 12 1 44 1 258 3 286 1 261 1 288 1 140 8 297 4 
319 7 142 2 266 1 222 2 169 1 145 6 172 3 97 1 247 1 273 3 357 11 77 1 189 2 331 1 309 2 208 1 193 2 229 1 256 3 12 1 44 1 286 1 112 1 288 1 140 4 297 3 
277 3 142 3 319 3 222 1 268 2 357 7 77 1 124 1 258 3 189 6 261 3 252 1 140 4 
142 1 319 10 222 3 266 2 268 1 169 1 145 8 97 1 172 4 247 1 273 4 357 18 77 2 124 1 189 4 331 1 252 1 362 1 309 2 208 1 277 1 193 2 229 1 256 4 12 1 44 1 258 3 286 1 112 1 261 1 288 1 140 8 297 4 
319 4 142 1 277 1 222 1 266 1 268 1 145 4 256 2 172 2 273 2 357 8 77 1 189 3 258 2 124 1 261 1 252 1 362 1 140 4 297 2 
77 1 319 3 189 2 258 2 277 1 124 1 222 1 261 1 268 1 252 1 362 1 140 3 357 6 380 1 
104 1 193 1 319 2 222 1 229 1 145 2 256 1 172 1 273 1 357 4 77 1 140 2 309 1 297 1 
208 2 319 6 193 2 142 2 229 2 222 2 203 1 247 2 357 12 77 2 189 2 286 1 263 1 140 6 309 2 
142 5 319 14 222 4 266 2 268 1 270 1 203 1 145 4 172 2 247 2 273 2 357 30 77 4 124 1 189 10 336 1 252 2 362 1 309 2 208 2 277 4 193 2 229 2 256 2 258 5 261 4 69 1 263 1 140 16 297 2 
140 1 247 1 357 1 
208 1 319 1 357 1 
104 1 193 1 319 3 142 1 222 1 229 1 210 1 145 2 172 1 256 1 273 1 357 6 77 1 189 1 140 3 309 1 297 1 
319 6 142 1 222 2 169 1 145 2 172 1 97 1 247 1 273 1 357 12 77 2 189 1 331 1 309 2 208 1 193 2 229 2 256 1 12 1 44 1 286 1 288 1 140 6 297 1 
319 3 277 1 142 1 222 1 357 6 77 1 258 1 189 2 261 1 252 1 140 3 
319 1 142 1 277 1 266 1 268 1 270 1 145 2 256 1 172 1 273 1 357 3 189 2 258 1 124 1 261 1 140 2 297 1 
143 1 374 1 333 1 305 1 244 1 312 1 276 1 
143 1 1 1 244 1 245 1 312 1 157 1 183 1 374 1 333 1 305 1 237 1 276 1 
220 1 178 1 267 1 131 1 244 1 52 1 75 1 53 1 346 1 66 1 374 1 333 2 70 1 305 2 274 1 351 1 251 1 296 1 
178 1 220 1 318 1 267 1 53 1 346 1 11 1 43 1 66 2 334 1 375 1 70 1 274 1 
141 1 178 4 220 1 209 1 267 4 52 1 53 4 346 1 13 1 66 1 125 1 28 1 274 1 
178 2 220 1 318 1 267 2 53 2 346 1 328 1 257 1 43 1 66 2 375 1 70 1 274 1 191 1 
178 1 66 1 267 1 254 1 52 1 4 1 346 1 53 1 373 1 166 1 
178 2 220 1 179 1 20 1 209 1 267 2 108 1 53 2 346 1 66 1 274 1 
141 1 178 4 220 2 318 1 20 1 209 1 267 5 52 1 53 5 346 2 13 1 66 2 28 1 224 1 274 3 339 1 
141 1 178 4 220 2 318 1 20 1 209 1 267 5 52 1 53 5 346 2 13 1 66 2 78 1 28 1 224 1 274 3 
220 1 13 1 178 1 66 1 28 1 267 1 274 1 52 1 346 1 53 1 380 1 
220 1 178 1 267 1 131 1 244 1 52 1 75 1 53 1 25 1 346 1 66 1 374 1 333 2 70 1 305 2 274 1 251 1 296 1 
220 2 318 1 240 1 320 1 267 1 244 2 75 1 25 1 53 1 96 1 304 1 333 2 305 2 274 3 251 2 178 1 131 1 346 1 370 1 66 1 374 1 70 2 296 1 
220 2 318 1 240 1 320 1 267 2 244 2 75 1 53 2 96 1 304 1 125 1 333 2 305 2 274 3 251 2 178 2 131 1 346 1 370 1 66 1 374 1 70 2 351 1 296 1 
220 1 318 1 240 1 168 1 267 3 121 1 52 1 146 1 53 3 96 1 100 1 125 1 274 4 102 2 178 3 194 1 85 1 182 2 346 1 234 1 66 1 259 1 70 1 
220 1 178 3 318 1 240 1 194 1 168 1 121 1 267 3 52 1 182 2 96 1 53 3 146 1 346 1 205 1 234 1 66 1 125 1 259 1 70 1 274 4 102 2 
178 1 66 1 267 1 360 1 346 1 53 1 
178 6 220 2 20 1 209 1 267 7 108 1 52 2 53 7 346 2 147 1 11 1 43 1 66 3 236 1 334 1 375 1 224 1 70 1 360 1 274 3 339 1 
220 1 319 3 222 1 267 1 268 1 145 4 53 1 273 2 189 2 223 2 333 2 274 1 190 1 226 1 277 1 346 1 231 1 158 1 285 1 66 1 14 2 70 1 293 1 165 1 296 1 297 2 244 1 75 1 25 1 172 2 357 6 77 1 124 1 29 1 305 2 251 1 252 1 362 1 178 1 209 1 131 1 256 2 258 2 45 1 374 2 261 1 140 3 
265 1 73 1 168 1 267 1 0 1 121 1 301 2 202 1 52 1 53 1 146 1 205 1 148 2 99 1 101 2 274 2 102 3 152 1 178 1 194 1 280 2 107 1 156 1 182 3 234 2 235 1 259 1 46 1 
178 2 220 1 209 1 299 1 267 2 146 1 53 2 346 1 11 1 66 2 70 1 360 1 274 2 
374 1 207 1 376 1 64 1 325 1 
194 1 320 1 121 1 36 1 255 1 182 2 345 1 64 2 325 2 370 1 304 1 330 1 99 1 259 1 374 1 207 1 376 2 289 1 102 2 
91 1 211 1 244 1 64 1 325 1 76 1 333 1 305 1 207 1 
36 1 207 1 330 1 
153 1 300 1 201 1 71 1 163 1 32 1 377 1 72 1 
153 1 7 2 300 3 201 4 302 1 187 1 232 1 163 4 139 1 32 2 352 1 377 2 72 1 317 1 
153 1 7 1 300 1 201 2 63 1 215 1 71 1 307 1 163 2 32 1 377 1 72 1 
153 1 300 1 201 3 187 1 253 1 232 2 71 1 163 3 32 1 352 2 377 1 72 1 
87 1 300 2 324 1 137 2 
153 1 201 1 213 1 71 1 163 1 72 1 
153 1 278 1 7 1 300 1 201 2 71 1 163 2 32 1 377 1 72 1 
30 1 
153 1 300 1 201 1 71 1 163 1 32 1 377 1 72 1 
300 1 32 1 377 1 380 1 
153 1 300 1 201 1 163 1 32 1 377 1 72 1 
90 1 201 1 340 1 
153 1 300 1 344 1 201 3 187 1 232 2 71 1 163 3 32 1 352 1 377 1 72 1 
153 1 7 1 300 1 201 2 163 2 32 1 65 1 377 1 72 1 
153 1 300 1 201 1 373 1 149 1 314 1 71 1 163 1 139 1 4 1 72 1 
153 1 300 1 201 1 71 1 163 1 32 1 72 1 
153 1 201 1 71 1 163 1 32 2 377 1 72 1 
153 2 300 1 201 2 171 1 39 1 233 1 71 1 163 2 32 1 72 2 
153 1 278 1 7 2 300 2 201 3 302 1 313 1 71 1 163 3 139 1 32 1 377 1 72 1 
153 1 33 1 342 1 7 1 300 1 201 2 373 2 314 1 71 1 163 2 4 1 32 1 377 1 72 1 166 1 
153 2 7 2 300 2 201 4 302 1 65 1 71 1 163 4 139 1 32 1 377 1 72 2 227 1 
153 1 278 1 7 1 300 1 201 3 71 1 163 3 32 1 232 1 377 1 72 1 
300 1 302 1 139 1 317 1 
300 1 32 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 9 81 2 309 1 258 1 284 1 131 1 234 3 286 6 188 2 135 1 319 2 92 4 93 2 294 1 66 9 8 2 55 1 9 5 194 2 31 1 195 1 354 1 250 1 355 2 35 1 124 1 36 1 336 1 
16 9 81 2 309 1 258 1 284 1 131 1 234 3 286 6 188 2 135 1 319 2 92 4 93 2 294 1 66 9 8 2 55 1 9 5 194 2 31 1 195 1 354 1 250 1 355 2 35 1 124 1 36 1 336 1 
16 10 81 2 309 1 258 1 284 1 131 1 234 4 286 7 188 2 135 1 319 2 92 5 93 2 294 1 66 10 8 2 55 1 9 6 194 2 31 1 195 1 354 1 250 1 355 2 35 1 124 1 36 1 336 1 
16 7 81 2 309 1 258 1 284 1 131 1 234 2 286 4 188 2 135 1 319 2 92 3 93 2 294 1 66 7 8 2 55 1 9 4 194 1 31 1 354 1 250 1 355 2 35 1 124 1 36 1 336 1 
66 4 16 4 8 1 81 1 55 1 9 3 284 1 131 1 234 1 194 2 31 1 286 3 195 1 188 1 355 1 135 1 92 2 93 1 
66 2 16 2 81 1 9 1 284 1 2 1 31 1 169 1 188 1 135 1 355 1 35 1 319 1 336 1 93 1 255 1 
66 3 16 3 309 1 9 2 284 1 234 1 31 1 286 1 188 2 135 1 319 1 92 1 93 2 
16 9 309 1 81 1 258 1 284 1 131 1 234 3 286 7 188 2 135 1 319 1 92 4 93 2 66 9 8 1 55 1 9 5 327 1 194 2 31 1 195 1 355 1 36 1 278 1 
16 9 309 1 81 1 258 1 284 1 131 1 234 3 286 7 188 2 135 1 319 1 92 4 93 2 66 9 8 1 55 1 9 5 327 1 194 2 31 1 195 1 355 1 36 1 278 1 
304 1 272 1 143 1 
137 1 107 2 143 1 
108 2 0 2 33 1 104 1 49 2 365 2 117 2 163 2 
0 2 104 1 17 1 130 1 365 3 108 3 265 1 237 2 24 2 89 1 212 1 3 1 267 1 49 2 139 1 110 1 214 1 111 2 6 1 52 1 293 1 163 2 242 2 243 1 297 1 190 1 164 1 350 1 325 1 117 2 32 1 33 1 12 1 151 1 356 2 152 1 307 1 
108 1 0 1 33 1 97 1 49 1 166 1 73 1 365 1 117 1 163 1 
272 1 365 1 235 1 314 1 108 1 133 1 48 1 318 1 97 1 222 1 77 1 143 1 163 1 321 1 
0 1 272 1 365 1 235 1 117 1 314 2 133 2 108 1 97 1 222 1 49 1 77 1 143 1 163 1 321 1 
133 1 374 1 14 1 314 1 373 1 
133 2 374 1 259 1 272 1 14 1 143 1 314 2 339 1 
133 1 14 1 314 1 
374 1 0 1 166 1 73 1 365 1 117 1 314 1 133 1 108 1 33 1 97 1 49 1 94 1 163 1 
143 1 
133 2 374 1 272 1 328 1 14 1 143 1 314 2 339 1 
299 2 191 1 374 2 282 2 272 1 340 1 87 1 341 1 314 5 211 1 133 5 174 2 158 1 28 1 50 1 280 1 14 2 143 1 339 1 
304 1 104 1 
0 1 104 2 365 2 117 1 149 1 88 1 108 2 49 1 163 2 
257 1 231 1 199 1 
297 1 164 1 104 1 17 1 130 1 365 1 376 1 108 1 237 1 265 1 3 1 267 1 151 1 356 1 214 1 111 1 
297 1 164 1 17 1 130 1 365 2 117 1 108 2 276 1 265 1 237 1 3 1 267 1 151 1 49 1 356 1 214 1 153 1 199 1 111 1 163 1 
0 1 104 1 19 1 365 4 22 1 117 4 170 1 88 1 108 4 276 1 97 1 49 4 153 2 163 4 
308 1 108 2 97 1 49 2 73 1 365 2 117 2 163 2 
108 3 0 1 104 1 49 3 153 1 365 3 117 3 163 3 
108 1 97 1 49 1 73 1 365 1 117 1 163 1 
108 1 0 1 97 1 49 1 365 1 117 1 163 1 149 1 88 1 
0 2 104 1 17 1 130 1 184 1 365 4 235 1 314 1 88 1 108 4 133 1 265 1 237 1 24 2 89 1 212 1 3 1 267 1 344 1 49 3 110 1 214 1 111 1 6 1 293 1 52 1 163 3 321 1 242 1 243 1 297 1 164 1 350 1 325 1 117 3 276 1 33 1 97 1 151 1 222 1 77 1 356 1 153 1 307 1 
108 2 244 1 318 1 104 1 49 1 153 1 365 2 117 1 163 2 
0 1 365 3 235 1 117 3 314 1 88 1 133 1 108 3 276 1 238 1 97 1 222 1 344 1 49 3 77 1 153 2 143 1 163 3 321 1 
0 1 231 1 365 2 117 2 88 1 108 2 49 2 153 1 199 1 163 2 
297 1 164 1 104 1 17 1 130 1 365 1 108 1 237 1 265 1 3 1 267 1 151 1 356 1 214 1 111 1 
297 1 164 1 226 1 322 1 104 1 17 1 130 1 365 1 108 1 237 1 265 1 3 1 356 1 214 1 111 1 
257 2 361 1 179 1 231 2 45 1 187 1 24 2 212 1 89 2 189 1 240 1 4 1 6 1 242 4 146 1 243 1 57 1 350 1 325 1 332 1 251 1 152 2 199 2 307 1 
108 1 308 1 97 1 49 1 365 1 117 1 163 1 321 1 
225 1 102 1 
225 1 102 1 
208 1 302 1 
208 1 302 1 
208 1 302 1 
225 1 102 1 51 1 
225 1 102 1 51 1 
225 1 204 1 102 1 
225 2 102 2 182 1 208 1 98 1 302 1 
225 1 102 1 51 1 
225 1 102 1 132 1 
225 1 102 1 132 1 
225 1 102 1 132 1 
225 1 204 1 102 1 310 1 104 1 129 1 365 2 20 1 46 1 314 1 133 1 108 2 317 1 290 1 159 1 49 2 140 1 163 2 71 1 273 1 326 1 117 2 334 1 37 1 
358 1 225 2 102 2 227 1 71 2 182 1 129 1 283 1 273 2 274 1 285 1 46 2 314 2 133 2 317 3 11 2 159 2 270 1 143 1 
8 1 81 1 355 1 
81 1 355 1 169 1 
8 2 41 1 355 3 115 1 233 1 169 1 
8 1 355 2 115 1 233 1 353 1 169 1 
8 1 355 2 115 1 233 2 169 1 
310 1 282 1 364 1 107 3 87 1 20 1 1 1 314 5 211 3 133 5 289 1 187 1 290 1 158 2 189 1 137 1 143 2 320 1 295 1 146 1 271 1 299 1 374 4 30 2 272 1 275 2 331 2 174 1 251 1 123 1 14 1 339 1 
282 2 84 1 107 9 44 1 87 1 1 1 314 9 211 8 342 5 133 9 289 3 187 3 290 4 158 6 189 3 137 3 64 1 143 5 320 2 373 5 146 3 299 2 374 7 349 1 30 6 272 1 168 1 62 1 331 6 174 2 251 3 123 2 280 1 14 6 339 1 
282 1 107 4 314 3 211 3 133 3 289 1 187 1 290 1 158 2 189 1 137 2 143 3 320 1 295 1 146 1 271 1 299 1 374 2 272 1 30 2 275 1 174 1 331 2 123 1 251 1 280 1 
282 1 84 1 107 7 314 4 211 5 133 4 289 2 187 2 290 2 158 4 189 2 137 3 64 1 143 4 320 1 295 1 146 2 299 1 271 1 374 3 272 1 30 4 275 2 62 1 331 4 174 1 123 1 251 2 280 1 
3 1 304 1 223 1 
3 1 185 1 
279 1 
297 1 265 1 3 1 
3 1 156 1 
297 1 3 1 
297 1 265 1 205 1 3 3 198 1 223 2 
202 1 201 1 242 7 146 1 298 1 43 1 57 3 128 1 58 1 209 1 367 1 89 3 332 2 189 1 27 2 152 4 154 1 
202 1 201 1 242 7 146 1 298 1 43 1 57 3 128 1 58 1 209 1 367 1 89 3 332 2 189 1 27 2 152 4 154 1 
202 1 201 1 242 7 146 1 298 1 43 1 57 3 128 1 58 1 209 1 367 1 89 3 332 2 189 1 27 2 152 4 154 1 177 1 
202 1 201 2 43 2 128 1 209 1 313 1 289 3 24 2 367 2 187 3 89 15 90 1 291 1 239 4 27 3 189 4 91 1 6 1 242 31 243 1 298 2 146 4 57 10 165 1 350 1 58 5 60 3 303 1 121 1 332 5 251 3 152 16 154 1 307 1 
201 1 202 1 43 1 101 1 128 1 24 4 367 1 89 4 189 1 27 2 6 2 216 1 242 9 146 1 243 2 298 1 57 4 350 2 58 1 303 1 332 3 152 5 154 1 307 2 
16 2 41 1 81 1 206 1 83 1 261 1 17 1 106 1 284 1 286 1 237 1 188 1 135 1 241 1 319 1 213 1 214 1 111 1 93 1 66 2 8 1 9 1 31 1 169 1 95 1 379 1 355 2 356 1 382 1 338 1 
41 1 16 3 81 1 206 1 83 1 261 1 17 1 106 1 284 1 286 2 237 1 188 1 241 1 319 1 213 1 214 1 111 1 93 1 66 3 8 1 67 1 29 1 9 1 348 1 31 1 169 1 95 1 355 2 356 1 382 1 
16 2 41 1 81 1 83 1 261 1 17 1 284 1 286 2 237 1 241 1 319 1 213 1 214 1 111 1 66 2 67 1 8 1 29 1 9 1 31 1 169 1 95 1 355 2 356 1 382 1 
66 1 297 1 16 1 164 1 69 1 178 1 83 2 261 2 348 1 17 1 287 1 237 1 3 1 188 1 63 1 319 2 356 1 214 1 382 2 346 1 111 1 93 1 38 1 
16 1 41 1 81 1 206 1 83 1 261 1 17 1 106 1 237 1 188 1 135 1 241 1 319 1 213 1 214 1 111 1 93 1 66 1 8 1 67 1 169 1 95 1 355 2 356 1 382 1 338 1 
103 1 
127 2 228 2 282 1 87 1 235 1 287 1 47 1 133 5 237 2 236 1 3 1 48 1 343 1 137 2 143 2 53 2 144 1 297 1 299 1 56 2 10 1 249 1 97 1 356 2 305 1 306 2 14 6 15 1 100 1 357 4 17 1 107 2 365 1 314 5 211 2 108 1 158 2 318 1 214 1 111 2 163 1 321 1 68 1 164 2 69 1 70 2 272 1 171 1 120 1 174 1 123 1 222 1 76 2 77 1 339 3 
357 2 100 1 144 1 68 1 365 1 328 1 235 1 47 1 314 3 133 3 108 1 120 1 48 1 318 1 97 1 222 1 76 1 77 1 14 2 163 1 339 1 321 1 
357 3 100 1 144 1 68 1 228 1 272 1 365 1 328 1 235 1 47 1 314 3 133 3 108 1 120 1 48 1 318 1 97 1 222 1 77 1 14 1 143 1 163 1 339 1 321 1 
100 1 357 3 228 1 365 1 235 1 314 3 47 1 108 1 133 3 48 1 318 1 163 1 143 1 321 1 144 1 68 1 272 1 328 1 120 1 97 1 222 1 77 1 76 1 306 1 14 2 339 1 
127 2 228 4 282 1 87 1 235 1 47 1 133 5 48 1 136 1 343 1 137 2 143 5 53 2 144 1 347 1 299 1 56 2 10 1 196 1 97 1 306 4 14 7 357 6 100 1 365 1 314 5 211 1 108 1 158 1 318 1 163 1 321 1 68 1 70 2 272 5 375 1 328 1 120 1 174 1 222 1 76 4 77 1 335 1 339 3 
127 2 228 2 282 1 87 1 235 1 47 1 133 4 48 1 343 1 137 2 143 2 53 2 144 1 299 1 56 2 10 1 97 1 305 1 14 4 306 2 357 4 100 1 365 1 107 2 314 4 211 1 108 1 158 1 318 1 163 1 321 1 68 1 70 2 272 1 120 1 174 1 222 1 77 1 76 2 339 2 
100 1 357 4 127 2 228 2 282 1 365 1 87 1 235 1 314 4 47 1 211 1 108 1 133 4 158 1 48 1 318 1 343 1 137 2 143 1 163 1 53 2 321 1 144 1 347 1 68 1 299 1 56 2 70 2 272 1 10 1 120 1 174 1 196 1 97 1 222 1 76 2 77 1 335 1 306 2 14 4 339 2 
100 1 357 4 127 2 228 2 282 1 365 1 87 1 235 1 314 4 47 1 211 1 108 1 133 4 158 1 48 1 318 1 343 1 137 2 143 1 163 1 53 2 321 1 144 1 347 1 68 1 299 1 56 2 70 2 272 1 10 1 120 1 174 1 196 1 97 1 222 1 76 2 77 1 335 1 306 2 14 4 339 2 
357 2 100 1 144 1 68 1 207 1 230 1 365 1 235 1 47 1 314 2 133 2 108 1 120 1 48 1 318 1 97 1 222 1 77 1 163 1 321 1 
127 2 228 3 0 1 282 1 87 1 235 1 47 1 133 4 48 1 343 1 137 2 49 1 94 1 143 1 53 2 144 1 347 1 299 1 56 2 10 1 196 1 97 2 14 5 306 3 357 5 100 1 365 2 314 4 211 1 108 2 158 1 318 1 163 2 321 1 68 1 70 2 272 1 166 1 73 1 375 1 117 1 120 1 174 1 33 1 222 1 76 3 77 1 335 1 339 2 
127 2 228 3 0 1 282 1 87 1 235 1 47 1 133 4 48 1 343 1 137 2 49 1 94 1 143 1 53 2 144 1 347 1 299 1 56 2 10 1 196 1 97 2 14 5 306 3 357 5 100 1 365 2 314 4 211 1 108 2 158 1 318 1 163 2 321 1 68 1 70 2 272 1 166 1 73 1 375 1 117 1 120 1 174 1 33 1 222 1 76 3 77 1 335 1 339 2 
228 2 282 1 87 1 235 1 47 1 133 4 48 1 343 1 143 1 53 2 144 1 299 1 147 2 97 1 305 1 14 4 306 2 357 4 100 1 365 1 107 2 314 4 211 1 108 1 158 1 318 1 162 2 163 1 321 1 68 1 70 2 272 1 219 1 120 1 174 1 222 1 77 1 76 2 339 2 
201 1 202 1 43 1 257 1 128 1 104 2 231 1 24 2 212 1 89 3 189 1 27 1 4 1 6 1 242 6 243 1 146 1 57 2 350 1 325 1 304 1 332 2 152 3 199 1 154 1 307 1 
99 1 257 11 180 1 104 1 181 1 262 1 105 1 231 4 289 2 24 4 187 1 90 1 89 6 212 1 239 3 189 1 91 1 110 1 6 2 242 14 243 2 146 2 57 2 350 2 58 1 325 2 60 3 32 1 332 1 251 2 152 8 199 11 307 2 
362 1 104 1 17 1 262 1 130 1 231 1 365 2 108 2 265 1 237 1 24 2 3 1 212 1 89 1 267 1 49 1 138 1 214 1 110 1 111 1 6 1 163 1 242 2 297 1 243 1 164 1 350 1 324 1 325 1 117 1 376 1 32 1 276 1 151 1 356 1 153 1 152 1 307 1 
43 1 128 1 130 2 231 7 289 2 237 3 187 2 89 10 3 2 189 3 49 1 5 1 6 3 293 2 242 20 243 3 297 2 146 3 57 8 350 3 58 4 151 2 251 2 356 3 197 1 153 1 152 10 154 1 199 7 307 3 200 2 253 2 202 1 201 1 257 7 104 2 262 1 17 2 365 3 366 1 108 3 265 2 24 6 212 3 267 2 27 1 110 1 214 2 215 2 111 3 163 1 67 1 164 1 325 3 117 1 32 1 172 2 276 1 332 4 
17 2 365 1 287 1 108 1 237 8 24 4 3 3 212 2 89 1 369 1 49 1 214 2 110 1 4 1 111 7 160 1 142 1 6 2 163 1 242 2 67 1 243 2 297 2 164 2 69 1 350 2 325 2 117 1 61 1 32 1 379 1 380 1 12 2 13 1 356 8 153 1 152 1 307 2 79 1 
257 1 0 1 262 1 231 1 365 1 88 1 108 1 289 1 24 2 187 1 212 1 89 2 189 1 49 1 6 1 163 1 242 3 243 1 146 1 57 1 350 1 325 1 117 1 329 1 332 1 251 1 152 1 199 1 307 1 
242 2 243 1 146 1 257 1 57 1 179 1 350 1 58 1 231 1 325 1 24 2 212 1 251 1 152 2 199 1 4 1 6 1 307 1 
242 2 243 1 257 1 57 1 350 1 231 1 325 1 45 1 24 2 187 1 212 1 89 2 332 1 189 1 199 1 4 1 6 1 307 1 
242 4 243 1 146 1 257 2 57 2 350 1 58 1 231 2 325 1 289 1 187 1 24 2 89 2 212 1 332 1 189 1 251 1 152 2 199 2 4 1 6 1 307 1 
242 2 243 1 146 1 257 1 57 1 179 1 350 1 58 1 231 1 325 1 61 1 24 2 212 1 251 1 152 2 199 1 6 1 307 1 
242 2 243 1 257 1 57 1 350 1 231 1 325 1 45 1 61 1 24 2 187 1 212 1 89 2 332 1 189 1 199 1 6 1 307 1 
257 2 231 2 289 1 24 2 187 1 212 1 89 2 189 1 6 1 242 4 146 1 243 1 57 2 350 1 58 1 325 1 61 1 332 1 251 1 152 2 199 2 307 1 
242 4 243 1 146 1 257 2 57 2 350 1 58 1 231 2 325 1 289 1 187 1 24 2 89 2 212 1 332 1 189 1 251 1 152 2 199 2 6 1 307 1 
104 1 17 1 130 1 365 1 108 1 265 1 237 1 24 2 3 1 212 1 89 1 267 1 214 1 110 1 111 1 293 1 6 1 242 2 297 1 243 1 164 1 350 1 325 1 32 1 151 1 356 1 152 1 307 1 
226 1 104 1 17 1 130 1 365 1 108 1 265 1 237 1 24 2 3 1 212 1 89 1 214 1 110 1 111 1 6 1 242 2 297 1 243 1 164 1 322 1 350 1 325 1 32 1 356 1 152 1 224 1 307 1 
242 4 243 1 146 1 257 2 57 2 262 1 350 1 58 1 231 2 325 1 289 1 187 1 24 2 89 2 212 1 332 1 189 1 251 1 152 2 199 2 6 1 307 1 
257 2 17 1 130 1 231 2 365 1 108 1 289 1 265 1 237 1 187 1 24 2 89 2 3 1 212 1 267 1 189 1 214 1 111 1 293 1 6 1 242 4 146 1 297 1 243 1 57 2 350 1 58 1 325 1 172 1 379 1 332 1 251 1 151 1 356 1 152 2 199 2 307 1 
257 1 0 1 262 1 231 1 365 1 88 1 108 1 289 1 187 1 24 2 89 1 212 1 189 1 49 1 6 1 163 1 242 3 243 1 146 1 57 1 350 1 58 1 325 1 117 1 251 1 152 2 199 1 252 1 307 1 
101 1 155 1 86 2 263 1 289 3 24 4 187 3 25 1 90 1 89 10 239 2 189 3 91 1 371 1 6 2 242 19 243 2 146 3 57 6 323 1 350 2 167 2 58 3 60 1 118 1 332 3 251 3 152 9 307 2 40 1 
101 1 363 1 86 4 263 1 289 3 24 6 187 2 25 1 89 12 90 2 239 2 189 2 6 3 242 26 243 3 146 3 57 4 323 2 350 3 72 1 116 1 167 1 58 2 148 1 60 2 118 2 303 2 150 1 378 1 332 2 251 3 152 14 307 3 40 1 
43 1 128 1 86 4 289 4 187 4 89 21 90 3 239 4 189 5 91 1 6 3 242 41 146 5 243 3 57 8 350 3 58 4 148 1 60 3 150 1 303 1 251 4 152 20 154 1 307 3 201 1 202 1 256 1 101 1 363 1 155 1 263 1 24 6 25 1 27 1 323 2 72 1 116 1 167 1 118 1 378 1 332 4 40 1 
202 1 201 1 256 1 43 1 101 1 128 1 363 1 155 1 86 4 263 1 289 4 24 8 187 3 25 1 90 3 89 18 239 4 27 1 189 4 91 1 6 4 242 38 243 4 146 5 57 7 323 2 72 1 350 4 116 1 167 1 58 3 148 1 60 3 118 1 303 2 378 1 150 1 332 4 251 4 152 20 154 1 307 4 40 1 
202 1 201 1 99 1 43 1 101 1 128 1 363 1 86 4 263 1 289 5 187 5 24 4 25 1 90 2 89 20 239 3 27 1 189 6 91 1 6 2 242 42 243 2 146 6 57 10 323 1 72 1 350 2 116 1 167 1 58 5 148 1 60 3 118 1 303 1 378 1 150 1 332 5 251 5 152 22 154 1 307 2 40 1 
358 1 225 1 102 1 71 1 159 1 182 1 300 1 273 1 274 1 46 1 
204 1 37 1 
225 1 360 1 221 1 102 1 71 1 159 1 109 1 273 1 46 1 
7 1 51 1 
145 1 132 1 98 1 
358 1 225 1 102 1 227 1 71 1 182 1 129 1 283 1 273 1 274 1 285 1 46 1 314 1 133 1 317 2 11 1 159 1 143 1 
358 1 225 1 102 1 227 1 71 1 182 1 129 1 283 1 273 1 274 1 285 1 46 1 314 1 133 1 317 2 11 1 159 1 143 1 
358 1 225 1 102 1 227 1 71 1 182 1 129 1 283 1 273 1 274 1 285 1 46 1 314 1 133 1 317 2 11 1 159 1 143 1 
7 1 51 1 98 1 
7 1 51 1 98 1 
145 1 132 1 
145 1 132 1 98 1 
140 1 326 1 
225 1 204 1 227 1 102 1 310 1 104 1 183 1 365 2 20 1 46 1 314 1 108 2 133 1 317 1 290 1 159 1 49 2 140 1 163 2 374 1 71 1 273 1 326 1 117 2 11 1 334 1 37 1 
17 1 262 1 365 2 210 1 108 2 237 2 24 2 3 1 212 1 89 1 369 1 214 1 110 1 111 2 112 1 6 1 163 2 242 2 297 1 243 1 350 1 325 1 32 1 173 1 96 1 12 2 13 1 356 2 152 1 277 1 307 1 
8 1 41 1 67 1 81 1 261 1 17 1 106 1 169 1 377 1 237 2 379 1 355 2 241 1 269 1 356 2 213 1 214 1 111 2 372 1 
8 1 41 1 67 1 81 1 261 1 18 1 17 1 106 1 169 1 237 1 355 2 241 1 356 1 213 1 214 1 111 1 372 1 
297 1 164 1 82 1 69 1 178 1 261 1 17 1 287 1 377 1 237 1 3 1 356 1 214 1 111 1 
8 1 41 1 67 1 81 1 261 1 17 1 106 1 169 1 377 1 237 1 355 2 241 1 269 1 356 1 213 1 214 1 111 1 372 1 
78 1 
158 1 304 1 272 1 28 1 50 1 143 1 211 1 
127 1 282 1 87 1 107 1 314 1 211 1 133 1 158 1 137 1 143 2 299 1 56 1 10 1 272 1 174 1 14 1 339 1 
42 2 282 4 85 1 87 4 185 3 133 5 289 2 237 3 187 2 3 10 189 2 137 6 50 1 143 8 297 3 146 2 299 4 351 2 245 2 193 2 251 2 356 3 198 1 14 5 15 1 17 4 156 2 157 2 107 12 314 5 211 9 265 3 158 8 268 1 28 1 214 3 215 2 111 3 164 1 114 1 272 2 30 6 119 1 330 2 174 4 122 2 331 6 379 1 381 1 123 2 222 2 223 2 176 2 339 3 
15 1 203 1 282 2 363 1 260 1 107 6 87 2 314 1 211 8 133 1 289 2 187 2 90 1 158 5 239 1 189 2 137 3 143 5 146 2 299 2 30 5 72 1 272 2 193 2 148 1 60 1 330 1 150 1 378 1 331 5 174 2 123 1 251 2 14 1 339 1 
201 1 202 1 43 1 282 1 0 1 365 1 87 1 314 1 211 2 108 1 133 1 158 2 189 1 49 1 94 1 163 1 347 1 146 2 299 1 166 1 73 1 193 2 117 1 330 1 174 1 33 1 97 1 39 1 
299 1 282 1 272 1 87 1 211 1 174 1 158 1 28 1 50 1 143 1 
146 2 30 5 193 2 107 10 330 1 211 5 289 2 331 5 187 2 158 5 189 2 251 2 137 5 215 1 143 5 
133 1 272 1 14 1 143 1 314 1 339 1 
15 2 282 2 229 1 17 1 87 1 314 3 287 1 211 2 133 3 237 4 3 1 158 2 268 2 214 1 111 4 54 1 297 1 299 2 164 2 69 1 171 1 119 1 174 2 249 1 123 2 356 4 280 1 14 4 339 2 
0 2 104 1 17 1 130 1 365 3 108 3 237 1 265 1 24 2 89 1 3 1 212 1 267 1 49 2 110 1 214 1 111 1 6 1 52 1 293 1 163 2 242 1 243 1 297 1 164 1 350 1 325 1 117 2 33 1 151 1 356 1 307 1 
15 1 299 1 282 1 30 2 272 2 107 4 87 1 211 1 331 2 174 1 158 2 27 1 137 2 123 1 143 4 
71 1 273 1 292 1 
71 1 273 1 292 1 
71 1 273 1 274 1 126 1 326 1 
71 1 273 1 292 1 
71 1 125 1 273 1 
71 1 125 1 273 1 
71 1 125 1 273 1 
71 1 273 1 
225 1 102 1 
202 1 242 8 201 1 146 1 243 2 43 1 57 3 128 1 350 2 58 1 303 1 24 4 89 4 332 2 27 1 189 1 152 4 154 1 6 2 307 2 
201 1 202 1 242 6 146 1 43 1 57 2 128 1 89 3 304 1 332 2 27 1 189 1 152 3 154 1 
242 4 243 1 146 1 57 2 350 1 58 1 301 1 289 1 187 1 24 2 89 2 332 1 189 1 251 1 152 2 6 1 307 1 
242 2 89 1 90 1 239 1 152 1 60 1 
202 2 201 2 99 1 43 2 128 1 105 1 289 2 187 2 24 2 89 12 239 2 27 1 189 5 91 1 6 1 242 25 146 5 243 1 57 8 350 1 58 4 60 2 303 1 332 4 251 2 152 13 154 1 307 1 39 1 
242 1 89 1 239 1 
242 1 152 1 60 1 
242 6 243 1 146 1 57 3 350 1 58 1 301 1 289 1 24 2 187 1 89 3 332 2 189 1 251 1 152 3 215 1 307 1 6 1 
101 1 363 1 289 2 24 2 187 2 89 6 90 1 239 1 189 2 6 1 242 12 243 1 146 2 57 2 350 1 72 1 58 1 148 1 60 1 150 1 378 1 332 1 251 2 152 6 307 1 
202 1 242 6 201 1 146 1 43 1 57 2 58 1 89 3 332 1 189 1 152 3 
201 1 242 3 359 1 243 1 43 1 57 2 128 1 350 1 58 1 303 1 24 2 89 2 332 1 152 1 154 1 6 1 307 1 
201 2 242 10 202 1 243 1 146 2 43 2 101 1 57 5 350 1 58 2 24 2 89 5 332 3 189 2 152 5 307 1 6 1 39 1 
242 2 243 1 146 1 101 1 57 1 350 1 58 1 24 2 251 1 152 2 6 1 307 1 
242 4 243 1 146 1 57 2 101 1 350 1 58 1 289 1 187 1 24 2 89 2 332 1 189 1 251 1 152 2 6 1 307 1 
242 3 201 1 359 1 243 3 43 1 101 1 57 2 155 1 350 3 58 1 303 1 24 6 89 2 332 1 152 1 6 3 307 3 
202 2 201 3 359 1 43 3 101 1 128 1 155 1 313 1 289 3 24 10 187 3 89 18 90 1 239 4 27 1 189 5 91 1 6 5 242 34 243 5 146 5 57 12 165 1 350 5 58 5 301 1 60 3 303 2 121 1 332 7 251 3 152 16 154 1 307 5 
201 1 202 1 43 1 101 1 128 1 24 2 89 4 90 1 239 1 27 1 189 1 6 1 242 8 146 1 243 1 57 2 350 1 60 1 150 1 332 2 152 4 154 1 307 1 
202 1 201 1 43 1 101 1 128 1 289 1 24 4 89 5 90 1 239 2 27 1 189 1 91 1 6 2 242 11 243 2 146 2 57 3 350 2 58 1 301 1 60 1 150 1 332 2 251 1 152 6 154 1 307 2 
202 1 201 1 43 1 101 1 128 1 363 1 289 2 24 6 187 2 89 10 90 1 239 1 27 1 189 3 6 3 242 19 243 3 146 3 57 4 350 3 72 1 58 1 148 1 301 1 60 1 150 1 378 1 303 1 332 3 251 2 152 9 154 1 307 3 
202 1 201 1 43 1 101 1 128 1 363 1 289 2 24 6 187 1 89 7 90 1 239 1 27 1 189 2 6 3 242 17 243 3 146 3 57 5 350 3 72 1 58 2 148 1 301 1 60 1 303 1 150 1 378 1 332 3 251 2 152 10 154 1 307 3 
201 1 202 1 43 1 101 1 128 1 24 2 89 4 90 1 239 1 27 1 189 1 6 1 242 8 146 1 243 1 57 2 350 1 60 1 150 1 332 2 152 4 154 1 307 1 
101 1 363 1 289 2 24 2 187 2 89 6 90 1 239 1 189 2 6 1 242 12 243 1 146 2 57 2 350 1 72 1 58 1 148 1 60 1 150 1 378 1 332 1 251 2 152 6 307 1 
202 1 201 1 43 1 101 1 128 1 363 1 289 2 24 8 187 1 89 8 90 1 239 1 27 1 189 2 6 4 242 18 243 4 146 3 57 5 350 4 72 1 58 2 148 1 301 1 60 1 150 1 378 1 303 2 332 3 251 2 152 10 154 1 307 4 
101 1 363 1 155 1 289 3 24 8 187 2 89 7 90 1 239 1 189 2 6 4 242 16 243 4 146 3 57 6 350 4 72 1 58 3 148 1 60 1 150 1 378 1 303 2 332 3 251 3 152 9 307 4 
242 7 201 3 202 1 146 1 43 3 57 6 128 1 58 3 89 4 332 3 189 1 152 3 154 2 
202 1 201 1 43 1 101 1 128 1 363 1 155 1 289 2 24 8 187 1 89 8 90 1 239 1 27 1 189 2 6 4 242 18 243 4 146 3 57 4 350 4 72 1 58 1 148 1 60 1 150 1 378 1 303 2 332 3 251 2 152 10 154 1 307 4 
108 1 244 1 318 1 104 1 365 1 59 1 163 1 
244 1 218 1 104 1 232 1 59 1 365 1 352 1 108 1 368 1 318 1 370 1 163 1 
297 1 237 1 164 1 69 1 3 1 304 1 17 1 356 1 214 1 111 1 287 1 
297 1 164 1 104 1 17 1 130 1 365 2 117 1 108 2 265 1 237 1 3 1 267 1 49 1 356 1 153 1 214 1 111 1 163 1 
297 2 104 1 156 1 17 1 130 1 365 2 235 1 117 1 108 2 265 2 237 1 122 1 3 3 268 1 267 1 97 1 49 2 356 1 153 1 214 1 111 1 163 2 321 1 
226 1 104 1 17 1 156 1 130 1 365 2 235 1 108 2 237 2 265 2 3 3 268 1 49 2 214 1 111 2 163 2 321 1 297 2 75 1 117 1 122 1 97 1 356 2 153 1 
80 1 17 1 156 1 185 1 314 2 133 2 316 1 237 3 265 1 3 4 268 1 214 1 111 3 143 1 297 1 164 1 272 1 75 1 122 1 222 1 356 3 223 1 14 1 
297 1 164 1 272 1 156 1 17 1 185 1 75 1 314 2 133 2 265 1 237 3 122 1 3 4 268 1 222 1 356 3 214 1 111 3 223 1 176 1 14 1 143 1 
237 1 17 1 356 1 214 1 111 1 79 1 
67 1 113 1 297 2 164 2 17 3 315 1 237 7 265 1 379 1 3 3 12 1 380 1 13 1 356 7 214 2 345 1 111 6 198 1 160 1 142 1 79 1 
202 1 201 1 257 1 43 1 128 1 104 2 17 1 262 1 130 1 231 1 365 2 108 2 265 1 237 1 24 4 89 3 3 1 212 2 267 1 27 1 189 1 49 1 214 1 111 1 6 2 293 1 163 1 242 6 146 1 297 1 243 2 57 2 350 2 325 2 117 1 172 1 173 1 379 1 332 2 151 1 356 1 152 3 153 1 199 1 154 1 307 2 200 1 
42 1 282 2 157 1 87 2 185 1 314 3 211 1 133 3 237 1 158 1 3 2 28 1 50 1 111 1 143 1 164 1 299 2 374 1 272 1 351 1 119 1 174 2 222 1 356 1 223 1 176 1 14 2 339 1 
297 1 114 1 17 2 237 2 265 1 379 1 3 2 356 2 214 1 111 2 198 1 223 1 79 1 
297 1 164 1 69 1 17 1 75 1 248 1 287 1 237 4 379 1 3 1 356 4 214 1 111 4 
113 1 297 1 17 2 246 1 74 1 237 2 265 1 3 1 268 1 356 2 197 1 214 1 345 1 111 2 
81 1 237 1 164 1 355 1 241 1 17 1 356 1 214 1 111 1 169 1 
297 1 67 1 237 2 3 1 379 1 17 1 13 1 356 2 214 1 277 1 111 2 
297 2 164 1 69 1 17 2 248 1 287 1 237 5 379 1 3 3 268 1 356 5 13 1 214 2 111 4 160 1 142 1 
297 2 164 1 69 1 17 2 247 1 248 1 287 1 237 5 379 1 3 3 268 1 356 5 13 1 214 2 111 4 142 1 
297 1 164 1 226 1 104 1 17 1 130 1 365 2 117 1 108 2 265 1 237 1 3 1 49 1 356 1 153 1 214 1 111 1 163 1 
113 1 297 1 17 2 315 1 237 1 265 1 3 1 268 1 356 1 214 1 345 1 111 1 198 1 
220 1 296 1 104 1 161 1 288 1 
296 1 374 1 104 1 272 1 235 1 21 1 314 2 288 2 133 2 220 2 97 1 222 1 344 1 77 1 141 1 161 2 65 1 143 1 321 1 
296 1 365 1 210 1 288 1 108 1 96 1 161 1 112 1 163 1 
296 1 141 1 21 1 
9 1 304 1 284 1 31 1 
66 1 16 1 9 1 188 1 284 1 93 1 31 1 
16 1 83 1 319 1 
66 3 16 3 217 1 9 1 284 1 31 1 264 1 26 1 188 1 135 1 35 2 93 1 
66 2 16 2 9 1 188 1 284 1 194 1 93 1 31 1 286 1 
66 1 16 1 8 1 81 1 55 1 9 1 188 1 135 1 355 1 92 1 93 1 
66 1 16 1 9 1 188 1 135 1 93 1 31 1 
66 1 16 1 188 1 135 1 284 1 93 1 31 2 
66 2 16 2 9 1 312 1 23 1 31 1 134 1 188 2 135 1 93 2 
66 3 16 3 258 1 9 2 284 1 234 1 31 1 286 2 188 1 135 1 36 1 92 1 93 1 
66 2 16 2 41 1 8 1 81 1 281 1 9 1 284 1 31 1 169 1 286 1 188 1 355 2 135 1 93 1 
66 4 16 4 9 2 284 1 234 1 194 1 31 1 286 2 195 1 188 2 135 1 92 1 93 2 
66 1 16 1 9 1 188 1 135 1 284 1 93 1 31 1 
66 4 16 4 217 1 9 3 284 2 234 1 31 2 286 2 264 1 188 1 34 1 35 1 92 1 93 1 
66 2 16 2 9 1 192 1 284 1 31 1 286 1 188 1 333 1 135 1 278 1 93 1 
66 3 16 3 217 1 9 1 284 1 31 1 264 2 188 1 135 1 35 2 93 1 254 1 
266 1 9 2 337 1 186 2 
66 1 16 1 188 1 135 1 175 1 93 1 
66 2 16 2 9 1 188 1 135 1 284 1 36 1 93 1 31 1 286 1 
311 1 
66 1 16 1 9 1 188 1 135 1 284 1 93 1 31 1 
66 3 16 3 9 1 284 1 286 1 31 1 188 1 135 1 35 1 36 1 93 1 
9 1 34 1 92 1 234 1 
9 1 31 1 

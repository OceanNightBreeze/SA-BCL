#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (318,354) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (318,354) 341 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (318,354) 341 209 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 355 137 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 236 211 298 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
81 1 125 2 0 1 24 1 308 2 242 2 198 2 313 2 27 1 108 1 174 2 199 3 347 1 292 1 226 1 115 9 352 5 228 6 265 1 92 1 154 1 117 1 122 1 302 1 135 4 271 1 185 2 234 9 
81 1 125 2 0 1 24 1 308 2 242 2 198 2 313 2 27 1 108 1 174 2 199 3 347 1 292 1 226 1 115 9 352 5 228 6 265 1 92 1 154 1 117 1 122 1 302 1 135 4 271 1 185 2 234 9 
81 1 125 2 0 1 24 1 308 2 242 2 198 2 313 2 27 1 108 1 174 2 199 4 347 1 292 1 226 1 115 10 352 6 228 7 265 1 92 1 154 1 117 1 122 1 302 1 135 5 271 1 185 2 234 10 
81 1 125 2 0 1 24 1 308 2 242 1 198 2 313 2 27 1 108 1 174 2 199 2 347 1 292 1 226 1 115 7 352 4 228 4 265 1 92 1 154 1 117 1 302 1 135 3 271 1 185 2 234 7 
115 4 81 1 352 3 228 3 0 1 265 1 154 1 308 1 242 2 122 1 198 1 135 2 313 1 271 1 185 1 174 1 199 1 234 4 
352 1 115 2 125 1 0 1 154 1 308 1 197 1 302 1 198 1 271 1 185 1 108 1 174 1 61 1 234 2 94 1 
115 3 352 2 228 1 125 1 0 1 92 1 154 1 135 1 271 1 185 2 174 2 199 1 234 3 
81 1 125 1 83 1 0 1 24 1 308 1 242 2 198 1 313 1 174 2 199 3 115 9 352 5 228 7 92 1 132 1 265 1 154 1 117 1 122 1 135 4 271 1 185 2 234 9 
81 1 125 1 83 1 0 1 24 1 308 1 242 2 198 1 313 1 174 2 199 3 115 9 352 5 228 7 92 1 132 1 265 1 154 1 117 1 122 1 135 4 271 1 185 2 234 9 
55 1 118 1 350 1 
118 1 159 1 189 2 
143 2 326 2 221 1 284 2 278 2 72 1 133 2 304 2 
143 3 41 1 63 1 215 2 43 2 42 1 277 1 193 1 337 1 278 2 340 1 149 1 221 1 284 2 343 1 8 1 346 1 290 1 201 2 261 1 262 1 202 1 351 2 9 1 116 1 266 1 72 1 133 3 93 1 326 2 136 2 16 1 36 1 160 1 237 1 304 2 20 1 
143 1 326 1 221 1 82 1 284 1 15 1 278 1 133 1 180 1 304 1 
143 2 82 1 192 1 306 1 278 2 307 1 220 1 88 1 221 1 284 1 246 1 345 1 112 1 350 1 118 1 133 2 356 1 180 2 326 1 15 1 304 1 
143 2 82 1 306 1 278 2 307 1 220 1 88 1 221 1 284 2 345 2 112 1 350 1 118 1 133 2 356 2 180 2 326 2 15 1 304 2 
71 1 345 1 356 1 5 1 218 1 
127 1 118 1 345 2 325 1 356 2 5 1 218 1 350 1 
345 1 356 1 5 1 
143 1 82 1 278 1 133 1 356 1 218 1 180 1 326 1 88 1 221 1 284 1 15 1 345 1 304 1 
118 1 
127 1 118 1 138 1 345 2 356 2 5 1 218 1 350 1 
229 1 231 2 127 1 118 1 356 5 170 1 218 2 5 2 67 1 32 1 312 2 208 1 109 2 222 1 345 5 161 1 17 1 350 1 275 1 
55 1 72 1 
143 2 278 2 119 1 72 2 133 2 326 1 284 1 314 1 304 1 
357 1 21 1 232 1 
143 1 351 1 9 1 215 1 63 1 193 1 72 1 133 1 257 1 149 1 8 1 16 1 160 1 36 1 201 1 261 1 
143 2 351 1 63 1 9 1 215 1 193 1 278 1 133 2 149 1 357 1 326 1 29 1 16 1 8 1 36 1 160 1 261 1 201 1 333 1 304 1 
143 3 326 3 284 1 29 1 278 3 72 1 133 3 304 3 
143 1 326 1 15 1 278 1 133 1 180 1 304 1 
143 1 326 1 284 1 278 1 314 1 119 1 133 1 180 1 304 1 
215 1 42 1 43 2 2 1 306 1 307 1 220 1 221 1 8 1 261 1 262 1 9 1 266 1 133 4 93 1 180 2 326 3 329 1 16 1 136 1 333 1 143 4 63 1 193 1 277 1 337 1 278 3 340 1 149 1 26 1 284 2 29 1 343 1 345 1 346 1 201 1 290 1 112 1 351 1 119 1 72 1 356 1 160 1 36 1 304 3 
143 2 326 1 29 1 278 2 72 1 246 1 86 1 133 2 304 1 
143 3 97 1 118 1 278 3 2 1 306 1 119 1 307 1 133 3 356 1 180 1 220 1 326 3 284 1 29 2 345 1 112 1 333 1 304 3 
143 2 21 1 278 2 119 1 133 2 357 1 326 2 284 1 29 1 304 2 
143 1 351 1 9 1 215 1 63 1 193 1 72 1 133 1 149 1 8 1 16 1 160 1 36 1 201 1 261 1 
143 1 351 1 9 1 215 1 63 1 193 1 72 1 133 1 259 1 16 1 160 1 36 1 124 1 201 1 261 1 
335 1 239 1 43 2 42 1 21 2 277 1 337 1 342 1 343 1 316 1 290 1 262 1 225 1 202 2 203 1 264 1 294 1 70 1 266 2 232 2 74 1 357 2 157 1 136 4 
143 1 334 1 326 1 278 1 307 1 133 1 180 1 304 1 
143 5 177 1 278 5 119 1 72 1 86 1 133 5 326 4 283 1 284 1 29 2 246 1 333 1 304 4 
334 1 143 2 326 2 15 1 278 2 133 2 180 1 304 2 
354 1 151 1 
354 1 151 1 
84 1 318 1 
84 1 318 1 
84 1 318 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 151 1 
354 1 341 1 151 1 322 1 
354 1 341 1 151 1 322 1 345 1 356 1 209 1 
198 1 313 1 308 1 
197 1 198 1 308 1 
327 1 197 1 313 2 296 1 308 3 89 1 
106 1 197 1 313 1 296 1 308 2 89 1 
197 1 313 1 296 2 308 2 89 1 
127 1 99 1 280 2 5 1 218 4 282 2 312 1 287 1 128 1 109 1 345 5 225 1 350 1 247 1 203 1 264 1 229 2 231 1 118 2 155 1 356 5 300 1 74 1 33 1 328 2 208 3 159 1 250 1 332 1 189 3 96 1 275 1 
190 1 126 1 305 1 127 1 3 5 280 6 5 6 218 7 312 2 287 3 109 2 345 9 225 3 54 1 350 1 247 2 203 3 264 3 229 6 231 2 118 5 71 5 155 1 356 9 74 3 134 1 33 2 328 6 208 8 159 3 17 1 332 4 140 1 189 9 275 1 
280 2 218 2 282 1 312 1 287 1 109 1 345 3 225 1 350 1 247 1 203 1 264 1 229 2 231 1 118 3 356 3 300 1 74 1 33 1 328 2 208 3 159 2 17 1 332 1 96 1 189 4 
126 1 280 4 218 3 282 2 312 1 287 2 109 1 345 4 225 2 350 1 54 1 247 1 203 2 264 2 229 4 231 1 118 4 356 4 300 1 74 2 134 1 33 1 328 4 208 5 159 3 17 1 332 2 189 7 96 1 
55 1 193 1 187 1 
193 1 57 1 
223 1 
63 1 193 1 
63 1 193 3 288 1 36 1 274 1 187 2 
63 1 193 1 36 1 
193 1 171 1 
203 1 335 2 164 1 152 1 248 1 130 1 266 3 206 1 267 1 74 1 269 1 123 1 342 3 136 7 110 1 202 4 253 2 
203 1 335 2 164 1 152 1 248 1 130 1 266 3 206 1 267 1 74 1 269 1 123 1 342 3 136 7 110 1 202 4 253 2 
203 1 335 2 164 1 152 1 248 1 130 1 266 3 206 1 267 1 74 1 269 1 123 1 342 3 136 7 358 1 110 1 202 4 253 2 
335 5 164 1 43 2 42 1 277 1 217 3 104 1 287 3 342 10 343 1 260 1 110 2 290 1 225 3 291 1 202 16 263 1 203 4 204 4 152 5 264 3 248 1 130 1 230 1 266 15 206 2 267 1 249 1 74 4 269 2 123 2 60 1 136 31 253 3 
335 3 43 4 42 2 277 2 194 1 342 4 343 2 290 2 110 1 202 5 203 1 152 1 248 1 130 1 266 4 206 1 267 1 249 1 74 1 269 1 123 1 136 9 141 1 253 2 
215 1 125 1 0 1 308 2 87 1 197 1 198 1 313 1 174 1 200 1 201 1 261 1 349 1 352 1 351 1 115 2 228 1 154 1 59 1 327 1 34 1 271 1 185 1 331 1 160 1 234 2 303 1 37 1 95 1 276 1 
215 1 125 1 0 1 308 2 100 1 87 1 197 1 198 1 313 1 244 1 174 1 200 1 201 1 261 1 352 1 351 1 115 3 228 2 59 1 327 1 34 1 271 1 185 1 158 1 160 1 234 3 303 1 37 1 95 1 276 1 
215 1 125 1 0 1 308 2 100 1 87 1 197 1 198 1 313 1 200 1 201 1 261 1 352 1 351 1 115 2 228 2 59 1 327 1 271 1 158 1 160 1 234 2 303 1 95 1 276 1 
214 1 213 1 215 1 63 1 125 2 240 1 193 1 101 1 244 1 174 1 245 1 261 1 200 2 201 1 351 1 115 1 9 1 59 2 324 1 185 1 160 1 234 1 276 2 
215 1 125 1 308 2 100 1 87 1 197 1 198 1 313 1 174 1 200 1 201 1 261 1 349 1 351 1 115 1 154 1 59 1 327 1 34 1 185 1 160 1 234 1 303 1 37 1 95 1 276 1 
299 1 
40 2 213 1 215 2 255 1 216 2 127 3 306 1 167 1 307 1 4 2 5 6 309 1 220 1 52 1 312 1 315 1 261 1 9 2 229 2 231 1 178 4 10 1 13 2 133 1 180 1 233 2 270 1 184 1 235 2 189 2 275 1 143 1 63 1 240 1 193 1 64 1 192 1 278 1 109 1 246 1 345 5 348 1 201 2 30 2 112 1 247 1 350 3 351 2 118 4 356 5 76 1 208 2 159 2 160 1 39 1 
143 1 192 1 64 1 127 1 306 1 278 1 307 1 4 1 5 2 220 1 52 1 246 1 315 1 345 3 112 1 350 2 178 2 118 2 133 1 356 3 180 1 270 1 76 1 138 1 
143 1 64 1 192 1 178 3 118 2 278 1 306 1 307 1 133 1 356 2 180 1 220 1 52 1 270 1 76 1 246 1 345 2 315 1 30 1 112 1 350 2 
143 1 192 1 64 1 127 1 306 1 278 1 307 1 4 1 5 2 220 1 52 1 246 1 315 1 345 3 112 1 30 1 350 3 178 3 118 3 133 1 356 3 180 1 270 1 233 1 76 1 138 1 
254 1 40 2 82 1 255 1 1 1 127 3 216 2 306 1 167 1 307 1 4 4 5 7 220 1 221 1 88 1 52 1 312 1 315 1 229 1 231 1 178 5 133 2 13 2 180 2 326 1 14 1 270 1 233 4 15 1 138 1 235 2 275 1 143 2 64 1 192 1 278 2 65 1 284 1 109 1 246 1 345 5 112 1 30 3 350 4 297 1 118 4 356 5 76 1 208 1 159 2 304 1 
40 2 255 1 216 2 127 2 306 1 167 1 307 1 4 2 5 4 220 1 52 1 312 1 315 1 229 1 231 1 178 4 133 1 13 2 180 1 270 1 233 2 235 2 275 1 189 2 143 1 64 1 192 1 278 1 109 1 246 1 345 4 112 1 30 2 350 3 118 4 356 4 76 1 208 1 159 2 39 1 
40 2 143 1 254 1 255 1 192 1 64 1 127 2 216 2 167 1 306 1 278 1 307 1 4 2 65 1 5 4 220 1 52 1 312 1 109 1 246 1 315 1 345 4 30 2 112 1 350 3 229 1 231 1 178 4 118 3 13 2 133 1 356 4 180 1 14 1 233 2 270 1 76 1 208 1 159 2 235 2 275 1 
40 2 143 1 254 1 255 1 192 1 64 1 127 2 216 2 167 1 306 1 278 1 307 1 4 2 65 1 5 4 220 1 52 1 312 1 109 1 246 1 315 1 345 4 30 2 112 1 350 3 229 1 231 1 178 4 118 3 13 2 133 1 356 4 180 1 14 1 233 2 270 1 76 1 208 1 159 2 235 2 275 1 
40 2 143 1 80 1 255 1 192 1 64 1 127 2 306 1 278 1 307 1 4 2 279 2 5 4 219 2 220 1 52 1 312 1 109 1 246 1 315 1 345 4 30 2 112 1 350 3 229 1 231 1 178 4 118 3 133 1 356 4 180 1 14 1 233 2 270 1 182 1 76 1 208 1 272 1 235 2 189 2 275 1 
40 2 254 1 143 1 255 1 192 1 64 1 1 1 127 2 216 2 167 1 306 1 278 1 307 1 4 3 65 1 5 5 220 1 52 1 312 1 109 1 246 1 315 1 345 4 30 3 112 1 350 3 229 1 231 1 178 5 118 3 13 2 133 1 356 4 180 1 14 1 270 1 233 3 76 1 208 1 159 2 235 2 275 1 
40 2 254 1 143 1 255 1 192 1 64 1 1 1 127 2 216 2 167 1 306 1 278 1 307 1 4 3 65 1 5 5 220 1 52 1 312 1 109 1 246 1 315 1 345 4 30 3 112 1 350 3 229 1 231 1 178 5 118 3 13 2 133 1 356 4 180 1 14 1 270 1 233 3 76 1 208 1 159 2 235 2 275 1 
40 2 255 1 127 2 306 1 307 1 4 2 5 4 219 2 220 1 52 1 312 1 315 1 229 1 231 1 178 4 133 1 180 1 270 1 233 2 182 1 235 2 275 1 189 2 143 1 64 1 192 1 278 1 279 2 109 1 246 1 345 4 112 1 30 2 350 3 118 3 356 4 76 1 208 1 39 1 
335 2 239 1 21 1 43 2 42 1 277 1 337 1 342 2 343 1 290 1 110 1 262 1 202 3 203 1 55 1 248 1 130 1 266 3 72 2 267 1 232 1 74 1 357 1 269 1 136 6 253 1 
335 1 41 1 43 4 42 2 21 4 166 1 277 2 337 1 217 3 340 1 195 1 172 1 342 2 287 2 343 2 290 2 262 2 225 2 291 1 202 8 203 2 152 1 204 3 91 1 264 1 266 6 72 1 232 11 74 1 357 11 136 14 60 1 162 1 
143 2 63 1 215 1 41 1 21 1 42 1 43 2 193 1 277 1 337 1 278 1 47 1 340 1 257 1 243 1 149 1 29 1 343 1 8 1 261 1 201 1 290 1 262 1 202 1 351 1 9 1 91 1 266 1 72 1 133 2 12 1 326 1 16 1 136 2 36 1 160 1 333 1 304 1 
41 1 215 3 43 6 42 3 7 1 8 2 261 2 262 3 225 2 90 2 9 1 91 1 264 2 130 1 266 10 267 1 232 7 133 3 269 1 326 1 136 20 16 2 333 1 335 4 143 3 144 2 63 2 21 7 277 3 193 2 337 3 278 1 100 1 340 1 149 2 29 1 287 2 342 8 343 3 346 2 289 1 110 1 201 3 290 3 202 10 69 1 203 3 351 3 152 4 248 1 72 2 73 2 74 3 357 7 160 2 36 2 210 2 253 1 304 1 
143 1 213 1 239 1 215 8 41 1 63 2 43 4 42 2 240 1 193 3 277 2 337 2 278 1 100 1 340 1 310 1 29 1 343 2 261 2 201 7 290 2 262 2 202 1 176 1 351 8 9 2 353 1 129 1 266 1 133 1 156 1 326 1 121 1 207 1 331 1 136 2 160 2 237 2 304 1 
335 1 143 1 21 1 43 2 42 1 277 1 337 1 278 1 284 1 285 1 342 1 287 1 343 1 290 1 262 1 225 1 202 1 203 1 91 1 264 1 266 2 119 1 232 1 133 1 74 1 357 1 326 1 136 3 304 1 
203 1 152 1 239 1 21 1 42 1 43 2 277 1 70 1 337 1 232 1 357 1 342 1 343 1 136 2 290 1 262 1 225 1 202 2 
335 1 239 1 264 1 21 1 42 1 43 2 277 1 337 1 266 2 232 1 74 1 357 1 342 1 343 1 136 2 290 1 316 1 262 1 
335 1 239 1 43 2 42 1 21 2 277 1 337 1 287 1 342 2 343 1 290 1 225 1 262 1 202 2 203 1 152 1 264 1 266 2 232 2 74 1 357 2 136 4 
203 1 152 1 21 1 42 1 43 2 277 1 70 1 337 1 232 1 357 1 207 1 342 1 343 1 136 2 290 1 262 1 225 1 202 2 
335 1 264 1 21 1 42 1 43 2 277 1 337 1 266 2 232 1 74 1 357 1 207 1 342 1 343 1 136 2 290 1 316 1 262 1 
335 1 43 2 42 1 21 2 277 1 337 1 287 1 342 2 343 1 290 1 225 1 262 1 202 2 203 1 152 1 264 1 266 2 232 2 74 1 357 2 207 1 136 4 
335 1 203 1 264 1 152 1 21 2 42 1 43 2 277 1 266 2 337 1 232 2 74 1 357 2 342 2 287 1 343 1 136 4 290 1 262 1 225 1 202 2 
143 1 41 1 63 1 215 1 42 1 43 2 193 1 277 1 337 1 340 1 149 1 343 1 8 1 346 1 261 1 201 1 290 1 262 1 202 1 351 1 9 1 266 1 72 1 133 1 136 2 16 1 36 1 160 1 
143 1 41 1 63 1 215 1 42 1 43 2 193 1 277 1 337 1 340 1 259 1 286 1 343 1 261 1 201 1 290 1 262 1 202 1 351 1 9 1 266 1 72 1 133 1 136 2 16 1 36 1 160 1 124 1 
335 1 43 2 42 1 21 2 277 1 337 1 287 1 342 2 343 1 290 1 225 1 262 1 202 2 203 1 91 1 152 1 264 1 266 2 232 2 74 1 357 2 136 4 
335 1 143 1 215 1 63 1 21 2 42 1 43 2 193 1 277 1 337 1 149 1 342 2 287 1 343 1 8 1 346 1 261 1 201 1 290 1 225 1 262 1 202 2 203 1 90 1 351 1 264 1 152 1 266 2 232 2 133 1 74 1 357 2 136 4 16 1 331 1 36 1 160 1 
143 1 43 2 42 1 21 1 277 1 337 1 278 1 50 1 284 1 342 1 287 1 343 1 290 1 262 1 225 1 202 2 203 1 264 1 152 1 91 1 266 1 119 1 232 1 133 1 74 1 357 1 326 1 136 3 304 1 
335 2 43 6 42 3 277 3 22 1 45 1 217 3 85 1 287 4 342 5 343 3 290 3 225 4 111 1 291 3 202 15 113 1 203 4 205 3 204 4 152 3 264 4 355 1 131 2 266 17 298 1 249 1 74 4 75 1 181 1 136 32 60 1 137 1 77 1 236 1 211 1 141 1 
335 3 43 8 42 4 277 4 22 1 45 1 217 3 85 1 287 4 342 6 343 4 290 4 225 4 111 1 291 3 202 17 113 1 203 4 205 4 204 4 152 3 264 3 355 1 131 2 266 16 298 1 249 2 74 3 75 1 181 1 136 33 60 1 137 1 77 1 236 1 211 1 141 1 
335 6 43 4 42 2 277 2 22 1 217 4 195 2 287 6 342 12 343 2 110 1 290 2 225 6 111 1 291 2 202 24 113 1 203 7 205 3 204 4 152 6 264 6 248 1 355 1 130 1 131 1 266 22 298 1 267 1 249 1 74 7 75 1 269 1 181 1 136 46 60 2 137 1 77 1 236 1 211 1 141 1 253 1 
335 3 43 4 42 2 277 2 22 1 217 1 85 1 287 3 342 6 343 2 290 2 225 3 111 1 291 1 202 9 203 3 205 2 204 2 152 3 264 3 355 2 153 1 131 1 266 10 74 3 181 1 136 19 60 1 137 1 141 1 
335 1 43 6 42 3 277 3 22 1 217 2 342 2 287 3 343 3 290 3 225 3 111 2 202 13 291 2 113 1 203 3 152 1 205 3 204 2 264 2 355 1 131 2 266 11 298 1 249 2 74 2 75 1 181 1 136 24 137 1 77 1 236 1 211 1 141 1 
143 2 212 1 238 1 63 1 215 2 41 1 42 1 43 2 193 1 145 1 277 1 337 1 278 2 340 1 343 1 344 1 261 1 290 1 201 2 262 1 202 1 176 1 351 2 91 1 266 1 133 2 121 1 136 2 160 1 273 1 237 2 
351 2 336 1 215 2 308 2 100 1 301 1 327 1 197 1 198 1 313 1 330 1 331 1 160 1 261 1 201 2 303 1 37 1 95 1 276 1 
351 1 215 1 308 2 100 1 301 1 327 1 197 1 173 1 198 1 313 1 160 1 201 1 303 1 261 1 37 1 95 1 276 1 
351 1 336 1 213 1 63 1 9 1 215 1 240 1 193 1 148 1 324 1 160 1 261 1 201 1 276 1 
351 1 336 1 215 1 308 2 100 1 301 1 327 1 197 1 198 1 313 1 330 1 160 1 261 1 201 1 303 1 37 1 95 1 276 1 
311 1 
67 1 55 1 229 1 208 1 118 1 170 1 350 1 
216 1 127 1 167 1 5 1 312 1 109 1 345 1 350 1 229 1 231 1 118 2 13 1 356 1 208 1 159 1 275 1 189 1 
215 1 127 1 168 1 5 2 51 1 312 2 261 2 225 1 319 1 9 1 264 1 229 3 231 2 57 2 323 1 328 3 274 1 187 1 18 1 275 2 189 6 144 1 63 1 241 1 193 4 280 3 150 1 287 1 109 2 345 2 201 1 112 1 247 1 203 1 351 1 118 3 356 2 74 1 208 4 159 3 160 1 36 1 38 1 
127 1 217 1 280 4 5 1 51 1 312 2 287 1 109 2 345 1 225 1 291 1 113 1 350 1 203 1 204 1 264 1 229 3 231 2 118 4 58 1 298 1 356 1 74 1 75 1 328 4 208 5 159 3 236 1 211 1 189 6 275 2 
143 1 254 1 82 1 98 1 278 1 51 2 88 1 221 1 312 1 284 1 109 1 345 1 110 1 203 2 321 1 229 2 231 1 267 1 133 1 356 1 180 1 74 1 269 1 326 1 15 1 208 2 275 1 304 1 
67 1 229 1 312 1 231 1 208 1 118 1 109 1 170 1 350 1 275 1 
203 2 144 1 264 2 321 1 229 5 118 5 280 5 74 2 51 2 328 5 287 2 208 5 159 5 225 2 189 10 
127 1 118 1 345 1 356 1 5 1 350 1 
213 1 63 1 215 4 44 1 191 1 240 1 146 2 193 1 127 2 48 1 5 4 312 2 109 2 345 3 348 1 261 1 201 4 247 2 351 4 9 2 229 2 231 2 10 2 356 3 184 1 208 2 160 1 17 1 275 1 
143 3 215 1 63 1 43 2 42 1 277 1 193 1 337 1 278 2 340 1 149 1 221 1 284 2 343 1 8 1 346 1 290 1 201 1 261 1 262 1 351 1 9 1 266 1 72 1 133 3 93 1 326 2 136 1 16 1 160 1 36 1 304 2 
229 2 231 1 118 4 10 1 280 2 312 1 328 2 109 1 208 1 159 2 253 1 189 4 275 1 247 1 350 2 
163 1 35 1 169 1 
163 1 31 1 169 1 102 1 25 1 
163 1 35 1 169 1 
163 1 35 1 169 1 
163 1 183 1 169 1 
163 1 183 1 169 1 
163 1 183 1 169 1 
163 1 169 1 
354 1 151 1 
335 2 43 2 42 1 277 1 217 1 342 2 343 1 290 1 110 1 291 1 202 4 203 1 204 1 248 1 130 1 266 4 298 1 267 1 74 1 269 1 136 8 141 1 253 1 
335 2 43 4 42 2 277 2 217 1 287 1 342 3 343 2 110 1 290 2 225 1 291 1 202 6 203 2 204 2 152 1 248 1 130 1 266 5 298 1 11 1 267 1 74 1 269 1 136 11 60 1 141 1 253 1 
335 1 43 6 42 3 277 3 217 1 287 2 342 2 343 3 290 3 225 2 291 1 202 6 113 1 203 2 152 1 204 1 264 2 266 7 11 1 298 1 249 1 74 2 75 1 136 13 236 1 141 1 211 1 
335 1 43 6 42 3 277 3 217 1 287 2 342 2 343 3 290 3 225 2 291 1 202 7 113 1 203 2 152 1 204 1 264 1 266 4 11 1 298 1 249 1 74 1 75 1 136 11 141 1 211 1 236 1 
335 2 43 2 42 1 277 1 217 1 342 2 343 1 290 1 110 1 291 1 202 4 203 1 204 1 248 1 130 1 266 4 298 1 267 1 74 1 269 1 136 8 141 1 253 1 
335 1 43 2 42 1 277 1 217 1 287 2 342 2 343 1 290 1 225 2 291 1 202 6 113 1 203 2 152 1 204 1 264 2 266 6 298 1 74 2 75 1 136 12 141 1 211 1 236 1 
335 1 43 8 42 4 277 4 217 1 287 2 342 2 343 4 290 4 225 2 291 1 202 7 113 1 203 2 152 1 204 1 264 1 266 5 298 1 11 1 249 2 74 1 75 1 136 12 236 1 211 1 141 1 
335 2 43 8 42 4 277 4 217 1 85 1 287 2 342 4 343 4 290 4 225 2 291 1 202 7 113 1 203 2 152 2 204 1 264 1 266 5 298 1 249 2 74 1 75 1 136 12 236 1 211 1 141 1 
335 3 203 1 152 3 248 1 130 2 266 4 267 1 74 1 269 3 342 6 136 7 110 3 202 3 
335 1 43 8 42 4 277 4 217 1 85 1 287 2 342 2 343 4 290 4 225 2 291 1 202 7 113 1 203 2 152 1 204 1 264 1 266 5 298 1 249 2 74 1 75 1 136 12 236 1 211 1 141 1 
203 1 335 2 152 1 42 2 43 4 248 1 277 2 130 1 266 4 267 1 249 1 74 1 269 1 342 3 343 2 136 8 290 2 110 1 202 4 253 1 
203 1 335 2 269 1 55 1 248 1 342 2 130 1 266 3 136 6 267 1 110 1 74 1 202 3 253 1 
335 1 203 1 264 1 152 1 42 1 43 2 277 1 266 2 11 1 74 1 342 2 287 1 343 1 136 4 290 1 225 1 202 2 
335 1 203 1 264 1 204 2 152 1 266 4 217 1 74 1 287 1 342 2 136 7 60 1 225 1 291 1 202 3 
335 5 42 2 43 4 277 2 217 2 195 1 172 1 342 9 287 2 343 2 110 2 290 2 225 2 202 11 203 3 152 4 204 2 264 2 248 1 130 1 266 12 267 1 268 1 249 2 74 3 269 2 60 1 136 23 253 1 
204 1 266 1 136 1 
136 1 217 1 202 1 
203 1 335 2 144 1 152 1 264 1 43 2 42 1 277 1 266 3 11 1 74 1 287 1 342 3 343 1 136 6 290 1 225 1 202 3 
335 1 43 2 42 1 277 1 217 1 287 2 342 2 343 1 290 1 225 2 291 1 202 6 113 1 203 2 152 1 204 1 264 2 266 6 298 1 74 2 75 1 136 12 141 1 211 1 236 1 
203 1 335 1 152 1 266 3 267 1 74 1 269 1 342 2 136 6 110 1 202 3 
335 1 152 1 42 1 43 2 248 1 130 1 277 1 266 2 268 1 249 1 269 1 342 2 343 1 136 3 110 1 290 1 202 1 
335 3 203 2 152 2 43 2 42 1 277 1 98 1 266 5 267 1 74 2 269 2 342 5 343 1 136 10 290 1 110 2 141 1 202 5 
203 1 152 1 42 1 43 2 277 1 342 1 343 1 136 2 290 1 225 1 141 1 202 2 
335 1 203 1 264 1 152 1 42 1 43 2 277 1 266 2 74 1 342 2 287 1 343 1 136 4 290 1 225 1 141 1 202 2 
335 1 152 1 42 3 43 6 277 3 266 2 268 1 85 1 249 1 269 1 342 2 343 3 136 3 290 3 110 1 141 1 202 1 
335 7 43 10 42 5 277 5 217 3 85 1 287 3 342 12 260 1 343 5 110 3 290 5 225 3 263 1 291 1 202 16 203 5 204 4 152 5 264 3 248 1 130 1 230 1 266 18 11 1 267 2 268 1 249 2 74 5 269 3 136 34 60 1 141 1 253 1 
143 1 165 1 278 1 72 1 246 1 133 1 86 1 
143 1 295 1 165 1 147 1 278 1 72 1 339 1 86 1 133 1 105 1 6 1 246 1 
213 1 55 1 351 1 63 1 215 1 9 1 240 1 193 1 160 1 261 1 201 1 
143 2 351 1 63 1 9 1 215 1 193 1 278 1 72 1 133 2 326 1 29 1 16 1 8 1 36 1 160 1 261 1 201 1 304 1 
143 2 215 1 63 2 146 1 193 3 23 1 278 2 307 1 171 1 220 1 29 1 8 1 201 1 261 1 351 1 72 1 133 2 180 1 326 2 16 1 160 1 36 2 304 1 
143 2 215 2 63 2 146 1 193 3 23 1 278 2 307 1 171 1 196 1 220 1 259 1 29 1 201 2 261 1 351 2 72 1 133 2 180 1 326 2 16 1 160 1 36 2 304 1 
143 1 82 1 215 1 63 1 193 4 146 1 23 1 278 1 281 1 5 1 171 1 103 1 221 1 88 1 284 1 345 2 201 1 261 1 112 1 350 1 351 1 118 1 57 1 133 1 356 2 180 1 326 1 15 1 160 1 36 1 187 1 304 1 
143 1 82 1 215 1 63 1 193 4 146 1 23 1 278 1 168 1 5 1 171 1 221 1 88 1 284 1 345 2 201 1 261 1 112 1 350 1 351 1 118 1 57 1 133 1 356 2 180 1 326 1 15 1 160 1 36 1 187 1 304 1 
351 1 215 1 129 1 160 1 261 1 201 1 
351 7 9 2 215 7 63 2 353 1 129 1 193 3 100 1 156 1 310 1 66 1 121 1 107 1 331 1 36 1 160 2 201 6 274 1 261 3 237 1 175 1 
215 1 43 4 42 2 8 1 261 1 262 2 90 1 91 1 130 1 266 3 267 1 232 1 133 2 326 1 269 1 331 1 16 1 136 6 143 2 335 2 63 1 21 1 277 2 193 1 337 2 278 1 149 1 29 1 342 2 343 2 344 1 346 1 201 1 290 2 110 1 202 3 203 1 351 1 248 1 72 2 73 1 74 1 357 1 160 1 36 1 304 1 253 1 
215 1 82 1 127 1 168 1 170 1 5 2 218 1 51 2 88 1 221 1 312 2 9 1 321 1 229 5 231 2 57 1 267 1 133 1 180 1 269 1 326 1 15 1 187 1 275 2 143 1 241 1 191 1 193 2 98 1 278 1 150 1 67 1 284 1 109 2 345 3 201 1 110 1 112 1 350 2 203 2 351 1 118 2 356 3 74 2 208 4 38 1 304 1 
319 1 351 2 215 2 63 1 129 1 193 2 331 1 36 1 160 1 201 2 274 1 261 2 187 1 
351 4 213 1 9 1 215 4 63 1 240 1 193 1 196 1 331 1 160 1 224 1 261 1 201 4 
69 1 351 2 215 2 63 1 146 1 193 1 120 1 49 1 66 1 107 1 36 1 160 1 201 2 261 2 
197 1 351 1 198 1 215 1 9 1 308 1 160 1 261 1 303 1 201 1 
212 1 351 2 63 1 121 1 215 2 193 1 331 1 160 1 100 1 261 1 201 2 
213 1 351 5 9 1 215 5 63 2 240 1 146 1 193 3 156 1 310 1 121 1 331 1 160 2 224 1 201 4 261 2 
213 1 351 5 9 1 215 5 63 2 240 1 146 1 193 3 310 1 121 1 331 1 160 2 224 1 201 4 261 2 317 1 
143 2 351 1 63 1 9 1 215 1 193 1 278 1 72 1 133 2 326 1 259 1 29 1 16 1 36 1 160 1 261 1 201 1 304 1 
351 1 215 1 63 1 146 1 193 1 66 1 107 1 36 1 160 1 201 1 274 1 261 2 175 1 
72 1 53 1 179 1 78 1 252 1 
143 1 82 1 278 1 306 1 2 1 46 1 307 1 218 1 220 1 221 1 88 1 284 1 345 2 53 1 112 1 350 1 56 1 118 1 133 1 356 2 179 1 180 2 326 1 15 1 186 1 78 1 252 1 304 1 
143 1 238 1 145 1 278 1 133 1 179 1 273 1 53 1 252 1 
56 1 46 1 179 1 
352 1 55 1 271 1 0 1 
352 1 115 1 271 1 0 1 185 1 174 1 234 1 
125 1 59 1 234 1 
142 1 352 1 115 3 0 1 154 1 302 2 271 1 185 1 174 1 234 3 251 1 19 1 
352 1 115 2 228 1 271 1 0 1 185 1 174 1 242 1 234 2 
352 1 115 1 198 1 313 1 135 1 265 1 185 1 174 1 154 1 308 1 234 1 
352 1 115 1 271 1 185 1 174 1 154 1 234 1 
115 1 271 2 0 1 185 1 174 1 154 1 234 1 
352 1 320 1 115 2 154 1 258 1 271 1 185 2 28 1 174 2 234 2 
115 3 352 2 228 2 0 1 24 1 154 1 117 1 135 1 271 1 185 1 174 1 199 1 234 3 
352 1 115 2 228 1 0 1 154 1 308 2 338 1 197 1 327 1 198 1 313 1 271 1 185 1 174 1 234 2 
115 4 352 2 228 2 0 1 154 1 242 1 122 1 135 1 271 1 185 2 174 2 199 1 234 4 
352 1 115 1 271 1 0 1 185 1 174 1 154 1 234 1 
115 4 352 3 228 2 0 2 302 1 68 1 135 1 271 2 185 1 174 1 199 1 234 4 19 1 251 1 
352 1 115 2 228 1 256 1 0 1 132 1 154 1 271 1 185 1 174 1 234 2 188 1 
352 1 115 3 0 1 154 1 302 2 271 1 185 1 174 1 234 3 251 1 19 2 114 1 
352 2 79 1 227 2 139 1 
293 1 115 1 185 1 174 1 154 1 234 1 
352 1 115 2 228 1 271 1 0 1 185 1 24 1 174 1 154 1 234 2 
62 1 
352 1 115 1 271 1 0 1 185 1 174 1 154 1 234 1 
115 3 352 1 228 1 0 1 24 1 154 1 302 1 271 1 185 1 174 1 234 3 
352 1 68 1 135 1 199 1 
352 1 271 1 

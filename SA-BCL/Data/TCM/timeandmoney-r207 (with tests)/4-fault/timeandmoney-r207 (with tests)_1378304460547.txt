#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 246 (83,228,255) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
309 2 35 2 2 4 69 1 137 1 337 1 119 5 205 1 207 1 77 2 239 1 263 9 265 1 214 1 193 2 153 6 169 1 63 1 301 9 358 2 52 2 53 1 381 1 129 2 304 3 114 1 220 1 133 1 
35 2 2 4 69 1 309 2 137 1 337 1 119 5 205 1 207 1 77 2 239 1 263 9 265 1 214 1 193 2 153 6 169 1 63 1 301 9 358 2 52 2 53 1 381 1 129 2 304 3 114 1 220 1 133 1 
35 2 2 5 69 1 309 2 137 1 337 1 119 6 205 1 207 1 77 2 239 1 263 10 265 1 214 1 193 2 153 7 169 1 63 1 301 10 358 2 52 2 53 1 381 1 129 2 304 4 114 1 220 1 133 1 
35 2 2 3 69 1 309 1 337 1 119 4 205 1 207 1 77 2 239 1 263 7 265 1 214 1 193 2 153 4 169 1 63 1 301 7 358 2 52 2 53 1 381 1 129 2 304 2 114 1 220 1 133 1 
309 2 2 2 35 1 137 1 214 1 193 1 119 3 153 3 301 4 207 1 77 1 52 1 53 1 129 1 304 1 220 1 263 4 265 1 
37 1 326 1 193 1 119 1 118 1 169 1 301 2 207 1 52 1 358 1 77 1 129 1 220 1 263 2 265 1 133 1 
2 1 119 2 153 1 301 3 207 1 52 2 358 1 129 2 304 1 114 1 220 1 263 3 265 1 
2 4 69 1 309 2 35 1 137 1 39 1 119 5 205 1 207 1 77 1 263 9 265 1 214 1 193 1 275 1 153 7 301 9 358 1 52 2 53 1 129 2 304 3 114 1 220 1 
2 4 69 1 309 2 35 1 137 1 39 1 119 5 205 1 207 1 77 1 263 9 265 1 214 1 193 1 275 1 153 7 301 9 358 1 52 2 53 1 129 2 304 3 114 1 220 1 
224 1 339 1 195 1 
100 2 339 1 74 1 
343 2 260 2 20 2 28 2 183 2 14 1 278 2 256 1 
32 1 226 1 201 1 72 1 229 1 117 1 315 1 256 1 7 1 287 1 342 1 341 2 343 2 260 3 183 2 121 2 103 2 289 1 14 1 290 1 165 1 188 1 124 1 191 1 59 1 108 1 20 2 244 2 378 1 50 1 278 2 355 1 380 1 28 3 281 1 363 2 131 1 
365 1 343 1 10 1 260 1 20 1 28 1 183 1 374 1 278 1 256 1 
224 1 30 1 97 1 339 1 274 1 57 1 120 1 343 1 260 1 10 1 11 1 28 1 266 1 44 1 
224 1 30 1 20 1 97 1 339 1 57 2 278 1 120 1 343 1 260 1 10 1 183 1 28 1 266 1 44 2 
345 1 189 1 46 1 57 1 44 1 
345 1 224 1 189 1 138 1 339 1 57 2 15 1 44 2 
189 1 57 1 44 1 
365 1 345 1 20 1 57 1 256 1 278 1 340 1 343 1 10 1 260 1 183 1 28 1 374 1 44 1 
339 1 
345 1 224 1 189 1 71 1 339 1 57 2 15 1 44 2 
345 2 224 1 189 2 166 1 211 2 106 1 349 1 339 1 57 5 168 1 328 2 27 2 208 1 12 1 162 1 115 1 68 1 15 1 44 5 
195 1 14 1 
343 2 260 2 20 1 183 1 157 1 28 2 231 1 14 2 278 1 
206 1 21 1 73 1 
123 1 191 1 201 1 244 1 72 1 117 1 315 1 50 1 260 1 28 1 121 1 103 1 131 1 14 1 165 1 188 1 
191 1 201 1 244 1 72 1 117 1 315 1 50 1 278 1 206 1 343 1 260 2 183 1 28 2 121 1 250 1 103 1 173 1 131 1 165 1 188 1 
343 3 260 3 20 1 28 3 183 3 173 1 14 1 278 3 
365 1 343 1 10 1 260 1 28 1 183 1 278 1 
343 1 10 1 260 1 20 1 28 1 183 1 157 1 231 1 278 1 
32 1 30 1 226 1 201 1 157 1 72 1 136 1 117 1 97 1 315 1 57 1 120 1 256 1 7 1 287 1 342 1 341 2 343 3 260 4 10 1 183 3 121 1 320 1 103 1 14 1 290 1 165 1 266 1 44 1 188 1 191 1 59 1 108 1 20 2 244 1 378 1 50 1 278 3 355 1 28 4 250 1 173 1 363 1 131 1 
343 2 60 1 260 2 11 1 28 2 183 1 173 1 14 1 278 1 
30 1 20 1 157 1 136 1 97 1 339 1 57 1 120 1 278 3 277 1 343 3 10 1 260 3 183 3 28 3 250 1 173 2 44 1 266 1 
20 1 157 1 73 1 278 2 206 1 343 2 260 2 183 2 28 2 173 1 
191 1 201 1 244 1 72 1 117 1 315 1 50 1 260 1 28 1 121 1 103 1 131 1 14 1 188 1 165 1 
36 1 244 1 72 1 117 1 6 1 315 1 50 1 260 1 28 1 121 1 103 1 131 1 14 1 188 1 165 1 
32 1 34 1 226 2 56 1 338 1 73 2 7 1 287 1 342 1 341 2 206 2 147 1 344 1 264 1 292 1 192 1 21 2 378 1 273 1 355 1 170 1 219 1 281 2 363 4 
343 1 10 1 260 1 28 1 183 1 327 1 278 1 266 1 
70 1 60 1 20 1 157 1 278 4 258 1 343 5 260 5 11 1 183 4 28 5 250 1 173 2 14 1 
365 1 343 2 10 1 260 2 28 2 183 2 327 1 278 2 
228 1 84 1 
228 1 84 1 
255 1 246 1 
255 1 246 1 
228 1 255 1 84 1 246 1 
360 1 228 1 84 1 
228 1 255 1 84 1 246 1 
83 1 228 1 84 1 
360 1 228 1 84 1 
360 1 228 1 84 1 
228 1 90 1 84 1 
228 1 90 1 84 1 
228 1 90 1 84 1 
150 2 311 1 324 1 135 2 228 2 377 1 339 1 57 2 84 2 127 1 62 1 78 1 171 2 303 1 154 2 372 3 282 2 331 1 44 2 
286 1 175 1 228 1 4 1 57 1 343 2 260 2 183 2 42 1 372 1 186 1 14 1 44 1 346 1 150 1 324 1 83 1 278 2 84 1 171 1 28 2 154 1 282 1 223 1 
35 1 77 1 193 1 
77 1 37 1 193 1 
35 2 217 1 37 1 350 1 193 3 222 1 
35 1 217 1 302 1 37 1 350 1 193 2 
35 1 217 2 37 1 350 1 193 2 
174 1 224 1 286 1 134 2 34 1 4 1 338 1 57 5 339 2 74 1 179 1 100 3 145 1 162 1 12 3 15 1 44 5 345 4 321 2 189 1 212 1 211 1 167 2 292 1 297 1 354 1 279 1 328 1 27 1 219 1 223 1 68 2 
224 1 134 6 34 3 225 1 96 1 338 3 57 9 339 5 317 1 74 3 179 1 143 1 100 9 145 3 162 1 12 8 146 5 44 9 15 1 345 7 267 1 321 6 189 6 46 5 211 2 292 3 349 1 297 2 279 2 328 2 27 2 219 3 307 1 223 4 68 6 
365 1 224 1 134 2 34 1 338 1 339 3 57 3 256 1 340 1 74 2 100 4 343 1 145 1 10 1 260 1 183 1 12 3 374 1 44 3 345 2 321 2 212 1 211 1 167 1 292 1 20 1 349 1 297 1 354 1 278 1 279 1 328 1 27 1 28 1 219 1 223 1 68 2 
134 2 34 1 338 1 339 2 57 2 74 2 100 4 145 1 12 3 44 2 345 1 321 2 267 1 211 1 212 1 167 1 292 1 349 1 297 1 354 1 279 1 328 1 27 1 219 1 223 1 68 2 
112 1 195 1 165 1 
379 1 165 1 
283 1 
72 1 165 1 
144 1 112 2 213 1 72 1 131 1 165 3 
72 1 131 1 165 1 
76 1 165 1 
226 3 347 1 242 1 308 1 292 1 192 3 338 1 314 1 273 2 98 1 248 1 64 1 67 1 281 4 81 2 362 1 363 7 
226 3 347 1 242 1 308 1 292 1 192 3 338 1 314 1 273 2 98 1 248 1 64 1 67 1 281 4 81 2 362 1 363 7 
226 3 347 1 242 1 308 1 292 1 192 3 338 1 314 1 273 2 58 1 98 1 248 1 64 1 67 1 281 4 81 2 362 1 363 7 
226 15 94 4 34 3 308 1 338 4 314 1 98 2 7 1 342 1 341 2 145 3 102 1 185 1 81 3 82 1 376 1 347 1 242 2 292 4 192 10 378 1 273 5 111 1 355 1 248 2 64 5 66 3 219 3 67 2 281 16 362 1 363 31 382 1 196 1 
226 4 308 1 338 1 7 2 98 1 342 2 341 4 81 2 190 1 242 1 347 1 292 1 192 4 378 2 49 1 273 3 355 2 248 1 64 1 67 1 281 5 362 1 363 9 382 1 
285 1 35 1 156 1 37 1 312 1 141 1 139 1 119 1 315 1 8 1 9 1 207 1 77 1 121 1 103 1 263 2 148 1 104 1 265 1 244 1 193 2 50 1 153 1 301 2 247 1 52 1 358 1 129 1 220 1 222 1 
35 1 156 1 37 1 312 1 141 1 139 1 119 1 315 1 232 1 8 1 9 1 207 1 77 1 121 1 103 1 263 3 104 1 244 1 193 2 50 1 153 2 301 3 247 1 52 1 358 1 89 1 129 1 172 1 220 1 222 1 
35 1 37 1 312 1 141 1 139 1 119 1 315 1 8 1 9 1 207 1 77 1 121 1 103 1 263 2 244 1 193 2 50 1 153 2 301 2 247 1 358 1 89 1 172 1 220 1 222 1 
227 1 312 2 72 1 141 2 315 1 232 1 9 2 121 1 103 1 263 1 164 1 188 1 165 1 244 1 109 1 50 1 276 1 301 1 52 1 358 2 129 1 306 1 334 1 
35 1 156 1 37 1 312 1 141 1 139 1 315 1 8 1 9 1 77 1 121 1 103 1 263 1 148 1 104 1 265 1 244 1 193 2 50 1 301 1 247 1 52 1 358 1 89 1 129 1 222 1 
101 1 
224 1 230 2 97 1 339 2 57 5 177 2 234 1 100 2 343 1 10 1 11 1 12 2 103 2 149 1 15 3 188 2 189 6 17 1 295 2 244 2 351 2 297 1 353 1 357 4 27 1 28 1 306 1 68 2 155 2 30 1 38 2 72 1 368 1 315 1 367 1 120 1 74 2 75 1 260 1 162 1 121 2 122 1 164 1 44 5 165 1 266 1 211 1 215 1 274 1 50 1 328 1 86 1 87 1 92 2 55 1 
30 1 71 1 97 1 367 1 57 3 120 1 234 1 75 1 343 1 260 1 10 1 11 1 149 1 44 3 266 1 15 1 189 2 351 1 274 1 87 1 357 2 28 1 
30 1 224 1 71 1 230 1 97 1 367 1 57 3 339 1 120 1 234 1 75 1 343 1 260 1 10 1 11 1 149 1 44 3 266 1 15 1 189 1 274 1 87 1 357 3 28 1 
30 1 224 1 71 1 38 1 230 1 97 1 367 1 57 3 339 1 120 1 234 1 75 1 343 1 260 1 10 1 11 1 149 1 15 1 44 3 266 1 189 2 351 1 274 1 87 1 357 3 28 1 
224 5 230 4 97 1 57 5 339 5 177 2 234 1 343 1 10 1 11 1 12 1 149 1 15 3 189 7 295 2 351 4 357 6 27 1 65 1 28 1 364 1 68 1 30 1 155 2 38 4 71 1 367 1 120 1 74 2 75 1 260 1 162 1 266 1 44 5 211 1 47 1 269 1 215 1 274 1 328 1 87 1 130 1 55 1 92 2 
224 1 230 2 97 1 57 4 339 2 177 2 234 1 100 2 343 1 10 1 11 1 12 1 149 1 15 2 189 4 17 1 295 2 351 2 357 4 27 1 28 1 68 1 30 1 155 2 38 2 367 1 120 1 74 2 75 1 260 1 162 1 266 1 44 4 211 1 215 1 274 1 328 1 87 1 55 1 92 2 
224 1 155 2 30 1 38 2 230 2 97 1 339 1 367 1 57 4 177 2 120 1 74 2 234 1 75 1 343 1 260 1 10 1 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 4 211 1 295 2 47 1 351 2 215 1 274 1 328 1 87 1 357 4 27 1 28 1 130 1 92 2 55 1 364 1 68 1 
224 1 155 2 30 1 38 2 230 2 97 1 339 1 367 1 57 4 177 2 120 1 74 2 234 1 75 1 343 1 260 1 10 1 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 4 211 1 295 2 47 1 351 2 215 1 274 1 328 1 87 1 357 4 27 1 28 1 130 1 92 2 55 1 364 1 68 1 
224 1 155 2 30 1 38 2 230 2 97 1 339 1 367 1 57 4 120 1 234 1 100 2 75 1 343 1 260 1 10 1 261 2 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 4 16 1 211 1 295 2 351 2 215 1 48 1 23 1 274 1 300 2 328 1 87 1 357 4 27 1 28 1 130 1 68 1 
224 1 155 2 30 1 38 3 230 3 97 1 339 1 367 1 57 4 177 2 120 1 74 2 234 1 75 1 343 1 260 1 10 1 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 5 211 1 295 2 47 1 351 3 215 1 274 1 328 1 87 1 357 5 27 1 65 1 28 1 130 1 92 2 55 1 364 1 68 1 
224 1 155 2 30 1 38 3 230 3 97 1 339 1 367 1 57 4 177 2 120 1 74 2 234 1 75 1 343 1 260 1 10 1 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 5 211 1 295 2 47 1 351 3 215 1 274 1 328 1 87 1 357 5 27 1 65 1 28 1 130 1 92 2 55 1 364 1 68 1 
224 1 155 2 30 1 38 2 230 2 97 1 339 1 367 1 57 4 120 1 234 1 100 2 75 1 343 1 260 1 10 1 261 2 11 1 12 1 162 1 149 1 15 2 44 4 266 1 189 4 16 1 17 1 211 1 295 2 351 2 215 1 274 1 300 2 328 1 87 1 357 4 27 1 28 1 68 1 
32 1 226 3 308 1 73 1 338 1 98 1 7 1 287 1 206 1 342 1 341 2 147 1 81 1 14 2 242 1 347 1 192 2 292 1 21 1 378 1 273 2 355 1 281 3 362 1 195 1 363 6 
197 1 32 1 226 6 94 3 34 1 95 1 73 4 338 1 7 2 287 2 342 2 341 4 206 11 145 2 79 1 102 1 289 1 14 1 290 1 82 1 125 1 192 2 292 2 21 11 378 2 273 1 110 1 355 2 64 1 66 3 219 2 281 8 363 14 
32 1 226 1 95 1 201 1 72 1 73 1 117 1 315 1 7 1 287 1 236 1 341 2 342 1 343 1 260 2 181 1 183 1 121 1 103 1 289 1 14 1 290 1 165 1 188 1 123 1 191 1 244 1 378 1 50 1 278 1 355 1 361 1 28 2 281 1 250 1 173 1 131 1 363 2 
93 1 226 11 95 1 338 4 98 1 287 3 7 3 342 3 341 6 343 1 145 2 10 1 183 1 184 2 103 1 289 1 14 1 290 1 188 1 191 2 347 1 242 1 192 5 108 2 292 4 21 6 244 1 25 1 355 3 356 1 64 1 26 1 28 3 250 1 362 1 363 22 32 3 34 2 308 1 201 2 72 2 253 2 73 6 117 2 315 2 206 6 260 3 161 2 121 1 165 2 323 2 378 3 273 4 50 2 278 1 219 2 281 11 173 1 131 2 
285 1 32 2 226 1 72 2 315 2 7 2 287 2 318 1 342 2 341 4 343 1 260 1 183 1 147 1 121 8 103 7 289 1 290 1 164 1 165 3 188 2 105 1 325 1 244 8 378 2 271 1 299 1 50 2 278 1 355 2 280 1 89 1 380 2 28 1 281 1 306 1 173 1 363 2 335 1 
32 1 34 1 226 2 95 1 157 1 73 1 338 1 7 1 287 1 180 1 206 1 342 1 341 2 343 1 145 1 260 1 183 1 192 1 292 1 21 1 20 1 378 1 273 1 278 1 355 1 28 1 219 1 281 1 363 3 
32 1 192 1 292 1 21 1 56 1 378 1 73 1 287 1 7 1 355 1 206 1 341 2 342 1 64 1 219 1 147 1 281 2 363 2 
32 1 34 1 226 2 192 1 21 1 378 1 73 1 338 1 273 1 287 1 7 1 355 1 206 1 341 2 342 1 170 1 147 1 363 2 
32 1 34 1 226 2 73 2 338 1 7 1 287 1 342 1 341 2 206 2 145 1 147 1 292 1 192 2 21 2 378 1 273 1 355 1 64 1 219 1 281 2 363 4 
32 1 192 1 292 1 21 1 56 1 378 1 73 1 287 1 7 1 355 1 206 1 341 2 342 1 280 1 64 1 219 1 281 2 363 2 
32 1 34 1 226 2 192 1 21 1 378 1 73 1 338 1 273 1 287 1 7 1 355 1 206 1 341 2 342 1 280 1 170 1 363 2 
32 1 34 1 226 2 73 2 338 1 7 1 287 1 342 1 341 2 206 2 145 1 292 1 192 2 21 2 378 1 273 1 355 1 280 1 64 1 219 1 281 2 363 4 
32 1 226 2 34 1 192 2 292 1 21 2 378 1 338 1 73 2 273 1 287 1 7 1 355 1 206 2 341 2 342 1 145 1 64 1 219 1 281 2 363 4 
32 1 226 1 201 1 72 1 117 1 315 1 287 1 7 1 341 2 342 1 260 1 121 1 103 1 289 1 14 1 290 1 188 1 165 1 191 1 108 1 244 1 378 1 50 1 355 1 28 1 281 1 363 2 131 1 
32 1 226 1 36 1 72 1 117 1 315 1 6 1 287 1 7 1 341 2 342 1 260 1 121 1 103 1 289 1 14 1 290 1 188 1 165 1 244 1 378 1 50 1 355 1 88 1 28 1 281 1 363 2 131 1 
32 1 34 1 226 2 95 1 73 2 338 1 7 1 287 1 342 1 341 2 206 2 145 1 292 1 192 2 21 2 378 1 273 1 355 1 64 1 219 1 281 2 363 4 
285 1 32 1 226 2 34 1 201 1 72 1 338 1 73 2 253 1 117 1 315 1 287 1 7 1 206 2 341 2 342 1 145 1 260 1 121 1 103 1 165 1 191 1 192 2 292 1 108 1 21 2 244 1 378 1 273 1 50 1 355 1 64 1 219 1 28 1 281 2 363 4 131 1 
32 1 226 1 34 1 95 1 157 1 338 1 73 1 7 1 287 1 342 1 341 2 206 1 343 1 145 1 260 1 183 1 192 1 292 1 20 1 21 1 378 1 278 1 355 1 64 1 28 1 219 1 281 2 332 1 363 3 
198 2 94 2 226 10 34 3 199 1 176 1 200 1 338 3 7 2 342 2 341 4 145 3 102 1 210 1 82 1 292 3 192 6 378 2 49 1 273 3 355 2 330 2 64 3 66 1 219 3 281 9 221 1 363 19 29 1 132 1 
198 4 226 12 94 2 34 2 176 2 200 1 338 2 5 1 142 1 7 3 342 3 341 6 145 3 102 2 373 1 210 2 241 1 192 4 292 3 378 3 49 1 273 2 216 1 194 1 355 3 330 1 64 2 66 2 219 3 281 14 221 1 382 2 363 26 132 1 
198 4 94 4 226 21 34 4 199 1 308 1 176 2 200 1 338 5 5 1 142 1 98 1 7 3 342 3 341 6 145 4 102 3 373 1 81 1 210 1 82 1 241 1 347 1 242 1 292 5 192 8 378 3 49 1 273 4 216 1 152 1 194 1 355 3 330 1 64 4 66 3 219 4 281 20 362 1 221 1 382 1 363 41 132 1 
198 4 94 4 226 18 34 3 199 1 308 1 176 2 200 1 338 4 5 1 142 1 98 1 7 4 342 4 341 8 145 4 102 3 373 1 81 1 210 1 82 1 241 1 347 1 242 1 292 5 192 7 378 4 49 1 273 4 216 1 152 1 194 1 355 4 330 1 64 3 66 3 219 4 281 20 362 1 221 1 382 2 363 38 132 1 
197 2 198 4 94 4 226 25 34 7 308 1 176 1 200 1 338 8 5 1 142 1 98 1 7 2 342 2 341 4 145 7 102 2 373 1 81 1 210 1 82 2 241 1 347 1 242 1 292 8 192 14 378 2 49 1 273 7 216 1 194 1 355 2 330 1 64 7 66 4 219 7 281 27 362 1 221 1 382 1 363 52 132 1 
62 1 150 1 171 1 303 1 228 1 154 1 282 1 331 1 257 1 84 1 
346 1 83 1 
85 1 150 1 171 1 228 1 154 1 282 1 316 1 84 1 240 1 
150 1 311 1 324 1 135 1 228 1 339 1 57 1 84 1 127 1 62 1 78 1 171 1 303 1 154 1 372 2 282 1 331 1 44 1 
150 1 311 1 324 1 135 1 228 1 339 1 57 1 84 1 127 1 62 1 78 1 171 1 303 1 154 1 372 2 282 1 331 1 44 1 
150 1 311 1 324 1 135 1 228 1 339 1 57 1 84 1 127 1 62 1 78 1 171 1 303 1 154 1 372 2 282 1 331 1 44 1 
294 1 238 1 360 1 
294 1 238 1 360 1 
329 1 90 1 
329 1 294 1 90 1 
42 1 186 1 
286 1 175 1 135 1 228 1 4 1 57 1 343 2 260 2 78 1 183 2 42 1 372 1 186 1 14 1 44 1 345 1 346 1 150 1 83 1 84 1 278 2 171 1 28 2 154 1 282 1 91 1 223 1 
238 1 360 1 
329 1 294 1 90 1 
32 1 226 1 95 1 72 1 315 1 366 1 7 1 287 1 237 1 341 2 342 1 343 2 260 2 121 2 103 2 13 1 289 1 290 1 165 1 105 1 243 1 244 2 378 1 271 1 298 1 50 1 355 1 380 2 28 2 281 1 363 2 
285 1 35 1 156 1 37 1 244 2 312 1 193 2 315 1 50 1 203 1 8 1 247 1 77 1 89 1 209 1 43 1 121 2 103 2 222 1 
35 1 156 1 37 1 244 1 312 1 193 2 315 1 50 1 8 1 247 1 77 1 89 1 305 1 43 1 121 1 103 1 222 1 
19 1 244 1 72 1 312 1 315 1 50 1 276 1 209 1 121 1 103 1 306 1 164 1 165 1 188 1 
35 1 156 1 37 1 244 1 312 1 193 2 315 1 50 1 203 1 8 1 247 1 77 1 89 1 209 1 43 1 121 1 103 1 222 1 
51 1 
224 1 166 1 106 1 12 1 339 1 195 1 68 1 
224 1 339 2 57 1 177 1 74 1 100 1 12 1 162 1 15 1 44 1 189 1 211 1 328 1 27 1 92 1 55 1 68 1 
285 1 224 2 134 6 338 2 57 5 339 8 233 2 100 12 145 2 12 9 103 2 188 1 15 3 189 5 106 1 107 2 292 2 244 2 22 2 297 2 112 2 27 4 68 8 34 2 202 1 72 1 40 1 315 1 120 2 204 2 74 6 259 1 371 2 262 1 162 4 161 2 121 2 165 6 44 5 321 6 166 1 211 4 213 1 272 2 50 2 328 4 86 1 379 3 218 2 219 2 131 1 
31 1 224 2 134 5 94 1 34 2 338 2 5 1 142 1 57 1 339 5 74 3 100 6 145 2 371 1 12 8 102 1 162 2 373 1 44 1 15 1 189 1 321 5 211 2 292 2 22 2 297 1 245 1 216 1 194 1 328 2 86 1 27 2 66 1 219 2 68 5 
365 1 338 1 57 1 256 1 98 1 340 1 343 1 10 1 260 1 183 1 371 1 162 1 12 2 374 1 44 1 242 1 211 1 347 1 292 2 47 1 20 1 22 2 278 1 328 1 26 1 27 1 28 1 68 2 
224 1 166 1 211 1 106 1 339 1 328 1 27 1 162 1 12 1 68 1 
321 5 134 5 34 2 292 2 22 2 338 2 339 5 74 5 100 10 145 2 219 2 371 1 161 1 12 5 68 5 
224 1 189 1 339 1 57 1 44 1 15 1 
72 1 140 2 315 1 368 1 40 1 57 3 162 1 12 2 121 4 122 1 103 4 164 1 165 1 188 2 15 2 44 3 189 4 151 1 211 2 349 1 244 4 297 2 352 1 50 1 328 2 86 2 27 2 306 1 68 2 
32 1 226 1 201 1 72 1 117 1 315 1 256 1 287 1 7 1 342 1 341 2 343 2 260 3 183 2 121 1 103 1 14 1 290 1 188 1 165 1 191 1 59 1 108 1 20 2 244 1 378 1 50 1 278 2 355 1 28 3 363 1 131 1 
321 2 224 2 134 2 211 1 297 1 339 4 74 2 328 1 100 4 86 1 27 1 162 1 12 1 81 1 68 2 
1 1 150 1 171 1 
150 1 171 1 303 1 3 1 186 1 
1 1 150 1 171 1 
1 1 150 1 171 1 
150 1 171 1 187 1 
150 1 171 1 187 1 
150 1 171 1 187 1 
150 1 171 1 
228 1 84 1 
226 4 347 1 308 1 242 1 292 1 192 3 378 2 338 1 273 2 7 2 98 1 355 2 341 4 342 2 64 1 281 4 81 1 362 1 363 8 382 1 
226 3 308 1 242 1 347 1 192 2 292 1 338 1 273 2 98 1 281 3 81 1 195 1 362 1 363 6 
226 2 34 1 192 2 292 1 378 1 338 1 273 1 7 1 355 1 341 2 342 1 145 1 64 1 182 1 219 1 281 2 363 4 
82 1 34 1 94 2 226 4 292 1 192 2 338 1 273 1 145 1 64 1 66 1 219 1 102 1 281 3 363 7 
197 1 226 12 94 2 34 2 308 1 338 3 98 2 7 2 235 1 341 4 342 2 145 2 81 1 82 1 125 1 347 1 242 2 192 9 292 3 378 2 273 5 355 2 64 4 219 2 66 2 281 11 362 1 363 23 382 2 
226 1 94 1 363 1 
66 1 281 1 363 1 
226 3 34 1 292 1 192 3 378 1 338 1 273 2 7 1 355 1 342 1 341 2 145 1 64 1 182 1 219 1 161 1 281 3 363 6 
226 6 94 1 34 2 338 2 5 1 142 1 7 1 342 1 341 2 145 2 102 1 373 1 292 2 192 2 378 1 49 1 273 1 216 1 194 1 355 1 64 1 66 1 219 2 281 6 363 12 
226 3 347 1 242 1 292 1 192 2 338 1 273 1 98 1 64 1 281 3 363 6 
226 2 242 1 308 1 192 2 378 1 273 1 98 1 235 1 7 1 355 1 341 2 342 1 64 1 281 1 362 1 363 3 382 1 
226 5 242 2 347 1 192 5 292 2 378 1 49 1 338 2 273 3 7 1 98 2 355 1 342 1 341 2 26 1 64 2 281 5 363 10 
292 1 192 1 378 1 49 1 7 1 355 1 341 2 342 1 64 1 219 1 281 2 363 2 
226 2 34 1 192 2 292 1 378 1 338 1 49 1 273 1 7 1 355 1 341 2 342 1 145 1 64 1 219 1 281 2 363 4 
226 2 199 1 242 1 192 2 378 3 49 1 273 1 235 1 7 3 98 1 355 3 341 6 342 3 64 1 281 1 382 1 363 3 
226 18 94 4 34 3 308 1 199 1 338 5 98 3 235 1 7 5 342 5 341 10 145 3 182 1 102 1 185 1 81 1 82 1 376 1 347 2 242 3 292 5 192 12 378 5 49 1 273 7 355 5 64 5 66 3 219 3 281 16 362 1 382 2 363 34 196 1 
226 4 94 1 308 1 338 1 7 1 98 1 342 1 341 2 102 1 373 1 81 1 242 1 347 1 292 1 192 2 378 1 49 1 273 2 355 1 66 1 281 4 362 1 363 8 
226 5 94 2 308 1 338 1 98 1 7 2 342 2 341 4 145 1 182 1 102 1 373 1 81 1 82 1 347 1 242 1 292 2 192 3 378 2 49 1 273 2 355 2 64 1 66 1 219 1 281 6 362 1 363 11 
226 10 94 1 34 2 308 1 338 3 5 1 142 1 98 1 7 3 342 3 341 6 145 2 182 1 102 1 373 1 81 1 347 1 242 1 292 3 192 4 378 3 49 1 273 3 216 1 194 1 355 3 64 1 66 1 219 2 281 9 362 1 363 19 382 1 
226 7 94 1 34 1 308 1 338 2 5 1 142 1 98 1 7 3 342 3 341 6 145 2 182 1 102 1 373 1 81 1 347 1 242 1 292 3 192 5 378 3 49 1 273 3 216 1 194 1 355 3 64 2 66 1 219 2 281 10 362 1 382 1 363 17 
226 4 94 1 308 1 338 1 7 1 98 1 342 1 341 2 102 1 373 1 81 1 242 1 347 1 292 1 192 2 378 1 49 1 273 2 355 1 66 1 281 4 362 1 363 8 
226 6 94 1 34 2 338 2 5 1 142 1 7 1 342 1 341 2 145 2 102 1 373 1 292 2 192 2 378 1 49 1 273 1 216 1 194 1 355 1 64 1 66 1 219 2 281 6 363 12 
226 8 94 1 34 1 308 1 338 2 5 1 142 1 98 1 7 4 342 4 341 8 145 2 182 1 102 1 373 1 81 1 347 1 242 1 292 3 192 5 378 4 49 1 273 3 216 1 194 1 355 4 64 2 66 1 219 2 281 10 362 1 363 18 382 2 
226 7 94 1 34 2 199 1 338 2 5 1 142 1 7 4 342 4 341 8 145 3 102 1 373 1 292 3 192 6 378 4 49 1 273 3 216 1 194 1 355 4 64 3 66 1 219 3 281 9 363 16 382 2 
226 4 308 2 242 3 347 1 192 6 292 1 338 1 273 3 98 3 64 3 281 3 362 1 363 7 
226 8 94 1 34 1 308 1 199 1 338 2 5 1 142 1 98 1 7 4 342 4 341 8 145 2 102 1 373 1 81 1 347 1 242 1 292 3 192 4 378 4 49 1 273 3 216 1 194 1 355 4 64 1 66 1 219 2 281 10 362 1 363 18 382 2 
343 1 260 1 60 1 11 1 28 1 288 1 14 1 
322 1 293 1 60 1 296 1 252 1 343 1 260 1 11 1 160 1 28 1 288 1 14 1 
244 1 72 1 121 1 306 1 103 1 315 1 195 1 50 1 164 1 165 1 188 1 
201 1 244 1 72 1 117 1 315 1 50 1 278 1 343 1 260 2 183 1 28 2 121 1 103 1 173 1 131 1 14 1 165 1 188 1 
30 1 201 1 244 1 72 2 117 1 140 1 315 1 50 1 278 1 343 2 76 1 10 1 260 2 370 1 183 2 28 2 121 1 103 1 173 1 131 2 14 1 266 1 165 3 
30 1 36 1 244 2 72 2 61 1 117 1 140 1 315 1 50 1 278 1 343 2 76 1 10 1 260 2 370 1 183 2 28 2 121 2 103 2 173 1 131 2 14 1 266 1 165 3 
224 1 189 1 244 3 72 1 61 1 140 1 339 1 57 2 315 1 50 1 120 1 379 1 112 1 76 1 159 1 370 1 121 3 103 3 163 1 131 1 188 1 44 2 165 4 
224 1 189 1 244 3 72 1 61 1 140 1 339 1 57 2 315 1 50 1 120 1 379 1 112 1 76 1 218 1 370 1 121 3 103 3 131 1 188 1 44 2 165 4 
325 1 244 1 121 1 103 1 315 1 50 1 
285 1 325 1 310 1 213 1 244 7 72 2 271 1 254 1 315 2 299 1 50 3 318 1 380 1 89 1 359 1 121 7 103 6 131 1 335 1 188 2 165 3 
285 1 226 3 95 1 338 1 287 2 7 2 98 1 342 2 341 4 343 1 183 1 103 1 14 2 191 1 242 1 347 1 108 1 192 2 292 1 21 1 244 1 355 2 28 2 362 1 363 6 32 2 308 1 201 1 72 1 73 1 253 1 117 1 366 1 315 1 206 1 260 2 121 1 81 1 165 1 323 1 378 2 273 2 50 1 278 1 281 3 173 1 131 1 
224 1 339 1 40 1 57 3 120 1 204 1 12 1 162 2 121 1 103 1 188 1 44 3 165 2 15 1 345 1 189 2 166 1 211 2 106 1 107 1 244 1 272 1 328 2 379 1 112 1 27 2 218 1 68 1 
325 1 202 1 213 1 244 1 72 1 315 1 50 2 112 1 121 1 103 1 131 1 283 1 165 2 
285 1 244 4 72 1 61 1 315 1 50 1 99 1 121 4 103 4 306 1 164 1 188 1 165 1 
310 1 244 2 72 1 140 1 254 1 315 1 50 2 319 1 41 1 121 2 54 1 103 2 131 1 165 1 
247 1 77 1 37 1 244 1 121 1 193 1 103 1 315 1 50 1 188 1 
285 1 244 2 72 1 271 1 315 1 50 1 89 1 121 2 103 2 13 1 165 1 
285 1 244 5 72 2 140 1 271 1 315 2 50 2 99 1 318 1 121 5 306 1 103 4 164 1 188 1 335 1 165 3 
285 1 244 5 72 2 140 1 271 1 315 2 158 1 50 2 99 1 318 1 121 5 306 1 103 4 164 1 188 1 165 3 
36 1 244 1 72 1 117 1 315 1 50 1 278 1 343 1 260 2 183 1 28 2 121 1 103 1 173 1 131 1 14 1 165 1 188 1 
310 1 213 1 244 1 72 1 254 1 140 1 315 1 50 2 359 1 121 1 103 1 131 1 165 1 
369 1 237 1 375 1 343 1 0 1 260 1 243 1 28 1 298 1 
45 1 0 1 313 1 
369 1 375 1 0 1 249 1 14 1 
345 1 224 1 30 1 375 2 45 1 0 1 251 1 136 1 313 1 97 1 339 1 57 2 120 1 369 2 10 1 249 2 14 1 266 1 44 2 
207 1 119 1 220 1 195 1 
301 1 207 1 52 1 129 1 119 1 220 1 263 1 
9 1 358 1 263 1 
336 1 126 1 119 1 24 1 301 3 52 1 207 1 129 1 263 3 220 1 265 1 133 2 
153 1 301 2 309 1 207 1 52 1 129 1 119 1 220 1 263 2 
2 1 35 1 193 1 119 1 301 1 52 1 77 1 53 1 129 1 263 1 265 1 
301 1 207 1 52 1 129 1 119 1 263 1 265 1 
301 1 207 2 52 1 129 1 220 1 263 1 265 1 
284 1 33 1 119 1 301 2 207 1 52 2 129 2 113 1 263 2 265 1 
69 1 2 1 119 2 153 2 205 1 301 3 207 1 52 1 129 1 304 1 220 1 263 3 265 1 
35 1 37 1 193 2 119 1 153 1 301 2 207 1 52 1 77 1 129 1 220 1 263 2 333 1 222 1 265 1 
309 1 2 1 137 1 119 2 153 2 301 4 207 1 52 2 129 2 304 1 220 1 263 4 265 1 
301 1 207 1 52 1 129 1 119 1 220 1 263 1 265 1 
2 1 336 1 270 1 119 3 24 1 153 2 301 4 207 2 52 1 129 1 304 1 220 2 263 4 133 1 
348 1 119 1 178 1 275 1 153 1 301 2 207 1 52 1 129 1 263 2 220 1 265 1 
268 1 336 2 119 1 24 1 301 3 52 1 207 1 129 1 263 3 220 1 265 1 133 2 
291 1 18 1 80 2 119 2 
116 1 301 1 52 1 129 1 263 1 265 1 
153 1 205 1 301 2 207 1 52 1 129 1 119 1 220 1 263 2 265 1 
128 1 
301 1 207 1 52 1 129 1 119 1 220 1 263 1 265 1 
153 1 205 1 301 3 207 1 52 1 129 1 119 1 220 1 263 3 265 1 133 1 
2 1 270 1 304 1 119 1 
207 1 119 1 

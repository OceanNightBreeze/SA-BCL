#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 33 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 3 317 1 229 1 203 1 182 1 220 2 51 2 171 2 9 1 237 3 283 1 113 1 313 1 
243 9 169 1 118 2 272 1 26 2 220 5 310 1 149 1 171 2 51 2 9 6 311 1 313 1 14 1 344 1 317 1 79 1 229 4 203 3 104 2 231 2 134 1 182 2 209 1 237 9 281 1 283 1 113 1 
243 9 169 1 118 2 272 1 26 2 220 5 310 1 149 1 171 2 51 2 9 6 311 1 313 1 14 1 344 1 317 1 79 1 229 4 203 3 104 2 231 2 134 1 182 2 209 1 237 9 281 1 283 1 113 1 
243 10 169 1 118 2 272 1 26 2 220 6 310 1 149 1 171 2 51 2 9 7 311 1 313 1 14 1 344 1 317 1 79 1 229 5 203 4 104 2 231 2 134 1 182 2 209 1 237 10 281 1 283 1 113 1 
243 7 169 1 118 2 272 1 26 2 220 4 149 1 171 2 51 2 9 4 311 1 313 1 14 1 344 1 317 1 79 1 229 3 203 2 104 1 231 2 134 1 182 2 209 1 237 7 281 1 283 1 113 1 
344 1 243 4 79 1 229 2 203 1 118 1 104 2 231 1 26 1 220 3 310 1 51 1 171 1 9 3 237 4 283 1 113 1 313 1 
243 2 16 1 134 1 231 1 26 1 182 1 220 1 161 1 51 1 171 1 237 2 311 1 283 1 113 1 65 1 313 1 
344 1 243 9 317 1 332 1 79 1 229 4 203 3 118 1 104 2 231 1 26 1 182 1 220 5 310 1 209 1 51 2 171 2 9 7 281 1 237 9 283 1 113 1 313 1 342 1 
344 1 243 9 317 1 332 1 79 1 229 4 203 3 118 1 104 2 231 1 26 1 182 1 220 5 310 1 209 1 51 2 171 2 9 7 281 1 237 9 283 1 113 1 313 1 342 1 
0 1 315 1 46 1 166 1 261 1 227 1 132 1 146 1 48 1 336 1 190 1 63 1 355 1 382 1 
175 1 
175 1 49 1 233 1 368 1 63 2 85 1 132 1 48 2 
198 2 175 1 68 1 132 2 48 5 205 1 291 1 206 1 253 1 322 1 49 1 120 2 233 2 303 2 50 1 368 1 63 5 197 1 284 1 
175 1 49 1 165 1 
175 1 94 1 133 2 
190 2 0 2 261 2 227 2 146 2 335 1 336 2 382 1 
164 2 0 2 270 1 2 1 146 2 335 1 147 1 336 2 289 1 290 2 337 1 92 1 190 2 275 1 370 2 124 1 312 1 15 2 98 1 199 1 261 3 100 1 297 1 227 3 201 1 59 1 280 2 179 1 300 1 84 1 354 1 159 1 282 1 356 1 88 1 64 1 382 1 
190 1 0 1 315 1 166 1 261 1 227 1 355 1 146 1 336 1 382 1 
0 1 175 1 315 2 46 1 166 1 261 2 227 2 177 1 146 1 336 2 352 1 190 1 49 1 355 1 325 1 274 1 87 1 382 1 
0 2 175 1 315 2 46 1 166 1 261 2 227 2 177 1 146 2 336 2 48 1 190 2 49 1 355 1 63 1 325 1 87 1 382 1 
233 1 63 1 41 1 132 1 48 1 
175 1 49 1 233 1 188 1 368 1 63 2 132 1 48 2 
233 1 63 1 48 1 
0 1 116 1 261 2 227 2 146 1 335 2 336 2 190 1 314 1 
213 1 72 1 353 1 
330 1 261 1 227 1 297 1 280 1 335 1 289 1 179 1 92 1 337 1 354 1 282 1 370 1 275 1 124 1 15 1 
261 2 297 1 227 2 146 1 280 1 289 1 336 1 72 1 337 1 92 1 179 1 190 1 354 1 62 1 282 1 275 1 370 1 124 1 127 1 15 1 
165 1 335 1 
114 1 0 1 129 1 261 5 227 5 146 4 70 1 335 1 336 5 352 1 190 4 62 2 127 1 314 1 
190 2 315 1 166 1 261 2 227 2 146 2 250 1 336 2 
0 1 190 3 62 1 261 3 227 3 146 3 335 1 336 3 
190 1 315 1 166 1 261 1 227 1 146 1 336 1 
190 1 0 1 315 1 116 1 261 1 227 1 146 1 336 1 314 1 
0 1 190 2 315 1 62 1 261 2 350 1 227 2 325 1 177 1 87 1 146 2 33 1 336 2 127 1 314 1 
190 1 129 1 62 1 261 2 227 2 146 1 335 1 336 2 352 1 
190 1 315 1 62 1 261 1 350 1 227 1 325 1 177 1 87 1 146 1 43 1 336 1 127 1 
213 1 0 1 261 2 227 2 146 2 336 2 72 1 190 2 62 1 314 1 
261 1 227 1 297 1 280 1 335 1 289 1 179 1 92 1 337 1 354 1 282 1 370 1 275 1 124 1 15 1 
315 1 261 1 227 1 297 1 280 1 335 1 230 1 289 1 92 1 337 1 366 1 354 1 282 1 370 1 275 1 15 1 242 1 
213 2 164 4 2 1 147 2 290 2 72 2 6 1 28 1 52 1 193 1 76 1 199 1 100 1 376 1 82 1 84 1 300 2 323 1 353 2 301 1 238 1 356 1 162 1 64 1 
190 1 315 1 261 1 227 1 177 1 146 1 250 1 336 1 
38 1 256 1 189 1 
38 2 374 1 256 2 249 1 22 1 265 1 
38 1 256 1 
38 1 256 1 
374 1 249 1 
374 1 249 1 
374 1 249 1 
38 1 256 1 160 1 
38 1 256 1 160 1 
38 1 256 1 160 1 
38 1 256 1 318 1 
38 1 256 1 318 1 
38 1 256 1 318 1 
35 1 261 2 143 1 168 1 348 1 131 1 101 1 227 2 189 1 146 2 335 1 336 2 48 1 267 1 135 1 190 2 38 1 256 1 8 1 29 1 63 1 293 1 111 1 30 1 
175 1 143 2 348 2 333 1 60 1 103 1 22 1 264 2 48 2 135 2 267 1 38 2 107 1 74 1 256 2 29 3 293 2 63 2 142 1 
360 2 228 1 118 1 65 1 231 2 
26 1 118 1 231 1 
26 1 65 1 231 1 
360 1 367 1 228 1 118 2 65 1 231 3 
360 1 228 1 378 1 118 1 65 1 231 2 
145 1 48 5 4 2 6 1 253 3 120 1 49 1 8 1 94 1 219 2 368 1 96 1 54 2 195 1 197 2 198 1 175 2 131 1 101 1 320 1 376 1 132 4 82 1 133 3 205 1 233 1 301 1 303 1 324 1 63 5 186 1 185 1 
145 2 48 9 4 6 307 5 255 1 6 3 253 8 49 1 120 2 94 3 219 6 50 1 368 1 96 2 195 1 13 1 12 1 197 6 223 1 56 1 198 2 175 5 101 4 376 3 132 7 82 3 133 9 205 1 233 6 301 3 303 2 63 9 41 5 186 3 305 1 
0 1 46 1 166 1 145 1 146 1 336 1 48 3 4 2 190 1 6 1 253 3 49 1 120 1 94 2 219 2 50 1 96 1 54 1 197 2 198 1 315 1 175 3 261 1 227 1 101 1 376 1 132 2 82 1 133 4 301 1 303 1 324 1 355 1 63 3 185 1 186 1 382 1 
145 1 48 2 4 2 6 1 253 3 120 1 94 2 219 2 50 1 96 1 54 1 13 1 197 2 198 1 175 2 101 1 376 1 132 1 82 1 133 4 301 1 303 1 324 1 63 2 185 1 186 1 
381 1 
165 1 297 1 141 1 
39 1 297 1 
337 1 297 1 275 1 
297 1 288 1 
297 1 275 1 
337 1 297 3 151 1 141 2 275 1 362 1 
128 1 346 1 164 7 246 1 117 1 376 1 216 1 147 4 82 1 251 1 300 3 52 2 338 1 75 1 193 3 86 2 194 1 153 1 
164 31 246 1 117 1 2 1 271 3 71 1 147 16 290 2 251 5 6 3 309 1 338 2 52 5 75 1 193 10 194 2 153 2 128 2 172 4 346 1 100 1 279 1 376 4 82 4 84 1 300 15 207 1 302 1 301 3 108 1 236 1 86 3 356 1 186 3 
164 9 246 1 2 2 117 1 71 1 147 5 290 4 251 1 52 3 338 1 193 4 194 1 295 1 153 1 77 1 128 1 346 1 100 2 376 1 82 1 84 2 300 4 86 2 356 2 
128 1 164 7 346 1 246 1 117 1 376 1 147 4 82 1 251 1 300 3 52 2 338 1 75 1 193 3 86 2 194 1 153 1 
128 1 164 7 346 1 246 1 117 1 376 1 147 4 82 1 251 1 300 3 52 2 338 1 75 1 193 3 86 2 194 1 153 1 
45 1 243 1 156 1 297 1 280 1 263 2 289 1 92 1 308 1 73 2 182 2 7 1 122 1 51 1 171 1 40 1 237 1 282 1 222 2 275 1 370 1 357 1 15 1 
243 1 118 1 289 1 92 1 26 1 252 1 73 1 27 1 367 1 221 1 171 1 51 1 222 1 370 1 313 1 15 1 372 1 277 1 20 1 263 1 280 1 351 1 231 2 182 1 237 1 65 1 
243 2 248 1 118 1 289 1 92 1 26 1 73 1 27 1 367 1 220 1 221 1 9 1 171 1 51 1 222 1 370 1 313 1 15 1 372 1 277 1 20 1 263 1 280 1 351 1 231 2 182 1 237 2 283 1 113 1 65 1 
243 3 47 1 118 1 289 1 92 1 26 1 252 1 73 1 367 1 220 1 221 1 171 1 51 1 9 2 222 1 370 1 15 1 372 1 156 1 277 1 20 1 263 1 280 1 351 1 231 2 182 1 237 3 283 1 113 1 65 1 
243 2 47 1 118 1 289 1 92 1 252 1 26 1 73 1 367 1 220 1 221 1 9 2 222 1 370 1 15 1 372 1 277 1 263 1 280 1 231 2 182 1 237 2 283 1 113 1 65 1 
181 1 
45 1 244 1 48 4 289 1 336 1 92 1 253 2 292 1 93 1 94 2 7 1 96 1 53 2 10 2 55 2 197 2 15 2 155 2 198 1 261 1 297 1 21 2 202 2 205 1 352 1 303 1 208 1 63 4 163 2 119 1 25 1 120 1 368 3 275 1 370 2 274 1 224 1 175 1 315 1 375 1 226 2 227 1 177 1 321 1 280 2 133 2 233 6 282 2 325 1 326 1 140 1 87 1 89 1 
315 1 244 1 261 1 227 1 177 1 321 1 48 2 336 1 352 1 25 1 292 1 233 2 368 1 63 2 325 1 85 1 140 1 274 1 87 1 10 1 
315 1 244 1 261 1 226 1 227 1 177 1 202 1 321 1 48 1 336 1 352 1 25 1 292 1 63 1 325 1 140 1 274 1 87 1 
244 1 336 1 48 2 25 1 292 1 368 1 274 1 10 1 315 1 261 1 226 1 227 1 177 1 202 1 321 1 352 1 233 2 63 2 325 1 140 1 85 1 87 1 163 1 
0 1 1 1 244 1 46 1 146 1 3 1 48 4 336 2 190 1 292 1 254 1 253 1 49 1 94 2 53 2 10 4 55 2 197 1 198 1 155 2 347 1 261 2 21 2 202 2 352 1 205 1 303 1 355 1 63 4 163 4 166 1 119 1 25 1 120 1 368 3 274 1 175 1 315 2 226 2 227 2 177 1 321 1 81 1 233 7 325 1 85 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 146 1 336 2 48 3 190 1 253 1 292 1 93 1 49 1 94 2 53 2 55 2 10 2 197 1 198 1 155 2 261 2 21 2 202 2 352 1 205 1 303 1 355 1 63 3 163 2 166 1 119 1 25 1 120 1 368 2 274 1 315 2 175 1 226 2 227 2 177 1 321 1 133 2 233 4 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 146 1 48 3 336 2 190 1 254 1 292 1 253 1 49 1 94 2 53 2 55 2 10 2 197 1 198 1 155 2 347 1 261 2 21 2 202 2 205 1 352 1 303 1 355 1 63 3 163 2 166 1 119 1 25 1 120 1 368 2 274 1 315 2 175 1 226 2 227 2 177 1 321 1 81 1 233 4 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 146 1 48 3 336 2 190 1 254 1 292 1 253 1 49 1 94 2 53 2 55 2 10 2 197 1 198 1 155 2 347 1 261 2 21 2 202 2 205 1 352 1 303 1 355 1 63 3 163 2 166 1 119 1 25 1 120 1 368 2 274 1 315 2 175 1 226 2 227 2 177 1 321 1 81 1 233 4 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 331 2 146 1 48 3 336 2 190 1 292 1 253 1 49 1 53 2 55 2 10 2 197 1 198 1 347 1 261 2 202 2 205 1 352 1 303 1 355 1 63 3 210 1 359 1 163 2 166 1 25 1 120 1 368 2 274 1 315 2 175 1 226 2 227 2 177 1 321 1 133 2 232 2 233 4 136 1 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 146 1 3 1 48 3 336 2 190 1 254 1 292 1 253 1 49 1 94 2 53 2 10 3 55 2 197 1 198 1 155 2 347 1 261 2 21 2 202 3 352 1 205 1 303 1 355 1 63 3 163 3 166 1 119 1 25 1 120 1 368 2 274 1 315 2 175 1 226 3 227 2 177 1 321 1 81 1 233 5 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 146 1 3 1 48 3 336 2 190 1 254 1 292 1 253 1 49 1 94 2 53 2 10 3 55 2 197 1 198 1 155 2 347 1 261 2 21 2 202 3 352 1 205 1 303 1 355 1 63 3 163 3 166 1 119 1 25 1 120 1 368 2 274 1 315 2 175 1 226 3 227 2 177 1 321 1 81 1 233 5 325 1 140 1 87 1 89 1 382 1 
0 1 244 1 46 1 331 2 146 1 336 2 48 3 190 1 253 1 292 1 93 1 49 1 53 2 55 2 10 2 197 1 198 1 261 2 202 2 352 1 205 1 303 1 355 1 63 3 210 1 163 2 166 1 25 1 120 1 368 2 274 1 315 2 175 1 226 2 227 2 177 1 321 1 133 2 232 2 233 4 325 1 140 1 87 1 89 1 382 1 
45 1 164 2 2 2 248 1 146 1 336 1 289 2 147 1 290 4 5 1 92 2 252 1 190 1 7 1 370 8 275 2 76 1 312 1 125 1 15 8 78 1 316 1 199 2 261 1 100 2 227 1 297 3 58 1 201 1 102 1 280 7 23 1 84 2 300 1 62 1 282 2 356 2 88 2 64 2 
213 1 0 1 164 3 2 1 146 1 336 1 147 1 290 2 72 1 218 1 190 1 6 1 52 1 193 1 314 1 199 1 261 1 100 1 227 1 319 1 376 1 82 1 84 1 300 2 353 1 301 1 356 1 186 1 64 1 
213 1 164 6 246 1 165 1 117 1 2 1 335 2 147 3 290 2 72 1 338 1 52 2 193 2 76 1 128 1 346 1 199 1 100 1 376 1 82 1 84 1 300 3 353 1 86 1 356 1 64 1 
213 4 164 14 2 2 271 3 335 1 147 8 251 1 290 4 72 11 6 1 52 1 193 2 312 1 172 3 199 1 100 2 201 1 176 1 319 1 376 2 82 1 300 6 84 2 137 1 353 11 302 1 301 2 108 1 139 1 356 2 329 1 186 2 64 2 
330 1 213 1 164 2 2 1 285 1 146 1 335 1 289 1 336 1 147 1 290 2 337 1 92 1 190 1 275 1 370 1 260 1 124 1 312 1 127 1 15 1 199 1 261 2 100 1 297 1 227 2 201 1 319 1 280 1 179 1 266 1 84 1 300 1 354 1 62 1 282 1 356 1 64 1 
246 1 2 3 146 1 335 2 336 1 289 2 147 10 290 6 251 4 92 2 337 2 252 1 190 1 6 2 192 2 338 1 52 4 259 2 193 8 15 3 346 1 199 3 261 3 100 3 297 2 201 1 59 2 300 10 62 1 354 2 353 7 301 2 356 3 64 3 213 7 164 20 167 2 117 1 72 7 370 3 275 2 124 2 312 1 127 1 128 1 34 1 373 2 227 3 319 1 376 3 280 3 82 3 179 2 84 3 184 1 282 1 86 1 186 2 42 1 
213 1 164 2 199 1 100 1 2 1 376 1 147 2 251 1 290 2 72 1 84 1 323 1 353 1 301 1 193 1 76 1 356 1 64 1 
213 1 164 2 199 1 100 1 2 1 290 2 82 1 72 1 84 1 6 1 300 2 353 1 52 1 238 1 193 1 76 1 356 1 64 1 
213 2 164 4 2 1 147 2 290 2 251 1 72 2 6 1 52 1 193 2 76 1 199 1 100 1 376 1 82 1 84 1 300 2 301 1 353 2 356 1 186 1 64 1 
213 1 164 2 199 1 100 1 2 1 58 1 376 1 147 2 251 1 290 2 72 1 84 1 323 1 353 1 301 1 193 1 356 1 64 1 
213 1 164 2 199 1 100 1 2 1 58 1 290 2 82 1 72 1 84 1 6 1 300 2 353 1 52 1 238 1 193 1 356 1 64 1 
213 2 164 4 2 1 147 2 290 2 251 1 72 2 6 1 52 1 193 2 199 1 100 1 58 1 376 1 82 1 84 1 300 2 301 1 353 2 356 1 186 1 64 1 
213 2 164 4 199 1 100 1 2 1 376 1 147 2 82 1 251 1 290 2 72 2 300 2 6 1 84 1 353 2 301 1 52 1 193 2 356 1 186 1 64 1 
164 2 2 1 335 1 147 1 289 1 290 2 337 1 92 1 275 1 370 1 124 1 312 1 15 1 199 1 261 1 100 1 297 1 227 1 201 1 59 1 280 1 179 1 84 1 300 1 354 1 282 1 356 1 64 1 
164 1 2 1 335 1 289 1 290 2 337 1 92 1 366 1 191 1 275 1 370 1 15 1 315 1 199 1 261 1 100 1 297 1 227 1 201 1 280 1 230 1 84 1 300 1 354 1 282 1 356 1 64 1 242 1 
213 2 164 4 2 1 147 2 290 2 251 1 72 2 6 1 52 1 193 2 199 1 100 1 319 1 376 1 82 1 84 1 300 2 301 1 353 2 356 1 186 1 64 1 
213 2 164 4 2 1 248 1 147 2 289 1 251 1 290 2 72 2 337 1 92 1 6 1 192 1 52 1 193 2 370 1 275 1 124 1 15 1 199 1 261 1 100 1 297 1 227 1 376 1 59 1 280 1 82 1 179 1 300 2 84 1 353 2 301 1 354 1 356 1 186 1 64 1 
213 1 0 1 164 3 2 1 146 1 336 1 147 2 251 1 290 2 72 1 6 1 190 1 121 1 193 1 314 1 199 1 261 1 100 1 227 1 319 1 376 1 82 1 300 1 84 1 301 1 353 1 356 1 186 1 64 1 
164 19 2 2 271 1 147 9 290 4 251 3 170 2 6 3 52 3 273 1 276 1 193 6 77 1 172 2 225 1 349 1 100 2 18 2 376 3 82 3 84 2 300 10 302 1 301 3 108 1 240 1 356 2 186 3 187 1 212 1 
164 26 2 3 271 2 71 2 147 14 251 2 290 6 364 1 170 4 6 2 365 1 52 2 273 1 258 1 193 4 276 1 31 1 77 1 343 1 172 2 225 2 349 1 100 3 18 1 376 3 82 2 300 12 84 3 301 3 108 2 138 1 356 3 186 3 212 2 
164 41 246 1 117 1 2 3 271 3 71 1 147 20 290 6 251 4 364 1 170 4 6 4 365 1 338 1 258 1 52 4 273 1 276 1 193 8 31 1 343 1 77 1 128 1 172 4 346 1 225 1 349 1 100 3 18 1 376 5 82 5 84 3 300 21 302 1 301 4 138 1 108 3 240 1 86 1 356 3 186 4 112 1 212 2 
164 38 246 1 117 1 2 4 271 3 71 2 147 20 290 8 251 3 364 1 170 4 6 3 365 1 338 1 258 1 52 4 273 1 276 1 193 7 31 1 343 1 77 1 128 1 172 4 346 1 225 1 349 1 100 4 18 1 376 5 82 4 84 4 300 18 302 1 301 4 138 1 108 3 240 1 86 1 356 4 186 4 112 1 212 2 
164 52 246 1 117 1 2 2 271 4 71 1 147 27 290 4 251 7 364 1 170 4 6 7 365 1 338 1 258 1 52 7 273 1 276 1 193 14 31 1 343 1 77 1 128 1 172 4 346 1 225 1 349 1 100 2 18 1 376 8 82 8 84 2 300 25 137 2 302 2 301 7 138 1 108 2 86 1 356 2 186 7 212 1 
135 1 38 1 107 1 74 1 158 1 256 1 143 1 348 1 293 1 22 1 
168 1 189 1 
173 1 135 1 38 1 256 1 143 1 348 1 293 1 154 1 106 1 
160 1 215 1 
306 1 318 1 265 1 
175 1 143 1 348 1 60 1 103 1 22 1 264 1 48 1 267 1 135 1 38 1 107 1 74 1 256 1 29 2 63 1 293 1 142 1 
175 1 143 1 348 1 60 1 103 1 22 1 264 1 48 1 267 1 135 1 38 1 107 1 74 1 256 1 29 2 63 1 293 1 142 1 
175 1 143 1 348 1 60 1 103 1 22 1 264 1 48 1 267 1 135 1 38 1 107 1 74 1 256 1 29 2 63 1 293 1 142 1 
160 1 215 1 265 1 
160 1 215 1 265 1 
306 1 318 1 
306 1 318 1 265 1 
35 1 111 1 
143 1 168 1 189 1 146 2 335 1 48 1 336 2 190 2 256 1 8 1 29 1 293 1 30 1 35 1 261 2 36 1 348 1 227 2 101 1 131 1 132 1 264 1 135 1 38 1 63 1 111 1 142 1 
164 2 2 1 289 1 336 2 147 1 290 2 92 1 123 1 275 1 294 1 370 2 312 1 196 1 125 1 15 2 199 1 261 2 157 1 100 1 297 1 227 2 201 1 319 1 102 1 280 2 84 1 300 1 327 1 356 1 88 2 64 1 
45 1 297 1 280 1 289 1 92 1 73 1 7 1 339 1 282 1 275 1 370 1 241 1 357 1 15 1 
115 1 277 1 377 1 118 1 280 1 351 1 289 1 231 2 92 1 26 1 252 1 73 1 367 1 221 1 339 1 370 1 65 1 15 1 
115 1 277 1 248 1 377 1 118 1 280 2 351 1 289 1 231 2 92 1 26 1 252 1 73 1 367 1 221 1 339 1 370 2 65 1 15 2 
115 1 277 1 118 1 280 1 351 1 289 1 231 2 92 1 26 1 252 1 61 1 73 1 367 1 221 1 370 1 65 1 15 1 
239 1 
198 1 175 1 68 1 205 1 322 1 253 1 120 1 49 1 303 1 197 1 
373 1 175 5 376 2 4 5 133 10 82 2 83 2 6 2 253 5 301 2 219 5 94 5 97 1 186 2 197 5 
175 1 49 1 233 1 63 1 368 1 48 1 
45 1 287 1 289 1 48 3 92 1 253 2 120 2 7 1 95 1 50 1 368 2 96 2 275 1 370 4 197 2 15 4 198 2 224 2 375 1 200 1 297 1 298 2 280 4 205 1 233 4 303 2 63 3 282 2 326 1 
253 1 322 1 175 1 49 1 165 1 68 1 197 1 
155 1 198 1 175 2 21 1 119 1 48 1 133 1 205 1 253 1 49 1 233 1 120 1 303 1 94 1 63 1 368 1 197 1 
90 2 248 1 289 4 48 5 288 2 4 6 92 3 337 3 253 9 6 2 49 2 257 2 94 6 96 2 97 2 151 1 341 2 197 8 15 3 345 2 198 4 17 1 200 1 297 10 298 1 105 1 205 4 301 2 303 4 63 5 268 2 67 2 68 1 214 2 120 4 219 6 368 3 275 3 370 3 373 2 224 1 175 8 376 2 280 3 133 12 82 2 322 1 83 2 233 5 39 3 282 1 141 2 328 1 186 2 
271 1 69 1 91 1 48 1 4 5 364 1 253 8 6 2 365 1 120 2 49 2 219 5 94 3 368 1 258 1 96 1 97 1 343 1 197 5 172 1 224 1 198 2 175 5 376 2 133 6 205 2 82 2 83 2 233 1 301 2 303 2 108 1 138 1 63 1 186 2 
0 1 246 1 46 1 166 1 146 1 48 1 336 1 254 1 253 2 190 1 120 1 338 1 97 1 197 2 128 1 57 1 198 1 315 1 261 1 227 1 376 2 205 1 82 1 83 2 303 1 63 1 355 1 382 1 
164 1 0 2 2 1 146 2 335 1 336 2 289 1 290 2 92 1 337 1 190 2 370 1 275 1 124 1 15 1 199 1 261 3 100 1 227 3 297 1 201 1 59 1 280 1 179 1 300 1 84 1 354 1 159 1 282 1 356 1 64 1 382 1 
198 1 224 1 175 4 133 4 4 2 205 1 253 1 120 1 49 2 219 2 94 2 303 1 96 1 86 1 197 2 
135 1 107 1 143 1 111 1 204 1 
135 1 143 1 19 1 
135 1 143 1 19 1 
135 1 143 1 19 1 
135 1 143 1 11 1 
135 1 143 1 11 1 
135 1 143 1 11 1 
135 1 143 1 
38 1 256 1 
128 2 57 1 164 10 246 1 100 1 2 1 376 2 147 5 290 2 251 2 82 2 84 1 300 5 338 2 52 3 193 5 356 1 77 1 
164 2 100 1 2 1 376 1 147 2 290 2 251 1 84 1 301 1 193 1 356 1 77 1 
164 4 100 1 2 1 376 1 147 2 82 1 290 2 251 1 300 2 6 1 84 1 301 1 52 1 193 2 356 1 186 1 77 1 
128 1 164 3 245 1 100 3 2 3 71 1 147 1 290 6 251 1 300 2 84 3 338 1 52 1 240 1 193 2 356 3 77 1 
164 34 246 2 245 1 117 1 2 5 271 3 71 2 147 16 290 10 251 5 6 3 309 1 338 3 52 7 193 12 77 1 128 3 172 4 346 1 100 5 279 1 376 5 82 5 300 18 84 5 302 1 301 3 108 1 236 1 86 1 240 1 356 5 186 3 304 1 
128 1 164 8 346 1 246 1 100 2 2 2 117 1 376 1 71 1 147 4 82 1 251 1 290 4 300 4 84 2 52 2 338 1 86 1 193 3 356 2 
128 1 346 1 164 6 246 1 165 1 117 1 376 1 147 3 82 1 300 3 338 1 52 2 86 1 193 2 
164 4 100 1 2 1 376 1 147 2 82 1 290 2 251 1 300 2 6 1 84 1 301 1 52 1 193 2 356 1 186 1 304 1 
172 2 164 7 271 1 376 1 147 3 82 1 251 1 6 1 300 4 302 1 301 1 108 1 52 1 193 2 186 1 
164 23 246 1 245 1 117 1 2 2 271 2 71 2 147 11 251 4 290 4 6 2 338 2 52 5 193 9 128 2 172 2 346 1 100 2 376 3 82 3 300 12 84 2 301 2 302 1 137 1 86 1 356 2 186 2 329 1 
172 1 164 1 300 1 
164 1 271 1 147 1 
373 1 164 6 100 1 2 1 376 1 147 3 290 2 251 1 82 1 84 1 300 3 6 1 301 1 52 2 193 3 356 1 186 1 304 1 
164 12 2 1 271 1 147 6 251 1 290 2 364 1 6 2 365 1 258 1 52 1 193 2 77 1 343 1 172 1 100 1 376 2 82 2 300 6 84 1 301 2 108 1 138 1 356 1 186 2 
128 1 164 6 246 1 376 1 147 3 82 1 251 1 300 3 338 1 52 1 193 2 
128 1 346 1 164 3 245 1 100 1 2 1 117 1 71 1 147 1 251 1 290 2 300 2 84 1 52 1 338 1 193 2 356 1 
164 8 246 1 2 1 117 1 271 1 147 4 290 2 258 1 338 1 52 2 193 2 77 1 172 1 128 1 346 1 100 1 376 1 82 1 300 4 84 1 108 1 86 1 356 1 
164 11 246 1 117 1 2 2 271 1 147 6 290 4 251 1 52 2 338 1 258 1 193 3 77 1 128 1 172 2 346 1 100 2 376 2 82 1 300 5 84 2 302 1 301 1 108 1 86 1 356 2 186 1 304 1 
164 19 246 1 117 1 2 3 271 1 71 1 147 9 251 1 290 6 364 1 6 2 365 1 338 1 258 1 52 3 193 4 77 1 343 1 128 1 172 1 346 1 100 3 376 3 82 3 300 10 84 3 301 2 108 1 138 1 86 1 356 3 186 2 304 1 
164 17 246 1 117 1 2 3 271 1 71 1 147 10 251 2 290 6 364 1 6 1 365 1 338 1 258 1 52 3 193 5 77 1 343 1 128 1 172 1 346 1 100 3 376 3 82 2 300 7 84 3 301 2 108 1 138 1 86 1 356 3 186 2 304 1 
164 8 246 1 2 1 117 1 271 1 147 4 290 2 258 1 338 1 52 2 193 2 77 1 172 1 128 1 346 1 100 1 376 1 82 1 300 4 84 1 108 1 86 1 356 1 
164 12 2 1 271 1 147 6 251 1 290 2 364 1 6 2 365 1 258 1 52 1 193 2 77 1 343 1 172 1 100 1 376 2 82 2 300 6 84 1 301 2 108 1 138 1 356 1 186 2 
164 18 246 1 117 1 2 4 271 1 71 2 147 10 251 2 290 8 364 1 6 1 365 1 338 1 258 1 52 3 193 5 77 1 343 1 128 1 172 1 346 1 100 4 376 3 82 2 300 8 84 4 301 2 108 1 138 1 86 1 356 4 186 2 304 1 
164 16 2 4 271 1 71 2 147 9 251 3 290 8 364 1 6 2 365 1 258 1 52 3 193 6 77 1 343 1 172 1 100 4 376 3 82 2 300 7 84 4 301 3 108 1 138 1 240 1 356 4 186 3 
128 3 164 7 346 2 246 1 117 1 376 1 147 3 82 1 251 3 300 4 338 3 52 3 193 6 
164 18 246 1 117 1 2 4 271 1 71 2 147 10 251 1 290 8 364 1 6 1 365 1 338 1 258 1 52 3 193 4 77 1 343 1 128 1 172 1 346 1 100 4 376 3 82 2 300 8 84 4 301 2 108 1 138 1 86 1 240 1 356 4 186 2 
129 1 261 1 227 1 110 1 335 1 336 1 352 1 
129 1 130 1 261 1 227 1 299 1 335 1 336 1 363 1 352 1 234 1 110 1 32 1 
44 1 45 1 174 1 297 1 248 1 280 4 289 1 92 1 7 1 282 1 370 4 275 1 15 4 
296 1 297 1 298 1 280 2 289 2 217 1 337 1 92 1 369 1 370 2 275 1 42 1 126 1 15 2 
92 1 26 1 221 1 282 1 370 1 65 1 280 1 289 1 231 1 15 1 
297 1 248 1 102 1 280 2 289 1 92 1 252 1 370 2 294 1 275 1 15 2 
45 1 174 1 316 1 297 3 248 1 298 1 102 1 280 4 289 2 92 2 5 1 7 1 282 1 370 5 275 2 15 5 
45 1 174 1 297 3 248 1 298 1 102 1 280 4 178 1 289 2 92 2 5 1 7 1 282 1 370 5 275 2 15 5 
92 1 45 1 165 1 7 1 297 1 282 1 275 1 370 1 280 1 289 1 15 1 
261 2 297 1 227 2 146 1 280 1 335 1 289 1 336 1 337 1 179 1 92 1 190 1 354 1 62 1 282 1 275 1 370 1 15 1 
315 1 67 1 261 2 297 3 227 2 298 1 177 1 146 1 280 1 335 1 288 1 289 1 336 2 337 2 179 1 92 1 190 2 354 1 62 1 275 2 370 1 87 1 15 1 
67 1 146 1 335 1 336 2 289 1 288 1 92 1 337 2 190 2 366 1 370 1 275 2 15 1 315 2 261 2 227 2 297 3 298 1 177 1 280 1 230 1 62 1 354 1 87 1 
44 1 269 1 175 1 67 1 297 4 298 1 286 1 280 3 288 1 289 1 48 2 337 1 92 1 49 1 233 1 39 1 63 2 282 1 275 1 370 3 141 1 341 1 15 3 
44 1 175 1 67 1 297 4 298 1 280 3 288 1 289 1 48 2 337 1 92 1 49 1 233 1 39 1 63 2 282 1 268 1 275 1 370 3 141 1 341 1 15 3 
92 1 23 1 370 1 280 1 289 1 15 1 
78 1 296 1 316 1 99 1 297 3 248 1 102 1 280 6 289 3 217 1 23 1 5 1 337 1 92 2 252 1 282 2 151 1 370 7 275 2 88 1 15 7 
213 1 164 6 246 1 117 1 2 2 248 1 146 1 335 2 147 3 289 1 336 1 290 4 72 1 337 1 92 1 190 1 192 1 52 2 338 1 193 2 275 1 370 1 259 1 124 1 15 1 128 1 346 1 199 2 261 2 100 2 297 1 227 2 319 1 376 1 59 1 280 1 82 1 179 1 300 3 84 2 353 1 354 1 62 1 86 1 327 1 356 2 64 2 
90 1 68 1 48 3 214 1 253 1 49 1 120 2 368 1 370 1 341 1 197 1 15 1 345 1 198 2 175 1 200 1 297 2 132 1 280 1 205 2 322 1 233 2 39 1 303 2 63 3 282 1 268 1 141 1 
297 2 248 1 280 2 289 2 23 1 337 1 92 1 151 1 141 1 370 2 275 1 328 1 15 2 
146 1 335 1 336 1 289 1 92 1 337 1 190 1 366 1 370 1 275 1 15 1 315 1 261 2 227 2 297 1 280 1 230 1 62 1 354 1 282 1 
296 1 99 1 297 1 298 1 280 1 289 2 217 1 337 1 92 1 151 1 370 1 275 1 15 1 
180 1 144 1 262 1 335 1 380 1 
0 1 46 1 166 1 144 1 361 1 146 1 336 1 48 1 190 1 49 1 150 1 315 2 175 1 261 1 262 1 227 1 350 1 177 1 132 1 380 1 180 1 63 1 355 1 325 1 87 1 358 1 382 1 
144 1 157 1 261 1 262 1 227 1 336 1 180 1 123 1 196 1 
180 1 361 1 358 1 
243 1 220 1 171 1 51 1 237 1 283 1 113 1 313 1 
243 4 247 1 229 1 203 1 134 1 183 1 220 3 9 2 51 1 171 1 237 4 283 2 340 1 113 2 
243 2 220 1 235 1 51 1 171 1 109 1 9 1 237 2 283 1 113 1 313 1 342 1 
243 3 247 1 134 2 183 2 220 1 51 1 171 1 237 3 211 1 283 1 113 1 313 1 
148 1 220 2 37 2 80 1 
66 1 243 1 171 1 51 1 237 1 313 1 
243 2 220 1 9 1 171 1 51 1 281 1 237 2 283 1 113 1 313 1 
152 1 
243 1 220 1 171 1 51 1 237 1 283 1 113 1 313 1 
165 1 220 1 283 1 113 1 
243 1 220 1 171 1 51 1 237 1 283 1 113 1 
182 1 222 1 237 1 
243 3 24 1 247 1 134 2 183 1 220 1 51 1 171 1 237 3 283 1 113 1 313 1 
243 2 220 1 9 1 171 1 51 1 237 2 283 1 113 1 104 1 
26 1 243 1 220 1 171 1 51 1 237 1 229 1 79 1 118 1 313 1 231 1 
243 1 220 1 171 1 51 1 237 1 283 1 313 1 
243 1 171 1 51 1 237 1 283 2 113 1 313 1 
243 2 278 1 379 1 220 1 51 2 171 2 237 2 371 1 283 1 313 1 
243 3 229 1 203 1 220 2 51 1 171 1 209 1 9 2 237 3 281 1 283 1 113 1 313 1 
243 2 334 1 118 1 231 2 26 1 367 1 220 1 51 1 171 1 9 1 237 2 283 1 113 1 65 1 313 1 
243 4 229 1 203 1 104 1 220 2 51 2 171 2 310 1 9 2 237 4 283 1 113 1 313 1 
243 3 134 1 220 1 9 1 51 1 171 1 237 3 281 1 283 1 113 1 313 1 
220 1 229 1 340 1 203 1 
220 1 283 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 57 58 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (158,239) (22,228) (22,228) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (158,239) (158,239) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (158,239) (22,228) (22,228) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (158,239) (22,228) (22,228) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (158,239) (22,228) (22,228) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 57 58 274 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 4 119 1 256 3 336 1 144 2 87 5 90 1 5 2 360 1 91 1 361 1 245 1 130 1 63 1 178 9 104 1 102 2 103 1 67 1 41 2 16 1 236 1 252 2 269 1 315 2 116 2 49 9 164 6 
78 4 119 1 256 3 336 1 144 2 87 5 90 1 5 2 360 1 91 1 361 1 245 1 130 1 63 1 178 9 104 1 103 1 102 2 67 1 41 2 16 1 236 1 252 2 269 1 315 2 116 2 49 9 164 6 
78 5 119 1 256 4 336 1 144 2 87 6 90 1 5 2 360 1 91 1 361 1 245 1 130 1 63 1 178 10 104 1 103 1 102 2 67 1 41 2 16 1 236 1 252 2 269 1 315 2 116 2 49 10 164 7 
78 3 119 1 256 2 336 1 144 2 87 4 90 1 5 2 360 1 91 1 361 1 245 1 130 1 63 1 178 7 104 1 103 1 102 1 67 1 41 2 236 1 252 2 269 1 315 2 116 2 49 7 164 4 
78 2 104 1 102 2 119 1 256 1 41 1 16 1 144 1 87 3 5 1 360 1 361 1 252 1 269 1 116 1 178 4 49 4 164 3 
104 1 236 1 144 1 173 1 258 1 87 1 5 1 91 1 360 1 361 1 252 1 315 1 116 1 178 2 49 2 356 1 
78 1 104 1 256 1 87 2 360 1 361 1 252 2 315 1 130 1 116 2 178 3 49 3 164 1 
78 4 119 1 256 3 144 1 87 5 5 1 360 1 361 1 245 1 130 1 62 1 178 9 104 1 103 1 102 2 41 1 16 1 252 2 352 1 315 1 269 1 116 2 164 7 49 9 
78 4 119 1 256 3 144 1 87 5 5 1 360 1 361 1 245 1 130 1 62 1 178 9 104 1 103 1 102 2 41 1 16 1 252 2 352 1 315 1 269 1 116 2 164 7 49 9 
71 1 200 1 48 1 
71 1 198 1 136 2 
139 2 65 2 238 2 347 2 300 1 185 2 321 2 301 1 
23 1 24 1 139 2 257 2 300 1 59 1 276 1 321 2 301 1 143 2 280 1 359 1 217 1 282 2 283 1 341 1 342 1 37 1 36 2 227 1 363 1 327 1 306 1 65 3 364 1 347 2 185 2 234 1 43 1 107 1 238 3 371 1 114 1 240 1 316 1 162 1 273 2 
99 1 139 1 65 1 238 1 176 1 347 1 185 1 190 1 321 1 301 1 
65 1 3 1 367 1 311 1 200 1 321 1 28 1 251 1 71 1 45 1 238 1 176 1 223 1 163 1 
139 1 65 1 3 1 347 1 367 2 185 1 311 1 200 1 321 1 251 1 71 1 45 2 238 1 176 1 163 1 
4 1 45 1 191 1 152 1 367 1 
71 1 45 2 191 1 106 1 152 1 367 2 200 1 368 1 
45 1 152 1 367 1 
99 1 139 1 191 1 65 1 347 1 367 1 185 1 301 1 321 1 302 1 45 1 238 1 176 1 190 1 
71 1 
71 1 45 2 191 1 152 1 367 2 200 1 368 1 155 1 
191 2 1 1 367 5 27 2 200 1 330 1 368 1 60 1 71 1 45 5 129 1 95 1 161 1 20 1 260 2 270 2 152 2 21 1 206 1 
300 1 48 1 
139 1 65 2 347 1 300 2 185 1 321 2 351 1 6 1 238 2 
216 1 32 1 246 1 
65 1 364 1 257 1 300 1 13 1 276 1 107 1 359 1 238 1 282 1 341 1 114 1 240 1 316 1 36 1 37 1 
318 1 65 2 364 1 257 1 199 1 347 1 276 1 185 1 321 1 107 1 359 1 238 2 282 1 341 1 246 1 114 1 240 1 316 1 37 1 36 1 
139 1 118 1 318 2 65 5 199 1 347 4 300 1 185 4 321 5 28 1 30 1 351 1 238 5 220 1 
65 2 238 2 176 1 347 2 185 2 362 1 190 1 321 2 
139 1 318 1 65 3 238 3 347 3 300 1 185 3 321 3 
65 1 238 1 176 1 347 1 185 1 190 1 321 1 
351 1 139 1 6 1 65 1 238 1 176 1 347 1 185 1 321 1 
0 1 24 1 139 2 318 1 257 1 3 1 300 1 59 1 276 1 321 3 301 1 143 1 359 1 217 1 282 1 176 1 283 1 341 1 342 1 37 1 36 1 227 1 363 1 65 4 364 1 199 1 347 3 367 1 185 3 311 1 234 1 43 1 107 1 44 1 251 1 351 1 45 1 238 4 114 1 240 1 316 1 162 1 163 1 273 2 
30 1 318 1 65 2 238 2 347 1 300 1 185 1 321 2 28 1 
139 1 318 2 65 3 3 1 199 1 229 1 347 3 367 1 185 3 311 1 321 3 44 1 351 1 251 1 71 1 45 1 238 3 176 1 163 1 
139 1 318 1 65 2 347 2 185 2 321 2 216 1 351 1 238 2 246 1 
65 1 257 1 364 1 300 1 276 1 107 1 359 1 238 1 282 1 341 1 114 1 240 1 316 1 36 1 37 1 
65 1 257 1 364 1 300 1 107 1 359 1 238 1 282 1 341 1 150 1 240 1 316 1 296 1 36 1 37 1 
23 2 24 1 167 1 140 1 82 1 59 1 143 4 32 2 216 2 259 1 246 2 179 1 363 1 227 2 184 1 234 1 43 1 290 1 70 1 110 1 159 1 73 1 162 1 273 2 
65 1 238 1 176 1 347 1 311 1 185 1 321 1 362 1 
18 1 
18 1 
135 1 291 1 
135 1 291 1 
135 1 291 1 
18 1 
18 2 135 1 291 1 
18 1 
18 1 
18 1 
18 1 
18 1 
18 1 
357 1 65 1 275 1 249 1 57 1 12 1 347 1 367 1 58 1 244 1 185 1 321 1 122 1 292 1 45 1 369 1 238 1 18 1 76 1 
228 1 319 1 249 2 12 1 367 2 244 2 122 2 292 2 158 1 71 1 45 2 18 2 92 1 76 2 22 1 
5 1 41 1 144 1 
258 1 5 1 144 1 
258 1 156 1 5 3 160 1 41 2 265 1 
258 1 5 2 160 1 365 1 41 1 265 1 
258 1 5 2 160 2 41 1 265 1 
357 1 191 4 275 1 140 1 193 1 82 1 27 1 86 1 219 1 129 1 260 1 152 1 285 2 154 1 198 1 345 1 367 5 200 1 290 1 368 1 71 2 45 5 369 1 187 1 203 2 73 1 20 2 113 1 270 1 161 3 136 3 373 2 
357 4 53 1 191 7 140 3 193 2 82 3 27 2 86 1 4 5 172 1 129 1 95 1 284 1 152 6 260 2 247 1 154 2 198 3 328 1 367 9 289 5 200 1 290 3 368 1 71 5 45 9 203 6 73 3 20 6 113 3 270 2 161 8 136 9 254 1 373 6 
357 1 191 2 140 1 193 1 82 1 27 1 95 1 260 1 154 1 285 1 198 2 345 1 367 3 200 1 290 1 71 3 45 3 187 1 203 2 73 1 270 1 161 3 113 1 20 2 136 4 373 2 
357 2 53 1 191 3 140 2 193 1 82 2 27 1 95 1 260 1 154 1 285 2 198 3 345 1 328 1 367 4 200 1 290 2 71 4 45 4 187 1 203 4 73 2 270 1 161 5 113 2 20 4 136 7 373 4 254 1 
364 1 126 1 48 1 
364 1 196 1 
288 1 
364 1 240 1 37 1 
364 1 52 1 
364 1 37 1 
125 1 126 2 364 3 240 1 37 1 64 1 
227 3 23 4 167 2 54 1 11 2 168 1 82 1 329 1 143 7 70 3 89 1 205 1 73 1 75 1 77 1 138 1 248 1 
227 3 23 4 167 2 54 1 11 2 168 1 82 1 329 1 143 7 70 3 89 1 205 1 73 1 75 1 77 1 138 1 248 1 
227 3 23 4 167 2 54 1 11 2 346 1 168 1 82 1 329 1 143 7 70 3 89 1 205 1 73 1 75 1 77 1 138 1 248 1 
23 16 24 1 54 2 167 5 140 3 168 1 82 4 59 1 143 31 218 1 89 2 343 1 248 2 227 15 305 4 363 1 11 3 42 3 329 2 234 1 232 1 290 3 70 10 109 1 205 5 73 4 112 1 113 3 47 1 75 1 77 1 138 1 273 2 50 1 
227 4 23 5 363 2 24 2 54 1 167 3 11 2 297 1 82 1 59 2 14 1 329 1 143 9 234 2 70 4 89 1 205 1 73 1 47 1 75 1 77 1 138 1 248 1 273 4 
257 1 120 1 213 1 338 1 144 1 359 1 124 1 258 1 87 1 5 2 282 1 360 1 361 1 96 1 35 1 36 1 178 2 7 1 156 1 104 1 263 1 41 1 107 1 108 1 252 1 315 1 116 1 164 1 49 2 207 1 
257 1 120 1 81 1 338 1 144 1 359 1 124 1 258 1 87 1 5 2 282 1 361 1 96 1 35 1 36 1 178 3 7 1 39 1 38 1 156 1 104 1 263 1 41 1 107 1 108 1 252 1 315 1 116 1 49 3 164 2 
38 1 156 1 104 1 263 1 257 1 120 1 41 1 81 1 338 1 107 1 144 1 359 1 108 1 258 1 124 1 87 1 5 2 282 1 361 1 315 1 96 1 164 2 178 2 49 2 36 1 
226 1 39 1 364 1 257 1 120 2 338 2 107 1 359 1 124 2 333 1 282 1 252 1 19 1 315 2 341 1 151 1 116 1 334 1 37 1 178 1 49 1 36 1 335 1 
257 1 120 1 81 1 338 1 144 1 359 1 124 1 258 1 5 2 282 1 360 1 96 1 35 1 36 1 178 1 7 1 156 1 263 1 41 1 107 1 108 1 252 1 315 1 116 1 49 1 207 1 
242 1 
257 2 2 1 3 1 169 2 129 1 176 1 341 2 260 1 223 1 10 2 180 1 344 1 65 1 309 2 311 1 264 1 15 1 69 2 313 1 71 2 238 1 20 2 270 1 136 2 188 2 26 1 27 1 277 2 358 1 278 2 321 1 28 1 359 1 148 1 282 2 151 1 152 6 37 1 36 2 154 1 98 1 286 1 100 4 198 2 364 1 105 1 367 5 200 1 368 3 107 1 251 1 45 5 333 1 161 2 163 1 
100 2 180 1 65 1 105 1 3 1 367 3 264 1 311 1 358 1 321 1 69 1 28 1 368 1 313 1 251 1 45 3 238 1 176 1 152 2 223 1 163 1 155 1 
3 1 358 1 277 1 321 1 28 1 176 1 152 1 223 1 155 1 180 1 100 3 65 1 105 1 367 3 311 1 264 1 200 1 368 1 251 1 313 1 71 1 45 3 238 1 163 1 
3 1 169 1 358 1 277 1 321 1 28 1 176 1 223 1 152 2 155 1 180 1 100 3 65 1 105 1 367 3 311 1 264 1 200 1 69 1 368 1 251 1 313 1 71 1 45 3 238 1 163 1 
3 1 169 4 214 1 215 1 176 1 129 1 223 1 260 1 180 1 10 2 65 1 309 2 264 1 311 1 69 4 313 1 71 5 238 1 267 1 270 1 20 1 188 2 27 1 358 1 277 4 321 1 278 2 28 1 152 7 155 1 98 1 100 6 286 1 198 2 105 1 367 5 200 5 368 3 251 1 293 1 45 5 46 1 161 1 163 1 
3 1 169 2 176 1 129 1 260 1 223 1 180 1 10 2 65 1 309 2 264 1 311 1 69 2 15 1 313 1 71 2 238 1 270 1 20 1 188 2 136 2 27 1 358 1 277 2 321 1 278 2 28 1 152 4 98 1 100 4 286 1 198 2 105 1 367 4 200 1 368 2 251 1 45 4 161 1 163 1 
3 1 169 2 27 1 277 2 358 1 278 2 321 1 28 1 215 1 176 1 129 1 152 4 223 1 260 1 98 1 10 2 286 1 180 1 100 4 198 2 65 1 105 1 309 2 367 4 311 1 264 1 200 1 69 2 368 2 251 1 313 1 293 1 71 1 45 4 238 1 20 1 161 1 46 1 270 1 188 2 163 1 
3 1 169 2 27 1 277 2 358 1 278 2 321 1 28 1 215 1 176 1 129 1 152 4 223 1 260 1 98 1 10 2 286 1 180 1 100 4 198 2 65 1 105 1 309 2 367 4 311 1 264 1 200 1 69 2 368 2 251 1 313 1 293 1 71 1 45 4 238 1 20 1 161 1 46 1 270 1 188 2 163 1 
3 1 169 2 27 1 277 2 358 1 83 2 278 2 321 1 28 1 215 1 31 1 176 1 129 1 152 4 223 1 260 1 286 1 180 1 100 4 65 1 105 1 68 1 367 4 311 1 264 1 200 1 69 2 231 2 368 2 201 1 251 1 313 1 71 1 45 4 238 1 161 1 20 1 270 1 136 2 188 2 163 1 
3 1 169 3 27 1 358 1 277 3 278 2 321 1 28 1 215 1 129 1 176 1 260 1 223 1 152 5 98 1 10 2 286 1 180 1 100 5 198 2 65 1 105 1 309 2 367 4 311 1 264 1 200 1 69 3 368 2 293 1 251 1 313 1 71 1 45 4 238 1 267 1 20 1 161 1 270 1 46 1 188 2 163 1 
3 1 169 3 27 1 358 1 277 3 278 2 321 1 28 1 215 1 129 1 176 1 260 1 223 1 152 5 98 1 10 2 286 1 180 1 100 5 198 2 65 1 105 1 309 2 367 4 311 1 264 1 200 1 69 3 368 2 293 1 251 1 313 1 71 1 45 4 238 1 267 1 20 1 161 1 270 1 46 1 188 2 163 1 
3 1 169 2 27 1 277 2 358 1 83 2 278 2 321 1 28 1 129 1 176 1 152 4 223 1 260 1 286 1 180 1 100 4 65 1 105 1 367 4 311 1 264 1 200 1 15 1 69 2 231 2 368 2 313 1 251 1 201 1 71 1 45 4 238 1 161 1 20 1 270 1 136 2 188 2 163 1 
23 3 24 1 54 1 167 2 82 1 300 2 59 1 143 6 216 1 32 1 246 1 363 1 227 3 11 1 234 1 43 1 329 1 70 2 159 1 73 1 75 1 77 1 138 1 48 1 162 1 273 2 
23 8 24 2 167 1 140 1 300 1 82 1 59 2 143 14 33 1 32 11 216 4 218 1 177 1 246 11 342 1 225 1 227 6 305 3 363 2 42 3 234 2 43 2 290 2 70 2 109 1 332 1 205 1 204 1 73 2 371 1 113 2 162 1 273 4 
23 1 24 1 318 1 257 1 211 1 300 1 276 1 59 1 321 1 143 2 359 1 216 1 282 1 341 1 342 1 37 1 36 1 225 1 363 1 227 1 65 2 364 1 199 1 347 1 348 1 13 1 185 1 43 1 234 1 107 1 72 1 238 2 114 1 371 1 240 1 316 1 162 1 273 2 
54 1 167 4 298 1 257 3 300 2 59 3 217 2 216 7 341 1 342 1 225 1 227 10 11 1 182 1 65 3 347 1 185 1 234 3 186 1 70 8 237 2 350 2 238 3 73 3 75 1 240 2 77 1 316 2 138 1 273 6 23 10 24 3 318 1 80 2 140 2 81 1 82 3 276 2 321 1 143 20 359 2 32 7 282 3 246 7 326 2 36 3 37 2 363 3 364 2 199 1 329 1 43 3 290 2 107 2 205 4 371 1 114 2 113 2 162 3 
257 7 170 1 59 2 339 1 341 2 342 1 227 1 307 1 65 1 347 1 185 1 234 2 238 1 314 1 240 1 241 1 273 4 23 1 24 2 25 1 318 1 81 1 321 1 143 2 359 4 88 1 147 1 282 6 325 1 151 1 37 3 36 7 363 2 327 2 364 4 43 2 107 3 159 1 333 1 370 1 371 1 372 1 162 2 
23 1 24 1 167 1 139 1 140 1 82 1 59 1 121 1 321 1 143 3 216 1 32 1 246 1 225 1 363 1 227 2 65 1 347 1 185 1 234 1 43 1 290 1 70 1 351 1 238 1 73 1 113 1 162 1 273 2 
363 1 23 2 24 1 59 1 143 2 43 1 234 1 290 1 70 1 216 1 32 1 159 1 205 1 259 1 73 1 246 1 162 1 273 2 
363 1 227 2 24 1 167 1 140 1 82 1 59 1 143 2 43 1 234 1 70 1 216 1 32 1 159 1 110 1 246 1 162 1 273 2 
23 2 24 1 167 1 140 1 82 1 59 1 143 4 32 2 216 2 246 2 363 1 227 2 290 1 234 1 43 1 70 2 159 1 205 1 73 1 113 1 162 1 273 2 
363 1 23 2 24 1 59 1 143 2 43 1 234 1 290 1 70 1 216 1 32 1 88 1 205 1 259 1 73 1 246 1 162 1 273 2 
363 1 227 2 24 1 167 1 140 1 82 1 59 1 143 2 43 1 234 1 70 1 216 1 32 1 88 1 110 1 246 1 162 1 273 2 
23 2 24 1 167 1 140 1 82 1 59 1 143 4 32 2 216 2 88 1 246 2 363 1 227 2 290 1 234 1 43 1 70 2 205 1 73 1 113 1 162 1 273 2 
23 2 24 1 167 1 140 1 82 1 59 1 143 4 32 2 216 2 246 2 363 1 227 2 290 1 234 1 43 1 70 2 205 1 73 1 113 1 162 1 273 2 
23 1 24 1 257 1 300 1 276 1 59 1 143 2 359 1 217 1 282 1 341 1 342 1 37 1 36 1 363 1 227 1 65 1 364 1 43 1 234 1 107 1 238 1 371 1 114 1 240 1 316 1 162 1 273 2 
23 1 24 1 257 1 300 1 59 1 143 2 359 1 282 1 150 1 341 1 342 1 37 1 36 1 9 1 363 1 227 1 65 1 364 1 43 1 234 1 107 1 238 1 371 1 240 1 316 1 296 1 162 1 273 2 
23 2 24 1 167 1 140 1 82 1 59 1 143 4 32 2 216 2 246 2 225 1 363 1 227 2 290 1 234 1 43 1 70 2 205 1 73 1 113 1 162 1 273 2 
23 2 24 1 167 1 257 1 140 1 82 1 276 1 59 1 213 1 143 4 359 1 216 2 32 2 217 1 282 1 246 2 36 1 37 1 227 2 363 1 65 1 364 1 290 1 43 1 234 1 107 1 70 2 350 1 238 1 205 1 73 1 114 1 113 1 240 1 316 1 162 1 273 2 
23 2 24 1 139 1 140 1 82 1 59 1 321 1 143 3 32 1 216 1 246 1 225 1 227 1 363 1 261 1 65 1 347 1 185 1 234 1 43 1 290 1 70 1 351 1 238 1 205 1 73 1 113 1 162 1 273 2 
167 4 54 1 297 1 59 3 218 3 222 1 227 21 305 4 11 1 262 1 234 3 133 1 70 8 73 5 353 2 75 1 77 1 271 4 138 1 355 1 273 6 23 20 24 3 192 1 140 4 82 5 143 41 322 1 146 1 281 1 94 1 197 1 363 3 40 1 366 1 42 3 250 1 290 4 329 1 109 1 205 4 113 4 47 1 
23 20 24 4 54 1 167 4 192 1 297 1 140 3 82 4 59 4 143 38 322 1 281 1 146 1 218 3 222 1 94 1 197 1 305 4 363 4 227 18 11 1 262 1 40 1 366 1 42 3 250 1 329 1 133 1 234 4 290 4 70 7 109 1 205 3 73 5 47 2 353 2 113 4 75 1 77 1 138 1 271 4 355 1 273 8 
23 27 24 2 54 1 167 7 192 1 297 1 140 7 82 8 59 2 143 52 322 1 33 2 281 1 146 1 218 2 222 1 197 1 305 4 363 2 227 25 11 1 262 1 40 1 366 1 42 4 250 1 329 1 133 1 234 2 290 7 70 14 109 2 205 7 73 8 47 1 353 1 113 7 75 1 77 1 138 1 271 4 273 4 
23 9 24 2 167 3 192 1 297 1 140 3 82 3 59 2 143 19 281 1 146 1 218 1 222 1 94 1 305 2 363 2 227 10 101 1 40 2 42 1 234 2 290 3 70 6 109 1 205 3 73 3 353 1 113 3 271 2 273 4 
23 14 24 3 167 2 192 1 297 1 140 2 82 2 59 3 143 26 322 1 281 2 146 1 218 2 222 1 197 1 227 12 363 3 305 2 262 1 40 1 366 1 42 2 250 1 234 3 133 1 290 3 70 4 205 2 73 3 47 2 353 2 113 3 271 4 273 6 
292 1 158 1 239 1 18 1 249 1 244 1 122 1 
57 1 
292 1 18 1 249 1 115 1 244 1 122 1 
195 1 
181 1 
228 1 319 1 249 1 12 1 367 1 244 1 122 1 292 1 158 1 71 1 45 1 18 1 92 1 76 2 22 1 
228 1 319 1 249 1 12 1 367 1 244 1 122 1 292 1 158 1 71 1 45 1 18 1 92 1 76 2 22 1 
228 1 319 1 249 1 12 1 367 1 244 1 122 1 292 1 158 1 71 1 45 1 18 1 92 1 76 2 22 1 
195 1 
195 1 
181 1 
181 1 
235 1 8 1 
274 1 357 1 191 1 319 1 275 1 249 1 57 1 367 1 58 1 244 1 122 1 292 1 45 1 369 1 18 1 92 1 76 1 
23 1 24 1 299 1 257 2 59 1 321 2 279 1 143 2 359 1 282 2 325 1 342 1 37 1 36 2 225 1 363 1 227 1 327 2 307 1 183 1 65 2 364 1 308 1 43 1 234 1 107 1 238 2 371 1 162 1 165 1 273 2 
156 1 263 1 257 2 41 1 81 1 213 1 338 1 107 1 144 1 359 1 331 1 108 1 258 1 5 2 282 2 74 1 35 1 36 2 97 1 
156 1 263 1 257 1 41 1 81 1 194 1 338 1 107 1 144 1 359 1 108 1 258 1 5 2 282 1 74 1 35 1 36 1 
226 1 364 1 257 1 338 1 107 1 359 1 331 1 282 1 333 1 341 1 151 1 137 1 37 1 36 1 
156 1 263 1 257 1 41 1 81 1 338 1 107 1 144 1 359 1 331 1 108 1 258 1 5 2 282 1 74 1 35 1 36 1 97 1 
131 1 
71 1 161 1 20 1 200 1 21 1 48 1 330 1 
27 1 129 1 260 1 152 1 98 1 10 1 198 1 309 1 367 1 200 1 368 1 71 2 45 1 20 1 161 1 270 1 136 1 
55 1 257 3 2 1 3 2 213 1 125 1 127 2 126 2 129 4 341 1 304 2 260 4 224 2 233 1 349 1 71 8 134 2 17 2 73 2 270 4 20 8 240 3 189 2 136 12 21 1 272 1 140 2 27 4 82 2 359 4 282 3 149 1 152 5 196 3 326 2 37 3 36 3 154 2 198 6 287 2 364 10 367 5 200 2 290 2 330 1 368 3 107 3 45 5 203 6 295 2 161 9 113 2 373 6 52 2 
2 1 140 2 27 2 82 2 29 1 322 1 218 1 129 2 34 1 152 1 304 2 260 2 197 1 154 1 305 1 198 3 262 1 367 1 366 1 42 1 200 2 133 1 290 2 368 1 71 5 45 1 203 5 73 2 295 1 161 8 270 2 20 5 113 2 136 6 373 5 
54 1 139 1 27 1 82 1 301 1 321 1 302 1 176 1 324 1 129 1 304 2 260 1 99 1 65 1 347 1 367 1 185 1 329 1 293 1 45 1 238 1 73 2 295 1 270 1 20 2 161 2 75 1 190 1 
27 1 200 1 330 1 71 1 129 1 260 1 270 1 20 1 161 1 21 1 
198 5 140 2 82 2 290 2 71 5 203 5 73 2 295 1 304 2 113 2 20 5 161 5 136 10 326 1 373 5 
71 1 45 1 367 1 152 1 200 1 368 1 
26 1 55 2 257 4 2 2 27 2 359 1 148 1 282 4 149 1 128 1 129 1 95 1 341 2 260 2 152 4 151 1 37 1 36 4 154 2 66 1 364 1 367 3 368 2 107 1 45 3 333 1 270 2 161 2 20 2 
24 1 139 2 257 1 300 1 59 1 276 1 321 2 301 1 143 1 359 1 217 1 282 1 341 1 283 1 342 1 36 1 37 1 227 1 363 1 65 3 364 1 347 2 185 2 234 1 43 1 107 1 238 3 114 1 240 1 316 1 162 1 273 2 
198 2 11 1 2 1 27 1 200 2 71 4 203 2 129 1 20 2 260 1 270 1 161 1 136 4 373 2 154 1 
292 1 317 1 122 1 
292 1 175 1 141 1 122 1 235 1 
292 1 317 1 122 1 
292 1 317 1 122 1 
292 1 255 1 122 1 
292 1 255 1 122 1 
292 1 255 1 122 1 
292 1 122 1 
18 1 
23 4 24 1 54 1 167 2 297 1 82 1 59 1 143 8 218 1 227 4 305 1 363 1 11 1 42 1 133 1 234 1 329 1 70 2 73 1 75 1 77 1 138 1 273 2 
23 6 24 2 167 2 54 1 297 1 82 1 59 2 143 11 218 1 227 5 305 2 363 2 11 1 42 1 329 1 133 1 234 2 290 1 70 3 109 1 205 1 73 2 111 1 113 1 75 1 77 1 138 1 273 4 
23 9 24 3 54 1 167 3 297 1 140 2 82 3 59 3 143 19 322 1 218 1 197 1 227 10 305 1 363 3 11 1 262 1 366 1 42 1 329 1 133 1 234 3 290 2 70 4 205 1 73 3 111 1 113 2 47 1 75 1 77 1 138 1 273 6 
23 10 24 3 54 1 167 3 297 1 140 1 82 2 59 3 143 17 322 1 218 1 197 1 227 7 305 1 363 3 11 1 262 1 366 1 42 1 329 1 133 1 234 3 290 2 70 5 205 2 73 3 111 1 47 1 113 2 75 1 77 1 138 1 273 6 
23 4 24 1 54 1 167 2 297 1 82 1 59 1 143 8 218 1 227 4 305 1 363 1 11 1 42 1 133 1 234 1 329 1 70 2 73 1 75 1 77 1 138 1 273 2 
23 6 24 1 167 1 297 1 140 2 82 2 59 1 143 12 322 1 218 1 197 1 227 6 305 1 363 1 262 1 366 1 42 1 133 1 234 1 290 2 70 2 205 1 73 2 113 2 273 2 
23 10 24 4 54 1 167 3 297 1 140 1 82 2 59 4 143 18 322 1 218 1 197 1 227 8 305 1 363 4 11 1 262 1 366 1 42 1 329 1 133 1 234 4 290 2 70 5 205 2 73 3 111 1 113 2 47 2 75 1 77 1 138 1 273 8 
23 9 24 4 167 3 297 1 140 2 82 2 59 4 143 16 322 1 218 1 94 1 197 1 227 7 305 1 363 4 262 1 366 1 42 1 133 1 234 4 290 3 70 6 205 3 73 3 113 3 47 2 273 8 
227 4 23 3 54 3 167 3 82 1 143 7 329 3 70 6 205 3 73 1 75 1 77 1 138 2 
23 10 24 4 54 1 167 3 297 1 140 1 82 2 59 4 143 18 322 1 218 1 94 1 197 1 227 8 305 1 363 4 11 1 262 1 366 1 42 1 329 1 133 1 234 4 290 2 70 4 205 1 73 3 113 2 47 2 75 1 77 1 138 1 273 8 
227 4 23 4 363 2 24 2 167 2 54 1 11 1 82 1 59 2 143 8 234 2 329 1 70 3 205 1 73 1 47 1 75 1 77 1 138 1 273 4 
227 3 23 3 54 1 167 2 11 1 82 1 329 1 143 6 70 2 73 1 75 1 77 1 48 1 138 1 
227 2 363 1 23 2 24 1 167 1 140 1 82 1 59 1 234 1 290 1 143 4 70 2 205 1 73 1 111 1 113 1 273 2 
305 2 227 4 23 3 167 1 140 1 82 1 42 1 143 7 290 1 70 2 109 1 218 1 205 1 73 1 113 1 
23 11 24 2 54 2 167 5 140 2 82 3 59 2 143 23 33 1 227 12 305 2 363 2 11 1 157 1 42 2 329 2 290 2 234 2 70 9 109 1 205 4 204 1 73 3 113 2 47 2 75 1 77 1 138 1 273 4 
227 1 305 1 143 1 
23 1 42 1 143 1 
363 1 227 3 23 3 24 1 167 2 140 1 82 1 59 1 234 1 143 6 290 1 70 3 205 1 73 1 111 1 113 1 326 1 273 2 
23 6 24 1 167 1 297 1 140 2 82 2 59 1 143 12 322 1 218 1 197 1 227 6 305 1 363 1 262 1 366 1 42 1 133 1 234 1 290 2 70 2 205 1 73 2 113 2 273 2 
23 3 227 3 54 1 167 1 82 1 143 6 329 1 70 2 205 1 73 1 75 1 
23 1 227 2 363 1 24 1 167 1 54 1 157 1 59 1 329 1 143 3 234 1 70 2 205 1 47 1 77 1 138 1 273 2 
363 1 23 5 227 5 24 1 54 2 167 3 297 1 82 2 59 1 234 1 329 2 143 10 70 5 205 2 73 2 324 1 75 1 273 2 
363 1 23 2 24 1 297 1 59 1 234 1 290 1 143 2 70 1 205 1 73 1 273 2 
227 2 363 1 23 2 24 1 167 1 297 1 140 1 82 1 59 1 234 1 290 1 143 4 70 2 205 1 73 1 113 1 273 2 
227 2 363 3 23 1 24 3 54 1 167 1 297 1 157 1 59 3 143 3 234 3 329 1 70 2 205 1 94 1 47 1 273 6 
23 16 24 5 54 3 167 7 297 1 140 3 82 5 59 5 143 34 218 1 94 1 343 1 227 18 305 4 363 5 11 1 157 1 42 3 329 3 234 5 290 3 70 12 109 1 205 5 73 5 111 1 112 1 47 2 113 3 75 2 77 1 138 1 50 1 273 10 
65 1 300 1 320 1 321 1 28 1 30 1 238 1 93 1 176 1 
243 1 65 1 212 1 56 1 300 1 320 1 321 1 85 1 28 1 171 1 30 1 238 1 93 1 176 1 
333 1 282 1 364 1 257 1 341 1 151 1 48 1 37 1 36 1 107 1 359 1 
318 1 65 2 364 1 257 1 347 1 300 1 185 1 276 1 321 1 107 1 359 1 238 2 282 1 341 1 240 1 316 1 37 1 36 1 
318 1 65 2 364 3 55 1 257 1 347 1 300 1 311 1 185 2 276 1 321 2 107 1 359 1 238 2 282 1 176 1 189 1 240 2 316 1 163 1 37 2 36 1 52 1 
318 1 65 2 364 3 55 1 257 2 347 1 300 1 311 1 185 2 321 2 337 1 107 1 359 1 238 2 282 2 176 1 189 1 240 2 316 1 296 1 163 1 37 2 36 2 52 1 
166 1 55 1 257 3 364 4 3 1 367 2 200 1 337 1 107 1 359 1 71 1 45 2 282 3 221 1 126 1 341 1 152 1 240 1 189 1 196 1 37 1 36 3 52 1 
55 1 257 3 364 4 3 1 367 2 200 1 337 1 107 1 359 1 71 1 45 2 282 3 126 1 341 1 152 1 240 1 189 1 196 1 224 1 37 1 36 3 52 1 
282 1 257 1 370 1 36 1 107 1 359 1 
25 1 257 6 170 1 81 1 339 1 359 3 145 1 125 1 147 1 282 5 325 1 341 2 37 2 36 6 327 1 364 3 107 2 370 1 240 1 241 1 
54 1 167 2 257 1 300 2 59 2 213 1 216 1 217 1 225 1 227 3 11 1 65 2 347 1 185 1 234 2 70 2 350 1 237 1 238 2 73 1 240 1 75 1 316 1 77 1 138 1 273 4 23 3 24 2 318 1 82 1 276 1 321 1 143 6 359 1 32 1 282 1 246 1 36 1 37 1 363 2 364 1 43 2 329 1 107 1 114 1 162 2 165 1 
191 1 257 1 3 1 27 2 282 1 149 1 127 1 126 1 129 2 341 1 260 2 152 2 196 1 224 1 36 1 287 1 364 2 367 3 200 1 330 1 368 1 71 1 45 3 134 1 161 1 20 1 270 2 21 1 
257 2 364 2 213 1 233 1 107 1 359 2 125 1 282 2 126 1 370 1 240 1 36 2 37 1 
209 1 333 1 282 4 364 1 257 4 341 1 151 1 213 1 337 1 37 1 36 4 107 1 359 1 
182 1 55 1 257 2 364 1 107 1 359 2 147 1 282 2 314 1 240 1 372 1 36 2 37 1 241 1 
108 1 258 1 5 1 282 1 257 1 341 1 36 1 107 1 144 1 359 1 
257 2 364 1 81 1 213 1 279 1 107 1 359 1 282 2 325 1 36 2 37 1 
25 1 209 1 55 1 257 5 364 3 213 1 339 1 107 2 359 2 333 1 282 4 325 1 341 1 151 1 36 5 37 2 
25 1 209 1 55 1 257 5 364 3 213 1 107 2 359 2 340 1 333 1 282 4 325 1 341 1 151 1 36 5 37 2 
318 1 65 2 364 1 257 1 347 1 300 1 185 1 321 1 107 1 359 1 238 2 282 1 341 1 240 1 316 1 296 1 37 1 36 1 
55 1 257 1 364 1 107 1 359 2 145 1 147 1 125 1 282 1 240 1 36 1 37 1 241 1 
303 1 294 1 300 1 142 1 208 1 
191 1 3 1 300 1 367 2 311 1 142 1 200 1 123 1 44 1 61 1 303 2 251 1 71 1 45 2 294 2 176 1 163 1 354 1 208 2 
299 1 183 1 65 1 308 1 142 1 321 1 303 1 294 1 238 1 
142 1 354 1 123 1 
87 1 104 1 361 1 48 1 
87 1 104 1 361 1 252 1 116 1 49 1 178 1 
315 1 120 1 49 1 
104 1 310 1 84 1 87 1 360 1 91 2 252 1 268 1 361 1 116 1 178 3 49 3 
87 1 104 1 102 1 361 1 252 1 116 1 164 1 49 2 178 2 
78 1 87 1 5 1 360 1 252 1 269 1 41 1 116 1 49 1 178 1 144 1 
87 1 360 1 361 1 252 1 116 1 49 1 178 1 
104 1 360 1 361 2 252 1 116 1 49 1 178 1 
266 1 87 1 360 1 361 1 252 2 116 2 153 1 178 2 49 2 51 1 
78 1 104 1 103 1 256 1 87 2 360 1 361 1 252 1 245 1 116 1 178 3 49 3 164 2 
156 1 104 1 41 1 230 1 144 1 258 1 87 1 5 2 360 1 361 1 252 1 116 1 178 2 49 2 164 1 
78 1 104 1 102 1 256 1 16 1 87 2 360 1 361 1 252 2 116 2 178 4 49 4 164 2 
87 1 104 1 360 1 361 1 252 1 116 1 49 1 178 1 
78 1 104 2 256 1 310 1 87 3 91 1 268 1 361 2 252 1 116 1 164 2 178 4 49 4 117 1 
104 1 87 1 323 1 360 1 361 1 252 1 352 1 116 1 178 2 49 2 132 1 164 1 
104 1 310 2 312 1 87 1 360 1 91 2 268 1 252 1 361 1 116 1 178 3 49 3 
79 1 87 2 174 2 210 1 
202 1 360 1 252 1 116 1 49 1 178 1 
87 1 104 1 360 1 361 1 252 1 245 1 116 1 164 1 49 2 178 2 
253 1 
87 1 104 1 360 1 361 1 252 1 116 1 49 1 178 1 
104 1 87 1 360 1 91 1 252 1 361 1 245 1 116 1 164 1 178 3 49 3 
78 1 87 1 256 1 117 1 
87 1 361 1 

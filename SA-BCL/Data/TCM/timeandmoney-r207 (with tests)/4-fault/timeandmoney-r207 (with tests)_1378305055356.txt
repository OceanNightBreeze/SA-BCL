#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
311 1 213 2 313 2 233 1 235 1 215 9 170 3 217 1 9 6 36 2 320 5 148 1 289 9 242 1 195 2 222 2 292 1 106 2 64 1 295 1 246 1 247 4 137 1 228 1 162 2 90 1 55 1 338 1 
311 1 313 2 233 1 213 2 235 1 215 9 170 3 217 1 9 6 36 2 320 5 148 1 289 9 242 1 195 2 222 2 292 1 106 2 64 1 295 1 246 1 247 4 137 1 228 1 162 2 90 1 55 1 338 1 
311 1 313 2 233 1 213 2 235 1 215 10 170 4 217 1 9 7 36 2 320 6 148 1 289 10 242 1 195 2 222 2 292 1 106 2 64 1 295 1 246 1 247 5 137 1 228 1 162 2 90 1 55 1 338 1 
311 1 313 2 233 1 213 1 235 1 215 7 170 2 217 1 9 4 36 2 320 4 148 1 289 7 242 1 195 2 222 2 292 1 106 2 64 1 295 1 246 1 247 3 228 1 162 2 90 1 55 1 338 1 
313 1 213 2 246 1 247 2 137 1 170 1 215 4 9 3 36 1 148 1 320 3 289 4 195 1 222 1 162 1 55 1 295 1 64 1 
313 1 246 1 236 1 215 2 228 1 320 1 36 1 289 2 219 1 222 1 162 1 309 1 292 1 106 1 55 1 295 1 
246 1 247 1 215 3 170 1 217 1 9 1 36 2 320 2 289 3 162 2 106 1 55 1 295 1 
233 1 213 2 313 1 170 3 215 9 217 1 9 7 36 2 320 5 148 1 289 9 195 1 222 1 106 1 295 1 64 1 246 1 247 4 137 1 182 1 162 2 90 1 55 1 379 1 
233 1 213 2 313 1 170 3 215 9 217 1 9 7 36 2 320 5 148 1 289 9 195 1 222 1 106 1 295 1 64 1 246 1 247 4 137 1 182 1 162 2 90 1 55 1 379 1 
14 1 283 1 145 1 
210 2 81 1 283 1 
298 1 173 2 37 2 62 2 50 2 310 1 278 2 171 2 
0 1 188 1 4 1 28 1 144 2 30 1 259 1 171 2 193 1 173 2 363 1 37 2 62 3 174 1 13 1 368 1 296 1 42 2 298 1 344 2 134 2 178 1 179 2 249 1 205 1 156 1 347 1 50 2 250 1 337 1 77 1 276 1 310 1 56 1 278 3 79 1 122 1 
173 1 37 1 62 1 59 1 50 1 310 1 238 1 317 1 278 1 171 1 
14 1 226 1 283 1 126 1 237 1 83 1 317 1 73 1 46 1 173 1 62 1 131 1 209 1 278 1 
14 1 226 1 283 1 126 1 83 1 317 1 171 1 73 1 173 1 37 1 62 1 50 1 131 2 209 2 278 1 
373 1 290 1 357 1 131 1 209 1 
57 1 14 1 290 1 357 1 283 1 131 2 378 1 209 2 
357 1 131 1 209 1 
59 1 238 1 317 1 171 1 173 1 37 1 290 1 62 1 76 1 50 1 131 1 310 1 209 1 278 1 
283 1 
14 1 290 1 357 1 283 1 89 1 131 2 378 1 209 2 
297 1 14 1 67 1 357 2 283 1 45 1 153 1 180 2 154 1 138 1 290 2 131 5 39 2 91 1 40 1 150 1 378 1 209 5 121 2 
298 1 145 1 
298 2 270 1 171 1 173 2 37 1 62 2 63 1 50 1 278 2 
166 1 308 1 257 1 
298 1 344 1 134 1 188 1 178 1 205 1 62 1 174 1 243 1 13 1 77 1 276 1 278 1 79 1 42 1 122 1 
166 1 344 1 188 1 134 1 178 1 205 1 171 1 35 1 173 1 62 2 174 1 12 1 13 1 50 1 276 1 77 1 79 1 278 2 122 1 42 1 
298 1 35 1 173 3 37 1 62 3 50 3 278 3 171 3 
173 1 62 1 50 1 238 1 317 1 278 1 171 1 
173 1 37 1 62 1 63 1 50 1 270 1 317 1 278 1 171 1 
0 1 188 1 28 1 126 1 144 1 30 1 83 1 317 1 259 1 171 3 193 1 173 3 35 1 37 2 62 4 63 1 174 1 12 1 13 1 131 1 86 1 296 1 224 1 42 1 298 1 226 1 344 1 134 1 178 1 179 2 205 1 156 1 73 1 347 1 50 3 250 1 337 1 276 1 77 1 310 1 209 1 79 1 278 4 122 1 
298 1 173 2 35 1 62 2 50 1 237 1 192 1 278 2 171 1 
226 1 283 1 126 1 83 1 317 1 171 3 73 1 35 2 173 3 37 1 157 1 62 3 63 1 12 1 50 3 131 1 209 1 278 3 86 1 
166 1 171 2 35 1 173 2 37 1 62 2 63 1 308 1 50 2 278 2 
298 1 344 1 134 1 188 1 178 1 205 1 62 1 174 1 13 1 77 1 276 1 278 1 79 1 42 1 122 1 
298 1 344 1 134 1 188 1 87 1 205 1 62 1 174 1 13 1 276 1 278 1 79 1 42 1 200 1 122 1 
166 2 187 1 4 2 28 1 144 4 257 2 146 1 259 1 193 1 220 1 365 1 107 1 367 1 296 1 332 1 179 2 156 2 347 1 308 2 337 1 51 1 377 1 120 1 253 1 
173 1 62 1 50 1 285 1 317 1 278 1 73 1 171 1 
298 1 237 1 192 1 171 4 35 2 173 5 37 1 62 5 63 1 12 1 50 4 266 1 278 5 329 1 
173 2 62 2 50 2 285 1 238 1 317 1 278 2 171 2 
234 1 280 1 
234 1 280 1 
118 1 
118 1 
118 1 
234 1 336 1 280 1 
69 1 234 1 108 1 118 1 280 1 
234 1 181 1 280 1 
234 1 336 1 280 1 
234 1 336 1 280 1 
262 1 234 1 280 1 
262 1 234 1 280 1 
262 1 234 1 280 1 
133 2 330 1 203 1 234 2 283 1 82 1 335 3 19 2 305 2 47 1 364 2 131 2 164 1 41 2 209 2 268 1 280 2 225 1 95 1 
234 1 171 2 319 1 33 1 173 2 62 2 101 1 364 1 131 1 327 1 41 1 133 1 298 1 343 1 335 1 305 1 181 1 158 1 75 1 50 2 164 1 209 1 280 1 278 2 
313 1 195 1 222 1 
313 1 222 1 236 1 
340 1 314 1 313 3 195 2 236 1 94 1 
340 1 331 1 314 1 313 2 195 1 236 1 
340 2 314 1 313 2 195 1 236 1 
312 1 210 3 143 2 81 1 357 1 283 2 125 1 319 1 85 1 290 4 131 5 39 1 107 1 150 2 245 2 297 3 14 1 343 1 201 1 180 1 138 1 272 1 115 1 75 1 274 1 51 1 277 2 377 1 121 1 378 1 209 5 253 1 
312 2 210 9 143 6 81 3 357 6 283 5 125 1 290 7 175 1 176 1 131 9 39 2 107 3 150 6 245 6 66 1 297 8 343 4 14 1 201 2 109 1 45 1 180 2 138 1 112 5 184 1 115 3 373 5 141 1 51 3 377 3 209 9 378 1 121 2 253 3 
312 1 143 2 210 4 81 2 283 3 85 1 290 2 131 3 39 1 107 1 150 2 245 2 297 3 14 1 343 1 201 1 45 1 180 1 272 1 115 1 51 1 277 1 377 1 121 1 209 3 253 1 
312 1 210 7 143 4 81 3 283 4 85 1 290 3 175 1 131 4 39 1 107 2 150 4 245 4 66 1 297 5 14 1 343 2 201 1 45 1 180 1 272 1 115 2 141 1 51 2 277 2 377 2 121 1 209 4 253 2 
13 1 165 1 145 1 
20 1 13 1 
264 1 
13 1 205 1 
68 1 288 1 13 3 165 2 205 1 122 1 
13 1 205 1 122 1 
13 1 198 1 
187 3 189 2 4 4 144 7 31 1 345 1 156 3 207 1 114 1 99 1 365 2 341 1 221 1 223 1 107 1 377 1 254 1 
187 3 189 2 4 4 144 7 31 1 345 1 156 3 207 1 114 1 99 1 365 2 341 1 221 1 223 1 107 1 377 1 254 1 
187 3 189 2 4 4 97 1 144 7 31 1 345 1 156 3 207 1 114 1 99 1 365 2 341 1 221 1 223 1 107 1 377 1 254 1 
187 4 189 1 28 1 4 5 144 11 360 1 31 1 259 1 99 1 321 1 324 1 365 2 221 1 341 2 223 1 366 1 328 2 107 1 296 1 136 1 179 2 113 1 156 6 347 1 115 1 51 1 54 1 377 1 254 2 253 1 
187 4 356 1 189 2 4 5 28 2 179 4 144 9 360 1 31 1 345 1 156 4 259 2 207 1 114 1 347 2 99 1 365 3 341 1 223 1 117 1 107 1 377 1 254 1 296 2 
354 1 313 2 188 1 60 1 236 1 215 2 218 1 9 1 320 1 84 1 36 1 98 1 128 1 289 2 195 1 222 1 177 1 106 1 295 1 65 1 42 1 269 1 344 1 246 1 134 1 303 1 162 1 55 1 79 1 94 1 
354 1 313 2 188 1 60 1 236 1 215 3 218 1 9 2 320 1 84 1 36 1 128 1 289 3 195 1 103 1 222 1 177 1 106 1 42 1 269 1 15 1 344 1 246 1 134 1 303 1 183 1 162 1 55 1 79 1 94 1 
313 2 188 1 60 1 236 1 215 2 218 1 9 2 320 1 84 1 128 1 289 2 195 1 103 1 222 1 177 1 106 1 42 1 344 1 246 1 134 1 303 1 183 1 55 1 79 1 94 1 
281 1 188 1 215 1 147 1 218 2 84 2 36 1 289 1 128 2 100 1 174 1 13 1 106 2 42 1 15 1 344 1 134 1 110 1 205 1 162 1 275 1 52 1 79 1 
354 1 313 2 344 1 188 1 134 1 60 1 236 1 303 1 215 1 218 1 183 1 98 1 36 1 84 1 289 1 128 1 195 1 222 1 177 1 162 1 106 1 295 1 79 1 94 1 269 1 42 1 
1 1 
188 1 283 2 58 2 237 1 239 1 100 1 62 1 13 1 150 2 151 1 342 4 297 2 14 1 344 2 71 2 205 1 73 1 208 1 21 1 23 1 252 1 209 5 121 1 79 1 26 1 312 1 255 1 210 2 81 2 357 6 315 2 126 1 83 1 317 1 172 2 34 1 173 1 174 2 131 5 39 1 132 2 42 2 226 1 135 2 134 2 180 1 227 1 369 1 138 1 46 1 52 1 232 2 375 1 378 3 278 1 
357 2 126 1 237 1 83 1 317 1 34 1 173 1 62 1 131 3 151 1 342 2 226 1 227 1 369 1 71 1 73 1 46 1 89 1 23 1 209 3 378 1 278 1 
357 1 283 1 126 1 237 1 83 1 317 1 34 1 173 1 62 1 131 3 151 1 342 3 226 1 14 1 135 1 227 1 369 1 73 1 46 1 89 1 23 1 209 3 378 1 278 1 
357 2 283 1 126 1 237 1 83 1 317 1 34 1 172 1 173 1 62 1 131 3 151 1 342 3 226 1 14 1 135 1 227 1 369 1 71 1 73 1 46 1 89 1 23 1 378 1 209 3 278 1 
186 1 283 5 58 2 237 1 287 1 62 1 196 1 150 1 342 6 151 1 297 1 14 5 16 1 301 1 71 4 73 1 208 1 23 1 209 5 121 1 255 1 81 2 357 7 315 2 126 1 83 1 317 1 172 4 34 1 173 1 131 5 39 1 132 2 226 1 135 4 180 1 227 1 369 1 138 1 46 1 89 1 232 2 378 3 278 1 
58 2 283 2 237 1 62 1 150 1 342 4 151 1 297 1 14 1 71 2 73 1 208 1 21 1 23 1 209 4 121 1 255 1 210 2 81 2 357 4 315 2 126 1 83 1 317 1 34 1 172 2 173 1 131 4 39 1 132 2 226 1 135 2 180 1 227 1 369 1 138 1 46 1 232 2 378 2 278 1 
255 1 81 2 357 4 283 1 315 2 58 2 126 1 237 1 83 1 287 1 317 1 172 2 34 1 173 1 62 1 131 4 39 1 150 1 132 2 151 1 342 4 297 1 14 1 226 1 135 2 16 1 301 1 180 1 227 1 369 1 71 2 138 1 73 1 46 1 208 1 23 1 232 2 378 2 209 4 121 1 278 1 
255 1 81 2 357 4 283 1 315 2 58 2 126 1 237 1 83 1 287 1 317 1 172 2 34 1 173 1 62 1 131 4 39 1 150 1 132 2 151 1 342 4 297 1 14 1 226 1 135 2 16 1 301 1 180 1 227 1 369 1 71 2 138 1 73 1 46 1 208 1 23 1 232 2 378 2 209 4 121 1 278 1 
210 2 357 4 283 1 315 2 58 2 126 1 237 1 83 1 317 1 172 2 34 1 173 1 62 1 131 4 39 1 150 1 151 1 342 4 297 1 14 1 226 1 135 2 16 1 180 1 227 1 369 1 71 2 204 1 307 2 138 1 73 1 46 1 348 1 208 1 116 1 23 1 376 2 378 2 209 4 121 1 278 1 
255 1 81 2 186 1 357 5 283 1 315 2 58 2 126 1 287 1 237 1 83 1 317 1 34 1 172 3 173 1 62 1 131 4 39 1 150 1 132 2 151 1 342 5 297 1 14 1 226 1 135 3 16 1 180 1 301 1 227 1 369 1 71 3 138 1 73 1 46 1 208 1 23 1 232 2 378 2 121 1 209 4 278 1 
255 1 81 2 186 1 357 5 283 1 315 2 58 2 126 1 287 1 237 1 83 1 317 1 34 1 172 3 173 1 62 1 131 4 39 1 150 1 132 2 151 1 342 5 297 1 14 1 226 1 135 3 16 1 180 1 301 1 227 1 369 1 71 3 138 1 73 1 46 1 208 1 23 1 232 2 378 2 121 1 209 4 278 1 
210 2 357 4 283 1 315 2 58 2 126 1 237 1 83 1 317 1 172 2 34 1 173 1 62 1 131 4 39 1 150 1 151 1 342 4 297 1 14 1 226 1 135 2 180 1 227 1 369 1 71 2 307 2 138 1 73 1 46 1 348 1 208 1 21 1 23 1 376 2 378 2 121 1 209 4 278 1 
166 1 187 2 189 1 28 1 4 3 144 6 257 1 31 1 145 1 259 1 193 1 99 1 220 1 365 2 107 1 296 1 298 2 179 2 345 1 156 3 207 1 347 1 114 1 308 1 337 1 377 1 
166 11 187 2 28 2 4 8 339 1 144 14 257 11 259 2 193 1 363 1 321 1 323 1 365 1 326 1 325 1 328 3 107 2 296 2 298 1 179 4 156 6 113 3 347 2 115 2 308 4 250 1 140 1 337 2 51 2 54 1 377 1 254 1 253 1 
80 1 188 1 28 1 4 1 144 2 259 1 171 1 193 1 173 1 35 1 363 1 62 2 174 1 243 1 12 1 13 1 293 1 42 1 296 1 298 1 344 1 134 1 178 1 248 1 179 2 205 1 156 1 347 1 308 1 50 1 250 1 140 1 276 1 77 1 337 1 79 1 278 2 122 1 
187 8 189 1 188 2 3 2 4 10 191 1 144 20 193 3 99 1 62 3 12 1 13 2 107 3 296 3 298 2 344 3 17 1 155 1 345 1 205 2 156 10 207 1 114 1 347 3 115 2 308 7 250 1 77 2 79 2 254 4 253 2 122 2 166 7 28 3 257 7 30 2 31 1 171 1 259 3 35 1 173 1 363 1 174 1 365 4 42 3 134 3 178 2 179 6 183 1 230 2 139 2 50 1 140 1 337 3 276 2 51 2 377 3 93 2 278 3 
188 2 28 2 4 1 29 1 144 2 171 1 259 2 127 1 193 2 173 1 35 1 261 1 363 1 62 1 100 1 174 2 220 1 130 1 13 3 368 2 65 1 42 8 296 2 344 7 134 8 179 4 371 1 205 2 156 1 183 1 372 1 347 2 50 1 250 1 337 2 52 1 78 1 278 1 79 2 
166 1 187 1 28 1 4 1 257 1 144 3 171 1 259 1 193 1 173 1 37 1 62 1 63 1 365 1 107 1 296 1 179 2 304 1 156 2 347 1 115 1 308 1 50 1 140 1 337 1 51 1 377 1 278 1 253 1 
166 1 187 1 28 1 4 2 179 2 257 1 144 2 259 1 193 1 347 1 308 1 220 1 337 1 51 1 107 1 120 1 254 1 296 1 
166 1 187 1 28 1 179 2 257 1 144 2 146 1 259 1 156 2 193 1 347 1 365 1 308 1 220 1 337 1 377 1 253 1 296 1 
166 2 187 2 4 2 28 1 144 4 257 2 259 1 193 1 220 1 365 1 107 1 296 1 179 2 156 2 347 1 115 1 308 2 51 1 337 1 377 1 254 1 253 1 
166 1 187 1 28 1 4 2 179 2 257 1 144 2 259 1 193 1 347 1 261 1 308 1 337 1 51 1 107 1 120 1 254 1 296 1 
166 1 187 1 28 1 179 2 257 1 144 2 146 1 259 1 156 2 193 1 347 1 261 1 365 1 308 1 337 1 377 1 253 1 296 1 
166 2 187 2 4 2 28 1 144 4 257 2 259 1 193 1 261 1 365 1 107 1 296 1 179 2 156 2 347 1 115 1 308 2 51 1 337 1 377 1 254 1 253 1 
166 2 187 2 28 1 4 2 179 2 257 2 144 4 156 2 259 1 193 1 347 1 115 1 365 1 308 2 337 1 51 1 107 1 377 1 253 1 254 1 296 1 
188 1 4 1 28 1 144 2 30 1 259 1 193 1 363 1 62 1 174 1 13 1 42 1 296 1 298 1 344 1 134 1 178 1 179 2 205 1 156 1 347 1 250 1 276 1 77 1 337 1 79 1 278 1 122 1 
188 1 4 1 28 1 144 2 259 1 193 1 363 1 62 1 174 1 13 1 200 1 42 1 296 1 152 1 298 1 344 1 134 1 179 2 87 1 205 1 156 1 347 1 250 1 276 1 337 1 79 1 278 1 122 1 
166 2 187 2 4 2 28 1 144 4 257 2 259 1 193 1 365 1 107 1 296 1 179 2 156 2 347 1 115 1 308 2 140 1 51 1 337 1 377 1 254 1 253 1 
166 2 187 2 188 1 4 2 28 1 257 2 144 4 30 1 259 1 193 1 62 1 365 1 13 1 107 1 65 1 42 1 296 1 344 1 134 1 178 1 179 2 205 1 156 2 347 1 115 1 308 2 51 1 276 1 77 1 337 1 377 1 93 1 253 1 254 1 79 1 278 1 122 1 
166 1 187 1 28 1 4 2 5 1 144 3 257 1 171 1 259 1 193 1 173 1 37 1 62 1 63 1 107 1 296 1 179 2 156 1 347 1 115 1 308 1 50 1 140 1 337 1 51 1 377 1 253 1 254 1 278 1 
187 6 28 2 4 9 7 1 144 19 216 1 318 1 259 2 10 1 321 1 194 1 365 3 328 2 107 3 296 2 179 4 18 2 70 1 370 2 156 10 113 1 347 2 115 3 117 1 51 3 54 1 119 1 377 3 254 3 253 3 
123 1 355 1 187 4 212 1 27 1 28 3 4 14 144 26 360 2 216 1 318 2 259 3 10 1 194 2 263 1 365 2 328 2 107 3 296 3 179 6 18 1 370 4 72 1 156 12 113 2 347 3 115 3 117 1 51 3 54 2 377 2 119 1 254 2 253 2 
123 1 355 1 27 1 212 1 187 8 168 1 189 1 28 3 4 20 144 41 360 1 216 1 31 1 318 1 259 3 99 1 10 1 321 1 194 2 263 1 365 4 328 4 107 5 296 3 179 6 18 1 70 1 370 4 345 1 72 1 156 21 113 3 207 1 114 1 347 3 115 4 117 1 51 4 54 3 119 1 377 5 254 4 253 4 
123 1 355 1 27 1 212 1 187 7 168 1 189 1 28 4 4 20 144 38 360 2 216 1 31 1 318 1 259 4 99 1 10 1 321 1 194 2 263 1 365 4 328 4 107 5 296 4 179 8 18 1 70 1 370 4 345 1 72 1 156 18 113 3 207 1 114 1 347 4 115 4 117 1 51 4 54 3 119 1 377 4 254 3 253 3 
123 1 355 1 27 1 212 1 187 14 189 1 28 2 4 27 144 52 360 1 216 1 31 1 318 1 259 2 99 1 10 1 321 2 194 1 263 1 365 7 326 2 328 4 107 8 296 2 179 4 18 1 370 4 345 1 72 1 156 25 113 4 207 1 114 1 347 2 115 7 117 1 51 7 54 2 119 1 377 8 254 7 253 7 
133 1 203 1 167 1 364 1 234 1 41 1 305 1 280 1 225 1 95 1 
101 1 181 1 
240 1 133 1 364 1 234 1 351 1 41 1 305 1 32 1 280 1 
133 1 330 1 203 1 234 1 283 1 335 2 19 1 305 1 47 1 364 1 131 1 164 1 41 1 209 1 268 1 280 1 225 1 95 1 
133 1 330 1 203 1 234 1 283 1 335 2 19 1 305 1 47 1 364 1 131 1 164 1 41 1 209 1 268 1 280 1 225 1 95 1 
133 1 330 1 203 1 234 1 283 1 335 2 19 1 305 1 47 1 364 1 131 1 164 1 41 1 209 1 268 1 280 1 225 1 95 1 
336 1 214 1 108 1 
336 1 214 1 108 1 
362 1 262 1 
362 1 262 1 108 1 
158 1 33 1 
234 1 319 1 33 1 171 2 173 2 62 2 290 1 101 1 364 1 131 1 327 1 41 1 133 1 298 1 343 1 19 1 335 1 305 1 181 1 47 1 158 1 350 1 75 1 50 2 209 1 278 2 280 1 
336 1 214 1 
362 1 262 1 108 1 
124 1 188 1 358 1 28 1 4 1 144 2 259 1 193 1 173 2 363 1 62 2 13 1 368 2 42 2 296 1 344 2 134 2 179 2 205 1 156 1 372 1 347 1 349 1 250 1 140 1 251 1 337 1 25 1 78 1 79 1 278 2 
313 2 344 2 188 1 134 2 2 1 236 1 190 1 303 1 183 1 128 1 195 1 222 1 104 1 177 1 79 1 65 1 94 1 42 2 269 1 
313 2 344 1 134 1 188 1 2 1 236 1 303 1 258 1 183 1 128 1 195 1 222 1 177 1 79 1 94 1 42 1 269 1 
281 1 344 1 188 1 134 1 190 1 205 1 128 1 100 1 174 1 13 1 199 1 52 1 79 1 42 1 
313 2 344 1 188 1 134 1 2 1 236 1 190 1 303 1 183 1 128 1 195 1 222 1 104 1 177 1 79 1 94 1 42 1 269 1 
229 1 
297 1 14 1 67 1 283 1 91 1 150 1 145 1 
255 1 210 1 81 1 357 1 283 2 131 1 39 1 150 1 132 1 297 1 14 1 180 1 138 1 232 1 121 1 378 1 209 1 
143 6 188 4 283 8 6 2 102 2 13 10 149 1 198 2 107 2 150 8 245 6 65 1 297 9 67 1 14 2 202 1 68 1 344 3 302 2 205 3 20 3 115 2 161 2 163 1 165 2 121 4 209 5 79 3 253 2 122 3 26 1 312 2 210 12 81 6 357 5 126 2 260 2 38 2 174 1 129 2 131 5 39 4 267 1 42 3 134 3 180 4 88 2 138 4 48 1 139 2 91 1 51 2 378 3 377 2 
26 1 312 1 123 1 210 6 143 5 355 1 212 1 81 3 27 1 357 1 283 5 11 1 263 1 129 2 105 1 131 1 39 2 328 1 107 2 150 5 245 5 297 8 14 2 180 2 138 2 113 1 115 2 161 1 51 2 54 1 209 1 378 1 121 2 377 2 253 2 
59 1 238 1 31 1 361 1 287 1 317 1 171 1 173 1 99 1 37 1 62 1 129 2 131 1 39 1 107 2 150 2 297 2 180 1 138 1 114 1 76 1 50 1 161 1 310 1 121 1 209 1 377 1 278 1 
297 1 67 1 14 1 283 1 180 1 138 1 39 1 91 1 150 1 121 1 
297 5 143 5 210 10 81 5 283 5 139 1 115 2 129 2 161 1 51 2 107 2 150 5 245 5 377 2 253 2 
14 1 357 1 283 1 131 1 209 1 378 1 
312 2 26 2 188 1 357 4 284 1 100 1 174 2 13 1 149 1 131 3 39 2 150 2 42 4 297 2 344 4 333 1 134 4 45 1 180 2 205 1 138 1 163 2 52 1 375 1 252 1 121 2 378 2 209 3 79 1 
0 1 188 1 28 1 144 1 30 1 171 2 259 1 193 1 173 2 37 2 62 3 174 1 13 1 296 1 42 1 298 1 344 1 134 1 178 1 179 2 205 1 156 1 347 1 50 2 250 1 77 1 276 1 337 1 310 1 278 3 79 1 122 1 
312 1 297 1 26 1 143 2 210 4 14 2 81 2 189 1 283 4 180 1 138 1 39 1 150 2 245 2 121 1 
364 1 300 1 41 1 
203 1 282 1 364 1 41 1 33 1 
364 1 300 1 41 1 
364 1 300 1 41 1 
322 1 364 1 41 1 
322 1 364 1 41 1 
322 1 364 1 41 1 
364 1 41 1 
234 1 280 1 
187 3 189 1 4 4 28 2 179 4 144 8 360 1 31 1 345 1 156 4 259 2 207 1 114 1 347 2 99 1 365 2 107 1 377 1 254 1 296 2 
207 1 114 1 99 1 187 2 189 1 4 3 365 2 144 6 107 1 377 1 31 1 145 1 345 1 156 3 
187 2 28 1 4 2 179 2 144 4 156 2 259 1 347 1 115 1 365 1 159 1 51 1 107 1 377 1 253 1 254 1 296 1 
187 2 4 3 144 7 156 4 113 1 321 1 115 1 365 1 328 2 51 1 107 1 54 1 377 1 253 1 254 1 
187 9 189 1 4 11 28 2 144 23 360 2 31 2 259 2 99 2 321 1 323 1 365 5 326 1 366 1 107 3 328 2 296 2 179 4 345 1 113 2 156 12 207 1 114 1 347 2 115 2 51 2 377 3 254 4 253 2 
144 1 328 1 156 1 
4 1 144 1 113 1 
187 3 28 1 4 3 179 2 144 6 259 1 156 3 347 1 139 1 115 1 365 2 159 1 51 1 107 1 377 1 254 1 253 1 296 1 
123 1 355 1 212 1 27 1 187 2 28 1 4 6 144 12 259 1 365 1 263 1 328 1 107 2 296 1 179 2 113 1 156 6 347 1 115 2 117 1 51 2 54 1 377 2 254 1 253 2 
187 2 4 3 144 6 31 1 156 3 114 1 99 1 365 1 107 1 377 1 254 1 
187 2 4 1 28 1 179 2 144 3 360 1 31 1 345 1 156 2 259 1 207 1 347 1 99 1 365 1 366 1 254 1 296 1 
187 5 28 1 4 5 179 2 144 10 361 1 31 2 259 1 156 5 347 1 114 1 99 2 365 3 117 1 107 2 377 2 254 2 296 1 
187 1 28 1 4 2 179 2 144 2 259 1 347 1 117 1 51 1 107 1 254 1 296 1 
187 2 28 1 4 2 179 2 144 4 156 2 259 1 347 1 115 1 365 1 117 1 51 1 107 1 377 1 253 1 254 1 296 1 
187 2 28 3 4 1 179 6 70 1 144 3 360 1 31 1 156 2 259 3 347 3 99 1 365 1 366 1 117 1 254 1 296 3 
187 6 28 4 4 7 144 15 360 1 361 1 31 2 259 4 99 2 324 1 365 3 366 1 107 2 328 1 296 4 179 8 70 1 345 1 156 8 113 1 207 1 114 1 347 4 159 1 117 1 54 1 377 2 254 3 
212 1 187 2 189 1 28 1 4 4 144 8 31 1 259 1 99 1 365 2 107 1 328 1 296 1 179 2 345 1 113 1 156 4 207 1 347 1 114 1 117 1 54 1 377 1 
212 1 187 3 189 1 28 2 4 6 144 11 31 1 259 2 99 1 321 1 365 2 328 2 107 2 296 2 179 4 345 1 156 5 113 1 207 1 114 1 347 2 115 1 159 1 117 1 51 1 54 1 377 1 254 1 
123 1 355 1 212 1 27 1 187 4 189 1 28 3 4 9 144 19 360 1 31 1 259 3 99 1 365 3 263 1 328 1 107 3 296 3 179 6 345 1 113 1 156 10 207 1 114 1 347 3 115 2 159 1 117 1 51 2 54 1 377 3 254 1 253 2 
123 1 355 1 212 1 27 1 187 5 189 1 28 3 4 10 144 17 360 1 31 1 259 3 99 1 365 3 263 1 328 1 107 3 296 3 179 6 345 1 113 1 156 7 207 1 114 1 347 3 115 2 159 1 117 1 51 2 54 1 377 2 254 2 253 1 
212 1 187 2 189 1 28 1 4 4 144 8 31 1 259 1 99 1 365 2 107 1 328 1 296 1 179 2 345 1 113 1 156 4 207 1 347 1 114 1 117 1 54 1 377 1 
123 1 355 1 212 1 27 1 187 2 28 1 4 6 144 12 259 1 365 1 263 1 328 1 107 2 296 1 179 2 113 1 156 6 347 1 115 2 117 1 51 2 54 1 377 2 254 1 253 2 
123 1 355 1 212 1 27 1 187 5 189 1 28 4 4 10 144 18 360 2 31 1 259 4 99 1 263 1 365 3 328 1 107 3 296 4 179 8 345 1 156 8 113 1 207 1 114 1 347 4 115 2 159 1 117 1 51 2 54 1 377 2 254 2 253 1 
123 1 355 1 212 1 27 1 187 6 28 4 4 9 144 16 360 2 259 4 263 1 365 3 328 1 107 3 296 4 179 8 70 1 156 7 113 1 347 4 115 3 117 1 51 3 54 1 377 2 254 3 253 2 
187 6 4 3 144 7 31 3 345 2 156 4 207 1 114 1 99 3 365 3 107 1 377 1 254 3 
123 1 355 1 212 1 27 1 187 4 189 1 28 4 4 10 144 18 360 2 31 1 259 4 99 1 263 1 365 3 328 1 107 3 296 4 179 8 70 1 345 1 156 8 113 1 207 1 114 1 347 4 115 2 117 1 51 2 54 1 377 2 254 1 253 1 
298 1 173 1 62 1 237 1 278 1 192 1 279 1 
298 1 44 1 237 1 192 1 173 1 62 1 74 1 142 1 24 1 265 1 279 1 278 1 
100 1 344 1 188 1 134 1 174 1 13 1 52 1 145 1 79 1 205 1 42 1 
298 1 344 1 188 1 134 1 178 1 205 1 171 1 35 1 173 1 62 2 174 1 13 1 50 1 276 1 278 2 79 1 122 1 42 1 
298 1 344 1 188 1 134 1 178 1 302 1 83 1 317 1 205 2 73 1 171 1 35 1 173 2 62 2 13 3 50 2 163 1 198 1 276 1 278 2 79 1 122 2 42 1 
188 1 83 1 317 1 171 1 173 2 35 1 62 2 13 3 198 1 294 1 200 1 42 2 298 1 344 2 134 2 302 1 205 2 73 1 50 2 163 1 276 1 79 1 278 2 122 2 
211 1 357 1 188 1 59 1 283 1 126 1 238 1 317 1 171 1 8 1 173 1 37 1 62 1 174 1 13 4 131 2 198 1 42 2 14 1 344 2 134 2 302 1 205 1 20 1 50 1 76 1 163 1 165 1 310 1 209 2 278 1 79 1 122 1 
14 1 344 3 188 1 134 3 357 1 283 1 302 1 126 1 205 1 20 1 174 1 102 1 13 4 131 2 163 1 198 1 294 1 165 1 209 2 79 1 122 1 42 3 
344 1 188 1 134 1 371 1 79 1 42 1 
68 1 344 6 134 7 188 3 334 1 29 1 371 1 205 2 183 1 372 1 127 1 174 2 130 1 13 3 374 1 368 1 65 1 353 1 79 2 42 7 122 1 
166 1 187 2 189 1 188 1 3 1 4 3 358 1 28 2 257 1 144 6 30 1 31 1 259 2 171 1 193 2 173 1 35 1 99 1 62 2 365 2 13 1 107 1 65 1 296 2 42 1 298 2 344 1 134 1 178 1 179 4 345 1 205 1 156 3 207 1 114 1 347 2 308 1 50 1 140 1 276 1 337 2 77 1 377 1 93 1 79 1 278 2 122 1 
357 2 283 1 6 1 126 1 260 1 290 1 38 1 174 1 102 1 13 2 149 1 131 3 39 2 150 1 42 1 297 1 14 1 67 1 344 1 134 1 180 2 138 2 20 1 91 1 165 1 121 2 209 3 378 1 
202 1 68 1 344 2 134 2 188 2 371 1 205 1 13 2 165 1 65 1 79 1 42 2 122 1 
96 1 344 4 188 1 134 4 205 1 100 1 174 1 13 1 294 1 52 1 65 1 79 1 42 4 
344 2 134 2 188 2 334 1 256 1 306 1 155 1 205 1 13 1 163 1 353 1 79 1 42 2 122 1 
313 1 344 1 188 1 134 1 174 1 222 1 236 1 177 1 79 1 42 1 
124 1 344 2 134 2 188 1 205 1 183 1 372 1 13 1 65 1 79 1 42 2 
96 1 344 4 134 5 188 2 29 1 205 2 372 1 100 1 174 1 13 3 130 1 163 1 52 1 65 1 79 2 42 5 
96 1 344 4 134 5 188 2 61 1 205 2 372 1 100 1 174 1 13 3 130 1 163 1 52 1 65 1 79 2 42 5 
298 1 344 1 188 1 134 1 205 1 171 1 35 1 173 1 62 2 174 1 13 1 50 1 276 1 278 2 79 1 122 1 42 1 200 1 
68 1 344 1 134 1 188 2 334 1 205 1 13 1 163 1 374 1 353 1 79 1 42 1 122 1 
298 1 273 1 244 1 111 1 92 1 
298 1 14 1 226 1 299 1 283 1 111 2 126 1 316 1 83 1 317 1 73 1 241 1 273 2 290 1 244 1 131 2 92 2 209 2 86 1 
173 1 62 1 349 1 244 1 111 1 251 1 25 1 92 1 278 1 
299 1 244 1 316 1 
320 1 246 1 55 1 145 1 
320 1 36 1 289 1 246 1 162 1 215 1 55 1 
289 1 106 1 218 1 
246 1 359 1 215 3 228 2 320 1 36 1 289 3 22 1 162 1 53 1 295 1 55 1 
320 1 36 1 213 1 289 2 246 1 162 1 215 2 55 1 9 1 
313 1 247 1 215 1 36 1 320 1 289 1 195 1 222 1 162 1 295 1 64 1 
320 1 36 1 289 1 246 1 162 1 215 1 295 1 
36 1 289 1 246 2 162 1 215 1 55 1 295 1 
246 1 215 2 206 1 320 1 36 2 289 2 197 1 185 1 162 2 295 1 
233 1 246 1 247 1 215 3 170 1 9 2 36 1 320 2 289 3 162 1 90 1 55 1 295 1 
313 2 246 1 169 1 236 1 215 2 9 1 320 1 36 1 289 2 195 1 222 1 162 1 55 1 295 1 94 1 
213 1 246 1 247 1 137 1 215 4 170 1 9 2 36 2 320 2 289 4 162 2 55 1 295 1 
320 1 36 1 289 1 246 1 162 1 215 1 55 1 295 1 
246 2 359 1 247 1 215 4 170 1 228 1 9 2 36 1 320 3 289 4 291 1 162 1 53 1 55 2 
246 1 215 2 271 1 9 1 182 1 320 1 36 1 289 2 231 1 162 1 295 1 55 1 
246 1 359 1 286 1 215 3 228 2 320 1 36 1 289 3 162 1 53 2 295 1 55 1 
346 2 49 1 320 2 352 1 
36 1 289 1 43 1 162 1 215 1 295 1 
320 1 36 1 233 1 289 2 246 1 162 1 215 2 55 1 295 1 9 1 
160 1 
320 1 36 1 289 1 246 1 162 1 215 1 55 1 295 1 
320 1 36 1 233 1 289 3 246 1 162 1 215 3 228 1 55 1 295 1 9 1 
320 1 291 1 247 1 170 1 
320 1 246 1 

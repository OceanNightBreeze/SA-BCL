#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 271 306 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 271 306 90 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 271 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 1 174 2 291 1 323 2 335 1 187 3 244 1 124 1 188 2 100 1 337 1 253 3 320 1 
65 1 291 1 323 2 325 1 51 1 52 1 327 1 169 1 253 9 278 2 79 1 174 2 82 2 259 1 335 4 187 9 244 6 39 2 124 1 188 5 100 3 62 1 337 1 288 1 224 2 316 1 207 1 320 2 
65 1 291 1 323 2 325 1 51 1 52 1 327 1 169 1 253 9 278 2 79 1 174 2 82 2 259 1 335 4 187 9 244 6 39 2 124 1 188 5 100 3 62 1 337 1 288 1 224 2 316 1 207 1 320 2 
65 1 291 1 323 2 325 1 51 1 52 1 327 1 169 1 253 10 278 2 79 1 174 2 82 2 259 1 335 5 187 10 244 7 39 2 124 1 188 6 100 4 62 1 337 1 288 1 224 2 316 1 207 1 320 2 
65 1 291 1 323 2 325 1 51 1 52 1 327 1 169 1 253 7 278 2 79 1 174 2 82 2 335 3 187 7 244 4 39 1 124 1 188 4 100 2 62 1 337 1 288 1 224 2 316 1 207 1 320 2 
65 1 174 1 291 1 82 1 323 1 259 1 335 2 187 4 244 3 39 2 188 3 100 1 337 1 169 1 288 1 224 1 253 4 278 1 
65 1 174 1 291 1 346 1 323 1 82 1 84 1 187 2 155 1 52 1 188 1 337 1 316 1 253 2 278 1 320 1 
65 1 291 1 323 2 51 1 327 1 169 1 253 9 278 1 174 2 82 1 259 1 335 4 308 1 244 7 187 9 39 2 124 1 188 5 100 3 44 1 337 1 288 1 224 1 320 1 
65 1 291 1 323 2 51 1 327 1 169 1 253 9 278 1 174 2 82 1 259 1 335 4 308 1 244 7 187 9 39 2 124 1 188 5 100 3 44 1 337 1 288 1 224 1 320 1 
162 1 293 1 247 1 122 1 333 1 284 1 199 1 352 1 186 1 221 1 315 1 266 1 338 1 117 1 
160 1 
160 1 263 1 228 1 53 1 333 2 267 1 338 1 186 2 
160 1 339 1 239 2 241 1 60 1 91 1 333 5 178 2 134 1 273 1 186 5 11 1 263 2 41 1 53 1 63 2 267 1 338 2 77 1 
160 1 53 1 289 1 
160 1 214 1 136 2 
221 2 162 2 122 2 315 2 284 1 199 2 352 2 49 1 
129 1 66 1 162 2 227 1 69 1 296 1 230 1 250 1 272 2 49 1 113 1 24 1 12 1 142 1 25 2 280 2 345 1 172 1 175 1 177 1 122 3 31 2 349 1 33 2 284 1 334 1 199 3 352 2 203 1 85 1 356 1 221 2 86 1 359 1 204 1 315 2 319 1 
221 1 162 1 293 1 247 1 122 1 315 1 284 1 199 1 266 1 352 1 
160 1 162 1 293 1 59 1 122 1 333 1 199 1 37 1 186 1 310 1 43 1 53 1 170 1 343 1 
160 1 162 1 293 1 59 1 122 1 333 2 199 1 37 1 352 1 186 2 310 1 221 1 53 1 315 1 170 1 
263 1 333 1 338 1 48 1 186 1 
160 1 263 1 53 1 333 2 109 1 267 1 338 1 186 2 
263 1 333 1 186 1 
162 2 246 1 122 2 199 2 352 1 49 2 221 1 315 1 189 1 
194 1 195 1 38 1 
280 1 172 1 66 1 227 1 122 1 31 1 199 1 230 1 49 1 24 1 85 1 142 1 25 1 86 1 204 1 127 1 
280 1 172 1 66 1 162 1 227 1 122 2 31 1 199 2 22 1 230 1 352 1 24 1 85 1 142 1 195 1 86 1 25 1 300 1 204 1 315 1 
289 1 49 1 
221 1 162 3 300 1 122 3 315 3 199 3 352 3 49 1 
162 1 293 1 247 1 122 1 315 1 199 1 352 1 
221 1 162 1 293 1 246 1 122 1 315 1 199 1 189 1 352 1 
129 1 66 1 162 3 227 1 69 1 246 1 293 1 249 1 211 1 22 1 296 1 230 1 272 1 49 1 113 1 24 1 142 1 25 1 300 1 170 1 280 1 172 1 175 1 177 1 59 1 349 1 122 4 31 1 33 2 333 1 284 1 199 4 37 1 352 3 203 1 186 1 85 1 310 1 221 2 86 1 359 1 204 1 315 3 319 1 
162 2 43 1 300 1 122 2 315 1 199 2 111 1 352 1 49 1 
160 1 162 3 246 1 59 1 293 1 122 3 333 1 199 3 22 1 211 1 37 1 352 3 186 1 310 1 311 1 221 1 300 2 315 3 170 1 
162 2 246 1 122 2 199 2 38 1 352 2 221 1 195 1 300 1 315 2 
280 1 172 1 66 1 227 1 122 1 31 1 199 1 230 1 49 1 24 1 85 1 142 1 25 1 86 1 204 1 
280 1 172 1 66 1 122 1 31 1 32 1 199 1 230 1 184 1 49 1 24 1 85 1 25 1 86 1 204 1 
129 1 192 1 69 1 209 1 110 1 296 1 272 4 113 1 94 1 194 2 342 1 195 2 95 1 54 1 116 1 177 1 33 2 38 2 203 1 285 1 356 2 222 1 312 1 319 2 
310 1 162 1 293 1 122 1 315 1 199 1 352 1 231 1 
162 5 246 1 122 5 199 5 22 1 111 1 352 4 49 1 286 1 221 1 167 1 43 1 300 2 315 4 
162 2 293 1 247 1 122 2 315 2 199 2 231 1 352 2 
251 1 318 1 73 1 
139 1 350 1 303 1 318 2 73 2 354 1 
318 1 73 1 
318 1 73 1 
303 1 354 1 
303 1 354 1 
303 1 354 1 
146 1 318 1 73 1 
146 1 318 1 73 1 
146 1 318 1 73 1 
70 1 318 1 73 1 
70 1 318 1 73 1 
70 1 318 1 73 1 
1 1 306 1 126 1 271 1 318 1 73 1 
1 1 306 1 90 1 333 1 126 1 271 1 318 1 73 1 186 1 
155 1 224 1 164 2 278 2 183 1 
82 1 224 1 278 1 
155 1 82 1 278 1 
155 1 240 1 224 2 164 1 278 3 183 1 
155 1 212 1 224 1 164 1 278 2 183 1 
160 2 208 2 3 1 91 2 135 2 295 1 23 1 136 3 273 1 72 2 95 1 53 1 148 1 214 1 116 1 55 1 239 1 241 3 178 1 333 5 186 5 185 1 355 1 263 1 222 1 156 1 312 1 63 1 267 1 338 4 268 1 321 1 
160 5 208 6 292 1 91 6 135 6 295 2 23 4 136 9 273 1 48 5 144 1 95 3 53 1 214 3 116 3 77 1 55 2 239 2 282 5 97 1 241 8 333 9 178 2 182 1 186 9 185 1 263 6 222 3 312 3 20 1 63 2 338 7 267 1 190 1 268 3 
160 3 208 2 3 1 91 2 295 1 135 2 23 1 136 4 72 1 95 1 53 1 214 2 116 1 77 1 55 1 239 1 241 3 178 1 333 3 186 3 222 1 312 1 63 1 338 2 321 1 268 1 
160 4 208 4 292 1 3 1 91 4 135 4 295 1 23 2 136 7 72 2 144 1 95 2 53 1 214 3 116 2 77 1 55 1 239 1 97 1 241 5 178 1 333 4 186 4 222 2 312 2 63 1 338 3 321 1 268 2 
17 1 
289 1 230 1 260 1 
230 1 274 1 
86 1 230 1 
66 1 86 1 83 1 230 3 254 1 260 2 
66 1 86 1 230 1 
245 1 230 1 
104 1 173 1 192 2 340 1 152 1 257 2 272 7 285 3 222 1 356 4 312 1 145 1 147 1 302 1 171 1 101 1 319 3 102 1 
129 1 192 5 340 2 69 1 6 1 272 31 47 1 113 1 145 2 95 3 147 2 277 3 302 1 171 1 116 3 118 1 13 1 121 1 173 2 28 1 216 1 177 1 152 1 33 2 257 3 285 10 356 16 222 4 336 4 312 4 101 1 319 15 102 5 268 3 
129 2 192 3 340 1 69 2 272 9 113 2 145 1 114 1 96 1 147 1 302 1 171 1 118 1 173 1 177 2 152 1 33 4 257 2 285 4 222 1 356 5 312 1 319 4 102 1 
173 1 192 2 340 1 152 1 257 2 272 7 285 3 222 1 356 4 312 1 145 1 147 1 302 1 171 1 101 1 319 3 102 1 
173 1 192 2 340 1 152 1 257 2 272 7 285 3 222 1 356 4 312 1 145 1 147 1 302 1 171 1 101 1 319 3 102 1 
323 1 106 2 8 1 230 1 341 1 25 1 75 1 253 1 344 1 280 1 281 2 172 1 174 1 29 2 31 1 202 1 85 1 187 1 264 1 19 1 86 1 204 1 320 2 
323 1 106 1 294 1 112 1 297 1 25 1 253 1 278 2 280 1 281 1 174 1 29 1 304 1 198 1 240 1 31 1 82 1 85 1 187 1 155 1 265 1 337 1 204 1 224 1 206 1 320 1 
65 1 291 1 323 1 106 1 294 1 112 1 297 1 25 1 326 1 253 2 278 2 280 1 281 1 174 1 29 1 304 1 198 1 240 1 31 1 82 1 85 1 244 1 187 2 155 1 188 1 337 1 204 1 224 1 206 1 320 1 
87 1 65 1 291 1 323 1 106 1 294 1 112 1 297 1 25 1 253 3 278 2 280 1 281 1 174 1 29 1 304 1 198 1 240 1 31 1 82 1 85 1 187 3 244 2 155 1 265 1 264 1 188 1 204 1 224 1 320 1 
87 1 65 1 291 1 106 1 297 1 25 1 253 2 278 2 280 1 281 1 29 1 304 1 198 1 240 1 31 1 82 1 85 1 187 2 244 2 155 1 265 1 188 1 204 1 224 1 320 1 
233 1 
191 1 4 2 91 2 132 2 230 1 136 2 273 1 193 1 138 1 235 1 275 1 197 2 280 2 239 1 241 2 333 4 153 1 243 1 154 1 204 1 63 1 160 1 21 1 295 1 298 1 74 2 166 1 25 2 168 1 75 1 301 2 214 2 344 1 215 2 172 2 31 2 178 1 186 4 85 1 263 6 125 2 86 1 317 2 267 3 
298 1 263 2 125 1 228 1 168 1 21 1 333 2 267 1 153 1 243 1 186 2 
74 1 298 1 168 1 21 1 301 1 333 1 153 1 243 1 186 1 
228 1 21 1 333 2 153 1 186 2 243 1 298 1 74 1 263 2 125 1 168 1 301 1 317 1 267 1 
4 2 228 1 91 1 324 1 132 2 273 1 193 1 196 1 53 2 197 2 328 1 239 1 330 1 241 1 333 4 284 1 199 1 153 1 243 1 154 1 63 1 160 2 162 1 293 1 247 1 21 1 74 3 298 1 168 1 301 3 214 2 215 2 117 1 119 1 122 1 178 1 352 1 186 4 263 7 125 4 221 1 315 1 266 1 317 4 267 3 
160 2 4 2 21 1 91 1 132 2 136 2 273 1 193 1 74 2 298 1 235 1 168 1 53 1 301 2 197 2 214 2 215 2 239 1 241 1 178 1 333 3 153 1 243 1 186 3 154 1 263 4 125 2 63 1 317 2 267 2 
160 1 4 2 21 1 91 1 324 1 132 2 273 1 193 1 74 2 298 1 168 1 53 1 301 2 197 2 214 2 328 1 215 2 119 1 239 1 241 1 178 1 333 3 153 1 243 1 186 3 154 1 263 4 125 2 63 1 317 2 267 2 
160 1 4 2 21 1 91 1 324 1 132 2 273 1 193 1 74 2 298 1 168 1 53 1 301 2 197 2 214 2 328 1 215 2 119 1 239 1 241 1 178 1 333 3 153 1 243 1 186 3 154 1 263 4 125 2 63 1 317 2 267 2 
160 1 226 1 4 2 21 1 91 1 324 1 132 2 136 2 273 1 9 1 74 2 298 1 168 1 53 1 301 2 239 1 241 1 178 1 333 3 258 2 153 1 243 1 186 3 154 1 262 2 263 4 125 2 158 1 63 1 317 2 267 2 
160 1 4 2 21 1 91 1 132 2 324 1 273 1 193 1 74 3 298 1 168 1 53 1 196 1 301 3 197 2 214 2 328 1 215 2 119 1 239 1 241 1 333 3 178 1 153 1 154 1 243 1 186 3 263 5 125 3 63 1 317 3 267 2 
160 1 4 2 21 1 91 1 132 2 324 1 273 1 193 1 74 3 298 1 168 1 53 1 196 1 301 3 197 2 214 2 328 1 215 2 119 1 239 1 241 1 333 3 178 1 153 1 154 1 243 1 186 3 263 5 125 3 63 1 317 3 267 2 
160 1 226 1 4 2 21 1 91 1 132 2 136 2 273 1 74 2 298 1 235 1 168 1 53 1 301 2 239 1 241 1 178 1 333 3 258 2 153 1 243 1 186 3 154 1 262 2 263 4 125 2 63 1 317 2 267 2 
129 2 230 4 272 2 232 1 50 1 12 2 143 1 326 1 280 7 199 1 203 2 204 4 159 1 290 1 66 1 162 1 69 2 110 1 296 2 113 2 252 1 25 7 300 1 75 1 26 1 27 1 344 1 80 1 345 1 172 2 347 1 177 2 31 6 122 1 33 4 352 1 85 3 265 1 356 1 86 3 359 1 315 1 319 1 
129 1 192 1 0 1 162 1 246 1 69 1 296 1 272 3 113 1 194 1 195 1 95 1 116 1 58 1 177 1 122 1 33 2 199 1 38 1 352 1 203 1 285 1 221 1 356 1 222 1 312 1 315 1 319 2 268 1 
129 1 192 2 340 1 69 1 110 1 296 1 272 6 113 1 49 2 194 1 195 1 302 1 171 1 173 1 177 1 152 1 33 2 257 1 38 1 203 1 285 2 356 3 222 1 312 1 289 1 319 3 
129 2 192 1 69 2 6 1 133 1 296 1 272 14 49 1 113 2 194 11 195 11 95 2 277 3 116 1 13 1 345 1 30 1 58 1 177 2 33 4 38 4 309 1 203 2 285 2 356 8 222 1 336 3 312 2 359 1 102 1 319 6 128 1 268 2 
129 1 66 1 105 1 162 1 227 1 69 1 7 1 22 1 230 1 296 1 272 2 49 1 24 1 113 1 142 1 25 1 300 1 280 1 172 1 345 1 58 1 177 1 31 1 122 2 33 2 199 2 38 1 352 1 203 1 85 1 356 1 86 1 204 1 359 1 315 1 127 1 64 1 319 1 
129 3 192 4 2 1 227 2 230 2 272 20 49 2 194 7 142 2 195 7 95 2 56 2 280 3 58 1 152 1 199 3 201 2 203 3 285 8 204 2 102 4 66 2 161 2 162 1 340 1 69 3 22 1 296 3 113 3 24 2 25 3 300 1 302 1 171 1 116 2 173 1 345 1 172 1 177 3 31 3 122 3 349 2 257 1 33 6 218 1 179 2 38 7 352 1 85 2 265 1 40 1 222 3 356 10 86 2 312 3 359 1 315 1 319 10 268 2 
129 1 177 1 69 1 33 2 38 1 110 1 296 1 272 2 203 1 113 1 285 1 194 1 342 1 356 2 195 1 95 1 312 1 102 1 
129 1 192 1 177 1 69 1 33 2 38 1 110 1 296 1 272 2 203 1 113 1 94 1 285 1 194 1 222 1 195 1 116 1 319 2 
129 1 192 1 69 1 110 1 296 1 272 4 113 1 194 2 95 1 195 2 116 1 177 1 33 2 38 2 203 1 285 2 356 2 222 1 312 1 102 1 319 2 268 1 
129 1 177 1 69 1 33 2 38 1 296 1 272 2 50 1 203 1 113 1 285 1 194 1 342 1 356 2 195 1 95 1 312 1 102 1 
129 1 192 1 177 1 69 1 33 2 38 1 296 1 272 2 50 1 203 1 113 1 94 1 285 1 194 1 222 1 195 1 116 1 319 2 
129 1 192 1 69 1 296 1 272 4 113 1 50 1 194 2 95 1 195 2 116 1 177 1 33 2 38 2 203 1 285 2 356 2 222 1 312 1 102 1 319 2 268 1 
129 1 192 1 177 1 69 1 33 2 38 2 296 1 272 4 203 1 113 1 285 2 194 2 222 1 356 2 195 2 95 1 312 1 116 1 319 2 102 1 268 1 
129 1 66 1 227 1 69 1 230 1 296 1 272 2 49 1 24 1 113 1 142 1 25 1 280 1 345 1 172 1 177 1 349 1 31 1 122 1 33 2 199 1 203 1 85 1 356 1 86 1 204 1 359 1 319 1 
129 1 66 1 69 1 230 1 296 1 272 2 49 1 24 1 113 1 25 1 280 1 345 1 172 1 332 1 177 1 31 1 122 1 32 1 33 2 199 1 184 1 203 1 85 1 356 1 86 1 204 1 359 1 319 1 
129 1 192 1 69 1 296 1 272 4 113 1 194 2 95 1 195 2 116 1 58 1 177 1 33 2 38 2 203 1 285 2 356 2 222 1 312 1 102 1 319 2 268 1 
129 1 66 1 192 1 227 1 69 1 230 1 296 1 272 4 24 1 113 1 194 2 142 1 195 2 95 1 25 1 326 1 116 1 280 1 177 1 349 1 31 1 122 1 33 2 179 1 199 1 38 2 203 1 85 1 285 2 222 1 356 2 312 1 86 1 204 1 319 2 102 1 268 1 
129 1 162 1 246 1 69 1 108 1 296 1 272 3 113 1 194 1 95 1 195 1 116 1 58 1 177 1 122 1 33 2 199 1 38 1 352 1 203 1 285 1 222 1 221 1 356 2 312 1 315 1 319 1 102 1 268 1 
129 2 192 3 88 1 69 2 6 1 210 1 272 19 137 1 113 2 95 3 96 1 276 1 277 1 116 3 13 1 15 1 81 2 177 2 33 4 98 1 285 6 42 1 356 9 222 3 336 2 312 3 205 2 319 10 102 3 268 3 
129 3 192 2 88 2 131 1 69 3 210 2 272 26 113 3 95 3 236 1 96 1 276 1 277 2 76 1 116 2 118 2 13 2 15 1 81 1 177 3 33 6 98 1 353 1 285 4 123 1 222 2 356 14 336 2 312 3 205 4 102 2 319 12 103 1 268 3 
129 3 192 4 88 1 340 1 131 1 69 3 6 1 210 2 272 41 113 3 95 4 236 1 96 1 276 1 277 3 302 1 76 1 171 1 116 4 118 1 57 1 13 3 15 1 173 1 81 1 177 3 152 1 257 1 33 6 98 1 353 1 123 1 285 8 42 1 356 20 222 5 336 4 312 5 205 4 319 21 102 4 103 1 268 4 
129 4 192 4 88 1 340 1 131 1 69 4 6 1 210 2 272 38 113 4 95 4 236 1 96 1 276 1 277 3 302 1 76 1 171 1 116 3 118 2 57 1 13 3 15 1 173 1 81 1 177 4 152 1 257 1 33 8 98 1 353 1 123 1 285 7 42 1 356 20 222 4 336 4 312 5 205 4 319 18 102 3 103 1 268 4 
129 2 192 7 88 1 340 1 131 1 69 2 6 2 210 1 272 52 113 2 95 7 236 1 96 1 276 1 277 4 302 1 76 1 171 1 116 7 118 1 13 2 15 1 173 1 30 2 81 1 177 2 152 1 257 1 33 4 98 1 353 1 123 1 285 14 356 27 222 8 336 4 312 8 205 4 319 25 102 7 103 1 268 7 
129 1 162 2 69 1 230 1 296 1 272 2 113 1 12 2 25 2 80 1 280 2 345 1 347 1 58 1 177 1 348 1 217 1 122 2 31 2 33 2 61 1 199 2 351 1 203 1 85 1 356 1 86 1 287 1 204 1 359 1 319 1 
280 1 172 1 29 1 151 1 31 1 230 1 92 1 202 1 85 1 86 1 25 1 204 1 75 1 344 1 
280 1 270 1 29 1 304 1 198 1 240 1 31 1 82 1 92 1 112 1 85 1 155 1 265 1 25 1 204 1 224 1 115 1 278 2 
280 2 270 1 29 1 304 1 198 1 240 1 31 2 82 1 92 1 112 1 85 1 155 1 265 1 25 2 326 1 204 1 224 1 115 1 278 2 
280 1 29 1 304 1 198 1 240 1 31 1 82 1 219 1 112 1 85 1 155 1 265 1 25 1 204 1 224 1 115 1 278 2 
14 1 
339 1 160 1 239 1 241 1 178 1 91 1 273 1 11 1 53 1 63 1 
160 5 208 5 163 1 241 5 91 5 135 5 136 10 299 2 222 2 95 2 312 2 214 5 116 2 56 1 268 2 
160 1 263 1 53 1 333 1 267 1 186 1 
269 2 322 1 91 2 107 1 295 2 230 1 273 1 138 1 166 1 25 4 275 2 75 1 255 1 77 1 344 1 280 4 239 2 172 2 241 2 31 4 178 2 333 3 186 3 85 1 263 4 86 1 204 1 63 2 267 2 
160 1 339 1 11 1 241 1 53 1 91 1 289 1 
160 2 91 1 136 1 273 1 193 1 53 1 214 1 197 1 215 1 239 1 241 1 178 1 333 1 186 1 263 1 63 1 267 1 
269 1 89 1 91 8 135 6 230 10 136 12 273 4 274 3 11 1 95 2 326 1 53 2 275 1 149 2 56 2 238 2 280 3 239 4 241 9 59 2 333 5 200 2 245 2 204 4 63 4 339 1 160 8 208 6 66 3 163 2 107 1 295 2 299 2 25 3 214 6 254 1 116 2 172 1 176 2 307 2 31 3 178 4 260 2 186 5 85 3 263 5 222 2 357 1 86 3 313 1 312 2 223 2 267 3 268 2 
160 5 208 5 163 1 5 1 131 1 91 5 295 1 135 5 136 6 273 2 10 1 299 2 95 2 275 1 53 2 277 1 76 1 214 3 116 2 13 1 239 2 241 8 333 1 178 2 353 1 186 1 123 1 263 1 222 2 336 1 312 2 63 2 267 1 103 1 268 2 
162 1 163 1 340 1 293 1 247 1 91 2 93 1 273 1 299 2 302 1 328 1 117 1 173 1 239 1 241 2 122 1 178 1 333 1 284 1 199 1 352 1 186 1 222 1 221 1 312 2 315 1 63 1 266 1 
129 1 66 1 162 2 227 1 69 1 230 1 296 1 272 1 49 1 113 1 24 1 142 1 25 1 280 1 172 1 175 1 177 1 31 1 122 3 349 1 33 2 284 1 199 3 352 2 203 1 85 1 221 2 86 1 359 1 204 1 315 2 319 1 
160 4 208 2 239 1 241 1 257 1 91 2 178 1 135 2 295 1 136 4 273 1 53 2 275 1 63 1 214 2 
126 1 271 1 
126 1 271 1 
126 1 271 1 
126 1 271 1 
126 1 271 1 
126 1 271 1 
126 1 271 1 
126 1 271 1 
318 1 73 1 
129 1 173 2 192 3 340 2 69 1 177 1 33 2 272 10 93 1 113 1 285 5 356 5 222 2 312 2 96 1 302 1 102 2 319 5 
129 1 177 1 69 1 33 2 272 2 113 1 285 1 356 2 95 1 312 1 96 1 102 1 
129 1 192 1 177 1 69 1 33 2 272 4 113 1 285 2 222 1 356 2 95 1 312 1 96 1 116 1 319 2 102 1 268 1 
129 3 173 1 192 1 340 1 177 3 69 3 33 6 272 3 113 3 220 1 285 2 42 1 356 1 96 1 319 2 102 1 118 1 
129 5 192 7 340 3 69 5 6 1 272 34 113 5 95 3 96 1 277 3 302 2 171 1 116 3 118 2 121 1 13 1 173 3 28 1 216 1 177 5 152 1 257 1 33 10 35 1 220 1 285 12 42 1 356 16 222 5 336 4 312 5 319 18 102 5 268 3 
129 2 173 1 192 2 340 1 177 2 69 2 152 1 257 1 33 4 272 8 113 2 285 3 222 1 356 4 312 1 302 1 171 1 319 4 102 1 118 1 
285 2 173 1 222 1 356 3 192 2 312 1 340 1 152 1 257 1 302 1 289 1 171 1 272 6 319 3 
129 1 192 1 177 1 69 1 33 2 35 1 272 4 113 1 285 2 222 1 356 2 95 1 312 1 116 1 319 2 102 1 268 1 
13 1 192 1 6 1 272 7 285 2 222 1 356 3 336 2 95 1 312 1 277 1 116 1 319 4 102 1 268 1 
129 2 192 5 340 2 69 2 6 1 272 23 113 2 95 2 277 2 302 1 171 1 116 2 118 2 173 2 30 1 177 2 152 1 257 1 33 4 309 1 285 9 220 1 356 11 222 3 336 2 312 3 102 4 319 12 268 2 
336 1 272 1 319 1 
356 1 277 1 272 1 
129 1 192 2 69 1 177 1 33 2 35 1 272 6 113 1 285 3 356 3 222 1 95 1 312 1 116 1 56 1 319 3 102 1 268 1 
129 1 192 1 69 1 131 1 272 12 113 1 95 2 96 1 277 1 76 1 116 2 13 1 177 1 33 2 353 1 123 1 285 2 356 6 222 2 336 1 312 2 102 1 319 6 103 1 268 2 
173 1 192 1 340 1 272 6 285 2 356 3 222 1 312 1 302 1 319 3 102 1 
129 1 173 1 192 1 340 1 177 1 69 1 152 1 33 2 272 3 113 1 285 2 220 1 356 1 171 1 102 1 319 2 118 1 
129 1 192 2 340 1 69 1 272 8 113 1 96 1 277 1 302 1 171 1 13 1 173 1 177 1 152 1 257 1 33 2 353 1 285 2 222 1 356 4 336 1 312 1 319 4 
129 2 192 2 340 1 69 2 6 1 272 11 113 2 95 1 96 1 277 1 302 1 171 1 13 1 173 1 177 2 152 1 257 1 33 4 35 1 353 1 285 3 222 1 356 6 336 2 312 2 319 5 102 1 268 1 
129 3 192 3 340 1 131 1 69 3 272 19 113 3 95 2 96 1 277 1 302 1 76 1 171 1 116 2 118 1 13 1 173 1 177 3 152 1 257 1 33 6 35 1 353 1 123 1 285 4 356 9 222 3 336 1 312 3 102 1 319 10 103 1 268 2 
129 3 192 3 340 1 69 3 131 1 272 17 113 3 95 2 96 1 277 1 302 1 76 1 171 1 116 1 118 1 13 1 173 1 177 3 152 1 257 1 33 6 35 1 353 1 123 1 285 5 356 10 222 2 336 1 312 3 102 2 319 7 103 1 268 2 
129 1 192 2 340 1 69 1 272 8 113 1 96 1 277 1 302 1 171 1 13 1 173 1 177 1 152 1 257 1 33 2 353 1 285 2 222 1 356 4 336 1 312 1 319 4 
129 1 192 1 69 1 131 1 272 12 113 1 95 2 96 1 277 1 76 1 116 2 13 1 177 1 33 2 353 1 123 1 285 2 356 6 222 2 336 1 312 2 102 1 319 6 103 1 268 2 
129 4 192 3 340 1 131 1 69 4 272 18 113 4 95 2 96 1 277 1 302 1 76 1 171 1 116 1 118 2 13 1 173 1 177 4 152 1 257 1 33 8 35 1 353 1 123 1 285 5 356 10 222 2 336 1 312 3 102 2 319 8 103 1 268 2 
129 4 192 3 131 1 69 4 272 16 113 4 95 3 96 1 277 1 76 1 116 2 118 2 13 1 177 4 33 8 353 1 123 1 285 6 42 1 356 9 222 2 336 1 312 3 102 3 319 7 103 1 268 3 
173 3 192 3 340 3 152 1 272 7 285 6 222 1 356 3 312 1 302 1 171 2 319 4 102 3 
129 4 192 3 340 1 131 1 69 4 272 18 113 4 95 2 96 1 277 1 302 1 76 1 171 1 116 1 118 2 13 1 173 1 177 4 152 1 257 1 33 8 353 1 123 1 285 4 42 1 356 10 222 2 336 1 312 3 102 1 319 8 103 1 268 2 
162 1 165 1 43 1 122 1 199 1 111 1 49 1 
279 1 162 1 122 1 199 1 36 1 111 1 46 1 49 1 141 1 165 1 43 1 120 1 
280 4 172 1 45 1 31 4 230 1 85 1 25 4 86 1 326 1 204 1 75 1 213 1 344 1 
280 2 269 1 66 1 31 2 230 1 232 1 252 1 85 1 40 1 25 2 86 1 26 1 204 2 290 1 
85 1 280 1 155 1 172 1 304 1 25 1 204 1 31 1 82 1 278 1 
280 2 31 2 230 1 85 1 265 1 25 2 86 1 326 1 287 1 204 1 80 1 
280 5 269 1 172 1 45 1 31 4 230 3 85 2 25 5 86 2 143 1 326 1 75 1 204 2 27 1 344 1 80 1 
280 5 269 1 172 1 45 1 305 1 31 4 230 3 85 2 25 5 86 2 143 1 326 1 75 1 204 2 344 1 80 1 
85 1 280 1 172 1 86 1 25 1 204 1 75 1 31 1 289 1 230 1 344 1 
280 1 172 1 66 1 162 1 122 2 31 1 199 2 230 1 352 1 49 1 24 1 85 1 142 1 86 1 25 1 300 1 204 1 315 1 
269 1 66 2 162 2 293 1 230 3 49 1 24 1 142 1 25 1 300 1 280 1 31 1 122 2 199 2 37 1 352 1 85 1 310 1 86 2 245 1 204 1 315 2 223 1 
269 1 66 2 162 2 293 1 230 3 49 1 24 1 25 2 300 1 213 1 280 2 31 2 122 2 199 2 37 1 352 1 184 1 85 1 310 1 86 2 245 1 204 1 315 2 223 1 
160 1 280 3 172 1 269 1 66 1 59 1 31 3 333 2 71 1 230 4 260 1 186 2 274 1 85 1 263 1 358 1 245 1 86 1 25 3 53 1 204 1 223 1 213 1 
160 1 280 3 172 1 269 1 66 1 59 1 31 3 333 2 200 1 230 4 260 1 186 2 274 1 85 1 263 1 245 1 86 1 25 3 53 1 204 1 223 1 213 1 
85 1 280 1 25 1 99 1 204 1 31 1 
66 1 230 3 12 1 25 6 143 1 326 1 26 1 254 1 27 1 80 1 280 6 172 2 283 1 31 5 85 2 265 1 86 2 204 3 159 1 290 1 
129 2 66 1 192 2 162 1 340 1 227 1 69 2 230 1 296 2 272 6 49 2 24 1 113 2 194 1 142 1 195 1 25 1 300 1 326 1 302 1 171 1 280 1 173 1 58 1 177 2 152 1 348 1 122 2 31 1 349 1 257 1 33 4 199 2 179 1 38 1 352 1 201 1 203 2 85 1 285 2 222 1 356 3 312 1 86 1 204 1 315 1 319 3 
160 1 339 1 91 1 107 1 230 2 273 2 274 1 11 1 25 1 53 1 149 1 280 1 172 1 239 2 176 1 241 1 59 1 31 1 307 1 178 2 333 3 200 1 260 1 186 3 263 2 63 2 338 1 267 1 
280 2 66 1 31 2 230 2 260 1 85 1 99 1 25 2 313 1 86 1 326 1 204 2 254 1 
280 1 172 1 66 1 162 1 122 2 31 1 199 2 230 1 352 1 184 1 49 1 24 1 85 1 86 1 25 1 300 1 204 1 315 1 
280 1 269 1 66 1 31 1 283 1 230 1 85 1 25 1 86 1 26 1 204 2 254 1 290 1 
130 1 157 1 34 1 49 1 150 1 
160 1 130 1 162 1 68 1 293 1 247 1 53 1 117 1 16 1 122 1 333 1 284 1 199 1 352 1 186 1 221 1 314 1 315 1 266 1 338 1 
130 1 162 1 217 1 122 1 61 1 199 1 351 1 157 1 150 1 
16 1 130 1 314 1 
65 1 187 1 174 1 291 1 188 1 337 1 323 1 253 1 
65 2 174 1 67 1 291 2 248 1 323 1 335 1 244 2 187 4 188 3 100 1 316 1 253 4 256 1 
65 1 174 1 291 1 323 1 308 1 187 2 244 1 188 1 337 1 253 2 78 1 225 1 
174 1 65 1 67 1 331 1 291 1 248 2 323 1 187 3 188 1 337 1 316 2 253 3 
329 1 18 2 188 2 242 1 
187 1 174 1 337 1 323 1 180 1 253 1 
65 1 244 1 51 1 187 2 174 1 291 1 188 1 337 1 323 1 253 2 
140 1 
65 1 187 1 174 1 291 1 188 1 337 1 323 1 253 1 
65 1 291 1 188 1 289 1 
65 1 187 1 174 1 291 1 188 1 323 1 253 1 
187 1 106 1 320 1 
65 1 187 3 174 1 291 1 67 1 188 1 248 1 337 1 323 1 316 2 253 3 261 1 
65 1 244 1 187 2 174 1 291 1 39 1 188 1 323 1 253 2 
187 1 174 1 188 1 337 1 82 1 323 1 224 1 288 1 253 1 335 1 278 1 
65 1 187 1 174 1 188 1 337 1 323 1 253 1 
65 2 187 1 174 1 291 1 337 1 323 1 253 1 
65 1 174 2 323 2 181 1 187 2 234 1 188 1 337 1 237 1 253 2 
65 1 174 1 291 1 323 1 335 1 187 3 51 1 244 2 188 2 100 1 337 1 327 1 253 3 
65 1 174 1 291 1 240 1 323 1 82 1 229 1 155 1 187 2 244 1 188 1 337 1 224 1 253 2 278 2 
65 1 174 2 291 1 323 2 259 1 335 1 187 4 244 2 39 1 188 2 100 1 337 1 253 4 
174 1 65 1 291 1 323 1 244 1 187 3 51 1 188 1 337 1 316 1 253 3 
188 1 100 1 335 1 256 1 
65 1 188 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 293 201 174 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
311 2 291 1 31 1 68 1 341 1 117 1 318 5 139 1 365 2 35 1 194 2 8 6 40 1 225 1 122 2 123 1 371 3 12 1 60 1 230 2 304 1 250 2 153 4 255 1 132 9 256 9 261 1 337 2 
311 2 291 1 31 1 68 1 341 1 117 1 318 5 139 1 365 2 35 1 194 2 8 6 40 1 225 1 122 2 123 1 371 3 12 1 60 1 230 2 304 1 250 2 153 4 255 1 132 9 256 9 261 1 337 2 
311 2 291 1 31 1 68 1 341 1 117 1 318 6 139 1 365 2 35 1 194 2 8 7 40 1 225 1 122 2 123 1 371 4 12 1 60 1 230 2 304 1 250 2 153 5 255 1 132 10 256 10 261 1 337 2 
311 2 291 1 31 1 68 1 341 1 117 1 318 4 139 1 365 2 35 1 194 2 8 4 40 1 225 1 122 1 123 1 371 2 12 1 230 2 304 1 250 2 153 3 255 1 132 7 256 7 261 1 337 2 
371 1 311 1 60 1 250 1 341 1 117 1 318 3 153 2 35 1 365 1 132 4 256 4 261 1 194 1 8 3 122 2 337 1 123 1 
311 1 12 1 230 1 250 1 117 1 318 1 152 1 255 1 35 1 365 1 132 2 256 2 94 1 96 1 261 1 194 1 
371 1 291 1 230 1 250 2 117 1 318 2 153 1 35 1 365 2 132 3 256 3 261 1 8 1 
311 1 291 1 341 1 117 1 318 5 365 2 35 1 8 7 40 1 225 1 194 1 122 2 123 1 371 3 60 1 230 1 250 2 153 4 131 1 132 9 309 1 256 9 261 1 337 1 
311 1 291 1 341 1 117 1 318 5 365 2 35 1 8 7 40 1 225 1 194 1 122 2 123 1 371 3 60 1 230 1 250 2 153 4 131 1 132 9 309 1 256 9 261 1 337 1 
281 1 305 1 116 1 
252 1 281 1 195 2 
220 1 229 2 199 2 147 2 15 2 161 1 104 2 216 2 
338 1 210 1 340 1 242 1 266 1 161 1 216 2 92 1 218 1 220 1 74 1 166 1 299 1 323 2 223 2 97 1 100 2 247 1 196 1 326 1 229 2 199 3 147 2 126 2 15 3 16 1 180 1 104 2 234 1 20 1 181 1 106 1 156 1 133 1 158 1 260 2 48 1 
145 1 229 1 199 1 147 1 211 1 154 1 15 1 161 1 104 1 216 1 
327 1 145 1 361 1 199 1 351 1 148 1 15 1 281 1 305 1 216 1 33 1 244 1 307 1 297 1 
327 1 145 1 229 1 147 1 199 1 351 1 148 1 15 1 281 1 305 1 104 1 216 1 33 2 244 2 307 1 
125 1 165 1 67 1 33 1 244 1 
125 1 188 1 46 1 67 1 281 1 305 1 33 2 244 2 
125 1 33 1 244 1 
145 1 229 1 147 1 199 1 211 1 67 1 15 1 161 1 104 1 216 1 33 1 69 1 244 1 154 1 
281 1 
125 1 46 1 67 1 281 1 246 1 305 1 33 2 244 2 
198 1 125 2 136 2 112 1 67 2 363 1 281 1 305 1 316 1 33 5 244 5 163 1 129 1 296 2 164 1 46 1 183 2 159 1 226 1 
220 1 116 1 
229 1 199 2 147 1 15 2 104 1 216 2 376 1 220 2 105 1 
75 1 114 1 27 1 
326 1 199 1 126 1 340 1 15 1 242 1 16 1 234 1 364 1 20 1 220 1 323 1 223 1 247 1 48 1 196 1 
326 1 172 1 147 1 199 2 126 1 340 1 15 2 242 1 16 1 104 1 216 1 234 1 20 1 347 1 323 1 223 1 247 1 27 1 48 1 196 1 
229 1 220 1 199 3 147 3 347 1 15 3 104 3 216 3 
145 1 199 1 147 1 211 1 15 1 104 1 216 1 
145 1 229 1 376 1 105 1 199 1 147 1 15 1 104 1 216 1 
210 1 340 1 242 1 266 1 161 1 216 3 33 1 92 1 244 1 220 1 74 1 166 1 347 1 299 1 323 1 223 1 100 1 247 1 196 1 326 1 327 1 145 1 229 2 351 1 199 4 147 3 172 1 148 1 126 1 15 4 16 1 180 1 103 1 104 3 357 1 234 1 20 1 376 1 307 1 106 1 133 1 158 1 260 2 48 1 
361 1 276 1 220 1 199 2 147 1 347 1 15 2 104 1 216 2 
145 1 327 1 229 1 172 1 147 3 199 3 351 1 148 1 15 3 18 1 281 1 103 1 104 3 216 3 33 1 244 1 376 1 307 1 347 2 
229 1 147 2 199 2 75 1 15 2 104 2 216 2 376 1 347 1 27 1 
326 1 199 1 126 1 340 1 15 1 242 1 16 1 234 1 20 1 220 1 323 1 223 1 247 1 48 1 196 1 
199 1 126 1 292 1 340 1 15 1 242 1 16 1 234 1 20 1 220 1 83 1 323 1 223 1 48 1 196 1 
210 1 114 2 266 1 314 1 343 1 215 1 34 1 166 2 299 1 100 4 75 2 231 1 353 1 180 1 282 1 330 1 331 1 21 1 181 2 106 1 133 1 184 1 260 2 27 2 
145 1 327 1 142 1 199 1 147 1 15 1 104 1 216 1 
361 1 276 1 229 1 147 4 199 5 172 1 113 1 15 5 104 4 216 5 376 1 220 1 347 2 271 1 
145 1 142 1 199 2 147 2 211 1 15 2 104 2 216 2 
171 1 173 1 
171 1 173 1 
265 1 5 1 
265 1 5 1 
265 1 5 1 
171 1 173 1 362 1 
171 1 173 1 374 1 
171 2 72 1 173 2 265 1 5 1 70 1 
171 1 173 1 362 1 
171 1 173 1 362 1 
171 1 124 1 173 1 
171 1 124 1 173 1 
171 1 124 1 173 1 
171 2 197 1 372 1 173 2 50 2 281 1 79 2 355 2 33 2 70 1 244 2 191 2 73 1 36 3 269 1 298 1 85 2 58 1 64 1 
50 1 216 2 33 1 244 1 220 1 345 1 36 1 73 1 171 1 11 1 147 2 173 1 199 2 15 2 232 1 374 1 79 1 104 2 355 1 254 1 85 1 258 1 88 1 28 1 
311 1 194 1 337 1 
311 1 96 1 194 1 
53 1 311 3 96 1 336 1 41 1 337 2 
311 2 238 1 96 1 336 1 41 1 337 1 
311 2 96 1 41 1 336 2 337 1 
136 1 67 4 316 2 33 5 34 1 244 5 163 3 296 1 119 1 366 1 57 1 195 3 226 1 325 2 11 1 125 1 78 2 252 1 281 2 254 1 305 1 282 1 329 1 81 2 330 1 331 1 128 1 46 1 183 1 359 1 258 1 87 1 
136 2 67 7 363 1 316 6 33 9 34 3 244 9 163 8 71 1 296 2 165 5 366 2 57 3 59 1 195 9 226 1 325 6 125 6 176 1 76 1 78 6 252 3 102 1 281 5 305 1 282 3 329 1 330 3 331 3 332 1 128 2 46 1 183 2 84 5 258 4 
136 1 67 2 363 1 316 2 33 3 34 1 244 3 163 3 296 1 366 1 57 1 195 4 325 2 78 2 252 2 281 3 305 1 81 1 282 1 330 1 331 1 128 1 183 1 359 1 258 1 87 1 
136 1 67 3 363 1 316 4 33 4 34 2 244 4 163 5 71 1 296 1 366 1 57 2 195 7 325 4 176 1 78 4 252 3 281 4 305 1 81 2 282 2 330 2 331 2 332 1 128 1 183 1 359 1 258 2 87 1 
340 1 99 1 116 1 
340 1 49 1 
324 1 
340 1 196 1 
340 3 16 1 99 2 214 1 306 1 196 1 
340 1 16 1 196 1 
340 1 268 1 
44 1 177 1 61 1 314 2 149 1 52 1 138 2 190 1 315 1 282 1 34 1 319 1 181 4 166 3 184 3 47 1 100 7 
44 1 177 1 61 1 314 2 149 1 52 1 138 2 190 1 315 1 282 1 34 1 319 1 181 4 166 3 184 3 47 1 100 7 
44 1 91 1 177 1 61 1 314 2 149 1 52 1 138 2 190 1 315 1 282 1 34 1 319 1 181 4 166 3 184 3 47 1 100 7 
111 1 293 1 266 1 314 1 243 1 138 1 52 1 315 2 319 1 141 1 166 3 299 1 7 1 100 6 44 1 177 1 201 1 180 1 181 3 205 1 106 1 184 2 47 1 260 2 
266 2 314 3 138 2 190 1 52 1 315 1 34 1 166 4 299 2 7 1 248 1 100 9 44 1 177 1 61 1 149 1 180 2 282 1 151 1 181 5 106 2 184 4 47 1 260 4 
310 1 262 1 311 2 137 1 160 1 2 1 213 1 117 1 318 1 53 1 365 1 35 1 95 1 223 1 323 1 96 1 8 1 194 1 249 1 227 1 126 1 230 1 175 1 250 1 234 1 132 2 256 2 261 1 337 1 48 1 
310 1 262 1 311 2 160 1 2 1 213 1 117 1 318 1 53 1 365 1 4 1 95 1 223 1 323 1 96 1 194 1 8 2 249 1 227 1 126 1 230 1 250 1 63 1 356 1 234 1 132 3 256 3 261 1 337 1 48 1 
310 1 262 1 311 2 2 1 213 1 117 1 318 1 53 1 4 1 95 1 223 1 323 1 96 1 8 2 194 1 227 1 230 1 126 1 356 1 234 1 132 2 256 2 261 1 48 1 337 1 
310 2 312 1 230 2 126 1 13 1 340 1 242 1 62 1 51 1 250 1 213 2 63 1 234 1 344 1 365 1 132 1 256 1 323 1 223 1 48 1 196 1 228 1 227 2 
310 1 262 1 311 2 160 1 2 1 213 1 53 1 365 1 35 1 4 1 95 1 223 1 323 1 96 1 194 1 249 1 227 1 126 1 230 1 175 1 250 1 234 1 132 1 256 1 337 1 48 1 
278 1 
136 1 340 1 242 2 244 5 344 1 54 1 296 1 297 1 193 4 55 1 350 1 195 2 196 1 145 1 199 1 351 1 148 1 15 1 17 2 252 2 305 1 307 1 358 2 206 2 107 1 257 1 108 1 29 1 361 1 65 1 209 1 316 2 216 1 217 2 33 5 163 2 221 2 323 2 223 2 170 1 274 1 226 1 228 1 327 1 125 6 126 2 280 1 281 2 234 1 45 2 128 1 286 2 46 3 183 1 48 1 
145 1 327 1 29 1 361 1 125 2 209 1 199 1 351 1 148 1 15 1 216 1 33 3 244 3 307 1 286 1 297 1 46 1 193 2 246 1 257 1 350 1 170 1 
361 1 29 1 209 1 216 1 33 3 244 3 297 1 193 3 246 1 170 1 350 1 327 1 145 1 125 1 351 1 199 1 148 1 15 1 281 1 305 1 45 1 307 1 46 1 257 1 
361 1 29 1 209 1 216 1 33 3 244 3 297 1 193 3 246 1 170 1 350 1 327 1 145 1 351 1 199 1 125 2 148 1 15 1 281 1 305 1 45 1 307 1 358 1 286 1 46 1 257 1 
90 1 136 1 244 5 296 1 54 1 297 1 193 6 348 1 246 1 350 1 145 1 351 1 199 1 148 1 14 1 15 1 17 2 252 2 202 1 305 5 307 1 358 4 206 2 257 1 29 1 361 1 65 1 209 1 216 1 316 1 33 5 217 2 163 1 221 2 367 1 170 1 226 1 327 1 125 7 281 5 45 4 286 4 46 3 183 1 
136 1 244 4 296 1 54 1 297 1 193 4 350 1 195 2 145 1 351 1 199 1 148 1 15 1 17 2 252 2 305 1 307 1 358 2 206 2 257 1 65 1 361 1 29 1 209 1 216 1 316 1 33 4 217 2 163 1 221 2 170 1 226 1 327 1 125 4 280 1 281 2 45 2 286 2 46 2 183 1 
65 1 361 1 29 1 209 1 136 1 316 1 216 1 217 2 33 4 244 4 163 1 54 1 296 1 297 1 221 2 193 4 367 1 170 1 350 1 226 1 327 1 145 1 125 4 351 1 199 1 148 1 14 1 15 1 17 2 252 2 281 1 202 1 305 1 45 2 307 1 286 2 358 2 46 2 206 2 183 1 257 1 
65 1 361 1 29 1 209 1 136 1 316 1 216 1 217 2 33 4 244 4 163 1 54 1 296 1 297 1 221 2 193 4 367 1 170 1 350 1 226 1 327 1 145 1 125 4 351 1 199 1 148 1 14 1 15 1 17 2 252 2 281 1 202 1 305 1 45 2 307 1 286 2 358 2 46 2 206 2 183 1 257 1 
361 1 29 1 209 1 136 1 316 1 216 1 33 4 244 4 163 1 320 1 54 1 296 1 297 1 221 2 193 4 170 1 350 1 195 2 226 1 327 1 145 1 277 1 125 4 351 1 199 1 148 1 127 1 15 1 281 1 179 2 202 1 305 1 45 2 377 2 307 1 286 2 358 2 46 2 206 2 183 1 257 1 
65 1 361 1 29 1 90 1 209 1 136 1 316 1 216 1 217 2 33 4 244 4 163 1 54 1 296 1 297 1 221 2 193 5 367 1 170 1 350 1 226 1 327 1 145 1 351 1 199 1 125 5 148 1 14 1 15 1 17 2 252 2 281 1 202 1 305 1 45 3 307 1 358 3 286 3 46 2 206 2 183 1 257 1 
65 1 361 1 29 1 90 1 209 1 136 1 316 1 216 1 217 2 33 4 244 4 163 1 54 1 296 1 297 1 221 2 193 5 367 1 170 1 350 1 226 1 327 1 145 1 351 1 199 1 125 5 148 1 14 1 15 1 17 2 252 2 281 1 202 1 305 1 45 3 307 1 358 3 286 3 46 2 206 2 183 1 257 1 
136 1 244 4 296 1 54 1 297 1 193 4 350 1 195 2 145 1 351 1 199 1 148 1 15 1 305 1 307 1 358 2 206 2 257 1 361 1 29 1 209 1 216 1 316 1 33 4 163 1 320 1 221 2 170 1 226 1 327 1 125 4 280 1 179 2 281 1 45 2 377 2 286 2 46 2 183 1 
210 1 75 1 114 1 61 1 314 2 266 1 149 1 138 1 180 1 190 1 52 1 282 1 116 1 34 1 220 2 21 1 181 3 106 1 166 3 133 1 299 1 184 2 47 1 260 2 100 6 27 1 
210 1 111 2 114 6 293 2 314 1 266 2 34 1 162 1 218 1 220 1 166 5 299 2 57 2 100 12 101 1 145 1 200 1 75 2 180 2 253 1 282 2 330 1 331 2 203 1 181 7 106 2 133 2 184 1 26 1 158 1 185 1 260 4 27 6 
210 1 340 1 242 1 30 1 266 1 216 1 364 1 218 1 220 1 347 1 166 1 299 1 223 1 323 1 273 1 247 1 100 2 196 1 326 1 199 2 147 1 172 1 126 1 75 1 15 2 16 1 180 1 253 1 104 1 234 1 20 1 181 1 285 1 106 1 133 1 260 2 158 1 48 1 
340 2 242 1 138 1 52 1 190 1 92 2 3 2 4 1 347 1 299 3 57 2 100 20 247 2 301 1 196 2 147 1 199 3 61 1 15 3 16 2 149 1 253 1 104 1 20 2 106 3 158 1 260 6 27 7 210 3 114 7 314 4 266 3 267 2 216 1 34 3 218 1 220 2 222 1 166 10 223 3 323 3 370 1 326 2 172 1 126 3 75 7 177 4 180 3 80 2 282 3 330 2 234 2 331 2 236 2 181 10 133 3 184 8 47 1 48 2 
338 2 210 2 137 1 340 3 313 1 242 2 266 2 216 1 344 1 218 1 4 1 322 1 347 1 166 1 299 2 223 8 323 8 100 2 42 1 228 1 196 2 146 1 199 1 147 1 126 7 15 1 180 2 104 1 234 2 375 1 21 1 181 1 106 2 155 1 133 2 287 1 260 4 158 1 48 2 
210 1 114 1 314 1 266 1 216 1 34 1 166 2 299 1 57 1 100 3 369 1 229 1 147 1 199 1 75 1 15 1 180 1 253 1 104 1 282 1 330 1 331 1 376 1 181 1 106 1 133 1 184 1 260 2 27 1 
210 1 177 1 75 1 114 1 266 1 180 1 215 1 282 1 331 1 21 1 181 2 106 1 133 1 299 1 184 1 260 2 100 2 27 1 
210 1 75 1 114 1 231 1 314 1 266 1 180 1 330 1 34 1 21 1 106 1 166 2 133 1 299 1 184 1 260 2 100 2 27 1 
210 1 114 2 266 1 314 1 34 1 166 2 299 1 57 1 100 4 75 2 177 1 180 1 282 1 330 1 331 1 21 1 181 2 106 1 133 1 184 2 260 2 27 2 
210 1 177 1 75 1 114 1 266 1 180 1 215 1 282 1 331 1 375 1 181 2 106 1 133 1 299 1 184 1 260 2 100 2 27 1 
210 1 75 1 114 1 231 1 314 1 266 1 180 1 330 1 34 1 375 1 106 1 166 2 133 1 299 1 184 1 260 2 100 2 27 1 
210 1 114 2 266 1 314 1 34 1 166 2 299 1 57 1 100 4 75 2 177 1 180 1 282 1 330 1 331 1 375 1 181 2 106 1 133 1 184 2 260 2 27 2 
210 1 114 2 266 1 314 1 34 1 166 2 299 1 57 1 100 4 75 2 177 1 180 1 282 1 330 1 331 1 181 2 106 1 133 1 184 2 260 2 27 2 
210 1 340 1 242 1 266 1 92 1 218 1 220 1 166 1 299 1 223 1 323 1 100 2 247 1 196 1 326 1 199 1 126 1 15 1 16 1 180 1 234 1 20 1 181 1 106 1 133 1 260 2 158 1 48 1 
135 1 292 1 210 1 340 1 242 1 266 1 218 1 220 1 166 1 299 1 223 1 323 1 100 2 196 1 199 1 126 1 15 1 16 1 180 1 234 1 20 1 181 1 83 1 106 1 133 1 260 2 158 1 48 1 
210 1 114 2 266 1 314 1 34 1 166 2 299 1 57 1 100 4 75 2 177 1 180 1 253 1 282 1 330 1 331 1 181 2 106 1 133 1 184 2 260 2 27 2 
210 1 137 1 340 1 114 2 314 1 266 1 34 1 92 1 3 1 166 2 299 1 223 1 323 1 57 1 100 4 247 1 196 1 326 1 199 1 126 1 177 1 75 2 15 1 16 1 180 1 282 1 330 1 331 1 234 1 20 1 181 2 106 1 133 1 184 2 260 2 27 2 48 1 
210 1 114 1 266 1 216 1 34 1 166 1 299 1 57 1 100 3 229 1 147 1 199 1 177 1 75 1 15 1 279 1 180 1 253 1 104 1 282 1 330 1 331 1 376 1 181 2 106 1 133 1 184 1 260 2 27 1 
187 1 111 3 212 1 293 2 314 3 266 2 34 3 118 1 93 1 166 13 299 2 57 3 248 1 100 25 302 1 174 1 177 2 77 1 233 1 201 2 180 2 282 3 330 3 331 3 203 1 130 1 181 12 23 2 106 2 184 5 25 4 260 4 
186 1 111 2 212 1 293 2 314 2 266 3 295 1 34 2 140 1 118 1 166 12 93 1 299 3 57 3 7 2 248 1 100 26 302 2 174 1 177 2 233 2 180 3 201 2 282 3 330 2 331 3 22 1 130 1 181 14 23 1 106 3 184 4 25 4 260 6 
186 1 187 1 111 4 212 1 293 3 314 4 266 3 138 1 52 1 190 1 295 1 34 5 140 1 118 1 93 1 166 21 245 1 299 3 57 4 7 1 248 1 100 41 302 1 174 1 177 3 61 1 233 2 149 1 201 3 180 3 282 5 330 4 331 4 203 1 22 1 130 1 181 20 23 1 106 3 184 7 47 1 25 4 260 6 
186 1 187 1 111 6 212 1 293 3 266 4 314 6 138 1 52 1 190 1 295 1 34 6 140 1 118 1 93 1 166 24 245 1 299 4 57 6 7 2 248 1 100 48 302 1 174 1 177 2 61 1 233 2 149 1 201 3 180 4 282 7 330 5 331 6 203 3 22 1 130 1 181 24 23 1 106 4 184 8 47 1 25 4 260 8 
186 1 111 4 212 1 293 3 314 8 266 2 138 3 52 3 190 3 295 1 34 9 140 1 118 1 93 1 166 27 299 2 57 6 7 1 248 1 100 57 302 1 174 1 200 1 177 5 61 3 233 1 149 3 201 2 180 2 282 9 330 6 331 6 203 2 22 1 130 1 181 30 23 1 106 2 184 13 47 3 25 4 260 4 
171 1 197 1 173 1 334 1 50 1 79 1 85 1 58 1 355 1 70 1 
232 1 374 1 
171 1 204 1 263 1 173 1 50 1 79 1 85 1 355 1 360 1 
171 1 197 1 173 1 50 1 281 1 79 1 355 1 33 1 70 1 244 1 191 1 73 1 36 2 269 1 298 1 85 1 58 1 64 1 
171 1 197 1 173 1 50 1 281 1 79 1 355 1 33 1 70 1 244 1 191 1 73 1 36 2 269 1 298 1 85 1 58 1 64 1 
171 1 197 1 173 1 50 1 281 1 79 1 355 1 33 1 70 1 244 1 191 1 73 1 36 2 269 1 298 1 85 1 58 1 64 1 
72 1 362 1 121 1 
72 1 362 1 121 1 
124 1 317 1 
72 1 124 1 317 1 
88 1 28 1 
67 1 50 1 216 2 33 1 244 1 220 1 191 1 345 1 36 1 298 1 171 1 11 1 199 2 173 1 147 2 15 2 232 1 374 1 79 1 355 1 254 1 104 2 335 1 85 1 258 1 88 1 28 1 
362 1 121 1 
72 1 124 1 317 1 
290 1 338 2 210 1 340 1 266 1 342 1 216 2 218 1 166 1 299 1 223 2 323 2 100 2 196 1 199 2 126 2 328 1 15 2 180 1 253 1 150 1 283 1 234 1 181 1 106 1 155 1 133 1 287 1 260 2 158 1 48 1 
262 1 311 2 126 2 137 1 251 1 234 1 53 1 219 1 4 1 95 1 96 1 323 2 223 2 194 1 337 1 48 1 275 1 249 1 227 1 
262 1 311 2 126 1 115 1 234 1 53 1 4 1 95 1 96 1 323 1 223 1 194 1 337 1 275 1 249 1 48 1 227 1 
126 1 340 1 242 1 251 1 62 1 234 1 344 1 323 1 223 1 272 1 48 1 196 1 227 1 228 1 
262 1 311 2 126 1 251 1 234 1 53 1 219 1 4 1 95 1 96 1 323 1 223 1 194 1 337 1 48 1 275 1 249 1 227 1 
308 1 
163 1 112 1 281 1 305 1 316 1 159 1 116 1 
65 1 136 1 316 1 217 1 33 1 244 1 163 1 296 1 226 1 195 1 125 1 17 1 252 1 281 2 305 1 46 1 183 1 
136 4 137 1 340 10 189 1 49 3 242 1 244 5 296 4 55 1 57 2 99 2 195 12 196 3 10 2 148 2 303 2 16 3 252 6 305 2 19 1 157 2 159 1 66 2 112 1 214 1 268 2 316 8 33 5 34 2 163 9 323 3 223 3 226 4 325 6 125 5 126 3 78 6 281 8 80 2 282 2 82 2 330 2 284 1 234 3 331 2 128 2 235 2 333 1 46 3 237 1 183 4 48 4 89 2 240 2 
325 1 136 1 174 1 111 1 293 1 78 1 252 1 281 1 201 1 316 1 163 1 296 1 183 1 226 1 195 2 
211 1 136 1 161 1 52 1 316 2 216 1 33 1 69 1 244 1 34 1 163 2 296 1 367 1 224 1 226 1 10 1 145 1 229 1 199 1 147 1 15 1 61 1 104 1 282 2 154 1 183 1 157 2 47 1 
136 1 112 1 281 1 305 1 316 1 163 1 296 1 183 1 159 1 226 1 
10 1 325 5 78 5 252 5 281 5 80 1 282 2 316 5 330 2 331 2 34 2 163 5 157 2 57 2 195 10 
125 1 46 1 281 1 305 1 33 1 244 1 
136 2 340 2 242 2 1 1 363 1 294 1 316 2 33 3 244 3 163 2 344 1 296 2 223 4 323 4 55 2 56 1 120 1 300 1 274 1 226 1 196 2 228 1 43 1 125 4 126 4 16 1 284 2 234 2 128 2 46 2 183 2 237 1 107 1 48 3 
210 1 340 1 242 1 266 1 161 1 216 2 92 1 220 1 74 1 166 1 299 1 223 1 323 1 100 1 247 1 196 1 326 1 229 2 199 3 147 2 126 1 15 3 16 1 180 1 104 2 234 1 20 1 106 1 133 1 158 1 260 2 48 1 
325 2 136 1 78 2 252 2 281 4 138 1 305 2 316 2 163 1 128 1 296 1 183 1 55 1 195 4 226 1 
110 1 79 1 355 1 
352 1 79 1 58 1 355 1 88 1 
110 1 79 1 355 1 
110 1 79 1 355 1 
79 1 259 1 355 1 
79 1 259 1 355 1 
79 1 259 1 355 1 
79 1 355 1 
171 1 173 1 
177 1 61 1 314 2 266 2 149 1 138 1 180 2 190 1 52 1 282 1 34 1 181 4 106 2 166 4 299 2 184 3 47 1 260 4 7 1 100 8 
61 1 314 2 149 1 138 1 190 1 52 1 282 1 116 1 34 1 181 3 166 3 184 2 47 1 100 6 
177 1 314 1 266 1 180 1 282 1 330 1 34 1 331 1 181 2 106 1 166 2 168 1 299 1 184 2 57 1 260 2 100 4 
181 1 111 1 166 1 293 1 201 1 100 2 
111 2 293 2 314 5 266 1 138 1 52 2 190 1 34 5 166 13 299 1 224 1 57 2 7 1 100 26 200 1 177 2 61 2 149 1 180 1 282 5 330 2 331 2 203 1 181 13 106 1 184 7 47 2 185 1 260 2 
111 1 166 1 100 1 
181 1 293 1 100 1 
177 1 266 1 314 2 180 1 80 1 282 1 330 1 331 1 34 1 181 3 106 1 166 3 299 1 168 1 184 3 57 1 260 2 100 6 
186 1 111 1 293 1 266 1 314 1 295 1 34 2 140 1 166 6 299 1 57 2 100 12 248 1 174 1 177 1 201 1 180 1 282 2 330 2 331 2 22 1 181 6 106 1 184 2 260 2 
177 1 61 1 314 1 52 1 282 1 34 1 181 3 166 3 184 2 47 1 100 6 
177 1 314 1 266 1 149 1 52 1 180 1 190 1 141 1 181 1 106 1 166 2 299 1 184 2 47 1 7 1 260 2 100 3 
177 2 61 1 266 1 314 3 180 1 52 2 282 2 34 2 181 5 106 1 166 5 299 1 224 1 184 5 47 2 260 2 248 1 100 10 
177 1 266 1 180 1 282 1 331 1 181 2 106 1 299 1 184 1 260 2 248 1 100 2 
177 1 314 1 266 1 180 1 282 1 330 1 34 1 331 1 181 2 106 1 166 2 299 1 184 2 57 1 260 2 248 1 100 4 
187 1 177 1 266 3 314 1 180 3 52 1 141 1 181 1 106 3 166 2 299 3 184 2 47 1 7 1 260 6 100 3 248 1 
187 1 111 1 293 1 266 4 314 3 243 1 190 1 52 2 34 2 141 1 166 8 168 1 299 4 224 1 7 1 248 1 100 15 177 3 61 1 149 1 201 1 180 4 282 2 181 7 106 4 184 6 47 2 260 8 
186 1 111 1 293 1 266 2 314 5 138 1 52 2 190 1 295 1 34 4 140 1 166 10 299 2 224 1 57 2 7 1 100 24 248 1 174 1 177 4 61 2 149 1 201 1 180 2 282 5 330 1 331 2 22 1 181 14 106 2 184 9 47 2 260 4 
186 1 111 1 293 1 266 3 314 3 138 1 52 1 190 1 295 1 34 2 140 1 166 7 299 3 168 1 57 2 7 1 100 17 248 1 174 1 177 1 61 1 149 1 201 1 180 3 282 3 330 1 331 2 22 1 181 10 106 3 184 4 47 1 260 6 
186 1 111 1 293 1 266 3 314 3 138 1 52 1 190 1 295 1 34 3 140 1 166 10 168 1 299 3 57 2 7 1 100 19 248 1 174 1 177 1 61 1 149 1 201 1 180 3 282 3 330 2 331 2 22 1 181 9 106 3 184 4 47 1 260 6 
186 1 111 1 293 1 266 3 314 3 138 1 52 1 190 1 295 1 34 2 140 1 166 7 168 1 299 3 57 2 7 1 100 17 248 1 174 1 177 2 61 1 149 1 201 1 180 3 282 3 330 1 331 2 22 1 181 10 106 3 184 5 47 1 260 6 
186 1 111 1 293 1 266 2 314 5 138 1 52 2 190 1 295 1 34 4 140 1 166 10 299 2 224 1 57 2 7 1 100 24 248 1 174 1 177 4 61 2 149 1 201 1 180 2 282 5 330 1 331 2 22 1 181 14 106 2 184 9 47 2 260 4 
186 1 111 1 293 1 266 1 314 1 295 1 34 2 140 1 166 6 299 1 57 2 100 12 248 1 174 1 177 1 201 1 180 1 282 2 330 2 331 2 22 1 181 6 106 1 184 2 260 2 
186 1 111 1 293 1 266 4 314 3 138 1 52 1 190 1 295 1 34 2 140 1 166 8 168 1 299 4 57 2 7 2 100 18 248 1 174 1 177 2 61 1 149 1 201 1 180 4 282 3 330 1 331 2 22 1 181 10 106 4 184 5 47 1 260 8 
186 1 187 1 111 1 293 1 266 4 314 3 295 1 34 2 140 1 166 7 299 4 57 3 7 2 100 16 248 1 174 1 177 3 201 1 180 4 282 3 330 2 331 3 22 1 181 9 106 4 184 6 260 8 
177 3 61 1 314 3 149 2 190 1 52 3 282 1 34 1 181 3 166 4 184 6 47 3 100 7 
186 1 187 1 111 1 293 1 266 4 314 3 138 1 52 1 190 1 295 1 34 2 140 1 166 8 299 4 57 2 7 2 100 18 248 1 174 1 177 1 61 1 149 1 201 1 180 4 282 3 330 1 331 2 22 1 181 10 106 4 184 4 47 1 260 8 
361 1 276 1 220 1 199 1 15 1 169 1 216 1 
9 1 276 1 361 1 199 1 15 1 216 1 220 1 37 1 321 1 270 1 349 1 169 1 
344 1 126 1 340 1 242 1 223 1 323 1 48 1 116 1 234 1 196 1 228 1 
147 1 199 2 126 1 340 1 15 2 242 1 16 1 104 1 216 1 234 1 20 1 220 1 347 1 323 1 223 1 247 1 48 1 196 1 
145 1 327 1 147 2 199 2 126 1 303 1 340 3 15 2 16 2 104 1 268 1 216 2 284 1 234 1 20 1 220 1 307 1 347 1 323 1 223 1 247 1 48 1 196 2 
340 3 216 2 268 1 220 1 347 1 6 1 223 2 323 2 196 2 327 1 145 1 199 2 147 2 126 2 303 1 15 2 16 2 104 1 234 1 284 1 20 1 307 1 83 1 48 1 
340 4 49 1 242 1 268 1 33 2 244 2 192 1 6 1 223 3 323 3 99 1 196 1 125 1 126 3 148 1 303 1 16 1 354 1 281 1 305 1 234 1 284 1 48 1 
66 1 125 1 148 1 126 3 303 1 340 4 242 1 49 1 16 1 281 1 305 1 268 1 33 2 244 2 284 1 234 1 6 1 323 3 223 3 99 1 48 1 196 1 
126 1 322 1 223 1 323 1 48 1 234 1 
43 1 338 1 146 1 126 6 137 1 340 3 313 1 242 2 16 1 214 1 234 2 4 1 322 1 155 1 323 7 223 7 56 1 109 1 48 3 42 1 196 2 
210 2 340 1 137 1 114 1 314 2 266 2 138 1 52 1 190 1 216 1 34 1 92 1 220 2 3 1 166 3 347 1 299 2 323 1 223 1 100 6 247 1 196 1 326 1 199 2 147 1 126 1 75 1 61 1 15 2 16 1 149 1 180 2 253 1 104 1 282 1 283 1 234 1 20 1 181 3 236 1 106 2 133 2 184 2 47 1 260 4 27 1 48 1 
66 1 136 2 340 2 112 1 242 1 67 1 49 1 316 1 33 3 244 3 163 1 296 2 323 1 223 1 99 1 226 2 125 2 126 1 148 1 281 1 305 1 82 1 235 1 46 1 183 2 237 1 159 1 89 1 
126 2 137 1 340 2 16 1 19 1 214 1 234 1 322 1 323 2 223 2 99 1 48 2 196 1 
126 4 137 1 340 1 242 1 234 1 344 1 6 1 323 4 223 4 38 1 48 1 228 1 196 1 
43 1 126 2 340 1 1 1 16 1 284 1 234 1 323 2 223 2 56 1 120 1 48 2 370 1 196 1 
311 1 126 1 242 1 95 1 96 1 223 1 323 1 194 1 48 1 234 1 
126 2 4 1 340 1 328 1 137 1 155 1 223 2 323 2 48 1 234 1 196 1 
146 1 126 4 137 1 340 3 242 1 284 1 234 2 344 1 155 1 323 5 223 5 38 1 48 2 228 1 196 2 42 1 
289 1 126 4 137 1 340 3 242 1 284 1 234 2 344 1 155 1 323 5 223 5 38 1 48 2 228 1 196 2 42 1 
147 1 199 2 126 1 340 1 15 2 242 1 16 1 104 1 216 1 234 1 20 1 220 1 83 1 347 1 323 1 223 1 48 1 196 1 
43 1 126 1 340 1 16 1 214 1 284 1 234 1 323 1 223 1 56 1 109 1 48 2 196 1 
220 1 346 1 167 1 86 1 368 1 
145 1 327 1 339 1 351 1 148 1 264 1 67 1 281 1 103 1 305 1 33 2 244 2 220 1 307 1 346 2 167 2 368 1 86 2 239 1 
290 1 199 1 15 1 167 1 342 1 150 1 216 1 368 1 86 1 
339 1 264 1 368 1 
261 1 117 1 116 1 318 1 
365 1 132 1 256 1 250 1 261 1 117 1 318 1 
230 1 256 1 213 1 
241 1 250 1 117 1 318 1 255 2 35 1 365 1 132 3 256 3 24 1 98 1 261 1 
365 1 132 2 256 2 250 1 261 1 8 1 122 1 117 1 318 1 
153 1 311 1 365 1 35 1 132 1 256 1 250 1 194 1 337 1 318 1 123 1 
365 1 35 1 132 1 256 1 250 1 261 1 318 1 
365 1 35 1 132 1 256 1 250 1 261 2 117 1 
134 1 0 1 250 2 318 1 35 1 365 2 132 2 256 2 207 1 261 1 
371 1 250 1 117 1 318 2 153 1 35 1 365 1 132 3 256 3 261 1 40 1 225 1 8 2 
311 2 373 1 250 1 117 1 318 1 53 1 35 1 365 1 132 2 256 2 96 1 261 1 194 1 8 1 337 1 
371 1 60 1 250 2 117 1 318 2 153 1 35 1 365 2 132 4 256 4 261 1 8 2 122 1 
365 1 35 1 132 1 256 1 250 1 261 1 117 1 318 1 
371 1 241 1 250 1 117 2 318 3 153 1 255 1 365 1 132 4 256 4 24 1 261 2 8 2 208 1 
250 1 117 1 318 1 35 1 365 1 132 2 309 1 256 2 261 1 39 1 8 1 144 1 
255 2 365 1 35 1 132 3 241 1 256 3 250 1 24 2 261 1 32 1 117 1 318 1 
378 1 143 1 178 2 318 2 
365 1 35 1 132 1 256 1 250 1 288 1 
365 1 35 1 132 2 256 2 250 1 261 1 8 1 225 1 117 1 318 1 
182 1 
365 1 35 1 132 1 256 1 250 1 261 1 117 1 318 1 
250 1 117 1 318 1 255 1 35 1 365 1 132 3 256 3 8 1 261 1 225 1 
153 1 371 1 208 1 318 1 
261 1 318 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (69,326) (69,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (69,326) (69,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (69,326) (69,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (69,326) (69,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 101 173 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 101 173 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (25,50,63) (187,342,344) (187,342,344) (187,342,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (25,50,63) (187,342,344) (187,342,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (25,50,63) (187,342,344) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (25,50,63) (187,342,344) (187,342,344) (187,342,344) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (25,50,63) (25,50,63) (25,50,63) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (25,50,63) (25,50,63) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (25,50,63) (25,50,63) (25,50,63) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
131 1 171 1 91 1 326 1 293 1 181 1 94 1 69 1 12 1 61 1 272 1 258 1 
131 1 171 1 91 1 326 1 293 1 181 1 94 1 69 1 12 1 61 1 272 1 258 1 
131 1 171 1 91 1 326 1 293 1 181 1 94 1 69 1 12 1 61 1 272 1 258 1 
131 1 171 1 91 1 326 1 293 1 181 1 94 1 69 1 12 1 61 1 272 1 258 1 
138 1 91 1 71 1 122 1 293 2 290 1 101 1 94 1 108 1 12 1 272 2 258 1 
303 1 122 1 293 2 181 1 356 1 27 1 39 1 171 1 112 1 360 1 288 1 94 1 12 1 258 1 272 2 259 1 
138 1 112 1 303 1 122 2 306 1 293 3 181 1 94 2 108 1 12 1 236 1 272 3 258 2 
302 1 138 3 71 1 122 3 306 2 293 7 59 1 181 1 108 5 236 1 91 1 359 1 290 1 101 1 94 2 12 1 258 2 272 7 173 1 
302 1 138 3 71 1 122 3 306 2 293 7 59 1 181 1 108 5 236 1 91 1 359 1 290 1 101 1 94 2 12 1 258 2 272 7 173 1 
34 1 341 1 85 1 
34 1 242 1 4 2 
154 2 1 2 125 2 283 2 305 1 38 1 77 2 195 2 
1 2 119 1 217 1 121 1 305 1 219 2 281 1 77 3 195 2 145 1 9 1 125 2 283 3 365 1 351 1 352 1 128 1 81 1 154 2 155 1 13 1 57 1 84 1 178 2 180 1 373 2 38 1 340 1 357 1 17 1 378 1 113 1 95 1 381 2 329 1 301 1 114 2 
154 1 1 1 125 1 283 1 305 1 307 1 213 1 316 1 77 1 195 1 
245 1 34 1 1 1 166 1 207 1 77 1 341 1 16 1 54 1 283 1 18 1 146 1 213 1 367 1 
245 1 34 1 154 1 1 1 166 1 207 2 77 1 195 1 341 1 125 1 54 1 283 1 146 1 213 1 367 2 
261 1 276 1 338 1 207 1 367 1 
0 1 34 1 341 1 261 1 269 1 338 1 207 2 367 2 
261 1 207 1 367 1 
154 1 1 1 305 1 338 1 307 1 104 1 207 1 77 1 195 1 125 1 283 1 213 1 316 1 367 1 
34 1 
34 1 341 1 141 1 261 1 269 1 338 1 207 2 367 2 
273 1 80 1 274 2 34 1 263 1 261 2 98 1 321 2 338 2 207 5 235 2 123 1 220 1 6 1 341 1 269 1 19 1 55 1 367 5 
375 1 154 1 1 3 125 3 283 3 38 1 77 3 195 3 
1 1 125 1 283 1 213 1 316 1 77 1 195 1 
154 1 1 1 125 1 283 1 213 1 167 1 99 1 77 1 195 1 
245 1 1 3 119 1 217 1 121 1 166 1 305 1 219 2 281 1 167 1 77 4 195 3 145 1 144 1 9 1 54 1 125 3 365 1 283 4 146 1 351 1 367 1 352 1 128 1 81 1 154 2 155 1 13 1 57 1 178 1 105 1 207 1 373 1 38 1 340 1 375 1 17 1 378 1 41 1 213 1 329 1 381 1 301 1 114 1 
375 1 1 2 125 1 283 2 18 1 257 1 38 1 77 2 195 1 
245 1 34 1 154 1 1 3 166 1 322 1 207 1 167 1 77 3 195 3 375 2 144 1 125 3 54 1 283 3 146 1 41 1 213 1 367 1 
375 1 154 1 1 2 125 2 283 2 190 1 167 1 183 1 77 2 195 2 
352 1 81 1 128 1 217 1 178 1 38 1 77 1 340 1 9 1 378 1 283 1 365 1 381 1 329 1 114 1 
352 1 81 1 128 1 217 1 178 1 38 1 77 1 340 1 196 1 282 1 9 1 378 1 283 1 381 1 114 1 
119 2 121 1 219 2 248 1 333 1 310 1 124 1 145 1 200 1 351 1 202 1 13 1 57 1 204 1 234 1 373 4 183 2 211 1 17 1 190 2 135 2 95 2 299 1 42 1 
245 1 1 1 125 1 283 1 32 1 213 1 77 1 195 1 
352 1 128 1 81 1 1 1 217 1 178 1 183 1 340 1 77 2 195 1 375 1 144 1 9 1 378 1 125 1 365 1 283 2 381 1 329 1 114 1 
85 1 38 1 
154 1 1 2 167 1 99 1 77 2 38 2 195 1 125 1 283 2 
190 1 135 1 183 1 
352 1 128 1 81 1 217 1 178 1 38 1 77 1 76 1 340 1 9 1 378 1 283 1 365 1 381 1 329 1 114 1 
154 1 369 1 1 4 339 1 167 1 77 4 38 1 195 4 375 2 144 1 125 4 283 4 213 1 136 1 
1 2 125 2 283 2 32 1 213 1 316 1 77 2 195 2 
186 1 127 1 243 1 
186 1 127 1 243 1 
8 1 127 1 243 1 
8 1 127 1 243 1 
8 1 127 1 243 1 
127 1 243 1 
127 1 243 1 
45 1 372 1 
45 1 372 1 
45 1 372 1 
186 1 127 1 243 1 
199 1 127 1 243 1 
45 1 53 1 370 1 372 1 127 2 243 2 
117 1 34 1 35 2 3 3 58 1 277 2 323 2 207 2 332 1 184 1 110 1 157 2 268 2 53 1 254 1 159 1 243 2 127 2 367 2 
117 1 140 1 1 2 3 1 277 1 280 1 77 2 195 2 251 1 125 2 283 2 253 1 199 1 127 1 102 1 367 1 35 1 323 1 207 1 38 1 268 1 161 1 243 1 165 1 
91 1 
288 1 27 1 259 1 
91 2 163 1 27 1 259 1 
374 1 343 1 174 1 91 1 24 1 27 1 259 1 
374 1 343 2 174 1 91 1 27 1 259 1 
273 2 274 1 140 1 49 2 218 2 333 1 4 3 123 3 6 1 253 1 31 1 102 1 367 5 202 1 34 2 228 1 261 1 321 1 204 1 353 1 338 4 207 5 208 1 235 1 87 2 341 1 211 1 188 1 269 1 242 1 162 1 96 1 
273 6 274 2 216 1 246 1 140 4 49 6 276 5 218 6 279 5 333 3 4 9 5 1 123 8 6 1 31 1 225 1 367 9 80 1 202 3 34 5 319 1 228 2 261 6 321 2 204 3 338 7 207 9 208 3 235 2 341 1 211 3 269 1 242 3 162 2 214 1 
274 1 273 2 140 1 49 2 218 2 333 1 4 4 123 3 367 3 80 1 34 3 202 1 228 1 321 1 353 1 204 1 338 2 207 3 208 1 235 1 87 1 341 1 211 1 188 1 242 2 162 1 
274 1 273 4 246 1 140 2 49 4 218 4 333 2 4 7 123 5 367 4 80 1 34 4 202 2 319 1 228 1 321 1 353 1 204 2 338 3 207 4 208 2 235 1 87 2 341 1 211 2 188 1 242 3 162 1 214 1 
128 1 217 1 
128 3 189 2 378 1 217 1 287 1 361 1 
128 1 189 1 85 1 
128 1 334 1 
308 1 
128 1 378 1 217 1 
128 1 56 1 
202 1 304 1 119 3 230 1 347 1 248 3 234 2 107 1 373 7 333 1 52 1 376 1 210 1 11 2 358 1 95 4 317 1 
202 1 304 1 119 3 230 1 347 1 248 3 234 2 107 1 373 7 333 1 52 1 376 1 210 1 11 2 358 1 95 4 317 1 
215 1 202 1 304 1 119 3 230 1 347 1 248 3 234 2 107 1 373 7 333 1 52 1 376 1 210 1 11 2 358 1 95 4 317 1 
363 1 304 1 119 17 121 1 347 3 219 2 248 13 52 1 333 5 10 1 11 1 366 4 33 1 150 1 317 7 351 1 202 5 153 1 230 3 13 1 175 1 57 1 204 3 106 1 107 2 208 3 234 6 373 34 376 2 210 1 211 3 267 1 358 1 380 3 95 17 
304 1 119 4 121 2 347 1 219 4 248 4 333 1 52 1 11 2 79 1 150 1 317 1 351 2 202 1 13 2 230 1 57 2 107 1 234 3 373 9 264 1 376 1 358 1 95 5 
344 1 192 1 97 1 25 1 74 1 27 1 9 1 12 1 258 1 259 1 262 1 178 1 293 1 181 1 340 1 342 1 91 1 187 1 66 1 212 1 381 1 94 1 163 1 114 1 272 1 
344 1 192 1 97 1 25 1 74 1 168 1 27 1 9 1 148 1 258 1 259 1 178 1 293 2 181 1 354 1 108 1 340 1 342 1 91 1 66 1 212 1 381 1 94 1 163 1 114 1 272 2 
192 1 344 1 97 1 25 1 293 1 178 1 354 1 181 1 74 1 108 1 168 1 340 1 27 1 91 1 9 1 66 1 381 1 163 1 259 1 272 1 114 1 
128 1 81 1 368 1 97 2 129 1 217 1 348 1 293 1 178 1 181 2 74 2 340 1 239 1 9 1 66 2 148 1 149 1 94 1 381 1 298 1 258 1 272 1 114 1 
344 1 192 1 97 1 25 1 74 1 168 1 27 1 9 1 12 1 258 1 259 1 178 1 293 1 181 1 340 1 342 1 91 1 187 1 66 1 212 1 381 1 94 1 163 1 114 1 272 1 
335 1 
245 1 1 1 4 2 6 1 9 1 54 1 312 2 147 2 146 1 261 6 321 1 206 1 207 5 62 2 209 2 16 1 269 3 18 1 162 1 213 1 271 2 116 1 114 2 115 1 273 2 274 1 217 1 166 1 77 1 123 2 169 1 28 1 222 1 78 2 283 1 367 5 34 2 81 2 128 1 292 1 231 1 178 2 130 1 235 1 340 1 132 1 341 1 89 2 90 1 239 1 379 1 242 2 381 2 298 1 297 4 
245 1 141 1 1 1 261 2 166 1 292 1 231 1 207 3 77 1 28 1 89 1 222 1 16 1 54 1 269 1 283 1 146 1 379 1 18 1 213 1 297 2 367 3 
245 1 34 1 141 1 1 1 261 1 166 1 292 1 231 1 207 3 77 1 28 1 341 1 62 1 222 1 16 1 54 1 269 1 283 1 146 1 379 1 18 1 213 1 297 3 367 3 
245 1 141 1 1 1 166 1 77 1 28 1 222 1 54 1 283 1 146 1 147 1 367 3 34 1 261 2 292 1 231 1 207 3 16 1 89 1 62 1 341 1 269 1 18 1 379 1 213 1 297 3 
273 1 274 1 245 1 141 1 1 1 2 1 166 1 77 1 123 1 6 1 28 1 222 1 78 2 223 1 54 1 312 2 283 1 146 1 147 4 367 5 34 5 261 7 321 1 292 1 231 1 207 5 130 1 235 1 132 1 209 2 15 1 341 5 62 4 16 1 89 4 269 3 18 1 379 1 242 2 327 1 213 1 271 2 191 1 297 6 
245 1 1 1 4 2 6 1 54 1 312 2 146 1 147 2 261 4 321 1 207 4 16 1 209 2 62 2 269 2 18 1 213 1 271 2 274 1 273 1 166 1 77 1 123 1 28 1 222 1 78 2 283 1 367 4 34 2 292 1 231 1 130 1 235 1 132 1 89 2 341 1 90 1 379 1 242 2 297 4 
273 1 245 1 274 1 1 1 166 1 77 1 123 1 28 1 6 1 222 1 78 2 223 1 54 1 312 2 283 1 147 2 146 1 367 4 34 1 261 4 321 1 292 1 231 1 207 4 130 1 235 1 132 1 341 1 62 2 89 2 209 2 16 1 269 2 18 1 379 1 242 2 213 1 327 1 271 2 297 4 191 1 
273 1 245 1 274 1 1 1 166 1 77 1 123 1 28 1 6 1 222 1 78 2 223 1 54 1 312 2 283 1 147 2 146 1 367 4 34 1 261 4 321 1 292 1 231 1 207 4 130 1 235 1 132 1 341 1 62 2 89 2 209 2 16 1 269 2 18 1 379 1 242 2 213 1 327 1 271 2 297 4 191 1 
273 1 245 1 274 1 1 1 166 1 4 2 77 1 123 1 28 1 6 1 222 1 223 1 54 1 198 1 283 1 147 2 146 1 367 4 34 1 261 4 103 1 36 1 321 1 292 1 231 1 207 4 130 1 235 1 341 1 62 2 89 2 209 2 16 1 64 2 240 2 269 2 18 1 379 1 213 1 271 2 297 4 
273 1 274 1 245 1 1 1 166 1 77 1 123 1 6 1 28 1 222 1 78 2 223 1 54 1 312 2 283 1 146 1 147 3 367 4 34 1 261 5 321 1 292 1 231 1 207 4 130 1 235 1 132 1 341 1 209 2 16 1 15 1 89 3 62 3 269 2 18 1 379 1 242 2 327 1 213 1 271 2 297 5 191 1 
273 1 274 1 245 1 1 1 166 1 77 1 123 1 6 1 28 1 222 1 78 2 223 1 54 1 312 2 283 1 146 1 147 3 367 4 34 1 261 5 321 1 292 1 231 1 207 4 130 1 235 1 132 1 341 1 209 2 16 1 15 1 89 3 62 3 269 2 18 1 379 1 242 2 327 1 213 1 271 2 297 5 191 1 
273 1 274 1 245 1 1 1 166 1 4 2 77 1 123 1 6 1 28 1 222 1 54 1 283 1 147 2 146 1 367 4 34 1 261 4 103 1 321 1 292 1 231 1 207 4 130 1 235 1 341 1 62 2 89 2 209 2 16 1 90 1 64 2 240 2 269 2 379 1 18 1 213 1 271 2 297 4 
202 1 13 1 57 1 121 1 204 1 219 2 248 1 183 1 373 2 124 1 145 1 17 1 190 1 135 1 95 2 317 1 351 1 42 1 
13 1 119 2 57 1 121 1 219 2 248 1 234 1 183 1 373 2 333 1 124 1 145 1 211 1 17 1 190 1 135 1 351 1 299 1 
119 2 121 1 219 2 248 2 333 1 124 1 145 1 317 1 351 1 202 1 13 1 57 1 204 1 208 1 234 1 373 4 183 2 211 1 17 1 190 2 135 2 95 2 
202 1 13 1 57 1 121 1 204 1 219 2 248 1 183 1 373 2 145 1 17 1 285 1 190 1 135 1 95 2 317 1 351 1 42 1 
13 1 119 2 57 1 121 1 219 2 248 1 234 1 183 1 373 2 333 1 145 1 211 1 17 1 285 1 190 1 135 1 351 1 299 1 
119 2 121 1 219 2 248 2 333 1 145 1 285 1 317 1 351 1 202 1 13 1 57 1 204 1 208 1 234 1 373 4 183 2 211 1 17 1 190 2 135 2 95 2 
119 2 121 1 219 2 248 2 333 1 145 1 317 1 351 1 202 1 13 1 57 1 204 1 208 1 234 1 373 4 183 2 211 1 17 1 190 2 135 2 95 2 
217 1 119 1 121 1 219 2 281 1 77 1 145 1 9 1 365 1 283 1 351 1 352 1 81 1 128 1 155 1 13 1 57 1 84 1 178 1 373 2 38 1 340 1 17 1 378 1 95 1 329 1 381 1 114 1 
217 1 119 1 121 1 219 2 77 1 196 1 145 1 282 1 9 1 283 1 351 1 352 1 152 1 81 1 128 1 155 1 13 1 57 1 84 1 178 1 373 2 38 1 340 1 17 1 378 1 95 1 381 1 114 1 
119 2 121 1 219 2 248 2 250 1 333 1 145 1 317 1 351 1 202 1 13 1 57 1 204 1 208 1 234 1 373 4 183 2 211 1 17 1 190 2 135 2 95 2 
119 2 217 1 121 1 219 2 248 2 281 1 333 1 77 1 145 1 9 1 365 1 283 1 317 1 351 1 352 1 202 1 128 1 262 1 13 1 57 1 204 1 178 1 234 1 208 1 183 2 373 4 340 1 158 1 211 1 17 1 378 1 190 2 135 2 95 2 329 1 381 1 114 1 
1 1 119 1 121 1 219 2 248 1 167 1 333 1 250 1 77 1 195 1 145 1 125 1 283 1 317 1 351 1 202 1 154 1 13 1 57 1 203 1 204 1 208 1 373 3 183 1 211 1 17 1 190 1 135 1 95 2 
304 1 119 3 121 1 347 1 219 2 248 2 52 1 333 1 124 1 145 1 11 1 351 1 202 1 13 1 230 1 57 1 85 1 234 2 183 1 373 6 38 2 17 1 190 1 358 1 135 1 95 3 
119 6 121 2 219 4 248 2 250 1 333 1 145 1 366 3 315 1 317 1 351 2 318 1 202 2 155 1 229 1 13 2 57 2 84 1 204 2 106 1 234 1 208 2 373 14 183 11 38 1 88 1 211 1 17 2 267 1 190 4 135 11 380 3 95 8 
118 1 1 1 217 1 119 1 121 1 219 2 76 1 250 1 77 2 195 1 145 1 144 1 9 1 125 1 365 1 283 2 351 1 352 1 128 1 81 1 155 1 13 1 57 1 84 1 178 1 182 1 373 2 60 1 38 1 340 1 375 1 17 1 378 1 190 1 329 1 381 1 95 1 114 1 
304 1 1 1 346 2 347 1 248 8 52 1 250 1 195 1 144 1 145 3 9 2 11 1 317 4 351 3 352 2 202 3 155 1 320 1 13 3 57 3 204 2 208 2 158 2 211 2 17 3 358 1 329 2 114 3 364 1 119 10 217 2 121 3 219 6 281 2 168 1 333 3 75 1 77 3 125 1 283 3 365 2 81 1 128 2 230 1 84 1 178 3 179 2 234 4 373 20 183 7 38 2 340 2 375 1 237 2 378 2 190 7 135 7 381 3 95 10 
1 1 119 1 217 2 121 2 219 4 143 1 168 1 77 1 221 1 195 1 124 1 145 2 9 2 125 1 283 1 285 1 260 1 351 2 128 3 81 2 155 1 262 1 13 2 57 2 84 1 178 7 233 1 373 2 340 2 375 1 239 1 17 2 134 1 113 2 381 8 95 1 20 1 298 1 114 8 
1 1 119 2 121 1 219 2 248 1 167 1 250 1 77 1 333 1 195 1 145 1 125 1 283 1 351 1 202 1 154 1 13 1 57 1 204 1 232 1 234 1 208 1 183 1 373 3 211 1 17 1 190 1 135 1 95 1 
43 1 275 2 70 1 304 1 119 21 121 3 347 1 247 1 26 4 219 6 248 8 52 1 333 5 29 1 350 1 252 1 11 1 311 1 284 1 366 4 150 1 317 4 351 3 291 1 202 5 82 1 156 1 230 1 13 3 176 1 57 3 204 4 234 4 106 3 208 4 373 41 264 1 211 4 267 1 358 1 380 3 95 20 164 1 
43 1 275 2 70 1 304 1 119 18 121 4 347 1 247 1 26 4 219 8 248 7 52 1 333 4 29 1 350 1 252 1 11 1 311 1 284 1 366 4 150 2 317 3 351 4 291 1 202 5 82 1 156 1 230 1 13 4 176 1 57 4 204 4 234 4 106 3 208 4 373 38 264 1 211 3 267 1 358 1 380 3 95 20 164 1 
43 1 275 1 70 1 304 1 119 25 121 2 347 1 247 1 26 4 219 4 248 14 52 1 333 8 29 1 350 1 252 1 11 1 311 1 284 1 366 4 150 1 317 7 351 2 202 8 82 1 156 1 230 1 13 2 176 1 57 2 204 7 234 7 106 2 208 7 373 52 88 2 264 1 211 7 267 2 358 1 380 4 95 27 
275 1 70 1 119 10 121 2 247 1 26 2 219 4 248 6 333 3 252 1 366 2 317 3 351 2 291 1 202 3 82 1 156 2 13 2 57 2 204 3 234 3 106 1 208 3 373 19 264 1 111 1 211 3 267 1 380 1 95 9 
43 1 275 2 70 1 119 12 121 3 247 1 26 4 219 6 248 4 333 2 29 1 350 1 252 2 311 1 284 1 366 2 150 2 317 2 351 3 202 3 82 1 156 1 13 3 57 3 176 1 204 3 234 2 106 2 208 3 373 26 264 1 211 2 95 14 380 2 
117 1 34 1 35 1 3 2 58 1 277 1 323 1 207 1 184 1 110 1 157 1 268 1 53 1 254 1 159 1 243 1 127 1 367 1 
117 1 34 1 35 1 3 2 58 1 277 1 323 1 207 1 184 1 110 1 157 1 268 1 53 1 254 1 159 1 243 1 127 1 367 1 
117 1 34 1 35 1 3 2 58 1 277 1 323 1 207 1 184 1 110 1 157 1 268 1 53 1 254 1 159 1 243 1 127 1 367 1 
186 1 370 1 201 1 
186 1 370 1 201 1 
336 1 8 1 
336 1 8 1 370 1 
161 1 280 1 
47 1 140 1 1 2 3 1 277 1 280 1 77 2 195 2 251 1 125 2 283 2 253 1 199 1 127 1 102 1 367 1 35 1 338 1 323 1 207 1 38 1 157 1 268 1 159 1 161 1 243 1 165 1 
110 1 268 1 53 1 35 1 254 1 255 1 277 1 323 1 127 1 243 1 
199 1 165 1 
7 1 268 1 35 1 37 1 277 1 323 1 73 1 127 1 243 1 
186 1 201 1 
336 1 8 1 370 1 
1 2 217 1 119 1 121 1 219 2 331 1 249 1 250 1 77 2 145 1 9 1 172 1 283 2 313 1 260 1 351 1 128 1 155 1 13 1 57 1 84 1 233 1 178 2 373 2 340 1 17 1 93 1 113 2 381 2 95 1 114 2 
192 1 262 1 50 1 25 1 178 2 74 1 168 1 340 1 27 1 63 1 91 1 9 1 212 1 160 1 381 2 163 1 259 1 114 2 
192 1 50 1 25 1 178 1 74 1 168 1 340 1 27 1 91 1 9 1 212 1 296 1 381 1 163 1 259 1 114 1 
128 1 81 1 129 1 217 1 178 1 74 1 340 1 239 1 9 1 160 1 381 1 382 1 298 1 114 1 
192 1 50 1 25 1 178 1 74 1 168 1 340 1 27 1 63 1 91 1 9 1 212 1 160 1 381 1 163 1 259 1 114 1 
256 1 
273 1 34 1 341 1 98 1 85 1 55 1 123 1 
273 1 274 1 4 1 123 1 6 1 78 1 312 1 367 1 34 2 261 1 321 1 207 1 235 1 132 1 341 1 269 1 242 1 
273 3 274 2 139 1 346 1 49 3 217 1 218 3 333 1 4 6 123 4 100 1 170 1 6 2 9 1 334 2 367 1 202 1 34 3 81 1 128 3 261 1 371 1 321 2 204 1 178 1 207 1 208 1 235 2 340 2 211 1 325 1 377 1 378 1 65 1 40 1 269 1 242 3 162 1 361 1 381 1 114 1 
274 2 273 5 139 2 194 1 49 5 218 5 4 6 333 2 123 8 6 2 29 1 350 1 311 1 286 1 284 1 366 1 289 1 367 1 34 5 202 2 261 1 176 1 321 2 204 2 207 1 106 1 208 2 235 2 341 2 211 2 269 1 242 3 162 1 380 1 116 1 
274 1 273 2 363 1 139 2 1 1 347 1 305 1 307 1 77 1 333 1 123 2 195 1 6 1 125 1 283 1 286 1 316 1 367 1 202 2 154 1 230 1 321 1 104 1 207 1 235 1 358 1 213 1 327 1 
274 1 273 1 34 1 98 1 321 1 235 1 123 1 6 1 341 1 55 1 
273 5 202 2 34 5 139 2 346 1 49 5 204 2 218 5 208 2 4 10 333 2 123 5 211 2 286 1 242 5 
34 1 341 1 261 1 269 1 207 1 367 1 
274 2 273 2 217 1 123 2 169 1 6 1 9 1 224 2 226 1 367 3 80 1 128 1 81 2 261 4 321 2 178 4 207 3 235 2 340 1 133 1 239 1 269 2 162 2 381 4 362 1 298 1 115 1 114 4 116 2 
1 2 119 1 217 1 121 1 305 1 219 2 281 1 77 3 195 2 145 1 9 1 125 2 283 3 365 1 351 1 352 1 81 1 128 1 154 2 155 1 13 1 57 1 178 1 373 1 38 1 340 1 17 1 378 1 381 1 329 1 114 1 301 1 
273 2 274 1 34 4 49 2 321 1 218 2 235 1 4 4 123 1 6 1 341 2 11 1 242 2 162 1 116 1 
44 1 268 1 35 1 
44 1 268 1 35 1 
268 1 35 1 83 1 
268 1 35 1 83 1 
268 1 35 1 83 1 
268 1 35 1 
127 1 243 1 
44 1 268 1 35 1 
197 1 268 1 35 1 254 1 161 1 
304 1 119 4 121 1 347 1 219 2 248 2 333 1 52 1 350 1 11 1 366 1 351 1 202 1 13 1 230 1 57 1 106 1 234 2 373 8 264 1 358 1 380 1 95 4 
304 1 119 5 121 2 347 1 219 4 248 3 333 1 52 1 350 1 11 1 366 2 317 1 351 2 202 2 230 1 13 2 57 2 204 1 234 2 106 1 208 1 373 11 14 1 264 1 267 1 358 1 380 1 95 6 
304 1 119 10 121 3 347 1 219 6 248 4 52 1 333 3 29 1 350 1 11 1 311 1 284 1 366 1 150 1 317 1 351 3 202 3 230 1 13 3 57 3 176 1 204 2 106 1 208 2 234 3 14 1 373 19 264 1 211 2 358 1 380 1 95 9 
304 1 119 7 121 3 347 1 219 6 248 5 52 1 333 2 350 1 29 1 11 1 311 1 284 1 366 1 150 1 317 2 351 3 202 3 230 1 13 3 57 3 176 1 204 2 106 1 208 2 234 3 14 1 373 17 264 1 211 1 358 1 380 1 95 10 
304 1 119 4 121 1 347 1 219 2 248 2 333 1 52 1 350 1 11 1 366 1 351 1 202 1 13 1 230 1 57 1 106 1 234 2 373 8 264 1 358 1 380 1 95 4 
202 2 13 1 119 6 176 1 57 1 121 1 204 2 219 2 248 2 234 1 208 2 106 1 373 12 333 2 264 1 29 1 350 1 211 2 311 1 284 1 366 1 95 6 380 1 317 1 351 1 
304 1 119 8 121 4 347 1 219 8 248 5 52 1 333 2 29 1 350 1 11 1 311 1 284 1 366 1 150 2 317 2 351 4 202 3 230 1 13 4 57 4 176 1 204 2 106 1 208 2 234 3 373 18 14 1 264 1 211 1 358 1 380 1 95 10 
119 7 121 4 219 8 248 6 333 2 29 1 350 1 311 1 284 1 366 1 150 2 317 3 351 4 291 1 202 3 13 4 57 4 176 1 204 3 106 1 208 3 234 3 373 16 264 1 211 2 380 1 95 9 
202 1 304 2 119 4 230 3 347 3 248 6 234 3 373 7 333 1 52 1 358 1 95 3 317 3 
304 1 119 8 121 4 347 1 219 8 248 4 52 1 333 2 29 1 350 1 11 1 311 1 284 1 366 1 150 2 317 1 351 4 291 1 202 3 230 1 13 4 57 4 176 1 204 2 106 1 208 2 234 3 373 18 264 1 211 1 358 1 380 1 95 10 
202 1 304 1 119 4 13 2 230 1 57 2 121 2 347 1 219 4 248 3 234 2 373 8 333 1 52 1 11 1 358 1 150 1 95 4 317 1 351 2 
202 1 304 1 119 3 230 1 347 1 85 1 248 2 234 2 373 6 52 1 333 1 11 1 358 1 95 3 
202 1 119 2 13 1 57 1 121 1 204 1 219 2 248 2 234 1 208 1 14 1 373 4 333 1 211 1 95 2 317 1 351 1 
202 1 119 4 204 1 248 2 234 1 106 1 208 1 373 7 333 1 211 1 267 1 366 2 380 1 95 3 317 1 
304 1 119 12 121 2 347 2 219 4 248 9 52 1 333 3 11 1 366 2 150 2 317 4 351 2 318 1 202 3 230 2 13 2 57 2 204 2 208 2 234 5 373 23 88 1 211 2 267 1 270 1 358 1 95 11 380 2 
119 1 366 1 373 1 
95 1 380 1 373 1 
202 1 346 1 13 1 119 3 121 1 57 1 204 1 219 2 248 3 208 1 234 2 14 1 373 6 333 1 211 1 95 3 317 1 351 1 
202 2 13 1 119 6 176 1 57 1 121 1 204 2 219 2 248 2 234 1 208 2 106 1 373 12 333 2 264 1 29 1 350 1 211 2 311 1 284 1 366 1 95 6 380 1 317 1 351 1 
202 1 119 3 230 1 347 1 248 2 234 1 373 6 333 1 358 1 95 3 317 1 
304 1 230 1 119 2 13 1 57 1 121 1 347 1 219 2 248 2 234 1 373 3 52 1 270 1 150 1 95 1 317 1 351 1 
363 1 202 2 13 1 230 2 119 5 121 1 57 1 347 2 219 2 248 5 234 3 373 10 333 2 264 1 358 1 95 5 317 2 351 1 
202 1 13 1 57 1 121 1 204 1 219 2 248 1 373 2 264 1 95 2 317 1 351 1 
202 1 119 2 13 1 57 1 121 1 204 1 219 2 248 2 234 1 208 1 373 4 333 1 264 1 211 1 95 2 317 1 351 1 
291 1 119 2 13 3 230 1 57 3 121 3 347 1 219 6 248 2 234 1 373 3 264 1 270 1 150 1 95 1 317 1 351 3 
304 1 119 18 121 5 347 3 219 10 248 12 52 1 333 5 10 1 11 1 366 4 33 1 150 2 317 5 351 5 291 1 202 5 230 3 175 1 13 5 57 5 204 3 106 1 208 3 234 7 14 1 373 34 264 1 211 3 267 1 270 1 358 2 380 3 95 16 
1 1 283 1 18 1 257 1 86 1 38 1 77 1 
46 1 1 1 86 1 38 1 77 1 265 1 294 1 283 1 18 1 67 1 257 1 300 1 
128 1 81 1 239 1 9 1 217 1 85 1 178 1 381 1 298 1 340 1 114 1 
352 1 128 1 81 1 1 1 217 1 178 1 38 1 340 1 77 2 195 1 375 1 9 1 378 1 125 1 283 2 365 1 381 1 114 1 
245 1 1 2 217 2 77 2 195 2 9 1 125 1 365 1 283 2 146 1 224 1 352 1 128 3 56 1 178 1 38 1 340 1 375 1 378 2 295 1 213 1 381 1 114 1 
245 1 1 2 217 2 77 2 195 2 196 1 9 1 125 1 283 2 146 1 224 1 352 1 128 3 56 1 178 2 38 1 340 1 185 1 375 1 378 2 295 1 213 1 381 2 114 2 
81 1 34 1 227 1 128 4 56 1 217 1 261 1 166 1 177 1 178 3 207 2 340 1 185 1 341 1 9 1 378 1 295 1 189 1 334 1 224 1 381 3 367 2 114 3 
1 1 305 1 307 1 77 1 195 1 170 1 125 1 334 1 283 1 224 1 316 1 367 1 128 1 34 1 154 1 178 1 104 1 207 1 341 1 213 1 381 1 114 1 
9 1 178 1 381 1 340 1 114 1 221 1 
81 2 128 3 337 1 262 1 217 2 51 1 178 6 143 1 168 1 340 3 221 1 266 1 9 2 378 1 134 1 113 1 381 7 361 1 20 1 260 1 114 7 
1 1 304 1 347 1 248 2 249 1 250 1 52 1 195 1 145 2 9 1 11 1 351 2 352 1 202 1 262 1 13 2 57 2 158 1 17 2 358 1 329 1 114 1 217 1 119 3 121 2 219 4 281 1 77 2 333 1 125 1 365 1 283 2 128 1 230 1 178 1 234 2 373 6 183 1 340 1 38 2 237 1 375 1 378 1 190 1 135 1 381 1 95 3 
139 2 1 1 98 1 347 1 305 1 307 1 195 1 6 2 316 1 55 1 202 2 154 1 261 1 321 2 104 1 207 2 325 1 65 1 269 1 358 1 213 1 114 1 274 2 273 5 363 1 333 2 77 1 123 4 170 1 125 1 334 1 283 1 286 1 367 2 128 1 81 1 34 2 230 1 338 1 178 1 235 2 133 1 341 2 40 1 381 1 
128 2 262 1 371 1 217 1 178 2 340 2 221 1 9 1 189 1 378 1 381 2 361 1 114 2 
81 1 128 1 262 1 217 1 178 4 340 1 185 1 239 1 9 1 92 1 381 4 298 1 114 4 
23 1 128 1 337 1 320 1 217 1 72 1 51 1 178 2 340 2 9 1 378 1 224 1 381 2 114 2 
192 1 81 1 9 1 178 1 288 1 381 1 340 1 27 1 259 1 114 1 
128 1 262 1 217 1 178 2 331 1 168 1 340 1 9 1 381 2 114 2 260 1 
81 1 128 3 262 1 217 2 178 4 143 1 340 2 239 1 9 2 92 1 224 1 381 5 298 1 20 1 114 5 260 1 
81 1 128 3 193 1 262 1 217 2 178 4 143 1 340 2 239 1 9 2 92 1 224 1 381 5 298 1 114 5 260 1 
352 1 128 1 81 1 1 1 217 1 178 1 38 1 340 1 77 2 195 1 375 1 196 1 9 1 378 1 125 1 283 2 381 1 114 1 
128 1 337 1 217 1 51 1 178 1 340 2 266 1 9 1 378 1 224 1 381 1 361 1 114 1 
1 1 172 1 283 1 93 1 313 1 241 1 77 1 137 1 151 1 
126 1 328 1 137 1 
21 1 241 1 38 1 151 1 137 1 
245 1 21 2 34 1 166 1 338 1 207 2 38 1 341 1 54 1 30 1 146 1 241 2 41 1 213 1 126 1 328 1 137 1 151 2 367 2 
112 1 303 1 122 1 85 1 
112 1 303 1 122 1 293 1 94 1 272 1 258 1 
97 1 293 1 181 1 
303 1 122 1 293 3 349 1 238 1 112 1 360 2 94 1 12 1 244 1 258 1 272 3 
112 1 303 1 122 1 293 2 290 1 94 1 108 1 272 2 258 1 
138 1 91 1 71 1 122 1 293 1 94 1 12 1 272 1 258 1 
112 1 122 1 293 1 94 1 12 1 272 1 258 1 
112 2 303 1 293 1 94 1 12 1 272 1 258 1 
324 1 112 1 122 1 314 1 293 2 68 1 94 2 12 1 272 2 258 2 
302 1 138 1 303 1 122 2 306 1 293 3 108 2 112 1 359 1 94 1 12 1 258 1 272 3 
91 1 293 1 142 1 94 1 163 1 12 1 272 1 258 1 27 1 259 1 
138 1 112 1 303 1 122 2 306 1 205 1 293 4 290 1 94 2 108 2 12 1 272 4 258 2 
112 1 303 1 122 1 293 1 94 1 12 1 272 1 258 1 
138 1 303 2 120 1 122 3 306 1 293 4 108 2 238 1 112 2 360 1 94 1 244 1 272 4 258 1 
112 1 303 1 345 1 122 1 59 1 293 2 355 1 94 1 108 1 12 1 272 2 258 1 
238 1 112 1 303 1 122 1 293 3 360 2 278 1 94 1 244 2 12 1 272 3 258 1 
330 1 48 1 122 2 109 2 
293 1 309 1 94 1 12 1 272 1 258 1 
302 1 112 1 303 1 122 1 293 2 94 1 108 1 12 1 272 2 258 1 
22 1 
112 1 303 1 122 1 293 1 94 1 12 1 272 1 258 1 
302 1 303 1 122 1 293 3 108 1 112 1 360 1 94 1 12 1 258 1 272 3 
138 1 120 1 122 1 306 1 
112 1 122 1 

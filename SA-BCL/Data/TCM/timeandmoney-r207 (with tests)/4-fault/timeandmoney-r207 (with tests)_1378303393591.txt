#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
136 1 163 3 293 2 249 1 111 1 252 1 169 5 253 6 254 1 317 1 78 2 148 1 150 1 361 4 363 1 83 1 245 9 14 1 86 1 157 2 88 2 374 2 331 2 90 9 53 1 131 1 334 1 230 2 
136 1 163 3 293 2 249 1 111 1 252 1 169 5 253 6 254 1 317 1 78 2 148 1 150 1 361 4 363 1 83 1 245 9 14 1 86 1 157 2 88 2 374 2 90 9 331 2 53 1 131 1 334 1 230 2 
136 1 163 4 293 2 249 1 111 1 252 1 169 6 253 7 254 1 317 1 78 2 148 1 150 1 361 5 363 1 83 1 245 10 14 1 86 1 157 2 88 2 374 2 90 10 331 2 53 1 131 1 334 1 230 2 
136 1 163 2 293 2 249 1 111 1 252 1 169 4 253 4 254 1 317 1 78 2 148 1 150 1 361 3 363 1 245 7 14 1 86 1 157 2 88 2 374 2 90 7 331 1 53 1 131 1 334 1 230 2 
361 2 363 1 163 1 83 1 293 1 245 4 14 1 169 3 374 1 88 1 253 3 90 4 331 2 53 1 131 1 230 1 78 1 148 1 
301 1 363 1 50 1 293 1 245 2 111 1 157 1 169 1 88 1 374 1 90 2 53 1 78 1 148 1 150 1 61 1 
361 1 363 1 163 1 245 3 157 1 169 2 88 2 253 1 90 3 53 1 334 1 78 2 148 1 
163 3 293 1 249 1 169 5 253 7 78 2 148 1 361 4 363 1 83 1 245 9 86 1 14 1 157 1 51 1 88 2 374 1 90 9 331 2 53 1 131 1 334 1 230 1 60 1 
163 3 293 1 249 1 169 5 253 7 78 2 148 1 361 4 363 1 83 1 245 9 86 1 14 1 157 1 51 1 88 2 374 1 90 9 331 2 53 1 131 1 334 1 230 1 60 1 
69 1 155 1 199 1 
48 1 372 2 155 1 
274 2 31 1 46 2 181 2 49 1 192 2 257 2 28 2 
31 1 292 1 139 1 189 1 93 1 313 1 314 1 251 1 4 1 5 2 192 2 273 1 37 1 38 1 116 1 40 1 274 2 320 1 119 1 147 1 257 2 120 1 122 1 345 2 82 2 46 2 49 1 259 1 207 1 330 2 208 1 130 2 55 1 181 3 228 1 268 1 28 3 
274 1 12 1 31 1 46 1 181 1 220 1 44 1 192 1 257 1 28 1 
12 1 369 1 155 1 274 1 227 1 263 1 181 1 248 1 267 1 299 1 199 1 161 1 360 1 28 1 
12 1 46 1 155 1 192 1 274 1 227 1 263 1 181 1 267 1 299 2 199 1 161 2 257 1 360 1 28 1 
153 1 347 1 299 1 298 1 161 1 
279 1 347 1 299 2 298 1 155 1 199 1 161 2 349 1 
347 1 299 1 161 1 
12 1 31 1 46 1 192 1 274 1 181 1 220 1 44 1 298 1 299 1 161 1 257 1 185 1 28 1 
155 1 
279 1 347 1 299 2 298 1 155 1 199 1 161 2 329 1 
29 1 258 1 366 2 204 2 244 1 370 1 347 2 155 1 128 1 332 1 209 1 23 1 278 1 279 1 298 2 299 5 199 1 161 5 281 2 
69 1 49 1 
291 1 46 1 49 2 192 1 68 1 274 2 181 2 257 1 28 2 
41 1 276 1 306 1 
345 1 82 1 139 1 49 1 93 1 314 1 4 1 259 1 130 1 40 1 181 1 228 1 256 1 268 1 120 1 28 1 
345 1 82 1 284 1 139 1 93 1 314 1 4 1 259 1 216 1 192 1 306 1 40 1 274 1 130 1 181 2 228 1 257 1 120 1 268 1 28 2 
291 1 284 2 46 1 49 1 192 4 216 1 218 1 274 5 181 5 99 1 8 1 248 1 257 4 28 5 
274 2 12 1 181 2 358 1 220 1 192 2 257 2 28 2 
274 3 284 1 46 1 181 3 49 1 192 3 257 3 28 3 
274 1 12 1 181 1 220 1 192 1 257 1 28 1 
68 1 291 1 274 1 12 1 46 1 181 1 192 1 257 1 28 1 
291 1 31 1 139 1 213 1 189 1 93 1 314 1 251 1 4 1 5 1 192 3 216 1 37 1 40 1 274 3 320 1 119 1 299 1 147 1 257 3 120 1 360 1 122 1 345 1 82 1 284 1 12 1 46 2 49 1 259 1 207 1 330 2 208 1 227 1 130 1 263 1 55 1 181 4 228 1 182 1 267 1 161 1 268 1 28 4 
274 2 284 1 181 2 99 1 49 1 248 1 192 1 257 1 28 2 
291 1 12 1 284 2 46 1 335 1 213 1 155 1 216 1 192 3 274 3 227 1 263 1 181 3 299 1 267 1 161 1 257 3 360 1 28 3 
291 1 274 2 284 1 46 1 181 2 276 1 192 2 257 2 306 1 28 2 
345 1 82 1 139 1 49 1 93 1 314 1 4 1 259 1 130 1 40 1 181 1 228 1 268 1 120 1 28 1 
345 1 82 1 49 1 314 1 4 1 259 1 130 1 18 1 40 1 181 1 340 1 228 1 268 1 120 1 28 1 
189 1 112 1 166 1 251 1 5 4 338 1 273 2 37 1 41 2 196 1 276 2 320 2 43 1 151 1 122 1 367 1 205 1 330 2 306 2 129 1 208 1 55 1 59 1 210 1 
274 1 12 1 263 1 181 1 358 1 192 1 257 1 28 1 
1 1 269 1 
1 1 269 1 
21 1 142 1 
21 1 142 1 
21 1 142 1 
42 1 1 1 269 1 
325 1 1 1 269 1 
39 1 21 1 103 1 1 2 142 1 269 2 
42 1 1 1 269 1 
42 1 1 1 269 1 
172 1 1 1 269 1 
172 1 1 1 269 1 
172 1 1 1 269 1 
32 1 186 1 34 1 1 1 192 2 316 1 274 2 75 1 9 1 299 1 174 1 257 2 324 1 283 1 49 1 325 1 305 1 17 1 159 1 181 2 247 1 161 1 269 1 28 2 
81 2 283 2 103 1 1 2 371 1 305 2 348 1 155 1 225 1 316 1 71 1 159 2 75 2 57 1 299 2 76 1 161 2 269 2 324 3 
293 1 230 1 374 1 
301 1 293 1 374 1 
343 1 301 1 293 3 319 1 230 2 114 1 
343 1 301 1 293 2 319 1 230 1 10 1 
343 2 301 1 293 2 319 1 230 1 
34 1 231 1 112 1 95 1 6 2 171 1 9 1 279 1 299 5 298 4 281 1 199 1 80 1 48 1 366 1 205 1 204 1 244 2 370 1 372 3 347 1 155 2 52 1 128 3 260 2 17 1 89 2 129 1 308 1 20 1 59 1 161 5 
112 3 95 2 6 6 315 1 171 2 277 1 279 1 299 9 298 7 199 1 281 2 153 5 362 1 80 1 47 1 48 3 241 1 366 2 205 3 204 2 244 6 370 1 372 9 347 6 155 5 128 8 17 4 89 6 129 3 308 3 209 1 59 3 25 1 161 9 290 5 
231 1 112 1 95 1 6 2 171 1 298 2 299 3 199 1 281 1 48 2 366 1 204 1 205 1 244 2 372 4 155 3 128 3 17 1 260 1 89 2 129 1 308 1 20 1 209 1 59 1 161 3 
231 1 112 2 95 1 6 4 171 1 277 1 299 4 298 3 199 1 281 1 362 1 48 3 366 1 204 1 205 2 244 4 372 7 155 4 128 5 17 2 260 2 89 4 129 2 308 2 20 1 209 1 59 2 25 1 161 4 
176 1 69 1 259 1 
214 1 259 1 
307 1 
40 1 4 1 259 1 
73 1 259 1 
40 1 259 1 
176 2 40 1 264 1 4 1 259 3 289 1 
344 1 0 1 336 1 303 1 65 1 112 1 167 2 104 1 84 1 5 7 273 4 193 1 255 1 320 3 43 2 59 1 210 3 
344 1 0 1 336 1 303 1 65 1 112 1 167 2 104 1 84 1 5 7 273 4 193 1 255 1 320 3 43 2 59 1 210 3 
344 1 0 1 336 1 303 1 65 1 112 1 167 2 84 1 104 1 5 7 328 1 273 4 193 1 255 1 320 3 43 2 59 1 210 3 
0 1 336 2 33 1 65 5 189 1 167 3 112 4 5 31 37 1 273 16 193 1 255 2 320 15 43 5 344 2 122 1 302 1 303 1 205 3 368 1 84 1 346 3 85 4 104 2 16 1 330 2 129 3 208 1 308 3 158 1 22 1 210 10 59 4 27 1 
336 1 33 1 189 2 65 1 112 1 167 2 5 9 37 2 273 5 193 1 74 1 255 1 320 4 43 3 122 2 344 1 303 1 104 1 84 1 87 1 330 4 208 2 59 1 210 4 
353 1 293 2 113 1 169 1 253 1 114 1 118 1 357 1 146 1 78 1 148 1 236 1 120 1 345 1 301 1 82 1 363 1 245 2 327 1 157 1 374 1 88 1 90 2 262 1 130 1 351 1 53 1 24 1 230 1 268 1 
353 1 293 2 113 1 169 1 114 1 253 2 357 1 146 1 78 1 148 1 236 1 120 1 345 1 301 1 82 1 363 1 365 1 245 3 327 1 157 1 374 1 88 1 90 3 262 1 130 1 351 1 265 1 230 1 288 1 268 1 
301 1 345 1 353 1 82 1 363 1 365 1 293 2 245 2 113 1 157 1 169 1 374 1 114 1 253 2 90 2 351 1 130 1 357 1 230 1 146 1 288 1 148 1 236 1 120 1 268 1 
353 2 188 1 314 1 113 2 67 1 40 1 146 2 78 1 120 1 345 1 82 1 123 1 245 1 206 1 326 1 259 1 157 2 88 1 90 1 130 1 265 1 26 1 268 1 
353 1 293 2 113 1 114 1 357 1 146 1 78 1 236 1 120 1 345 1 301 1 82 1 245 1 327 1 157 1 374 1 88 1 90 1 262 1 130 1 351 1 53 1 24 1 230 1 288 1 268 1 
294 1 
66 4 171 1 299 5 120 1 345 2 82 2 12 1 177 1 304 1 347 6 259 1 128 2 261 2 130 2 227 1 91 1 263 1 180 2 181 1 134 1 267 1 184 2 268 1 28 1 188 1 141 1 190 2 272 1 314 2 40 1 274 1 279 3 321 1 199 1 149 1 281 1 360 1 202 1 48 2 366 1 204 1 369 1 244 2 370 1 372 2 373 1 155 2 326 1 375 2 107 2 248 1 377 1 161 5 379 2 212 1 
141 1 66 2 274 1 279 1 299 3 360 1 202 1 12 1 369 1 373 1 347 2 329 1 227 1 263 1 181 1 248 1 267 1 377 1 161 3 184 1 212 1 28 1 
141 1 66 3 274 1 279 1 299 3 199 1 360 1 202 1 12 1 369 1 347 1 373 1 155 1 329 1 227 1 375 1 263 1 181 1 248 1 267 1 377 1 161 3 212 1 28 1 
141 1 66 3 274 1 279 1 299 3 199 1 360 1 202 1 12 1 369 1 373 1 347 2 155 1 329 1 261 1 227 1 375 1 263 1 181 1 248 1 267 1 377 1 161 3 184 1 212 1 28 1 
66 6 219 1 296 1 299 5 12 1 177 1 347 7 178 1 128 1 261 4 227 1 263 1 180 2 181 1 267 1 184 4 28 1 187 1 141 1 272 1 190 2 274 1 279 3 101 1 199 5 281 1 360 1 202 1 366 1 48 2 204 1 369 1 244 1 370 1 373 1 155 5 329 1 375 4 107 2 377 1 248 1 161 5 379 2 212 1 
66 4 299 4 12 1 177 1 304 1 347 4 128 1 261 2 227 1 263 1 180 2 181 1 267 1 184 2 28 1 141 1 272 1 190 2 274 1 279 2 281 1 199 1 360 1 202 1 366 1 48 2 204 1 369 1 244 1 370 1 373 1 372 2 155 2 375 2 107 2 377 1 248 1 161 4 379 2 212 1 
141 1 190 2 272 1 66 4 274 1 219 1 279 2 299 4 101 1 199 1 281 1 360 1 202 1 12 1 177 1 48 2 366 1 204 1 369 1 244 1 370 1 347 4 373 1 155 1 128 1 178 1 261 2 375 2 227 1 263 1 107 2 180 2 181 1 248 1 267 1 377 1 184 2 161 4 379 2 212 1 28 1 
141 1 190 2 272 1 66 4 274 1 219 1 279 2 299 4 101 1 199 1 281 1 360 1 202 1 12 1 177 1 48 2 366 1 204 1 369 1 244 1 370 1 347 4 373 1 155 1 128 1 178 1 261 2 375 2 227 1 263 1 107 2 180 2 181 1 248 1 267 1 377 1 184 2 161 4 379 2 212 1 28 1 
310 2 141 1 272 1 66 4 274 1 219 1 198 1 279 2 299 4 199 1 281 1 200 2 360 1 202 1 12 1 366 1 204 1 369 1 244 1 370 1 347 4 372 2 373 1 155 1 127 1 128 1 261 2 375 2 227 1 263 1 107 2 180 2 181 1 248 1 267 1 377 1 184 2 161 4 378 1 212 1 28 1 
141 1 190 2 272 1 66 5 274 1 219 1 279 2 296 1 299 4 101 1 199 1 281 1 360 1 202 1 12 1 177 1 48 2 366 1 204 1 369 1 244 1 370 1 373 1 347 5 155 1 128 1 178 1 261 3 227 1 375 3 263 1 107 2 180 2 181 1 248 1 267 1 377 1 161 4 184 3 379 2 212 1 28 1 
141 1 190 2 272 1 66 5 274 1 219 1 279 2 296 1 299 4 101 1 199 1 281 1 360 1 202 1 12 1 177 1 48 2 366 1 204 1 369 1 244 1 370 1 373 1 347 5 155 1 128 1 178 1 261 3 227 1 375 3 263 1 107 2 180 2 181 1 248 1 267 1 377 1 161 4 184 3 379 2 212 1 28 1 
66 4 299 4 12 1 304 1 347 4 128 1 261 2 227 1 263 1 180 2 181 1 267 1 184 2 28 1 310 2 141 1 272 1 274 1 198 1 279 2 281 1 199 1 360 1 200 2 202 1 366 1 204 1 369 1 244 1 370 1 373 1 372 2 155 1 375 2 107 2 377 1 248 1 161 4 212 1 
189 1 112 1 167 1 251 1 5 6 37 1 273 3 193 1 69 1 255 1 41 1 276 1 43 2 320 3 151 1 344 1 122 1 303 1 49 2 84 1 306 1 330 2 208 1 55 1 210 2 59 1 
270 1 65 1 189 2 313 1 112 2 251 2 5 14 37 2 273 8 170 1 194 1 144 1 41 11 276 4 43 1 320 6 147 1 122 2 205 2 49 1 85 3 346 3 330 4 306 11 129 1 208 2 308 2 158 1 55 1 56 1 210 2 59 1 27 1 
139 1 93 1 189 1 314 1 313 1 4 1 251 1 192 1 216 1 5 2 37 1 273 1 115 1 144 1 40 1 274 1 276 1 318 1 320 1 256 1 322 1 147 1 257 1 120 1 345 1 122 1 82 1 284 1 49 1 259 1 330 2 130 1 208 1 55 1 181 2 228 1 268 1 28 2 
110 2 65 4 165 2 167 1 112 3 251 3 4 2 216 1 5 20 255 1 257 1 120 2 344 1 345 3 122 3 82 3 303 1 124 1 84 1 259 2 306 7 129 2 130 3 308 2 181 3 228 2 268 2 28 3 139 2 140 1 189 3 93 2 313 1 314 1 192 1 37 3 273 10 193 1 144 1 274 1 40 2 98 1 41 7 276 7 145 2 43 4 320 10 147 1 284 1 154 2 205 2 49 2 207 2 330 6 208 3 55 3 59 3 210 8 288 1 
355 1 292 2 188 1 189 2 314 2 313 1 251 2 192 1 5 2 217 1 37 2 273 1 7 1 274 1 40 2 356 1 118 1 100 1 320 1 147 1 257 1 120 2 151 1 11 1 345 8 122 2 82 7 284 1 259 3 326 1 330 4 130 8 208 2 181 1 55 2 309 1 288 1 268 2 28 1 
291 1 189 1 112 1 251 1 192 1 5 3 37 1 273 1 144 1 274 1 41 1 276 1 43 1 320 2 257 1 223 1 122 1 46 1 205 1 306 1 330 2 129 1 208 1 308 1 55 1 181 1 210 1 59 1 28 1 
151 1 122 1 205 1 65 1 189 1 112 1 251 1 5 2 338 1 306 1 330 2 37 1 273 2 208 1 41 1 55 1 276 1 210 1 
151 1 122 1 189 1 251 1 5 2 306 1 330 2 37 1 129 1 208 1 41 1 55 1 276 1 196 1 43 1 320 2 210 1 59 1 
189 1 65 1 112 1 251 1 5 4 273 2 37 1 41 2 276 2 320 2 43 1 151 1 122 1 205 1 330 2 306 2 129 1 308 1 208 1 55 1 210 2 59 1 
122 1 205 1 65 1 189 1 112 1 251 1 5 2 338 1 306 1 330 2 37 1 273 2 208 1 41 1 356 1 55 1 276 1 210 1 
122 1 189 1 251 1 5 2 306 1 330 2 37 1 129 1 208 1 41 1 356 1 55 1 276 1 196 1 43 1 320 2 210 1 59 1 
189 1 65 1 112 1 251 1 5 4 273 2 37 1 356 1 41 2 276 2 320 2 43 1 122 1 205 1 330 2 306 2 129 1 308 1 208 1 55 1 210 2 59 1 
122 1 205 1 65 1 189 1 112 1 251 1 5 4 306 2 330 2 37 1 273 2 129 1 208 1 308 1 41 2 55 1 276 2 43 1 320 2 59 1 210 2 
139 1 93 1 189 1 313 1 314 1 4 1 251 1 5 2 273 1 37 1 40 1 320 1 147 1 120 1 345 1 122 1 82 1 49 1 259 1 207 1 330 2 130 1 208 1 181 1 55 1 228 1 268 1 28 1 
189 1 313 1 314 1 4 1 251 1 5 2 273 1 37 1 40 1 340 1 320 1 147 1 120 1 238 1 345 1 122 1 82 1 49 1 259 1 330 2 18 1 130 1 208 1 181 1 55 1 228 1 268 1 28 1 
189 1 65 1 112 1 251 1 5 4 273 2 37 1 144 1 41 2 276 2 320 2 43 1 122 1 205 1 330 2 306 2 129 1 308 1 208 1 55 1 210 2 59 1 
139 1 65 1 93 1 189 1 112 1 4 1 251 1 5 4 273 2 37 1 40 1 41 2 276 2 118 1 43 1 320 2 120 1 345 1 122 1 82 1 154 1 205 1 259 1 207 1 306 2 330 2 129 1 130 1 208 1 308 1 181 1 55 1 228 1 59 1 210 2 268 1 28 1 
291 1 64 1 65 1 189 1 112 1 251 1 192 1 5 3 37 1 273 2 144 1 274 1 41 1 276 1 320 1 257 1 122 1 46 1 205 1 330 2 306 1 129 1 208 1 308 1 55 1 181 1 59 1 210 1 28 1 
354 1 189 2 65 3 215 1 112 3 5 19 37 2 273 9 74 1 43 3 320 10 122 2 240 2 205 3 243 1 85 2 346 1 330 4 129 3 208 2 308 3 158 1 352 1 108 1 287 2 210 6 59 3 27 1 92 1 135 1 
354 2 33 1 65 1 189 2 215 1 112 3 5 23 37 2 273 13 74 1 43 1 320 10 77 1 201 1 102 1 122 2 240 1 205 3 85 2 346 2 224 1 330 4 129 2 208 2 308 3 158 2 376 1 108 1 287 3 210 2 59 2 160 1 92 1 135 2 
354 2 311 1 189 2 65 3 215 1 112 4 5 31 37 2 273 15 74 1 43 2 320 16 77 1 201 1 102 1 122 2 240 1 205 4 85 4 346 3 224 1 330 4 129 4 208 2 308 4 158 3 376 1 352 1 108 1 287 3 210 5 59 4 160 1 27 1 92 1 135 1 
354 2 33 1 311 1 189 3 65 3 215 1 112 4 5 32 37 3 273 17 74 1 43 3 320 15 77 1 201 1 102 1 122 3 240 1 205 4 85 4 346 3 224 1 330 6 129 3 208 3 308 4 158 3 376 1 352 1 108 1 287 4 210 6 59 3 160 1 27 1 92 1 135 1 
354 1 33 1 189 2 65 8 215 1 167 1 112 8 5 52 37 2 273 27 170 2 193 1 255 1 74 1 43 7 320 25 77 1 201 1 102 1 344 1 122 2 240 1 303 1 205 7 84 1 85 4 346 4 224 1 330 4 129 7 208 2 308 7 158 2 376 1 108 1 287 4 210 15 59 8 160 1 27 2 92 1 135 1 
225 1 283 1 159 1 103 1 75 1 1 1 297 1 305 1 348 1 269 1 
247 1 325 1 
121 1 283 1 159 1 75 1 197 1 1 1 305 1 125 1 269 1 
42 1 250 1 
39 1 172 1 175 1 
81 1 283 1 103 1 1 1 305 1 348 1 155 1 225 1 316 1 71 1 159 1 75 1 57 1 299 1 76 1 161 1 269 1 324 2 
81 1 283 1 103 1 1 1 305 1 348 1 155 1 225 1 316 1 71 1 159 1 75 1 57 1 299 1 76 1 161 1 269 1 324 2 
81 1 283 1 103 1 1 1 305 1 348 1 155 1 225 1 316 1 71 1 159 1 75 1 57 1 299 1 76 1 161 1 269 1 324 2 
39 1 42 1 250 1 
39 1 42 1 250 1 
172 1 175 1 
39 1 172 1 175 1 
32 1 174 1 
32 1 186 1 34 1 1 1 192 2 71 1 70 1 274 2 75 1 9 1 299 1 298 1 174 1 257 2 324 1 81 1 283 1 49 1 325 1 305 1 17 1 181 2 159 1 247 1 161 1 28 2 269 1 
355 1 292 2 189 1 271 1 313 1 251 1 5 2 217 1 37 1 273 1 144 1 40 1 274 2 97 1 295 1 320 1 221 1 147 1 120 1 345 2 122 1 82 2 259 1 330 2 226 1 130 2 208 1 55 1 181 2 268 1 28 2 
301 1 345 2 353 1 82 2 293 2 94 1 327 1 374 1 143 1 114 1 130 2 351 1 118 1 133 1 357 1 230 1 288 1 120 1 268 1 
301 1 345 1 353 1 82 1 293 2 327 1 374 1 143 1 114 1 130 1 351 1 286 1 357 1 230 1 288 1 268 1 120 1 
203 1 345 1 353 1 82 1 188 1 206 1 314 1 94 1 259 1 326 1 40 1 130 1 120 1 268 1 
301 1 345 1 353 1 82 1 293 2 94 1 327 1 374 1 143 1 114 1 130 1 351 1 133 1 357 1 230 1 288 1 120 1 268 1 
350 1 
69 1 258 1 244 1 278 1 155 1 199 1 128 1 
177 1 366 1 48 1 204 1 244 1 370 1 190 1 347 1 372 1 155 2 128 1 279 1 299 1 199 1 161 1 281 1 379 1 
109 1 110 2 63 1 164 2 214 3 112 2 4 2 6 6 171 2 118 1 299 5 300 2 120 3 176 2 345 2 82 2 258 1 347 5 15 2 259 7 128 9 89 6 129 2 130 2 308 2 267 2 268 2 314 1 191 2 36 2 232 1 195 1 40 2 235 2 278 1 279 3 199 2 149 1 323 2 281 4 366 4 48 6 204 4 205 2 244 8 370 4 372 12 155 8 54 1 59 2 161 5 289 1 
112 2 191 1 6 5 77 1 281 1 102 1 366 1 48 3 204 1 205 2 244 4 370 1 372 6 85 1 346 1 155 3 224 1 128 6 89 5 129 2 308 2 158 1 376 1 59 2 160 1 
31 1 164 1 112 2 191 2 192 1 274 1 72 1 255 1 220 1 44 1 299 1 281 1 257 1 344 1 12 1 46 1 366 1 204 1 303 1 244 2 370 1 178 1 128 2 181 1 59 1 161 1 185 1 28 1 
258 1 366 1 204 1 244 1 370 1 155 1 128 1 278 1 281 1 199 1 
110 1 48 5 164 1 205 2 244 5 112 2 372 10 191 2 155 5 6 5 128 5 89 5 129 2 308 2 59 2 
279 1 299 1 347 1 155 1 199 1 161 1 
162 1 188 1 314 2 168 2 171 2 40 1 195 1 279 2 321 1 299 3 281 2 149 2 120 1 345 4 82 4 366 2 204 2 13 1 244 2 370 1 347 4 259 1 326 1 128 2 130 4 209 1 134 1 161 3 268 1 
31 1 139 1 93 1 189 1 314 1 4 1 251 1 5 1 192 2 37 1 274 2 40 1 320 1 119 1 147 1 257 2 120 1 122 1 345 1 82 1 46 2 49 1 259 1 207 1 330 2 208 1 130 1 181 3 55 1 228 1 268 1 28 3 
48 2 366 1 204 1 244 2 167 1 370 1 372 4 155 4 6 2 128 1 89 2 171 1 281 1 199 2 149 1 
237 1 283 1 159 1 
283 1 132 1 159 1 174 1 348 1 
237 1 283 1 159 1 
237 1 283 1 159 1 
30 1 283 1 159 1 
30 1 283 1 159 1 
30 1 283 1 159 1 
283 1 159 1 
1 1 269 1 
122 2 344 1 303 1 33 1 65 1 189 2 167 1 112 1 84 1 5 8 273 4 330 4 37 2 193 1 208 2 255 1 320 4 43 2 59 1 210 3 
344 1 303 1 167 1 112 1 84 1 5 6 273 3 69 1 193 1 255 1 320 3 43 2 210 2 59 1 
122 1 137 1 205 1 189 1 65 1 112 1 5 4 330 2 37 1 273 2 129 1 208 1 308 1 43 1 320 2 59 1 210 2 
205 1 65 1 112 1 85 2 346 1 5 7 273 3 129 1 308 1 158 1 43 1 320 4 59 1 210 2 27 1 
33 2 65 4 189 2 167 1 112 3 5 23 273 11 37 2 170 1 193 1 194 1 255 2 320 12 43 5 344 2 122 2 239 1 303 1 205 2 84 1 346 2 85 2 330 4 129 2 308 2 208 2 210 9 59 3 27 1 
320 1 85 1 5 1 
346 1 5 1 273 1 
122 1 137 1 110 1 205 1 189 1 65 1 112 1 5 6 37 1 330 2 273 3 129 1 208 1 308 1 320 3 43 2 210 3 59 1 
65 1 189 1 112 2 5 12 37 1 273 6 74 1 320 6 43 1 77 1 102 1 122 1 205 2 346 1 85 1 224 1 330 2 129 2 208 1 308 2 158 1 376 1 59 2 210 2 160 1 
344 1 303 1 65 1 112 1 5 6 273 3 255 1 320 3 43 1 59 1 210 2 
344 1 122 1 239 1 33 1 65 1 189 1 84 1 5 3 273 1 330 2 37 1 193 1 208 1 255 1 43 1 320 2 210 2 
122 1 344 2 303 1 189 1 65 2 112 2 5 10 37 1 330 2 273 5 208 1 72 1 74 1 255 2 43 3 320 5 210 5 59 2 
122 1 205 1 189 1 65 1 112 1 5 2 330 2 37 1 273 2 208 1 74 1 210 1 
122 1 205 1 189 1 65 1 112 1 5 4 330 2 37 1 273 2 129 1 208 1 308 1 74 1 43 1 320 2 59 1 210 2 
122 3 344 1 239 1 33 1 189 3 65 1 5 3 330 6 37 3 273 1 208 3 74 1 255 1 352 1 320 2 43 1 210 2 
137 1 33 2 189 5 65 5 167 1 112 5 5 34 37 5 273 16 193 1 255 3 74 1 320 18 43 7 344 3 122 5 239 1 302 1 303 2 368 1 205 3 84 1 85 4 346 3 330 10 129 3 208 5 308 3 158 1 22 1 352 1 210 12 59 5 27 1 
189 1 167 1 112 1 5 8 37 1 273 4 193 1 74 1 255 1 320 4 43 2 77 1 122 1 344 1 303 1 346 1 85 1 84 1 330 2 208 1 158 1 59 1 210 2 
137 1 189 2 65 1 167 1 112 2 5 11 37 2 273 6 193 1 255 1 74 1 43 2 320 5 77 1 344 1 122 2 303 1 205 1 84 1 85 2 346 1 330 4 208 2 308 1 158 1 59 1 210 3 27 1 
137 1 65 1 189 2 112 2 5 12 37 2 273 6 74 1 320 6 43 1 77 1 102 1 122 2 205 2 346 1 85 1 224 1 330 4 129 2 208 2 308 2 158 1 376 1 59 2 210 2 160 1 
137 1 33 1 189 3 65 2 167 1 112 3 5 17 37 3 273 10 193 1 255 1 74 1 43 2 320 7 77 1 102 1 344 1 122 3 303 1 205 2 84 1 346 1 85 1 224 1 330 6 129 1 208 3 308 2 158 1 376 1 59 2 210 4 160 1 
189 1 167 1 112 1 5 8 37 1 273 4 193 1 74 1 255 1 320 4 43 2 77 1 122 1 344 1 303 1 346 1 85 1 84 1 330 2 208 1 158 1 59 1 210 2 
189 1 65 1 112 2 5 12 37 1 273 6 74 1 320 6 77 1 102 1 122 1 205 2 346 1 85 1 224 1 330 2 129 2 208 1 308 2 158 1 376 1 59 2 210 1 160 1 
137 1 33 1 65 1 189 3 112 2 5 11 37 3 273 7 74 1 320 4 43 1 77 1 102 1 122 3 205 2 85 1 346 1 224 1 330 6 129 1 208 3 308 2 158 1 376 1 59 1 210 2 160 1 
33 2 65 3 189 4 112 3 5 16 37 4 273 9 74 1 320 7 43 3 77 1 102 1 122 4 205 3 85 1 346 1 224 1 330 8 129 2 208 4 308 3 158 1 376 1 352 1 59 2 210 6 160 1 
344 3 303 1 65 3 112 1 84 2 5 7 273 3 193 1 255 3 320 4 43 3 59 1 210 6 
33 2 65 1 189 4 167 1 112 3 5 18 37 4 273 10 193 1 255 1 74 1 320 8 43 4 77 1 102 1 344 1 122 4 303 1 205 2 84 1 85 1 346 1 224 1 330 8 129 1 208 4 308 2 158 1 376 1 352 1 59 2 210 5 160 1 
274 1 181 1 99 1 49 1 58 1 248 1 28 1 
152 1 138 1 49 1 126 1 274 1 181 1 333 1 99 1 45 1 58 1 248 1 28 1 
69 1 345 1 40 1 130 1 82 1 188 1 314 1 259 1 326 1 120 1 268 1 
345 1 82 1 284 1 139 1 49 1 314 1 4 1 259 1 192 1 40 1 274 1 130 1 181 2 228 1 257 1 120 1 268 1 28 2 
345 1 82 1 12 1 284 1 139 1 49 1 4 2 168 1 259 3 192 1 232 1 40 2 274 2 130 1 73 1 263 1 181 2 228 1 257 2 360 1 120 1 268 1 28 2 
168 1 4 2 192 1 232 1 274 2 40 2 73 1 340 1 257 2 120 1 360 1 345 2 82 2 284 1 12 1 49 1 259 3 130 2 19 1 263 1 181 2 228 1 268 1 28 2 
214 1 314 1 168 1 4 1 232 1 40 1 73 1 299 2 199 1 120 1 176 1 345 3 82 3 347 1 259 4 155 1 130 3 285 1 19 1 267 1 161 2 211 1 268 1 
176 1 345 3 82 3 214 1 314 1 4 1 168 1 347 1 155 1 259 4 232 1 40 1 130 3 19 1 73 1 235 1 267 1 299 2 199 1 161 2 120 1 268 1 
345 1 130 1 82 1 100 1 120 1 268 1 
11 1 345 7 62 1 82 6 292 1 314 2 4 1 259 3 217 1 7 1 130 7 40 2 339 1 309 1 118 1 100 1 173 1 288 1 289 1 268 2 120 3 
165 1 112 1 167 1 251 2 4 1 5 6 255 1 118 1 221 1 257 1 120 1 345 1 122 2 344 1 82 1 303 1 84 1 259 1 306 1 130 1 181 2 228 1 268 1 28 2 139 1 93 1 189 2 192 1 37 2 273 3 193 1 144 1 274 1 40 1 41 1 276 1 43 2 320 3 284 1 154 1 49 2 207 1 330 4 208 2 55 2 210 2 59 1 
214 1 314 1 36 1 195 1 235 1 278 1 279 1 299 3 298 1 199 1 281 2 323 1 300 1 176 1 345 1 82 1 258 1 366 2 204 2 244 1 370 2 347 2 155 1 259 2 128 1 130 1 267 1 161 3 
176 1 345 2 82 2 4 1 259 2 130 2 40 1 54 1 118 1 100 1 289 1 268 1 120 2 
345 4 82 4 188 1 314 1 3 1 326 1 259 1 130 4 40 1 19 1 118 1 120 1 268 1 
345 2 62 1 82 2 168 1 4 1 259 1 130 2 40 1 98 1 117 1 229 1 173 1 268 1 120 2 
301 1 345 1 351 1 130 1 82 1 293 1 314 1 374 1 120 1 268 1 
345 2 82 2 271 1 259 1 217 1 130 2 40 1 118 1 288 1 268 1 120 1 
345 5 11 1 82 4 188 1 314 1 3 1 168 1 326 1 259 3 217 1 130 5 40 2 118 1 309 1 268 2 120 2 
345 5 82 4 188 1 314 1 3 1 168 1 326 1 156 1 259 3 217 1 130 5 40 2 118 1 309 1 268 2 120 2 
345 1 82 1 284 1 49 1 314 1 4 1 259 1 192 1 40 1 274 1 130 1 181 2 340 1 228 1 257 1 120 1 268 1 28 2 
345 1 62 1 82 1 168 1 4 1 259 1 130 1 40 1 339 1 173 1 289 1 268 1 120 2 
106 1 234 1 242 1 49 1 96 1 
12 1 213 1 242 2 49 1 312 1 155 1 35 1 96 2 106 2 227 1 263 1 234 1 267 1 298 1 299 2 199 1 161 2 360 1 79 1 
226 1 106 1 274 1 97 1 234 1 181 1 242 1 295 1 28 1 
234 1 312 1 79 1 
69 1 363 1 148 1 169 1 
90 1 363 1 245 1 78 1 148 1 169 1 88 1 
245 1 113 1 157 1 
363 1 337 1 245 3 169 1 88 1 90 3 53 1 341 1 359 1 78 1 148 1 150 2 
331 1 90 2 363 1 245 2 78 1 148 1 169 1 88 1 253 1 
361 1 90 1 53 1 293 1 245 1 230 1 14 1 78 1 169 1 374 1 88 1 
90 1 53 1 245 1 78 1 148 1 169 1 88 1 
90 1 363 1 53 1 245 1 78 1 148 2 88 1 
245 2 246 1 169 1 88 2 179 1 90 2 53 1 342 1 78 2 148 1 
361 1 363 1 163 1 245 3 249 1 86 1 169 2 88 1 253 2 90 3 53 1 78 1 148 1 
301 1 363 1 293 2 245 2 169 1 88 1 374 1 114 1 253 1 90 2 53 1 275 1 230 1 78 1 148 1 
361 1 363 1 163 1 83 1 245 4 169 2 88 2 253 2 90 4 331 1 53 1 78 2 148 1 
90 1 363 1 53 1 245 1 78 1 148 1 169 1 88 1 
361 1 363 2 163 1 337 1 245 4 169 3 88 1 253 2 90 4 341 1 280 1 78 1 148 2 150 1 
363 1 364 1 245 2 169 1 51 1 88 1 253 1 90 2 53 1 183 1 78 1 148 1 
363 1 337 1 245 3 169 1 88 1 105 1 90 3 53 1 341 2 78 1 148 1 150 2 
2 1 266 2 169 2 222 1 
90 1 233 1 53 1 245 1 78 1 88 1 
90 2 363 1 53 1 249 1 245 2 78 1 148 1 169 1 88 1 253 1 
282 1 
90 1 363 1 53 1 245 1 78 1 148 1 169 1 88 1 
90 3 363 1 53 1 249 1 245 3 78 1 148 1 169 1 150 1 88 1 253 1 
361 1 163 1 280 1 169 1 
148 1 169 1 

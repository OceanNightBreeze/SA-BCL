#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 252 113 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 252 113 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 234 206 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 53 1 182 9 26 6 102 2 104 5 205 2 311 1 230 2 337 3 87 1 165 1 144 1 167 1 319 1 321 1 120 9 196 1 351 1 217 2 20 2 127 1 22 1 261 2 21 4 328 1 129 1 243 2 
222 1 53 1 182 9 26 6 102 2 104 5 205 2 311 1 230 2 337 3 87 1 165 1 144 1 167 1 319 1 321 1 120 9 196 1 351 1 217 2 20 2 127 1 22 1 261 2 21 4 328 1 129 1 243 2 
222 1 53 1 182 10 26 7 102 2 104 6 205 2 311 1 230 2 337 4 87 1 165 1 144 1 167 1 319 1 321 1 120 10 196 1 351 1 217 2 20 2 127 1 22 1 261 2 21 5 328 1 129 1 243 2 
222 1 53 1 182 7 26 4 102 2 104 4 205 1 311 1 230 2 337 2 87 1 165 1 144 1 167 1 321 1 120 7 196 1 351 1 217 2 20 2 127 1 22 1 261 2 21 3 328 1 129 1 243 2 
144 1 182 4 167 1 319 1 120 4 26 3 102 1 351 1 104 3 205 2 217 1 311 1 230 1 337 1 261 1 22 1 21 2 243 1 
144 1 222 1 182 2 120 2 102 1 351 1 104 1 217 1 20 1 22 1 327 1 261 1 313 1 129 1 85 1 243 1 
144 1 53 1 182 3 120 3 26 1 351 1 104 2 217 2 20 1 337 1 22 1 21 1 243 2 
53 1 182 9 26 7 102 1 104 5 205 2 311 1 270 1 230 1 337 3 87 1 144 1 167 1 319 1 120 9 351 1 173 1 217 2 20 1 127 1 21 4 22 1 261 1 243 2 
53 1 182 9 26 7 102 1 104 5 205 2 311 1 270 1 230 1 337 3 87 1 144 1 167 1 319 1 120 9 351 1 173 1 217 2 20 1 127 1 21 4 22 1 261 1 243 2 
56 1 300 1 378 1 
279 1 300 1 237 2 
5 2 292 2 357 2 223 2 164 2 247 1 366 1 171 2 
52 1 23 1 246 1 290 1 292 2 357 3 223 2 332 1 247 1 360 2 3 1 226 1 28 2 251 1 229 1 5 2 312 1 162 1 31 1 7 1 32 1 208 1 164 3 366 1 188 1 11 1 316 2 35 1 298 1 166 1 149 1 198 1 171 2 353 2 355 1 356 2 289 1 
36 1 5 1 292 1 357 1 223 1 164 1 247 1 256 1 250 1 171 1 
245 1 24 1 357 1 56 1 320 1 300 1 61 1 124 1 250 1 171 1 135 1 164 1 262 1 342 1 
24 1 292 1 223 1 357 1 56 1 320 2 300 1 61 1 124 1 250 1 171 1 5 1 164 1 262 2 342 1 
99 1 39 1 320 1 216 1 262 1 
99 1 39 1 255 1 56 1 320 2 300 1 275 1 262 2 
99 1 320 1 262 1 
36 1 39 1 292 1 223 1 357 1 320 1 247 1 256 1 250 1 171 1 5 1 164 1 262 1 66 1 
300 1 
99 1 39 1 56 1 320 2 300 1 275 1 362 1 262 2 
99 2 116 1 71 1 39 2 56 1 320 5 160 1 80 2 300 1 148 1 197 1 296 1 204 1 186 2 152 1 275 1 262 5 200 2 214 1 
366 1 378 1 
292 1 357 2 223 1 331 1 349 1 171 2 5 1 164 2 366 2 
301 1 267 1 86 1 
23 1 246 1 290 1 357 1 360 1 149 1 226 1 198 1 30 1 31 1 164 1 366 1 11 1 316 1 356 1 289 1 
245 1 181 1 183 2 292 1 223 4 357 5 331 1 18 1 236 1 171 5 5 4 274 1 164 5 366 1 
36 1 5 2 357 2 223 2 164 2 121 1 250 1 171 2 
23 1 290 1 246 1 181 1 183 1 223 1 357 2 360 1 301 1 149 1 198 1 226 1 171 1 5 1 31 1 164 2 11 1 316 1 356 1 289 1 
183 1 5 3 292 1 357 3 223 3 164 3 366 1 171 3 
36 1 5 1 357 1 223 1 164 1 250 1 171 1 
5 1 292 1 357 1 223 1 331 1 164 1 349 1 250 1 171 1 
52 1 23 1 290 1 246 1 181 1 24 1 183 1 292 2 357 4 223 3 331 1 247 1 360 1 3 1 61 1 226 1 250 1 28 1 251 1 229 1 5 3 312 1 31 1 208 1 164 4 366 1 188 1 11 1 316 1 342 1 35 1 298 1 166 1 17 1 320 1 149 1 198 1 124 1 42 1 171 3 353 2 262 1 356 1 289 1 
245 1 5 1 183 1 357 2 223 1 274 1 164 2 366 1 171 2 
181 1 24 1 183 2 292 1 281 1 17 1 223 3 357 3 331 1 320 1 300 1 61 1 250 1 124 1 171 3 5 3 164 3 262 1 342 1 
183 1 292 1 223 2 357 2 331 1 301 1 171 2 5 2 164 2 86 1 
23 1 246 1 290 1 357 1 360 1 149 1 226 1 198 1 31 1 164 1 366 1 316 1 356 1 11 1 289 1 
23 1 89 1 246 1 290 1 357 1 360 1 195 1 198 1 31 1 164 1 366 1 316 1 356 1 11 1 289 1 
52 1 78 1 3 1 267 2 28 4 229 1 335 1 272 1 32 2 339 1 208 1 314 1 188 1 298 1 86 2 13 1 317 1 166 2 301 2 170 1 241 1 353 2 177 1 244 1 
24 1 5 1 357 1 223 1 164 1 121 1 250 1 171 1 
153 1 284 1 
153 1 284 1 
64 1 367 1 
64 1 367 1 
64 1 367 1 
136 1 153 1 284 1 
151 1 153 1 284 1 
347 1 156 1 64 1 367 1 153 2 284 2 
136 1 153 1 284 1 
136 1 153 1 284 1 
185 1 153 1 284 1 
185 1 153 1 284 1 
185 1 153 1 284 1 
98 1 223 2 357 2 202 1 106 1 5 2 164 2 366 1 33 1 110 1 340 1 297 1 276 1 235 1 320 1 169 1 371 1 284 1 171 2 125 1 240 1 151 1 262 1 153 1 
115 1 0 1 347 1 235 1 320 2 300 1 169 2 284 2 4 1 29 1 268 2 106 2 325 1 33 2 262 2 110 3 304 1 276 2 153 2 
230 1 261 1 102 1 
261 1 102 1 85 1 
230 2 203 1 261 3 350 1 266 1 85 1 
230 1 54 1 203 1 261 2 350 1 85 1 
230 1 203 2 261 2 350 1 85 1 
98 1 51 2 78 1 99 1 100 1 56 1 57 1 361 1 80 1 308 1 83 1 186 1 272 1 339 1 275 1 297 1 214 2 279 1 344 1 116 3 39 4 320 5 148 1 300 2 237 3 285 2 240 1 241 1 262 5 376 2 200 1 77 1 220 1 
51 6 78 3 99 6 100 3 56 1 57 2 80 2 248 1 334 1 296 1 83 3 186 2 272 3 339 3 275 1 12 1 112 1 214 6 279 3 344 2 116 8 39 7 118 1 320 9 370 5 300 5 148 1 216 5 237 9 285 6 240 4 242 1 241 3 262 9 77 1 200 2 
51 2 78 1 100 1 292 1 357 1 223 1 247 1 56 1 57 1 361 1 80 1 250 1 296 1 83 1 5 1 186 1 272 1 164 1 338 1 339 1 66 1 214 2 36 1 279 2 344 1 116 3 39 2 320 3 256 1 300 3 237 4 171 1 285 2 240 1 241 1 262 3 376 1 220 1 200 1 
51 4 100 2 292 1 57 1 56 1 247 1 248 1 334 1 250 1 296 1 5 1 164 1 339 2 338 1 214 4 66 1 344 1 116 5 300 4 256 1 171 1 262 4 220 1 78 2 357 1 223 1 361 1 80 1 83 2 186 1 272 2 36 1 279 3 39 3 320 4 237 7 285 4 240 2 241 2 242 1 376 2 200 1 
44 1 11 1 378 1 
234 1 11 1 
82 1 
23 1 11 1 198 1 
109 1 11 1 
23 1 11 1 
23 1 70 1 174 1 44 2 11 3 198 1 
78 1 155 1 317 2 72 1 166 3 358 1 28 7 74 1 228 1 218 1 339 1 84 1 32 4 177 3 141 2 34 1 143 1 
78 1 155 1 317 2 72 1 166 3 358 1 28 7 74 1 228 1 218 1 339 1 84 1 32 4 177 3 141 2 34 1 143 1 
78 1 155 1 317 2 72 1 166 3 358 1 28 7 74 1 228 1 259 1 218 1 339 1 84 1 32 4 177 3 141 2 34 1 143 1 
52 1 155 1 78 4 358 1 79 1 81 3 28 31 83 3 228 1 229 1 272 3 8 1 84 2 208 1 32 16 339 4 141 3 143 2 34 5 298 1 368 4 37 1 317 5 72 1 166 15 147 1 257 1 74 2 150 1 218 2 241 3 353 2 177 10 50 1 
52 2 78 1 155 1 358 1 28 9 229 2 253 1 339 1 208 2 32 5 84 1 141 2 34 1 143 1 298 2 317 3 299 1 72 1 166 4 74 1 150 1 218 1 353 4 177 4 
246 1 291 1 182 2 306 1 360 1 26 1 266 1 102 1 104 1 307 1 230 1 211 1 316 1 315 1 85 1 189 1 190 1 144 1 120 2 351 1 217 1 20 1 43 1 75 1 22 1 261 2 178 1 356 1 243 1 289 1 
246 1 291 1 182 3 306 1 360 1 26 2 266 1 102 1 104 1 307 1 230 1 211 1 316 1 85 1 189 1 190 1 14 1 144 1 119 1 120 3 92 1 351 1 217 1 20 1 43 1 261 2 178 1 356 1 243 1 289 1 
246 1 291 1 182 2 306 1 360 1 26 2 266 1 102 1 104 1 230 1 316 1 85 1 189 1 190 1 14 1 144 1 119 1 120 2 351 1 20 1 43 1 261 2 178 1 356 1 289 1 
131 1 23 1 246 1 291 2 182 1 306 2 360 1 31 1 316 1 212 1 11 1 215 1 146 1 120 1 92 1 19 1 93 1 217 1 20 2 178 2 356 1 243 1 289 1 
246 1 291 1 182 1 306 1 360 1 266 1 102 1 307 1 230 1 211 1 316 1 85 1 189 1 190 1 119 1 120 1 217 1 20 1 43 1 75 1 22 1 261 2 178 1 356 1 243 1 289 1 
286 1 
99 6 246 1 245 1 55 1 56 1 57 1 61 1 103 1 250 1 164 1 11 1 342 1 214 2 15 2 116 2 348 1 300 2 124 1 171 1 175 2 219 1 262 5 356 2 23 1 131 1 24 1 357 1 80 1 360 2 225 1 27 1 309 2 269 2 135 1 186 1 31 2 363 1 275 3 316 2 277 4 191 2 192 1 279 2 38 2 146 1 280 1 320 5 194 2 148 1 322 1 237 2 373 1 287 1 200 1 289 1 
245 1 24 1 99 2 357 1 362 1 61 1 103 1 250 1 135 1 363 1 164 1 275 1 342 1 277 2 192 1 280 1 348 1 320 3 124 1 171 1 175 1 262 3 
99 1 245 1 24 1 357 1 56 1 362 1 61 1 103 1 250 1 309 1 135 1 363 1 164 1 275 1 342 1 277 3 192 1 280 1 348 1 320 3 300 1 124 1 171 1 262 3 
245 1 24 1 99 2 357 1 56 1 362 1 61 1 103 1 250 1 309 1 135 1 363 1 164 1 275 1 342 1 277 3 192 1 38 1 280 1 348 1 320 3 300 1 124 1 171 1 175 1 262 3 
99 7 245 1 55 1 56 5 61 1 103 1 250 1 252 1 164 1 342 1 214 1 113 1 15 2 116 1 348 1 300 5 124 1 171 1 175 4 262 5 24 1 357 1 80 1 265 1 362 1 134 1 309 4 269 2 135 1 363 1 186 1 275 3 277 6 191 2 192 1 279 2 38 4 280 1 320 5 194 2 148 1 373 1 326 1 200 1 
245 1 99 4 55 1 56 1 61 1 103 1 250 1 164 1 342 1 214 1 15 2 116 1 348 1 300 2 124 1 171 1 175 2 262 4 24 1 357 1 80 1 27 1 309 2 269 2 135 1 186 1 363 1 275 2 277 4 191 2 192 1 279 2 38 2 280 1 320 4 194 2 148 1 237 2 373 1 200 1 
99 4 245 1 24 1 55 1 357 1 56 1 80 1 61 1 103 1 134 1 250 1 309 2 252 1 269 2 135 1 363 1 186 1 164 1 275 2 342 1 277 4 214 1 191 2 192 1 279 2 15 2 38 2 116 1 280 1 348 1 320 4 194 2 300 1 148 1 124 1 171 1 373 1 175 2 326 1 262 4 200 1 
99 4 245 1 24 1 55 1 357 1 56 1 80 1 61 1 103 1 134 1 250 1 309 2 252 1 269 2 135 1 363 1 186 1 164 1 275 2 342 1 277 4 214 1 191 2 192 1 279 2 15 2 38 2 116 1 280 1 348 1 320 4 194 2 300 1 148 1 124 1 171 1 373 1 175 2 326 1 262 4 200 1 
99 4 245 1 24 1 132 1 357 1 56 1 80 1 61 1 103 1 250 1 309 2 269 2 135 1 363 1 186 1 164 1 275 2 342 1 277 4 214 1 191 2 192 1 38 2 69 1 116 1 280 1 348 1 320 4 300 1 168 2 148 1 237 2 124 1 171 1 199 1 373 1 175 2 326 1 262 4 49 2 200 1 
113 1 192 1 99 1 38 1 24 1 245 1 280 1 357 1 320 2 348 1 61 1 103 1 250 1 124 1 171 1 252 1 309 1 135 1 363 1 175 1 164 1 262 2 277 3 342 1 
113 1 192 1 99 1 38 1 24 1 245 1 280 1 357 1 320 2 348 1 61 1 103 1 250 1 124 1 171 1 252 1 309 1 135 1 363 1 175 1 164 1 262 2 277 3 342 1 
245 1 99 4 56 1 61 1 103 1 250 1 164 1 342 1 214 1 116 1 348 1 168 2 300 1 124 1 171 1 175 2 262 4 24 1 132 1 357 1 80 1 27 1 309 2 269 2 135 1 186 1 363 1 275 2 277 4 191 2 192 1 38 2 280 1 320 4 148 1 237 2 373 1 200 1 49 2 
52 1 155 1 78 1 358 1 3 1 267 1 28 6 229 1 84 1 208 1 339 1 32 3 366 2 188 1 141 1 143 1 86 1 298 1 317 2 72 1 166 3 301 1 353 2 177 2 378 1 244 1 
52 2 78 1 332 1 3 1 81 3 267 11 28 14 83 2 229 2 272 2 208 2 32 8 339 2 366 1 188 2 34 1 343 1 35 1 368 3 298 2 86 4 88 1 317 1 369 1 37 1 166 6 345 1 346 1 301 11 241 1 177 2 353 4 50 1 
23 1 52 1 290 1 246 1 181 1 183 1 357 2 223 1 332 1 360 1 3 1 226 1 28 2 30 1 229 1 5 1 31 1 208 1 164 2 32 1 366 1 188 1 11 1 316 1 341 1 86 1 298 1 35 1 345 1 166 1 233 1 117 1 149 1 198 1 171 1 353 2 356 1 289 1 
52 3 155 1 246 2 290 2 157 2 332 1 3 3 251 2 5 1 207 1 164 3 208 3 339 3 11 2 298 3 72 1 166 10 345 1 119 1 301 7 171 1 352 2 260 2 353 6 177 8 356 3 180 1 23 2 78 3 181 1 183 1 223 1 357 3 358 1 360 3 267 7 226 2 28 20 83 2 229 3 364 1 31 1 272 2 84 1 32 10 366 2 141 1 188 3 143 1 316 3 34 4 35 1 86 7 317 4 149 2 198 2 241 2 48 2 289 2 
52 2 131 1 23 2 246 2 183 1 357 1 223 1 332 1 360 8 3 2 28 2 5 1 229 2 6 1 31 2 7 2 164 1 208 2 32 1 188 2 315 1 11 3 316 7 298 2 35 1 166 1 146 1 119 1 193 1 40 1 171 1 126 1 353 4 356 8 179 1 201 1 244 1 289 2 154 1 
52 1 78 1 292 1 223 1 357 1 331 1 3 1 267 1 28 3 83 1 229 1 5 1 272 1 139 1 208 1 164 1 339 1 32 1 188 1 86 1 298 1 317 1 345 1 166 2 301 1 171 1 241 1 177 1 353 2 
52 1 13 1 301 1 3 1 267 1 28 2 229 1 272 1 208 1 339 1 32 2 177 1 353 2 188 1 34 1 244 1 86 1 298 1 
52 1 78 1 317 1 166 2 301 1 3 1 267 1 170 1 28 2 229 1 241 1 208 1 177 1 353 2 188 1 244 1 86 1 298 1 
52 1 78 1 3 1 267 2 28 4 83 1 229 1 272 1 32 2 339 1 208 1 188 1 34 1 298 1 86 2 317 1 166 2 301 2 241 1 353 2 177 2 244 1 
52 1 13 1 301 1 3 1 267 1 28 2 229 1 272 1 208 1 339 1 32 2 177 1 353 2 188 1 34 1 86 1 154 1 298 1 
52 1 78 1 317 1 166 2 301 1 3 1 267 1 170 1 28 2 229 1 241 1 208 1 177 1 353 2 188 1 86 1 154 1 298 1 
52 1 78 1 3 1 267 2 28 4 83 1 229 1 272 1 32 2 339 1 208 1 188 1 34 1 298 1 86 2 317 1 166 2 301 2 241 1 353 2 177 2 154 1 
52 1 78 1 3 1 267 2 28 4 83 1 229 1 272 1 32 2 339 1 208 1 188 1 34 1 298 1 86 2 317 1 166 2 301 2 241 1 353 2 177 2 
23 1 52 1 290 1 246 1 357 1 332 1 360 1 3 1 226 1 28 2 251 1 229 1 31 1 32 1 164 1 208 1 366 1 188 1 316 1 11 1 298 1 35 1 166 1 149 1 198 1 353 2 356 1 289 1 
23 1 52 1 290 1 246 1 357 1 332 1 360 1 3 1 28 2 229 1 31 1 32 1 164 1 208 1 366 1 188 1 316 1 11 1 298 1 35 1 89 1 166 1 195 1 238 1 198 1 353 2 356 1 289 1 
52 1 78 1 3 1 267 2 28 4 83 1 229 1 272 1 32 2 339 1 208 1 188 1 34 1 298 1 86 2 317 1 345 1 166 2 301 2 241 1 353 2 177 2 
23 1 52 1 78 1 290 1 246 1 357 1 360 1 3 1 267 2 226 1 28 4 251 1 83 1 229 1 272 1 32 2 339 1 164 1 208 1 188 1 34 1 316 1 315 1 11 1 86 2 298 1 317 1 166 2 301 2 149 1 198 1 241 1 260 1 177 2 353 2 356 1 289 1 
52 1 78 1 292 1 223 1 357 1 331 1 3 1 267 1 28 3 83 1 229 1 5 1 271 1 272 1 208 1 164 1 339 1 32 2 188 1 34 1 298 1 86 1 166 1 345 1 301 1 171 1 241 1 177 1 353 2 
52 3 155 1 294 1 62 1 253 1 339 5 208 3 9 1 210 1 298 3 68 1 72 1 166 21 177 8 353 6 128 1 78 5 358 1 81 3 227 2 28 41 83 4 310 1 229 3 272 4 32 20 84 1 141 1 34 4 143 1 368 4 37 1 317 4 145 1 150 1 323 1 372 4 241 4 45 1 288 1 375 1 377 1 50 3 
52 4 155 1 78 4 358 1 81 3 294 1 227 2 28 38 62 1 310 1 83 4 229 4 272 4 253 1 84 1 208 4 32 20 339 5 9 1 210 1 141 1 143 1 34 3 368 4 298 4 68 1 145 1 317 4 37 1 72 1 166 18 323 1 150 2 372 4 241 3 288 1 128 1 353 8 45 1 177 7 375 1 377 1 50 3 
52 2 155 1 78 8 358 1 81 4 294 1 227 1 28 52 62 1 83 7 229 2 272 7 253 1 84 1 208 2 32 27 339 8 9 1 210 1 141 1 143 1 34 7 368 4 298 2 68 1 145 1 317 7 37 2 72 1 166 25 346 2 150 1 323 1 372 4 241 7 288 1 128 1 353 4 45 1 177 14 375 1 50 2 
52 2 78 3 81 1 294 1 227 1 28 19 83 3 229 2 272 3 253 1 208 2 32 9 339 3 9 1 210 2 34 3 368 2 298 2 68 1 232 1 317 3 37 1 166 10 372 2 241 3 353 4 45 1 177 6 377 1 50 1 
52 3 78 2 81 2 294 1 227 2 28 26 62 1 83 3 229 3 272 3 253 1 208 3 32 14 339 3 9 2 210 1 34 2 298 3 368 2 68 1 145 1 317 2 166 12 323 1 150 2 372 4 241 2 288 1 177 4 353 6 45 1 128 1 375 1 50 2 
4 1 115 1 106 1 347 1 158 1 33 1 169 1 276 1 153 1 284 1 
125 1 151 1 
106 1 163 1 176 1 33 1 169 1 276 1 153 1 284 1 221 1 
136 1 122 1 
156 1 273 1 185 1 
115 1 0 1 347 1 235 1 320 1 300 1 169 1 284 1 4 1 29 1 268 1 106 1 325 1 33 1 262 1 110 2 276 1 153 1 
115 1 0 1 347 1 235 1 320 1 300 1 169 1 284 1 4 1 29 1 268 1 106 1 325 1 33 1 262 1 110 2 276 1 153 1 
115 1 0 1 347 1 235 1 320 1 300 1 169 1 284 1 4 1 29 1 268 1 106 1 325 1 33 1 262 1 110 2 276 1 153 1 
136 1 156 1 122 1 
136 1 156 1 122 1 
273 1 185 1 
156 1 273 1 185 1 
340 1 371 1 
98 1 357 2 223 2 202 1 268 1 106 1 5 2 164 2 366 1 33 1 110 1 340 1 297 1 276 1 39 1 320 1 169 1 371 1 284 1 171 2 125 1 240 1 151 1 325 1 47 1 262 1 153 1 
23 1 52 1 246 1 357 2 293 1 332 1 360 2 3 1 60 1 133 1 28 2 229 1 7 2 164 2 208 1 32 1 188 1 65 1 11 1 316 2 298 1 35 1 345 1 166 1 193 1 283 1 171 2 353 2 356 2 179 1 289 1 
246 1 282 1 119 1 306 1 360 2 266 1 184 1 102 1 41 1 230 1 261 2 211 1 85 1 316 2 356 2 315 1 189 1 190 1 289 1 
246 1 282 1 119 1 306 1 360 1 266 1 102 1 94 1 230 1 261 2 211 1 85 1 316 1 356 1 189 1 190 1 289 1 
23 1 131 1 246 1 215 1 146 1 318 1 306 1 360 1 184 1 31 1 11 1 316 1 356 1 289 1 
246 1 282 1 119 1 306 1 360 1 266 1 184 1 102 1 41 1 230 1 261 2 211 1 85 1 316 1 356 1 189 1 190 1 289 1 
91 1 
116 1 56 1 152 1 160 1 300 1 214 1 378 1 
99 1 55 1 56 1 80 1 186 1 275 1 214 1 279 1 15 1 116 1 320 1 194 1 148 1 300 2 237 1 262 1 200 1 
23 1 246 2 234 1 80 1 360 1 148 1 198 1 206 1 174 1 186 1 31 1 46 1 11 1 200 1 316 1 356 1 289 1 
51 5 78 2 99 1 100 1 57 1 56 2 80 2 81 1 225 1 62 1 105 1 83 2 186 2 272 2 338 2 339 2 275 1 214 5 368 1 279 3 145 1 116 8 320 1 73 1 148 2 300 5 237 6 285 5 323 1 241 2 128 1 262 1 375 1 200 2 50 1 
78 1 100 1 292 1 357 1 223 1 247 1 80 1 134 1 250 1 5 1 186 1 164 1 338 2 84 1 339 2 140 1 143 1 214 2 66 1 36 1 72 1 116 2 320 1 148 1 256 1 171 1 262 1 200 1 
116 1 56 1 160 1 80 1 148 1 300 1 186 1 152 1 200 1 214 1 
51 2 279 2 78 1 116 2 100 1 300 2 237 4 285 2 83 1 272 1 241 1 338 1 339 1 214 2 
99 1 56 1 320 1 300 1 275 1 262 1 
23 1 131 1 246 1 99 4 264 2 159 1 57 2 80 2 360 4 225 2 296 1 186 2 31 2 275 2 11 1 316 4 214 2 67 1 254 1 116 2 146 1 320 3 148 1 322 1 219 1 262 3 200 2 356 4 289 1 
52 1 23 1 246 1 290 1 292 2 357 3 223 2 247 1 360 1 3 1 226 1 28 1 251 1 5 2 312 1 229 1 31 1 208 1 164 3 366 1 188 1 316 1 11 1 35 1 298 1 166 1 149 1 198 1 171 2 353 2 356 1 289 1 
279 1 116 1 57 1 56 1 80 1 148 1 300 2 225 1 237 2 285 1 186 1 200 1 214 1 
106 1 1 1 169 1 
4 1 106 1 25 1 169 1 340 1 
106 1 1 1 169 1 
106 1 1 1 169 1 
106 1 303 1 169 1 
106 1 303 1 169 1 
106 1 303 1 169 1 
106 1 169 1 
153 1 284 1 
52 1 78 1 155 1 358 1 81 1 28 8 229 1 253 1 339 1 208 1 32 4 84 1 141 1 143 1 368 1 298 1 317 2 72 1 166 4 353 2 177 2 375 1 50 1 
52 2 78 1 155 1 358 1 81 1 28 11 83 1 229 2 272 1 253 1 84 1 208 2 32 6 339 2 141 1 143 1 34 1 213 1 368 2 298 2 317 2 37 1 72 1 166 5 353 4 177 3 375 1 50 1 
52 3 155 1 78 3 358 1 81 1 28 19 62 1 83 2 229 3 272 2 253 1 84 1 208 3 32 9 339 3 141 1 143 1 34 1 213 1 368 1 298 3 145 1 317 3 72 1 166 10 150 1 323 1 241 2 353 6 128 1 177 4 375 1 50 1 
52 3 155 1 78 2 358 1 81 1 28 17 62 1 83 2 229 3 272 2 253 1 84 1 208 3 32 10 339 3 141 1 143 1 34 2 213 1 368 1 298 3 317 3 145 1 72 1 166 7 150 1 323 1 241 1 353 6 128 1 177 5 375 1 50 1 
52 1 78 1 155 1 358 1 81 1 28 8 229 1 253 1 339 1 208 1 32 4 84 1 141 1 143 1 368 1 298 1 317 2 72 1 166 4 353 2 177 2 375 1 50 1 
52 1 78 2 81 1 28 12 62 1 83 2 229 1 272 2 253 1 208 1 32 6 339 2 34 1 368 1 298 1 317 1 145 1 166 6 323 1 241 2 353 2 128 1 177 2 375 1 50 1 
52 4 155 1 78 2 358 1 81 1 28 18 62 1 83 2 229 4 272 2 253 1 84 1 208 4 32 10 339 3 141 1 143 1 34 2 213 1 368 1 298 4 145 1 317 3 72 1 166 8 323 1 150 2 241 1 353 8 128 1 177 5 375 1 50 1 
52 4 78 2 81 1 28 16 62 1 83 3 229 4 272 3 253 1 208 4 32 9 339 3 34 3 368 1 298 4 145 1 317 3 166 7 323 1 150 2 241 2 353 8 128 1 177 6 375 1 377 1 50 1 
78 1 155 2 317 3 72 1 166 4 358 1 28 7 84 3 339 1 32 3 177 6 143 3 34 3 
52 4 155 1 78 2 358 1 81 1 28 18 62 1 83 2 229 4 272 2 253 1 84 1 208 4 32 10 339 3 141 1 143 1 34 1 368 1 298 4 145 1 317 3 72 1 166 8 323 1 150 2 241 1 353 8 128 1 177 4 375 1 377 1 50 1 
52 2 78 1 155 1 317 2 72 1 166 4 358 1 28 8 150 1 229 2 339 1 32 4 208 2 84 1 177 3 353 4 141 1 34 1 143 1 298 2 
78 1 155 1 317 2 72 1 166 3 358 1 32 3 339 1 84 1 177 2 141 1 143 1 378 1 28 6 
52 1 78 1 317 1 166 2 28 4 83 1 229 1 241 1 272 1 208 1 339 1 32 2 177 2 353 2 34 1 213 1 298 1 
78 1 317 1 37 1 166 4 81 1 28 7 83 1 241 1 272 1 32 3 339 1 177 2 34 1 50 1 368 2 
52 2 155 1 78 3 358 1 81 2 249 1 28 23 83 2 229 2 272 2 84 2 339 3 32 11 208 2 141 1 143 2 34 4 368 2 298 2 37 1 369 1 317 5 72 1 166 12 346 1 150 2 241 2 177 9 353 4 
166 1 28 1 368 1 
32 1 81 1 28 1 
52 1 78 1 317 2 166 3 28 6 83 1 229 1 352 1 272 1 241 1 208 1 339 1 32 3 353 2 177 3 34 1 213 1 298 1 
52 1 78 2 81 1 28 12 62 1 83 2 229 1 272 2 253 1 208 1 32 6 339 2 34 1 368 1 298 1 317 1 145 1 166 6 323 1 241 2 353 2 128 1 177 2 375 1 50 1 
78 1 317 1 72 1 166 3 28 6 339 1 32 3 84 1 177 2 143 1 34 1 
52 1 155 1 317 1 166 2 358 1 249 1 28 3 150 1 229 1 32 1 84 1 208 1 177 2 353 2 34 1 143 1 298 1 
52 1 78 2 317 3 72 1 166 5 28 10 229 1 253 1 208 1 84 2 32 5 339 2 353 2 140 1 177 5 143 2 34 2 298 1 
52 1 28 2 229 1 272 1 253 1 208 1 339 1 32 2 353 2 177 1 34 1 298 1 
52 1 78 1 317 1 166 2 28 4 83 1 229 1 241 1 272 1 253 1 208 1 339 1 32 2 177 2 353 2 34 1 298 1 
52 3 317 1 166 2 249 1 28 3 150 1 229 3 253 1 208 3 84 1 32 1 353 6 177 2 143 1 34 1 377 1 298 3 
52 5 155 1 78 5 358 1 79 1 81 3 249 1 28 34 83 3 229 5 272 3 8 1 253 1 84 3 208 5 32 16 339 5 141 1 143 3 34 5 213 1 368 4 298 5 37 1 317 7 72 2 166 18 257 1 150 2 241 3 353 10 177 12 377 1 50 1 
245 1 357 1 274 1 164 1 366 1 96 1 171 1 
245 1 374 1 357 1 274 1 164 1 59 1 366 1 263 1 96 1 295 1 231 1 171 1 
23 1 131 1 246 1 146 1 31 1 360 1 11 1 356 1 316 1 378 1 289 1 
23 1 290 1 246 1 183 1 223 1 357 2 360 1 149 1 198 1 171 1 5 1 31 1 164 2 366 1 11 1 316 1 356 1 289 1 
23 2 24 1 290 1 246 1 183 1 264 1 223 1 357 2 360 1 149 1 250 1 198 2 171 2 5 2 109 1 164 2 366 1 76 1 11 3 316 1 356 1 342 1 289 1 
23 2 24 1 290 1 246 1 89 1 183 1 264 1 223 1 357 2 2 1 360 2 250 1 198 2 171 2 5 2 109 1 164 2 366 1 76 1 11 3 316 2 356 2 342 1 289 1 
264 1 292 1 223 1 357 1 56 1 247 1 360 1 250 1 5 1 336 1 164 1 11 1 316 1 66 1 36 1 234 1 320 1 300 1 256 1 171 1 262 1 356 1 
264 1 292 1 223 1 357 1 56 1 247 1 360 1 250 1 107 1 5 1 164 1 11 1 316 1 66 1 36 1 234 1 320 1 300 1 256 1 171 1 262 1 356 1 
246 1 6 1 360 1 356 1 316 1 289 1 
23 2 246 3 119 1 193 1 224 1 360 7 40 1 198 1 126 1 174 1 6 1 31 2 7 1 63 1 365 1 315 1 316 6 356 7 11 3 201 1 289 2 
52 2 155 1 246 1 290 1 157 1 3 2 251 1 5 1 164 2 208 2 339 1 65 1 11 1 298 2 72 1 345 1 166 3 301 1 171 1 260 1 353 4 177 2 356 1 23 1 78 1 183 1 223 1 357 2 358 1 360 1 267 1 226 1 28 6 229 2 84 1 32 3 366 2 188 2 141 1 316 1 315 1 143 1 86 1 317 2 149 1 198 1 289 1 
99 2 56 1 160 1 80 2 360 1 61 1 107 1 31 1 186 2 209 1 275 1 316 1 11 2 214 1 254 1 116 1 39 1 234 1 320 3 300 1 148 2 258 1 44 1 152 1 262 3 356 1 200 2 305 1 
23 1 246 2 360 1 82 1 198 1 174 1 44 1 6 1 46 1 316 1 356 1 11 1 289 1 
23 1 131 1 246 1 146 1 31 1 137 1 2 1 360 4 11 1 315 1 356 4 316 4 289 1 
180 1 23 1 246 2 264 1 16 1 360 2 198 1 63 1 365 1 316 2 356 2 11 1 278 1 289 1 
246 1 31 1 360 1 261 1 102 1 85 1 356 1 316 1 190 1 289 1 
23 1 246 1 193 1 293 1 119 1 360 2 11 1 356 2 316 2 315 1 289 1 
131 1 23 2 246 2 264 1 146 1 193 1 360 5 40 1 31 1 137 1 316 4 356 5 315 1 11 3 201 1 289 2 
131 1 23 2 246 2 264 1 146 1 193 1 360 5 31 1 137 1 316 4 356 5 315 1 11 3 329 1 201 1 289 2 
23 1 290 1 246 1 89 1 183 1 223 1 357 2 360 1 198 1 171 1 5 1 31 1 164 2 366 1 11 1 316 1 356 1 289 1 
23 1 246 2 264 1 224 1 360 1 198 1 174 1 63 1 365 1 316 1 356 1 11 1 289 1 
90 1 357 1 58 1 60 1 283 1 133 1 302 1 171 1 164 1 
330 1 90 1 142 1 
90 1 58 1 366 1 187 1 302 1 
330 1 24 1 90 1 39 1 17 1 56 1 320 2 58 2 300 1 61 1 123 1 250 1 302 2 124 1 366 1 187 2 262 2 142 1 342 1 
144 1 351 1 378 1 104 1 
217 1 144 1 182 1 120 1 243 1 351 1 104 1 
20 1 182 1 178 1 
114 1 144 1 182 3 120 3 239 1 351 1 104 1 217 1 22 1 129 2 243 1 130 1 
205 1 217 1 144 1 182 2 120 2 26 1 243 1 351 1 104 1 
217 1 311 1 230 1 182 1 120 1 261 1 21 1 22 1 102 1 243 1 104 1 
217 1 182 1 120 1 22 1 243 1 351 1 104 1 
217 1 144 1 182 1 120 1 22 1 243 1 351 2 
97 1 182 2 120 2 161 1 351 1 104 1 172 1 217 2 22 1 243 2 
144 1 182 3 120 3 26 2 351 1 104 2 217 1 127 1 337 1 22 1 21 1 243 1 87 1 
144 1 182 2 120 2 26 1 266 1 102 1 351 1 104 1 217 1 230 1 324 1 261 2 22 1 85 1 243 1 
144 1 182 4 319 1 120 4 26 2 351 1 104 2 205 1 217 2 337 1 22 1 21 1 243 2 
217 1 144 1 182 1 120 1 22 1 243 1 351 1 104 1 
144 2 182 4 120 4 26 2 239 1 351 2 104 3 217 1 337 1 21 1 354 1 129 1 243 1 130 1 
144 1 182 2 120 2 333 1 26 1 351 1 104 1 217 1 173 1 138 1 22 1 243 1 
144 1 182 3 120 3 239 1 351 1 104 1 217 1 22 1 10 1 129 2 243 1 130 2 
108 2 95 1 101 1 104 2 
217 1 182 1 120 1 22 1 243 1 111 1 
217 1 144 1 182 2 120 2 26 1 22 1 243 1 351 1 104 1 87 1 
359 1 
217 1 144 1 182 1 120 1 22 1 243 1 351 1 104 1 
144 1 182 3 120 3 26 1 351 1 104 1 217 1 22 1 129 1 243 1 87 1 
337 1 21 1 354 1 104 1 
351 1 104 1 

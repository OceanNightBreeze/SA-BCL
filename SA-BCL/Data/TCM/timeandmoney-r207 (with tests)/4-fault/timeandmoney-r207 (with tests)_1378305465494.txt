#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 353 9 305 2 218 1 101 1 9 1 102 9 173 2 105 3 286 1 38 1 287 6 65 2 229 4 200 5 371 2 16 1 290 1 274 2 275 1 254 1 255 2 208 1 235 1 186 1 78 1 29 1 192 2 
303 1 353 9 305 2 218 1 101 1 9 1 102 9 173 2 105 3 286 1 38 1 287 6 65 2 229 4 200 5 371 2 16 1 290 1 274 2 275 1 254 1 255 2 208 1 235 1 186 1 78 1 29 1 192 2 
303 1 353 10 305 2 218 1 101 1 9 1 102 10 173 2 105 4 286 1 38 1 287 7 65 2 229 5 200 6 371 2 16 1 290 1 274 2 275 1 254 1 255 2 208 1 235 1 186 1 78 1 29 1 192 2 
303 1 353 7 305 2 218 1 101 1 9 1 102 7 173 2 105 2 286 1 287 4 65 2 229 3 200 4 371 1 16 1 290 1 274 2 275 1 254 1 255 2 208 1 235 1 186 1 78 1 29 1 192 2 
353 4 305 1 371 2 290 1 101 1 9 1 274 1 173 1 102 4 255 1 105 1 38 1 287 3 186 1 65 1 229 2 29 1 200 3 
353 2 97 1 305 1 16 1 9 1 275 1 173 1 102 2 274 1 255 1 85 1 186 1 367 1 200 1 29 1 192 1 
353 3 9 1 173 2 102 3 255 2 208 1 105 1 287 1 186 1 229 1 29 1 200 2 192 1 
353 9 305 1 101 1 9 1 102 9 173 2 105 3 38 1 287 7 65 1 229 4 200 5 246 1 371 2 290 1 274 1 254 1 208 1 255 2 235 1 186 1 29 1 192 1 193 1 
353 9 305 1 101 1 9 1 102 9 173 2 105 3 38 1 287 7 65 1 229 4 200 5 246 1 371 2 290 1 274 1 254 1 208 1 255 2 235 1 186 1 29 1 192 1 193 1 
54 1 76 1 209 1 
93 1 54 1 328 2 
59 2 113 2 139 1 270 2 196 1 326 2 221 2 347 2 
354 1 30 1 98 1 59 2 145 2 83 1 60 1 100 1 33 1 196 1 220 1 103 1 326 2 325 2 221 3 362 2 177 1 153 1 270 2 227 1 336 1 131 1 205 1 251 1 252 1 44 1 161 1 113 3 47 1 48 1 49 1 347 2 137 2 376 1 139 1 379 1 79 2 
59 1 113 1 196 1 326 1 123 1 221 1 347 1 125 1 331 1 270 1 
132 1 321 1 68 1 113 1 21 1 221 1 76 1 347 1 53 1 106 1 25 1 331 1 54 1 180 1 
321 2 59 2 196 1 326 2 123 1 221 2 125 1 106 1 331 2 270 2 180 1 132 1 68 2 113 2 76 1 347 2 25 1 54 1 189 1 
321 1 68 1 184 1 292 1 75 1 
321 2 68 2 54 1 219 1 318 1 292 1 76 1 75 1 
321 1 68 1 75 1 
321 1 59 1 68 1 113 1 292 1 196 1 123 1 326 1 221 1 347 1 125 1 331 1 270 1 189 1 
54 1 
321 2 349 1 68 2 54 1 318 1 292 1 76 1 75 1 
321 5 90 1 142 1 3 1 323 1 68 5 183 1 318 1 292 2 76 1 75 2 36 2 22 2 23 1 54 1 188 1 13 1 380 1 337 2 
139 1 209 1 
355 1 59 1 113 2 326 1 293 1 221 2 347 2 37 1 331 1 270 1 139 1 
194 1 165 1 363 1 
30 1 98 1 251 1 161 1 113 1 100 1 47 1 220 1 325 1 221 1 362 1 376 1 139 1 79 1 379 1 215 1 
111 1 98 1 30 1 251 1 161 1 100 1 113 2 315 1 47 1 220 1 326 1 325 1 221 2 347 1 363 1 362 1 376 1 270 1 379 1 79 1 
113 2 315 1 326 2 221 2 293 1 347 2 331 1 270 2 139 1 
331 1 113 1 270 1 123 1 326 1 221 1 347 1 
355 1 59 1 113 1 326 1 221 1 347 1 37 1 331 1 270 1 
354 1 321 1 98 1 30 1 144 1 59 2 145 2 100 1 83 1 33 1 220 1 196 1 103 1 326 3 325 1 221 4 362 1 37 1 106 1 331 1 153 1 270 3 226 1 336 1 180 1 111 1 132 1 205 1 251 1 252 1 44 1 161 1 68 1 113 4 315 1 47 1 48 1 347 3 137 1 376 1 25 1 139 1 379 1 79 1 
314 1 113 2 315 1 326 1 293 1 221 2 347 2 53 1 331 1 270 1 139 1 
321 1 132 1 111 1 59 1 144 1 68 1 113 3 315 2 114 1 326 3 221 3 347 3 37 1 106 1 331 1 25 1 54 1 270 3 180 1 
59 1 113 2 315 1 326 2 221 2 347 2 363 1 37 1 270 2 165 1 
30 1 98 1 251 1 161 1 113 1 100 1 47 1 220 1 325 1 221 1 362 1 376 1 139 1 79 1 379 1 
30 1 98 1 251 1 161 1 113 1 100 1 325 1 221 1 362 1 266 1 376 1 139 1 79 1 379 1 181 1 
354 1 263 1 194 2 356 1 7 1 145 2 308 1 103 1 361 1 364 1 363 2 329 1 153 2 227 2 336 1 339 1 252 1 44 1 48 1 137 4 24 1 165 2 278 1 80 1 
45 1 113 1 326 1 221 1 347 1 106 1 331 1 270 1 
111 1 314 1 59 1 113 5 206 1 315 2 326 4 293 1 221 5 347 5 37 1 53 1 331 1 270 4 139 1 157 1 
331 1 113 1 270 1 123 1 326 1 221 1 347 1 
19 1 320 1 
19 1 320 1 
238 1 360 1 
238 1 360 1 
238 1 360 1 
212 1 19 1 320 1 
212 1 19 1 320 1 
267 1 19 1 320 1 
340 1 19 2 238 1 302 1 360 1 320 2 
212 1 19 1 320 1 
19 1 77 1 320 1 
19 1 77 1 320 1 
19 1 77 1 320 1 
321 2 248 1 31 1 19 2 68 2 147 1 82 1 280 2 20 2 148 1 124 1 152 3 126 2 378 1 54 1 302 1 57 2 119 2 320 2 
321 1 264 1 280 1 326 2 124 1 221 2 176 1 267 1 152 1 270 2 155 1 89 1 110 1 19 1 232 1 68 1 113 2 20 1 347 2 213 1 139 1 57 1 119 1 320 1 
305 1 274 1 65 1 
305 1 97 1 274 1 
305 3 97 1 170 1 250 1 244 1 65 2 
305 2 97 1 170 1 250 1 207 1 65 1 
305 2 97 1 250 1 170 2 65 1 
321 5 322 2 1 1 356 1 7 1 323 1 265 1 328 3 364 1 176 1 36 1 332 1 11 1 337 1 13 3 313 1 89 1 91 2 247 1 339 1 68 5 183 2 318 1 292 4 75 1 76 1 134 1 22 1 256 2 93 1 213 1 54 2 
321 9 322 6 1 2 356 3 7 3 323 1 265 2 328 9 61 1 364 3 36 2 41 1 332 1 11 3 64 5 156 1 337 2 13 8 89 4 90 1 91 6 341 1 339 3 68 9 73 1 183 6 184 5 292 7 318 1 75 6 76 1 22 2 93 3 54 5 301 1 
321 3 1 1 322 2 356 1 7 1 265 1 328 4 364 1 36 1 11 1 337 1 13 3 89 1 247 1 90 1 91 2 339 1 68 3 292 2 183 2 76 1 134 1 22 1 256 1 93 2 54 3 
321 4 322 4 1 1 356 2 7 2 265 1 328 7 364 2 36 1 11 2 156 1 337 1 13 5 89 2 91 4 90 1 247 1 341 1 339 2 68 4 73 1 292 3 183 4 76 1 134 1 22 1 256 2 93 3 54 4 
376 1 300 1 209 1 
376 1 225 1 
348 1 
376 1 161 1 
376 3 268 1 161 1 300 2 379 1 14 1 
376 1 161 1 379 1 
304 1 376 1 
263 3 204 1 279 1 372 1 356 1 69 1 364 1 329 2 365 2 137 7 40 1 277 1 153 3 227 4 56 1 95 1 66 1 
263 3 204 1 279 1 372 1 356 1 69 1 364 1 329 2 365 2 137 7 40 1 277 1 153 3 227 4 56 1 95 1 66 1 
263 3 204 1 279 1 372 1 18 1 356 1 69 1 364 1 329 2 365 2 137 7 40 1 277 1 153 3 227 4 56 1 95 1 66 1 
263 10 279 5 145 2 7 3 356 4 172 1 103 1 35 1 364 4 329 5 365 3 40 2 127 1 11 3 153 15 335 4 227 16 336 1 109 1 66 1 204 2 372 2 339 3 231 3 252 1 69 1 48 1 74 1 296 1 137 31 277 1 56 2 95 1 216 1 
263 4 279 1 356 1 145 4 103 2 364 1 329 3 365 2 40 1 153 4 227 5 336 2 66 1 204 1 372 1 252 2 48 2 296 1 137 9 277 1 27 1 56 1 95 1 120 1 
353 2 98 1 97 1 305 2 357 1 100 1 9 1 102 2 173 1 325 1 362 1 311 1 287 1 244 1 288 1 65 1 200 1 370 1 291 1 46 1 274 1 255 1 52 1 258 1 350 1 351 1 186 1 79 1 29 1 192 1 
353 3 98 1 97 1 305 2 100 1 241 1 9 1 102 3 173 1 325 1 362 1 311 1 86 1 287 2 244 1 288 1 65 1 200 1 202 1 370 1 291 1 46 1 274 1 255 1 52 1 258 1 351 1 79 1 29 1 192 1 
353 2 98 1 97 1 305 2 100 1 241 1 9 1 102 2 325 1 362 1 287 2 244 1 65 1 200 1 202 1 370 1 291 1 46 1 274 1 52 1 258 1 351 1 79 1 29 1 192 1 
167 1 81 1 353 1 98 1 30 1 4 1 161 1 100 1 173 1 102 1 51 1 325 1 255 1 52 2 362 1 376 1 258 2 87 1 86 1 259 1 351 2 79 1 192 2 
353 1 98 1 97 1 305 2 357 1 100 1 102 1 173 1 325 1 362 1 311 1 244 1 288 1 65 1 202 1 370 1 291 1 46 1 274 1 255 1 52 1 258 1 351 1 186 1 79 1 192 1 
121 1 
321 5 99 1 1 1 98 1 4 1 323 1 100 1 325 2 328 2 198 1 106 1 330 1 333 1 331 1 13 2 337 1 249 1 161 1 68 5 113 1 21 1 76 1 75 6 347 1 22 1 211 2 25 1 260 1 79 2 261 1 262 2 167 1 168 2 30 2 169 1 307 1 309 2 221 1 84 1 362 2 36 1 128 1 88 2 180 1 132 1 318 3 183 2 236 2 374 4 93 2 376 1 53 1 138 2 54 2 191 1 
262 1 132 1 321 3 249 1 68 3 113 1 318 1 21 1 221 1 75 2 374 2 347 1 198 1 349 1 106 1 53 1 331 1 25 1 128 1 180 1 191 1 261 1 
321 3 309 1 221 1 198 1 106 1 331 1 128 1 180 1 132 1 249 1 68 3 113 1 318 1 21 1 75 1 374 3 76 1 347 1 53 1 349 1 25 1 54 1 191 1 261 1 
321 3 262 1 309 1 221 1 198 1 106 1 331 1 128 1 180 1 132 1 249 1 68 3 113 1 318 1 21 1 374 3 75 2 76 1 347 1 349 1 53 1 138 1 25 1 54 1 191 1 261 1 
321 5 323 1 198 1 106 1 331 1 337 1 13 1 289 1 249 1 68 5 113 1 21 1 75 7 76 5 347 1 22 1 211 2 349 1 25 1 260 1 164 1 261 1 262 4 168 2 307 1 309 4 221 1 36 1 366 1 128 1 180 1 88 2 132 1 318 3 183 1 374 6 236 2 93 2 53 1 138 4 54 5 55 1 191 1 141 1 
321 4 99 1 323 1 328 2 198 1 106 1 331 1 337 1 13 1 249 1 68 4 113 1 21 1 75 4 76 1 347 1 22 1 211 2 25 1 260 1 261 1 262 2 168 2 307 1 309 2 221 1 36 1 128 1 180 1 88 2 132 1 183 1 318 2 374 4 236 2 93 2 53 1 138 2 54 2 191 1 
262 2 321 4 168 2 323 1 307 1 309 2 221 1 198 1 36 1 106 1 331 1 128 1 88 2 13 1 337 1 180 1 132 1 289 1 249 1 68 4 113 1 318 2 183 1 21 1 76 1 75 4 236 2 374 4 347 1 22 1 93 2 211 2 53 1 138 2 25 1 260 1 54 1 164 1 191 1 261 1 141 1 
262 2 321 4 168 2 323 1 307 1 309 2 221 1 198 1 36 1 106 1 331 1 128 1 88 2 13 1 337 1 180 1 132 1 289 1 249 1 68 4 113 1 318 2 183 1 21 1 76 1 75 4 236 2 374 4 347 1 22 1 93 2 211 2 53 1 138 2 25 1 260 1 54 1 164 1 191 1 261 1 141 1 
262 2 321 4 168 2 323 1 307 1 309 2 221 1 328 2 198 1 36 1 106 1 331 1 128 1 12 1 245 2 13 1 337 1 180 1 132 1 289 1 249 1 68 4 113 1 318 2 183 1 294 1 21 1 76 1 75 4 374 4 133 1 347 1 135 2 22 1 211 2 53 1 138 2 25 1 54 1 191 1 261 1 
321 4 262 3 168 2 323 1 307 1 309 3 221 1 36 1 198 1 106 1 331 1 128 1 88 2 13 1 337 1 180 1 132 1 289 1 249 1 68 4 113 1 318 2 183 1 21 1 76 1 236 2 374 5 75 5 347 1 22 1 93 2 211 2 53 1 138 3 25 1 260 1 54 1 164 1 55 1 191 1 141 1 261 1 
321 4 262 3 168 2 323 1 307 1 309 3 221 1 36 1 198 1 106 1 331 1 128 1 88 2 13 1 337 1 180 1 132 1 289 1 249 1 68 4 113 1 318 2 183 1 21 1 76 1 236 2 374 5 75 5 347 1 22 1 93 2 211 2 53 1 138 3 25 1 260 1 54 1 164 1 55 1 191 1 141 1 261 1 
262 2 321 4 99 1 168 2 323 1 307 1 309 2 221 1 328 2 198 1 36 1 106 1 331 1 128 1 245 2 13 1 337 1 180 1 132 1 249 1 68 4 113 1 318 2 183 1 21 1 294 1 76 1 75 4 374 4 347 1 135 2 22 1 211 2 53 1 138 2 25 1 54 1 191 1 261 1 
354 1 263 2 194 1 145 2 356 1 103 1 363 1 329 2 364 1 365 1 40 1 153 3 227 3 336 1 66 1 204 1 252 1 44 1 48 1 209 1 137 6 24 1 277 1 139 2 165 1 95 1 
354 1 145 2 252 1 44 1 48 1 336 1 166 1 103 1 174 1 
354 1 98 1 30 1 145 2 146 1 100 1 220 1 33 1 325 1 326 1 103 1 197 1 174 1 221 2 362 1 178 1 270 1 153 1 227 1 336 1 111 1 131 1 251 1 161 1 252 1 44 1 113 2 315 1 47 1 48 1 347 1 137 2 376 1 139 1 165 1 379 1 79 1 215 1 
98 2 279 4 194 7 145 6 7 2 100 2 325 3 103 3 326 1 329 4 10 2 63 1 11 2 153 10 336 3 158 1 159 1 202 1 66 1 204 1 111 1 205 2 339 2 251 2 252 3 161 2 113 3 70 2 347 1 165 7 79 3 354 3 263 8 30 1 356 3 33 1 220 2 221 3 174 1 310 2 362 3 363 7 364 3 365 1 40 1 270 1 227 10 131 1 230 2 44 3 315 1 47 2 48 3 137 20 376 2 277 1 139 2 379 2 95 1 
354 2 167 1 98 2 30 2 4 1 5 1 145 4 100 2 33 1 326 1 325 8 103 2 221 1 362 7 177 2 270 1 153 1 227 1 336 2 202 1 131 1 43 1 17 1 273 1 252 2 44 2 161 2 113 1 315 1 48 2 347 1 137 2 24 1 376 3 350 1 298 1 26 1 79 8 118 1 
263 1 354 1 194 1 59 1 145 2 7 1 356 1 326 1 103 1 174 1 221 1 329 1 363 1 364 1 37 1 11 1 270 1 153 2 227 1 336 1 339 1 252 1 44 1 113 1 48 1 347 1 237 1 137 3 165 1 
263 1 354 1 279 1 339 1 194 1 44 1 252 1 145 2 48 1 103 1 363 1 364 1 137 2 24 1 165 1 227 2 336 1 80 1 
263 1 354 1 194 1 44 1 252 1 145 2 7 1 356 1 48 1 103 1 329 1 363 1 137 2 24 1 153 2 165 1 336 1 278 1 
263 2 354 1 279 1 339 1 194 2 356 1 7 1 44 1 252 1 145 2 48 1 103 1 329 1 363 2 364 1 137 4 24 1 11 1 153 2 165 2 227 2 336 1 
263 1 354 1 279 1 339 1 194 1 43 1 44 1 252 1 145 2 48 1 103 1 363 1 364 1 137 2 165 1 227 2 336 1 80 1 
263 1 354 1 194 1 43 1 44 1 252 1 145 2 7 1 356 1 48 1 103 1 329 1 363 1 137 2 153 2 165 1 336 1 278 1 
263 2 354 1 279 1 339 1 194 2 43 1 356 1 7 1 44 1 252 1 145 2 48 1 103 1 329 1 363 2 364 1 137 4 11 1 153 2 165 2 227 2 336 1 
263 2 354 1 279 1 339 1 194 2 356 1 7 1 44 1 252 1 145 2 48 1 103 1 329 1 363 2 364 1 137 4 11 1 153 2 165 2 227 2 336 1 
354 1 98 1 30 1 145 2 100 1 220 1 33 1 325 1 103 1 221 1 362 1 153 1 227 1 336 1 131 1 205 1 251 1 161 1 44 1 252 1 113 1 47 1 48 1 137 2 376 1 139 1 379 1 79 1 
354 1 98 1 30 1 145 2 100 1 33 1 325 1 103 1 221 1 362 1 266 1 153 1 227 1 336 1 181 1 130 1 131 1 251 1 161 1 44 1 252 1 113 1 48 1 137 2 376 1 139 1 379 1 79 1 
263 2 354 1 279 1 339 1 194 2 356 1 7 1 44 1 252 1 145 2 48 1 103 1 174 1 329 1 363 2 364 1 137 4 11 1 153 2 165 2 227 2 336 1 
263 2 354 1 279 1 98 1 194 2 356 1 7 1 145 2 100 1 220 1 325 1 103 1 221 1 329 1 363 2 364 1 362 1 11 1 153 2 227 2 336 1 339 1 205 1 251 1 161 1 44 1 252 1 113 1 70 1 47 1 48 1 137 4 376 1 350 1 165 2 379 1 79 1 
263 1 354 1 279 1 194 1 59 1 356 1 7 1 145 2 326 1 103 1 174 1 221 1 364 1 363 1 37 1 11 1 153 1 270 1 227 2 336 1 339 1 252 1 44 1 233 1 113 1 48 1 347 1 137 3 165 1 
263 6 279 3 143 1 145 4 7 3 356 3 281 2 103 2 222 1 329 3 62 1 364 3 284 1 127 1 11 3 153 10 154 2 335 2 199 1 227 9 336 2 339 3 231 1 252 2 48 2 74 1 257 1 137 19 377 1 27 1 
263 4 279 2 143 1 356 2 145 6 7 2 8 1 281 4 103 3 222 2 329 2 62 1 364 3 107 1 11 3 153 12 154 1 199 1 227 14 335 2 336 3 160 1 67 1 339 3 231 2 252 3 71 1 48 3 74 2 296 2 257 2 137 26 185 1 27 1 
279 4 143 1 7 4 145 6 281 4 8 1 103 3 62 1 329 4 284 1 107 1 11 4 153 21 199 1 335 4 154 1 336 3 67 1 160 1 66 1 204 1 339 4 252 3 71 1 74 3 296 1 257 1 27 1 263 8 356 5 306 1 222 2 364 5 365 1 40 1 127 1 227 20 231 3 48 3 137 41 185 1 277 1 95 1 
263 7 279 3 143 1 145 8 7 3 356 4 306 1 8 1 281 4 103 4 222 2 329 4 62 1 364 5 284 1 365 1 40 1 107 1 127 1 11 4 153 18 154 1 335 4 199 1 227 20 336 4 66 1 160 1 67 1 204 1 339 4 231 3 252 4 71 1 48 4 74 3 296 2 257 1 137 38 277 1 185 1 27 1 95 1 
263 14 279 7 143 1 145 4 7 7 356 8 8 1 281 4 103 2 222 1 329 7 62 1 364 8 365 1 40 1 107 1 127 2 11 7 153 25 154 1 335 4 199 1 227 27 336 2 66 1 160 1 67 1 204 1 339 7 231 4 252 2 71 1 48 2 253 2 74 2 296 1 257 1 137 52 277 1 185 1 27 1 95 1 
248 1 19 1 20 1 280 1 148 1 302 1 57 1 175 1 119 1 320 1 
267 1 264 1 
19 1 345 1 346 1 20 1 280 1 190 1 57 1 119 1 320 1 
321 1 248 1 31 1 19 1 68 1 147 1 82 1 280 1 20 1 148 1 124 1 152 2 126 1 54 1 302 1 57 1 119 1 320 1 
321 1 248 1 31 1 19 1 68 1 147 1 82 1 280 1 20 1 148 1 124 1 152 2 126 1 54 1 302 1 57 1 119 1 320 1 
321 1 248 1 31 1 19 1 68 1 147 1 82 1 280 1 20 1 148 1 124 1 152 2 126 1 54 1 302 1 57 1 119 1 320 1 
340 1 2 1 212 1 
340 1 2 1 212 1 
77 1 58 1 
340 1 77 1 58 1 
155 1 110 1 
321 1 264 1 82 1 280 1 326 2 221 2 176 1 267 1 152 1 126 1 270 2 155 1 89 1 110 1 19 1 232 1 68 1 113 2 20 1 292 1 347 2 213 1 139 1 57 1 140 1 119 1 320 1 
2 1 212 1 
340 1 77 1 58 1 
354 1 98 1 145 2 100 1 33 1 325 2 103 1 174 1 221 2 362 2 177 2 153 1 227 1 336 1 271 1 131 1 161 1 44 1 344 1 252 1 113 2 72 1 316 1 317 1 48 1 347 2 137 2 376 1 26 1 79 2 118 1 
338 1 370 1 305 2 97 1 98 1 100 1 46 1 274 1 325 2 362 2 375 1 276 1 350 1 351 1 244 1 288 1 65 1 79 2 202 1 
338 1 370 1 305 2 97 1 98 1 100 1 46 1 274 1 325 1 362 1 224 1 351 1 244 1 288 1 65 1 79 1 202 1 
81 1 167 1 98 1 30 1 4 1 161 1 100 1 325 1 362 1 376 1 276 1 351 1 369 1 79 1 
338 1 370 1 305 2 97 1 98 1 100 1 46 1 274 1 325 1 362 1 375 1 276 1 351 1 244 1 288 1 65 1 79 1 202 1 
359 1 
142 1 54 1 183 1 13 1 380 1 76 1 209 1 
321 1 323 1 328 1 36 1 13 1 337 1 88 1 68 1 183 1 318 1 236 1 75 1 76 1 22 1 93 1 260 1 54 2 
321 2 322 3 30 1 98 1 1 1 356 1 7 1 195 1 323 2 324 1 100 2 358 1 122 1 34 1 325 1 328 6 364 1 362 1 36 2 268 1 225 2 11 1 334 1 228 1 337 2 13 4 91 3 132 1 339 1 230 1 343 1 161 1 68 2 183 3 318 1 75 2 22 2 93 3 376 3 54 3 79 1 379 1 
321 1 1 1 322 5 323 2 7 2 356 2 171 1 8 1 84 1 328 6 364 2 36 2 11 2 335 1 129 1 228 2 13 8 337 2 160 1 67 1 91 5 339 2 231 1 68 1 71 1 318 1 183 5 74 1 75 1 76 2 22 2 93 3 299 1 185 1 54 5 
321 1 59 1 323 1 356 1 196 1 123 1 326 1 221 1 364 2 36 1 125 1 40 1 331 1 270 1 228 2 337 1 13 2 204 1 68 1 113 1 183 2 295 1 347 1 22 1 299 1 277 1 189 1 141 1 
142 1 323 1 183 1 76 1 36 1 22 1 54 1 380 1 337 1 13 1 
91 5 339 2 322 5 230 1 7 2 356 2 183 5 328 10 364 2 93 5 299 1 11 2 54 5 228 2 13 5 
321 1 68 1 54 1 318 1 76 1 75 1 
321 3 167 1 98 1 30 2 1 2 169 1 4 1 323 1 100 1 149 1 325 4 84 2 362 4 36 2 333 1 368 1 179 2 337 2 13 2 90 1 161 1 68 3 183 2 318 2 75 4 22 2 376 1 187 1 79 4 
354 1 30 1 98 1 59 2 145 2 83 1 100 1 33 1 196 1 220 1 103 1 325 1 326 2 221 3 362 1 153 1 270 2 336 1 205 1 251 1 252 1 161 1 44 1 113 3 47 1 48 1 347 2 137 1 376 1 139 1 79 1 379 1 
91 2 322 2 1 1 323 1 183 2 76 2 84 1 328 4 36 1 22 1 365 1 93 2 54 4 337 1 13 1 
20 1 272 1 119 1 
20 1 272 1 119 1 
20 1 148 1 352 1 155 1 119 1 
20 1 272 1 119 1 
20 1 119 1 203 1 
20 1 119 1 203 1 
20 1 119 1 203 1 
20 1 119 1 
19 1 320 1 
263 3 204 1 279 1 356 1 252 2 145 4 48 2 103 2 296 1 364 1 329 2 365 1 137 8 40 1 277 1 153 4 227 4 336 2 95 1 66 1 
204 1 263 2 356 1 209 1 329 2 364 1 365 1 137 6 40 1 277 1 153 3 227 3 95 1 66 1 
263 2 339 1 279 1 356 1 7 1 252 1 145 2 48 1 373 1 103 1 329 1 364 1 137 4 11 1 153 2 227 2 336 1 
263 2 339 1 279 1 231 1 356 1 7 1 74 1 329 1 364 1 137 7 127 1 11 1 153 4 335 2 227 3 
263 9 279 4 7 2 356 3 145 4 103 2 364 3 329 5 365 1 40 2 127 1 11 2 153 12 42 1 227 11 335 2 336 2 66 1 204 2 339 2 231 2 252 2 48 2 253 1 234 1 296 2 137 23 277 1 95 1 
137 1 153 1 335 1 
137 1 231 1 227 1 
263 3 339 1 279 1 230 1 145 2 252 1 7 1 356 1 48 1 373 1 103 1 364 1 329 2 137 6 11 1 153 3 227 3 336 1 
263 2 279 1 145 2 7 2 356 2 8 1 103 1 364 2 329 1 11 2 153 6 335 1 227 6 336 1 67 1 160 1 339 2 231 1 252 1 71 1 48 1 74 1 137 12 185 1 27 1 
204 1 263 2 279 1 356 1 364 1 329 1 137 6 40 1 277 1 153 3 227 3 
263 2 204 1 279 1 252 1 145 2 48 1 103 1 296 1 329 1 137 3 40 1 42 1 153 2 227 1 336 1 95 1 66 1 
204 2 263 5 279 2 145 2 252 1 356 2 48 1 103 1 295 1 329 3 364 2 137 10 40 2 277 1 27 1 153 5 227 5 336 1 
263 1 339 1 279 1 252 1 145 2 48 1 103 1 364 1 137 2 27 1 227 2 336 1 
263 2 339 1 279 1 356 1 7 1 252 1 145 2 48 1 103 1 329 1 364 1 137 4 27 1 11 1 153 2 227 2 336 1 
204 1 263 2 279 1 252 3 145 6 48 3 103 3 296 1 329 1 284 1 137 3 40 1 27 1 42 1 153 2 227 1 336 3 
263 12 279 5 145 10 7 3 356 5 172 1 103 5 364 5 329 7 365 1 284 1 40 3 127 1 11 3 42 1 153 18 335 4 227 16 336 5 109 1 66 1 204 3 339 3 231 3 252 5 48 5 373 1 74 1 296 2 137 34 277 2 27 1 95 1 216 1 
263 2 356 1 145 2 103 1 364 1 329 2 365 1 40 1 153 4 335 1 227 4 336 1 66 1 204 1 231 1 252 1 71 1 48 1 74 1 137 8 277 1 27 1 95 1 
263 3 279 1 356 1 145 4 103 2 329 2 364 2 365 1 40 1 127 1 11 1 153 5 335 2 227 6 336 2 66 1 204 1 339 1 231 1 252 2 71 1 48 2 373 1 74 1 137 11 277 1 27 1 95 1 
263 4 279 1 145 6 7 2 356 3 8 1 103 3 364 3 329 3 365 1 40 1 11 2 153 10 335 1 227 9 336 3 66 1 160 1 67 1 204 1 339 2 231 1 252 3 71 1 48 3 373 1 74 1 296 1 137 19 277 1 185 1 27 1 95 1 
263 5 279 2 145 6 7 1 356 2 8 1 103 3 364 3 329 3 365 1 40 1 11 2 153 7 335 1 227 10 336 3 66 1 67 1 160 1 204 1 339 2 231 1 252 3 71 1 48 3 373 1 74 1 296 1 137 17 277 1 185 1 27 1 95 1 
263 2 356 1 145 2 103 1 364 1 329 2 365 1 40 1 153 4 335 1 227 4 336 1 66 1 204 1 231 1 252 1 71 1 48 1 74 1 137 8 277 1 27 1 95 1 
263 2 279 1 145 2 7 2 356 2 8 1 103 1 364 2 329 1 11 2 153 6 335 1 227 6 336 1 67 1 160 1 339 2 231 1 252 1 71 1 48 1 74 1 137 12 185 1 27 1 
263 5 279 2 145 8 7 1 356 2 8 1 103 4 364 3 329 3 365 1 40 1 11 2 153 8 335 1 227 10 336 4 66 1 160 1 67 1 204 1 339 2 231 1 252 4 71 1 48 4 373 1 74 1 296 2 137 18 277 1 185 1 27 1 95 1 
263 6 279 3 145 8 7 2 356 2 8 1 103 4 364 3 329 3 284 1 11 3 153 7 335 1 227 9 336 4 160 1 67 1 339 3 231 1 252 4 71 1 48 4 74 1 296 2 137 16 185 1 27 1 
204 3 263 6 279 3 356 1 329 3 364 1 137 7 40 3 277 1 153 4 227 3 95 1 66 2 
263 4 279 1 145 8 7 1 356 2 8 1 103 4 364 3 329 3 365 1 284 1 40 1 11 2 153 8 335 1 227 10 336 4 66 1 160 1 67 1 204 1 339 2 231 1 252 4 71 1 48 4 74 1 296 2 137 18 277 1 185 1 27 1 95 1 
92 1 314 1 53 1 113 1 139 1 221 1 347 1 
314 1 113 1 50 1 104 1 221 1 347 1 92 1 269 1 53 1 139 1 15 1 96 1 
167 1 98 1 30 1 376 1 4 1 161 1 100 1 79 1 325 1 209 1 362 1 
30 1 98 1 251 1 161 1 100 1 113 2 315 1 220 1 326 1 325 1 221 2 347 1 362 1 376 1 139 1 270 1 379 1 79 1 
98 1 304 1 100 1 220 1 325 1 326 1 221 2 362 1 106 1 331 2 179 1 270 2 180 1 182 1 251 1 161 2 113 2 315 1 293 1 347 2 376 3 139 1 79 1 379 2 
98 1 304 1 100 1 325 1 326 1 221 2 362 1 106 1 331 2 179 1 270 2 180 1 181 1 182 1 251 1 161 2 113 2 315 1 293 1 347 2 376 3 139 1 79 1 379 2 
321 2 98 1 304 1 30 1 100 1 282 1 325 3 362 3 225 1 179 1 182 1 132 1 161 1 68 2 75 1 76 1 297 1 376 4 115 1 54 1 300 1 79 3 379 1 
321 2 59 1 196 1 123 1 34 1 325 1 326 1 221 1 362 1 125 1 331 1 225 1 179 1 270 1 132 1 68 2 113 1 75 1 76 1 347 1 376 1 54 1 79 1 189 1 
98 1 17 1 100 1 79 1 325 1 362 1 
30 2 98 2 17 1 273 1 5 1 161 2 100 3 163 1 325 7 362 6 376 3 268 1 350 1 298 1 177 1 26 1 79 7 379 1 28 1 201 1 202 1 
263 2 354 2 98 1 194 1 356 1 145 4 100 1 220 1 326 1 103 2 325 1 174 1 221 2 310 1 363 1 364 1 329 2 362 1 365 1 40 1 153 3 270 1 227 3 336 2 66 1 204 1 205 1 251 1 161 1 252 2 44 2 113 2 315 1 70 1 72 1 47 1 48 2 347 1 137 6 376 1 350 1 277 1 139 2 165 1 379 1 79 1 95 1 
321 3 142 1 59 1 323 2 324 1 149 1 196 1 325 1 326 1 331 1 334 1 337 2 13 4 204 1 343 1 68 3 113 1 292 1 295 1 75 2 76 2 347 1 22 2 299 1 79 1 30 1 356 2 123 1 34 1 221 1 362 1 364 2 36 2 125 1 40 1 225 1 270 1 228 2 132 1 318 1 183 5 376 1 277 1 54 2 189 1 380 1 
98 1 17 1 161 1 100 2 358 1 325 2 362 2 376 2 268 1 350 1 300 1 79 2 379 1 
167 1 98 1 30 1 376 1 4 1 161 1 350 1 100 1 115 1 79 4 325 4 217 1 362 4 
98 1 161 1 100 2 163 1 325 2 283 1 362 2 136 1 376 1 179 1 79 2 379 1 158 1 201 1 
370 1 305 1 97 1 98 1 30 1 100 1 274 1 79 1 325 1 362 1 
98 1 376 1 161 1 350 1 100 1 26 1 317 1 79 2 325 2 202 1 362 2 
167 1 30 1 98 2 4 1 273 1 161 2 100 2 325 5 362 4 376 3 350 1 298 1 26 1 179 1 79 5 217 1 
167 1 30 1 98 2 342 1 4 1 161 2 100 2 325 5 362 4 376 3 350 1 298 1 26 1 179 1 79 5 217 1 
30 1 98 1 251 1 161 1 100 1 113 2 315 1 326 1 325 1 221 2 347 1 362 1 376 1 139 1 270 1 379 1 79 1 181 1 
98 1 161 1 100 2 163 1 325 1 362 1 376 1 268 1 179 1 79 1 379 1 28 1 201 1 
243 1 319 1 139 1 214 1 210 1 
321 2 59 1 144 1 196 1 123 1 326 1 221 1 327 1 151 1 125 1 106 1 243 1 331 2 270 1 180 1 132 1 68 2 113 1 292 1 76 1 347 1 210 1 25 1 319 1 54 1 116 1 214 1 189 1 
344 1 113 1 319 1 316 1 214 1 271 1 221 1 347 1 210 1 
151 1 319 1 116 1 
9 1 200 1 29 1 209 1 
353 1 9 1 102 1 173 1 255 1 200 1 29 1 
353 1 258 1 192 1 
353 3 162 1 173 1 102 3 275 2 9 1 255 1 39 1 186 1 108 1 200 1 29 1 
353 2 371 1 287 1 9 1 102 2 173 1 255 1 200 1 29 1 
353 1 305 1 186 1 101 1 274 1 65 1 102 1 173 1 229 1 255 1 200 1 
353 1 186 1 102 1 173 1 255 1 200 1 29 1 
353 1 186 1 9 1 102 1 173 1 255 1 29 2 
353 2 112 1 6 1 173 2 102 2 255 2 94 1 186 1 200 1 29 1 
353 3 9 1 173 1 102 3 254 1 255 1 235 1 105 1 287 2 186 1 229 1 29 1 200 2 
353 2 97 1 305 2 9 1 173 1 102 2 274 1 255 1 150 1 287 1 186 1 244 1 65 1 200 1 29 1 
353 4 371 1 9 1 173 2 102 4 255 2 105 1 38 1 287 2 186 1 229 1 29 1 200 2 
353 1 186 1 9 1 102 1 173 1 255 1 200 1 29 1 
0 1 353 4 162 1 275 1 9 2 102 4 173 1 255 1 105 1 287 2 108 1 229 1 29 2 200 3 
353 2 239 1 173 1 102 2 9 1 255 1 287 1 186 1 312 1 200 1 29 1 246 1 
353 3 162 2 32 1 173 1 102 3 275 2 9 1 255 1 186 1 108 1 200 1 29 1 
285 1 240 1 200 2 242 2 
353 1 186 1 102 1 173 1 255 1 223 1 
353 2 287 1 186 1 9 1 102 2 173 1 255 1 200 1 29 1 235 1 
117 1 
353 1 186 1 9 1 102 1 173 1 255 1 200 1 29 1 
353 3 287 1 186 1 9 1 275 1 102 3 173 1 255 1 235 1 200 1 29 1 
0 1 105 1 229 1 200 1 
200 1 29 1 

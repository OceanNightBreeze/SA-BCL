#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 58 22 45 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 58 186 191 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 58 186 45 164 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 58 186 45 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 58 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 58 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 339 7 43 1 217 4 86 9 114 9 372 1 315 2 301 1 116 2 274 1 91 1 129 2 33 1 118 1 178 5 312 1 139 1 320 1 82 1 202 1 365 1 112 1 354 3 
133 1 339 7 43 1 86 9 114 9 217 4 372 1 315 2 301 1 116 2 274 1 91 1 129 2 33 1 118 1 178 5 312 1 139 1 320 1 82 1 202 1 365 1 112 1 354 3 
133 2 43 2 114 9 86 9 231 1 116 2 91 2 139 1 118 1 365 2 339 6 295 1 217 4 372 1 315 2 301 1 77 1 274 1 173 1 129 2 178 5 320 1 251 1 202 1 82 1 112 1 354 3 355 1 
133 2 43 2 114 9 86 9 231 1 116 2 91 2 139 1 118 1 365 2 339 6 295 1 217 4 372 1 315 2 301 1 77 1 274 1 173 1 129 2 178 5 320 1 251 1 202 1 82 1 112 1 354 3 355 1 
133 2 43 2 114 10 86 10 231 1 116 2 91 2 139 1 118 1 365 2 339 7 295 1 217 5 372 1 315 2 301 1 77 1 274 1 173 1 129 2 178 6 320 1 251 1 202 1 82 1 112 1 354 4 355 1 
133 2 43 2 114 7 86 7 231 1 116 1 91 2 139 1 118 1 365 2 339 4 295 1 217 3 372 1 315 2 301 1 77 1 173 1 129 2 178 4 320 1 251 1 202 1 82 1 112 1 354 2 355 1 
339 3 43 1 86 4 114 4 217 2 372 1 315 1 301 1 116 2 274 1 91 1 129 1 178 3 320 1 202 1 354 1 365 1 112 1 
133 1 43 1 295 1 86 2 114 2 13 1 372 1 315 1 301 1 78 1 129 1 189 1 178 1 251 1 202 1 365 1 
133 1 339 1 86 3 114 3 217 1 372 1 315 2 301 1 129 2 139 1 178 2 202 1 354 1 
176 1 203 1 244 1 
257 2 350 1 203 1 
363 1 163 2 265 2 14 2 56 2 198 2 243 2 64 1 
182 1 228 1 136 1 156 1 90 2 30 1 188 1 4 1 363 1 163 2 284 1 265 3 337 2 56 2 140 2 9 1 314 1 236 1 342 1 11 1 14 2 198 2 243 3 76 1 171 2 39 1 246 1 40 1 200 1 348 1 221 1 144 1 17 1 111 2 305 1 64 1 322 1 
377 1 363 1 163 1 280 1 265 1 14 1 56 1 198 1 128 1 243 1 
204 1 209 1 243 1 127 1 128 1 263 1 92 1 176 1 163 1 222 1 190 1 265 1 20 1 203 1 
14 1 198 1 243 1 127 1 128 1 263 1 92 2 176 1 163 1 222 1 190 1 265 1 56 1 20 2 203 1 
92 1 250 1 281 1 20 1 89 1 
92 2 294 1 176 1 250 1 281 1 20 2 24 1 203 1 
92 1 250 1 20 1 
280 1 281 1 14 1 198 1 128 1 243 1 92 1 377 1 363 1 163 1 265 1 56 1 20 1 290 1 
203 1 
313 1 92 2 176 1 250 1 281 1 20 2 24 1 203 1 
253 1 47 1 240 1 195 2 281 2 208 2 219 2 357 1 92 5 53 1 176 1 162 1 250 2 63 1 20 5 24 1 289 1 166 1 203 1 
64 1 244 1 
184 1 153 1 14 1 198 1 243 2 163 2 265 2 56 1 64 2 
31 1 1 1 71 1 
314 1 236 1 182 1 74 1 243 1 136 1 171 1 90 1 39 1 4 1 348 1 144 1 221 1 265 1 111 1 64 1 
314 1 236 1 182 1 14 1 243 2 136 1 171 1 39 1 90 1 31 1 348 1 4 1 107 1 376 1 221 1 144 1 163 1 265 2 56 1 111 1 
204 1 343 1 184 1 344 1 28 1 14 4 198 1 243 5 376 2 107 1 163 5 265 5 56 4 64 1 
377 1 163 2 185 1 265 2 14 2 56 2 128 1 243 2 
376 1 163 3 265 3 14 3 198 1 56 3 243 3 64 1 
377 1 163 1 265 1 14 1 56 1 128 1 243 1 
184 1 163 1 153 1 265 1 14 1 56 1 198 1 128 1 243 1 
182 1 228 1 184 1 136 1 90 1 263 1 92 1 4 1 363 1 163 3 284 1 190 1 265 4 337 2 56 3 140 1 9 1 314 1 236 1 342 1 11 1 14 3 198 2 127 1 75 1 243 4 128 1 76 1 171 1 39 1 246 1 40 1 348 1 376 1 107 1 221 1 144 1 349 1 222 1 111 1 20 1 305 1 64 1 322 1 
204 1 376 1 163 2 28 1 265 2 14 1 56 1 243 2 64 1 
25 1 184 1 14 3 198 1 128 1 243 3 75 1 127 1 263 1 92 1 107 1 376 2 163 3 222 1 190 1 265 3 56 3 20 1 203 1 
184 1 14 2 198 1 243 2 31 1 376 1 163 2 265 2 71 1 56 2 
236 1 314 1 182 1 243 1 136 1 171 1 90 1 39 1 4 1 348 1 144 1 221 1 265 1 111 1 64 1 
236 1 314 1 182 1 88 1 243 1 136 1 171 1 90 1 39 1 159 1 348 1 221 1 265 1 111 1 64 1 
85 1 228 1 183 1 1 2 260 1 230 1 30 2 31 2 284 1 288 1 337 2 71 2 140 4 292 1 342 1 168 1 11 1 12 1 76 2 40 1 317 1 175 1 319 1 322 1 
222 1 163 1 185 1 265 1 14 1 56 1 128 1 243 1 
311 1 199 1 
311 1 199 1 
210 1 249 1 
210 1 249 1 
210 1 249 1 
255 1 311 1 199 1 
255 1 311 1 199 1 
120 1 311 1 199 1 
210 1 264 1 311 2 249 1 300 1 199 2 
255 1 311 1 199 1 
311 1 199 1 345 1 
311 1 199 1 345 1 
311 1 199 1 345 1 
113 1 256 1 92 1 311 1 163 2 265 2 96 1 56 2 35 1 340 1 120 1 14 2 59 1 169 1 197 1 199 1 243 2 351 1 80 1 145 1 224 1 110 1 20 1 64 1 
227 1 113 2 66 1 57 1 101 2 300 1 197 1 104 1 199 2 41 1 92 2 247 1 311 2 145 2 80 3 224 2 35 2 20 2 203 1 
91 1 43 1 365 1 
43 1 189 1 365 1 
91 2 108 1 43 3 189 1 283 1 259 1 
91 1 108 1 43 2 189 1 283 1 170 1 
91 1 108 1 43 2 189 1 283 2 
84 2 306 1 257 3 183 1 46 1 307 1 208 1 281 4 230 1 357 3 92 5 53 1 95 1 96 1 72 1 340 1 367 1 370 2 194 1 195 1 219 1 60 2 317 1 175 1 350 1 176 1 351 1 250 1 63 2 20 5 24 1 203 2 
151 1 280 1 281 2 89 1 92 2 363 1 163 1 265 1 56 1 290 1 270 1 122 1 14 1 198 1 128 1 243 1 377 1 176 1 250 1 20 2 203 1 
84 1 306 1 183 1 257 4 307 1 281 2 208 1 357 3 230 1 92 3 162 1 72 1 367 1 370 2 194 1 195 1 219 1 60 2 317 1 176 1 175 1 350 2 351 1 63 2 20 3 203 3 
84 2 306 1 257 7 183 2 307 1 208 1 281 3 357 5 230 2 92 4 138 1 162 1 72 1 338 1 367 2 370 4 194 1 195 1 219 1 60 4 317 2 176 1 175 2 350 3 351 2 277 1 63 4 20 4 203 4 
373 1 314 1 244 1 
314 1 143 1 
132 1 
314 1 348 1 221 1 
314 1 213 1 
314 1 348 1 
373 2 314 3 348 1 221 1 308 1 165 1 
140 7 205 1 12 2 260 3 27 1 230 1 49 1 76 3 30 4 361 1 304 1 317 1 201 1 94 1 70 1 321 1 34 2 
140 7 205 1 12 2 260 3 27 1 230 1 49 1 76 3 30 4 361 1 304 1 317 1 201 1 94 1 70 1 321 1 34 2 
140 7 205 1 12 2 260 3 27 1 230 1 49 1 76 3 273 1 30 4 361 1 304 1 317 1 201 1 94 1 70 1 321 1 34 2 
205 1 326 1 183 3 135 1 260 10 27 5 230 4 49 2 30 16 361 1 68 1 284 1 94 2 70 2 337 2 34 3 140 31 342 1 367 3 11 1 12 5 58 1 76 15 272 1 142 3 304 1 201 2 317 4 175 3 223 4 146 1 352 1 321 1 322 1 
205 1 135 1 260 4 27 1 2 1 230 1 49 1 30 5 284 2 94 1 70 1 364 1 337 4 34 2 140 9 342 2 11 2 12 3 76 4 304 1 317 1 201 1 321 1 322 2 
133 1 43 2 114 2 86 2 259 1 87 1 155 1 90 1 91 1 233 1 189 1 55 1 365 1 236 1 339 1 237 1 238 1 99 1 372 1 297 1 315 1 301 1 171 1 39 1 303 1 129 1 178 1 111 1 202 1 21 1 
133 1 43 2 114 3 86 3 259 1 87 1 155 1 90 1 359 1 91 1 333 1 233 1 189 1 55 1 365 1 236 1 237 1 339 2 372 1 297 1 315 1 301 1 171 1 39 1 303 1 129 1 178 1 111 1 21 1 83 1 
133 1 43 2 114 2 86 2 259 1 87 1 90 1 359 1 91 1 333 1 233 1 189 1 365 1 236 1 237 1 339 2 372 1 297 1 301 1 171 1 39 1 303 1 178 1 111 1 21 1 
0 1 133 2 114 1 86 1 261 1 136 1 90 1 158 1 235 1 236 1 314 1 237 2 38 1 242 1 315 1 171 1 39 1 303 2 129 1 348 1 111 1 83 1 21 2 
133 1 43 2 114 1 86 1 259 1 87 1 155 1 90 1 91 1 333 1 233 1 189 1 55 1 365 1 236 1 237 1 238 1 297 1 315 1 171 1 39 1 303 1 129 1 111 1 202 1 21 1 
267 1 
150 2 324 1 204 1 208 1 328 1 357 1 209 1 3 3 330 3 263 1 360 5 92 4 53 1 54 1 163 1 117 1 190 1 265 1 287 1 97 1 366 1 141 2 293 2 239 3 195 1 241 1 219 1 126 1 243 1 127 1 128 1 174 1 176 1 350 2 222 1 250 5 148 2 130 1 63 1 20 4 24 2 203 1 
150 2 324 1 204 1 208 1 328 1 357 1 209 1 3 3 330 3 263 1 360 5 92 4 53 1 54 1 163 1 117 1 190 1 265 1 287 1 97 1 366 1 141 2 293 2 239 3 195 1 241 1 219 1 126 1 127 1 243 1 128 1 174 1 176 1 350 2 222 1 250 5 148 2 130 1 63 1 20 4 24 2 203 1 
324 1 204 1 257 2 208 1 328 1 357 1 209 1 3 2 330 2 263 1 360 4 92 4 53 1 163 1 190 1 287 1 265 1 97 1 141 2 293 2 216 1 239 2 195 1 371 1 219 1 243 1 127 1 128 1 174 1 176 1 222 1 250 4 130 1 63 1 42 2 20 4 24 2 23 2 203 1 
324 1 328 1 136 2 329 1 3 2 330 2 90 2 92 5 53 1 190 1 287 1 6 1 97 1 141 2 236 1 100 1 293 2 239 2 195 1 243 1 348 1 350 2 250 6 148 2 63 2 111 2 20 5 24 3 203 2 150 2 306 1 204 1 257 2 208 1 261 1 357 2 209 1 157 1 158 1 263 1 360 4 163 1 265 1 366 1 314 1 371 1 219 1 127 1 128 1 171 2 39 1 174 1 176 1 222 1 130 1 
313 1 204 1 328 1 209 1 128 1 243 1 127 1 3 1 360 2 263 1 92 3 174 1 222 1 163 1 190 1 250 2 287 1 265 1 130 1 97 1 20 3 24 1 
204 1 328 1 209 1 263 1 360 3 92 3 163 1 190 1 265 1 287 1 97 1 313 1 239 1 127 1 243 1 128 1 174 1 222 1 176 1 250 1 130 1 20 3 24 1 203 1 
313 1 204 1 239 1 328 1 209 1 128 1 243 1 127 1 3 1 330 1 360 3 263 1 92 3 174 1 176 1 222 1 163 1 190 1 250 2 287 1 265 1 130 1 97 1 20 3 24 1 203 1 
324 1 328 1 3 4 330 4 92 5 53 1 54 1 190 1 287 1 97 1 141 2 293 2 239 4 195 1 241 1 243 1 350 2 250 7 148 2 63 1 20 5 24 3 203 5 150 2 204 1 208 1 209 1 357 1 360 6 263 1 163 1 117 1 265 1 366 1 313 1 219 1 126 1 128 1 127 1 174 1 79 1 222 1 176 5 130 1 
324 1 328 1 3 2 330 2 92 4 53 1 190 1 287 1 97 1 141 2 293 2 239 2 195 1 243 1 350 2 250 4 148 2 63 1 20 4 24 2 203 2 150 2 204 1 257 2 208 1 209 1 357 1 360 4 263 1 163 1 265 1 366 1 219 1 371 1 128 1 127 1 174 1 222 1 176 1 130 1 
150 2 324 1 204 1 208 1 328 1 357 1 209 1 3 2 330 2 263 1 360 4 92 4 53 1 54 1 163 1 117 1 190 1 265 1 287 1 97 1 366 1 141 2 293 2 239 2 195 1 241 1 219 1 127 1 243 1 128 1 174 1 176 1 350 2 222 1 250 4 148 2 130 1 63 1 20 4 24 2 203 1 
150 2 324 1 204 1 208 1 328 1 357 1 209 1 3 2 330 2 263 1 360 4 92 4 53 1 54 1 163 1 117 1 190 1 265 1 287 1 97 1 366 1 141 2 293 2 239 2 195 1 241 1 219 1 127 1 243 1 128 1 174 1 176 1 350 2 222 1 250 4 148 2 130 1 63 1 20 4 24 2 203 1 
324 1 204 1 325 1 257 2 208 1 328 1 357 1 209 1 3 2 330 2 263 1 360 4 92 4 53 1 163 1 117 1 190 1 265 1 287 1 97 1 141 2 269 1 293 2 216 1 239 2 195 1 219 1 127 1 243 1 128 1 174 1 176 1 222 1 250 4 130 1 63 1 42 2 20 4 24 2 23 2 203 1 
205 1 85 1 228 1 1 1 260 2 230 1 31 1 30 3 284 1 70 1 337 2 71 1 34 1 140 6 342 1 11 1 12 2 76 3 244 1 40 1 304 1 201 1 317 1 321 1 322 1 64 2 
326 1 134 1 228 1 183 2 1 11 260 2 27 1 29 1 230 2 31 11 30 8 284 2 286 1 337 4 71 4 140 14 342 2 367 2 11 2 12 1 58 1 76 6 246 1 40 2 142 3 317 1 17 1 177 1 175 1 223 3 149 1 64 1 322 2 
182 1 228 1 282 1 136 1 90 1 30 1 4 1 163 1 284 1 265 2 337 2 71 1 56 1 140 2 314 1 236 1 341 1 342 1 74 1 11 1 14 1 243 2 171 1 76 1 39 1 40 1 246 1 348 1 376 1 107 1 221 1 144 1 17 1 177 1 109 1 111 1 64 1 322 1 
182 2 228 3 183 2 1 7 230 3 136 1 232 1 90 3 4 2 333 1 284 3 93 2 337 6 56 1 140 20 236 2 342 3 11 3 12 4 14 1 298 1 243 3 346 2 246 1 348 2 304 1 107 1 201 1 144 2 17 1 111 3 305 2 64 2 65 1 205 1 260 8 27 4 31 7 30 10 163 1 70 1 265 3 71 7 34 1 314 2 367 2 76 10 171 3 39 2 40 3 376 1 317 3 221 2 177 1 175 2 275 2 321 1 322 3 179 2 
85 1 228 2 261 1 136 2 90 8 158 1 30 1 188 2 332 1 333 1 163 1 334 1 284 2 265 1 337 4 56 1 140 2 236 2 314 3 342 2 99 1 192 1 11 2 14 1 243 1 171 8 76 1 347 1 39 2 40 2 246 1 348 2 376 1 18 1 17 1 276 1 147 1 111 7 322 2 
184 1 228 1 183 1 1 1 260 1 230 1 31 1 30 1 163 1 284 1 265 1 337 2 71 1 56 1 140 3 342 1 367 1 11 1 12 1 14 1 198 1 243 1 76 2 40 1 317 1 177 1 175 1 322 1 379 1 
140 2 85 1 342 1 168 1 228 1 183 1 11 1 1 1 260 1 27 1 230 1 31 1 40 1 30 2 284 1 337 2 71 1 322 1 
140 2 292 1 85 1 342 1 228 1 11 1 12 1 1 1 260 1 76 2 31 1 40 1 317 1 175 1 284 1 337 2 71 1 322 1 
85 1 183 1 228 1 1 2 260 2 27 1 230 1 30 2 31 2 284 1 337 2 71 2 140 4 367 1 342 1 11 1 12 1 76 2 40 1 317 1 175 1 322 1 
140 2 342 1 168 1 228 1 183 1 11 1 1 1 260 1 27 1 230 1 31 1 40 1 30 2 334 1 284 1 337 2 71 1 322 1 
140 2 292 1 342 1 228 1 11 1 12 1 1 1 260 1 76 2 31 1 40 1 317 1 334 1 175 1 284 1 337 2 71 1 322 1 
183 1 228 1 1 2 260 2 27 1 230 1 30 2 31 2 334 1 284 1 337 2 71 2 140 4 367 1 342 1 11 1 12 1 76 2 40 1 317 1 175 1 322 1 
183 1 228 1 1 2 260 2 27 1 230 1 30 2 31 2 284 1 337 2 71 2 140 4 367 1 342 1 11 1 12 1 76 2 40 1 317 1 175 1 322 1 
182 1 228 1 136 1 90 1 30 1 4 1 284 1 265 1 337 2 140 2 236 1 314 1 342 1 11 1 243 1 171 1 76 1 39 1 40 1 246 1 348 1 221 1 144 1 17 1 111 1 305 1 64 1 322 1 
254 1 182 1 228 1 88 1 136 1 90 1 30 1 159 1 284 1 265 1 337 2 140 2 236 1 314 1 342 1 11 1 243 1 171 1 76 1 39 1 40 1 246 1 348 1 221 1 17 1 111 1 64 1 322 1 
183 1 228 1 1 2 260 2 27 1 230 1 30 2 31 2 284 1 337 2 71 2 140 4 367 1 342 1 11 1 12 1 76 2 40 1 317 1 177 1 175 1 322 1 
182 1 183 1 228 1 1 2 260 2 27 1 230 1 90 1 31 2 30 2 4 1 284 1 265 1 337 2 71 2 140 4 236 1 314 1 342 1 367 1 99 1 11 1 12 1 243 1 76 2 171 1 39 1 40 1 348 1 317 1 221 1 144 1 175 1 111 1 305 1 179 1 322 1 
184 1 228 1 183 1 1 1 260 1 27 1 230 1 30 2 31 1 163 1 284 1 265 1 337 2 56 1 71 1 140 3 342 1 367 1 11 1 14 1 198 1 243 1 76 1 40 1 317 1 175 1 177 1 252 1 322 1 
326 1 45 1 183 2 260 3 27 2 186 2 230 2 30 10 164 1 284 2 364 1 337 4 191 1 140 21 36 1 342 2 367 2 11 2 12 1 58 3 299 3 125 1 76 11 61 1 142 3 248 1 317 2 175 2 223 4 22 1 322 2 
326 1 45 1 183 2 260 4 27 2 186 2 230 2 30 8 164 1 284 2 364 1 337 4 191 1 140 17 36 1 342 2 367 2 11 2 12 2 58 2 299 2 125 1 76 9 61 1 142 2 248 1 317 2 175 2 223 3 322 2 
205 1 45 1 260 1 186 1 230 1 30 5 164 1 284 1 70 1 364 1 337 2 34 1 140 9 342 1 11 1 12 1 58 1 125 1 299 1 76 4 142 1 304 1 317 1 201 1 223 1 321 1 322 1 
326 1 45 1 183 3 260 6 27 3 186 1 230 3 137 1 30 9 164 1 284 2 364 1 337 4 140 19 36 1 342 2 367 3 11 2 12 3 58 1 299 2 125 1 76 10 61 1 142 1 248 2 317 3 175 3 223 2 322 2 
140 4 342 1 45 2 11 1 58 1 186 2 125 1 299 1 76 2 142 1 30 2 223 1 284 1 164 1 364 1 337 2 322 1 
181 1 113 1 41 1 311 1 145 1 224 1 300 1 104 1 199 1 35 1 
120 1 169 1 
113 1 206 1 311 1 48 1 145 1 278 1 224 1 199 1 35 1 
255 1 296 1 
264 1 345 1 50 1 
227 1 113 1 57 1 101 1 300 1 197 1 104 1 199 1 41 1 92 1 247 1 311 1 145 1 80 2 224 1 20 1 35 1 203 1 
227 1 113 1 57 1 101 1 300 1 197 1 104 1 199 1 41 1 92 1 247 1 311 1 145 1 80 2 224 1 20 1 35 1 203 1 
227 1 113 1 57 1 101 1 300 1 197 1 104 1 199 1 41 1 92 1 247 1 311 1 145 1 80 2 224 1 20 1 35 1 203 1 
255 1 264 1 296 1 
255 1 264 1 296 1 
345 1 50 1 
264 1 345 1 50 1 
256 1 110 1 
113 1 256 1 281 1 92 1 362 1 311 1 163 2 265 2 96 1 56 2 35 1 340 1 120 1 101 1 59 1 14 2 169 1 243 2 199 1 247 1 351 1 145 1 80 1 224 1 110 1 20 1 64 1 
228 1 207 1 90 2 30 1 67 1 188 2 332 1 163 2 284 1 265 2 337 2 140 2 236 1 314 1 342 1 215 1 11 1 369 1 124 1 243 2 171 2 76 1 39 1 40 1 246 1 348 1 17 1 177 1 147 1 111 2 322 1 
180 1 236 1 43 2 99 1 259 1 356 1 87 1 297 1 171 2 155 1 39 1 90 2 91 1 333 1 189 1 285 1 111 2 365 1 21 1 
236 1 43 2 259 1 356 1 87 1 297 1 171 1 155 1 90 1 39 1 91 1 16 1 333 1 189 1 111 1 365 1 21 1 
236 1 314 1 242 1 103 1 261 1 136 1 171 1 39 1 90 1 158 1 348 1 285 1 111 1 21 1 
180 1 236 1 43 2 259 1 356 1 87 1 297 1 171 1 155 1 90 1 39 1 91 1 333 1 189 1 285 1 111 1 365 1 21 1 
378 1 
182 1 228 1 136 1 90 1 4 1 363 1 163 2 284 1 265 3 337 2 56 2 140 1 9 1 236 1 314 1 342 1 11 1 14 2 198 2 243 3 76 1 171 1 39 1 246 1 40 1 348 1 144 1 221 1 111 1 305 1 64 1 322 1 
306 1 257 4 100 1 370 2 195 1 208 1 219 1 357 1 60 2 53 1 350 2 176 2 63 2 34 1 203 4 
253 1 176 1 240 1 357 1 63 1 203 1 244 1 
150 1 257 1 208 1 357 1 92 1 53 1 366 1 195 1 219 1 350 1 176 1 250 1 148 1 63 1 20 1 24 1 203 2 
183 2 327 2 230 2 136 1 51 1 90 3 187 1 52 2 92 5 53 4 190 2 8 2 291 2 236 4 99 1 100 1 240 1 195 4 60 6 346 2 245 1 143 3 348 3 350 6 250 5 111 3 63 8 20 5 24 3 203 8 253 1 306 2 257 12 208 4 357 9 212 1 213 2 266 2 165 1 314 10 268 2 37 1 367 2 271 2 370 6 219 4 171 3 172 2 39 3 373 2 221 3 317 2 176 2 175 2 
306 1 257 6 183 2 208 2 357 8 230 2 92 1 32 1 53 2 291 2 367 2 100 1 119 1 370 5 58 1 195 2 218 1 123 1 219 2 15 1 60 5 172 1 142 1 374 1 317 2 350 3 175 2 176 2 223 1 250 1 63 5 20 1 24 1 22 1 203 5 
205 1 229 1 280 1 208 1 230 2 357 2 92 1 53 1 363 1 163 1 70 1 265 1 56 1 291 1 290 1 195 1 241 1 219 1 14 1 198 1 128 1 243 1 172 1 377 1 201 1 317 1 63 2 20 1 
253 1 195 1 240 1 208 1 219 1 357 1 53 1 176 1 63 1 203 1 
367 2 183 2 257 10 370 5 230 2 357 5 60 5 346 1 172 1 317 2 350 5 175 2 63 5 291 2 203 5 
92 1 176 1 250 1 20 1 24 1 203 1 
306 2 154 1 208 2 357 2 261 1 329 1 136 2 90 4 158 1 92 3 53 1 162 1 6 1 236 1 314 1 37 2 100 2 195 2 219 2 171 4 39 1 245 1 348 1 250 4 111 4 63 2 20 3 131 1 24 2 
113 1 224 1 262 1 
113 1 224 1 262 1 
113 1 256 1 318 1 224 1 104 1 
113 1 224 1 262 1 
113 1 224 1 19 1 
113 1 224 1 19 1 
113 1 224 1 19 1 
113 1 224 1 
311 1 199 1 
205 1 260 2 230 1 30 4 284 1 70 1 364 1 337 2 34 1 140 8 342 1 11 1 12 2 58 1 76 4 142 1 304 1 317 1 201 1 223 1 321 1 22 1 322 1 
205 1 326 1 183 1 260 3 27 1 230 2 30 6 284 2 70 1 364 1 337 4 34 1 140 11 342 2 367 1 11 2 12 2 121 1 58 1 76 5 142 1 304 1 317 1 201 1 223 2 321 1 22 1 322 2 
140 2 342 1 11 1 58 1 76 1 30 1 142 1 284 1 223 1 364 1 337 2 22 1 322 1 
205 1 183 2 135 1 260 5 27 2 230 3 30 10 284 3 70 1 364 1 337 6 34 1 140 17 342 3 367 2 11 3 119 1 12 3 121 1 58 1 218 1 15 1 76 7 142 1 374 1 304 1 201 1 317 2 175 1 223 1 321 1 22 1 322 3 
205 1 260 2 230 1 30 4 284 1 70 1 364 1 337 2 34 1 140 8 342 1 11 1 12 2 58 1 76 4 142 1 304 1 317 1 201 1 223 1 321 1 22 1 322 1 
140 2 342 1 11 1 58 1 76 1 30 1 142 1 284 1 223 1 364 1 337 2 22 1 322 1 
205 1 183 2 135 2 260 5 27 2 230 3 30 10 284 4 70 1 364 1 337 8 34 1 140 18 342 4 367 2 11 4 119 1 12 3 121 1 58 1 218 1 15 1 76 8 142 1 374 1 304 1 201 1 317 2 175 1 223 1 321 1 22 1 322 4 
183 3 135 2 260 6 27 3 230 3 30 9 284 4 364 1 337 8 140 16 342 4 367 3 11 4 119 1 12 3 58 1 218 1 15 1 76 7 61 1 142 1 374 1 317 2 175 2 223 1 22 1 322 4 
140 7 205 1 12 3 260 6 27 3 230 1 76 4 30 3 304 1 317 1 201 3 70 3 321 2 
205 1 183 2 135 2 260 4 27 1 230 3 30 10 284 4 70 1 364 1 337 8 34 1 140 18 342 4 367 2 11 4 119 1 12 3 58 1 218 1 15 1 76 8 61 1 142 1 374 1 304 1 201 1 317 2 175 1 223 1 321 1 22 1 322 4 
140 8 205 1 342 2 11 2 135 1 12 2 260 3 27 1 230 1 76 4 30 4 304 1 317 1 201 1 284 2 70 1 337 4 321 1 34 1 322 2 
140 6 30 3 205 1 304 1 317 1 201 1 12 2 260 2 70 1 230 1 321 1 34 1 76 3 244 1 
140 4 342 1 367 1 183 1 11 1 12 1 121 1 260 2 27 1 230 1 76 2 30 2 317 1 175 1 284 1 337 2 322 1 
140 2 30 1 142 1 223 1 58 1 76 1 
205 1 326 1 183 2 135 1 260 4 27 1 230 3 30 9 284 1 70 1 286 1 337 2 34 1 140 18 367 2 342 1 11 1 12 3 76 9 142 2 304 1 201 1 317 3 175 2 223 2 321 1 149 1 322 1 
140 1 223 1 76 1 
140 1 30 1 142 1 
140 6 342 1 367 1 183 1 11 1 12 2 121 1 260 3 27 1 230 1 346 1 76 3 30 3 317 1 175 1 284 1 337 2 322 1 
183 2 260 2 27 1 230 2 30 6 284 1 364 1 337 2 140 12 342 1 367 2 11 1 119 1 12 1 58 1 218 1 15 1 76 6 142 1 374 1 317 2 175 2 223 1 22 1 322 1 
140 6 205 1 12 1 260 2 27 1 230 1 76 3 30 3 317 1 201 1 70 1 
140 3 342 1 135 1 11 1 12 1 260 2 27 1 76 2 30 1 316 1 304 1 201 1 284 1 70 1 337 2 321 1 322 1 
140 8 205 1 12 1 229 1 260 2 27 1 230 2 76 4 30 4 201 1 317 2 70 1 
140 2 342 1 183 1 11 1 260 1 27 1 230 1 30 2 284 1 364 1 337 2 322 1 
140 4 342 1 367 1 183 1 11 1 12 1 260 2 27 1 230 1 76 2 30 2 317 1 175 1 284 1 364 1 337 2 322 1 
140 3 342 3 135 1 11 3 12 1 260 2 27 1 76 2 61 1 316 1 30 1 201 1 284 3 70 1 364 1 337 6 322 3 
205 2 326 1 183 3 135 2 260 12 27 5 230 5 30 16 68 1 284 5 70 3 364 1 337 10 34 1 140 34 342 5 367 3 11 5 12 7 121 1 58 1 76 18 272 1 61 1 316 1 142 3 304 1 201 3 317 5 175 3 223 4 352 1 321 1 322 5 
310 1 204 1 163 1 28 1 265 1 243 1 64 1 
204 1 73 1 28 1 243 1 310 1 161 1 5 1 163 1 69 1 335 1 265 1 64 1 
39 1 158 1 90 1 236 1 314 1 348 1 261 1 111 1 136 1 171 1 244 1 
314 1 236 1 182 1 14 1 243 2 136 1 171 1 90 1 39 1 348 1 4 1 376 1 221 1 163 1 265 2 56 1 111 1 64 1 
314 3 236 1 182 1 37 1 14 2 128 1 243 2 171 1 90 1 39 1 263 1 348 2 4 1 376 1 221 2 222 1 163 2 213 1 265 2 56 1 111 1 8 1 64 1 
314 3 236 1 182 1 37 1 14 2 196 1 128 1 243 2 171 2 90 2 39 1 263 1 159 1 348 2 376 1 221 2 222 1 163 2 213 1 265 2 56 1 111 2 8 1 64 1 
323 1 236 1 314 4 37 1 196 1 136 1 171 3 90 3 373 1 39 1 106 1 92 2 348 1 143 1 221 1 176 1 213 1 190 1 250 1 111 3 8 1 20 2 203 1 
236 1 268 1 314 4 37 1 196 1 136 1 171 3 90 3 373 1 39 1 92 2 348 1 143 1 221 1 176 1 213 1 190 1 250 1 111 3 8 1 20 2 203 1 
39 1 90 1 236 1 276 1 111 1 171 1 
314 3 236 3 99 1 192 1 368 1 136 2 171 7 347 1 90 7 39 2 302 1 188 1 348 2 333 1 221 1 18 1 276 1 147 1 81 1 111 6 165 1 
182 1 228 2 1 1 230 1 90 1 4 1 284 2 337 4 56 1 140 6 236 1 342 2 99 1 11 2 12 2 14 1 243 2 348 1 304 1 144 1 201 1 111 1 305 1 64 2 205 1 260 2 30 3 31 1 67 1 163 1 70 1 265 2 71 1 34 1 314 1 171 1 76 3 39 1 40 2 376 1 221 1 317 1 177 1 275 1 321 1 179 1 322 2 
253 1 208 2 281 1 357 1 136 1 90 1 92 3 52 1 53 2 190 1 266 1 268 1 314 2 271 1 240 1 195 2 219 2 171 1 245 1 373 1 143 1 176 1 250 2 63 1 111 1 20 3 24 1 203 1 
314 2 236 2 99 1 171 2 373 1 90 2 39 1 187 1 348 1 221 1 276 1 111 2 165 1 
236 1 314 1 99 1 196 1 261 1 136 1 171 4 90 4 158 1 39 1 348 1 336 1 111 4 
314 1 236 2 37 1 368 1 298 1 105 1 171 2 90 2 39 1 348 1 221 1 234 1 81 1 111 2 
39 1 90 1 236 1 43 1 189 1 297 1 111 1 365 1 136 1 171 1 
314 1 236 1 99 1 215 1 171 2 90 2 39 1 348 1 333 1 147 1 111 2 
314 3 236 2 37 1 99 1 261 1 136 1 171 5 347 1 158 1 90 5 39 2 348 2 18 1 336 1 147 1 111 4 
314 3 236 2 37 1 99 1 261 1 136 1 171 5 347 1 158 1 90 5 39 2 211 1 348 2 336 1 147 1 111 4 
314 1 236 1 182 1 14 1 243 2 136 1 171 1 90 1 39 1 159 1 348 1 376 1 221 1 163 1 265 2 56 1 111 1 64 1 
314 1 236 2 37 1 368 1 171 1 90 1 39 1 302 1 348 1 221 1 81 1 111 1 165 1 
279 1 258 1 7 1 309 1 64 1 
279 2 26 1 258 2 281 1 128 1 75 1 127 1 309 2 331 1 263 1 160 1 92 2 176 1 222 1 190 1 7 1 20 2 64 1 203 1 
279 1 258 1 369 1 207 1 124 1 243 1 163 1 265 1 7 1 
331 1 26 1 7 1 
339 1 129 1 114 3 86 3 118 1 178 1 372 1 251 1 315 1 202 1 301 1 
167 1 217 1 178 1 354 1 
178 1 372 1 
178 1 372 1 301 1 244 1 
129 1 114 1 86 1 178 1 372 1 315 1 301 1 
133 1 303 1 114 1 
129 1 375 1 114 3 86 3 178 1 115 1 372 1 251 2 226 1 315 1 202 1 301 1 
339 1 129 1 114 2 86 2 178 1 372 1 315 1 301 1 116 1 
43 1 86 1 114 1 217 1 315 1 91 1 129 1 178 1 202 1 112 1 365 1 
129 1 114 1 86 1 178 1 372 1 315 1 202 1 
129 1 114 1 86 1 372 2 315 1 202 1 301 1 
214 1 129 2 114 2 86 2 178 1 372 1 315 2 202 1 353 1 98 1 
339 2 86 3 114 3 217 1 372 1 315 1 301 1 129 1 118 1 178 2 202 1 82 1 354 1 
339 1 43 2 86 2 114 2 152 1 259 1 372 1 315 1 301 1 91 1 129 1 189 1 178 1 202 1 365 1 
339 2 86 4 114 4 217 1 372 1 315 2 301 1 116 1 274 1 129 2 178 2 202 1 354 1 
129 1 114 1 86 1 178 1 372 1 315 1 202 1 301 1 
167 1 339 2 86 4 114 4 217 1 372 2 315 1 301 2 129 1 375 1 178 3 251 1 226 1 354 1 
339 1 44 1 86 2 114 2 372 1 315 1 301 1 62 1 129 1 178 1 312 1 202 1 
86 3 114 3 372 1 315 1 358 1 301 1 129 1 375 2 178 1 251 2 226 1 202 1 
193 1 178 2 102 1 220 2 
10 1 129 1 114 1 86 1 315 1 202 1 
339 1 129 1 114 2 86 2 178 1 118 1 372 1 315 1 202 1 301 1 
225 1 
129 1 114 1 86 1 178 1 372 1 315 1 202 1 301 1 

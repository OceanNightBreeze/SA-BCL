#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 182 22 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 182 22 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (64,85) (64,85) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (64,85) 164 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (64,85) (64,85) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
57 2 361 1 130 1 110 9 3 4 345 2 220 1 248 2 222 1 249 1 251 2 200 2 281 1 229 1 280 3 14 2 15 1 95 9 69 1 98 1 17 6 370 1 353 1 165 1 259 1 51 1 357 5 337 2 
57 2 361 1 130 1 110 9 3 4 345 2 220 1 248 2 222 1 249 1 251 2 200 2 281 1 229 1 280 3 15 1 14 2 95 9 69 1 98 1 17 6 370 1 353 1 165 1 259 1 51 1 357 5 337 2 
57 2 361 1 130 1 110 10 3 5 345 2 220 1 248 2 222 1 249 1 251 2 200 2 281 1 229 1 280 4 15 1 14 2 95 10 69 1 98 1 17 7 370 1 353 1 165 1 259 1 51 1 357 6 337 2 
57 2 130 1 110 7 3 3 345 2 220 1 248 2 222 1 249 1 251 2 200 2 281 1 229 1 280 2 15 1 14 1 95 7 69 1 98 1 17 4 370 1 353 1 165 1 259 1 51 1 357 4 337 2 
57 1 280 1 361 1 281 1 130 1 14 2 95 4 110 4 17 3 353 1 3 2 259 1 248 1 249 1 357 3 337 1 251 1 200 1 
57 1 229 1 130 1 95 2 110 2 302 1 370 1 353 1 113 1 345 1 221 1 248 1 249 1 357 1 251 1 337 1 
57 2 280 1 130 1 95 3 110 3 17 1 353 1 3 1 345 1 51 1 249 1 357 2 251 2 
57 2 361 1 130 1 176 1 110 9 3 4 345 1 220 1 248 1 249 1 251 2 200 1 280 3 281 1 14 2 95 9 69 1 17 7 353 1 259 1 51 1 357 5 174 1 337 1 
57 2 361 1 130 1 176 1 110 9 3 4 345 1 220 1 248 1 249 1 251 2 200 1 280 3 281 1 14 2 95 9 69 1 17 7 353 1 259 1 51 1 357 5 174 1 337 1 
144 1 171 1 91 1 
67 1 171 1 212 2 
157 1 247 2 266 1 139 2 331 2 223 2 232 2 341 2 
342 1 360 1 105 1 25 1 27 1 266 1 179 1 303 1 246 1 114 1 197 2 269 1 247 3 6 2 183 1 154 2 326 1 273 1 223 3 189 1 157 1 13 1 228 1 46 1 284 1 97 1 139 2 331 2 99 1 101 1 232 2 290 1 339 2 75 1 213 2 215 1 341 2 
247 1 131 1 266 1 139 1 173 1 331 1 223 1 232 1 341 1 43 1 
243 1 60 1 329 1 369 1 87 1 232 1 247 1 260 1 171 1 91 1 173 1 223 1 38 1 201 1 
243 1 329 1 139 1 331 1 87 1 232 1 247 1 260 2 171 1 91 1 173 1 223 1 38 2 201 1 341 1 
235 1 260 1 230 1 38 1 205 1 
235 1 260 2 171 1 91 1 309 1 38 2 205 1 202 1 
235 1 260 1 38 1 
131 1 266 1 139 1 331 1 205 1 232 1 257 1 247 1 260 1 173 1 223 1 38 1 43 1 341 1 
171 1 
235 1 260 2 171 1 91 1 309 1 38 2 205 1 293 1 
363 2 205 2 231 1 30 1 50 1 235 2 260 5 315 1 63 1 171 1 91 1 53 1 275 2 54 1 309 1 38 5 294 1 349 1 328 2 
157 1 144 1 
157 2 139 1 331 1 320 1 232 2 247 2 153 1 223 2 341 1 
161 1 9 1 74 1 
157 1 228 1 25 1 284 1 97 1 109 1 99 1 246 1 247 1 269 1 6 1 183 1 326 1 154 1 223 1 339 1 
228 1 25 1 284 1 97 1 139 1 99 1 331 1 246 1 232 1 321 1 269 1 247 2 6 1 183 1 289 1 326 1 154 1 223 2 9 1 339 1 
321 1 157 1 247 3 139 3 331 3 223 3 341 1 232 3 
247 1 131 1 139 1 173 1 331 1 223 1 232 1 
247 1 153 1 139 1 173 1 331 1 223 1 320 1 232 1 341 1 
342 1 360 1 105 1 264 1 25 1 243 1 27 1 266 1 320 1 303 1 87 1 246 1 321 1 197 2 269 1 247 4 6 1 183 1 326 1 154 1 223 4 38 1 201 1 189 1 157 1 44 1 228 1 13 1 284 1 97 1 329 1 139 3 99 1 331 3 232 3 260 1 290 1 289 1 173 1 339 1 75 1 213 1 215 1 341 2 
321 1 157 1 247 2 60 1 18 1 139 1 331 1 223 2 232 2 
44 1 243 1 329 1 139 3 331 3 300 1 320 1 87 1 232 3 321 2 247 3 260 1 289 1 171 1 173 1 223 3 38 1 201 1 341 1 
321 1 247 2 161 1 139 2 331 2 223 2 9 1 320 1 232 2 341 1 
157 1 228 1 25 1 284 1 97 1 99 1 246 1 247 1 6 1 269 1 183 1 326 1 154 1 223 1 339 1 
157 1 25 1 284 1 99 1 246 1 247 1 6 1 269 1 183 1 184 1 326 1 154 1 223 1 347 1 339 1 
342 2 78 1 105 1 129 1 196 1 27 1 303 1 135 1 197 2 36 1 274 1 137 1 9 2 189 1 159 1 161 2 101 2 123 1 141 1 102 1 290 1 74 2 75 1 213 4 
247 1 217 1 329 1 139 1 173 1 331 1 223 1 232 1 
157 1 297 1 139 4 162 1 331 4 320 1 232 4 321 2 313 1 247 4 289 1 173 1 223 4 341 1 
217 1 247 2 131 1 139 2 173 1 331 2 223 2 232 2 
89 1 240 1 
89 1 240 1 
62 1 11 1 
62 1 11 1 
62 1 11 1 
207 1 89 1 240 1 
253 1 89 1 240 1 
62 1 89 2 169 1 240 2 124 1 11 1 
207 1 89 1 240 1 
207 1 89 1 240 1 
89 1 48 1 240 1 
89 1 48 1 240 1 
89 1 48 1 240 1 
12 1 147 2 265 1 298 1 1 1 124 1 355 1 115 2 260 2 89 2 90 2 171 1 136 1 72 1 37 3 38 2 39 2 358 2 240 2 
147 1 1 1 31 1 247 2 115 1 89 1 7 1 90 1 186 1 37 1 223 2 38 1 156 1 157 1 253 1 351 1 254 1 139 2 331 2 232 2 260 1 208 1 240 1 358 1 
248 1 337 1 200 1 
248 1 337 1 113 1 
279 1 248 3 367 1 219 1 200 2 113 1 
279 1 248 2 367 1 47 1 200 1 113 1 
279 2 248 2 367 1 200 1 113 1 
363 1 344 2 31 1 271 1 36 1 63 1 91 1 274 1 275 1 309 1 38 5 225 2 117 2 349 2 328 1 41 1 67 1 254 1 159 1 70 1 205 4 141 1 258 1 142 1 333 1 235 1 260 5 208 1 171 2 292 1 212 3 294 3 
363 2 301 1 2 1 344 6 30 1 36 3 63 1 91 1 274 3 275 2 38 9 309 1 155 1 225 6 349 6 41 1 328 2 67 3 120 1 159 3 230 5 311 1 205 7 141 3 258 2 142 2 333 3 235 6 260 9 208 4 170 5 171 5 263 1 212 9 294 8 
363 1 344 2 30 1 271 1 36 1 91 1 274 1 275 1 38 3 117 1 225 2 328 1 349 2 67 2 159 1 70 1 205 2 141 1 258 1 142 1 333 1 260 3 208 1 171 3 294 3 212 4 
363 1 2 1 344 4 30 1 271 1 36 2 91 1 274 2 275 1 38 4 155 1 225 4 117 2 328 1 349 4 67 3 159 2 70 1 205 3 141 2 258 1 142 1 333 2 260 4 208 2 171 4 263 1 212 7 294 5 
269 1 83 1 144 1 
234 1 269 1 
125 1 
269 1 284 1 
269 3 83 2 45 1 284 1 246 1 93 1 
269 1 284 1 246 1 
359 1 269 1 
342 3 343 1 129 2 218 1 159 1 352 1 133 1 101 4 135 3 194 1 316 1 306 1 274 1 310 1 213 7 278 2 277 1 
342 3 343 1 129 2 218 1 159 1 352 1 133 1 101 4 135 3 194 1 316 1 306 1 274 1 310 1 213 7 278 2 277 1 
342 3 343 1 129 2 218 1 159 1 26 1 352 1 133 1 101 4 135 3 316 1 194 1 306 1 274 1 310 1 213 7 278 2 277 1 
295 1 342 15 343 2 105 1 129 5 218 2 27 1 133 1 319 1 299 1 135 10 303 1 197 2 322 1 36 3 306 5 274 4 310 2 277 1 278 3 204 1 159 4 352 2 101 16 141 3 191 1 333 3 287 1 290 1 334 3 146 4 316 1 194 1 213 31 
342 4 343 1 105 2 129 3 218 1 159 1 27 2 352 1 133 1 101 5 29 1 245 1 135 4 303 2 322 1 197 4 290 2 316 1 194 1 306 1 274 1 310 1 213 9 278 2 
57 1 130 1 25 1 110 2 219 1 113 1 345 1 6 1 323 1 366 1 183 1 248 2 35 1 154 1 249 1 198 1 251 1 200 1 199 1 95 2 17 1 353 1 166 1 193 1 357 1 103 1 337 1 339 1 317 1 214 1 
57 1 130 1 25 1 219 1 110 3 181 1 113 1 345 1 6 1 323 1 366 1 183 1 248 2 35 1 154 1 249 1 198 1 251 1 200 1 199 1 95 3 17 2 140 1 166 1 193 1 357 1 337 1 339 1 340 1 214 1 
130 1 25 1 110 2 219 1 181 1 113 1 345 1 6 1 366 1 183 1 248 2 35 1 154 1 249 1 198 1 199 1 200 1 95 2 17 2 166 1 357 1 337 1 339 1 340 1 214 1 
57 1 282 1 25 1 284 1 95 1 110 1 267 1 140 1 166 2 345 2 269 1 6 1 183 1 326 1 154 1 35 2 250 1 172 1 251 1 339 1 127 1 227 1 214 2 
57 1 25 1 110 1 219 1 181 1 113 1 345 1 6 1 323 1 366 1 183 1 248 2 35 1 154 1 198 1 251 1 200 1 199 1 95 1 353 1 166 1 193 1 337 1 339 1 317 1 214 1 
61 1 
0 1 243 1 60 1 195 1 244 2 6 2 247 1 154 2 250 1 63 1 309 3 349 2 201 1 158 2 67 2 160 1 19 1 260 5 171 2 173 1 210 2 212 2 211 1 175 1 25 1 132 2 28 2 363 1 267 1 268 1 86 1 87 1 269 1 183 1 326 2 91 1 275 1 223 1 38 5 92 1 328 1 283 2 284 1 96 4 329 1 369 1 232 1 142 1 143 1 235 6 288 2 372 1 339 2 294 2 373 1 
0 1 243 1 60 1 132 1 268 1 86 1 87 1 247 1 223 1 38 3 309 1 201 1 96 2 329 1 369 1 19 1 232 1 235 2 260 3 173 1 293 1 211 1 
0 1 243 1 60 1 268 1 86 1 244 1 87 1 247 1 91 1 223 1 38 3 309 1 201 1 96 3 329 1 369 1 19 1 232 1 235 1 260 3 171 1 173 1 293 1 211 1 
0 1 243 1 60 1 132 1 268 1 86 1 244 1 87 1 247 1 91 1 223 1 309 1 38 3 201 1 96 3 329 1 369 1 19 1 232 1 235 2 260 3 288 1 171 1 173 1 293 1 211 1 
0 1 243 1 60 1 195 1 132 4 28 2 363 1 268 1 244 4 86 1 87 1 88 1 247 1 63 1 91 5 275 1 223 1 309 3 38 5 349 1 328 1 201 1 158 2 67 2 283 2 96 6 329 1 369 1 19 1 206 1 232 1 143 1 235 7 314 1 260 5 288 4 291 1 52 1 171 5 173 1 210 2 293 1 294 1 211 1 
0 1 243 1 60 1 195 1 244 2 247 1 63 1 309 2 349 1 201 1 158 2 67 2 160 1 19 1 260 4 171 2 173 1 210 2 211 1 212 2 132 2 363 1 28 2 268 1 86 1 87 1 91 1 223 1 275 1 38 4 328 1 283 2 96 4 329 1 369 1 232 1 143 1 235 4 288 2 294 1 
0 1 243 1 60 1 132 2 195 1 28 2 363 1 268 1 244 2 86 1 87 1 247 1 88 1 63 1 91 1 223 1 275 1 309 2 38 4 349 1 328 1 201 1 158 2 67 2 283 2 96 4 329 1 369 1 19 1 206 1 232 1 235 4 143 1 314 1 260 4 288 2 171 1 173 1 210 2 294 1 211 1 
0 1 243 1 60 1 132 2 195 1 28 2 363 1 268 1 244 2 86 1 87 1 247 1 88 1 63 1 91 1 223 1 275 1 309 2 38 4 349 1 328 1 201 1 158 2 67 2 283 2 96 4 329 1 369 1 19 1 206 1 232 1 235 4 143 1 314 1 260 4 288 2 171 1 173 1 210 2 294 1 211 1 
0 1 362 2 243 1 60 1 132 2 363 1 178 2 268 1 244 2 86 1 87 1 305 1 247 1 63 1 91 1 187 1 223 1 275 1 309 2 38 4 349 1 328 1 201 1 158 2 96 4 329 1 369 1 19 1 232 1 20 1 235 4 143 1 314 1 260 4 288 2 171 1 173 1 210 2 212 2 294 1 211 1 
0 1 243 1 60 1 195 1 132 3 28 2 363 1 268 1 86 1 244 3 87 1 247 1 88 1 63 1 91 1 275 1 223 1 309 2 38 4 349 1 328 1 201 1 158 2 67 2 283 2 96 5 329 1 369 1 19 1 206 1 232 1 143 1 235 5 314 1 260 4 288 3 291 1 171 1 173 1 210 2 294 1 211 1 
0 1 243 1 60 1 195 1 132 3 28 2 363 1 268 1 86 1 244 3 87 1 247 1 88 1 63 1 91 1 275 1 223 1 309 2 38 4 349 1 328 1 201 1 158 2 67 2 283 2 96 5 329 1 369 1 19 1 206 1 232 1 143 1 235 5 314 1 260 4 288 3 291 1 171 1 173 1 210 2 294 1 211 1 
0 1 243 1 60 1 244 2 247 1 63 1 309 2 349 1 201 1 158 2 160 1 19 1 260 4 171 1 173 1 210 2 211 1 212 2 362 2 132 2 363 1 178 2 268 1 86 1 87 1 91 1 187 1 223 1 275 1 38 4 328 1 96 4 329 1 369 1 232 1 143 1 235 4 288 2 294 1 
342 3 343 1 105 1 129 2 218 1 27 1 133 1 303 1 135 2 197 2 137 1 274 1 9 1 278 1 189 1 157 2 159 1 161 1 101 3 144 1 290 1 316 1 194 1 74 1 75 1 213 6 
342 6 295 1 105 2 129 1 27 2 150 1 179 1 135 2 303 2 4 1 151 1 5 1 197 4 36 2 306 1 274 2 9 11 189 1 157 1 94 1 159 1 161 4 101 8 141 1 191 1 333 2 146 3 290 2 334 3 74 11 75 2 213 14 215 1 
342 1 105 1 25 1 27 1 109 1 179 1 303 1 246 1 304 1 321 1 269 1 6 1 247 2 197 2 183 1 272 1 154 1 326 1 223 2 189 1 157 1 228 1 284 1 94 1 97 1 161 1 139 1 99 1 331 1 255 1 101 1 232 1 289 1 290 1 339 1 75 1 213 2 215 1 
342 10 343 1 105 3 107 2 112 2 303 3 246 2 6 3 197 6 247 3 154 3 306 4 8 1 9 7 157 2 159 3 161 7 316 1 74 7 75 3 213 20 215 1 216 1 360 2 129 4 218 1 25 2 27 3 133 1 179 1 181 1 135 8 321 1 269 2 183 2 326 1 36 2 274 3 223 3 224 2 278 1 189 3 228 2 94 1 284 2 368 1 97 2 139 1 331 1 99 2 101 10 141 2 232 1 333 2 290 3 289 1 145 2 194 1 339 3 
80 1 342 1 105 2 24 1 25 2 27 2 267 1 179 1 181 1 303 2 364 1 321 1 247 1 269 3 6 8 197 4 183 2 154 8 326 2 273 2 250 1 137 1 223 1 350 1 189 2 284 2 139 1 331 1 101 1 232 1 167 1 290 2 103 1 73 1 239 1 339 7 75 2 213 2 215 1 
342 2 105 1 129 1 27 1 320 1 135 1 303 1 197 2 247 1 36 1 307 1 274 1 223 1 9 1 189 1 94 1 159 1 161 1 139 1 331 1 101 1 141 1 232 1 333 1 290 1 74 1 75 1 213 3 341 1 
189 1 105 1 27 1 161 1 101 2 123 1 135 1 303 1 197 2 290 1 36 1 306 1 137 1 274 1 9 1 74 1 75 1 213 2 
189 1 342 2 105 1 129 1 159 1 27 1 161 1 135 1 303 1 141 1 102 1 197 2 290 1 137 1 9 1 74 1 75 1 213 2 
342 2 105 1 129 1 27 1 303 1 135 2 197 2 36 1 306 1 274 1 137 1 9 2 189 1 159 1 161 2 101 2 141 1 333 1 290 1 74 2 75 1 213 4 
189 1 105 1 27 1 161 1 101 2 123 1 135 1 303 1 197 2 290 1 36 1 306 1 274 1 9 1 74 1 75 1 213 2 350 1 
189 1 342 2 105 1 129 1 159 1 27 1 161 1 135 1 303 1 141 1 102 1 197 2 290 1 9 1 74 1 75 1 213 2 350 1 
342 2 105 1 129 1 27 1 303 1 135 2 197 2 36 1 306 1 274 1 9 2 350 1 189 1 159 1 161 2 101 2 141 1 333 1 290 1 74 2 75 1 213 4 
342 2 105 1 129 1 27 1 303 1 135 2 197 2 36 1 306 1 274 1 9 2 189 1 159 1 161 2 101 2 141 1 333 1 290 1 74 2 75 1 213 4 
360 1 342 1 105 1 25 1 27 1 179 1 303 1 246 1 6 1 269 1 247 1 197 2 183 1 154 1 326 1 223 1 189 1 157 1 228 1 284 1 97 1 99 1 101 1 290 1 339 1 75 1 213 2 215 1 
342 1 105 1 25 1 27 1 179 1 303 1 246 1 6 1 269 1 247 1 197 2 183 1 184 1 154 1 326 1 347 1 223 1 189 1 157 1 284 1 99 1 101 1 192 1 290 1 339 1 75 1 213 2 215 1 
342 2 105 1 129 1 27 1 303 1 135 2 197 2 36 1 306 1 274 1 9 2 189 1 94 1 159 1 161 2 101 2 141 1 333 1 290 1 74 2 75 1 213 4 
342 2 360 1 105 1 129 1 25 1 27 1 112 1 135 2 303 1 246 1 6 1 269 1 247 1 197 2 183 1 36 1 154 1 306 1 274 1 223 1 9 2 189 1 228 1 159 1 284 1 161 2 97 1 99 1 101 2 141 1 333 1 290 1 103 1 74 2 339 1 75 1 213 4 
342 1 105 1 27 1 320 1 135 1 303 1 197 2 33 1 247 1 36 1 306 1 274 1 223 1 9 1 189 1 159 1 94 1 161 1 139 1 331 1 101 2 141 1 232 1 333 1 290 1 74 1 75 1 213 3 341 1 
318 1 128 2 342 10 295 1 105 2 129 3 148 1 27 2 245 1 303 2 135 6 182 2 197 4 36 3 306 3 274 3 66 1 118 1 159 3 138 1 100 1 101 9 141 3 22 1 191 1 333 3 146 2 290 2 334 1 213 19 
342 12 128 4 105 3 81 1 129 1 27 3 177 1 134 1 245 1 135 3 303 3 182 1 322 2 197 6 36 3 306 2 274 3 66 1 118 1 159 2 138 2 100 2 101 14 141 2 22 1 191 2 333 3 290 3 146 2 334 2 336 1 209 1 261 1 213 26 
295 1 342 21 105 3 343 1 245 1 303 3 197 6 306 4 118 1 66 1 159 5 22 1 316 1 209 1 261 1 213 41 77 1 128 4 318 1 81 1 129 3 218 1 27 3 177 1 133 1 134 1 135 7 182 1 322 1 36 4 274 5 278 1 138 2 100 1 101 20 141 4 333 4 191 3 334 3 290 3 146 4 194 1 336 1 
295 1 342 18 105 4 343 1 245 1 303 4 197 8 306 3 118 1 66 1 159 4 22 1 316 1 209 1 261 1 213 38 77 1 128 4 318 1 81 1 129 4 218 1 27 4 177 1 133 1 134 1 135 7 182 1 322 2 36 4 274 5 278 1 138 2 100 1 101 20 141 3 333 4 191 3 334 3 290 4 146 4 194 1 336 1 
128 2 342 21 295 2 343 1 81 1 105 2 129 6 218 1 27 2 177 1 133 1 150 2 134 1 245 1 303 2 135 12 182 1 322 1 197 4 36 6 306 6 274 7 66 1 118 1 278 1 159 7 138 1 100 1 101 23 141 6 22 1 191 2 333 6 146 4 290 2 334 4 316 1 194 1 336 1 209 1 261 1 213 44 
296 1 80 1 342 1 105 1 24 1 241 1 25 1 27 1 179 1 303 1 346 1 269 1 6 2 247 2 197 2 183 1 154 2 273 2 308 1 223 2 189 1 284 1 94 1 101 1 232 2 332 1 290 1 339 2 75 1 213 2 215 1 
25 1 68 1 219 1 111 1 181 1 113 1 6 2 323 1 366 1 248 2 183 1 154 2 198 1 103 1 337 1 339 2 200 1 188 1 214 1 
68 1 25 1 219 1 181 1 113 1 6 1 323 1 366 1 248 2 183 1 154 1 198 1 337 1 339 1 23 1 200 1 214 1 
25 1 284 1 111 1 267 1 269 1 6 1 183 1 335 1 326 1 154 1 250 1 339 1 227 1 214 1 
68 1 25 1 219 1 111 1 181 1 113 1 6 1 323 1 366 1 248 2 183 1 154 1 198 1 337 1 339 1 200 1 188 1 214 1 
270 1 
50 1 144 1 315 1 171 1 91 1 294 1 349 1 
195 1 28 1 363 1 63 1 91 1 275 1 309 1 38 1 349 1 328 1 67 1 283 1 235 1 260 1 171 2 294 1 212 1 
106 2 108 2 246 3 344 6 6 3 154 3 63 4 309 3 348 2 349 8 201 2 203 1 67 6 159 2 71 1 260 5 315 1 171 8 212 12 359 2 83 2 25 3 363 4 269 10 183 4 326 1 36 2 185 1 91 2 274 2 275 4 224 2 38 5 225 6 328 4 45 1 284 3 285 2 141 2 142 2 234 3 50 1 236 2 235 5 333 2 237 1 371 2 238 2 103 1 372 1 338 1 339 3 55 2 294 9 
81 1 177 1 363 2 344 5 36 2 63 2 91 1 274 2 275 2 38 1 309 1 225 5 348 1 328 2 349 4 119 1 67 3 159 2 141 2 235 1 191 1 333 2 260 1 146 1 334 1 336 1 171 4 209 1 261 1 212 6 294 7 
343 1 218 1 131 1 266 1 108 1 133 1 363 1 247 1 63 1 274 2 223 1 275 1 38 1 348 2 328 1 349 2 43 1 121 1 159 1 139 1 331 1 206 1 232 1 257 1 260 1 173 1 294 2 341 1 
363 1 50 1 315 1 63 1 91 1 171 1 275 1 328 1 349 1 294 1 
67 5 159 2 108 1 141 2 344 5 333 2 36 2 171 5 274 2 224 1 225 5 348 2 349 5 212 10 294 5 
235 1 260 1 171 1 91 1 38 1 309 1 
79 1 25 1 363 2 267 1 30 1 269 1 6 4 183 1 154 4 326 2 63 1 250 1 275 2 309 2 38 3 92 1 40 1 328 2 349 2 284 1 71 2 142 2 235 4 237 1 260 3 372 2 339 4 294 2 373 1 
342 1 360 1 105 1 25 1 27 1 266 1 303 1 246 1 197 2 6 1 247 3 269 1 183 1 154 1 326 1 223 3 189 1 157 1 13 1 228 1 284 1 97 1 139 2 331 2 99 1 232 2 290 1 339 1 75 1 213 1 215 1 341 2 
67 2 363 1 344 2 142 1 63 1 91 2 171 4 275 1 372 1 225 2 212 4 349 2 328 1 294 1 278 1 
115 1 147 1 312 1 
233 1 115 1 147 1 298 1 186 1 
115 1 147 1 312 1 
115 1 147 1 312 1 
115 1 147 1 149 1 
115 1 147 1 149 1 
115 1 147 1 149 1 
115 1 147 1 
89 1 240 1 
342 4 105 2 343 1 129 2 218 1 159 1 27 2 133 1 101 4 135 3 303 2 197 4 322 1 290 2 194 1 316 1 306 1 274 1 213 8 278 1 
342 3 343 1 129 2 218 1 144 1 159 1 316 1 194 1 133 1 274 1 101 3 135 2 213 6 278 1 
342 2 105 1 129 1 159 1 27 1 101 2 141 1 135 2 303 1 197 2 333 1 34 1 290 1 36 1 306 1 274 1 213 4 
342 4 295 1 129 1 159 1 101 3 141 1 135 2 191 1 333 1 146 2 334 1 36 1 306 1 274 1 213 7 
295 1 342 12 343 2 105 2 129 5 58 1 218 2 27 2 133 1 150 1 135 9 303 2 151 1 322 2 197 4 36 2 306 4 274 3 278 1 159 3 101 11 141 2 333 2 334 2 146 2 290 2 316 1 194 1 213 23 
342 1 146 1 213 1 
334 1 101 1 213 1 
342 3 105 1 129 2 159 1 27 1 101 3 303 1 135 3 141 1 197 2 333 1 290 1 34 1 36 1 306 1 274 1 224 1 213 6 
342 6 105 1 81 1 129 1 27 1 177 1 245 1 303 1 135 2 197 2 36 2 306 1 274 2 159 2 101 6 141 2 191 1 333 2 334 1 146 1 290 1 336 1 209 1 261 1 213 12 
342 3 343 1 129 1 218 1 159 1 133 1 101 3 135 2 306 1 274 1 213 6 
342 2 343 1 105 1 129 1 58 1 218 1 27 1 101 1 135 2 303 1 322 1 197 2 290 1 316 1 194 1 306 1 213 3 
342 5 105 1 343 2 129 3 121 1 218 2 159 2 27 1 133 1 101 5 245 1 303 1 135 5 197 2 290 1 306 2 274 2 213 10 
105 1 27 1 101 2 245 1 303 1 135 1 197 2 290 1 36 1 306 1 274 1 213 2 
342 2 105 1 129 1 159 1 27 1 101 2 245 1 141 1 135 2 303 1 197 2 333 1 290 1 36 1 306 1 274 1 213 4 
318 1 342 2 105 3 343 1 58 1 129 1 218 1 27 3 101 1 245 1 303 3 135 2 322 1 197 6 290 3 306 1 213 3 
342 18 318 1 295 1 343 3 105 5 58 1 129 7 218 3 27 5 133 2 299 1 319 1 245 1 303 5 135 12 322 2 197 10 34 1 36 3 306 5 274 5 278 1 159 5 101 16 141 3 191 1 333 3 287 1 146 4 290 5 334 3 316 1 194 1 213 34 
342 4 105 1 343 1 129 2 218 1 27 1 177 1 133 1 245 1 303 1 135 2 197 2 274 1 278 1 159 1 101 4 191 1 334 1 146 1 290 1 194 1 316 1 213 8 
342 5 295 1 343 1 105 2 129 2 218 1 27 2 177 1 133 1 245 1 303 2 135 3 197 4 34 1 36 1 306 1 274 2 278 1 159 1 101 6 191 1 333 1 146 2 290 2 334 1 316 1 194 1 213 11 
342 7 105 3 81 1 129 1 27 3 177 1 245 1 303 3 135 2 197 6 322 1 34 1 36 2 306 1 274 2 159 2 101 6 141 2 191 1 333 2 334 1 146 1 290 3 336 1 209 1 261 1 213 13 
342 4 105 3 81 1 129 1 27 3 177 1 245 1 303 3 135 2 322 1 197 6 34 1 36 2 306 1 274 2 159 1 101 7 141 1 191 1 333 2 334 1 146 1 290 3 336 1 209 1 261 1 213 11 
342 4 105 1 343 1 129 2 218 1 27 1 177 1 133 1 245 1 303 1 135 2 197 2 274 1 278 1 159 1 101 4 191 1 334 1 146 1 290 1 194 1 316 1 213 8 
342 6 105 1 81 1 129 1 27 1 177 1 245 1 303 1 135 2 197 2 36 2 306 1 274 2 159 2 101 6 141 2 191 1 333 2 334 1 146 1 290 1 336 1 209 1 261 1 213 12 
342 5 105 4 81 1 129 1 27 4 177 1 245 1 303 4 135 2 197 8 322 2 34 1 36 2 306 1 274 2 159 1 101 7 141 1 191 1 333 2 146 1 290 4 334 1 336 1 209 1 261 1 213 12 
342 5 318 1 105 4 81 1 129 2 27 4 177 1 245 1 303 4 135 4 197 8 322 2 36 2 306 2 274 2 159 1 101 7 141 1 191 1 333 2 146 1 290 4 334 1 336 1 209 1 261 1 213 12 
342 4 343 3 129 3 218 3 159 1 133 1 101 3 135 6 194 1 316 2 306 3 274 1 213 7 
342 5 318 1 105 4 81 1 129 1 27 4 177 1 245 1 303 4 135 2 197 8 322 2 36 2 306 1 274 2 159 1 101 7 141 1 191 1 333 2 146 1 290 4 334 1 336 1 209 1 261 1 213 12 
157 1 247 1 60 1 18 1 262 1 223 1 232 1 
56 1 157 1 60 1 18 1 163 1 232 1 356 1 247 1 262 1 223 1 104 1 226 1 
269 1 6 1 183 1 25 1 144 1 284 1 154 1 326 1 250 1 267 1 339 1 
157 1 25 1 284 1 97 1 139 1 99 1 331 1 246 1 232 1 321 1 269 1 247 2 6 1 183 1 326 1 154 1 223 2 339 1 
359 1 25 1 243 1 246 2 321 1 6 1 247 2 269 3 183 1 154 1 223 2 157 1 284 2 97 1 329 1 139 1 331 2 99 1 71 1 232 2 173 1 339 1 55 1 
359 1 25 1 243 1 180 1 246 2 321 1 6 2 247 2 269 3 183 1 154 2 347 1 223 2 157 1 284 2 329 1 139 1 331 2 99 1 71 1 232 2 173 1 339 2 55 1 
359 1 82 1 83 1 25 1 180 1 246 1 269 4 6 3 183 1 154 3 326 1 91 1 38 2 201 1 284 1 190 1 71 1 234 1 235 1 260 2 171 1 339 3 55 1 
359 1 83 1 25 1 284 1 180 1 246 1 71 1 234 1 6 3 236 1 269 4 235 1 260 2 183 1 326 1 154 3 171 1 91 1 55 1 38 2 339 3 201 1 
6 1 183 1 25 1 154 1 73 1 339 1 
269 1 6 1 45 1 183 1 25 1 284 1 154 1 326 1 64 1 85 1 339 1 246 1 
342 3 105 2 343 1 112 1 303 2 246 1 346 1 6 1 197 4 247 2 154 1 9 1 157 2 159 1 161 1 316 1 74 1 75 2 213 6 360 1 129 2 25 1 218 1 27 2 133 1 135 2 321 1 269 1 183 1 274 1 223 2 278 1 189 2 228 1 94 1 284 1 97 1 139 1 331 1 99 1 101 3 232 1 145 1 290 2 194 1 103 1 339 1 
83 1 363 2 6 1 269 2 326 1 154 1 63 2 91 1 275 2 38 3 309 1 349 1 328 2 201 1 285 1 205 1 234 1 50 1 236 1 235 2 237 1 260 3 371 1 315 1 171 1 238 1 339 1 294 1 
83 1 45 1 25 1 284 1 246 1 6 2 269 2 183 2 154 2 185 1 103 1 73 1 339 2 
25 1 284 1 267 1 180 1 6 4 269 1 183 1 326 1 154 4 250 1 103 1 10 1 339 4 
216 1 269 1 6 1 183 1 25 1 325 1 284 1 154 1 85 1 339 1 164 1 246 1 
6 1 366 1 248 1 183 1 25 1 154 1 326 1 337 1 339 1 113 1 
24 1 25 1 284 1 181 1 6 2 269 1 183 1 154 2 103 1 308 1 339 2 
24 1 25 2 284 2 267 1 71 1 364 1 6 5 269 3 183 2 326 1 154 5 250 1 103 1 10 1 339 4 239 1 
24 1 25 2 59 1 284 2 267 1 71 1 364 1 6 5 269 3 183 2 326 1 154 5 250 1 103 1 10 1 339 4 
157 1 25 1 284 1 139 1 99 1 331 1 246 1 232 1 321 1 269 1 247 2 6 1 183 1 326 1 154 1 223 2 347 1 339 1 
269 1 6 1 45 1 183 1 25 1 284 1 154 1 64 1 85 1 339 1 246 1 71 1 
296 1 241 1 232 1 21 1 332 1 247 1 65 1 223 1 76 1 
252 1 327 1 76 1 
157 1 21 1 242 1 65 1 76 1 
252 1 157 1 44 1 242 2 243 1 329 1 205 1 87 1 32 1 21 2 260 2 65 2 171 1 91 1 173 1 38 2 327 1 76 1 201 1 
130 1 144 1 249 1 357 1 
57 1 130 1 95 1 249 1 357 1 110 1 251 1 
345 1 35 1 110 1 
57 1 229 2 130 1 95 3 330 1 110 3 353 1 49 1 249 1 357 1 251 1 42 1 
57 1 130 1 14 1 95 2 249 1 357 1 17 1 110 2 251 1 
57 1 281 1 95 1 110 1 353 1 3 1 248 1 357 1 251 1 337 1 200 1 
57 1 95 1 249 1 357 1 110 1 251 1 353 1 
57 1 130 1 95 1 249 2 110 1 251 1 353 1 
57 2 16 1 95 2 84 1 110 2 353 1 126 1 249 1 357 1 251 2 
220 1 57 1 280 1 130 1 95 3 69 1 249 1 357 2 17 2 110 3 251 1 3 1 353 1 
57 1 130 1 95 2 110 2 219 1 17 1 353 1 113 1 286 1 248 2 249 1 357 1 251 1 337 1 200 1 
57 2 361 1 280 1 130 1 14 1 95 4 110 4 17 2 353 1 3 1 249 1 357 2 251 2 
57 1 130 1 95 1 249 1 357 1 110 1 251 1 353 1 
57 1 229 1 280 1 130 2 95 4 330 1 17 2 110 4 3 1 249 2 357 3 251 1 276 1 42 1 
57 1 130 1 95 2 176 1 110 2 17 1 353 1 168 1 152 1 249 1 357 1 251 1 
57 1 229 2 130 1 95 3 122 1 330 2 110 3 353 1 249 1 357 1 251 1 42 1 
357 2 116 1 256 1 354 2 
365 1 57 1 95 1 110 1 251 1 353 1 
220 1 57 1 130 1 95 2 249 1 357 1 17 1 110 2 251 1 353 1 
324 1 
57 1 130 1 95 1 249 1 357 1 110 1 251 1 353 1 
57 1 229 1 130 1 95 3 17 1 110 3 353 1 220 1 249 1 357 1 251 1 
280 1 357 1 276 1 3 1 
249 1 357 1 

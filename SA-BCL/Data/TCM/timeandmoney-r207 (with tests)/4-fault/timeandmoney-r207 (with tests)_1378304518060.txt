#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 219 200 369 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 219 200 369 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 219 200 (8,289) (8,289) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 219 200 (8,289) (8,289) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 1 369 1 370 7 191 2 56 1 304 1 371 3 24 2 95 3 219 1 262 1 186 7 117 1 29 1 294 5 162 1 284 2 163 1 63 1 268 1 200 1 
111 1 369 1 370 7 191 2 56 1 304 1 371 3 24 2 95 3 219 1 262 1 186 7 117 1 29 1 294 5 162 1 284 2 163 1 63 1 268 1 200 1 
111 1 370 3 35 1 191 1 116 1 371 1 24 2 95 2 186 3 294 1 284 2 163 1 268 1 
111 1 370 7 289 1 191 2 45 1 56 1 304 1 371 3 24 2 93 1 95 3 50 1 219 2 262 2 186 7 29 2 8 1 294 4 162 1 284 2 163 2 63 1 32 1 268 1 200 1 
111 1 370 7 289 1 191 2 45 1 56 1 304 1 371 3 24 2 93 1 95 3 50 1 219 2 262 2 186 7 29 2 8 1 294 4 162 1 284 2 163 2 63 1 32 1 268 1 200 1 
111 1 289 1 191 3 45 1 116 1 24 2 93 1 50 1 95 5 262 2 219 2 29 2 8 1 294 6 268 1 32 1 200 1 121 1 370 9 35 1 56 1 304 1 371 4 186 9 284 2 162 2 163 2 63 1 380 1 
111 1 289 1 191 2 45 1 116 1 24 2 93 1 50 1 95 4 262 2 219 2 29 2 8 1 294 4 268 1 32 1 200 1 370 7 35 1 56 1 304 1 371 3 186 7 284 2 162 1 163 2 63 1 
191 1 116 1 24 1 95 3 262 1 219 1 29 1 294 3 268 1 200 1 121 1 370 4 35 1 304 1 371 2 186 4 162 2 284 1 380 1 
370 2 35 1 116 1 24 1 102 1 95 1 50 1 186 2 262 1 219 1 284 1 163 1 53 1 32 1 268 1 221 1 
202 1 78 1 222 1 66 1 23 1 218 1 159 1 196 1 187 1 37 1 309 1 107 1 120 1 176 1 
13 1 
52 1 23 2 107 2 13 1 130 1 104 1 110 1 218 1 
253 1 46 1 303 1 23 5 257 2 13 1 101 1 104 1 218 2 69 1 7 1 36 2 52 2 376 1 107 5 130 1 266 1 321 2 74 1 
13 1 108 1 104 1 
13 1 234 1 235 2 
202 2 196 2 78 2 222 2 187 2 37 2 66 1 80 1 
86 1 165 1 214 1 66 1 2 1 88 1 47 2 136 1 333 1 196 2 70 1 51 2 337 2 220 1 319 1 173 1 122 1 368 1 202 2 78 3 222 3 301 2 79 1 223 1 80 1 183 1 126 1 185 1 327 1 277 1 349 1 187 2 37 2 352 1 129 1 109 1 379 2 
159 1 202 1 196 1 78 1 222 1 187 1 37 1 66 1 309 1 176 1 
202 1 78 1 222 1 290 1 23 1 13 1 91 1 104 1 306 1 147 1 153 1 107 1 366 1 176 1 
202 1 78 1 222 1 290 1 23 2 13 1 91 1 104 1 196 1 187 1 37 1 153 1 107 2 366 1 176 1 
335 1 52 1 23 1 107 1 218 1 
52 1 23 2 107 2 13 1 130 1 367 1 104 1 218 1 
52 1 23 1 107 1 
202 1 361 1 78 2 222 2 301 1 223 1 2 1 47 1 183 1 333 1 261 1 196 1 327 1 51 1 349 1 277 1 220 1 187 1 109 1 270 1 
202 2 78 2 222 2 80 2 196 1 187 1 37 1 33 1 98 1 
261 1 209 1 103 1 
78 1 222 1 301 1 223 1 2 1 80 1 345 1 47 1 333 1 183 1 51 1 327 1 277 1 349 1 220 1 109 1 
80 1 108 1 
202 5 78 5 361 1 222 5 134 1 80 1 94 1 196 4 147 1 187 4 37 1 342 1 270 2 98 1 
159 1 202 2 196 2 78 2 222 2 187 2 286 1 176 1 
202 3 196 3 78 3 222 3 187 3 37 1 80 1 270 1 
159 1 202 1 196 1 78 1 222 1 187 1 176 1 
202 1 196 1 78 1 222 1 187 1 37 1 33 1 98 1 176 1 
165 1 361 1 214 1 290 1 66 1 2 1 23 1 88 1 136 1 47 1 333 1 91 1 196 3 51 1 337 2 220 1 319 1 153 1 173 1 366 1 98 1 270 1 176 1 122 1 368 1 202 3 78 4 222 4 301 1 223 1 80 1 183 1 126 1 185 1 327 1 349 1 277 1 278 1 187 3 37 2 107 1 109 1 379 1 252 1 
202 2 196 1 147 1 78 2 222 2 187 1 80 1 342 1 270 1 
202 3 361 1 78 3 222 3 290 1 23 1 13 1 91 1 196 3 278 1 187 3 37 1 263 1 153 1 107 1 366 1 98 1 270 2 176 1 
202 2 78 2 222 2 103 1 196 2 261 1 187 2 37 1 270 1 98 1 
78 1 222 1 301 1 223 1 2 1 80 1 47 1 333 1 183 1 51 1 327 1 277 1 349 1 220 1 109 1 
78 1 222 1 301 1 223 1 2 1 80 1 47 1 183 1 51 1 327 1 277 1 349 1 220 1 340 1 357 1 
165 1 214 1 259 1 260 1 362 1 261 2 337 2 319 1 9 1 175 1 155 1 368 1 122 2 302 1 103 2 126 1 185 1 228 1 209 2 60 1 129 2 188 1 189 1 379 4 
202 1 196 1 78 1 222 1 187 1 91 1 286 1 176 1 
350 1 137 1 125 1 
145 1 350 2 365 1 346 1 137 2 157 1 
350 1 137 1 
350 1 137 1 
365 1 346 1 
365 1 346 1 
365 1 346 1 
350 1 137 1 143 1 
350 1 137 1 143 1 
350 1 137 1 143 1 
275 1 350 1 137 1 
275 1 350 1 137 1 
275 1 350 1 137 1 
42 1 87 1 44 1 23 1 137 1 26 1 196 2 318 1 30 1 177 1 202 2 34 1 156 1 78 2 12 1 222 2 80 1 125 1 158 1 276 1 187 2 350 1 280 1 107 1 
23 2 166 2 13 1 89 1 137 2 157 1 26 2 158 2 276 3 350 2 318 2 280 1 353 1 31 1 320 1 210 1 107 2 131 1 177 2 
262 2 64 2 29 1 334 1 221 1 
219 1 262 1 29 1 
219 1 262 1 221 1 
5 1 262 3 64 1 29 2 334 1 221 1 
85 1 262 1 64 1 334 1 226 1 221 1 
255 1 257 1 23 5 142 2 218 4 30 1 7 1 73 1 293 2 52 1 9 1 175 1 264 2 197 1 321 1 74 3 155 1 299 1 156 1 179 1 12 1 302 1 13 2 104 1 373 1 36 1 376 2 107 5 130 1 234 1 235 3 381 1 
237 1 256 1 23 9 257 2 218 7 335 5 118 1 7 1 293 6 52 6 9 3 339 5 175 3 264 6 197 3 321 2 74 8 155 3 179 2 12 4 302 3 303 1 13 5 104 1 17 1 373 2 36 2 376 6 107 9 130 1 233 1 378 1 234 3 235 9 381 1 
255 1 257 1 23 3 142 1 218 2 293 2 9 1 175 1 197 1 264 2 321 1 74 3 155 1 299 1 179 1 12 1 302 1 303 1 13 3 104 1 373 1 36 1 107 3 376 2 234 2 235 4 
237 1 255 1 256 1 257 1 23 4 142 2 218 3 293 4 9 2 175 2 264 4 197 2 321 1 74 5 155 2 299 1 179 1 12 2 302 2 303 1 13 4 104 1 373 1 36 1 107 4 376 4 233 1 234 3 235 7 
124 1 
220 1 108 1 217 1 
220 1 331 1 
327 1 220 1 223 1 
220 1 140 1 
220 1 223 1 
327 1 220 3 223 1 59 1 251 1 217 2 
122 3 201 1 236 1 254 1 215 1 3 1 291 1 260 3 18 1 281 1 151 2 9 1 174 1 188 2 129 4 356 1 379 7 155 1 
236 1 254 1 165 1 214 1 313 1 215 1 3 1 291 2 68 1 260 10 337 2 6 1 151 3 9 4 175 3 197 3 341 1 155 4 201 2 122 15 302 3 224 4 126 1 185 1 18 5 281 2 19 1 230 3 129 16 188 5 330 1 379 31 356 2 213 1 
201 1 122 4 254 1 165 2 214 2 215 1 3 1 291 1 260 4 126 2 18 1 185 2 84 1 337 4 128 1 281 1 151 2 9 1 188 3 129 5 330 1 356 1 379 9 155 1 
122 3 201 1 236 1 254 1 215 1 3 1 291 1 260 3 18 1 281 1 151 2 9 1 188 2 129 4 356 1 379 7 155 1 
122 3 201 1 236 1 254 1 215 1 3 1 291 1 260 3 18 1 281 1 151 2 9 1 188 2 129 4 356 1 379 7 155 1 
0 2 360 1 2 1 47 1 24 1 51 1 71 1 220 1 271 1 301 1 370 1 273 1 223 1 182 1 127 1 348 1 349 1 277 1 186 1 57 2 375 2 284 1 163 2 
0 1 40 1 22 1 2 1 47 1 24 1 216 1 51 1 219 1 262 2 5 1 29 1 198 1 243 1 268 1 221 1 301 1 370 1 83 1 186 1 349 1 57 1 375 1 61 1 284 1 163 1 
0 1 40 1 22 1 2 1 47 1 116 1 24 1 216 1 95 1 51 1 219 1 262 2 5 1 29 1 172 1 294 1 198 1 268 1 221 1 301 1 370 2 35 1 83 1 186 2 349 1 57 1 375 1 61 1 284 1 163 1 
0 1 40 1 2 1 47 1 114 1 116 1 24 1 216 1 95 1 51 1 219 1 5 1 71 1 262 2 29 1 294 2 198 1 243 1 221 1 301 1 370 3 35 1 83 1 186 3 349 1 57 1 375 1 61 1 284 1 163 1 
0 1 370 2 301 1 35 1 2 1 114 1 47 1 116 1 216 1 83 1 95 1 51 1 219 1 5 1 262 2 349 1 186 2 57 1 375 1 29 1 61 1 294 2 163 1 243 1 221 1 
168 1 
288 1 135 2 290 1 257 1 23 4 67 3 194 2 91 1 25 1 28 1 364 1 96 1 147 1 7 1 153 1 52 5 366 1 97 1 321 1 74 1 176 1 99 1 202 1 245 2 78 1 272 3 222 1 54 1 247 3 249 1 55 5 13 1 104 1 205 1 306 1 161 2 36 1 376 1 107 4 130 2 377 1 234 2 
288 1 135 2 290 1 257 1 23 4 67 3 194 2 91 1 25 1 28 1 364 1 147 1 96 1 7 1 153 1 52 5 366 1 97 1 321 1 74 1 176 1 99 1 202 1 245 2 78 1 272 3 222 1 54 1 247 3 249 1 55 5 13 1 104 1 205 1 306 1 161 2 36 1 376 1 107 4 130 2 377 1 234 2 
288 1 290 1 194 2 91 1 141 2 147 1 7 1 153 1 52 4 297 2 202 1 54 1 247 2 249 1 55 4 13 1 14 1 104 1 306 1 161 2 107 4 23 4 257 1 67 2 25 1 28 1 366 1 321 1 267 1 74 1 176 1 78 1 272 2 222 1 36 1 376 1 130 2 377 1 235 2 
288 1 135 2 290 1 2 1 47 2 194 2 91 1 92 1 51 2 147 1 7 1 52 6 153 1 202 1 99 1 245 2 247 2 301 2 54 1 249 1 55 4 13 2 104 1 348 1 349 1 306 1 161 2 107 5 67 2 23 5 257 1 25 1 28 1 220 1 317 1 366 1 267 1 321 1 74 2 176 1 179 1 272 2 78 1 222 1 223 1 372 1 82 1 127 1 277 2 36 1 376 2 130 3 377 1 234 2 235 2 
202 1 288 1 78 1 247 1 54 1 222 1 290 1 55 2 23 3 91 1 25 1 28 1 306 1 147 1 52 2 153 1 107 3 130 1 366 1 377 1 110 1 176 1 
288 1 290 1 23 3 67 1 91 1 25 1 28 1 147 1 52 1 153 1 366 1 176 1 202 1 78 1 222 1 54 1 55 3 13 1 104 1 306 1 107 3 130 1 377 1 110 1 
288 1 290 1 23 3 67 1 91 1 25 1 28 1 147 1 153 1 52 2 366 1 176 1 202 1 78 1 272 1 222 1 54 1 247 1 55 3 13 1 104 1 306 1 107 3 130 1 377 1 110 1 
288 1 290 1 135 2 194 2 91 1 147 1 96 1 7 1 153 1 52 7 97 1 202 1 99 1 245 2 247 4 54 1 249 1 55 6 13 5 104 5 205 1 306 1 161 2 20 1 107 5 110 1 23 5 67 4 257 1 25 1 28 1 364 1 366 1 321 1 74 1 176 1 272 4 78 1 222 1 36 1 376 1 130 3 377 1 234 2 
288 1 290 1 135 2 194 2 91 1 147 1 7 1 153 1 52 4 99 1 202 1 245 2 54 1 247 2 249 1 55 4 13 2 104 1 306 1 161 2 107 4 23 4 257 1 67 2 25 1 28 1 366 1 321 1 267 1 74 1 176 1 78 1 272 2 222 1 36 1 376 1 130 2 377 1 234 2 235 2 
288 1 135 2 290 1 67 2 257 1 23 4 194 2 91 1 25 1 28 1 147 1 96 1 364 1 7 1 52 4 153 1 366 1 97 1 321 1 74 1 176 1 99 1 202 1 272 2 245 2 78 1 247 2 222 1 54 1 249 1 55 4 13 1 104 1 306 1 161 2 36 1 376 1 107 4 130 2 377 1 234 2 
288 1 135 2 290 1 67 2 257 1 23 4 194 2 91 1 25 1 28 1 147 1 96 1 364 1 7 1 52 4 153 1 366 1 97 1 321 1 74 1 176 1 99 1 202 1 272 2 245 2 78 1 247 2 222 1 54 1 249 1 55 4 13 1 104 1 306 1 161 2 36 1 376 1 107 4 130 2 377 1 234 2 
288 1 290 1 67 2 257 1 23 4 194 2 91 1 141 2 25 1 170 1 28 1 147 1 7 1 52 4 153 1 152 1 366 1 297 2 97 1 321 1 74 1 176 1 202 1 272 2 78 1 247 2 222 1 54 1 249 1 55 4 13 1 14 1 104 1 306 1 161 2 36 1 376 1 107 4 130 2 377 1 235 2 
41 1 287 1 165 2 86 1 214 2 2 2 47 8 88 1 196 1 51 8 70 2 337 4 220 3 172 1 319 2 243 1 270 1 202 1 368 2 122 1 244 1 78 1 222 1 301 7 223 2 325 1 126 2 127 1 348 1 185 2 349 2 277 2 207 1 351 1 187 1 285 1 129 1 189 1 379 2 
165 1 214 1 169 1 260 1 261 1 196 1 337 2 319 1 9 1 175 1 197 1 98 1 155 1 368 1 202 1 122 2 78 1 222 1 302 1 103 1 126 1 305 1 185 1 187 1 37 1 209 1 188 1 129 1 379 3 
122 3 201 1 368 1 254 1 165 1 214 1 215 1 80 2 3 1 103 1 260 2 126 1 261 1 185 1 337 2 281 1 209 1 151 1 319 1 9 1 108 1 129 3 188 2 379 6 189 1 155 1 
86 1 165 2 214 2 192 1 88 1 169 1 260 2 261 8 337 4 6 1 319 2 9 2 175 2 197 2 341 1 155 1 122 6 368 1 76 1 302 1 80 1 224 3 103 4 126 2 206 1 18 1 185 2 209 8 188 1 230 3 129 8 379 14 21 1 
165 1 361 1 86 1 314 1 214 1 2 1 47 1 88 1 333 1 169 1 196 1 51 1 337 2 220 1 319 1 242 1 270 1 368 1 202 1 122 1 78 2 301 1 222 2 324 1 223 1 80 1 345 1 183 1 103 1 126 1 327 1 185 1 349 1 277 1 187 1 109 1 129 1 379 2 
86 1 193 1 2 2 88 1 47 3 241 2 136 2 3 1 333 2 196 1 51 3 146 1 337 6 151 1 9 3 296 2 197 2 243 1 155 3 201 1 202 1 301 3 302 2 103 7 18 4 349 2 209 7 109 2 254 1 361 1 165 3 214 3 65 2 215 1 115 1 169 1 260 8 261 7 220 2 319 3 175 2 270 1 122 10 368 3 178 2 78 3 222 3 223 2 80 2 183 2 126 3 185 3 327 2 277 1 187 1 281 1 188 4 129 10 379 20 
368 1 165 1 214 1 103 1 260 1 126 1 362 1 261 1 18 1 185 1 337 2 209 1 319 1 9 1 175 1 129 2 379 2 189 1 
368 1 122 2 165 1 214 1 302 1 103 1 260 1 126 1 259 1 261 1 185 1 337 2 209 1 319 1 188 1 379 2 189 1 155 1 
165 1 214 1 260 2 261 2 337 2 319 1 9 1 175 1 197 1 155 1 368 1 122 2 302 1 103 2 126 1 185 1 18 1 209 2 129 2 188 1 189 1 379 4 
368 1 165 1 214 1 103 1 260 1 126 1 362 1 261 1 18 1 185 1 207 1 337 2 209 1 319 1 9 1 175 1 129 2 379 2 
368 1 122 2 165 1 214 1 302 1 103 1 260 1 126 1 259 1 261 1 185 1 207 1 337 2 209 1 319 1 188 1 379 2 155 1 
165 1 214 1 260 2 261 2 337 2 319 1 9 1 175 1 197 1 155 1 368 1 122 2 302 1 103 2 126 1 185 1 18 1 207 1 209 2 129 2 188 1 379 4 
122 2 368 1 165 1 214 1 302 1 103 2 260 2 126 1 261 2 18 1 185 1 337 2 209 2 319 1 9 1 188 1 175 1 129 2 197 1 379 4 155 1 
86 1 165 1 214 1 2 1 136 1 47 1 88 1 333 1 51 1 337 2 220 1 319 1 368 1 122 1 78 1 301 1 222 1 223 1 80 1 183 1 126 1 327 1 185 1 349 1 277 1 129 1 109 1 379 2 
86 1 165 1 214 1 2 1 47 1 88 1 51 1 337 2 220 1 319 1 340 1 368 1 122 1 78 1 301 1 222 1 223 1 80 1 183 1 126 1 327 1 185 1 349 1 277 1 129 1 231 1 379 2 357 1 
165 1 214 1 169 1 260 2 261 2 337 2 319 1 9 1 175 1 197 1 155 1 368 1 122 2 302 1 103 2 126 1 185 1 18 1 209 2 129 2 188 1 379 4 
165 1 214 1 2 1 136 1 241 1 47 1 333 1 260 2 261 2 51 1 337 2 220 1 172 1 319 1 9 1 175 1 197 1 155 1 122 2 368 1 78 1 301 1 222 1 302 1 223 1 183 1 103 2 126 1 18 1 327 1 185 1 349 1 209 2 188 1 129 2 109 1 379 4 
165 1 214 1 169 1 260 1 196 1 261 1 337 2 319 1 9 1 175 1 197 1 155 1 98 1 122 1 368 1 202 1 78 1 222 1 302 1 103 1 126 1 18 1 185 1 187 1 37 1 209 1 129 2 212 1 379 3 
254 1 133 1 165 3 112 4 214 3 238 1 215 1 3 1 260 8 315 1 337 6 6 1 316 1 151 1 9 5 175 4 197 4 322 1 341 3 298 1 155 5 201 1 122 21 123 1 302 4 224 4 184 1 126 3 326 1 185 3 18 4 84 1 308 1 328 1 281 1 106 2 282 1 62 1 188 4 230 3 129 20 330 1 379 41 
254 1 133 1 165 4 112 4 214 4 238 1 215 1 3 1 260 7 315 1 337 8 6 1 316 1 151 1 9 5 175 4 197 4 322 1 341 3 298 1 155 4 201 1 122 18 123 1 302 3 224 4 184 1 126 4 326 1 185 4 18 3 84 1 308 1 328 1 281 1 106 2 282 1 62 1 188 4 230 3 129 20 330 2 379 38 
254 1 133 1 165 2 214 2 112 4 192 1 238 1 215 1 3 1 260 10 315 1 337 4 6 1 316 1 151 1 9 6 175 5 197 5 322 1 341 2 155 6 298 1 201 1 122 20 302 5 224 3 184 1 126 2 326 1 185 2 18 5 84 1 328 1 281 1 106 1 282 1 62 1 188 5 230 3 129 22 330 1 379 42 
165 2 112 2 214 2 238 1 260 6 337 4 6 1 9 3 175 3 197 3 322 2 341 1 298 1 155 3 343 1 122 10 302 3 224 2 184 1 126 2 326 1 185 2 18 3 84 1 308 1 106 1 188 3 230 1 129 9 379 19 
133 1 165 3 112 4 214 3 238 1 260 4 315 1 337 6 316 1 9 3 175 3 197 3 322 1 341 2 155 2 298 2 122 12 302 2 224 2 184 1 126 3 326 1 18 2 185 3 84 1 328 1 106 2 282 1 62 1 188 2 129 14 230 2 330 2 379 26 
158 1 374 1 350 1 318 1 210 1 137 1 157 1 131 1 177 1 26 1 
87 1 125 1 
312 1 158 1 350 1 318 1 229 1 137 1 39 1 177 1 26 1 
138 1 143 1 
275 1 145 1 204 1 
23 1 166 1 13 1 89 1 137 1 157 1 26 1 158 1 276 2 350 1 280 1 318 1 31 1 320 1 210 1 107 1 131 1 177 1 
23 1 166 1 13 1 89 1 137 1 157 1 26 1 158 1 276 2 350 1 280 1 318 1 31 1 320 1 210 1 107 1 131 1 177 1 
23 1 166 1 13 1 89 1 137 1 157 1 26 1 158 1 276 2 350 1 280 1 318 1 31 1 320 1 210 1 107 1 131 1 177 1 
145 1 138 1 143 1 
145 1 138 1 143 1 
275 1 204 1 
275 1 145 1 204 1 
34 1 42 1 
42 1 87 1 44 1 166 1 23 1 137 1 218 1 26 1 196 2 318 1 30 1 320 1 119 1 177 1 34 1 202 2 156 1 78 2 12 1 222 2 80 1 125 1 158 1 276 1 350 1 187 2 107 1 
132 1 165 1 86 1 214 1 2 1 47 2 88 1 169 1 51 2 144 1 70 2 337 2 220 1 292 1 319 1 368 1 202 2 122 1 300 1 244 1 78 2 222 2 301 2 223 1 325 1 126 1 185 1 349 1 129 1 379 2 164 1 
301 1 273 1 223 1 2 1 47 1 127 1 348 1 51 1 349 1 277 1 57 1 220 1 295 1 382 1 
301 1 2 1 47 1 258 1 216 1 51 1 219 1 5 1 262 2 349 1 57 1 29 1 58 1 61 1 198 1 243 1 221 1 382 1 
301 2 2 1 47 2 258 1 216 1 51 2 219 1 5 1 262 2 349 1 57 1 29 1 58 1 172 1 61 1 198 1 243 1 221 1 382 1 
301 1 2 1 47 1 139 1 258 1 216 1 51 1 219 1 5 1 262 2 349 1 57 1 29 1 61 1 198 1 243 1 221 1 
77 1 
165 1 214 1 66 1 2 1 88 1 47 1 136 1 333 1 196 2 51 1 337 2 220 1 319 1 173 1 122 1 202 2 368 1 78 3 301 1 222 3 223 1 80 1 183 1 126 1 185 1 327 1 277 1 349 1 187 2 37 2 109 1 379 1 
179 1 257 1 13 4 372 1 104 2 7 1 36 1 151 1 293 2 376 2 264 2 321 1 234 2 74 1 235 4 
46 1 257 1 101 1 13 1 104 1 7 1 36 1 376 1 321 1 74 1 
302 2 13 5 293 5 9 2 376 5 283 2 175 2 265 1 296 1 197 2 264 5 234 5 74 5 235 10 155 2 
52 1 23 1 107 1 13 1 130 1 104 1 
113 2 2 1 257 2 23 3 47 4 51 4 148 1 220 1 317 1 7 1 52 4 321 2 74 2 179 2 301 4 303 1 223 1 225 1 372 2 82 1 127 1 348 1 349 1 277 2 36 2 376 2 107 3 130 2 38 1 
46 1 376 1 13 1 101 1 108 1 74 1 104 1 
135 1 257 1 23 1 7 1 52 1 321 1 74 1 99 1 245 1 13 2 104 1 36 1 376 1 107 1 130 1 234 1 235 1 
190 2 46 1 2 1 47 2 51 2 7 4 52 5 153 2 293 6 9 2 296 2 197 2 155 2 301 2 302 2 101 1 13 8 104 2 349 2 208 2 251 1 107 5 355 1 257 4 23 5 217 2 27 2 171 2 220 6 172 1 175 2 264 6 265 2 321 4 74 9 179 2 274 1 223 1 225 1 372 1 81 1 327 1 277 1 279 2 36 4 376 8 283 2 130 3 331 3 234 6 235 12 
23 1 257 2 315 1 316 1 7 2 52 1 293 4 154 1 9 2 175 2 265 1 264 4 197 2 321 2 10 1 74 8 341 1 155 2 179 1 302 2 224 1 13 4 372 1 104 2 328 1 36 2 282 1 107 1 376 5 283 2 62 1 130 1 230 1 234 2 235 4 
254 1 66 1 257 1 23 1 196 1 364 1 7 1 9 2 120 1 265 1 321 1 74 2 155 1 176 1 201 1 202 1 78 1 222 1 181 1 159 1 187 1 281 1 36 1 37 1 309 1 107 1 376 2 283 2 
344 1 34 1 158 1 210 1 177 1 
158 1 195 1 177 1 
158 1 195 1 177 1 
158 1 195 1 177 1 
158 1 43 1 177 1 
158 1 43 1 177 1 
158 1 43 1 177 1 
158 1 177 1 
350 1 137 1 
201 1 122 4 254 1 165 1 214 1 215 1 224 1 3 1 260 2 126 1 185 1 315 1 84 1 337 2 281 1 151 1 9 1 188 2 129 4 230 1 379 8 341 1 155 1 
254 1 165 2 214 2 215 1 3 1 90 1 260 3 315 1 337 4 6 1 151 1 9 2 175 1 197 1 341 1 155 1 201 1 122 5 224 2 126 2 185 2 18 1 84 1 281 1 188 2 230 1 129 6 379 11 
254 1 165 3 214 3 215 1 3 1 90 1 260 4 315 1 337 6 316 1 151 1 9 3 175 2 197 2 341 1 155 3 201 1 122 10 302 2 224 1 126 3 18 1 185 3 84 1 328 1 281 1 282 1 62 1 230 1 129 9 188 3 330 1 379 19 
254 1 165 3 214 3 215 1 3 1 90 1 260 5 315 1 337 6 316 1 151 1 9 3 175 2 197 2 341 1 155 2 201 1 122 7 302 1 224 1 126 3 18 2 185 3 84 1 328 1 281 1 282 1 62 1 230 1 129 10 188 3 330 1 379 17 
201 1 122 4 254 1 165 1 214 1 215 1 224 1 3 1 260 2 126 1 185 1 315 1 84 1 337 2 281 1 151 1 9 1 188 2 129 4 230 1 379 8 341 1 155 1 
165 1 214 1 260 2 315 1 337 2 316 1 9 2 175 2 197 2 341 1 155 2 122 6 302 2 224 1 126 1 18 1 185 1 84 1 328 1 282 1 62 1 230 1 129 6 188 1 379 12 
254 1 165 4 214 4 215 1 3 1 90 1 260 5 315 1 337 8 316 1 151 1 9 3 175 2 197 2 341 1 155 2 201 1 122 8 302 1 224 1 126 4 18 2 185 4 84 1 328 1 281 1 282 1 62 1 230 1 129 10 188 3 330 2 379 18 
165 4 214 4 260 6 315 1 337 8 316 1 9 3 175 3 197 3 341 1 155 2 122 7 302 2 224 1 126 4 18 3 185 4 84 1 308 1 328 1 282 1 62 1 230 1 129 9 188 3 330 2 379 16 
122 4 201 3 254 1 215 2 3 1 260 6 18 3 281 3 9 1 188 3 129 3 379 7 155 1 
254 1 165 4 214 4 215 1 3 1 260 4 315 1 337 8 316 1 151 1 9 3 175 2 197 2 341 1 155 2 201 1 122 8 302 1 224 1 126 4 18 1 185 4 84 1 308 1 328 1 281 1 282 1 62 1 230 1 129 10 188 3 330 2 379 18 
201 2 122 5 165 1 254 1 214 1 181 1 126 1 260 5 185 1 18 2 337 2 84 1 281 2 9 2 188 3 129 5 379 10 155 2 
165 1 214 1 126 1 260 1 185 1 18 1 84 1 337 2 9 1 175 1 129 2 379 2 
122 2 165 1 214 1 302 1 260 2 126 1 185 1 18 1 84 1 337 2 9 1 188 1 175 1 129 2 197 1 379 4 155 1 
122 2 201 1 165 3 214 3 126 3 260 2 185 3 18 1 84 1 337 6 308 1 329 1 281 1 188 1 129 1 330 1 379 3 
254 2 165 5 214 5 215 1 3 1 90 1 68 1 260 12 337 10 6 1 151 1 9 5 175 3 197 3 341 1 155 5 201 3 122 18 302 3 224 4 126 5 185 5 18 5 84 1 308 1 281 3 329 1 19 1 230 3 129 16 188 7 330 2 213 1 379 34 
122 4 201 1 254 1 165 2 214 2 215 1 3 1 260 3 126 2 18 1 185 2 337 4 281 1 151 1 9 1 129 4 188 2 330 1 379 8 155 1 
122 3 201 1 254 1 215 1 3 1 260 2 281 1 151 1 9 1 108 1 188 2 129 3 379 6 155 1 
122 2 165 1 214 1 302 1 90 1 260 2 126 1 185 1 18 1 337 2 9 1 188 1 175 1 129 2 197 1 379 4 155 1 
122 1 224 1 129 1 230 1 379 2 341 1 
254 2 165 1 214 1 192 1 215 1 3 1 260 8 337 2 6 1 151 1 9 5 175 2 197 2 155 5 201 2 122 12 302 2 181 1 224 2 126 1 206 1 18 4 185 1 281 2 188 4 129 13 230 2 330 1 379 25 
122 1 224 1 379 1 
129 1 230 1 379 1 
122 3 165 1 214 1 302 1 90 1 126 1 260 3 185 1 18 1 337 2 9 1 175 1 129 3 188 2 296 1 197 1 379 6 155 1 
165 1 214 1 260 2 315 1 337 2 316 1 9 2 175 2 197 2 341 1 155 2 122 6 302 2 224 1 126 1 18 1 185 1 84 1 328 1 282 1 62 1 230 1 129 6 188 1 379 12 
122 3 201 1 254 1 260 2 18 1 281 1 9 1 129 3 188 1 379 6 155 1 
201 1 122 2 165 1 214 1 215 1 3 1 260 2 126 1 18 1 185 1 337 2 281 1 329 1 129 1 188 1 330 1 379 3 
202 1 78 1 147 1 222 1 354 1 80 1 342 1 
75 1 202 1 180 1 78 1 222 1 80 1 167 1 49 1 363 1 147 1 354 1 342 1 
301 4 239 1 223 1 2 1 47 4 127 1 348 1 51 4 349 1 277 1 307 1 220 1 172 1 
246 1 301 2 113 1 193 1 223 1 2 1 47 2 48 1 51 2 327 1 349 2 72 1 220 1 150 1 
51 1 219 1 262 1 349 1 277 1 301 1 2 1 61 1 47 1 221 1 
51 2 349 1 244 1 132 1 220 1 301 2 223 1 172 1 2 1 47 2 243 1 
244 1 287 1 301 4 113 1 223 2 2 2 47 5 127 1 348 1 51 5 277 1 349 2 307 1 351 1 220 3 172 1 
244 1 287 1 301 4 113 1 223 2 2 2 47 5 127 1 16 1 348 1 51 5 277 1 349 2 307 1 220 3 172 1 
51 1 349 1 277 1 220 1 301 1 223 1 2 1 108 1 47 1 127 1 348 1 
202 1 78 2 222 2 301 1 223 1 2 1 80 1 47 1 183 1 196 1 327 1 51 1 349 1 277 1 220 1 187 1 109 1 270 1 
113 1 2 1 47 1 91 1 140 1 196 2 51 1 220 3 366 1 270 1 176 1 202 2 78 2 301 1 222 2 223 2 80 1 183 1 327 2 349 1 187 1 109 1 211 1 
239 1 113 1 2 1 47 2 91 1 140 1 196 2 51 2 220 3 366 1 270 1 176 1 202 2 78 2 301 2 222 2 223 2 80 1 183 1 327 2 349 1 187 1 211 1 357 1 
239 1 113 1 2 1 23 2 47 3 140 1 217 1 336 1 51 3 220 4 52 1 153 1 301 3 223 1 13 1 104 1 327 1 349 1 277 1 105 1 107 2 211 1 331 1 
301 3 239 1 223 1 113 1 23 2 2 1 13 1 47 3 140 1 104 1 217 1 327 1 51 3 277 1 349 1 279 1 220 4 153 1 52 1 107 2 211 1 331 1 
41 1 51 1 349 1 301 1 2 1 47 1 
41 1 287 1 244 1 301 6 248 1 223 2 2 2 47 7 70 1 51 7 327 1 277 2 349 3 72 1 351 1 220 3 172 1 150 1 251 1 285 1 243 1 
254 1 165 2 214 2 65 1 215 1 2 1 47 1 241 1 136 1 3 1 333 1 169 1 260 2 261 1 196 1 144 1 51 1 337 4 220 1 151 1 319 2 172 1 9 1 155 1 270 1 122 3 201 1 368 2 202 1 78 2 222 2 301 1 223 1 80 2 183 1 103 1 126 2 327 1 185 2 349 1 187 1 281 1 209 1 129 3 188 2 109 1 379 6 
190 1 46 1 257 2 23 3 47 1 217 1 218 1 27 1 51 1 171 1 220 2 7 2 52 2 153 1 321 2 74 1 301 1 13 1 101 1 225 1 104 1 277 1 279 1 36 2 376 1 107 3 130 1 331 1 
41 1 301 1 223 1 2 1 47 1 124 1 81 1 217 1 51 1 327 1 349 2 220 2 251 1 
202 1 78 2 222 2 301 1 223 1 2 1 80 1 47 1 183 1 196 1 327 1 51 1 349 1 277 1 220 1 187 1 357 1 270 1 
301 1 248 1 113 1 223 1 2 1 47 1 51 1 327 1 349 2 72 1 220 1 150 1 251 1 
1 1 80 1 359 1 323 1 227 1 
1 2 203 1 290 1 23 2 80 1 13 1 91 1 15 1 104 1 227 1 218 1 278 1 153 1 107 2 366 1 199 1 323 2 359 2 176 1 
202 1 1 1 300 1 78 1 222 1 227 1 292 1 164 1 323 1 
199 1 15 1 227 1 
186 3 370 3 35 1 294 1 284 1 116 1 63 1 24 1 32 1 268 1 95 1 
191 1 371 1 380 1 95 1 
35 1 95 1 
186 1 370 1 35 1 284 1 116 1 24 1 268 1 95 1 
370 4 35 2 191 1 332 1 116 2 371 1 250 1 24 1 95 3 186 4 294 2 284 1 32 1 380 1 
370 2 35 1 116 1 24 1 95 1 186 2 117 1 294 1 284 1 268 1 269 1 358 1 
370 3 35 1 332 2 116 1 250 1 24 1 95 1 186 3 284 1 310 1 268 1 32 2 
100 2 347 1 311 1 95 2 
186 1 370 1 284 1 24 1 268 1 11 1 
186 2 370 2 35 1 294 1 284 1 116 1 63 1 24 1 268 1 95 1 
338 1 
186 1 370 1 35 1 284 1 116 1 24 1 268 1 95 1 
35 1 108 1 116 1 95 1 
186 1 370 1 35 1 284 1 116 1 24 1 95 1 
186 1 375 1 163 1 
370 3 35 1 332 1 116 1 24 1 250 1 95 1 186 3 149 1 284 1 268 1 32 2 
370 2 35 1 116 1 24 1 95 1 186 2 294 1 284 1 162 1 380 1 
219 1 262 1 186 1 370 1 29 1 284 1 304 1 371 1 24 1 268 1 95 1 
186 1 370 1 35 1 284 1 24 1 268 1 95 1 
186 1 370 1 35 2 284 1 116 1 24 1 268 1 
160 1 186 2 370 2 35 1 284 2 232 1 24 2 4 1 268 1 95 1 
370 3 35 1 191 1 56 1 116 1 371 1 24 1 95 2 186 3 294 2 284 1 63 1 268 1 
370 2 35 1 240 1 116 1 24 1 95 1 262 2 186 2 5 1 219 1 29 1 294 1 284 1 268 1 221 1 
370 3 35 1 191 1 116 1 371 1 24 1 95 2 186 3 294 2 284 1 162 1 380 1 268 1 121 1 

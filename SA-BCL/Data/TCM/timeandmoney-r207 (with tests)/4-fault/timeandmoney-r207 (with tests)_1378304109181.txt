#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (60,89) (60,89) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (148,255) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 267 62 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (287,343) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (148,255) 314 325 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (60,89) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 350 213 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (148,255) 314 102 (98,141) (98,141) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
276 1 214 3 169 1 356 1 161 1 229 1 112 2 50 1 250 3 266 2 114 1 192 1 172 2 
174 1 137 1 356 1 139 2 161 2 48 1 229 4 50 3 266 5 77 1 296 1 276 1 246 1 214 9 169 1 54 2 278 1 344 1 367 1 346 1 112 2 250 9 114 1 192 6 373 1 351 2 222 2 172 2 
174 1 137 1 356 1 139 2 161 2 48 1 229 4 50 3 266 5 77 1 296 1 276 1 246 1 214 9 169 1 54 2 278 1 344 1 367 1 346 1 112 2 250 9 114 1 192 6 373 1 351 2 222 2 172 2 
174 1 137 1 356 1 139 2 161 2 48 1 229 5 50 4 266 6 77 1 296 1 276 1 246 1 214 10 169 1 54 2 278 1 344 1 367 1 346 1 112 2 250 10 114 1 192 7 373 1 351 2 222 2 172 2 
137 1 356 1 139 2 161 2 48 1 229 3 50 2 266 4 77 1 296 1 276 1 246 1 214 7 169 1 54 1 278 1 344 1 367 1 346 1 112 2 250 7 114 1 192 4 373 1 351 2 222 2 172 2 
174 1 276 1 214 4 54 2 278 1 356 1 139 1 229 2 50 1 112 1 250 4 266 3 114 1 192 3 373 1 351 1 222 1 172 1 
276 1 214 2 70 1 356 1 139 1 161 1 49 1 346 1 112 1 266 1 250 2 114 1 22 1 222 1 172 1 296 1 
174 1 356 1 139 1 161 1 229 4 50 3 163 1 266 5 276 1 246 1 214 9 169 1 54 2 278 1 367 1 280 1 112 2 250 9 114 1 192 7 373 1 351 1 222 1 172 2 
174 1 356 1 139 1 161 1 229 4 50 3 163 1 266 5 276 1 246 1 214 9 169 1 54 2 278 1 367 1 280 1 112 2 250 9 114 1 192 7 373 1 351 1 222 1 172 2 
2 1 71 1 56 1 313 1 58 1 190 1 91 1 17 1 93 1 43 1 270 1 65 1 186 1 341 1 
375 1 
93 2 43 2 111 1 65 1 366 1 375 1 362 1 273 1 
12 1 68 2 111 2 366 1 315 1 59 1 89 1 204 1 60 1 92 1 93 5 251 2 253 1 316 2 166 1 43 5 65 2 375 1 273 1 
292 1 375 1 273 1 
6 2 375 1 116 1 
17 2 364 1 56 2 313 2 186 2 58 2 341 2 91 1 
311 1 28 1 71 1 46 1 201 1 313 2 73 1 105 2 205 2 144 1 34 1 79 1 80 1 239 1 295 1 186 2 341 2 364 1 56 2 150 1 58 2 299 1 300 2 218 1 369 2 91 1 348 1 17 2 283 1 42 1 223 2 259 1 156 1 
17 1 71 1 56 1 270 1 313 1 186 1 58 1 341 1 91 1 190 1 
44 1 247 1 71 1 58 1 191 1 93 1 126 1 43 1 21 1 221 1 375 1 186 1 273 1 341 1 
56 1 71 1 313 1 58 1 17 1 191 1 93 2 126 1 43 2 21 1 221 1 375 1 186 1 273 1 341 1 
93 1 43 1 111 1 65 1 203 1 
93 2 43 2 111 1 65 1 366 1 375 1 273 1 231 1 
93 1 43 1 111 1 
364 2 53 1 215 1 56 1 313 1 58 2 17 1 186 2 341 2 
148 1 343 1 314 1 
364 1 28 1 71 1 46 1 105 1 205 1 42 1 239 1 223 1 340 1 
292 1 364 1 
17 1 364 1 120 1 56 3 313 3 186 3 58 3 341 3 
71 1 56 1 270 1 313 1 186 1 58 1 341 1 
17 1 53 1 215 1 71 1 56 1 313 1 186 1 58 1 341 1 
311 1 28 1 120 1 71 1 201 1 73 1 313 3 105 1 205 1 144 1 126 1 79 1 295 1 239 1 80 1 186 3 361 1 341 3 36 1 364 1 53 1 56 3 88 1 58 3 300 2 369 1 91 1 17 2 191 1 93 1 283 1 43 1 42 1 21 1 221 1 223 1 259 1 156 1 
364 1 247 1 56 1 120 1 313 1 241 1 186 2 58 2 341 2 
53 1 71 1 120 2 56 3 313 3 58 3 107 1 17 1 93 1 191 1 126 1 43 1 221 1 21 1 375 1 186 3 361 1 36 1 341 3 
148 1 53 1 120 1 56 2 343 1 313 2 58 2 17 1 186 2 341 2 
364 1 28 1 71 1 46 1 105 1 205 1 42 1 239 1 223 1 
52 1 364 1 58 1 105 1 279 1 205 1 347 1 142 1 40 1 302 1 42 1 223 1 240 1 186 1 188 1 
228 1 311 1 121 1 312 1 73 1 201 2 314 2 8 1 144 1 34 2 295 1 146 1 148 2 343 2 300 2 369 4 301 1 372 1 136 1 254 1 255 1 287 1 259 1 156 1 
126 1 71 1 56 1 313 1 186 1 306 1 58 1 341 1 
148 1 28 1 120 1 56 1 313 1 58 1 105 1 205 1 42 1 239 1 223 1 186 1 36 1 341 1 
247 1 364 1 53 1 120 2 56 4 313 4 58 5 17 1 16 1 241 1 186 5 51 1 341 5 36 1 
71 1 56 2 270 1 313 2 306 1 186 2 58 2 341 2 
261 1 331 1 185 1 
261 2 370 1 113 1 5 1 185 2 134 1 
261 1 185 1 
261 1 185 1 
5 1 134 1 
5 1 134 1 
5 1 134 1 
31 1 261 1 185 1 
31 1 261 1 185 1 
31 1 261 1 185 1 
261 1 176 1 185 1 
261 1 176 1 185 1 
261 1 176 1 185 1 
261 2 117 1 69 2 103 2 74 3 143 1 370 1 93 2 327 2 43 2 167 1 97 1 185 2 375 1 308 1 225 2 24 2 129 1 168 1 
261 1 331 1 69 1 313 2 103 1 289 1 162 1 232 1 74 1 185 1 186 2 210 1 341 2 363 1 364 1 56 2 152 1 58 2 345 1 93 1 43 1 308 1 225 1 24 1 
99 2 351 1 248 1 139 2 49 1 
351 1 139 1 222 1 
139 1 222 1 49 1 
99 1 351 2 101 1 248 1 139 3 49 1 
99 1 131 1 351 1 248 1 139 2 49 1 
198 1 228 1 158 1 68 1 6 3 30 2 267 1 208 2 316 1 238 1 128 1 146 1 273 1 274 2 363 1 111 1 152 1 366 1 59 3 345 1 14 1 92 1 251 1 93 5 253 2 43 5 136 1 254 1 65 4 375 2 195 1 116 1 
228 1 68 2 6 3 203 3 30 2 267 1 208 2 316 2 166 1 238 1 128 1 146 1 273 1 363 2 189 1 298 3 111 4 366 1 59 3 92 1 93 7 251 2 349 1 253 2 43 7 136 1 254 1 65 5 375 3 354 1 195 1 116 1 
158 1 68 1 59 1 14 1 267 1 93 2 251 1 316 1 166 1 43 2 65 1 195 1 
158 1 68 1 59 1 14 1 267 1 93 1 251 1 316 1 166 1 62 1 43 1 195 1 
286 1 
292 1 81 1 279 1 
83 1 279 1 
240 1 279 1 
142 1 240 1 81 2 290 1 279 3 244 1 
142 1 240 1 279 1 
279 1 288 1 
228 1 332 1 310 1 102 2 201 3 202 1 180 1 109 1 141 1 369 7 8 3 301 2 282 1 220 1 34 4 63 1 98 1 146 1 
228 4 330 1 332 2 311 1 310 2 4 1 102 3 201 15 73 1 178 1 264 3 180 1 141 1 109 2 8 10 144 1 234 1 34 16 237 4 238 3 146 4 212 1 87 1 300 2 369 31 61 1 301 5 282 2 220 5 63 1 136 3 254 3 98 1 156 1 
228 1 309 1 332 1 310 1 311 2 4 1 102 2 201 4 73 2 180 1 300 4 109 1 141 1 369 9 8 4 301 3 282 1 144 2 220 1 34 5 352 1 98 1 146 1 156 2 
228 1 332 1 310 1 102 2 201 3 180 1 109 1 369 7 141 1 8 3 301 2 282 1 220 1 34 4 63 1 98 1 146 1 
228 1 332 1 310 1 102 2 201 3 180 1 109 1 369 7 141 1 8 3 301 2 282 1 220 1 34 4 63 1 98 1 146 1 
161 2 105 1 205 1 124 1 235 2 184 1 318 2 240 1 245 1 214 1 279 1 347 1 135 1 112 1 250 1 154 1 302 1 42 1 223 1 172 1 224 1 377 1 227 2 
101 1 139 2 161 1 105 1 49 1 205 1 235 1 294 1 318 1 271 1 320 1 322 1 276 1 214 1 153 1 112 1 347 1 250 1 19 1 302 1 351 1 222 1 223 1 66 1 172 1 227 1 
101 1 356 1 139 2 161 1 105 1 49 1 205 1 291 1 266 1 235 1 294 1 318 1 271 1 320 1 276 1 214 2 153 1 112 1 347 1 250 2 114 1 192 1 19 1 302 1 351 1 222 1 223 1 66 1 172 1 227 1 
101 1 45 1 356 1 139 2 161 1 105 1 49 1 205 1 124 1 266 1 235 1 294 1 318 1 271 1 320 1 322 1 214 3 153 1 112 1 347 1 250 3 114 1 192 2 302 1 351 1 222 1 223 1 66 1 172 1 227 1 
45 1 101 1 356 1 139 2 161 1 105 1 49 1 205 1 266 1 235 1 294 1 318 1 320 1 322 1 214 2 347 1 250 2 114 1 192 2 302 1 351 1 223 1 66 1 222 1 227 1 
35 1 
3 2 175 1 6 2 105 2 184 1 240 1 243 1 245 1 110 1 111 6 59 2 347 1 251 1 18 2 253 2 350 1 302 1 20 2 307 2 257 1 195 1 116 2 157 1 199 1 159 2 68 1 205 2 32 2 207 2 316 1 358 1 213 1 366 3 86 1 133 1 279 1 92 1 93 4 41 2 43 4 42 2 285 1 223 2 375 1 
199 1 110 1 175 1 111 2 366 1 93 2 207 1 358 1 43 2 362 1 243 1 
32 1 93 1 110 1 199 1 175 1 358 1 20 1 43 1 243 1 
199 1 110 1 3 1 175 1 111 2 366 1 93 2 207 1 32 1 358 1 43 2 20 1 362 1 243 1 
2 1 3 4 175 1 47 1 183 1 186 1 341 1 243 1 110 1 149 1 56 1 111 7 58 1 59 1 190 1 17 1 251 1 18 2 253 1 20 3 307 2 116 2 157 1 199 1 25 1 159 2 68 1 71 1 313 1 32 3 207 4 316 1 358 1 270 1 359 1 362 1 273 2 366 3 133 1 91 1 92 1 93 4 41 2 43 4 375 2 
157 1 199 1 159 2 3 2 175 1 68 1 6 2 32 2 207 2 316 1 358 1 273 1 243 1 110 1 111 4 366 2 133 1 59 1 92 1 251 1 93 3 18 2 41 2 253 1 20 2 43 3 375 2 307 2 257 1 116 2 
157 1 199 1 25 1 159 2 3 2 68 1 175 1 47 1 32 2 207 2 316 1 358 1 359 1 273 1 243 1 110 1 111 4 366 2 133 1 59 1 92 1 93 3 251 1 18 2 41 2 253 1 20 2 43 3 375 1 307 2 116 2 
157 1 199 1 25 1 159 2 3 2 68 1 175 1 47 1 32 2 207 2 316 1 358 1 359 1 273 1 243 1 110 1 111 4 366 2 133 1 59 1 92 1 93 3 251 1 18 2 41 2 253 1 20 2 43 3 375 1 307 2 116 2 
199 1 25 1 159 2 3 2 68 1 175 1 6 2 32 2 207 2 316 1 358 1 145 1 273 1 243 1 110 1 130 2 111 4 366 2 323 1 324 2 133 1 368 1 59 1 92 1 93 3 251 1 18 2 253 1 20 2 43 3 375 1 
157 1 159 2 25 1 199 1 3 3 175 1 68 1 47 1 207 3 32 3 316 1 183 1 358 1 359 1 273 1 243 1 110 1 111 5 366 2 133 1 59 1 92 1 18 2 93 3 251 1 41 2 253 1 20 3 43 3 375 1 307 2 116 2 
157 1 159 2 25 1 199 1 3 3 175 1 68 1 47 1 207 3 32 3 316 1 183 1 358 1 359 1 273 1 243 1 110 1 111 5 366 2 133 1 59 1 92 1 18 2 93 3 251 1 41 2 253 1 20 3 43 3 375 1 307 2 116 2 
199 1 159 2 3 2 175 1 68 1 6 2 32 2 207 2 316 1 358 1 273 1 243 1 110 1 130 2 111 4 366 2 324 2 133 1 368 1 59 1 92 1 251 1 93 3 18 2 253 1 20 2 43 3 375 1 257 1 
311 2 333 1 120 1 121 1 313 1 73 2 201 1 105 7 291 1 205 8 144 2 34 1 184 1 209 1 295 2 240 2 186 1 341 1 11 1 342 1 245 1 322 1 56 1 150 2 13 1 58 1 279 3 300 4 369 2 347 2 348 1 283 1 302 2 42 2 329 1 223 8 196 1 259 2 156 2 
228 1 311 1 73 1 313 1 201 2 314 1 265 1 8 1 144 1 34 1 238 1 295 1 186 1 146 1 341 1 148 1 53 1 56 1 343 1 58 1 300 2 369 3 17 1 301 1 136 1 254 1 194 1 259 1 156 1 
228 1 332 1 311 1 121 1 102 1 73 1 201 3 314 1 180 1 141 1 109 1 292 1 8 2 144 1 34 3 295 1 146 1 148 1 364 2 343 1 300 2 369 6 301 2 98 1 259 1 156 1 
228 1 311 2 201 6 73 2 178 1 314 11 264 3 265 1 8 2 144 2 78 1 34 8 237 3 238 2 127 1 295 2 146 2 364 1 148 11 212 1 343 4 300 4 369 14 348 1 301 1 283 1 220 1 371 1 64 1 136 2 254 1 259 1 156 2 
311 1 28 1 120 1 73 1 313 1 201 1 105 1 205 1 265 1 144 1 34 1 239 1 295 1 186 1 340 1 341 1 36 1 364 1 56 1 343 1 57 1 58 1 300 2 369 2 348 1 283 1 42 1 303 1 223 1 355 1 259 1 156 1 
228 1 311 2 28 1 120 1 73 2 313 1 201 4 314 3 105 1 265 1 205 1 8 1 144 2 34 3 79 1 238 1 269 1 360 1 239 1 295 2 186 1 146 1 84 1 341 1 36 1 148 3 56 1 343 3 58 1 325 1 300 4 369 7 301 1 219 1 283 1 42 1 136 1 254 1 223 1 259 2 156 2 
148 1 311 1 121 1 312 1 343 1 73 1 314 1 300 2 369 2 8 1 144 1 220 1 34 2 136 1 295 1 146 1 259 1 156 1 
228 1 148 1 311 1 121 1 343 1 73 1 201 2 314 1 300 2 369 2 8 1 301 1 144 1 372 1 295 1 254 1 259 1 156 1 
228 1 311 1 121 1 73 1 201 2 314 2 8 2 144 1 34 2 238 1 295 1 146 1 148 2 343 2 300 2 369 4 301 1 220 1 136 1 254 1 259 1 156 1 
148 1 311 1 312 1 343 1 13 1 73 1 314 1 300 2 369 2 8 1 144 1 220 1 34 2 136 1 295 1 146 1 259 1 156 1 
228 1 148 1 311 1 343 1 13 1 73 1 201 2 314 1 300 2 369 2 8 1 301 1 144 1 372 1 295 1 254 1 259 1 156 1 
228 1 311 1 73 1 201 2 314 2 8 2 144 1 34 2 238 1 295 1 146 1 148 2 343 2 13 1 300 2 369 4 301 1 220 1 136 1 254 1 259 1 156 1 
228 1 311 1 73 1 201 2 314 2 8 2 144 1 34 2 238 1 295 1 146 1 148 2 343 2 300 2 369 4 301 1 220 1 136 1 254 1 259 1 156 1 
311 1 28 1 71 1 46 1 73 1 201 1 105 1 205 1 144 1 34 1 79 1 295 1 239 1 364 1 300 2 369 2 348 1 283 1 42 1 223 1 259 1 156 1 
0 1 311 1 73 1 201 1 105 1 205 1 142 1 144 1 34 1 295 1 240 1 188 1 186 1 52 1 364 1 58 1 279 1 300 2 369 2 348 1 347 1 40 1 283 1 302 1 42 1 223 1 259 1 156 1 
228 1 311 1 73 1 201 2 314 2 265 1 8 2 144 1 34 2 238 1 295 1 146 1 148 2 343 2 300 2 369 4 301 1 220 1 136 1 254 1 259 1 156 1 
228 1 311 1 28 1 73 1 201 2 314 1 105 1 205 1 291 1 8 1 144 1 79 1 34 1 238 1 295 1 239 1 146 1 148 1 343 1 300 2 369 3 301 1 219 1 136 1 254 1 223 1 259 1 156 1 
228 1 311 1 201 1 73 1 313 1 314 1 230 1 265 1 8 1 144 1 34 2 238 1 295 1 186 1 146 1 341 1 148 1 53 1 56 1 343 1 58 1 300 2 369 3 17 1 220 1 136 1 254 1 259 1 156 1 
228 3 309 1 27 1 311 2 72 1 73 2 140 1 201 10 178 1 264 1 75 2 8 6 144 2 34 9 237 2 238 3 10 1 146 3 277 1 212 1 39 1 300 4 170 1 369 19 252 2 301 3 220 3 136 3 254 3 156 2 
228 2 309 1 311 3 4 2 72 1 201 12 73 3 140 1 178 2 264 2 125 1 75 4 8 4 233 1 144 3 34 14 237 2 238 3 10 2 146 3 297 1 277 1 365 1 39 2 300 6 369 26 90 1 252 1 301 2 220 2 136 3 254 2 256 1 156 3 
228 5 26 1 309 1 332 1 311 3 4 1 72 1 102 1 73 3 140 1 201 21 178 3 264 3 180 1 109 1 141 1 125 1 75 4 233 1 8 8 144 3 34 20 237 4 238 4 10 2 146 5 297 1 277 1 212 1 365 1 39 1 300 6 170 1 90 1 369 41 252 1 301 4 220 4 136 4 254 4 98 1 256 1 156 3 
228 4 26 1 309 1 332 1 311 4 4 2 72 1 102 1 73 4 140 1 201 18 178 3 264 3 180 1 109 1 141 1 125 1 75 4 233 1 8 7 144 4 34 20 237 4 238 4 10 2 146 5 297 1 277 1 212 1 365 1 39 1 300 8 170 1 90 1 369 38 252 1 301 4 220 3 136 4 254 3 98 1 256 1 156 4 
228 8 309 1 332 1 311 2 4 1 72 1 102 1 73 2 140 1 201 25 178 2 264 4 180 1 109 1 141 1 125 1 75 4 233 1 8 14 144 2 34 27 237 4 238 7 10 1 146 8 297 1 277 1 212 2 365 1 39 1 300 4 90 1 369 52 252 1 301 7 220 7 371 2 136 7 254 7 98 1 256 1 156 2 
260 1 261 1 370 1 69 1 167 1 103 1 185 1 225 1 24 1 168 1 
331 1 289 1 
261 1 69 1 284 1 216 1 103 1 185 1 225 1 24 1 206 1 
261 1 117 1 69 1 103 1 74 2 370 1 93 1 327 1 43 1 167 1 97 1 185 1 375 1 308 1 225 1 24 1 129 1 168 1 
261 1 117 1 69 1 103 1 74 2 370 1 93 1 327 1 43 1 167 1 97 1 185 1 375 1 308 1 225 1 24 1 129 1 168 1 
261 1 117 1 69 1 103 1 74 2 370 1 93 1 327 1 43 1 167 1 97 1 185 1 375 1 308 1 225 1 24 1 129 1 168 1 
31 1 113 1 1 1 
31 1 113 1 1 1 
95 1 176 1 
113 1 95 1 176 1 
210 1 162 1 
261 1 331 1 200 1 69 1 103 1 289 1 313 2 162 1 232 1 74 1 185 1 186 2 210 1 129 1 341 2 363 1 364 1 56 2 152 1 58 2 345 1 327 1 93 1 43 1 65 1 225 1 24 1 
31 1 1 1 
113 1 95 1 176 1 
311 1 118 1 177 1 73 1 201 1 105 2 205 2 265 1 144 1 34 1 295 1 240 1 186 2 341 2 11 1 275 1 150 2 58 2 279 1 300 2 369 2 347 1 348 1 283 1 302 1 304 1 223 2 196 1 226 1 259 1 156 1 
245 1 55 1 105 1 122 1 279 1 205 1 347 1 235 1 302 1 42 1 184 1 240 1 223 1 224 1 
322 1 55 1 101 1 139 2 179 1 335 1 105 1 153 1 49 1 205 1 347 1 235 1 302 1 294 1 351 1 222 1 223 1 66 1 
322 1 55 1 101 1 139 2 179 1 335 1 105 2 153 1 49 1 205 2 291 1 347 1 235 1 302 1 294 1 351 1 222 1 223 2 66 1 
322 1 101 1 139 2 335 1 105 1 153 1 49 1 205 1 347 1 165 1 235 1 302 1 294 1 351 1 222 1 223 1 66 1 
76 1 
92 1 251 1 253 1 316 1 68 1 375 1 59 1 273 1 89 1 
228 1 6 2 59 1 30 1 253 2 208 1 238 1 136 1 254 1 375 1 146 1 116 1 
93 1 43 1 111 1 366 1 375 1 273 1 
68 2 263 1 105 2 205 2 316 2 166 1 184 1 240 1 245 1 213 1 111 2 86 1 366 1 279 1 59 1 347 1 92 1 251 2 93 2 253 1 302 1 350 1 42 2 43 2 223 2 195 1 
292 1 253 1 375 1 59 1 273 1 89 1 60 1 
157 1 68 1 6 1 316 1 273 1 111 1 366 1 59 1 92 1 251 1 93 1 41 1 253 1 43 1 307 1 375 2 116 1 
228 2 138 1 7 2 6 12 105 3 290 1 106 2 291 1 142 3 293 2 9 2 238 2 240 3 146 2 242 2 111 5 59 9 60 1 347 4 251 4 253 8 302 3 155 1 254 2 195 2 116 6 263 1 68 4 29 2 205 3 30 6 316 4 208 6 81 2 211 2 83 3 273 2 86 1 366 3 279 10 325 2 89 1 326 1 92 4 94 2 93 5 42 1 43 5 221 2 136 2 223 3 375 8 376 1 288 2 
228 2 68 2 100 1 29 2 6 6 178 1 264 1 30 5 125 1 233 1 208 5 316 2 237 1 238 2 242 1 146 2 273 2 297 1 365 1 111 1 86 1 366 1 59 8 90 1 92 2 93 1 251 2 253 5 43 1 136 2 254 2 328 1 375 5 195 1 116 3 
228 1 2 1 332 1 68 1 71 1 29 2 313 1 180 1 109 1 316 1 270 1 359 1 186 1 242 1 146 2 341 1 56 1 58 1 59 2 190 1 91 1 92 1 17 1 251 1 93 1 253 2 43 1 115 1 
311 1 28 1 313 2 73 1 201 1 105 1 205 1 144 1 79 1 80 1 239 1 295 1 186 2 341 2 364 1 56 2 58 2 300 2 369 1 91 1 17 2 283 1 42 1 223 1 259 1 156 1 
68 1 102 1 6 4 86 1 59 1 30 2 92 1 251 1 208 2 253 2 316 1 375 4 195 1 116 2 273 2 
357 1 167 1 103 1 210 1 225 1 
236 1 103 1 225 1 
236 1 103 1 225 1 
236 1 103 1 225 1 
103 1 82 1 225 1 
103 1 82 1 225 1 
103 1 82 1 225 1 
103 1 225 1 
261 1 185 1 
228 2 309 1 311 1 332 2 73 1 201 5 180 1 300 2 109 2 369 10 301 3 8 5 144 1 220 2 34 5 115 1 146 2 156 1 
309 1 311 1 73 1 300 2 369 2 8 1 144 1 220 1 34 2 136 1 146 1 156 1 
228 1 309 1 311 1 201 2 73 1 300 2 369 4 301 1 8 2 144 1 220 1 34 2 238 1 136 1 254 1 146 1 156 1 
309 1 311 3 332 1 4 1 334 1 201 2 73 3 300 6 170 1 369 3 109 1 301 1 8 2 144 3 220 1 34 1 156 3 
330 1 228 5 309 1 332 3 311 5 4 2 102 1 334 1 201 18 73 5 178 1 264 3 180 2 109 3 141 1 8 12 144 5 34 16 237 4 238 3 146 5 212 1 87 1 300 10 170 1 369 34 61 1 301 7 220 5 305 1 136 3 254 3 98 1 156 5 
228 1 309 1 332 1 311 1 102 1 73 1 201 4 178 1 264 1 180 1 300 2 109 1 141 1 90 1 369 8 8 2 301 2 144 1 34 4 237 1 98 1 146 1 156 1 
228 1 309 1 332 1 311 2 102 1 201 5 73 2 178 1 264 1 180 1 109 1 141 1 8 3 144 2 34 6 237 2 238 1 146 2 212 1 300 4 369 11 90 1 301 2 220 1 305 1 136 1 98 1 156 2 
228 3 309 1 332 1 311 3 4 1 102 1 201 10 73 3 178 1 264 1 180 1 109 1 141 1 125 1 233 1 8 4 144 3 34 9 237 1 238 2 146 3 297 1 365 1 300 6 369 19 90 1 301 3 220 1 305 1 136 2 254 2 98 1 156 3 
228 2 309 1 332 1 311 3 4 1 102 1 201 7 73 3 178 1 264 1 180 1 109 1 141 1 125 1 233 1 8 5 144 3 34 10 237 1 238 2 146 3 297 1 365 1 300 6 369 17 90 1 301 3 220 2 305 1 136 2 254 1 98 1 156 3 
228 1 309 1 332 1 311 1 102 1 73 1 201 4 178 1 264 1 180 1 300 2 109 1 141 1 90 1 369 8 8 2 301 2 144 1 34 4 237 1 98 1 146 1 156 1 
228 2 309 1 311 1 201 6 73 1 178 1 264 1 125 1 233 1 8 2 144 1 34 6 237 1 238 2 146 2 297 1 365 1 300 2 369 12 90 1 301 1 220 1 136 2 254 2 156 1 
228 2 309 1 332 1 311 4 4 2 102 1 201 8 73 4 178 1 264 1 180 1 109 1 141 1 125 1 233 1 8 5 144 4 34 10 237 1 238 2 146 3 297 1 365 1 300 8 369 18 90 1 301 3 220 2 305 1 136 2 254 1 98 1 156 4 
228 2 309 1 311 4 4 2 201 7 73 4 178 1 264 1 125 1 233 1 8 6 144 4 34 9 237 1 238 3 146 3 297 1 365 1 300 8 170 1 369 16 90 1 301 3 220 3 136 3 254 2 156 4 
228 1 332 3 201 4 180 1 369 7 141 2 109 3 301 3 8 6 220 3 34 3 98 1 146 1 
228 2 309 1 332 1 311 4 4 2 102 1 201 8 73 4 178 1 264 1 180 1 109 1 141 1 125 1 233 1 8 4 144 4 34 10 237 1 238 2 146 3 297 1 365 1 300 8 170 1 369 18 90 1 301 3 220 1 136 2 254 1 98 1 156 4 
228 1 311 2 332 1 4 1 102 1 201 4 73 2 180 1 300 4 369 8 141 1 109 1 8 3 301 2 144 2 220 1 34 4 98 1 146 1 156 2 
292 1 228 1 8 2 301 2 332 1 34 3 102 1 201 3 98 1 146 1 180 1 369 6 109 1 141 1 
228 1 311 1 201 2 73 1 300 2 369 4 301 1 8 2 144 1 220 1 34 2 238 1 305 1 136 1 254 1 146 1 156 1 
228 1 212 1 201 4 178 1 264 1 369 7 301 1 8 2 220 1 34 3 237 2 238 1 136 1 254 1 146 1 
228 3 332 2 311 2 4 2 102 1 201 12 73 2 334 1 264 2 180 1 109 2 141 1 8 9 144 2 34 11 238 2 237 2 127 1 146 3 212 1 300 4 369 23 301 5 220 4 371 1 136 2 254 2 98 1 156 2 
237 1 201 1 369 1 
34 1 264 1 369 1 
228 1 311 1 73 1 201 3 300 2 325 1 369 6 8 3 301 2 144 1 220 1 34 3 238 1 305 1 136 1 254 1 146 1 156 1 
228 2 309 1 311 1 201 6 73 1 178 1 264 1 125 1 233 1 8 2 144 1 34 6 237 1 238 2 146 2 297 1 365 1 300 2 369 12 90 1 301 1 220 1 136 2 254 2 156 1 
228 1 332 1 201 3 180 1 369 6 109 1 301 1 8 2 220 1 34 3 146 1 
332 1 311 1 4 1 334 1 201 2 73 1 300 2 109 1 141 1 369 3 8 2 301 1 144 1 220 1 34 1 98 1 156 1 
364 1 247 1 268 1 186 1 241 1 58 1 341 1 
364 1 247 1 249 1 132 1 104 1 58 1 217 1 268 1 241 1 186 1 339 1 341 1 
245 1 105 4 279 1 205 4 291 1 108 1 347 1 33 1 302 1 42 1 184 1 223 4 240 1 
119 1 105 2 279 1 205 2 326 1 142 1 347 2 337 1 182 1 302 1 171 1 223 2 240 1 272 1 
347 1 302 1 294 1 42 1 139 1 222 1 223 1 105 1 49 1 205 1 
347 1 322 1 302 1 240 1 223 2 105 2 279 1 11 1 205 2 291 1 275 1 
245 1 105 4 279 3 205 5 291 1 326 1 347 2 33 1 302 2 42 1 184 1 209 1 223 5 240 2 11 1 342 1 
245 1 105 4 279 3 205 5 291 1 326 1 347 2 33 1 302 2 42 1 184 1 209 1 223 5 240 2 319 1 11 1 
347 1 245 1 292 1 302 1 42 1 184 1 240 1 223 1 105 1 279 1 205 1 
364 1 28 1 71 1 120 1 56 1 46 1 313 1 58 1 105 1 205 1 42 1 223 1 186 1 341 1 
364 1 28 1 71 1 120 1 56 1 46 1 313 1 58 1 105 1 205 1 326 1 223 1 186 1 341 1 
120 1 71 1 313 2 105 2 205 2 108 1 142 2 126 1 9 1 240 2 188 1 186 2 341 2 52 1 364 1 56 1 58 2 279 3 326 1 347 1 302 1 21 1 223 2 288 1 
105 3 205 3 108 1 142 1 9 1 240 1 81 1 83 1 273 1 111 1 279 4 326 1 347 1 281 1 93 2 302 1 43 2 42 1 221 1 374 1 223 3 375 1 288 1 
111 1 105 3 279 4 205 3 108 1 326 1 142 1 347 1 293 1 93 2 302 1 42 1 43 2 221 1 9 1 240 1 223 3 375 1 81 1 83 1 273 1 288 1 
347 1 302 1 223 1 329 1 105 1 205 1 
322 1 333 1 150 1 105 6 290 1 279 3 291 1 205 7 142 1 347 3 337 1 182 1 302 2 42 2 209 1 329 1 223 7 240 2 353 1 11 1 342 1 
228 1 332 1 311 2 28 1 120 1 102 1 201 2 73 2 313 1 314 1 180 1 105 1 265 1 291 1 205 1 109 1 141 1 8 1 144 2 34 3 79 1 295 2 239 1 186 1 146 1 341 1 84 1 148 1 364 2 56 1 58 1 300 4 369 5 301 1 219 1 223 1 98 1 226 1 259 2 156 2 
68 2 263 1 7 1 105 1 205 1 293 1 316 2 81 1 211 1 83 1 273 1 111 2 366 1 59 1 279 2 89 1 60 1 92 2 251 2 93 3 94 1 253 1 42 1 43 3 221 1 65 1 223 1 375 1 
138 1 105 2 290 1 279 2 291 1 205 2 142 1 347 2 302 1 329 1 223 2 240 1 81 1 
52 1 364 1 120 1 56 1 313 1 58 2 105 1 279 1 205 1 142 1 347 1 302 1 42 1 240 1 223 1 186 2 188 1 341 1 
105 1 290 1 279 1 205 1 326 1 142 1 347 2 337 1 182 1 302 1 223 1 240 1 353 1 
38 1 160 1 118 1 177 1 58 1 304 1 187 1 186 1 341 1 
321 1 85 1 187 1 
364 1 160 1 38 1 187 1 147 1 
321 1 364 1 262 1 85 1 38 2 160 2 71 1 93 2 191 1 126 1 43 2 221 1 21 1 65 1 375 1 187 1 361 1 273 1 147 2 
112 1 266 1 250 1 276 1 114 1 214 1 356 1 172 1 
214 4 356 2 229 1 346 1 112 1 50 1 336 1 250 4 266 3 114 2 192 2 23 1 172 1 258 1 
276 1 214 2 356 1 181 1 280 1 112 1 266 1 250 2 114 1 192 1 172 1 37 1 
276 1 214 3 356 1 346 2 112 1 164 1 266 1 250 3 336 2 114 1 172 1 258 1 
266 2 197 1 96 2 151 1 
112 1 250 1 276 1 214 1 67 1 172 1 
112 1 266 1 250 2 276 1 114 1 192 1 214 2 356 1 172 1 367 1 
173 1 
112 1 266 1 250 1 276 1 114 1 214 1 356 1 172 1 
292 1 266 1 114 1 356 1 
112 1 266 1 250 1 114 1 214 1 356 1 172 1 
250 1 161 1 227 1 
276 1 214 3 356 1 346 2 112 1 266 1 250 3 336 1 114 1 317 1 172 1 258 1 
112 1 266 1 250 2 114 1 192 1 214 2 54 1 356 1 172 1 
112 1 266 1 250 1 276 1 214 1 351 1 278 1 139 1 222 1 172 1 229 1 
112 1 266 1 250 1 276 1 114 1 214 1 172 1 
112 1 250 1 276 1 114 2 214 1 356 1 172 1 
276 1 214 2 123 1 15 1 112 2 266 1 250 2 114 1 172 2 193 1 
276 1 246 1 214 3 356 1 229 1 367 1 112 1 50 1 250 3 266 2 114 1 192 2 172 1 
276 1 214 2 101 1 356 1 139 2 49 1 112 1 266 1 250 2 338 1 114 1 192 1 351 1 222 1 172 1 
276 1 174 1 214 4 54 1 356 1 229 1 112 2 50 1 250 4 266 2 114 1 192 2 172 2 
276 1 214 3 356 1 367 1 346 1 112 1 250 3 266 1 192 1 114 1 172 1 
50 1 266 1 23 1 229 1 
266 1 114 1 

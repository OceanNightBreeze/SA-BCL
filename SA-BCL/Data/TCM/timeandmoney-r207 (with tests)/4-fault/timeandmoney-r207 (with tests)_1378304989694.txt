#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
249 3 1 1 252 1 226 2 5 1 283 1 327 1 230 1 284 1 309 4 92 1 95 1 233 1 349 2 236 2 57 1 150 1 105 1 12 2 157 2 32 9 176 1 158 5 161 1 40 9 183 2 137 2 88 6 
249 3 1 1 252 1 226 2 5 1 283 1 327 1 230 1 284 1 309 4 92 1 95 1 233 1 349 2 236 2 57 1 150 1 105 1 12 2 157 2 32 9 176 1 158 5 161 1 40 9 183 2 137 2 88 6 
249 4 1 1 252 1 226 2 5 1 283 1 327 1 230 1 284 1 309 5 92 1 95 1 233 1 349 2 236 2 57 1 150 1 105 1 12 2 157 2 32 10 176 1 158 6 161 1 40 10 183 2 137 2 88 7 
249 2 1 1 252 1 226 2 5 1 327 1 230 1 284 1 309 3 92 1 95 1 233 1 349 2 236 2 57 1 150 1 105 1 12 1 157 2 32 7 176 1 158 4 161 1 40 7 183 2 137 2 88 4 
249 1 1 1 252 1 12 2 283 1 157 1 32 4 309 2 176 1 158 3 95 1 161 1 40 4 349 1 137 1 88 3 183 1 236 1 
252 1 226 1 157 1 327 1 32 2 256 1 176 1 92 1 158 1 161 1 211 1 40 2 235 1 349 1 137 1 236 1 
249 1 252 1 226 1 157 2 32 3 230 1 309 1 176 1 158 2 161 1 40 3 88 1 236 2 
249 3 1 1 252 1 226 1 283 1 230 1 284 1 309 4 95 1 349 1 236 2 57 1 12 2 107 1 157 2 32 9 176 1 158 5 161 1 323 1 40 9 88 7 183 1 137 1 
249 3 1 1 252 1 226 1 283 1 230 1 284 1 309 4 95 1 349 1 236 2 57 1 12 2 107 1 157 2 32 9 176 1 158 5 161 1 323 1 40 9 88 7 183 1 137 1 
238 1 301 1 347 1 
193 1 160 2 347 1 
164 2 152 1 104 1 165 2 212 2 170 2 69 2 56 2 
250 1 225 1 164 3 0 1 4 2 165 2 22 1 6 1 170 2 169 2 120 1 23 1 122 2 50 2 332 1 96 1 212 2 56 2 196 1 174 1 197 1 336 1 198 1 152 1 104 1 239 2 267 1 241 1 155 1 64 1 243 1 218 1 358 1 111 1 114 1 180 1 69 3 
164 1 104 1 16 1 165 1 212 1 170 1 223 1 355 1 69 1 56 1 
164 1 262 1 238 1 21 1 58 1 227 1 201 1 347 1 355 1 33 1 143 1 212 1 273 1 69 1 
164 1 262 2 238 1 58 2 165 1 227 1 170 1 347 1 355 1 33 1 143 1 212 1 273 1 56 1 69 1 
262 1 204 1 58 1 167 1 99 1 
262 2 204 1 238 1 58 2 17 1 54 1 347 1 99 1 
262 1 58 1 99 1 
262 1 164 1 104 1 58 1 165 1 170 1 355 1 189 1 204 1 16 1 212 1 223 1 56 1 69 1 
347 1 
24 1 262 2 204 1 238 1 58 2 54 1 347 1 99 1 
100 1 262 5 238 1 58 5 199 2 280 2 308 1 347 1 7 2 340 1 204 2 84 1 36 1 359 1 288 1 54 1 18 1 55 1 99 2 
152 1 301 1 
164 2 152 2 165 1 170 1 123 1 192 1 212 2 69 2 56 1 
25 1 19 1 357 1 
164 1 197 1 198 1 152 1 239 1 240 1 22 1 6 1 241 1 169 1 358 1 122 1 114 1 69 1 174 1 196 1 
197 1 164 2 198 1 25 1 239 1 22 1 241 1 6 1 170 1 169 1 255 1 358 1 122 1 113 1 114 1 212 1 56 1 69 2 196 1 174 1 
164 5 152 1 26 1 21 1 165 1 170 4 294 1 255 2 192 1 113 1 212 5 181 1 56 4 69 5 
164 2 16 1 212 2 110 1 170 2 355 1 69 2 56 2 
164 3 152 1 165 1 212 3 170 3 255 1 69 3 56 3 
164 1 16 1 212 1 170 1 355 1 69 1 56 1 
164 1 123 1 192 1 165 1 212 1 170 1 355 1 69 1 56 1 
250 1 225 1 164 4 0 1 345 1 4 1 165 2 227 1 22 1 6 1 170 3 169 1 255 1 23 1 122 1 143 1 50 2 332 1 192 1 96 1 213 1 212 3 56 3 196 1 174 1 197 1 262 1 336 1 198 1 152 1 104 1 239 1 58 1 267 1 241 1 155 1 355 1 33 1 218 1 358 1 114 1 113 1 273 1 69 4 
164 2 152 1 21 1 212 2 170 1 294 1 255 1 69 2 56 1 
262 1 164 3 103 1 58 1 165 1 227 1 170 3 255 2 347 1 355 1 33 1 143 1 192 1 113 1 212 3 213 1 273 1 56 3 69 3 
164 2 25 1 192 1 165 1 212 2 170 2 255 1 69 2 56 2 357 1 
164 1 197 1 198 1 152 1 239 1 22 1 6 1 241 1 169 1 358 1 122 1 114 1 69 1 174 1 196 1 
164 1 197 1 152 1 239 1 22 1 6 1 241 1 169 1 13 1 330 1 358 1 122 1 69 1 174 1 196 1 
250 1 225 1 45 1 4 4 281 1 75 1 120 2 23 1 209 1 50 2 332 1 98 1 336 1 25 2 59 1 155 2 128 1 357 2 218 1 220 1 275 1 19 2 363 1 305 1 
164 1 227 1 212 1 170 1 110 1 355 1 69 1 56 1 
289 1 342 1 
289 1 342 1 
205 1 129 1 
205 1 129 1 
205 1 129 1 
265 1 289 1 342 1 
289 1 38 1 342 1 
205 1 289 2 302 1 304 1 342 2 129 1 
265 1 289 1 342 1 
265 1 289 1 342 1 
289 1 221 1 342 1 
289 1 221 1 342 1 
289 1 221 1 342 1 
164 2 262 1 152 1 58 1 279 1 307 1 266 1 62 1 254 1 337 1 170 2 81 1 229 1 331 1 51 1 289 1 38 1 212 2 115 1 77 1 68 1 69 2 342 1 56 2 
262 2 27 1 58 2 279 3 253 1 29 1 62 2 347 1 229 2 203 2 66 1 51 2 132 1 289 2 115 1 324 1 77 2 302 1 342 2 
349 1 137 1 183 1 
349 1 235 1 137 1 
131 1 126 1 235 1 328 1 183 2 137 3 
210 1 126 1 235 1 328 1 183 1 137 2 
126 2 235 1 183 1 328 1 137 2 
280 1 75 1 347 2 7 1 193 1 288 3 147 2 54 1 312 1 11 1 98 1 261 2 99 1 262 5 314 1 238 1 316 1 59 1 199 1 58 5 266 1 30 1 81 1 356 1 15 1 204 4 84 2 36 1 271 2 160 3 68 1 363 1 
251 1 280 2 166 1 167 3 75 1 47 1 347 3 7 2 191 1 193 1 288 3 147 2 54 1 312 1 11 1 98 1 261 2 99 4 262 7 238 1 59 1 154 3 58 7 199 2 30 1 81 2 15 1 204 5 84 2 36 1 160 3 18 1 363 1 
280 1 75 1 347 3 7 1 193 2 288 3 147 2 11 1 98 1 261 2 262 3 314 1 238 1 316 1 59 1 199 1 58 3 30 1 81 1 204 2 15 1 84 2 271 1 160 4 18 1 363 1 
262 1 314 1 316 1 58 1 199 1 280 1 166 1 7 1 18 1 
358 1 301 1 287 1 
358 1 245 1 
303 1 
358 1 241 1 196 1 
358 1 299 1 
358 1 241 1 
358 3 83 1 287 2 241 1 196 1 41 1 
185 1 149 1 20 1 263 2 59 1 45 2 4 7 28 1 155 3 75 1 353 1 120 4 14 1 35 1 177 1 9 1 305 3 
185 1 149 1 20 1 263 2 59 1 45 2 4 7 28 1 155 3 75 1 353 1 120 4 14 1 35 1 177 1 9 1 305 3 
185 1 149 1 20 1 263 2 59 1 45 2 28 1 4 7 155 3 75 1 353 1 120 4 14 1 35 1 177 1 130 1 9 1 305 3 
250 1 225 1 276 1 185 5 20 2 45 5 4 31 75 4 120 16 23 1 9 1 50 2 332 1 313 1 97 3 98 3 260 1 215 4 149 1 79 1 263 3 59 4 28 1 155 15 63 1 353 2 14 1 35 2 177 2 15 3 179 1 322 1 305 10 363 3 
250 2 225 2 185 1 20 1 45 3 4 9 186 1 75 1 120 5 23 2 9 1 50 4 332 2 79 1 263 2 59 1 28 1 155 4 353 1 295 1 14 1 35 1 177 1 305 4 
252 1 226 1 140 1 73 1 6 1 169 1 121 1 122 1 311 1 52 1 349 1 235 1 236 1 197 1 291 1 151 1 239 1 157 1 338 1 32 2 176 1 131 1 158 1 321 1 161 1 39 1 40 2 88 1 183 1 137 2 
252 1 226 1 140 1 73 1 6 1 169 1 122 1 311 1 146 1 52 1 349 1 235 1 236 1 197 1 291 1 151 1 239 1 157 1 338 1 32 3 131 1 158 1 321 1 161 1 134 1 116 1 40 3 183 1 88 2 137 2 
252 1 226 1 73 1 6 1 169 1 122 1 311 1 52 1 235 1 349 1 197 1 291 1 151 1 239 1 338 1 32 2 131 1 158 1 161 1 134 1 116 1 40 2 88 2 137 2 183 1 
226 2 22 1 6 1 169 1 122 1 311 2 146 1 52 2 53 1 259 1 236 1 197 1 151 2 239 1 350 1 241 1 108 1 157 1 32 1 358 1 159 1 162 1 40 1 
226 1 140 1 73 1 6 1 169 1 122 1 311 1 52 1 349 1 235 1 236 1 197 1 291 1 151 1 239 1 157 1 338 1 32 1 176 1 131 1 321 1 134 1 39 1 40 1 183 1 137 2 
46 1 
184 2 164 1 21 1 278 1 141 1 280 1 227 1 22 2 6 1 228 1 169 2 91 1 7 1 122 2 142 1 143 1 288 1 212 1 54 1 259 1 11 1 99 2 197 1 262 3 239 2 199 1 58 3 125 1 241 1 201 1 355 1 33 1 358 1 36 1 84 1 159 1 273 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 164 1 262 3 24 1 141 1 278 1 21 1 58 3 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 54 1 87 1 248 1 69 1 99 1 
164 1 184 2 278 1 141 1 21 1 280 1 227 1 228 1 7 1 143 1 288 1 212 1 262 2 199 1 58 2 201 1 355 1 33 1 84 1 36 1 361 1 273 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
184 2 262 2 164 1 141 1 278 1 21 1 58 2 227 1 201 1 228 1 355 1 33 1 143 1 273 1 212 1 87 1 248 1 69 1 
164 1 184 2 278 1 141 1 21 1 280 1 227 1 228 1 7 1 143 1 94 1 288 1 212 1 262 2 199 1 58 2 201 1 355 1 33 1 84 1 36 1 273 1 87 1 248 1 69 1 
250 1 225 1 45 2 4 6 75 1 120 3 23 1 9 1 50 2 332 1 336 1 25 1 152 2 263 1 59 1 28 1 155 3 353 1 357 1 14 1 218 1 177 1 301 1 220 1 19 1 305 2 
276 1 250 2 225 2 185 1 45 1 4 14 75 2 120 8 23 2 50 4 332 2 313 1 97 3 98 2 215 3 101 1 336 2 152 1 25 11 59 1 267 1 155 6 64 1 156 1 268 1 357 4 34 1 218 1 15 2 67 1 19 11 305 2 363 1 
164 2 225 1 250 1 4 2 22 1 6 1 169 1 170 1 255 1 120 1 23 1 122 1 332 1 50 2 212 1 56 1 196 1 174 1 197 1 198 1 336 1 152 1 239 1 240 1 61 1 241 1 267 1 155 1 156 1 64 1 217 1 357 1 358 1 218 1 269 1 114 1 113 1 69 2 
225 3 0 2 185 4 45 4 4 20 6 2 48 1 9 1 50 6 332 3 10 2 194 1 98 2 56 1 196 2 197 2 336 3 198 2 152 2 239 3 59 3 241 2 155 10 64 1 156 1 14 1 15 2 298 2 113 1 114 2 19 7 69 3 305 8 250 3 164 3 22 1 169 3 170 1 75 3 255 1 120 10 23 3 122 3 257 2 212 1 174 2 263 1 25 7 28 1 267 1 127 1 353 1 357 7 218 3 358 2 177 1 37 2 134 1 363 2 
164 1 250 2 225 2 43 1 4 2 22 2 6 2 170 1 169 7 255 1 120 1 23 2 121 1 231 1 122 8 50 4 332 2 212 1 259 1 56 1 237 1 197 2 336 2 239 8 352 1 267 1 241 2 155 1 64 1 243 2 358 3 218 2 178 1 159 1 220 1 134 1 325 1 70 1 69 1 
250 1 225 1 42 1 164 1 45 1 4 3 165 1 170 1 75 1 120 1 23 1 50 2 332 1 192 1 212 1 98 1 56 1 336 1 25 1 59 1 155 2 156 1 357 1 218 1 15 1 19 1 305 1 69 1 363 1 
225 1 250 1 185 1 336 1 25 1 4 2 281 1 75 1 120 2 23 1 357 1 218 1 332 1 50 2 220 1 19 1 98 1 305 1 
225 1 250 1 336 1 25 1 45 1 59 1 4 2 155 2 23 1 357 1 218 1 332 1 50 2 220 1 275 1 19 1 305 1 363 1 
250 1 225 1 185 1 45 1 4 4 75 1 120 2 23 1 50 2 332 1 98 1 336 1 25 2 59 1 155 2 357 2 218 1 15 1 220 1 19 2 305 2 363 1 
225 1 250 1 185 1 336 1 25 1 4 2 281 1 75 1 120 2 23 1 357 1 231 1 218 1 332 1 50 2 19 1 98 1 305 1 
225 1 250 1 336 1 25 1 45 1 59 1 4 2 155 2 23 1 357 1 231 1 218 1 332 1 50 2 275 1 19 1 305 1 363 1 
250 1 225 1 185 1 45 1 4 4 75 1 120 2 23 1 231 1 50 2 332 1 98 1 336 1 25 2 59 1 155 2 357 2 218 1 15 1 19 2 305 2 363 1 
250 1 225 1 185 1 45 1 4 4 75 1 120 2 23 1 50 2 332 1 98 1 336 1 25 2 59 1 155 2 357 2 218 1 15 1 19 2 305 2 363 1 
164 1 225 1 250 1 0 1 4 2 22 1 6 1 169 1 120 1 23 1 122 1 332 1 50 2 196 1 174 1 197 1 198 1 336 1 152 1 239 1 241 1 267 1 155 1 64 1 358 1 218 1 114 1 69 1 
164 1 225 1 250 1 4 2 22 1 6 1 169 1 120 1 23 1 330 1 122 1 332 1 50 2 195 1 196 1 174 1 197 1 336 1 152 1 239 1 241 1 267 1 155 1 64 1 13 1 358 1 218 1 69 1 
250 1 225 1 185 1 45 1 4 4 75 1 120 2 23 1 50 2 332 1 98 1 336 1 25 2 59 1 155 2 156 1 357 2 218 1 15 1 19 2 305 2 363 1 
164 1 225 1 250 1 185 1 0 1 45 1 4 4 6 1 169 1 75 1 120 2 23 1 121 1 122 1 332 1 50 2 98 1 196 1 174 1 197 1 198 1 336 1 25 2 239 1 59 1 241 1 155 2 357 2 358 1 218 1 15 1 114 1 37 1 19 2 363 1 305 2 69 1 
250 1 225 1 164 1 185 1 4 3 165 1 170 1 75 1 120 2 23 1 50 2 332 1 192 1 172 1 212 1 98 1 56 1 336 1 25 1 59 1 155 1 156 1 357 1 218 1 15 1 19 1 363 1 305 1 69 1 
276 1 250 2 225 2 185 3 45 3 4 19 187 1 75 3 120 9 23 2 190 1 50 4 332 2 286 2 333 1 313 1 97 1 98 3 148 1 215 2 80 1 59 3 351 1 155 10 295 1 15 3 133 2 138 1 305 6 363 3 
250 2 225 2 276 2 185 1 45 1 4 26 75 3 120 14 23 2 190 2 50 4 332 2 286 4 333 1 97 2 98 3 215 2 124 1 79 1 80 1 102 1 264 1 59 2 293 1 351 1 155 12 318 1 295 1 15 3 297 1 133 1 305 2 138 2 363 2 
276 3 250 3 225 3 185 4 45 4 4 41 75 5 120 20 23 3 9 1 190 1 50 6 332 3 286 4 333 1 313 1 97 3 98 4 148 1 215 4 124 1 79 1 80 1 263 1 102 1 264 1 59 5 28 1 293 1 351 1 155 21 353 1 318 1 14 1 295 1 177 1 15 4 297 1 133 1 136 1 138 2 305 8 363 4 
276 3 250 3 225 3 185 2 45 4 4 38 75 5 120 20 23 3 9 1 190 1 50 6 332 3 286 4 333 1 313 1 97 3 98 4 148 1 215 4 124 1 79 1 80 1 263 1 102 1 264 1 59 4 28 1 293 1 351 1 155 18 353 1 318 1 14 1 295 1 177 1 15 4 297 1 133 1 136 1 138 2 305 6 363 3 
276 2 250 1 225 1 185 6 45 7 4 50 75 8 120 26 23 1 9 1 190 1 50 2 332 1 286 3 333 1 313 2 97 4 98 7 215 4 124 1 80 1 263 1 102 1 264 1 59 8 28 1 293 1 351 1 155 24 353 1 318 1 14 1 295 1 177 1 15 7 297 1 133 1 67 2 138 1 305 13 363 7 
139 1 51 1 27 1 289 1 324 1 62 1 77 1 302 1 229 1 342 1 
307 1 38 1 
206 1 93 1 51 1 289 1 62 1 77 1 49 1 229 1 342 1 
265 1 222 1 
242 1 304 1 221 1 
262 1 27 1 58 1 279 2 253 1 29 1 62 1 347 1 229 1 203 1 66 1 51 1 289 1 115 1 324 1 77 1 302 1 342 1 
262 1 27 1 58 1 279 2 253 1 29 1 62 1 347 1 229 1 203 1 66 1 51 1 289 1 115 1 324 1 77 1 302 1 342 1 
262 1 27 1 58 1 279 2 253 1 29 1 62 1 347 1 229 1 203 1 66 1 51 1 289 1 115 1 324 1 77 1 302 1 342 1 
265 1 304 1 222 1 
265 1 304 1 222 1 
242 1 221 1 
242 1 304 1 221 1 
331 1 254 1 
164 2 279 1 307 1 253 1 254 1 170 2 229 1 51 1 331 1 289 1 212 2 77 1 56 2 262 1 152 1 58 1 266 1 62 1 337 1 81 1 203 1 219 1 204 1 38 1 68 1 69 2 342 1 
163 1 164 2 225 1 250 1 344 1 4 2 6 1 169 2 120 1 23 1 122 2 332 1 50 2 212 2 197 1 336 1 239 2 200 1 241 1 352 1 267 1 155 1 156 1 64 1 243 2 358 1 218 1 112 1 178 1 69 2 343 1 
197 1 207 1 291 1 239 2 140 1 73 1 6 1 169 2 319 1 121 1 131 1 122 2 272 1 52 1 134 1 349 1 235 1 183 1 137 2 
197 1 207 1 291 1 239 1 140 1 73 1 6 1 169 1 131 1 122 1 52 1 134 1 274 1 349 1 235 1 183 1 137 2 
197 1 239 1 292 1 22 1 6 1 241 1 169 1 319 1 358 1 122 1 159 1 52 1 259 1 162 1 
197 1 207 1 291 1 239 1 140 1 73 1 6 1 169 1 319 1 131 1 122 1 272 1 52 1 134 1 349 1 235 1 183 1 137 2 
360 1 
100 1 238 1 84 1 301 1 288 1 55 1 347 1 
262 1 238 1 58 1 199 1 280 1 326 1 188 1 347 2 7 1 36 1 84 1 160 1 361 1 193 1 288 1 54 1 99 1 
280 3 6 2 282 1 7 3 142 1 193 6 288 8 287 2 54 3 147 6 11 2 98 2 99 5 196 1 197 1 238 1 239 1 153 2 199 3 58 5 59 2 106 1 241 1 244 2 15 2 245 3 246 2 298 2 160 12 22 1 119 2 168 1 169 1 75 2 347 7 122 1 261 6 262 5 175 2 33 2 358 6 83 1 36 3 84 7 363 2 
89 1 276 1 280 2 75 2 329 1 347 5 7 2 142 1 193 3 288 8 54 1 147 5 11 1 97 1 98 2 99 1 261 5 215 1 124 1 262 1 102 1 238 2 264 1 58 1 199 2 59 2 293 1 296 1 15 2 297 1 36 2 84 5 160 6 247 2 363 2 
164 1 280 1 165 1 170 1 75 2 329 1 7 1 189 1 9 1 288 2 212 1 234 1 56 1 290 1 262 1 104 1 199 1 58 1 59 1 353 1 355 1 177 1 36 1 84 2 16 1 247 2 223 1 69 1 
100 1 238 1 84 1 36 1 199 1 280 1 288 1 55 1 347 1 7 1 
59 2 75 2 347 5 15 2 298 1 84 5 160 10 193 5 288 5 147 5 98 2 261 5 363 2 
262 1 238 1 58 1 54 1 347 1 99 1 
280 2 22 2 6 1 169 4 91 1 7 2 285 2 122 4 142 2 288 2 258 1 54 2 259 1 11 2 99 4 78 1 197 1 262 3 239 4 199 2 58 3 125 1 241 1 358 1 270 1 36 1 84 2 159 1 18 1 
250 1 225 1 164 3 0 1 4 1 22 1 165 2 6 1 169 1 170 2 23 1 122 1 50 2 332 1 96 1 212 2 56 2 174 1 196 1 197 1 198 1 336 1 152 1 239 1 104 1 267 1 241 1 155 1 358 1 218 1 114 1 69 3 
238 1 199 1 280 1 347 2 7 1 142 1 84 1 36 1 193 1 160 2 288 1 11 1 261 1 
118 1 62 1 229 1 
27 1 62 1 254 1 202 1 229 1 
118 1 62 1 229 1 
118 1 62 1 229 1 
62 1 354 1 229 1 
62 1 354 1 229 1 
62 1 354 1 229 1 
62 1 229 1 
289 1 342 1 
225 2 250 2 185 1 79 1 263 1 59 1 45 2 4 8 28 1 155 4 75 1 120 4 353 1 23 2 14 1 177 1 9 1 332 2 50 4 305 3 
177 1 9 1 263 1 59 1 45 2 301 1 4 6 28 1 155 3 75 1 120 3 353 1 305 2 14 1 
225 1 250 1 185 1 45 1 59 1 4 4 155 2 75 1 120 2 23 1 15 1 332 1 50 2 232 1 98 1 363 1 305 2 
276 1 185 1 45 1 59 1 4 7 155 4 75 1 120 3 15 1 313 1 97 1 98 1 363 1 215 2 305 2 
225 2 250 2 185 4 45 5 4 23 75 3 120 11 23 2 171 1 9 1 332 2 50 4 313 1 98 2 97 2 215 2 79 2 263 1 59 3 28 1 155 12 268 1 353 2 14 1 177 2 15 2 67 1 305 9 363 2 
4 1 155 1 215 1 
4 1 120 1 97 1 
250 1 225 1 185 1 59 1 45 2 4 6 155 3 75 1 120 3 23 1 15 1 298 1 50 2 332 1 232 1 98 1 305 3 363 1 
276 1 250 1 225 1 185 1 45 1 4 12 75 2 120 6 23 1 50 2 332 1 97 1 98 2 215 1 124 1 102 1 59 2 264 1 293 1 155 6 295 1 15 2 297 1 363 2 305 2 
185 1 59 1 45 1 4 6 155 3 75 1 120 3 353 1 177 1 9 1 305 2 
225 1 250 1 185 1 79 1 45 1 28 1 4 3 155 2 120 1 353 1 171 1 23 1 14 1 177 1 332 1 50 2 305 2 
250 1 225 1 185 2 45 3 59 2 4 10 155 5 75 2 353 2 120 5 23 1 295 1 177 2 9 1 50 2 332 1 305 5 290 1 
225 1 250 1 185 1 4 2 75 1 120 2 23 1 295 1 332 1 50 2 98 1 305 1 
225 1 250 1 185 1 45 1 59 1 4 4 155 2 75 1 120 2 23 1 295 1 15 1 332 1 50 2 98 1 363 1 305 2 
225 3 250 3 79 1 185 1 45 1 4 3 155 2 353 1 120 1 171 1 23 3 295 1 177 1 332 3 50 6 148 1 305 2 
276 1 250 5 225 5 185 5 45 7 4 34 75 5 120 16 171 1 23 5 9 2 50 10 332 5 232 1 313 1 260 1 97 3 98 3 215 4 148 1 79 2 263 1 59 5 28 1 63 1 155 18 353 3 14 1 295 1 177 3 15 3 179 1 305 12 363 3 
276 1 250 1 225 1 45 2 4 8 75 1 120 4 23 1 9 1 50 2 332 1 97 1 215 1 263 1 59 1 28 1 293 1 155 4 353 1 295 1 14 1 177 1 305 2 
276 1 250 2 225 2 185 1 45 2 4 11 75 2 120 6 23 2 9 1 50 4 332 2 232 1 313 1 97 1 98 1 215 2 263 1 59 1 28 1 293 1 155 5 353 1 14 1 295 1 177 1 15 1 305 3 
276 1 250 3 225 3 185 1 45 3 4 19 75 3 120 9 23 3 9 1 50 6 332 3 232 1 97 1 98 2 215 1 124 1 79 1 263 1 102 1 264 1 59 3 28 1 293 1 155 10 353 1 14 1 295 1 177 1 15 2 297 1 363 2 305 4 
276 1 250 2 225 2 45 1 4 11 75 2 120 7 23 2 50 4 332 2 232 1 97 1 98 2 215 1 124 1 102 1 59 1 264 1 293 1 155 4 295 1 15 2 297 1 363 1 305 1 
276 1 250 1 225 1 45 2 4 8 75 1 120 4 23 1 9 1 50 2 332 1 97 1 215 1 263 1 59 1 28 1 293 1 155 4 353 1 295 1 14 1 177 1 305 2 
276 1 250 1 225 1 185 1 45 1 4 12 75 2 120 6 23 1 50 2 332 1 97 1 98 2 215 1 124 1 102 1 59 2 264 1 293 1 155 6 295 1 15 2 297 1 363 2 305 2 
276 1 250 3 225 3 45 1 4 12 75 2 120 7 23 3 50 6 332 3 232 1 97 1 98 2 215 1 124 1 79 1 102 1 264 1 59 1 293 1 155 5 295 1 15 2 297 1 363 1 305 1 
276 1 250 3 225 3 185 2 45 2 4 12 75 2 120 7 23 3 50 6 332 3 97 1 98 2 215 1 148 1 124 1 79 1 102 1 264 1 59 1 293 1 155 5 295 1 15 2 297 1 363 1 305 4 
185 3 59 1 45 3 4 7 28 2 155 4 75 1 353 3 120 3 14 1 177 3 9 1 305 6 
276 1 250 3 225 3 45 1 4 12 75 2 120 7 23 3 50 6 332 3 97 1 98 2 215 1 148 1 124 1 79 1 102 1 264 1 59 1 293 1 155 5 295 1 15 2 297 1 363 1 305 1 
164 1 152 1 21 1 212 1 348 1 294 1 69 1 
164 1 152 1 3 1 21 1 294 1 31 1 8 1 144 1 212 1 348 1 362 1 69 1 
197 1 358 1 122 1 159 1 239 1 301 1 22 1 6 1 241 1 259 1 169 1 
164 2 197 1 198 1 152 1 239 1 22 1 241 1 6 1 170 1 169 1 255 1 358 1 122 1 212 1 56 1 69 2 196 1 174 1 
164 2 197 1 198 1 152 1 239 1 227 1 241 2 6 1 170 2 169 1 255 1 355 1 358 3 285 1 122 1 299 1 273 1 212 2 56 1 69 2 224 1 196 2 174 1 
164 2 277 1 227 1 6 1 169 2 170 2 255 1 330 1 122 2 285 1 212 2 56 1 174 1 196 2 197 1 152 1 239 2 241 2 355 1 358 3 299 1 273 1 69 2 224 1 
277 1 22 1 6 1 169 3 347 1 122 3 285 1 287 1 99 1 196 1 197 1 262 2 238 1 239 3 58 2 241 1 33 1 358 4 245 1 299 1 341 1 86 1 224 1 
262 2 197 1 238 1 277 1 239 3 153 1 58 2 22 1 241 1 6 1 169 3 347 1 33 1 358 4 285 1 122 3 245 1 299 1 287 1 99 1 196 1 224 1 
197 1 237 1 122 1 239 1 6 1 169 1 
237 1 197 2 43 1 239 7 90 1 22 2 352 1 241 2 6 3 169 6 243 1 121 1 83 1 358 3 122 7 76 1 134 1 325 1 70 1 173 1 196 1 
225 2 0 1 45 2 4 6 6 1 9 1 50 4 332 2 56 1 196 1 197 1 198 1 336 2 152 2 239 1 59 1 200 1 241 1 155 3 156 1 14 1 114 1 19 1 69 2 305 2 250 2 164 2 169 1 170 1 75 1 255 1 120 3 23 2 121 1 122 1 257 1 212 1 174 1 263 1 25 1 28 1 353 1 357 1 218 2 358 1 177 1 37 1 
280 2 22 1 169 1 347 1 7 2 122 1 288 1 287 1 54 1 55 1 99 2 100 1 262 3 238 1 239 1 153 1 199 2 58 3 175 1 33 1 244 1 358 2 204 1 270 1 246 1 245 1 84 1 36 2 
237 1 197 1 239 2 241 1 6 2 169 2 282 1 121 1 83 1 358 2 122 2 287 1 196 1 
197 1 277 1 239 4 22 1 6 1 241 1 169 4 121 1 358 1 122 4 159 1 320 1 259 1 
197 1 315 1 239 2 306 1 241 1 6 2 169 2 48 1 358 1 285 1 122 2 76 1 173 1 196 1 
197 1 122 1 239 1 73 1 22 1 6 1 169 1 349 1 235 1 137 1 
197 1 239 2 352 1 241 1 6 1 169 2 121 1 358 1 122 2 134 1 343 1 
197 2 43 1 239 5 22 1 352 1 241 2 6 2 169 4 121 1 358 3 285 1 122 5 159 1 320 1 259 1 325 1 
197 2 239 5 22 1 352 1 241 2 6 2 169 4 82 1 121 1 358 3 285 1 122 5 159 1 320 1 259 1 325 1 
164 2 197 1 152 1 239 1 22 1 241 1 6 1 170 1 169 1 255 1 358 1 330 1 122 1 212 1 56 1 69 2 196 1 174 1 
197 1 239 1 90 1 241 1 6 2 169 1 83 1 358 1 285 1 122 1 76 1 173 1 196 1 
2 1 152 1 145 1 334 1 339 1 
262 2 216 1 2 2 152 1 238 1 72 1 58 2 227 1 109 1 339 2 347 1 355 1 33 1 204 1 143 1 145 2 273 1 213 1 334 1 
163 1 164 1 344 1 2 1 112 1 145 1 212 1 334 1 69 1 
72 1 334 1 109 1 
158 1 252 1 301 1 161 1 
158 1 252 1 161 1 157 1 40 1 32 1 236 1 
151 1 226 1 40 1 
176 1 92 2 158 1 252 1 161 1 208 1 74 1 157 1 40 3 135 1 32 3 236 1 
158 1 252 1 161 1 12 1 157 1 40 2 88 1 32 2 236 1 
157 1 32 1 309 1 176 1 158 1 95 1 40 1 349 1 183 1 137 1 236 1 
176 1 158 1 161 1 157 1 40 1 32 1 236 1 
176 1 252 1 161 2 157 1 40 1 32 1 236 1 
44 1 346 1 117 1 157 2 32 2 176 1 158 1 161 1 40 2 236 2 
57 1 249 1 252 1 157 1 32 3 284 1 309 1 176 1 158 2 161 1 40 3 88 2 236 1 
252 1 157 1 32 2 176 1 310 1 131 1 158 1 161 1 40 2 235 1 349 1 137 2 183 1 88 1 236 1 
249 1 252 1 12 1 157 2 283 1 32 4 309 1 176 1 158 2 161 1 40 4 88 2 236 2 
176 1 158 1 252 1 161 1 157 1 40 1 32 1 236 1 
249 1 252 2 208 1 74 1 157 1 32 4 309 1 92 1 158 3 161 2 40 4 182 1 88 2 236 1 
176 1 158 1 252 1 161 1 317 1 107 1 157 1 40 2 88 1 32 2 65 1 236 1 
252 1 208 1 74 2 157 1 32 3 176 1 92 2 158 1 161 1 85 1 40 3 236 1 
335 2 158 2 60 1 214 1 
176 1 71 1 157 1 40 1 32 1 236 1 
57 1 176 1 158 1 252 1 161 1 157 1 40 2 88 1 32 2 236 1 
300 1 
176 1 158 1 252 1 161 1 157 1 40 1 32 1 236 1 
57 1 252 1 157 1 32 3 176 1 92 1 158 1 161 1 40 3 88 1 236 1 
249 1 158 1 182 1 309 1 
158 1 161 1 

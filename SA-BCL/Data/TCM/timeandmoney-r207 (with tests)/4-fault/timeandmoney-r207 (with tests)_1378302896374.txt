#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 119 214 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 119 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 119 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 119 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 119 214 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
46 4 353 2 354 2 189 1 278 1 356 1 232 2 144 1 317 1 238 9 169 1 4 9 3 5 76 1 148 1 56 1 297 1 37 3 345 2 110 2 325 1 113 6 348 1 303 1 89 2 334 1 274 1 275 2 
46 4 353 2 354 2 189 1 278 1 356 1 232 2 144 1 317 1 238 9 169 1 4 9 3 5 76 1 148 1 56 1 297 1 37 3 110 2 345 2 325 1 113 6 348 1 303 1 89 2 334 1 274 1 275 2 
46 5 353 2 354 2 189 1 278 1 356 1 232 2 144 1 317 1 238 10 169 1 4 10 3 6 76 1 148 1 56 1 297 1 37 4 110 2 345 2 325 1 113 7 348 1 303 1 89 2 334 1 274 1 275 2 
46 3 353 2 354 2 189 1 278 1 356 1 232 2 144 1 238 7 169 1 4 7 3 4 76 1 148 1 56 1 297 1 37 2 110 2 345 1 325 1 113 4 348 1 303 1 89 2 334 1 274 1 275 2 
46 2 353 1 354 1 278 1 37 1 110 1 345 2 144 1 317 1 238 4 113 3 348 1 303 1 4 4 3 3 89 1 275 1 274 1 
198 1 353 1 354 1 356 1 232 1 110 1 144 1 238 2 348 1 3 1 4 2 169 1 129 1 274 1 275 1 79 1 
46 1 354 2 232 1 37 1 110 2 144 1 238 3 113 1 348 1 4 3 3 2 148 1 274 1 
46 4 353 1 354 2 189 1 278 1 232 1 144 1 238 9 317 1 4 9 3 5 34 1 148 1 36 1 37 3 110 2 345 2 325 1 113 7 348 1 303 1 89 1 274 1 275 1 
46 4 353 1 354 2 189 1 278 1 232 1 144 1 238 9 317 1 4 9 3 5 34 1 148 1 36 1 37 3 110 2 345 2 325 1 113 7 348 1 303 1 89 1 274 1 275 1 
116 1 23 1 362 1 
40 2 180 1 23 1 
193 1 39 2 83 2 181 2 123 2 118 2 192 2 285 1 
140 2 231 2 123 3 192 2 285 1 216 1 193 1 194 1 51 1 2 2 341 1 54 1 7 1 128 1 361 1 291 2 365 1 222 1 14 1 83 3 181 2 152 1 133 1 182 1 346 1 86 2 155 1 269 1 229 1 307 1 39 2 21 1 309 1 42 1 118 2 276 1 45 1 
39 1 372 1 48 1 83 1 181 1 123 1 118 1 300 1 192 1 285 1 
252 1 262 1 48 1 83 1 71 1 72 1 123 1 339 1 116 1 39 1 332 1 185 1 136 1 23 1 
252 1 262 2 48 1 181 1 83 1 71 1 123 1 192 1 339 2 116 1 39 1 332 1 185 1 23 1 118 1 
262 1 294 1 305 1 339 1 19 1 
261 1 262 2 294 1 339 2 340 1 116 1 23 1 19 1 
262 1 294 1 339 1 
262 1 48 1 181 1 83 1 123 1 300 1 19 1 192 1 285 1 267 1 339 1 372 1 39 1 118 1 
23 1 
261 1 262 2 294 1 339 2 116 1 23 1 255 1 19 1 
261 1 262 5 58 2 294 2 164 1 49 1 236 1 19 2 112 1 111 1 246 1 339 5 116 1 145 2 43 1 273 1 23 1 149 1 130 2 
193 1 362 1 
193 2 39 2 181 1 83 2 65 1 123 2 118 1 192 1 242 1 
211 1 213 1 207 1 
140 1 222 1 94 1 14 1 83 1 123 1 152 1 182 1 155 1 86 1 193 1 269 1 229 1 21 1 291 1 45 1 
211 1 222 1 140 1 14 1 181 1 83 2 123 2 152 1 192 1 182 1 29 1 155 1 86 1 269 1 229 1 103 1 39 1 21 1 291 1 45 1 
193 1 103 1 39 3 83 3 181 3 123 3 118 1 192 3 
39 1 48 1 83 1 181 1 123 1 300 1 192 1 
39 1 48 1 65 1 83 1 181 1 123 1 118 1 192 1 242 1 
252 1 93 1 140 1 231 2 48 1 71 1 123 4 192 3 29 1 285 1 216 1 166 1 193 1 194 1 51 1 2 1 339 1 103 1 128 1 361 1 291 1 242 1 262 1 222 1 14 1 83 4 181 3 152 1 133 1 182 1 155 1 86 1 269 1 229 1 307 1 39 3 21 1 332 1 185 1 309 1 42 1 118 2 45 1 276 1 
193 1 370 1 103 1 39 2 83 2 181 1 72 1 123 2 192 1 
252 1 262 1 93 1 48 1 71 1 181 3 83 3 123 3 192 3 29 1 339 1 103 2 39 3 332 1 185 1 118 1 23 1 208 1 242 1 
211 1 213 1 181 2 83 2 123 2 192 2 103 1 39 2 118 1 242 1 
140 1 222 1 14 1 83 1 123 1 152 1 182 1 155 1 86 1 193 1 269 1 229 1 21 1 291 1 45 1 
140 1 222 1 14 1 83 1 123 1 182 1 155 1 86 1 193 1 156 1 269 1 328 1 229 1 291 1 45 1 
68 1 211 2 213 2 120 1 231 2 161 1 215 1 51 1 194 2 2 4 361 1 173 1 365 2 293 1 342 1 133 1 298 1 327 1 62 1 270 1 307 1 309 1 42 1 207 2 
39 1 185 1 48 1 83 1 181 1 123 1 192 1 259 1 
47 1 281 1 181 4 83 5 72 1 123 5 192 4 29 1 193 1 370 1 103 2 39 5 118 1 242 1 
39 2 48 1 83 2 181 2 123 2 300 1 192 2 259 1 
104 1 78 1 
104 1 78 1 
315 1 105 1 
315 1 105 1 
315 1 105 1 
104 1 78 1 1 1 
104 1 78 1 1 1 
350 1 104 1 78 1 
314 1 104 2 315 1 105 1 174 1 78 2 
104 1 78 1 1 1 
212 1 104 1 78 1 
212 1 104 1 78 1 
212 1 104 1 78 1 
366 2 262 2 367 2 10 2 81 2 179 2 15 1 84 3 237 1 183 1 339 2 127 1 104 2 6 1 310 1 23 1 195 1 174 1 78 2 
92 1 262 1 366 1 367 1 10 1 264 1 163 1 179 1 83 2 181 2 296 1 123 2 84 1 192 2 183 1 193 1 115 1 359 1 339 1 350 1 39 2 308 1 104 1 78 1 
353 1 89 1 275 1 
353 1 129 1 275 1 
251 1 353 3 253 1 89 2 129 1 256 1 
251 1 63 1 353 2 253 1 89 1 129 1 
251 2 353 2 253 1 89 1 129 1 
163 1 357 1 167 2 359 1 339 5 53 1 145 1 130 1 221 1 261 1 107 1 262 5 58 1 294 1 264 1 342 1 180 1 324 2 19 4 326 1 327 1 62 1 154 2 112 2 111 1 87 1 270 1 116 1 247 1 40 3 43 3 23 2 
277 1 164 1 165 1 167 6 339 9 218 1 53 3 145 2 320 1 130 2 240 1 261 1 107 2 262 9 294 6 58 2 264 4 342 3 180 3 202 1 19 7 326 2 327 3 62 3 154 6 112 6 111 1 87 1 305 5 371 5 270 3 116 1 40 9 43 8 23 5 
164 1 167 2 339 3 145 1 53 1 130 1 221 1 107 1 262 3 58 1 264 1 342 1 180 2 324 1 19 2 326 1 327 1 62 1 112 2 154 2 270 1 116 1 247 1 40 4 43 3 23 3 
277 1 164 1 167 4 339 4 145 1 53 2 320 1 130 1 221 1 107 1 262 4 58 1 264 2 342 2 180 3 202 1 324 2 19 3 326 1 327 2 62 2 154 4 112 4 270 2 116 1 247 1 40 7 43 5 23 4 
14 1 362 1 131 1 
14 1 344 1 
153 1 
14 1 182 1 
229 1 14 3 230 1 241 1 131 2 182 1 
229 1 14 1 182 1 
330 1 14 1 
210 1 365 4 293 2 223 1 95 1 355 1 85 1 203 1 298 3 301 1 327 1 31 1 194 3 2 7 270 1 146 1 219 2 
210 1 365 4 293 2 223 1 95 1 355 1 85 1 203 1 298 3 301 1 327 1 31 1 194 3 2 7 270 1 146 1 219 2 
210 1 365 4 293 2 223 1 95 1 355 1 85 1 203 1 298 3 301 1 327 1 31 1 194 3 2 7 270 1 146 1 219 2 250 1 
210 2 95 1 355 1 231 2 31 1 194 15 2 31 53 3 361 1 219 3 146 5 365 16 223 1 57 3 293 5 151 1 342 3 368 1 85 2 203 2 133 1 298 10 301 2 134 1 204 1 62 3 327 4 270 4 307 1 309 1 137 1 373 1 44 4 249 1 
210 1 365 5 223 1 293 3 355 1 151 1 231 4 244 1 85 1 203 1 298 4 133 2 301 1 327 1 31 1 194 4 2 9 270 1 307 2 309 2 361 2 351 1 146 1 219 2 
140 1 353 2 354 1 335 1 232 1 190 1 256 1 144 1 238 2 3 1 4 2 32 1 77 1 129 1 291 1 175 1 222 1 200 1 369 1 110 1 86 1 113 1 348 1 269 1 349 1 41 1 64 1 89 1 275 1 274 1 
140 1 353 2 354 1 335 1 159 1 232 1 190 1 256 1 144 1 238 3 3 1 170 1 4 3 32 1 77 1 129 1 220 1 291 1 175 1 222 1 200 1 369 1 110 1 86 1 113 2 348 1 269 1 41 1 89 1 275 1 
140 1 353 2 159 1 232 1 190 1 256 1 144 1 238 2 3 1 170 1 4 2 77 1 129 1 291 1 175 1 222 1 200 1 369 1 86 1 113 2 348 1 269 1 41 1 89 1 275 1 
140 1 354 1 232 2 282 1 238 1 4 1 77 2 220 1 291 1 222 1 243 1 14 1 200 2 110 1 61 1 182 1 86 1 155 1 347 1 269 1 41 2 157 1 138 1 
140 1 353 2 354 1 335 1 232 1 190 1 256 1 238 1 170 1 4 1 32 1 77 1 129 1 291 1 175 1 222 1 200 1 369 1 110 1 86 1 269 1 41 1 64 1 89 1 275 1 274 1 
11 1 
140 2 279 2 97 1 143 1 98 1 48 1 284 2 235 2 339 5 145 1 8 1 291 2 107 1 292 1 243 1 294 6 58 1 14 1 16 2 343 1 17 2 299 2 61 1 112 2 111 1 155 2 116 1 23 2 252 1 71 1 72 1 123 1 130 1 80 1 261 3 262 5 222 1 263 1 178 1 180 2 83 1 266 1 182 1 86 2 269 1 268 1 39 1 332 1 185 1 40 2 136 1 272 2 43 2 90 1 187 4 
261 1 252 1 262 3 292 1 294 2 48 1 98 1 71 1 83 1 72 1 123 1 284 1 255 1 339 3 39 1 185 1 332 1 136 1 8 1 187 2 90 1 80 1 
261 1 252 1 262 3 292 1 294 1 279 1 48 1 98 1 71 1 83 1 72 1 123 1 255 1 339 3 116 1 39 1 185 1 332 1 136 1 23 1 8 1 187 3 90 1 80 1 
252 1 279 1 98 1 48 1 71 1 123 1 72 1 284 1 255 1 339 3 8 1 80 1 261 1 292 1 262 3 294 2 83 1 17 1 39 1 116 1 332 1 185 1 136 1 23 1 90 1 187 3 
279 4 141 1 97 1 48 1 98 1 284 4 235 2 339 5 145 1 8 1 292 1 294 7 58 1 16 2 17 4 299 2 111 1 112 1 116 5 22 1 23 5 252 1 71 1 123 1 72 1 255 1 316 1 130 1 80 1 261 3 262 5 263 1 180 2 83 1 88 1 39 1 331 1 185 1 332 1 136 1 272 2 43 1 187 6 90 1 
279 2 97 1 48 1 98 1 284 2 235 2 339 4 145 1 8 1 292 1 58 1 294 4 16 2 17 2 299 2 111 1 112 1 116 1 23 2 252 1 71 1 123 1 72 1 130 1 80 1 261 2 262 4 263 1 180 2 83 1 266 1 39 1 185 1 332 1 136 1 40 2 272 2 43 1 187 4 90 1 
252 1 279 2 97 1 98 1 48 1 71 1 123 1 72 1 284 2 235 2 316 1 339 4 145 1 8 1 130 1 80 1 261 2 292 1 262 4 263 1 294 4 58 1 180 2 83 1 16 2 17 2 299 2 112 1 111 1 88 1 116 1 331 1 39 1 332 1 185 1 136 1 272 2 43 1 23 1 90 1 187 4 
252 1 279 2 97 1 98 1 48 1 71 1 123 1 72 1 284 2 235 2 316 1 339 4 145 1 8 1 130 1 80 1 261 2 292 1 262 4 263 1 294 4 58 1 180 2 83 1 16 2 17 2 299 2 112 1 111 1 88 1 116 1 331 1 39 1 332 1 185 1 136 1 272 2 43 1 23 1 90 1 187 4 
252 1 279 2 96 1 97 1 98 1 48 1 71 1 123 1 72 1 284 2 234 2 337 2 339 4 145 1 8 1 130 1 80 1 261 2 292 1 262 4 35 1 294 4 58 1 13 1 83 1 16 2 17 2 112 1 111 1 116 1 331 1 39 1 332 1 185 1 40 2 136 1 272 2 43 1 23 1 90 1 187 4 
252 1 279 3 141 1 97 1 98 1 48 1 71 1 123 1 72 1 284 3 235 2 316 1 339 4 145 1 130 1 8 1 80 1 261 2 292 1 262 4 263 1 58 1 294 5 180 2 83 1 16 2 17 3 299 2 112 1 111 1 88 1 116 1 331 1 39 1 332 1 185 1 136 1 272 2 43 1 23 1 90 1 187 5 
252 1 279 3 141 1 97 1 98 1 48 1 71 1 123 1 72 1 284 3 235 2 316 1 339 4 145 1 130 1 8 1 80 1 261 2 292 1 262 4 263 1 58 1 294 5 180 2 83 1 16 2 17 3 299 2 112 1 111 1 88 1 116 1 331 1 39 1 332 1 185 1 136 1 272 2 43 1 23 1 90 1 187 5 
252 1 279 2 96 1 97 1 98 1 48 1 71 1 72 1 123 1 284 2 234 2 337 2 339 4 145 1 8 1 130 1 80 1 261 2 292 1 262 4 294 4 58 1 83 1 16 2 17 2 266 1 112 1 111 1 116 1 39 1 332 1 185 1 40 2 136 1 272 2 43 1 23 1 90 1 187 4 
211 1 213 1 355 1 231 2 161 1 31 1 51 1 194 3 193 2 2 6 361 1 219 1 362 1 365 3 223 1 293 2 203 1 133 1 298 2 301 1 327 1 270 1 307 1 309 1 42 1 207 1 
211 11 213 4 231 4 142 1 216 1 193 1 257 1 194 6 51 2 52 1 2 14 53 2 7 1 361 2 146 1 196 1 365 8 293 1 57 3 342 2 298 2 133 2 134 1 62 1 327 1 205 1 270 2 307 2 309 2 42 1 137 1 207 11 44 3 
140 1 94 1 213 1 231 2 27 1 123 2 192 1 29 1 216 1 193 1 51 1 52 1 194 1 2 2 103 1 7 1 361 1 291 1 365 1 222 1 9 1 14 1 83 2 181 1 226 1 152 1 133 1 182 1 86 1 155 1 269 1 229 1 307 1 39 1 21 1 309 1 42 1 45 1 
140 3 231 6 283 2 192 1 193 2 194 10 52 1 51 3 2 20 103 1 53 2 7 1 146 4 291 3 293 4 14 2 342 2 152 2 203 1 18 2 298 8 301 1 20 1 62 2 155 1 307 3 21 2 309 3 66 2 207 7 248 1 211 7 355 1 213 7 160 2 123 3 29 1 216 1 31 1 170 1 128 2 361 3 219 1 365 10 222 2 223 1 177 1 181 1 83 3 133 3 182 2 327 3 86 3 269 2 229 2 270 3 39 1 42 3 45 2 
139 1 140 7 231 4 161 1 123 1 192 1 216 1 30 1 51 2 194 1 2 2 170 1 103 1 360 1 341 2 7 1 319 1 361 2 291 8 363 1 365 1 222 2 243 1 14 3 83 1 181 1 227 1 133 2 61 1 182 2 302 1 86 8 155 2 269 2 349 1 39 1 307 2 309 2 42 2 
211 1 213 1 231 2 123 1 192 1 51 1 52 1 194 2 2 3 53 1 361 1 242 1 365 1 293 1 342 1 181 1 83 1 298 1 133 1 62 1 327 1 184 1 270 1 307 1 39 1 309 1 42 1 207 1 118 1 
365 2 211 1 213 1 231 2 161 1 342 1 298 1 133 1 215 1 51 1 2 2 270 1 307 1 309 1 42 1 361 1 146 1 207 1 
211 1 293 1 213 1 231 2 120 1 161 1 298 1 133 1 62 1 327 1 51 1 194 2 2 2 307 1 309 1 42 1 361 1 207 1 
211 2 213 2 231 2 161 1 51 1 194 2 2 4 53 1 361 1 146 1 365 2 293 1 342 1 133 1 298 2 62 1 327 1 270 1 307 1 309 1 42 1 207 2 
139 1 365 2 211 1 213 1 231 2 342 1 298 1 133 1 215 1 51 1 2 2 270 1 307 1 309 1 42 1 361 1 146 1 207 1 
139 1 211 1 293 1 213 1 231 2 120 1 298 1 133 1 62 1 327 1 51 1 194 2 2 2 307 1 309 1 42 1 361 1 207 1 
139 1 211 2 213 2 231 2 51 1 194 2 2 4 53 1 361 1 146 1 365 2 293 1 342 1 133 1 298 2 62 1 327 1 270 1 307 1 309 1 42 1 207 2 
211 2 213 2 231 2 51 1 194 2 2 4 53 1 361 1 146 1 365 2 293 1 342 1 133 1 298 2 62 1 327 1 270 1 307 1 309 1 42 1 207 2 
140 1 231 2 123 1 216 1 193 1 51 1 194 1 2 2 7 1 128 1 361 1 291 1 365 1 222 1 14 1 83 1 152 1 133 1 182 1 86 1 155 1 269 1 229 1 307 1 21 1 309 1 42 1 45 1 
140 1 231 2 123 1 216 1 193 1 51 1 194 1 2 2 5 1 7 1 361 1 291 1 365 1 222 1 14 1 83 1 133 1 182 1 86 1 155 1 156 1 269 1 328 1 229 1 307 1 309 1 42 1 45 1 
211 2 213 2 231 2 51 1 52 1 194 2 2 4 53 1 361 1 146 1 365 2 293 1 342 1 133 1 298 2 62 1 327 1 270 1 307 1 309 1 42 1 207 2 
211 2 140 1 213 2 231 2 160 1 123 1 194 2 51 1 2 4 53 1 128 1 361 1 146 1 291 1 365 2 222 1 293 1 14 1 342 1 83 1 152 1 298 2 133 1 182 1 327 1 62 1 86 1 269 1 270 1 229 1 349 1 307 1 21 1 309 1 42 1 207 2 45 1 
211 1 213 1 231 2 123 1 192 1 194 1 51 1 52 1 2 3 53 1 361 1 146 1 242 1 365 2 176 1 342 1 181 1 83 1 298 1 133 1 327 1 62 1 270 1 307 1 39 1 309 1 42 1 118 1 207 1 
231 2 307 1 309 1 244 1 361 1 133 1 55 1 119 1 214 1 
231 2 307 1 309 1 244 1 361 1 133 1 55 1 119 1 214 1 
231 2 307 1 309 1 244 1 361 1 133 1 55 1 119 1 214 1 
231 2 307 1 309 1 244 1 361 1 133 1 55 1 119 1 214 1 
231 2 307 1 309 1 244 1 361 1 133 1 55 1 119 1 214 1 
366 1 10 1 367 1 104 1 179 1 310 1 60 1 195 1 174 1 78 1 
350 1 296 1 
366 1 10 1 367 1 104 1 179 1 172 1 312 1 228 1 78 1 
262 1 366 1 367 1 10 1 81 1 179 1 15 1 84 2 237 1 183 1 339 1 104 1 6 1 310 1 23 1 195 1 174 1 78 1 
262 1 366 1 367 1 10 1 81 1 179 1 15 1 84 2 237 1 183 1 339 1 104 1 6 1 310 1 23 1 195 1 174 1 78 1 
262 1 366 1 367 1 10 1 81 1 179 1 15 1 84 2 237 1 183 1 339 1 104 1 6 1 310 1 23 1 195 1 174 1 78 1 
314 1 289 1 1 1 
314 1 289 1 1 1 
212 1 12 1 
314 1 212 1 12 1 
115 1 308 1 
92 1 352 1 163 1 123 2 192 2 193 1 339 1 359 1 104 1 78 1 262 1 366 1 10 1 367 1 81 1 264 1 179 1 83 2 15 1 181 2 84 1 296 1 19 1 115 1 350 1 39 2 308 1 
289 1 1 1 
314 1 212 1 12 1 
140 2 231 2 123 2 216 1 51 1 52 1 194 1 126 1 2 2 341 2 171 1 7 1 361 1 291 2 363 1 365 1 222 1 199 1 14 1 201 1 83 2 133 1 182 1 302 1 86 2 269 1 206 1 307 1 39 2 309 1 42 1 
353 2 222 1 140 2 188 1 335 1 69 1 200 1 59 1 369 1 190 1 256 1 86 2 269 1 170 1 349 1 89 1 129 1 275 1 291 2 
353 2 140 1 188 1 222 1 335 1 200 1 369 1 190 1 256 1 86 1 269 1 170 1 306 1 89 1 129 1 275 1 291 1 
222 1 140 1 243 1 14 1 69 1 200 1 282 1 61 1 182 1 155 1 86 1 269 1 304 1 291 1 
353 2 222 1 140 1 188 1 335 1 69 1 200 1 59 1 369 1 190 1 256 1 86 1 269 1 170 1 89 1 129 1 275 1 291 1 
260 1 
112 1 116 1 43 1 273 1 23 1 149 1 362 1 
235 1 339 1 145 1 130 1 261 1 262 1 263 1 58 1 294 1 180 1 299 1 112 1 111 1 116 1 40 1 43 1 23 2 
0 2 140 1 143 1 339 5 288 2 145 3 53 2 291 1 107 1 58 3 294 5 14 6 342 2 18 2 344 3 245 1 111 3 154 6 112 7 62 2 155 1 23 6 313 1 122 2 71 2 125 2 167 6 321 2 130 3 131 2 261 3 262 5 222 2 180 6 265 2 182 1 327 2 86 1 269 1 229 1 270 2 186 1 40 12 230 1 43 7 
143 1 280 1 168 1 167 5 339 1 102 1 239 1 145 2 53 2 130 2 364 1 107 1 261 1 262 1 57 1 294 1 58 2 108 1 342 2 265 2 180 3 134 1 154 5 111 2 112 5 62 2 327 2 135 1 270 2 116 2 40 6 271 1 43 8 23 5 44 1 
355 1 48 1 123 1 192 1 285 1 316 1 339 1 145 1 130 1 262 1 58 1 265 2 83 1 295 1 181 1 203 1 300 1 301 1 111 1 112 2 327 1 135 1 267 1 270 2 372 1 39 1 43 2 118 1 
58 1 111 1 112 1 116 1 145 1 273 1 43 1 149 1 130 1 23 1 
342 2 265 2 180 5 18 1 112 5 154 5 62 2 327 2 135 1 167 5 270 2 53 2 40 10 43 5 23 5 
261 1 262 1 339 1 294 1 116 1 23 1 
140 4 143 2 70 1 336 1 164 1 358 2 124 1 286 1 339 3 145 2 290 1 130 2 291 4 107 2 261 2 262 3 222 3 243 1 58 2 294 4 14 2 82 1 178 1 225 1 343 1 61 1 182 2 111 1 112 2 86 4 155 2 269 2 229 1 43 2 
140 1 231 2 123 3 192 2 285 1 216 1 193 1 194 1 51 1 2 1 128 1 361 1 291 1 222 1 14 1 83 3 181 2 152 1 133 1 182 1 86 1 155 1 269 1 229 1 39 2 307 1 21 1 309 1 42 1 118 2 276 1 45 1 
107 1 58 1 143 1 180 2 154 2 112 2 111 1 167 2 116 2 145 1 40 4 219 1 43 1 130 1 23 4 
366 1 10 1 109 1 
366 1 10 1 109 1 
217 1 366 1 115 1 10 1 195 1 
366 1 10 1 109 1 
366 1 10 1 24 1 
366 1 10 1 24 1 
366 1 10 1 24 1 
366 1 10 1 
104 1 78 1 
365 4 293 2 223 1 355 1 151 1 231 4 203 1 298 3 133 2 301 1 327 1 31 1 194 4 2 8 270 1 307 2 309 2 361 2 219 1 146 1 
327 1 365 3 31 1 194 3 293 2 223 1 2 6 270 1 355 1 219 1 203 1 298 2 362 1 301 1 
365 2 293 1 25 1 231 2 342 1 298 2 133 1 327 1 62 1 194 2 2 4 270 1 307 1 53 1 309 1 361 1 146 1 
365 3 293 1 57 1 342 1 298 2 134 1 327 1 62 1 194 4 2 7 270 1 53 1 137 1 146 1 44 2 
355 1 231 4 142 1 31 1 194 12 2 23 53 2 361 2 219 1 146 4 365 11 223 1 57 2 293 5 151 2 342 2 203 2 298 9 133 2 301 2 62 2 327 3 205 1 270 3 307 2 309 2 137 1 44 2 374 1 
194 1 2 1 44 1 
365 1 57 1 2 1 
365 3 293 2 231 2 25 1 342 1 18 1 133 1 298 3 62 1 327 1 194 3 2 6 270 1 307 1 53 1 309 1 361 1 146 1 
365 6 293 1 57 1 231 2 342 2 244 1 298 2 133 1 134 1 327 2 62 2 168 1 194 6 2 12 270 2 102 1 307 1 53 2 239 1 271 1 309 1 361 1 146 1 44 1 364 1 
365 3 293 1 355 1 203 1 298 2 301 1 327 1 194 3 2 6 270 1 146 1 
365 1 293 1 223 1 151 1 231 2 203 1 298 2 133 1 301 1 31 1 194 2 2 3 307 1 309 1 361 1 146 1 374 1 
365 5 293 3 355 1 231 2 244 1 295 1 203 2 133 1 298 5 301 2 327 2 194 5 2 10 270 2 307 1 309 1 361 1 146 2 
365 2 231 2 244 1 342 1 133 1 298 1 2 2 270 1 307 1 309 1 361 1 146 1 
365 2 293 1 231 2 244 1 342 1 298 2 133 1 327 1 62 1 194 2 2 4 270 1 307 1 53 1 309 1 361 1 146 1 
365 1 293 1 151 1 231 6 244 1 99 1 203 1 133 3 298 2 301 1 194 2 2 3 307 3 309 3 361 3 146 1 374 1 
355 2 25 1 231 10 99 1 31 1 194 18 2 34 53 3 361 5 219 1 146 5 365 16 223 1 57 3 293 7 151 2 244 1 342 3 368 1 203 3 133 5 298 12 301 3 134 1 62 3 327 5 270 5 307 5 309 5 373 1 137 1 44 4 249 1 374 1 
365 4 293 2 223 1 57 1 355 1 231 2 244 1 203 1 298 2 133 1 301 1 134 1 327 1 31 1 194 4 2 8 270 1 307 1 239 1 309 1 361 1 219 1 44 1 
355 1 231 4 25 1 31 1 194 5 2 11 239 1 53 1 361 2 219 1 146 1 365 6 293 2 223 1 57 1 244 1 342 1 203 1 133 2 298 3 301 1 134 1 327 1 270 2 307 2 309 2 137 1 44 2 
355 1 25 1 231 6 31 1 168 1 194 10 2 19 102 1 239 1 53 2 361 3 219 1 146 1 364 1 365 9 223 1 57 1 293 3 151 1 244 1 342 2 203 1 133 3 298 4 301 1 134 1 62 2 327 3 270 3 307 3 309 3 271 1 44 1 
355 1 25 1 231 6 31 1 194 7 168 1 2 17 102 1 239 1 53 2 361 3 219 1 146 2 364 1 365 10 223 1 57 1 293 3 151 1 244 1 342 2 203 1 133 3 298 5 301 1 134 1 62 1 327 2 270 3 307 3 309 3 271 1 44 1 
365 4 293 2 223 1 57 1 355 1 231 2 244 1 203 1 298 2 133 1 301 1 134 1 327 1 31 1 194 4 2 8 270 1 307 1 239 1 309 1 361 1 219 1 44 1 
365 6 293 1 57 1 231 2 342 2 244 1 298 2 133 1 134 1 327 2 62 2 168 1 194 6 2 12 270 2 102 1 307 1 53 2 239 1 271 1 309 1 361 1 146 1 44 1 364 1 
355 1 25 1 231 8 31 1 168 1 194 8 2 18 102 1 239 1 53 2 361 4 219 1 146 2 364 1 365 10 223 1 57 1 293 3 151 2 244 1 342 2 203 1 133 4 298 5 301 1 134 1 62 1 327 2 270 3 307 4 309 4 271 1 44 1 
231 8 99 1 168 1 194 7 2 16 102 1 239 1 53 3 361 4 146 3 364 1 365 9 57 1 293 3 151 2 244 1 342 3 133 4 298 6 134 1 62 2 327 2 270 3 307 4 309 4 271 1 44 1 
365 3 223 2 293 3 355 1 203 3 298 6 301 3 327 1 31 1 194 4 2 7 270 1 146 3 
355 1 231 8 99 1 31 1 168 1 194 8 2 18 102 1 239 1 53 2 361 4 219 1 146 1 364 1 365 10 223 1 57 1 293 3 151 2 244 1 342 2 203 1 133 4 298 4 301 1 134 1 62 1 327 2 270 3 307 4 309 4 271 1 44 1 
193 1 370 1 39 1 323 1 83 1 123 1 72 1 
150 1 121 1 323 1 162 1 83 1 72 1 123 1 101 1 193 1 370 1 39 1 91 1 
86 1 155 1 222 1 140 1 269 1 243 1 14 1 362 1 291 1 61 1 182 1 
222 1 140 1 14 1 181 1 83 2 123 2 192 1 182 1 155 1 86 1 193 1 269 1 229 1 103 1 39 1 21 1 291 1 45 1 
222 1 140 1 14 3 48 1 181 2 83 2 123 2 358 1 192 1 182 2 86 1 193 1 269 1 330 1 229 2 103 1 38 1 39 2 185 1 332 1 21 1 291 1 45 1 
140 2 48 1 358 1 123 2 192 1 193 1 103 1 33 1 291 2 222 1 14 3 83 2 181 2 182 2 86 2 156 1 269 1 229 2 330 1 39 2 38 1 332 1 185 1 45 1 
140 3 158 1 254 1 71 1 358 1 339 2 33 1 291 3 131 1 262 2 222 1 294 1 14 4 344 1 182 1 86 3 155 1 269 1 229 1 330 1 38 1 116 1 23 1 
262 2 222 1 140 3 294 1 14 4 71 1 358 1 344 1 182 1 155 1 86 3 125 1 269 1 339 2 330 1 229 1 33 1 116 1 38 1 23 1 291 3 131 1 
86 1 30 1 222 1 140 1 269 1 291 1 
140 6 222 3 14 3 70 1 227 1 182 2 338 1 30 1 155 2 86 7 286 1 269 2 170 1 349 1 229 1 341 1 360 1 230 1 319 1 291 7 363 1 
140 1 231 4 192 1 52 1 51 2 194 3 193 2 2 6 103 1 291 1 293 2 14 1 201 1 152 1 203 1 298 2 301 1 349 1 307 2 21 1 309 2 66 1 207 1 211 1 213 1 355 1 160 1 123 2 31 1 128 1 361 2 219 1 365 3 222 1 223 1 181 1 83 2 133 2 182 1 327 1 86 1 269 1 229 1 270 1 39 1 42 2 45 1 
0 1 140 1 122 1 71 1 125 1 339 3 145 2 321 1 149 1 130 2 291 1 131 1 261 1 262 3 58 2 294 2 14 2 225 1 344 1 19 1 112 1 111 2 86 1 155 1 116 1 43 1 273 1 23 1 
140 2 222 2 14 2 245 1 182 1 30 1 86 2 269 1 349 1 229 1 230 1 291 2 131 1 
222 1 140 4 243 1 14 1 61 1 74 1 182 1 155 1 86 4 269 1 349 1 33 1 291 4 
140 2 222 2 14 1 177 1 70 1 358 1 182 1 124 1 86 2 286 1 269 1 229 1 290 1 291 2 
86 1 155 1 353 1 222 1 140 1 269 1 129 1 190 1 275 1 291 1 
86 2 222 1 140 2 269 1 199 1 170 1 349 1 14 1 291 2 363 1 182 1 
140 4 222 2 243 1 14 3 358 1 227 1 61 1 74 1 182 2 155 1 86 5 269 2 349 1 319 1 291 5 363 1 
140 4 222 2 243 1 14 3 358 1 227 1 100 1 61 1 74 1 182 2 155 1 86 5 269 2 349 1 291 5 363 1 
222 1 140 1 14 1 181 1 83 2 123 2 192 1 182 1 155 1 86 1 193 1 156 1 269 1 229 1 103 1 39 1 291 1 45 1 
140 1 222 2 14 1 70 1 358 1 182 1 338 1 86 1 286 1 269 1 229 1 230 1 291 1 
193 1 28 1 333 1 117 1 311 1 
252 1 262 2 322 1 93 1 28 2 48 1 71 1 191 1 19 1 50 1 193 1 339 2 116 1 185 1 332 1 333 2 117 2 23 1 311 1 
28 1 83 1 123 1 126 1 206 1 39 1 333 1 171 1 311 1 
322 1 311 1 191 1 
348 1 3 1 362 1 144 1 
238 1 348 1 354 1 3 1 4 1 110 1 144 1 
238 1 232 1 77 1 
354 1 356 2 233 1 110 1 144 1 238 3 114 1 348 1 287 1 3 1 4 3 274 1 
113 1 238 2 348 1 354 1 3 1 4 2 345 1 110 1 144 1 
46 1 353 1 354 1 278 1 110 1 238 1 4 1 3 1 89 1 274 1 275 1 
238 1 348 1 354 1 3 1 4 1 274 1 110 1 
238 1 348 2 354 1 4 1 274 1 110 1 144 1 
354 2 132 1 110 2 238 2 348 1 3 1 4 2 147 1 274 1 106 1 
46 1 354 1 189 1 37 1 110 1 144 1 325 1 238 3 113 2 348 1 4 3 3 2 274 1 
353 2 354 1 73 1 110 1 256 1 144 1 238 2 113 1 348 1 3 1 4 2 89 1 129 1 274 1 275 1 
46 1 354 2 37 1 110 2 345 1 144 1 238 4 317 1 113 2 348 1 4 4 3 2 274 1 
238 1 348 1 354 1 3 1 4 1 274 1 110 1 144 1 
46 1 354 1 356 1 233 1 37 1 110 1 144 2 75 1 113 2 238 4 348 2 287 1 4 4 3 3 
354 1 36 1 224 1 26 1 110 1 144 1 238 2 113 1 348 1 3 1 4 2 274 1 
354 1 356 2 233 1 110 1 144 1 238 3 348 1 287 2 3 1 4 3 329 1 274 1 
197 2 318 1 3 2 209 1 
238 1 354 1 4 1 67 1 274 1 110 1 
113 1 238 2 348 1 354 1 3 1 4 2 274 1 110 1 144 1 325 1 
258 1 
238 1 348 1 354 1 3 1 4 1 274 1 110 1 144 1 
354 1 356 1 110 1 144 1 325 1 113 1 238 3 348 1 4 3 3 1 274 1 
75 1 46 1 3 1 37 1 
348 1 3 1 

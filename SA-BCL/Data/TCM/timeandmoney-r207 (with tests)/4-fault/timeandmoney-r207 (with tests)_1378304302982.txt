#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 111 (48,273,326) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 279 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 5 3 232 9 132 1 339 2 35 1 161 2 179 1 276 2 64 4 303 1 67 1 284 1 145 9 212 2 166 2 69 2 21 1 149 1 187 2 214 6 215 1 100 1 216 5 190 1 316 1 357 1 172 1 
295 1 5 3 232 9 132 1 339 2 35 1 161 2 179 1 276 2 64 4 303 1 67 1 284 1 145 9 212 2 166 2 69 2 21 1 149 1 187 2 214 6 215 1 100 1 216 5 190 1 316 1 357 1 172 1 
295 1 5 4 232 10 132 1 339 2 35 1 161 2 179 1 276 2 64 5 303 1 67 1 284 1 145 10 212 2 166 2 69 2 21 1 149 1 187 2 214 7 215 1 100 1 216 6 190 1 316 1 357 1 172 1 
295 1 5 2 232 7 132 1 339 2 35 1 161 2 179 1 276 2 64 3 303 1 67 1 284 1 145 7 212 2 166 1 69 2 21 1 149 1 187 2 214 4 215 1 100 1 216 4 190 1 316 1 357 1 
64 2 276 1 67 1 295 1 212 1 145 4 5 1 166 2 69 1 232 4 187 1 149 1 214 3 216 3 339 1 316 1 357 1 172 1 
145 2 212 1 69 1 232 2 149 1 187 1 132 1 216 1 339 1 297 1 103 1 190 1 161 1 316 1 62 1 357 1 
64 1 284 1 145 3 5 1 69 2 232 3 149 1 214 1 216 2 339 2 161 1 316 1 357 1 
295 1 5 3 176 1 232 9 339 2 35 1 161 1 13 1 64 4 276 1 67 1 284 1 145 9 212 1 166 2 69 2 214 7 149 1 187 1 100 1 216 5 316 1 357 1 172 1 
295 1 5 3 176 1 232 9 339 2 35 1 161 1 13 1 64 4 276 1 67 1 284 1 145 9 212 1 166 2 69 2 214 7 149 1 187 1 100 1 216 5 316 1 357 1 172 1 
279 1 
93 2 113 1 366 1 
207 2 233 2 1 2 125 2 367 2 222 1 369 2 342 1 
76 1 194 1 1 3 294 1 359 1 267 1 360 1 202 1 269 1 233 2 11 1 204 2 58 1 298 1 88 1 365 1 367 2 235 1 369 3 342 1 162 1 207 2 370 1 283 2 285 1 44 2 348 1 352 1 189 1 241 1 217 1 23 2 75 2 125 2 24 1 222 1 52 1 
207 1 233 1 1 1 118 1 238 1 310 1 125 1 367 1 369 1 342 1 
1 1 118 1 278 1 345 1 154 1 143 1 19 1 233 1 307 1 113 1 355 1 193 1 369 1 127 1 
207 1 1 1 278 2 118 1 345 1 154 1 143 1 19 1 233 1 113 1 355 1 367 1 125 1 193 2 369 1 
278 1 368 1 193 1 147 1 63 1 
128 1 278 2 113 1 355 1 193 2 171 1 147 1 63 1 
278 1 193 1 147 1 
207 1 1 1 118 1 278 1 238 1 337 1 233 1 310 1 367 1 125 1 193 1 63 1 369 1 342 1 
113 1 
197 1 278 2 113 1 355 1 193 2 171 1 147 1 63 1 
140 1 26 2 142 1 278 5 209 1 53 1 147 2 84 1 260 2 362 2 6 1 73 1 113 1 355 1 49 1 178 1 193 5 171 1 63 2 
279 1 
207 1 1 2 233 2 306 1 367 1 125 1 381 1 222 2 369 2 
116 1 288 1 249 1 
194 1 1 1 294 1 283 1 285 1 45 1 241 1 23 1 298 1 88 1 365 1 75 1 235 1 222 1 369 1 52 1 
194 1 1 2 294 1 283 1 249 1 285 1 233 1 241 1 308 1 133 1 23 1 298 1 88 1 365 1 75 1 235 1 367 1 125 1 52 1 369 2 
207 1 225 1 1 5 324 1 66 1 233 5 307 1 308 2 133 1 367 4 125 4 381 1 222 1 369 5 
233 2 358 1 1 2 118 1 238 1 125 2 367 2 369 2 
207 1 233 3 1 3 308 1 125 3 367 3 222 1 369 3 
233 1 1 1 118 1 238 1 125 1 367 1 369 1 
207 1 233 1 1 1 118 1 306 1 125 1 367 1 381 1 369 1 
76 1 194 1 1 4 154 1 294 1 359 1 267 1 360 1 202 1 269 1 233 3 204 2 58 1 133 1 298 1 88 1 135 1 365 1 235 1 367 3 369 4 342 1 207 2 370 1 118 1 278 1 345 1 283 1 184 1 143 1 285 1 44 1 348 1 19 1 241 1 217 1 308 1 23 1 75 1 125 3 193 1 222 1 381 1 52 1 
225 1 233 2 1 2 307 1 308 1 125 1 367 1 222 1 369 2 
207 1 1 3 278 1 118 1 345 1 154 1 143 1 184 1 19 1 233 3 296 1 308 2 133 1 113 1 367 3 125 3 193 1 381 1 369 3 
207 1 233 2 288 1 1 2 308 1 249 1 125 2 367 2 381 1 369 2 
194 1 1 1 294 1 283 1 285 1 241 1 23 1 88 1 298 1 365 1 75 1 235 1 222 1 369 1 52 1 
91 1 194 1 1 1 294 1 43 1 283 1 285 1 23 1 298 1 365 1 75 1 235 1 222 1 369 1 52 1 
76 1 28 1 249 2 202 1 360 2 32 1 269 1 112 1 204 2 58 1 116 2 164 1 370 1 302 1 281 1 210 1 348 1 44 4 304 1 376 1 167 1 288 2 352 2 123 1 
233 1 1 1 358 1 118 1 154 1 125 1 367 1 369 1 
338 1 326 1 
338 1 326 1 
111 1 338 1 326 1 48 1 
111 1 338 1 326 1 48 1 
111 1 48 1 
338 1 326 1 152 1 
111 1 338 1 326 1 48 1 
338 1 326 1 273 1 
338 1 326 1 152 1 
338 1 326 1 152 1 
338 1 326 1 259 1 
338 1 326 1 259 1 
338 1 326 1 259 1 
1 2 247 1 131 1 233 2 34 1 270 1 338 1 271 1 273 1 367 2 61 1 369 2 278 1 326 1 94 1 372 1 120 1 144 1 148 1 351 1 263 1 125 2 193 1 222 1 
292 1 196 1 371 1 278 2 326 2 247 3 80 1 81 1 94 2 266 1 148 1 131 2 351 2 338 2 113 1 74 1 263 2 193 2 138 2 
276 1 212 1 187 1 
297 1 212 1 187 1 
276 2 17 1 297 1 340 1 212 3 186 1 
276 1 17 1 297 1 311 1 212 2 186 1 
276 1 17 2 297 1 212 2 186 1 
153 1 26 1 293 2 109 1 32 1 84 3 362 1 6 2 112 1 57 2 113 2 272 2 366 1 206 1 60 1 61 1 63 4 278 5 93 3 209 1 372 1 144 1 304 1 147 1 260 1 99 1 188 1 123 1 355 1 193 5 314 1 171 1 
26 2 229 5 29 1 53 1 83 1 32 3 84 8 362 2 6 6 112 3 57 6 113 5 272 6 366 3 368 5 206 3 60 1 63 7 15 1 278 9 93 9 209 1 372 4 327 1 304 3 147 6 260 2 99 2 329 1 353 1 123 3 355 1 193 9 314 2 171 1 
26 1 293 1 53 1 109 1 32 1 84 3 362 1 6 2 112 1 57 2 113 3 272 2 366 2 206 1 63 2 278 3 93 4 372 1 304 1 260 1 99 1 188 1 123 1 355 1 193 3 314 1 
26 1 293 2 29 1 53 1 109 1 83 1 32 2 84 5 362 1 6 4 112 2 57 4 113 4 272 4 366 3 206 2 63 3 278 4 93 7 372 2 304 2 260 1 99 1 188 1 353 1 123 2 355 1 193 4 314 1 
279 1 
181 1 298 1 
134 1 
298 1 365 1 285 1 
298 1 107 1 
298 1 285 1 
72 1 104 2 298 3 365 1 285 1 18 1 
323 1 277 1 302 2 79 1 44 7 320 1 31 2 360 3 304 1 376 3 112 1 305 1 363 1 352 4 160 1 244 1 341 1 
323 1 277 1 302 2 79 1 44 7 320 1 31 2 360 3 304 1 376 3 112 1 305 1 363 1 352 4 160 1 244 1 341 1 
323 1 277 1 302 2 79 1 44 7 320 1 31 2 360 3 304 1 376 3 336 1 112 1 305 1 363 1 352 4 160 1 244 1 341 1 
79 2 265 1 31 3 320 2 202 1 252 1 360 15 32 3 269 1 363 2 112 4 204 2 160 5 206 3 341 2 323 1 180 1 370 1 41 1 277 1 42 1 302 5 239 4 68 1 348 1 44 31 304 4 71 3 376 10 305 1 352 16 123 3 244 1 290 1 
79 1 31 2 320 1 202 2 360 4 269 2 112 1 363 1 204 4 160 1 341 1 180 1 370 2 277 1 302 3 211 1 348 2 44 9 304 1 376 4 350 1 305 1 352 5 244 1 
194 1 319 1 2 1 251 1 30 1 232 2 339 1 297 1 12 1 340 1 38 1 89 1 90 1 161 1 276 1 283 1 328 1 145 2 212 2 69 1 214 1 187 1 149 1 216 1 23 1 75 1 170 1 316 1 52 1 357 1 
194 1 319 1 2 1 251 1 30 1 232 3 339 1 297 1 340 1 12 1 89 1 161 1 276 1 283 1 328 1 145 3 212 2 69 1 187 1 214 2 216 1 23 1 219 1 75 1 170 1 316 1 245 1 223 1 52 1 357 1 
276 1 194 1 283 1 2 1 212 2 145 2 328 1 251 1 232 2 187 1 214 2 216 1 297 1 340 1 12 1 219 1 23 1 89 1 75 1 170 1 161 1 316 1 52 1 245 1 357 1 
331 1 194 1 78 1 294 1 251 2 232 1 158 1 339 1 298 1 161 2 283 1 373 1 145 1 328 2 285 1 69 1 46 1 23 1 75 1 170 2 52 1 223 1 264 1 
194 1 319 1 2 1 251 1 30 1 232 1 339 1 297 1 12 1 340 1 38 1 89 1 161 1 276 1 283 1 328 1 145 1 212 2 69 1 187 1 149 1 23 1 75 1 170 1 245 1 52 1 
291 1 
194 1 1 1 294 2 154 1 3 1 159 2 6 2 253 1 113 2 298 1 254 1 256 1 65 1 118 1 209 1 345 1 19 1 260 1 307 1 309 1 23 2 355 1 313 2 75 2 314 1 220 1 171 3 356 2 264 1 127 1 226 4 26 1 78 1 130 1 268 1 84 2 362 1 233 1 37 1 366 2 322 2 369 1 278 5 93 2 283 2 143 1 285 1 374 2 147 6 289 2 243 1 50 1 192 2 193 5 52 1 
226 2 1 1 197 1 118 1 278 3 154 1 345 1 143 1 3 1 19 1 147 2 268 1 233 1 307 1 309 1 37 1 254 1 193 3 171 1 369 1 356 1 127 1 
226 3 1 1 197 1 154 1 3 1 268 1 233 1 37 1 113 1 254 1 369 1 278 3 118 1 345 1 143 1 19 1 147 1 289 1 307 1 309 1 355 1 193 3 171 1 127 1 
226 3 1 1 197 1 154 1 3 1 268 1 233 1 37 1 113 1 254 1 322 1 369 1 278 3 118 1 345 1 143 1 19 1 147 2 289 1 307 1 309 1 355 1 193 3 171 1 127 1 356 1 
1 1 197 1 154 1 3 1 159 2 6 1 113 5 205 1 254 1 65 1 118 1 345 1 209 1 19 1 260 1 307 1 309 1 355 5 313 2 171 3 356 4 127 1 224 1 226 6 26 1 231 1 268 1 84 1 362 1 233 1 37 1 366 2 322 4 137 1 369 1 278 5 143 1 146 1 374 2 147 7 289 4 243 1 192 2 193 5 
1 1 154 1 3 1 159 2 6 1 253 1 113 2 254 1 65 1 118 1 345 1 209 1 19 1 260 1 307 1 309 1 355 1 313 2 171 2 127 1 356 2 226 4 26 1 268 1 84 1 362 1 233 1 37 1 366 2 322 2 369 1 278 4 93 2 143 1 374 2 147 4 289 2 243 1 192 2 193 4 
226 4 26 1 1 1 154 1 3 1 231 1 268 1 84 1 159 2 362 1 6 1 233 1 37 1 113 1 205 1 366 2 254 1 322 2 369 1 65 1 278 4 118 1 345 1 209 1 143 1 19 1 374 2 146 1 147 4 260 1 289 2 307 1 309 1 243 1 355 1 313 2 192 2 193 4 171 2 356 2 127 1 
226 4 26 1 1 1 154 1 3 1 231 1 268 1 84 1 159 2 362 1 6 1 233 1 37 1 113 1 205 1 366 2 254 1 322 2 369 1 65 1 278 4 118 1 345 1 209 1 143 1 19 1 374 2 146 1 147 4 260 1 289 2 307 1 309 1 243 1 355 1 313 2 192 2 193 4 171 2 356 2 127 1 
226 4 195 1 26 1 1 1 154 1 3 1 268 1 84 1 362 1 6 1 233 1 37 1 113 1 254 1 322 2 369 1 163 2 65 1 16 2 278 4 118 1 93 2 345 1 209 1 143 1 19 1 146 1 147 4 260 1 47 1 289 2 307 1 309 1 355 1 313 2 192 2 193 4 171 2 330 1 356 2 127 1 
226 5 26 1 1 1 154 1 231 1 3 1 268 1 84 1 159 2 362 1 6 1 233 1 37 1 113 1 205 1 366 2 254 1 322 3 137 1 369 1 65 1 278 4 118 1 209 1 345 1 143 1 19 1 374 2 146 1 147 5 260 1 289 3 307 1 309 1 243 1 355 1 313 2 192 2 193 4 171 2 127 1 356 3 
226 5 26 1 1 1 154 1 231 1 3 1 268 1 84 1 159 2 362 1 6 1 233 1 37 1 113 1 205 1 366 2 254 1 322 3 137 1 369 1 65 1 278 4 118 1 209 1 345 1 143 1 19 1 374 2 146 1 147 5 260 1 289 3 307 1 309 1 243 1 355 1 313 2 192 2 193 4 171 2 127 1 356 3 
1 1 154 1 3 1 6 1 253 1 113 1 254 1 163 2 65 1 118 1 16 2 345 1 209 1 19 1 260 1 307 1 309 1 355 1 313 2 171 2 127 1 356 2 226 4 26 1 268 1 84 1 362 1 233 1 37 1 322 2 369 1 278 4 93 2 143 1 147 4 47 1 289 2 192 2 193 4 
76 1 370 1 279 1 204 2 58 1 28 1 348 1 202 1 269 1 
0 1 76 1 249 11 267 1 360 6 202 2 252 1 32 2 269 2 7 1 112 1 204 4 58 2 160 1 206 2 116 11 141 1 41 1 370 2 165 1 302 1 344 1 239 3 348 2 44 14 304 2 376 2 71 3 288 4 189 1 352 8 123 1 222 1 
194 1 76 1 1 2 294 1 267 1 202 1 360 1 269 1 233 1 204 2 58 1 133 1 298 1 88 1 365 1 235 1 367 1 369 2 370 1 165 1 283 1 285 1 348 1 44 2 213 1 45 1 288 1 189 1 352 1 241 1 308 1 23 1 191 1 75 1 125 1 222 1 52 1 25 1 
194 2 1 3 294 1 249 7 250 2 202 3 112 3 9 1 204 6 58 3 298 2 160 4 206 2 341 1 116 7 165 1 302 4 348 3 304 3 305 1 352 10 308 1 217 2 123 2 23 3 75 3 125 1 222 2 76 3 228 2 79 1 267 1 175 2 31 1 360 10 32 2 177 1 269 3 233 1 133 1 88 2 365 2 367 1 235 2 369 3 92 2 370 3 277 1 283 3 285 2 95 1 44 20 376 8 288 7 189 1 241 2 244 1 245 1 52 2 
194 2 76 2 1 1 78 1 294 2 28 1 335 1 82 1 267 1 202 2 360 1 269 2 233 1 234 1 204 4 58 2 298 3 90 1 367 1 114 1 369 1 370 2 283 8 286 1 285 2 348 2 44 2 189 1 352 1 218 1 308 1 23 8 75 7 125 1 24 2 246 1 245 1 52 2 264 1 
76 1 1 1 55 1 249 1 202 1 32 1 360 2 269 1 233 1 112 1 204 2 58 1 367 1 206 1 369 1 116 1 207 1 370 1 165 1 302 1 348 1 44 3 304 1 376 1 288 1 352 1 123 1 125 1 381 1 
116 1 76 1 370 1 28 1 281 1 249 1 44 2 348 1 202 1 32 1 304 1 269 1 376 1 288 1 352 2 204 2 58 1 160 1 
116 1 76 1 164 1 370 1 302 1 28 1 249 1 44 2 348 1 202 1 360 2 269 1 376 1 288 1 112 1 204 2 123 1 58 1 
76 1 28 1 249 2 32 1 202 1 360 2 269 1 112 1 204 2 58 1 160 1 206 1 116 2 370 1 302 1 348 1 44 4 304 1 376 2 288 2 352 2 123 1 
116 1 76 1 370 1 281 1 249 1 44 2 348 1 202 1 32 1 304 1 269 1 376 1 288 1 352 2 204 2 58 1 160 1 114 1 
116 1 76 1 164 1 370 1 302 1 249 1 44 2 348 1 202 1 360 2 269 1 376 1 288 1 112 1 204 2 123 1 58 1 114 1 
76 1 249 2 32 1 202 1 360 2 269 1 112 1 204 2 58 1 160 1 206 1 114 1 116 2 370 1 302 1 348 1 44 4 304 1 376 2 288 2 352 2 123 1 
76 1 249 2 32 1 202 1 360 2 269 1 112 1 204 2 58 1 160 1 206 1 116 2 370 1 302 1 44 4 348 1 304 1 376 2 288 2 352 2 123 1 
194 1 76 1 1 1 294 1 267 1 202 1 360 1 269 1 204 2 58 1 88 1 298 1 365 1 235 1 369 1 370 1 283 1 285 1 44 2 348 1 352 1 189 1 241 1 217 1 23 1 75 1 222 1 52 1 
194 1 76 1 1 1 294 1 267 1 202 1 360 1 269 1 204 2 58 1 298 1 365 1 235 1 369 1 91 1 370 1 43 1 283 1 285 1 44 2 348 1 121 1 352 1 189 1 23 1 75 1 222 1 52 1 
76 1 249 2 32 1 202 1 360 2 269 1 112 1 204 2 58 1 160 1 206 1 116 2 370 1 165 1 302 1 348 1 44 4 304 1 376 2 288 2 352 2 123 1 
194 1 76 1 1 1 249 2 360 2 32 1 202 1 269 1 112 1 204 2 58 1 88 1 298 1 365 1 160 1 235 1 90 1 206 1 369 1 116 2 92 1 370 1 302 1 283 1 285 1 44 4 348 1 304 1 376 2 288 2 352 2 241 1 123 1 217 1 23 1 75 1 52 1 
76 1 1 1 249 1 360 1 202 1 32 1 269 1 233 1 112 1 204 2 58 1 160 1 367 1 206 1 369 1 207 1 39 1 116 1 370 1 165 1 348 1 44 3 304 1 376 1 288 1 352 2 123 1 125 1 381 1 
129 1 202 2 360 10 252 1 32 3 269 2 112 3 321 1 204 4 160 3 299 1 206 3 139 2 41 1 370 2 302 3 119 1 346 1 239 2 211 1 348 2 44 19 304 3 71 1 376 6 377 1 352 9 242 1 123 3 105 2 
129 2 174 1 199 1 360 12 202 3 32 3 269 3 112 2 204 6 160 2 299 1 206 3 139 1 180 2 370 3 41 2 302 2 119 1 239 2 211 1 348 3 44 26 96 1 349 1 304 3 376 4 71 2 377 2 352 14 22 1 242 1 123 2 354 1 105 4 
333 1 199 1 252 1 202 3 112 5 204 6 160 4 206 4 299 1 341 1 302 4 346 1 119 1 211 1 348 3 349 1 304 5 71 3 305 1 352 20 22 1 123 4 354 1 129 1 174 1 79 1 31 1 32 4 360 21 269 3 139 1 180 1 370 3 41 3 277 1 239 4 44 41 96 1 376 8 377 2 242 1 105 4 244 1 
129 1 174 1 79 1 333 1 199 1 31 1 202 4 360 18 252 1 32 4 269 4 112 4 204 8 160 3 299 1 206 4 341 1 139 1 180 2 41 3 370 4 277 1 302 4 119 1 346 1 239 4 211 1 348 4 44 38 349 1 96 1 304 5 71 3 376 7 377 2 305 1 352 20 22 1 242 1 123 3 354 1 244 1 105 4 
129 1 174 1 79 1 199 1 31 1 202 2 360 25 252 2 32 7 269 2 7 2 112 8 204 4 160 7 299 1 206 7 341 1 139 1 180 1 41 2 370 2 277 1 302 7 119 1 239 4 211 1 348 2 44 52 349 1 96 1 304 8 71 4 376 14 377 1 305 1 352 27 22 1 242 1 123 7 354 1 244 1 105 4 
131 1 292 1 196 1 351 1 338 1 326 1 94 1 266 1 263 1 126 1 
271 1 273 1 
131 1 33 1 351 1 338 1 326 1 86 1 94 1 263 1 315 1 
152 1 20 1 
136 1 201 1 259 1 
292 1 196 1 371 1 278 1 326 1 247 2 81 1 94 1 266 1 148 1 131 1 351 1 338 1 113 1 74 1 263 1 193 1 138 1 
292 1 196 1 371 1 278 1 326 1 247 2 81 1 94 1 266 1 148 1 131 1 351 1 338 1 113 1 74 1 263 1 193 1 138 1 
292 1 196 1 371 1 278 1 326 1 247 2 81 1 94 1 266 1 148 1 131 1 351 1 338 1 113 1 74 1 263 1 193 1 138 1 
152 1 201 1 20 1 
152 1 201 1 20 1 
136 1 259 1 
136 1 201 1 259 1 
270 1 34 1 
1 2 27 1 247 1 131 1 34 1 270 1 233 2 338 1 271 1 273 1 367 2 61 1 369 2 138 1 63 1 371 1 278 1 326 1 94 1 372 1 120 1 144 1 351 1 263 1 125 2 193 1 222 1 
194 1 76 1 1 2 335 1 267 1 202 1 360 1 269 1 233 2 204 2 58 1 298 1 369 2 343 1 370 1 165 1 182 1 283 2 285 1 347 1 348 1 44 2 189 1 352 1 218 1 23 2 262 1 380 1 75 2 24 2 52 1 
276 1 194 1 183 1 108 1 319 1 283 2 2 1 212 2 328 1 187 1 297 1 340 1 12 1 23 2 75 2 90 1 236 1 52 1 245 1 
276 1 194 1 319 1 283 1 2 1 212 2 328 1 258 1 187 1 297 1 340 1 12 1 23 1 75 1 236 1 245 1 52 1 
194 1 108 1 78 1 294 1 283 1 285 1 328 1 46 1 364 1 23 1 298 1 75 1 52 1 264 1 
276 1 194 1 183 1 108 1 319 1 283 1 2 1 212 2 328 1 187 1 297 1 340 1 12 1 23 1 75 1 236 1 52 1 245 1 
318 1 
279 1 
26 1 84 1 362 1 159 1 6 1 113 2 366 1 278 1 209 1 93 1 374 1 147 1 260 1 243 1 355 1 193 1 171 1 
194 3 294 1 198 1 54 2 6 8 112 2 57 6 298 10 113 8 206 2 208 2 117 2 209 4 257 2 304 2 260 4 72 1 123 2 73 1 23 3 355 2 75 3 124 1 314 2 171 3 317 1 26 4 227 1 77 2 228 2 32 2 84 9 362 4 365 3 272 6 366 6 90 1 140 1 181 3 278 5 280 1 93 12 283 3 143 2 285 3 147 5 150 2 240 2 378 2 104 2 50 1 193 5 52 4 107 2 
26 2 77 1 174 1 199 1 32 2 84 8 362 2 6 5 112 2 57 5 113 5 272 5 366 3 206 2 40 1 117 2 41 1 278 1 93 6 209 2 282 1 239 1 96 1 349 1 147 1 304 2 260 2 71 1 123 2 354 1 355 2 50 1 314 1 193 1 171 1 
26 1 1 1 77 1 79 1 231 1 4 1 84 2 362 1 6 2 337 1 233 1 112 1 367 1 341 1 369 1 342 1 207 1 117 2 118 1 278 1 238 1 209 1 304 2 260 1 305 1 310 1 125 1 193 1 
140 1 26 1 209 1 260 1 84 1 362 1 6 1 73 1 355 1 113 1 
117 2 77 1 228 1 93 10 32 2 304 2 84 5 6 5 112 2 57 5 123 2 113 5 272 5 366 5 206 2 
278 1 113 1 355 1 193 1 171 1 147 1 
194 2 26 2 78 1 294 2 53 1 198 1 84 2 362 2 6 2 298 2 365 1 115 1 256 1 325 1 278 3 280 2 209 1 283 4 285 2 287 1 147 4 70 1 260 2 379 1 23 4 312 1 75 4 50 2 220 1 314 2 193 3 171 2 52 3 264 1 
194 1 76 1 1 3 294 1 359 1 267 1 360 1 202 1 269 1 233 2 204 2 58 1 88 1 298 1 365 1 367 2 235 1 369 3 342 1 207 2 370 1 283 1 285 1 44 1 348 1 241 1 217 1 23 1 75 1 125 2 222 1 52 1 
26 1 93 4 209 1 31 1 260 1 84 1 362 1 6 2 57 2 355 2 113 4 272 2 366 2 50 1 314 1 
275 1 351 1 263 1 
237 1 292 1 270 1 351 1 263 1 
275 1 351 1 263 1 
275 1 351 1 263 1 
351 1 87 1 263 1 
351 1 87 1 263 1 
351 1 87 1 263 1 
351 1 263 1 
338 1 326 1 
180 1 370 2 277 1 302 2 79 1 44 8 348 2 31 1 304 1 360 4 202 2 269 2 376 3 112 1 305 1 352 4 204 4 160 1 244 1 341 1 
279 1 
370 1 302 1 348 1 44 4 360 2 202 1 32 1 304 1 269 1 376 2 112 1 352 2 123 1 204 2 160 1 206 1 300 1 
41 1 302 1 239 2 44 7 360 4 252 1 32 1 304 1 71 1 376 2 112 1 352 3 123 1 160 1 206 1 
0 1 79 2 31 1 32 2 252 1 360 12 202 2 269 2 7 1 112 3 85 1 204 4 160 4 206 2 341 2 180 2 370 2 277 1 302 5 239 2 44 23 348 2 304 3 376 9 71 2 305 1 352 11 123 2 244 1 
239 1 44 1 360 1 
71 1 352 1 44 1 
370 1 228 1 302 2 348 1 44 6 202 1 360 3 32 1 304 1 269 1 376 3 112 1 352 3 204 2 123 1 160 1 206 1 300 1 
174 1 199 1 360 6 202 1 32 2 269 1 112 2 204 2 160 1 206 2 41 1 370 1 302 1 239 1 211 1 44 12 348 1 96 1 349 1 304 2 71 1 376 2 352 6 123 2 354 1 
302 1 79 1 44 6 304 1 360 3 376 2 305 1 112 1 352 3 160 1 341 1 
180 1 370 1 277 1 302 1 79 1 44 3 348 1 360 2 202 1 269 1 376 2 85 1 352 1 204 2 160 1 244 1 341 1 
370 1 302 3 79 2 211 1 348 1 44 10 4 1 202 1 360 5 304 2 269 1 376 5 305 1 112 2 352 5 204 2 160 2 341 2 
370 1 211 1 348 1 44 2 202 1 32 1 304 1 269 1 376 1 352 2 204 2 160 1 
370 1 302 1 211 1 348 1 44 4 360 2 202 1 32 1 304 1 269 1 376 2 112 1 352 2 123 1 204 2 160 1 206 1 
180 1 370 3 302 1 346 1 79 1 211 1 44 3 348 3 360 2 202 3 269 3 376 2 85 1 352 1 204 6 160 1 341 1 
79 3 265 1 31 1 360 18 202 5 252 1 32 3 269 5 85 1 112 5 204 10 160 5 206 3 341 3 300 1 180 2 41 1 370 5 277 1 42 1 302 7 346 1 239 4 68 1 211 1 348 5 44 34 304 5 71 3 376 12 305 2 352 16 123 3 244 1 
79 1 31 1 360 4 202 1 269 1 112 1 204 2 341 1 41 1 370 1 277 1 302 2 239 1 211 1 44 8 348 1 96 1 304 1 71 1 376 2 305 1 352 4 244 1 
79 1 31 1 360 5 202 2 252 1 32 1 269 2 112 1 204 4 160 1 206 1 341 1 300 1 41 1 370 2 277 1 302 2 239 2 211 1 44 11 348 2 96 1 304 2 71 1 376 3 305 1 352 6 244 1 
174 1 79 1 199 1 31 1 360 10 202 3 32 2 269 3 112 3 204 6 160 1 206 2 341 1 300 1 180 1 41 1 370 3 277 1 302 3 239 1 211 1 44 19 348 3 96 1 349 1 304 3 71 1 376 4 305 1 352 9 123 2 354 1 244 1 
174 1 79 1 199 1 31 1 360 7 202 3 32 2 269 3 112 2 204 6 160 2 206 2 341 1 300 1 180 1 41 1 370 3 277 1 302 3 239 1 211 1 44 17 348 3 96 1 349 1 304 3 71 1 376 5 305 1 352 10 123 1 354 1 244 1 
79 1 31 1 360 4 202 1 269 1 112 1 204 2 341 1 41 1 370 1 277 1 302 2 239 1 211 1 44 8 348 1 96 1 304 1 71 1 376 2 305 1 352 4 244 1 
174 1 199 1 360 6 202 1 32 2 269 1 112 2 204 2 160 1 206 2 41 1 370 1 302 1 239 1 211 1 44 12 348 1 96 1 349 1 304 2 71 1 376 2 352 6 123 2 354 1 
174 1 79 1 199 1 31 1 360 8 202 4 32 2 269 4 112 2 204 8 160 2 206 2 341 1 300 1 180 2 41 1 370 4 277 1 302 3 239 1 211 1 44 18 348 4 96 1 349 1 304 3 71 1 376 5 305 1 352 10 123 1 354 1 244 1 
174 1 199 1 360 7 202 4 32 3 269 4 112 2 204 8 160 3 206 3 180 2 41 1 370 4 302 3 346 1 239 1 211 1 44 16 348 4 96 1 349 1 304 3 71 1 376 6 352 9 123 2 354 1 
277 1 302 3 79 3 44 7 360 4 304 1 376 6 112 1 305 1 352 3 244 2 160 3 341 3 
174 1 79 1 199 1 31 1 360 8 202 4 32 2 269 4 112 2 204 8 160 1 206 2 341 1 180 2 41 1 370 4 277 1 302 3 346 1 239 1 211 1 44 18 348 4 96 1 349 1 304 3 71 1 376 4 305 1 352 10 123 1 354 1 244 1 
233 1 225 1 1 1 307 1 222 1 369 1 110 1 
332 1 225 1 1 1 230 1 185 1 110 1 233 1 10 1 307 1 222 1 301 1 369 1 
279 1 294 1 23 1 283 1 75 1 
194 1 1 2 294 1 283 1 285 1 233 1 308 1 23 1 298 1 88 1 365 1 75 1 235 1 367 1 125 1 222 1 52 1 369 2 
208 1 194 1 1 2 118 1 154 1 345 1 280 1 283 1 285 2 233 2 308 1 23 1 298 3 88 1 365 2 75 1 235 1 367 1 125 2 222 1 52 1 369 2 107 1 
194 1 1 2 155 1 154 1 233 2 298 3 365 2 367 1 235 1 369 2 208 1 118 1 43 1 280 1 345 1 283 2 285 2 308 1 23 2 75 2 125 2 222 1 52 1 107 1 
194 1 155 1 294 1 298 4 113 1 365 1 255 1 208 1 181 1 278 2 280 1 283 3 143 1 285 1 147 1 101 1 104 1 23 3 355 1 75 3 193 2 52 1 107 1 
208 1 194 1 181 1 278 2 155 1 294 1 280 1 283 3 143 1 285 1 147 1 378 1 104 1 23 3 113 1 355 1 298 4 365 1 75 3 193 2 52 1 107 1 
194 1 23 1 283 1 75 1 52 1 246 1 
194 2 294 2 283 7 286 1 200 1 285 2 82 1 70 1 72 1 234 1 218 1 379 1 23 7 298 3 365 1 75 6 90 1 24 1 246 1 245 1 52 3 
194 1 1 2 249 1 250 1 202 2 112 1 204 4 58 2 298 1 341 1 116 1 165 1 302 2 347 1 348 2 304 1 305 1 352 3 217 1 308 1 23 1 75 1 125 1 222 2 76 2 79 1 31 1 360 3 269 2 233 1 88 1 365 1 90 1 367 1 235 1 369 2 92 1 370 2 277 1 283 1 285 1 44 6 376 2 288 1 241 1 244 1 52 1 
26 2 294 1 198 1 54 1 84 1 362 2 6 1 113 1 298 2 63 1 140 1 181 1 278 3 209 2 257 1 283 1 143 1 147 2 260 2 150 1 378 1 104 1 73 1 23 1 355 1 75 1 193 3 171 1 
317 1 194 1 283 2 285 1 72 1 104 1 23 2 298 2 365 1 75 2 90 1 246 1 52 2 
194 1 78 1 155 1 294 1 283 4 285 1 23 4 298 1 75 4 90 1 274 1 52 1 264 1 
194 1 280 1 283 2 285 1 95 1 70 1 379 1 23 2 298 1 312 1 365 1 75 2 115 1 52 2 
194 1 297 1 294 1 23 1 283 1 2 1 75 1 212 1 52 1 187 1 
194 1 343 1 218 1 23 2 298 1 283 2 75 2 285 1 90 1 52 1 245 1 
194 2 78 1 280 1 294 1 283 5 285 2 82 1 234 1 218 1 23 5 298 3 75 4 90 1 274 1 52 2 264 1 
194 2 78 1 173 1 280 1 294 1 283 5 285 2 234 1 218 1 23 5 298 3 75 4 90 1 274 1 52 2 264 1 
194 1 1 2 294 1 43 1 283 1 285 1 233 1 308 1 23 1 298 1 365 1 75 1 235 1 367 1 125 1 222 1 52 1 369 2 
194 1 280 1 283 1 200 1 285 1 70 1 72 1 379 1 23 1 298 1 365 1 75 1 52 2 
203 1 156 1 248 1 222 1 14 1 
118 1 278 2 154 1 345 1 156 2 334 1 248 2 143 1 184 1 19 1 98 1 203 2 113 1 355 1 51 1 193 2 222 1 14 1 63 1 
233 1 1 1 182 1 156 1 248 1 262 1 380 1 369 1 14 1 
334 1 51 1 14 1 
279 1 
216 1 339 1 145 1 316 1 232 1 69 1 357 1 
145 1 161 1 251 1 
145 3 69 1 232 3 149 1 216 1 168 1 339 1 151 1 190 2 316 1 106 1 357 1 
216 1 339 1 145 2 316 1 166 1 232 2 69 1 357 1 214 1 
276 1 64 1 216 1 339 1 295 1 212 1 145 1 232 1 69 1 187 1 149 1 
216 1 339 1 145 1 316 1 232 1 69 1 149 1 
339 1 145 1 316 2 232 1 69 1 357 1 149 1 
122 1 216 1 339 2 36 1 145 2 56 1 316 1 232 2 69 2 149 1 
64 1 145 3 5 1 69 1 232 3 149 1 214 2 100 1 216 2 339 1 35 1 316 1 357 1 
276 1 212 2 145 2 69 1 232 2 149 1 187 1 214 1 216 1 339 1 297 1 340 1 221 1 316 1 357 1 
64 1 145 4 166 1 5 1 69 2 232 4 149 1 214 2 216 2 339 2 316 1 357 1 172 1 
216 1 339 1 145 1 316 1 232 1 69 1 357 1 149 1 
64 1 145 4 5 1 232 4 69 1 214 2 97 1 168 1 216 3 339 1 190 1 151 1 316 2 357 2 
216 1 339 1 102 1 145 2 316 1 176 1 375 1 232 2 69 1 357 1 214 1 149 1 
145 3 69 1 232 3 149 1 216 1 168 2 339 1 151 1 190 2 169 1 316 1 357 1 
216 2 8 1 157 2 361 1 
261 1 339 1 145 1 232 1 69 1 149 1 
100 1 216 1 339 1 145 2 316 1 232 2 69 1 357 1 214 1 149 1 
59 1 
216 1 339 1 145 1 316 1 232 1 69 1 357 1 149 1 
145 3 69 1 232 3 214 1 149 1 100 1 216 1 339 1 190 1 316 1 357 1 
97 1 64 1 216 1 5 1 
216 1 316 1 

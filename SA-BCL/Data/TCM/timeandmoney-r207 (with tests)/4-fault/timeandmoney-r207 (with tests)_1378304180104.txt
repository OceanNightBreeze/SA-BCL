#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 98 1 138 1 157 1 150 1 41 1 
243 1 98 1 138 1 157 1 150 1 41 1 
243 1 98 1 138 1 157 1 150 1 41 1 
243 1 98 1 138 1 157 1 150 1 41 1 
243 1 302 1 21 1 248 1 75 3 203 1 82 1 41 1 177 2 298 1 254 1 273 1 138 4 239 2 215 1 157 4 150 1 13 3 
243 1 21 1 304 1 361 1 82 1 41 1 104 1 255 1 254 1 138 2 7 1 215 1 157 2 13 1 150 1 123 1 
243 2 72 1 75 1 361 1 82 1 41 2 177 1 298 1 138 3 215 1 157 3 150 1 13 2 
243 2 72 1 141 1 248 1 75 7 361 1 82 1 298 3 254 1 273 1 150 1 13 5 302 1 21 1 203 1 41 2 177 4 351 1 114 1 138 9 239 2 215 1 157 9 310 1 
243 2 72 1 141 1 248 1 75 7 361 1 82 1 298 3 254 1 273 1 150 1 13 5 302 1 21 1 203 1 41 2 177 4 351 1 114 1 138 9 239 2 215 1 157 9 310 1 
153 1 
211 1 328 1 231 2 
185 2 175 1 240 2 131 2 230 2 288 1 296 2 207 2 
185 2 357 1 96 1 51 2 246 2 144 1 118 1 117 1 77 1 314 1 295 1 296 3 192 2 6 1 166 1 253 1 167 1 36 1 199 1 369 1 89 1 303 1 175 1 112 1 131 2 343 1 230 2 207 3 135 2 236 1 238 1 284 1 71 1 240 2 288 1 217 2 311 1 
185 1 323 1 52 1 9 1 240 1 131 1 230 1 288 1 296 1 207 1 
260 1 18 1 368 1 323 1 99 1 207 1 296 1 136 1 316 1 211 1 286 1 240 1 59 1 58 1 
260 1 185 1 18 1 323 1 99 1 131 1 230 1 207 1 296 1 136 1 316 2 211 1 240 1 58 2 59 1 
335 1 316 1 68 1 58 1 80 1 
260 1 335 1 1 1 316 2 211 1 372 1 58 2 80 1 
335 1 316 1 58 1 
185 1 267 1 323 1 52 1 131 1 80 1 230 1 207 1 296 1 316 1 9 1 240 1 58 1 288 1 
211 1 
260 1 335 1 1 1 316 2 211 1 58 2 80 1 300 1 
260 1 48 1 61 2 17 1 331 1 340 1 1 1 247 1 313 1 80 2 271 2 349 1 102 2 335 2 316 5 211 1 45 1 11 1 58 5 
185 1 246 1 89 1 303 1 118 1 117 1 332 1 77 1 314 1 295 1 230 1 207 2 296 2 192 1 236 1 135 1 120 1 26 1 284 1 240 1 
153 1 
185 1 119 1 175 2 131 1 230 1 207 2 296 2 164 1 240 2 
280 1 190 1 26 1 
246 1 89 1 303 1 118 1 117 1 77 1 175 1 314 1 295 1 296 1 207 1 192 1 352 1 135 1 236 1 284 1 
185 3 120 1 175 1 240 3 131 1 230 3 296 3 207 3 
185 1 323 1 9 1 240 1 230 1 296 1 207 1 
164 1 185 1 323 1 119 1 240 1 131 1 230 1 296 1 207 1 
185 3 357 1 96 1 51 2 246 1 118 1 117 1 99 1 119 1 332 1 77 1 314 1 295 1 250 1 296 4 192 1 166 1 253 1 316 1 120 1 59 1 58 1 226 1 18 1 369 1 89 1 323 1 303 1 175 1 112 1 343 1 131 2 230 3 207 4 236 1 135 1 136 1 238 1 284 1 71 1 240 3 288 1 217 1 311 1 
185 1 368 1 120 1 56 1 175 1 240 2 230 1 296 2 207 2 
185 3 18 1 323 1 99 1 119 1 332 1 131 1 230 3 250 1 207 3 296 3 316 1 136 1 211 1 120 2 240 3 58 1 59 1 277 1 
185 2 190 1 119 1 131 1 230 2 207 2 296 2 120 1 26 1 240 2 
246 1 89 1 303 1 117 1 118 1 77 1 175 1 314 1 295 1 296 1 207 1 192 1 135 1 236 1 284 1 
246 1 303 1 117 1 118 1 77 1 175 1 314 1 176 1 295 1 296 1 207 1 192 1 135 1 236 1 122 1 
356 1 0 1 357 1 186 1 96 1 220 1 51 2 190 2 166 1 334 1 253 2 12 1 199 2 126 1 369 1 280 2 173 1 228 1 94 1 354 1 238 1 26 2 311 1 217 4 
185 1 323 1 64 1 240 1 59 1 230 1 296 1 207 1 
185 4 368 1 127 1 119 1 332 1 175 1 131 1 230 4 207 5 296 5 120 2 56 1 240 5 214 1 
185 2 323 1 64 1 9 1 240 2 230 2 296 2 207 2 
38 1 275 1 
38 1 275 1 
160 1 81 1 
160 1 81 1 
160 1 81 1 
178 1 38 1 275 1 
178 1 38 1 275 1 
38 1 275 1 225 1 
348 1 38 2 275 2 92 1 160 1 81 1 
178 1 38 1 275 1 
291 1 38 1 275 1 
291 1 38 1 275 1 
291 1 38 1 275 1 
170 2 292 1 38 2 76 2 191 2 348 1 315 3 364 1 103 1 222 1 316 2 211 1 275 2 27 2 169 1 58 2 14 1 378 2 16 1 
170 1 185 2 38 1 76 1 175 1 204 1 230 2 283 1 296 2 207 2 191 1 42 1 315 1 316 1 275 1 213 1 240 2 198 1 58 1 151 1 339 1 225 1 16 1 378 1 
254 1 21 1 248 1 
254 1 21 1 304 1 
209 1 21 3 248 2 304 1 342 1 216 1 
209 1 21 2 248 1 304 1 342 1 183 1 
209 2 21 2 248 1 304 1 342 1 
48 1 329 1 95 1 186 1 50 1 31 1 1 1 247 3 270 1 313 2 271 1 80 4 102 1 336 2 335 1 316 5 58 5 151 1 260 1 61 1 279 1 62 2 126 1 173 1 263 2 204 1 231 3 283 1 94 1 211 2 328 1 290 1 
48 1 95 1 186 3 50 3 330 1 31 2 1 1 189 5 247 8 270 2 313 6 363 1 80 7 271 2 333 1 102 2 336 6 335 6 316 9 58 9 151 4 260 1 124 1 61 2 126 3 173 3 263 6 110 1 68 5 231 9 94 3 211 5 45 1 155 1 328 3 
186 1 31 1 50 1 247 3 270 1 313 2 80 2 271 1 102 1 336 2 316 3 58 3 151 1 260 1 61 1 279 1 62 1 126 1 173 1 263 2 231 4 94 1 211 3 45 1 328 2 290 1 
186 2 31 1 50 2 247 5 270 1 313 4 363 1 271 1 80 3 102 1 336 4 316 4 58 4 151 2 260 1 124 1 61 1 279 1 62 2 126 2 173 2 263 4 231 7 94 2 211 4 45 1 155 1 328 3 290 1 
153 1 
297 1 118 1 
67 1 
118 1 295 1 
125 2 179 1 294 1 303 1 118 3 295 1 
303 1 118 1 295 1 
118 1 4 1 
199 4 261 1 220 3 126 1 262 1 173 1 174 1 312 1 66 1 113 1 334 2 196 1 253 3 43 1 180 2 223 1 217 7 
199 4 261 1 220 3 126 1 262 1 173 1 174 1 312 1 66 1 113 1 334 2 196 1 253 3 43 1 180 2 223 1 217 7 
199 4 261 1 220 3 126 1 262 1 173 1 174 1 312 1 90 1 66 1 113 1 334 2 196 1 253 3 43 1 180 2 223 1 217 7 
357 1 50 3 220 10 186 3 51 2 312 1 78 4 362 1 147 1 334 5 196 2 253 15 337 1 87 1 223 2 199 16 261 1 278 1 262 1 126 4 369 1 173 4 174 1 66 2 113 5 94 3 134 1 235 1 43 2 238 1 180 3 29 3 311 1 217 31 
357 2 220 4 51 4 269 1 312 1 334 3 196 1 253 4 223 1 199 5 261 1 322 1 126 1 369 2 173 1 174 1 66 1 113 1 235 1 43 1 238 2 180 2 311 2 217 9 
243 1 246 1 359 1 248 1 116 1 117 1 75 1 361 1 82 1 54 1 192 1 193 1 254 1 256 1 319 1 13 1 150 1 172 1 171 1 21 2 371 1 304 1 41 1 135 1 236 1 138 2 215 1 157 2 216 1 218 1 
243 1 246 1 359 1 248 1 116 1 117 1 75 2 361 1 82 1 54 1 192 1 254 1 85 1 319 1 13 1 172 1 171 1 21 2 371 1 304 1 41 1 135 1 236 1 212 1 138 3 285 1 215 1 157 3 216 1 218 1 
246 1 116 1 248 1 117 1 75 2 361 1 82 1 54 1 192 1 254 1 319 1 13 1 172 1 171 1 21 2 304 1 135 1 236 1 212 1 138 2 285 1 215 1 157 2 216 1 218 1 
243 1 187 1 246 1 293 1 116 2 360 1 118 1 117 1 77 1 361 2 295 1 192 1 85 1 319 2 370 1 324 1 41 1 236 1 135 1 138 1 157 1 47 1 218 2 
243 1 246 1 359 1 248 1 116 1 117 1 361 1 54 1 192 1 193 1 254 1 319 1 150 1 172 1 171 1 21 2 371 1 304 1 41 1 135 1 236 1 212 1 138 1 157 1 216 1 218 1 
159 1 
48 1 187 1 1 3 246 2 247 2 146 2 99 1 249 1 295 1 296 1 192 2 102 1 335 6 149 1 58 5 59 1 258 2 260 1 61 1 18 1 201 2 264 1 265 1 207 1 350 1 208 1 210 1 211 2 307 2 115 1 358 1 73 2 270 1 118 1 117 1 313 2 77 2 79 2 271 1 365 1 316 5 321 1 227 2 368 1 323 1 324 1 374 1 325 4 231 2 135 2 236 1 136 1 286 1 240 1 328 2 
358 1 18 1 1 1 201 1 323 1 368 1 249 1 99 1 325 2 265 1 207 1 296 1 335 2 136 1 316 3 149 1 286 1 240 1 321 1 59 1 58 3 300 1 
260 1 358 1 18 1 1 1 323 1 368 1 249 1 99 1 325 3 265 1 207 1 296 1 335 1 136 1 316 3 211 1 307 1 149 1 286 1 240 1 321 1 59 1 58 3 300 1 
358 1 1 1 99 1 249 1 296 1 335 2 316 3 149 1 321 1 58 3 59 1 300 1 260 1 18 1 368 1 323 1 227 1 201 1 325 3 265 1 207 1 136 1 307 1 211 1 286 1 240 1 
48 1 358 1 73 2 1 3 247 1 146 2 99 1 249 1 313 1 79 2 271 1 296 1 102 1 335 7 316 5 149 1 321 1 105 1 58 5 59 1 258 2 300 1 260 5 61 1 18 1 152 1 368 1 323 1 227 4 201 4 40 1 325 6 265 1 207 1 350 1 208 1 136 1 211 5 307 4 286 1 140 1 240 1 328 2 219 1 
48 1 1 2 247 1 249 1 99 1 146 2 296 1 102 1 335 4 149 1 59 1 58 4 258 2 260 1 61 1 18 1 201 2 264 1 265 1 207 1 208 1 350 1 307 2 211 2 358 1 73 2 313 1 271 1 79 2 316 4 321 1 323 1 368 1 227 2 325 4 231 2 136 1 286 1 240 1 328 2 
48 1 358 1 73 2 1 2 247 1 146 2 99 1 249 1 313 1 79 2 271 1 296 1 102 1 335 4 316 4 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 201 2 227 2 368 1 323 1 152 1 40 1 325 4 265 1 207 1 350 1 208 1 136 1 211 1 307 2 286 1 240 1 328 2 219 1 
48 1 358 1 73 2 1 2 247 1 146 2 99 1 249 1 313 1 79 2 271 1 296 1 102 1 335 4 316 4 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 201 2 227 2 368 1 323 1 152 1 40 1 325 4 265 1 207 1 350 1 208 1 136 1 211 1 307 2 286 1 240 1 328 2 219 1 
48 1 358 1 1 2 247 1 146 2 99 1 249 1 313 1 271 1 296 1 83 2 102 1 335 4 316 4 274 1 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 201 2 227 2 368 1 323 1 229 1 325 4 231 2 265 1 207 1 350 1 136 1 211 1 307 2 286 1 240 1 182 2 30 1 219 1 
48 1 358 1 73 2 1 2 247 1 146 2 99 1 249 1 313 1 79 2 271 1 296 1 102 1 335 5 316 4 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 152 1 368 1 323 1 227 3 201 3 40 1 325 5 265 1 207 1 350 1 208 1 136 1 211 1 307 3 286 1 140 1 240 1 328 2 219 1 
48 1 358 1 73 2 1 2 247 1 146 2 99 1 249 1 313 1 79 2 271 1 296 1 102 1 335 5 316 4 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 152 1 368 1 323 1 227 3 201 3 40 1 325 5 265 1 207 1 350 1 208 1 136 1 211 1 307 3 286 1 140 1 240 1 328 2 219 1 
48 1 358 1 1 2 247 1 146 2 99 1 249 1 313 1 271 1 296 1 83 2 102 1 335 4 316 4 274 1 149 1 321 1 58 4 59 1 258 2 260 1 61 1 18 1 201 2 227 2 368 1 323 1 264 1 325 4 231 2 265 1 207 1 350 1 136 1 211 1 307 2 286 1 240 1 182 2 
357 1 96 1 166 1 51 2 153 1 369 1 238 1 228 1 311 1 
357 2 220 2 96 2 50 2 186 1 245 1 51 4 190 4 78 3 162 1 166 1 334 1 337 1 253 6 35 1 36 1 199 8 278 1 369 2 280 11 126 1 173 2 175 1 112 1 113 1 25 1 93 1 94 2 238 2 26 11 29 3 311 2 217 14 
185 1 357 1 96 1 51 2 246 1 190 1 118 1 117 1 145 1 77 1 332 1 314 1 295 1 162 1 296 2 192 1 166 1 253 1 120 1 148 1 36 1 199 1 89 1 369 1 303 1 175 1 112 1 345 1 230 1 207 2 352 1 236 1 135 1 284 1 238 1 240 1 311 1 217 2 
185 1 96 3 50 2 186 2 51 6 246 3 190 7 332 1 295 2 296 3 192 3 334 4 196 1 253 10 8 2 199 10 261 1 106 2 22 1 66 1 303 2 112 1 343 2 113 4 346 2 207 3 306 2 212 1 26 7 311 3 217 20 357 3 220 8 312 1 117 2 118 2 77 1 314 2 162 1 166 3 120 1 36 1 126 3 369 3 89 2 280 7 173 3 174 1 373 1 175 2 230 1 94 2 135 3 236 2 180 1 237 1 238 3 284 2 240 1 
185 1 357 2 96 2 51 4 187 1 246 7 144 2 117 2 118 3 77 2 295 2 296 1 192 8 166 2 253 1 120 1 256 1 299 1 276 1 36 1 199 1 369 2 324 1 281 1 91 1 228 1 112 1 230 1 206 1 207 1 236 2 135 8 46 1 212 1 238 2 377 1 240 1 311 2 217 2 
185 1 357 1 220 1 96 1 50 1 186 1 51 2 190 1 119 1 162 1 296 1 166 1 334 1 253 2 199 1 280 1 369 1 126 1 173 1 341 1 131 1 230 1 207 1 94 1 26 1 238 1 240 1 311 1 217 3 
199 2 357 1 220 1 96 1 51 2 280 1 369 1 173 1 190 1 228 1 113 1 94 1 166 1 354 1 26 1 238 1 217 2 311 1 
357 1 0 1 220 1 96 1 186 1 51 2 280 1 369 1 126 1 190 1 228 1 166 1 334 1 253 2 26 1 238 1 217 2 311 1 
357 1 50 1 96 1 220 2 186 1 51 2 190 2 166 1 334 1 253 2 199 2 369 1 280 2 126 1 173 1 228 1 113 1 94 1 238 1 26 2 311 1 217 4 
199 2 357 1 220 1 96 1 51 2 280 1 369 1 173 1 190 1 113 1 94 1 166 1 354 1 26 1 238 1 276 1 217 2 311 1 
357 1 0 1 220 1 96 1 186 1 51 2 280 1 369 1 126 1 190 1 166 1 334 1 253 2 26 1 238 1 276 1 217 2 311 1 
357 1 50 1 96 1 220 2 186 1 51 2 190 2 166 1 334 1 253 2 276 1 199 2 369 1 280 2 126 1 173 1 113 1 94 1 238 1 26 2 311 1 217 4 
357 1 50 1 96 1 220 2 186 1 51 2 190 2 166 1 334 1 253 2 199 2 369 1 280 2 126 1 173 1 113 1 94 1 238 1 26 2 217 4 311 1 
357 1 96 1 51 2 246 1 117 1 118 1 77 1 314 1 295 1 296 1 192 1 166 1 253 1 36 1 199 1 89 1 369 1 303 1 175 1 112 1 343 1 207 1 236 1 135 1 284 1 238 1 217 2 311 1 
357 1 96 1 32 1 51 2 246 1 117 1 118 1 77 1 314 1 295 1 296 1 192 1 166 1 253 1 122 1 36 1 199 1 369 1 303 1 175 1 112 1 176 1 207 1 236 1 135 1 238 1 217 2 311 1 
357 1 50 1 96 1 220 2 186 1 51 2 190 2 162 1 166 1 334 1 253 2 199 2 369 1 280 2 126 1 173 1 113 1 94 1 238 1 26 2 311 1 217 4 
357 1 186 1 220 2 96 1 50 1 51 2 246 1 190 2 117 1 118 1 314 1 295 1 296 1 192 1 166 1 334 1 253 2 256 1 199 2 126 1 280 2 89 1 369 1 173 1 303 1 113 1 343 1 346 1 207 1 94 1 236 1 135 1 26 2 284 1 238 1 217 4 311 1 
185 1 357 1 186 1 220 1 96 1 50 1 51 2 190 1 119 1 162 1 296 1 166 1 253 1 199 2 126 1 369 1 280 1 173 1 113 1 131 1 230 1 207 1 94 1 238 1 26 1 240 1 355 1 311 1 217 3 
357 2 50 2 220 2 186 2 142 1 188 1 51 4 2 1 33 1 78 2 163 1 334 1 337 1 253 7 55 1 320 1 199 6 278 1 322 1 369 2 126 2 173 2 113 1 94 2 238 2 326 1 29 1 311 2 217 13 
357 3 220 4 50 3 186 2 142 1 51 6 33 4 78 2 163 2 334 2 253 12 337 2 366 1 55 2 86 1 10 1 320 1 199 14 322 1 126 2 369 3 173 3 111 1 113 2 375 1 24 1 94 3 235 2 137 1 238 3 326 1 29 2 311 3 217 26 
357 3 50 4 220 8 186 4 142 1 51 6 312 1 2 1 33 4 78 4 163 2 334 4 196 1 337 3 253 21 366 1 55 1 86 1 10 1 197 1 320 1 199 20 261 1 278 1 322 1 369 3 126 5 173 5 174 1 66 1 111 1 375 1 113 4 24 1 94 4 235 1 180 1 137 1 238 3 326 1 29 3 311 3 217 41 
357 4 50 4 220 7 186 3 142 1 51 8 312 1 2 1 33 4 78 4 163 2 334 4 196 1 337 3 253 18 366 1 55 1 86 1 10 1 197 1 320 1 199 20 261 1 278 1 322 1 369 4 126 4 173 5 174 1 66 1 111 1 375 1 113 3 24 1 94 4 235 2 180 1 137 1 238 4 326 1 29 3 311 4 217 38 
357 2 50 7 220 14 186 7 142 1 245 2 51 4 312 1 33 4 78 4 163 1 334 7 196 1 337 2 253 25 366 1 55 1 86 1 10 1 320 1 199 27 261 1 278 2 322 1 369 2 126 8 173 8 174 1 66 1 111 1 375 1 113 7 24 1 94 7 235 1 180 1 137 1 238 2 326 1 29 4 311 2 217 52 
348 1 170 1 103 1 222 1 38 1 74 1 275 1 76 1 378 1 191 1 
198 1 225 1 
170 1 38 1 168 1 202 1 275 1 76 1 205 1 378 1 191 1 
170 1 292 1 38 1 76 1 191 1 348 1 315 2 103 1 222 1 316 1 211 1 275 1 27 1 169 1 58 1 14 1 16 1 378 1 
170 1 292 1 38 1 76 1 191 1 348 1 315 2 103 1 222 1 316 1 211 1 275 1 27 1 169 1 58 1 14 1 16 1 378 1 
170 1 292 1 38 1 76 1 191 1 348 1 315 2 103 1 222 1 316 1 211 1 275 1 27 1 169 1 58 1 14 1 16 1 378 1 
178 1 92 1 69 1 
178 1 92 1 69 1 
291 1 100 1 
291 1 92 1 100 1 
42 1 213 1 
185 2 76 1 80 1 296 2 191 1 315 1 316 1 275 1 198 1 14 1 58 1 339 1 151 1 225 1 170 1 38 1 175 1 204 1 230 2 207 2 283 1 42 1 232 1 27 1 213 1 240 2 378 1 
178 1 69 1 
291 1 92 1 100 1 
357 1 96 1 51 2 246 2 144 2 117 1 118 1 161 1 295 1 162 1 296 2 192 2 166 1 253 1 36 1 199 1 369 1 112 1 206 1 207 2 236 1 135 2 238 1 377 1 156 1 28 1 139 1 287 1 240 2 311 1 217 2 
171 1 19 1 246 2 21 2 359 1 248 1 304 1 117 1 54 1 192 2 236 1 135 2 254 1 317 1 256 1 212 1 319 1 216 1 309 1 
171 1 246 1 21 2 359 1 248 1 304 1 117 1 54 1 192 1 195 1 135 1 236 1 254 1 212 1 319 1 216 1 309 1 
37 1 187 1 246 1 293 1 324 1 117 1 118 1 77 1 295 1 192 1 236 1 135 1 317 1 319 1 
171 1 19 1 246 1 21 2 359 1 248 1 304 1 117 1 54 1 192 1 236 1 135 1 254 1 317 1 212 1 319 1 216 1 309 1 
200 1 
153 1 
48 1 73 1 1 1 247 1 313 1 271 1 79 1 102 1 335 1 316 1 58 1 260 1 61 1 231 1 208 1 211 2 328 1 
48 3 244 1 50 2 186 2 1 3 246 1 97 1 247 8 295 1 192 1 297 3 102 3 335 5 336 6 8 2 57 2 58 5 301 2 260 1 61 3 107 2 263 6 303 1 347 2 154 1 211 7 308 2 270 2 117 1 118 6 77 1 313 7 271 3 316 5 125 2 126 2 173 2 374 1 231 12 94 2 236 2 135 1 136 2 179 1 328 6 
48 2 50 2 186 2 1 1 143 1 158 1 247 8 270 1 313 5 78 1 271 2 102 2 335 1 336 5 316 1 337 1 366 1 10 1 58 1 259 1 260 2 61 2 126 2 173 2 263 5 111 1 374 1 375 1 231 6 24 1 94 2 376 2 211 5 29 1 328 3 
48 1 185 1 267 1 158 1 247 2 52 1 313 2 271 1 296 1 102 1 196 1 316 1 9 1 58 1 61 1 323 1 152 1 126 1 173 2 174 1 66 1 128 1 131 1 230 1 207 1 376 2 240 1 288 1 
48 1 260 1 61 1 340 1 247 1 313 1 271 1 102 1 211 1 11 1 
50 2 186 2 126 2 173 2 247 5 263 5 313 5 231 10 94 2 336 5 211 5 8 1 328 5 
260 1 335 1 1 1 316 1 211 1 58 1 
48 1 1 2 187 1 246 4 247 2 270 2 117 1 118 1 77 2 313 2 295 1 271 2 192 4 102 2 335 4 316 3 58 3 61 2 367 2 108 1 324 1 374 2 344 1 236 1 135 4 210 1 45 1 115 1 241 1 
185 2 357 1 96 1 51 2 246 1 117 1 118 1 77 1 314 1 295 1 296 3 192 1 166 1 253 1 89 1 369 1 303 1 175 1 112 1 131 2 343 1 230 2 207 3 135 1 236 1 238 1 284 1 71 1 240 2 288 1 217 1 311 1 
48 1 260 1 61 1 247 1 263 1 270 1 313 1 374 1 271 1 231 2 102 1 211 2 328 1 
170 1 305 1 378 1 
170 1 305 1 378 1 
170 1 272 1 103 1 213 1 378 1 
170 1 305 1 378 1 
170 1 353 1 378 1 
170 1 353 1 378 1 
170 1 353 1 378 1 
170 1 378 1 
38 1 275 1 
199 4 357 2 261 1 220 3 51 4 126 1 369 2 173 1 174 1 312 1 66 1 113 1 235 1 334 2 196 1 253 4 180 1 238 2 217 8 311 2 
153 1 
199 2 357 1 186 1 220 2 50 1 51 2 126 1 63 1 369 1 173 1 113 1 94 1 334 1 253 2 238 1 311 1 217 4 
199 3 278 1 186 1 50 1 220 2 126 1 173 1 78 2 113 1 94 1 334 1 337 1 253 4 29 1 217 7 
357 2 220 9 50 2 186 2 245 1 51 4 312 1 78 2 334 5 194 1 196 2 253 12 35 1 199 11 261 1 278 1 126 3 369 2 173 3 174 1 66 2 113 4 94 2 235 2 180 1 238 2 29 2 217 23 311 2 
253 1 78 1 217 1 
199 1 29 1 217 1 
199 3 357 1 50 1 220 3 186 1 51 2 369 1 63 1 126 1 173 1 113 1 94 1 334 2 253 3 238 1 8 1 311 1 217 6 
357 1 50 2 186 2 220 2 51 2 78 1 334 1 253 6 337 1 366 1 10 1 199 6 322 1 369 1 126 2 173 2 111 1 113 1 375 1 24 1 94 2 238 1 29 1 217 12 311 1 
199 3 220 2 126 1 173 1 174 1 66 1 113 1 334 1 196 1 253 3 217 6 
199 1 357 1 261 1 220 2 51 2 369 1 312 1 66 1 113 1 235 1 334 1 194 1 196 1 253 2 238 1 217 3 311 1 
199 5 357 1 220 5 322 1 51 2 369 1 126 2 173 2 174 1 66 2 128 1 113 2 334 3 196 2 253 5 238 1 311 1 217 10 
199 2 357 1 220 1 322 1 51 2 369 1 173 1 113 1 94 1 238 1 311 1 217 2 
199 2 357 1 186 1 220 2 50 1 322 1 51 2 126 1 369 1 173 1 113 1 94 1 334 1 253 2 238 1 311 1 217 4 
199 1 357 3 220 2 322 1 51 6 369 3 66 1 2 1 113 1 235 1 194 1 334 1 196 1 253 2 238 3 217 3 311 3 
357 5 50 3 220 12 186 3 51 10 312 1 2 1 78 4 362 1 147 1 194 1 334 7 196 3 253 18 337 1 199 16 261 1 278 1 322 1 63 1 369 5 126 5 173 5 174 2 66 3 113 5 94 3 235 2 134 1 180 1 238 5 29 3 311 5 217 34 
357 1 220 2 51 2 312 1 78 1 334 2 196 1 253 4 337 1 199 4 261 1 322 1 126 1 369 1 173 1 174 1 66 1 111 1 180 1 238 1 29 1 217 8 311 1 
357 2 50 1 220 3 51 4 312 1 78 2 334 2 196 1 253 5 337 1 199 6 261 1 278 1 322 1 126 1 369 2 63 1 173 2 174 1 66 1 111 1 113 1 94 1 180 1 238 2 29 1 217 11 311 2 
357 3 50 2 186 2 220 4 51 6 312 1 78 1 334 3 196 1 253 10 337 1 366 1 10 1 199 9 261 1 322 1 63 1 369 3 126 3 173 3 174 1 66 1 111 1 113 1 375 1 24 1 94 2 235 1 180 1 238 3 29 1 217 19 311 3 
357 3 50 2 186 1 220 5 51 6 312 1 78 1 334 3 196 1 253 7 337 1 366 1 10 1 199 10 261 1 322 1 63 1 369 3 126 2 173 3 174 1 66 1 111 1 113 2 375 1 24 1 94 2 235 1 180 1 238 3 29 1 217 17 311 3 
357 1 220 2 51 2 312 1 78 1 334 2 196 1 253 4 337 1 199 4 261 1 322 1 126 1 369 1 173 1 174 1 66 1 111 1 180 1 238 1 29 1 217 8 311 1 
357 1 50 2 186 2 220 2 51 2 78 1 334 1 253 6 337 1 366 1 10 1 199 6 322 1 369 1 126 2 173 2 111 1 113 1 375 1 24 1 94 2 238 1 29 1 217 12 311 1 
357 4 50 2 186 1 220 5 51 8 312 1 78 1 334 3 196 1 253 8 337 1 366 1 10 1 199 10 261 1 322 1 63 1 369 4 126 2 173 3 174 1 66 1 111 1 113 2 375 1 24 1 94 2 235 2 180 1 238 4 29 1 217 18 311 4 
357 4 50 3 186 2 220 6 51 8 2 1 78 1 334 3 253 7 337 1 366 1 10 1 199 9 322 1 369 4 126 2 173 3 111 1 113 3 375 1 24 1 94 3 235 2 238 4 29 1 217 16 311 4 
199 3 261 1 220 6 126 1 173 1 312 2 174 1 66 3 113 3 334 3 196 3 253 4 217 7 
357 4 50 2 186 1 220 4 51 8 312 1 2 1 78 1 334 3 196 1 253 8 337 1 366 1 10 1 199 10 261 1 322 1 369 4 126 2 173 3 174 1 66 1 111 1 113 1 375 1 24 1 94 2 235 2 180 1 238 4 29 1 217 18 311 4 
368 1 56 1 175 1 240 1 101 1 296 1 207 1 
368 1 129 1 175 1 133 1 101 1 251 1 207 1 296 1 266 1 56 1 240 1 242 1 
192 1 135 1 153 1 246 1 77 1 
185 1 246 1 303 1 118 1 117 1 77 1 175 1 314 1 295 1 230 1 207 2 296 2 192 1 236 1 135 1 120 1 284 1 240 1 
185 1 246 1 117 1 118 3 99 1 314 1 295 2 296 2 34 1 4 1 192 1 120 1 59 1 367 1 323 1 303 2 175 1 230 2 207 2 135 1 236 1 284 1 240 2 
185 1 246 2 117 1 118 3 99 1 314 1 295 2 296 2 34 1 4 1 192 2 120 1 257 1 59 1 367 1 323 1 303 2 175 1 176 1 230 2 207 2 135 2 236 1 240 2 
260 1 125 1 367 1 246 3 303 1 118 4 117 1 77 1 295 1 4 1 34 1 192 3 297 1 236 1 135 3 335 1 136 1 316 2 211 1 257 1 60 1 58 2 224 1 
260 1 125 1 367 1 107 1 246 3 303 1 118 4 117 1 77 1 295 1 4 1 34 1 192 3 297 1 236 1 135 3 335 1 136 1 316 2 211 1 257 1 58 2 
192 1 236 1 135 1 246 1 46 1 117 1 
246 6 144 1 281 1 91 1 303 1 118 3 117 2 77 2 130 1 23 1 295 2 206 1 70 1 192 7 135 7 236 3 179 1 256 1 46 1 212 1 299 1 
185 1 357 2 220 2 96 2 51 4 246 1 312 1 190 1 118 1 117 1 314 1 295 1 162 1 296 2 192 1 166 2 334 2 196 1 253 3 120 1 256 1 199 3 261 1 280 1 126 1 369 2 89 1 173 1 174 1 66 1 303 1 175 2 343 1 230 1 346 1 207 2 236 1 135 1 306 1 26 1 180 1 238 2 284 1 156 1 240 1 217 6 311 2 
48 2 1 1 246 1 247 1 118 2 313 1 77 1 271 2 80 1 192 1 102 2 297 1 335 2 316 3 57 1 11 1 58 3 301 1 260 1 61 2 125 1 340 1 107 1 347 1 135 1 136 1 211 1 241 1 
125 1 246 2 97 1 303 1 118 2 117 1 295 1 192 2 135 2 236 2 179 1 256 1 46 1 
187 1 246 4 324 1 118 1 117 1 77 1 295 1 192 4 236 1 135 4 256 1 257 1 88 1 
367 1 246 2 22 1 303 1 118 1 117 1 23 1 295 1 70 1 192 2 135 2 236 2 44 1 121 1 
192 1 236 1 135 1 246 1 254 1 21 1 304 1 117 1 77 1 54 1 
246 2 118 1 117 1 295 1 206 1 192 2 135 2 236 1 256 1 212 1 287 1 
367 1 187 1 246 4 324 1 281 1 118 3 117 2 77 1 295 2 206 1 192 5 135 5 236 2 256 1 299 1 88 1 
367 1 187 1 246 4 109 1 324 1 281 1 118 3 117 2 77 1 295 2 206 1 192 5 135 5 236 2 256 1 88 1 
185 1 246 1 303 1 118 1 117 1 77 1 175 1 314 1 176 1 295 1 230 1 207 2 296 2 192 1 236 1 135 1 120 1 240 1 
367 1 246 1 303 1 118 1 117 1 130 1 23 1 295 1 70 1 192 1 135 1 236 2 179 1 
53 1 161 1 207 1 296 1 234 1 139 1 28 1 240 1 289 1 
234 1 181 1 15 1 
234 1 53 1 175 1 3 1 289 1 
260 1 18 1 323 1 20 1 99 1 53 2 175 1 80 1 3 2 250 1 234 1 136 1 316 2 211 1 181 1 59 1 58 2 15 1 289 2 
153 1 
243 1 138 1 215 1 157 1 13 1 82 1 41 1 
138 1 361 1 218 1 
243 1 41 1 82 1 252 1 318 1 104 2 338 1 138 3 215 1 157 3 13 1 150 1 
243 1 138 2 75 1 239 1 215 1 157 2 13 1 82 1 41 1 
243 1 177 1 302 1 254 1 21 1 248 1 138 1 157 1 13 1 150 1 41 1 
243 1 138 1 215 1 157 1 13 1 150 1 41 1 
243 1 138 1 215 2 157 1 150 1 82 1 41 1 
243 2 221 1 65 1 282 1 41 2 138 2 215 1 157 2 13 1 150 1 
243 1 75 2 82 1 41 1 351 1 177 1 298 1 114 1 138 3 215 1 157 3 150 1 13 2 
243 1 21 2 248 1 304 1 75 1 132 1 82 1 41 1 254 1 138 2 215 1 157 2 13 1 150 1 216 1 
243 2 75 2 203 1 82 1 41 2 177 1 298 1 138 4 239 1 215 1 157 4 150 1 13 2 
243 1 138 1 215 1 157 1 13 1 150 1 82 1 41 1 
243 1 49 1 75 2 82 2 41 1 177 1 252 1 298 1 104 1 318 1 138 4 215 2 157 4 13 3 
243 1 141 1 39 1 75 1 41 1 82 1 233 1 138 2 215 1 157 2 13 1 150 1 
243 1 41 1 82 1 165 1 252 1 318 2 104 2 138 3 215 1 157 3 13 1 150 1 
84 2 13 2 327 1 5 1 
243 1 138 1 157 1 150 1 184 1 41 1 
243 1 114 1 138 2 75 1 215 1 157 2 13 1 150 1 82 1 41 1 
268 1 
243 1 138 1 215 1 157 1 13 1 150 1 82 1 41 1 
243 1 114 1 104 1 138 3 75 1 215 1 157 3 13 1 150 1 82 1 41 1 
49 1 177 1 298 1 13 1 
215 1 13 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) (9,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (9,266) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) (9,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (14,44,92,259) (14,44,92,259) (14,44,92,259) 45 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
293 1 92 1 14 1 45 1 259 1 
272 1 247 1 261 1 
197 2 170 1 247 1 
82 2 132 2 236 1 322 1 301 2 8 2 117 2 24 2 
82 2 0 1 1 1 252 1 2 1 254 1 256 2 297 1 301 3 8 3 258 1 260 1 49 1 132 2 311 1 174 1 216 1 51 1 93 1 185 1 58 2 100 2 101 1 322 1 281 1 24 2 149 1 232 2 327 1 31 1 236 1 153 1 113 1 35 1 244 1 117 2 290 2 
82 1 328 1 132 1 322 1 331 1 228 1 301 1 8 1 117 1 24 1 
82 1 57 1 188 1 301 1 228 1 66 1 8 1 261 1 26 1 76 1 215 1 332 1 114 1 247 1 
82 1 57 1 188 1 301 1 228 1 66 2 8 1 24 1 261 1 26 1 132 1 76 1 114 2 117 1 247 1 
157 1 114 1 66 1 144 1 25 1 
157 1 39 1 114 2 66 2 316 1 247 1 261 1 25 1 
157 1 114 1 66 1 
82 1 322 1 228 1 66 1 301 1 8 1 24 1 25 1 328 1 309 1 132 1 331 1 114 1 117 1 
247 1 
157 1 56 1 39 1 114 2 66 2 247 1 261 1 25 1 
81 2 157 2 121 1 39 1 66 5 207 1 164 1 261 1 25 2 169 1 50 1 265 1 12 2 114 5 15 1 317 1 180 1 247 1 291 2 
236 1 272 1 
82 2 205 1 301 2 8 2 257 1 24 1 132 1 236 2 117 1 
162 1 203 1 255 1 
185 1 58 1 100 1 101 1 2 1 301 1 8 1 258 1 327 1 151 1 311 1 236 1 153 1 216 1 35 1 290 1 
82 1 185 1 58 1 101 1 100 1 2 1 203 1 301 2 8 2 258 1 24 1 27 1 327 1 311 1 153 1 269 1 216 1 35 1 117 1 290 1 
82 5 204 1 6 1 301 5 8 5 257 1 24 4 168 1 27 1 132 1 236 1 215 1 269 2 117 4 
82 2 328 1 63 1 228 1 301 2 8 2 117 2 24 2 
82 3 132 1 236 1 269 1 301 3 8 3 117 3 24 3 
82 1 328 1 228 1 301 1 8 1 117 1 24 1 
82 1 132 1 205 1 228 1 301 1 8 1 257 1 117 1 24 1 
82 3 158 1 1 1 252 1 2 1 254 1 256 1 297 1 301 4 8 4 258 1 257 1 311 1 132 2 174 1 269 1 216 1 90 1 93 1 185 1 57 1 58 1 101 1 100 1 188 1 322 1 281 1 228 1 66 1 24 3 149 1 232 2 26 1 27 1 327 1 236 1 153 1 76 1 113 1 114 1 35 1 244 1 117 3 290 1 
82 2 236 1 215 1 269 1 6 1 301 2 8 2 117 1 24 1 
82 3 158 1 57 1 188 1 66 1 228 1 301 3 8 3 257 1 24 3 27 1 26 1 132 1 234 1 76 1 269 2 114 1 117 3 247 1 
82 2 203 1 255 1 301 2 8 2 257 1 24 2 132 1 269 1 117 2 
185 1 58 1 100 1 101 1 2 1 301 1 8 1 258 1 327 1 311 1 236 1 153 1 216 1 35 1 290 1 
185 1 58 1 100 1 2 1 228 1 301 1 8 1 258 1 284 1 327 1 150 1 236 1 153 1 216 1 35 1 52 1 290 1 
162 2 252 1 254 1 203 2 5 1 65 1 255 2 256 4 297 1 281 1 226 1 129 1 23 1 149 2 232 2 326 1 49 2 75 1 113 1 240 1 244 1 334 1 
82 1 188 1 63 1 228 1 301 1 8 1 117 1 24 1 
233 1 133 1 
233 1 133 1 
73 1 91 1 
73 1 91 1 
73 1 91 1 
233 1 7 1 133 1 
233 1 7 1 133 1 
233 1 175 1 133 1 
233 2 73 1 177 1 133 2 68 1 91 1 
233 1 7 1 133 1 
233 1 133 1 67 1 
233 1 133 1 67 1 
233 1 133 1 67 1 
82 2 43 1 301 2 66 1 323 1 8 2 125 1 24 2 233 1 190 1 110 1 171 1 312 1 236 1 175 1 268 1 114 1 333 1 133 1 289 1 318 1 117 2 182 1 335 1 
140 1 163 1 3 1 42 2 323 2 66 2 72 1 233 2 211 1 110 1 268 2 237 1 177 1 333 2 133 2 114 2 247 1 182 2 335 3 
210 1 10 1 239 1 
210 1 10 1 17 1 
111 1 85 1 10 3 178 1 239 2 17 1 
111 1 10 2 178 1 239 1 273 1 17 1 
111 1 10 2 239 1 178 2 17 1 
197 3 81 1 157 1 161 1 121 1 39 1 295 1 5 1 207 3 125 1 261 1 170 1 12 1 135 1 15 2 19 2 141 1 66 5 23 1 25 4 286 1 190 1 28 1 30 2 329 2 330 1 75 1 240 1 114 5 289 1 291 1 247 2 
197 9 81 2 157 6 121 1 294 1 39 1 5 3 164 1 207 8 125 4 261 1 306 1 170 3 270 1 12 2 135 2 15 6 19 6 321 1 61 1 227 5 66 9 144 5 23 3 25 7 286 3 28 1 30 6 330 2 75 3 240 3 114 9 195 1 247 5 291 2 
81 1 197 4 161 1 295 1 5 1 164 1 207 3 125 1 261 1 170 2 12 1 135 1 15 2 19 2 66 3 23 1 25 2 286 1 329 1 30 2 330 1 75 1 240 1 114 3 247 3 291 1 
197 7 81 1 161 1 295 1 5 2 164 1 207 5 125 2 261 1 170 3 270 1 12 1 135 1 15 4 19 4 61 1 66 4 23 2 25 3 286 2 30 4 329 2 330 1 75 2 240 2 114 4 195 1 247 4 291 1 
2 1 272 1 245 1 
2 1 229 1 
275 1 
185 1 2 1 153 1 
2 1 231 1 
2 1 153 1 
185 1 2 3 153 1 223 1 245 2 118 1 
139 1 99 2 98 1 220 2 250 1 60 1 296 1 5 1 256 7 124 1 86 1 23 1 149 3 285 1 49 4 172 1 243 3 
139 1 99 2 98 1 220 2 250 1 60 1 296 1 5 1 256 7 124 1 86 1 23 1 149 3 285 1 49 4 172 1 243 3 
139 1 99 2 98 1 220 2 250 1 60 1 296 1 5 1 256 7 124 1 86 1 23 1 149 3 285 1 189 1 49 4 172 1 243 3 
160 1 250 2 252 2 296 2 124 1 297 2 256 37 5 5 86 2 46 4 167 1 307 1 87 4 49 19 172 1 217 2 53 1 139 1 277 1 98 1 219 1 99 3 220 3 60 5 106 1 23 5 232 4 149 18 285 2 286 4 75 4 113 2 240 4 243 8 244 2 36 1 
250 1 252 2 296 1 5 1 297 2 256 9 86 1 263 1 49 5 172 1 217 1 139 1 99 2 98 1 220 3 60 1 279 1 23 1 232 4 149 4 285 1 113 2 243 4 244 2 
293 1 92 1 14 1 45 1 259 1 
293 1 9 1 92 1 14 1 259 1 
293 1 266 1 44 1 259 1 
293 1 9 1 92 1 14 1 259 1 
293 1 92 1 14 1 45 1 259 1 
145 1 
81 1 82 1 157 6 84 1 2 1 8 1 261 1 170 2 267 2 12 1 176 1 271 1 15 2 181 1 100 2 102 1 188 1 22 1 104 2 26 1 29 1 33 2 114 5 35 2 291 1 290 2 197 2 292 2 119 2 201 1 121 1 39 3 301 1 207 2 127 1 209 2 308 1 215 1 314 4 216 1 134 1 58 2 57 1 59 2 66 5 228 1 146 1 147 1 327 1 330 1 153 1 76 1 332 1 242 1 247 2 
82 1 157 2 84 1 39 1 301 1 8 1 215 1 176 1 314 2 56 1 57 1 102 1 188 1 66 3 228 1 146 1 26 1 29 1 76 1 33 1 332 1 114 3 
82 1 157 1 84 1 39 1 301 1 8 1 261 1 267 1 215 1 176 1 314 3 56 1 57 1 102 1 188 1 66 3 228 1 146 1 26 1 29 1 76 1 332 1 114 3 247 1 
82 1 292 1 157 2 84 1 39 1 301 1 8 1 261 1 267 1 215 1 176 1 314 3 56 1 57 1 102 1 188 1 66 3 228 1 146 1 26 1 29 1 76 1 33 1 332 1 114 3 247 1 
82 1 81 1 157 7 84 1 8 1 261 5 262 1 170 2 267 4 176 1 12 1 15 1 184 1 102 1 188 1 22 1 103 1 104 2 26 1 29 1 33 4 114 5 291 1 292 4 119 2 201 1 121 1 39 3 298 1 301 1 207 1 209 2 314 6 215 1 56 1 57 1 320 1 59 2 228 1 66 5 146 1 76 1 332 1 247 5 
197 2 81 1 82 1 292 2 119 2 157 4 201 1 84 1 121 1 39 2 301 1 207 1 8 1 209 2 261 1 170 2 267 2 176 1 12 1 215 1 314 4 15 1 57 1 59 2 102 1 188 1 66 4 228 1 22 1 104 2 146 1 26 1 29 1 33 2 76 1 332 1 114 4 242 1 247 2 291 1 
82 1 81 1 292 2 119 2 157 4 201 1 84 1 121 1 39 2 298 1 301 1 207 1 8 1 209 2 261 1 170 2 267 2 215 1 176 1 314 4 12 1 15 1 57 1 320 1 59 2 102 1 188 1 22 1 66 4 228 1 104 2 103 1 146 1 26 1 29 1 33 2 76 1 332 1 114 4 247 1 291 1 
82 1 81 1 292 2 119 2 157 4 201 1 84 1 121 1 39 2 298 1 301 1 207 1 8 1 209 2 261 1 170 2 267 2 215 1 176 1 314 4 12 1 15 1 57 1 320 1 59 2 102 1 188 1 22 1 66 4 228 1 104 2 103 1 146 1 26 1 29 1 33 2 76 1 332 1 114 4 247 1 291 1 
197 2 82 1 81 1 292 2 119 2 157 4 201 1 84 1 121 1 39 2 123 1 301 1 207 1 8 1 302 2 209 2 261 1 267 2 215 1 176 1 314 4 12 1 15 1 138 2 20 1 57 1 102 1 188 1 66 4 228 1 103 1 146 1 148 1 26 1 29 1 33 2 76 1 332 1 114 4 247 1 291 1 
81 1 82 1 119 2 292 3 157 5 201 1 121 1 84 1 39 2 298 1 301 1 207 1 8 1 209 2 261 1 262 1 170 2 267 3 12 1 215 1 176 1 314 5 15 1 320 1 57 1 59 2 102 1 188 1 22 1 66 4 228 1 104 2 103 1 146 1 26 1 29 1 76 1 33 3 332 1 114 4 247 1 291 1 
81 1 82 1 119 2 292 3 157 5 201 1 121 1 84 1 39 2 298 1 301 1 207 1 8 1 209 2 261 1 262 1 170 2 267 3 12 1 215 1 176 1 314 5 15 1 320 1 57 1 59 2 102 1 188 1 22 1 66 4 228 1 104 2 103 1 146 1 26 1 29 1 76 1 33 3 332 1 114 4 247 1 291 1 
197 2 81 1 82 1 292 2 119 2 157 4 201 1 84 1 121 1 39 2 301 1 207 1 8 1 302 2 209 2 261 1 267 2 176 1 12 1 215 1 314 4 15 1 138 2 57 1 102 1 188 1 66 4 228 1 146 1 148 1 26 1 29 1 33 2 76 1 332 1 114 4 242 1 247 1 291 1 
162 1 250 1 252 1 254 1 203 1 255 1 297 1 5 1 256 6 129 1 49 3 172 1 272 1 139 1 98 1 99 1 220 2 281 1 23 1 232 2 149 3 285 1 236 2 113 1 243 2 244 1 
162 11 252 2 254 2 203 11 297 2 256 14 5 2 255 4 46 3 167 1 307 1 87 3 49 8 174 1 51 1 54 1 276 1 60 1 281 1 283 1 23 1 149 6 232 4 286 2 236 1 75 1 113 2 240 2 243 1 244 2 116 1 36 1 
82 1 2 1 252 1 254 1 255 1 297 1 256 2 301 2 8 2 258 1 303 1 49 1 311 1 264 1 173 1 174 1 269 1 216 1 51 1 185 1 58 1 101 1 100 1 281 1 283 1 24 1 232 2 149 1 27 1 327 1 151 1 236 1 153 1 113 1 35 1 244 1 117 1 290 1 
82 1 162 7 250 1 252 3 2 2 254 3 256 20 255 7 5 3 8 3 258 2 172 1 174 1 269 1 93 2 185 2 99 1 98 1 100 3 101 2 281 3 23 3 283 1 282 2 24 1 285 1 27 1 286 2 192 2 113 3 35 1 117 1 196 1 290 3 38 1 203 7 297 3 301 3 208 1 304 1 49 10 311 2 216 2 51 1 139 1 58 3 220 2 60 4 149 10 232 6 327 2 236 2 74 2 153 2 75 2 240 2 155 2 243 6 244 3 
82 1 37 1 251 1 2 3 252 2 40 1 254 2 297 2 256 2 301 1 206 1 8 1 127 1 129 1 49 1 131 1 174 1 269 1 216 2 51 1 181 1 95 1 58 7 100 8 281 2 105 1 24 1 232 4 149 1 327 2 235 1 31 2 153 2 113 2 35 2 244 2 117 1 196 1 290 8 
82 1 162 1 252 1 254 1 203 1 255 1 297 1 5 1 256 3 301 1 8 1 257 1 49 1 132 1 18 1 281 1 283 1 23 1 24 1 232 2 149 2 286 1 75 1 113 1 240 1 244 1 117 1 
162 1 60 1 252 1 254 1 203 1 255 1 256 2 297 1 65 1 5 1 281 1 129 1 232 2 49 2 113 1 240 1 243 1 244 1 
162 1 252 1 254 1 203 1 255 1 256 2 297 1 281 1 129 1 23 1 232 2 149 2 326 1 75 1 113 1 244 1 
162 2 60 1 252 1 254 1 203 2 255 2 256 4 297 1 5 1 281 1 23 1 129 1 149 2 232 2 286 1 49 2 75 1 113 1 240 1 243 1 244 1 
162 1 60 1 252 1 254 1 203 1 255 1 256 2 297 1 65 1 5 1 206 1 281 1 232 2 49 2 113 1 240 1 243 1 244 1 
162 1 252 1 254 1 203 1 255 1 256 2 297 1 206 1 281 1 23 1 232 2 149 2 326 1 75 1 113 1 244 1 
162 2 252 1 254 1 203 2 255 2 256 4 297 1 5 1 206 1 281 1 23 1 149 2 232 2 286 1 49 2 75 1 113 1 240 1 244 1 
162 2 60 1 252 1 254 1 203 2 255 2 297 1 5 1 256 4 281 1 23 1 149 2 232 2 286 1 49 2 75 1 113 1 240 1 243 1 244 1 
2 1 252 1 254 1 256 2 297 1 301 1 8 1 258 1 49 1 311 1 174 1 216 1 51 1 93 1 185 1 58 1 101 1 100 1 281 1 232 2 149 1 327 1 236 1 153 1 113 1 35 1 244 1 290 1 
2 1 252 1 254 1 256 1 297 1 301 1 8 1 258 1 166 1 174 1 216 1 52 1 185 1 58 1 100 1 228 1 281 1 232 2 149 1 284 1 327 1 150 1 236 1 153 1 113 1 35 1 244 1 290 1 
162 2 60 1 252 1 254 1 203 2 255 2 256 4 297 1 5 1 281 1 23 1 283 1 149 2 232 2 286 1 49 2 75 1 113 1 240 1 243 1 244 1 
162 2 251 1 2 1 252 1 254 1 203 2 255 2 256 4 5 1 297 1 301 1 8 1 258 1 49 2 311 1 216 1 93 1 185 1 58 1 101 1 100 1 60 1 281 1 23 1 149 2 232 2 286 1 327 1 75 1 74 1 153 1 113 1 240 1 243 1 244 1 290 1 
82 1 199 1 162 1 252 1 254 1 203 1 297 1 5 1 256 3 255 1 301 1 8 1 257 1 49 2 132 1 60 1 281 1 23 1 283 1 24 1 149 1 232 2 286 1 75 1 113 1 240 1 243 1 244 1 117 1 
249 1 250 1 252 4 5 9 256 57 167 2 263 1 87 4 172 1 179 1 274 4 16 1 98 1 99 1 21 1 23 8 286 8 285 1 109 1 113 4 34 1 36 2 194 1 297 4 126 1 46 4 47 1 307 2 49 30 130 1 217 2 139 1 220 2 60 9 69 1 324 1 149 27 232 8 75 7 154 2 240 8 243 11 156 1 244 4 
249 1 252 3 297 3 256 26 5 3 126 1 46 2 47 1 263 1 87 2 130 1 49 14 217 2 179 2 16 1 274 4 220 1 60 2 21 2 324 1 23 2 149 12 232 6 286 3 109 1 75 2 154 1 113 3 34 1 240 3 156 1 243 3 244 3 36 2 
249 1 250 2 252 4 5 9 256 64 167 2 263 1 87 5 172 2 179 2 274 4 16 1 98 2 99 2 21 1 23 9 286 7 285 2 109 1 113 4 34 1 36 3 297 4 126 1 46 5 47 1 307 2 49 33 130 1 217 2 139 2 220 3 60 9 69 1 324 1 149 31 232 8 325 1 75 7 154 1 240 7 243 12 156 1 244 4 
249 1 250 1 252 4 297 4 256 53 5 8 126 1 47 1 46 4 167 2 263 1 307 2 87 4 130 1 49 28 172 1 217 2 179 1 16 1 274 4 139 1 99 1 98 1 220 2 21 1 60 7 69 1 324 1 23 7 232 8 149 25 285 1 286 7 109 1 75 6 154 1 113 4 34 1 240 7 156 1 243 9 244 4 36 2 
249 1 250 1 252 2 297 2 256 52 5 8 126 1 47 1 46 4 167 2 263 1 307 2 87 4 130 1 49 27 172 1 217 1 179 1 16 1 274 4 139 1 99 1 98 1 220 1 21 1 60 7 324 1 23 8 232 4 149 25 285 1 286 7 109 1 75 7 154 1 113 2 34 1 240 7 156 1 243 8 244 2 36 2 
233 1 211 1 163 1 268 1 177 1 323 1 133 1 333 1 115 1 182 1 
171 1 175 1 
183 1 233 1 253 1 268 1 323 1 133 1 333 1 70 1 182 1 
112 1 7 1 
55 1 68 1 67 1 
140 1 163 1 3 1 42 1 66 1 323 1 233 1 211 1 110 1 268 1 237 1 177 1 114 1 333 1 133 1 247 1 182 1 335 2 
140 1 163 1 3 1 42 1 66 1 323 1 233 1 211 1 110 1 268 1 237 1 177 1 114 1 333 1 133 1 247 1 182 1 335 2 
140 1 163 1 3 1 42 1 66 1 323 1 233 1 211 1 110 1 268 1 237 1 177 1 114 1 333 1 133 1 247 1 182 1 335 2 
112 1 7 1 68 1 
112 1 7 1 68 1 
55 1 67 1 
55 1 68 1 67 1 
312 1 318 1 
82 2 42 1 43 1 301 2 8 2 125 1 48 1 171 1 312 1 175 1 268 1 133 1 318 1 182 1 66 1 323 1 24 2 25 1 233 1 190 1 236 1 237 1 114 1 333 1 289 1 117 2 335 1 
82 2 37 1 2 1 252 1 254 1 297 1 256 2 300 1 301 2 8 2 49 1 174 1 216 1 51 1 136 1 95 1 58 2 100 2 62 1 225 1 224 1 281 1 283 1 232 2 149 1 327 1 31 2 153 1 113 1 244 1 290 2 
200 1 58 2 100 2 251 1 187 1 85 1 299 1 210 1 327 1 213 1 10 2 152 1 239 1 216 1 89 1 17 1 137 1 196 1 290 2 
200 1 58 1 100 1 187 1 85 1 210 1 327 1 213 1 10 2 239 1 216 1 89 1 17 1 137 1 196 1 246 1 290 1 
248 1 58 1 100 1 2 1 278 1 127 1 327 1 213 1 153 1 152 1 216 1 35 1 290 1 181 1 
200 1 58 1 100 1 187 1 85 1 299 1 210 1 327 1 213 1 10 2 152 1 239 1 216 1 89 1 17 1 137 1 196 1 290 1 
96 1 
50 1 272 1 207 1 15 1 317 1 247 1 261 1 
81 1 197 1 157 1 121 1 39 1 207 1 261 1 170 1 12 1 15 1 59 1 22 1 66 1 104 1 114 1 291 1 247 2 
81 4 157 5 251 1 2 10 5 2 261 2 170 6 12 4 15 8 19 6 185 3 100 3 280 1 107 2 23 2 108 1 286 2 288 2 30 6 192 2 35 1 114 5 193 2 291 4 290 3 197 12 121 4 39 3 202 2 207 9 50 1 214 1 216 4 134 1 317 1 218 2 58 3 222 1 223 1 229 3 66 5 231 2 327 3 330 2 153 3 75 2 76 2 238 1 240 2 78 2 80 2 245 2 247 8 
197 6 81 2 249 1 157 1 121 2 39 1 5 2 207 8 126 1 46 1 47 1 261 2 170 3 87 1 130 1 212 1 12 2 134 1 15 5 319 1 94 2 19 5 218 1 66 1 23 2 286 2 30 5 330 1 75 2 240 2 114 1 156 1 36 1 291 2 247 5 
81 1 82 1 250 1 121 1 5 2 301 1 8 1 207 2 305 1 309 1 132 1 12 1 15 2 94 2 139 1 218 1 320 1 322 1 228 1 66 1 23 1 24 1 285 1 328 1 331 1 114 1 117 1 291 1 
81 1 121 1 207 1 261 1 50 1 12 1 15 1 317 1 291 1 247 1 
19 5 197 10 218 1 5 2 207 5 23 2 286 2 170 5 30 5 75 2 192 1 240 2 15 5 247 5 
157 1 39 1 114 1 66 1 247 1 261 1 
81 2 157 4 121 1 2 1 39 2 4 1 164 1 207 2 127 1 308 1 12 2 216 1 134 2 15 2 181 1 58 4 100 4 66 3 147 1 108 1 327 1 330 2 153 1 238 2 35 2 114 3 241 1 291 2 290 4 
82 2 1 1 2 1 252 1 254 1 256 1 297 1 301 3 8 3 258 1 132 2 311 1 174 1 216 1 93 1 185 1 58 1 100 1 101 1 322 1 281 1 24 2 149 1 232 2 327 1 236 1 153 1 113 1 35 1 244 1 117 2 290 1 
19 2 197 4 81 1 99 1 121 1 207 1 261 2 170 2 30 2 330 1 12 1 134 1 15 2 291 1 247 4 
142 1 323 1 182 1 
142 1 323 1 182 1 
97 1 163 1 312 1 323 1 182 1 
142 1 323 1 182 1 
323 1 230 1 182 1 
323 1 230 1 182 1 
323 1 230 1 182 1 
323 1 182 1 
233 1 133 1 
139 1 99 1 98 1 220 2 250 1 60 1 252 2 5 1 256 8 297 2 23 1 149 4 232 4 285 1 49 4 172 1 113 2 217 1 243 3 244 2 
139 1 99 1 98 1 250 1 220 2 5 1 256 6 23 1 149 3 285 1 49 3 172 1 272 1 243 2 
252 1 297 1 5 1 256 4 23 1 149 2 232 2 286 1 49 2 88 1 75 1 113 1 240 1 244 1 
60 2 256 12 5 2 23 2 46 2 167 1 149 6 286 2 307 1 87 2 49 6 75 2 240 2 243 2 36 1 
250 4 252 2 5 4 256 30 297 2 46 2 305 1 167 1 307 1 87 2 49 14 172 1 217 2 54 1 139 2 277 1 99 1 98 1 220 5 60 5 23 4 149 16 232 4 285 4 286 2 75 2 113 2 240 2 243 10 244 2 
256 1 46 1 149 1 
87 1 49 1 256 1 
252 1 60 1 297 1 256 6 5 1 23 1 232 2 149 3 286 1 49 3 88 1 75 1 192 1 113 1 240 1 243 1 244 1 
249 1 252 1 256 12 297 1 5 2 126 1 46 1 47 1 263 1 87 1 49 6 130 1 60 1 23 2 149 6 232 2 286 2 75 2 113 1 240 2 156 1 243 1 244 1 36 1 
139 1 250 1 220 1 60 1 5 1 256 6 23 1 149 3 285 1 49 3 243 2 
277 1 98 1 220 1 250 1 60 1 252 1 256 3 297 1 149 2 232 2 285 1 49 1 172 1 113 1 217 1 243 2 244 1 
139 1 250 2 220 3 252 1 60 2 297 1 256 10 5 2 23 2 232 2 305 1 149 5 263 1 285 2 49 5 113 1 243 5 244 1 
252 1 60 1 297 1 5 1 256 2 232 2 263 1 49 2 113 1 240 1 243 1 244 1 
252 1 60 1 297 1 5 1 256 4 23 1 149 2 232 2 263 1 286 1 49 2 75 1 113 1 240 1 243 1 244 1 
277 1 250 1 220 1 252 3 60 1 256 3 297 3 69 1 149 2 232 6 263 1 285 1 49 1 113 3 217 1 243 2 244 3 
160 1 250 3 252 5 297 5 256 41 5 6 46 4 167 1 263 1 307 1 87 4 49 20 88 1 172 1 217 2 53 1 139 2 277 1 99 1 98 1 219 1 220 4 60 7 69 1 23 6 149 21 232 10 285 3 286 4 75 4 113 5 240 4 243 11 244 5 36 1 
250 1 252 1 5 1 256 8 297 1 126 1 46 1 263 1 87 1 49 4 172 1 139 1 99 1 98 1 220 2 23 1 149 4 232 2 285 1 113 1 243 2 244 1 36 1 
250 1 252 2 256 11 297 2 5 2 126 1 46 2 263 1 307 1 87 1 49 6 88 1 172 1 139 1 99 1 98 1 220 2 60 1 23 1 149 5 232 4 285 1 286 1 113 2 240 1 243 3 244 2 36 1 
249 1 250 1 252 3 256 19 297 3 5 3 126 1 46 1 47 1 263 1 87 1 49 9 130 1 88 1 172 1 217 1 139 1 99 1 98 1 220 3 60 1 23 3 149 10 232 6 285 1 286 2 75 2 113 3 240 2 156 1 243 4 244 3 36 1 
249 1 250 1 252 3 256 17 297 3 5 3 126 1 46 1 47 1 263 1 87 1 49 10 130 1 88 1 172 1 217 1 139 1 99 1 98 1 220 2 60 2 23 2 149 7 232 6 285 1 286 2 75 1 113 3 240 2 156 1 243 4 244 3 36 1 
250 1 252 1 5 1 256 8 297 1 126 1 46 1 263 1 87 1 49 4 172 1 139 1 99 1 98 1 220 2 23 1 149 4 232 2 285 1 113 1 243 2 244 1 36 1 
249 1 252 1 256 12 297 1 5 2 126 1 46 1 47 1 263 1 87 1 49 6 130 1 60 1 23 2 149 6 232 2 286 2 75 2 113 1 240 2 156 1 243 1 244 1 36 1 
249 1 250 1 252 4 256 18 297 4 5 3 126 1 46 1 47 1 263 1 87 1 130 1 49 10 88 1 172 1 217 2 139 1 99 1 98 1 220 3 60 2 23 2 149 8 232 8 285 1 286 2 75 1 113 4 240 2 156 1 243 5 244 4 36 1 
249 1 252 3 256 11 297 3 5 2 126 1 46 1 47 1 263 1 87 1 49 7 130 1 217 1 60 2 69 1 23 1 149 4 232 6 286 2 75 1 113 3 240 2 243 2 156 1 244 3 36 1 
139 1 98 1 250 3 220 3 60 3 256 7 5 1 23 1 149 4 285 3 49 3 172 2 243 6 
249 1 250 1 252 4 256 18 297 4 5 3 126 1 46 1 47 1 263 1 87 1 130 1 49 10 172 1 217 2 139 1 99 1 98 1 220 3 60 1 69 1 23 2 149 8 232 8 285 1 286 2 75 1 113 4 240 2 156 1 243 4 244 4 36 1 
82 1 310 1 236 1 215 1 301 1 6 1 8 1 
82 1 6 1 301 1 8 1 128 1 310 1 236 1 313 1 32 1 215 1 77 1 13 1 
327 1 58 1 100 1 2 1 153 1 216 1 272 1 35 1 127 1 181 1 290 1 
82 1 185 1 58 1 100 1 101 1 2 1 301 2 8 2 258 1 24 1 327 1 236 1 153 1 269 1 216 1 35 1 117 1 290 1 
82 2 2 3 301 2 8 2 258 1 269 1 216 1 185 2 58 1 57 1 101 1 100 1 188 1 228 1 231 1 24 1 327 1 288 1 236 1 153 2 238 1 117 2 290 1 
82 2 2 3 301 2 8 2 258 1 269 1 216 1 52 1 185 2 58 1 57 1 100 1 188 1 228 2 231 1 24 1 284 1 327 1 288 1 236 1 153 2 238 1 117 2 290 1 
157 1 159 1 2 4 261 1 11 1 315 1 216 1 185 1 58 3 100 3 229 1 66 2 231 1 327 1 288 1 153 1 76 1 238 1 114 2 35 1 245 1 290 3 247 1 
185 1 157 1 58 3 100 3 2 4 66 2 229 1 231 1 261 1 327 1 288 1 153 1 76 1 315 1 216 1 238 1 35 1 114 2 78 1 245 1 247 1 290 3 
327 1 58 1 100 1 235 1 216 1 290 1 
95 1 185 1 120 1 58 6 251 1 100 7 2 3 40 1 221 1 41 1 223 1 105 1 327 2 31 1 235 1 131 1 153 2 216 3 35 2 196 1 290 7 
82 1 162 1 251 1 250 1 252 2 2 1 254 2 255 1 5 1 256 6 8 2 258 1 172 1 269 1 93 1 185 1 98 1 99 1 101 1 100 1 281 2 282 1 283 1 23 1 24 1 285 1 113 2 117 1 290 1 203 1 297 2 301 2 49 3 311 1 216 1 139 1 58 1 220 2 224 1 232 4 149 3 327 1 74 1 153 1 236 2 243 2 244 2 
81 2 157 2 121 2 2 2 39 1 207 1 261 1 50 1 12 2 15 1 317 1 58 1 100 1 66 3 229 1 107 1 25 1 108 1 76 1 35 1 114 3 78 1 193 1 80 1 245 1 247 1 291 2 290 1 
185 1 58 2 251 1 100 2 2 2 223 1 280 1 327 1 235 1 153 1 216 2 245 1 290 2 
58 4 100 4 251 1 2 1 122 1 127 1 327 1 153 1 315 1 216 1 35 1 290 4 181 1 
185 1 120 1 58 2 100 2 2 1 41 1 208 1 327 1 287 1 153 1 238 1 216 2 79 1 290 2 
210 1 327 1 58 1 100 1 10 1 216 1 89 1 35 1 17 1 290 1 
95 1 58 2 251 1 100 2 2 1 225 1 327 1 153 1 216 1 196 1 290 2 
95 1 58 4 100 5 251 1 2 3 122 1 127 1 105 1 327 2 131 1 153 2 238 1 216 2 35 1 181 1 290 5 
95 1 58 4 100 5 251 1 143 1 2 3 122 1 127 1 105 1 327 2 153 2 238 1 216 2 35 1 181 1 290 5 
82 1 2 1 301 2 8 2 258 1 269 1 216 1 52 1 185 1 58 1 100 1 228 1 24 1 284 1 327 1 153 1 236 1 35 1 117 1 290 1 
185 1 120 1 58 1 100 1 2 1 221 1 41 1 223 1 327 1 153 1 238 1 216 2 290 1 
186 1 191 1 236 1 64 1 71 1 
83 1 198 1 186 2 158 1 57 1 188 1 64 2 228 1 66 2 165 1 261 1 25 1 71 2 26 1 191 1 236 1 76 1 114 2 247 1 
82 1 186 1 62 1 300 1 301 1 8 1 71 1 191 1 136 1 
198 1 191 1 165 1 

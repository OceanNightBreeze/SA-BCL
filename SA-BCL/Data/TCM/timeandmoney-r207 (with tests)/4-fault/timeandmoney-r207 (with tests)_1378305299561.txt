#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 341 302 285 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 341 302 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 341 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 171 1 97 1 72 1 245 2 286 1 267 2 321 1 200 2 81 2 296 3 273 5 204 2 61 9 221 2 299 9 300 1 161 1 183 6 108 1 32 1 85 1 148 1 227 1 66 4 336 1 189 2 358 1 
115 1 171 1 97 1 72 1 245 2 286 1 267 2 321 1 200 2 81 2 296 3 273 5 204 2 61 9 221 2 299 9 300 1 161 1 183 6 108 1 32 1 85 1 148 1 227 1 66 4 336 1 189 2 358 1 
115 1 171 1 97 1 72 1 245 2 286 1 267 2 321 1 200 2 81 2 296 4 273 6 204 2 61 10 221 2 299 10 300 1 161 1 183 7 108 1 32 1 85 1 148 1 227 1 66 5 336 1 189 2 358 1 
115 1 171 1 97 1 245 2 286 1 267 2 321 1 200 2 81 2 296 2 273 4 204 2 61 7 221 2 299 7 300 1 161 1 183 4 108 1 32 1 85 1 148 1 227 1 66 3 336 1 189 1 358 1 
115 1 81 1 296 1 273 3 221 1 61 4 299 4 300 1 183 3 72 1 245 1 32 1 85 1 267 1 66 2 336 1 189 2 200 1 
115 1 81 1 273 1 204 1 61 2 221 1 299 2 245 1 310 1 85 1 148 1 177 1 336 1 167 1 200 1 358 1 
115 1 296 1 273 2 204 1 61 3 299 3 183 1 245 2 108 1 85 1 66 1 336 1 200 2 
115 1 81 1 273 5 296 3 204 1 221 1 61 9 299 9 300 1 97 1 284 1 183 7 72 1 184 1 245 2 108 1 32 1 85 1 267 1 227 1 66 4 336 1 189 2 200 2 
115 1 81 1 273 5 296 3 204 1 221 1 61 9 299 9 300 1 97 1 284 1 183 7 72 1 184 1 245 2 108 1 32 1 85 1 267 1 227 1 66 4 336 1 189 2 200 2 
178 1 155 1 188 1 
332 2 217 1 155 1 
92 1 142 2 103 2 274 2 243 2 29 2 42 2 153 1 
92 1 133 1 241 1 243 2 196 1 153 1 117 1 99 1 342 2 101 1 7 1 55 1 293 1 159 1 142 3 345 2 251 1 103 2 274 3 106 2 82 1 126 1 146 1 29 2 11 1 276 1 30 2 325 1 328 1 228 1 65 1 86 1 187 1 67 1 233 2 42 2 114 1 
142 1 103 1 259 1 274 1 179 1 243 1 244 1 29 1 42 1 153 1 
142 1 274 1 242 1 98 1 145 1 333 1 289 1 218 1 155 1 179 1 188 1 261 1 42 1 280 1 
142 1 103 1 274 1 243 1 242 1 98 1 145 2 29 1 218 1 155 1 179 1 188 1 261 1 42 1 280 2 
235 1 254 1 145 1 116 1 280 1 
235 1 315 1 155 1 145 2 188 1 116 1 18 1 280 2 
145 1 116 1 280 1 
235 1 142 1 103 1 274 1 145 1 243 1 244 1 29 1 109 1 153 1 259 1 179 1 42 1 280 1 
155 1 
235 1 243 1 116 1 244 1 18 1 153 1 155 1 179 1 22 1 142 1 103 1 274 1 145 2 29 1 109 1 259 1 188 1 42 1 280 2 
235 2 60 1 105 2 181 1 145 5 308 2 28 1 116 2 18 1 331 1 206 1 229 2 12 1 155 1 188 1 130 1 20 1 356 1 280 5 
92 1 178 1 
92 2 142 2 103 1 274 2 243 1 107 1 127 1 29 1 42 2 
236 1 238 1 309 1 
92 1 159 1 142 1 345 1 251 1 274 1 82 1 146 1 30 1 325 1 99 1 342 1 101 1 55 1 114 1 58 1 
159 1 251 1 142 2 345 1 122 1 103 1 274 2 82 1 243 1 146 1 309 1 30 1 325 1 99 1 342 1 101 1 55 1 131 1 42 1 114 1 
92 1 142 5 103 4 122 1 274 5 243 4 107 1 83 1 29 1 343 1 354 1 289 1 131 2 42 5 
330 1 142 2 103 2 274 2 179 1 243 2 244 1 42 2 
92 1 142 3 103 3 274 3 243 3 131 1 29 1 42 3 
142 1 103 1 274 1 179 1 243 1 244 1 42 1 
142 1 103 1 274 1 179 1 243 1 107 1 127 1 29 1 42 1 
92 1 133 1 241 1 243 3 242 1 98 1 196 1 153 1 99 1 342 1 119 1 101 1 218 1 179 1 55 1 293 1 159 1 141 1 251 1 142 4 345 1 103 3 122 1 274 4 106 2 82 1 145 1 126 1 146 1 107 1 29 2 276 1 30 1 325 1 328 1 86 1 187 1 67 1 131 1 261 1 233 1 42 3 114 1 280 1 
92 1 142 2 103 1 343 1 289 1 274 2 243 1 131 1 42 2 
142 3 122 1 103 3 274 3 145 1 98 1 243 3 242 1 107 1 29 1 247 1 119 1 218 1 155 1 179 1 131 2 261 1 42 3 280 1 
142 2 103 2 238 1 274 2 243 2 107 1 29 1 309 1 131 1 42 2 
92 1 159 1 142 1 345 1 251 1 274 1 82 1 146 1 30 1 325 1 99 1 342 1 101 1 55 1 114 1 
92 1 202 1 142 1 345 1 251 1 274 1 82 1 146 1 30 1 99 1 342 1 344 1 101 1 55 1 114 1 
236 2 238 2 240 1 241 1 309 2 17 1 195 1 196 2 266 1 56 1 293 1 295 1 106 2 126 1 163 1 328 1 228 2 35 1 37 1 86 1 187 1 233 4 
330 1 142 1 103 1 274 1 179 1 242 1 243 1 42 1 
252 1 52 1 
252 1 52 1 
95 1 112 1 
95 1 112 1 
95 1 112 1 
158 1 252 1 52 1 
351 1 252 1 52 1 
215 1 212 1 252 2 95 1 112 1 52 2 
158 1 252 1 52 1 
158 1 252 1 52 1 
252 1 257 1 52 1 
252 1 257 1 52 1 
252 1 257 1 52 1 
211 1 175 1 252 1 341 1 145 1 285 1 280 1 52 1 302 1 
211 1 175 1 252 1 341 1 52 1 302 1 
81 1 221 1 267 1 
81 1 221 1 167 1 
136 1 13 1 221 3 167 1 102 1 267 2 
13 1 221 2 10 1 167 1 102 1 267 1 
13 2 221 2 167 1 102 1 267 1 
235 4 49 1 15 1 308 1 116 1 172 1 266 1 18 1 4 1 217 1 155 2 290 2 56 1 20 2 9 2 347 1 125 2 253 1 105 1 145 5 275 1 28 3 31 1 332 3 35 1 229 1 37 1 68 1 188 1 356 1 280 5 234 1 
235 7 49 3 239 1 308 2 116 6 5 1 266 3 18 1 4 2 248 1 19 1 217 3 155 5 290 6 56 3 20 6 25 1 9 6 347 1 105 2 254 5 145 9 28 8 31 4 326 5 332 9 35 3 229 2 37 3 68 2 130 1 188 1 132 1 356 1 280 9 
235 2 49 1 15 1 308 1 4 1 266 1 217 2 155 3 290 2 56 1 20 2 9 2 125 1 105 1 145 3 28 3 31 1 332 4 35 1 229 1 37 1 68 1 188 1 130 1 234 1 280 3 
235 3 49 2 15 1 308 1 4 1 266 2 248 1 19 1 217 3 155 4 290 4 56 2 20 4 9 4 125 2 105 1 145 4 28 5 31 2 332 7 35 2 229 1 37 2 68 1 188 1 130 1 132 1 280 4 234 1 
317 1 178 1 114 1 
140 1 114 1 
137 1 
101 1 55 1 114 1 
268 1 114 1 
55 1 114 1 
209 1 317 2 101 1 55 1 263 1 114 3 
124 2 213 1 222 1 27 1 84 1 147 1 196 3 311 1 277 1 185 1 287 3 228 4 37 1 113 2 56 1 233 7 45 1 
124 2 213 1 222 1 27 1 84 1 147 1 196 3 311 1 277 1 185 1 287 3 228 4 37 1 113 2 56 1 233 7 45 1 
124 2 213 1 222 1 26 1 27 1 84 1 147 1 196 3 311 1 277 1 185 1 287 3 228 4 37 1 113 2 56 1 233 7 45 1 
306 1 281 1 213 1 241 1 196 3 311 1 287 2 6 1 293 1 220 1 123 1 124 1 222 1 106 2 84 1 128 1 185 2 228 3 86 1 187 1 113 1 40 1 233 6 45 1 
306 1 213 1 241 2 311 1 196 4 287 4 76 1 56 1 293 2 124 2 106 4 27 1 162 1 84 1 147 1 277 1 185 1 228 5 37 1 86 2 187 2 113 3 233 9 45 1 
115 1 210 1 14 1 245 1 267 1 342 1 136 1 270 1 200 1 81 1 273 1 345 1 204 1 61 2 221 2 299 2 82 1 183 1 146 1 30 1 85 1 64 1 303 1 352 1 36 1 355 1 230 1 232 1 336 1 167 1 
14 1 51 1 245 1 267 1 136 1 342 1 54 1 200 1 291 1 81 1 273 1 345 1 204 1 61 3 221 2 299 3 82 1 183 2 146 1 30 1 85 1 64 1 303 1 352 1 36 1 355 1 230 1 232 1 336 1 167 1 
14 1 267 1 342 1 136 1 54 1 291 1 81 1 273 1 345 1 204 1 61 2 221 2 299 2 82 1 183 2 146 1 30 1 85 1 303 1 352 1 36 1 230 1 232 1 336 1 167 1 
47 1 14 2 51 1 245 1 99 1 342 1 316 1 55 1 200 1 345 1 204 2 61 1 104 1 299 1 82 1 146 1 255 1 30 1 303 2 36 2 114 1 339 1 91 1 
115 1 210 1 14 1 245 1 267 1 342 1 136 1 54 1 200 1 81 1 345 1 204 1 61 1 221 2 299 1 82 1 146 1 30 1 64 1 303 1 352 1 36 1 355 1 230 1 232 1 167 1 
46 1 
47 1 307 1 96 1 308 1 98 1 99 2 316 1 217 2 218 1 179 1 55 1 219 1 8 1 142 1 105 1 274 1 145 5 146 1 226 1 327 2 332 2 229 1 110 1 333 1 68 1 188 1 114 1 280 5 191 2 242 1 116 6 18 3 342 2 289 1 155 2 198 2 197 4 121 2 78 1 20 2 201 2 23 1 345 2 297 1 82 1 28 2 30 2 34 1 258 2 38 1 261 1 356 1 42 1 44 2 168 1 
242 1 98 1 116 2 18 1 218 1 289 1 179 1 197 2 8 1 22 1 142 1 297 1 274 1 145 3 34 1 258 1 110 1 333 1 38 1 261 1 42 1 280 3 
242 1 98 1 116 1 18 1 218 1 289 1 179 1 197 3 198 1 155 1 8 1 22 1 142 1 297 1 274 1 145 3 34 1 110 1 333 1 38 1 188 1 261 1 42 1 280 3 
242 1 98 1 116 2 18 1 218 1 289 1 179 1 197 3 198 1 8 1 22 1 142 1 297 1 274 1 145 3 34 1 258 1 110 1 333 1 38 1 261 1 42 1 280 3 44 1 
134 1 96 1 98 1 308 1 218 1 217 2 179 2 8 1 57 1 142 2 323 1 103 1 274 2 105 1 145 5 109 1 327 2 110 1 229 1 333 1 188 1 337 1 280 5 71 1 191 2 243 1 242 1 244 1 116 7 18 3 153 1 289 1 155 1 197 4 198 2 121 2 20 1 22 1 201 2 297 1 28 1 29 1 34 1 258 4 259 1 38 1 261 1 42 2 356 1 44 4 168 1 
96 1 98 1 308 1 218 1 217 2 179 1 219 1 8 1 142 1 274 1 105 1 145 4 327 2 332 2 229 1 110 1 333 1 188 1 280 4 191 2 242 1 116 4 18 2 289 1 197 4 198 2 155 2 121 2 20 1 201 2 297 1 28 1 34 1 258 2 38 1 261 1 42 1 356 1 44 2 168 1 
191 2 96 1 308 1 242 1 98 1 116 4 18 2 217 2 218 1 289 1 155 1 198 2 179 1 197 4 121 2 8 1 20 1 201 2 142 1 323 1 297 1 274 1 105 1 145 4 28 1 327 2 34 1 258 2 110 1 229 1 333 1 38 1 188 1 337 1 261 1 42 1 356 1 44 2 280 4 168 1 71 1 
191 2 96 1 308 1 242 1 98 1 116 4 18 2 217 2 218 1 289 1 155 1 198 2 179 1 197 4 121 2 8 1 20 1 201 2 142 1 323 1 297 1 274 1 105 1 145 4 28 1 327 2 34 1 258 2 110 1 229 1 333 1 38 1 188 1 337 1 261 1 42 1 356 1 44 2 280 4 168 1 71 1 
262 2 96 1 308 1 242 1 98 1 116 4 18 2 218 1 289 1 155 1 198 2 179 1 197 4 121 2 8 1 20 1 322 2 142 1 297 1 274 1 105 1 145 4 28 1 224 1 327 2 34 1 258 2 332 2 110 1 353 1 229 1 333 1 38 1 188 1 337 1 261 1 42 1 356 1 44 2 280 4 70 1 
191 2 96 1 308 1 242 1 98 1 116 5 18 2 217 2 218 1 289 1 155 1 179 1 197 5 198 3 121 2 8 1 20 1 201 2 57 1 323 1 142 1 297 1 105 1 274 1 145 4 28 1 327 2 34 1 258 3 229 1 110 1 333 1 38 1 188 1 337 1 261 1 356 1 42 1 280 4 44 3 168 1 71 1 
191 2 96 1 308 1 242 1 98 1 116 5 18 2 217 2 218 1 289 1 155 1 179 1 197 5 198 3 121 2 8 1 20 1 201 2 57 1 323 1 142 1 297 1 105 1 274 1 145 4 28 1 327 2 34 1 258 3 229 1 110 1 333 1 38 1 188 1 337 1 261 1 356 1 42 1 280 4 44 3 168 1 71 1 
262 2 96 1 98 1 308 1 218 1 179 1 219 1 8 1 322 2 142 1 274 1 105 1 145 4 327 2 332 2 229 1 110 1 333 1 188 1 280 4 70 1 242 1 116 4 18 2 289 1 197 4 198 2 155 1 121 2 20 1 297 1 28 1 34 1 258 2 38 1 261 1 42 1 356 1 44 2 
92 2 236 1 238 1 241 1 309 1 196 3 287 2 178 1 56 1 293 1 295 1 124 1 106 2 27 1 126 1 84 1 147 1 277 1 328 1 228 3 86 1 37 1 187 1 113 2 233 6 45 1 
92 1 236 8 133 1 1 1 49 2 238 3 213 1 241 2 309 8 152 1 196 5 266 2 287 1 100 1 179 1 319 1 56 2 293 2 220 2 180 1 123 2 106 4 126 2 328 1 186 1 228 6 35 1 86 2 37 1 87 1 187 2 233 11 
92 1 133 1 238 1 50 1 241 1 243 1 196 1 99 1 342 1 100 1 101 1 120 1 55 1 58 1 293 1 159 1 251 1 345 1 142 2 103 1 122 1 274 2 144 1 82 1 106 2 146 1 126 1 11 1 30 1 325 1 328 1 228 1 86 1 187 1 131 1 42 1 233 2 114 1 
92 2 133 1 49 2 213 4 309 7 266 2 99 1 100 1 54 1 101 2 55 2 56 3 272 1 59 1 142 3 103 1 274 3 106 6 146 2 11 1 147 1 325 2 277 1 328 3 228 10 111 2 113 2 187 3 67 2 233 20 114 2 236 7 238 7 241 3 243 1 196 10 342 3 287 6 293 3 159 2 345 3 251 2 122 1 346 2 124 1 82 2 27 1 126 3 84 1 30 3 348 2 35 2 207 1 260 2 37 3 86 3 131 1 42 1 45 1 
47 1 133 1 241 2 243 1 16 1 196 1 99 2 342 8 288 1 316 1 54 1 270 1 55 2 250 1 21 1 293 2 294 1 295 1 142 1 345 8 103 1 274 1 82 2 106 4 146 2 126 2 11 1 129 1 30 7 328 2 228 1 65 2 86 2 187 2 131 1 90 1 42 1 233 2 114 3 
236 1 238 1 49 1 241 1 243 1 309 1 266 1 196 2 100 1 56 1 293 1 142 1 103 1 274 1 106 2 107 1 126 1 29 1 328 1 228 1 35 1 86 1 37 1 187 1 166 1 42 1 233 3 
236 1 295 1 238 1 240 1 213 1 106 2 241 1 126 1 309 1 266 1 328 1 287 1 228 2 86 1 187 1 56 1 233 2 293 1 
236 1 295 1 238 1 106 2 241 1 126 1 309 1 163 1 196 2 328 1 35 1 86 1 37 1 187 1 233 2 293 1 
236 2 49 1 238 2 213 1 241 1 309 2 266 1 196 2 287 1 56 1 293 1 295 1 106 2 126 1 328 1 228 2 35 1 86 1 37 1 187 1 233 4 
236 1 238 1 240 1 213 1 106 2 241 1 16 1 126 1 309 1 266 1 328 1 287 1 228 2 86 1 187 1 56 1 233 2 293 1 
236 1 238 1 106 2 241 1 16 1 126 1 309 1 163 1 196 2 328 1 35 1 86 1 37 1 187 1 233 2 293 1 
236 2 238 2 49 1 106 2 241 1 16 1 126 1 309 2 196 2 266 1 328 1 228 2 35 1 37 1 86 1 187 1 56 1 233 4 293 1 
236 2 238 2 49 1 213 1 106 2 241 1 126 1 309 2 196 2 266 1 328 1 287 1 228 2 35 1 37 1 86 1 187 1 56 1 233 4 293 1 
92 1 133 1 241 1 196 1 99 1 342 1 101 1 55 1 293 1 159 1 251 1 345 1 142 1 274 1 82 1 106 2 146 1 126 1 11 1 30 1 325 1 328 1 228 1 86 1 67 1 187 1 233 2 114 1 
92 1 133 1 241 1 196 1 99 1 342 1 101 1 344 1 55 1 293 1 202 1 251 1 345 1 142 1 274 1 82 1 106 2 146 1 126 1 11 1 30 1 328 1 228 1 86 1 187 1 233 2 114 1 190 1 
236 2 49 1 238 2 213 1 241 1 309 2 266 1 196 2 287 1 100 1 56 1 293 1 106 2 126 1 328 1 228 2 35 1 86 1 37 1 187 1 233 4 
236 2 238 2 49 1 213 1 241 1 309 2 196 2 266 1 342 1 287 1 101 1 270 1 55 1 56 1 293 1 159 1 251 1 345 1 142 1 274 1 82 1 106 2 146 1 126 1 30 1 325 1 328 1 228 2 35 1 111 1 37 1 86 1 67 1 187 1 233 4 114 1 
236 1 49 1 238 1 213 1 241 1 243 1 309 1 196 1 266 1 287 1 100 1 56 1 293 1 142 1 103 1 274 1 106 2 107 1 126 1 29 1 328 1 228 2 35 1 37 1 86 1 304 1 187 1 42 1 233 3 
306 2 340 3 48 1 49 3 170 1 213 3 241 4 135 1 264 1 196 16 266 3 174 1 154 1 287 5 75 1 53 1 216 1 199 1 56 4 293 4 220 2 124 1 123 2 106 8 27 1 162 1 84 1 128 2 147 1 277 1 164 1 228 17 35 3 37 4 86 4 113 2 187 4 69 1 338 1 233 33 45 1 
306 2 340 4 48 1 49 3 170 1 213 2 241 3 135 1 264 1 196 12 266 3 174 2 154 1 287 3 53 1 216 1 199 1 56 3 293 3 220 2 123 2 106 6 162 1 128 2 228 14 35 2 37 2 86 3 335 1 113 1 187 3 69 2 338 1 233 26 
306 2 340 4 48 1 49 3 170 1 213 4 241 4 135 1 264 1 196 18 266 3 74 1 174 2 154 1 287 6 53 1 216 1 199 1 56 4 293 4 220 3 124 1 123 3 106 8 27 1 162 1 84 1 128 3 147 1 277 1 164 1 228 19 35 3 37 4 86 4 335 1 113 2 187 4 69 1 338 1 233 37 45 1 
306 2 340 4 48 1 49 3 170 1 213 3 241 4 135 1 264 1 196 17 266 3 174 1 154 1 287 5 53 1 216 1 199 1 56 4 293 4 220 2 124 1 123 2 106 8 27 1 162 1 84 1 128 2 147 1 277 1 164 1 228 18 35 3 37 4 86 4 335 1 113 2 187 4 69 1 338 1 233 35 45 1 
306 2 340 4 48 1 49 3 170 1 213 3 241 3 135 1 264 1 196 14 266 3 174 1 154 1 287 4 53 1 216 1 199 1 56 3 293 3 220 2 123 2 106 6 162 1 128 2 228 14 35 3 37 3 86 3 335 1 113 1 187 3 69 1 338 1 233 28 
0 1 133 1 94 1 241 1 196 1 342 2 288 1 100 1 138 1 55 1 293 1 345 2 142 2 274 2 82 1 106 2 146 1 126 1 11 1 30 2 328 1 205 1 228 1 65 2 165 1 86 1 187 1 90 1 42 2 233 2 114 1 
81 1 345 2 150 1 221 2 82 1 146 1 30 2 267 1 64 1 136 1 342 2 303 1 54 1 318 1 230 1 270 1 232 1 167 1 43 1 
81 1 345 1 221 2 82 1 193 1 146 1 30 1 267 1 64 1 136 1 342 1 303 1 54 1 230 1 232 1 167 1 43 1 
47 1 345 1 82 1 146 1 151 1 30 1 99 1 342 1 303 1 316 1 318 1 55 1 114 1 91 1 
81 1 345 1 150 1 221 2 82 1 146 1 30 1 267 1 64 1 136 1 342 1 303 1 54 1 318 1 230 1 232 1 167 1 43 1 
80 1 
331 1 60 1 178 1 155 1 28 1 188 1 20 1 
191 1 308 1 116 1 18 1 217 1 155 2 20 1 201 1 105 1 145 1 28 1 332 1 229 1 188 1 356 1 280 1 168 1 
209 1 49 2 308 4 3 2 98 2 265 2 266 2 99 1 317 2 101 3 268 2 217 6 270 1 55 3 140 3 56 2 9 6 60 1 105 4 182 1 145 5 146 4 62 1 329 2 331 1 149 1 332 12 229 4 68 2 188 2 114 10 280 5 237 2 282 1 116 5 18 3 342 3 155 8 156 2 77 2 290 6 78 1 20 8 345 3 82 3 301 2 28 9 30 3 35 2 260 2 37 2 88 1 356 4 
48 1 49 2 214 2 308 2 135 1 116 1 264 1 265 1 18 1 266 2 154 1 217 3 155 5 290 5 199 1 78 1 56 2 20 5 9 5 220 1 123 1 105 2 145 1 28 8 225 1 128 1 33 1 332 6 229 2 35 2 37 2 68 1 188 2 356 2 280 1 
214 2 308 1 243 1 244 1 265 1 153 1 179 1 271 1 56 2 20 2 142 1 323 1 103 1 274 1 105 1 145 1 28 2 84 1 29 1 147 1 109 1 259 1 229 1 37 1 356 1 42 1 45 1 280 1 
60 1 105 1 308 1 28 1 331 1 229 1 155 1 188 1 356 1 20 1 
9 5 49 2 28 5 265 1 266 2 332 10 35 2 260 1 217 5 155 5 37 2 290 5 56 2 20 5 
155 1 145 1 188 1 116 1 280 1 18 1 
47 1 282 2 307 1 308 2 116 4 18 2 99 2 342 4 316 1 55 1 320 1 78 2 20 2 345 4 105 2 82 1 182 1 145 3 146 1 28 2 226 1 30 4 349 1 229 2 68 2 130 1 356 1 114 1 280 3 
92 1 133 1 241 1 243 2 196 1 99 1 153 1 342 1 101 1 55 1 293 1 159 1 345 1 142 3 251 1 103 2 274 3 106 2 82 1 146 1 126 1 29 2 30 1 276 1 325 1 328 1 86 1 187 1 67 1 233 1 42 2 114 1 
9 2 124 1 105 1 308 1 28 1 332 4 229 1 217 2 155 4 68 1 188 2 290 2 78 1 20 2 356 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
175 1 341 1 
252 1 52 1 
306 1 124 1 213 1 106 4 241 2 27 1 84 1 147 1 196 4 277 1 287 3 228 4 37 1 86 2 113 2 187 2 56 1 233 8 45 1 293 2 
124 1 27 1 84 1 147 1 196 3 277 1 287 2 228 3 178 1 37 1 113 2 56 1 233 6 45 1 
49 1 106 2 241 1 196 2 266 1 313 1 228 2 35 1 37 1 86 1 187 1 56 1 233 4 293 1 
220 1 228 1 123 1 128 1 233 2 196 1 
306 1 49 2 1 1 213 4 241 1 266 2 196 12 287 8 271 1 56 5 293 1 220 2 180 1 124 1 123 2 106 2 27 1 84 2 147 2 277 1 228 13 35 2 37 5 86 1 113 4 87 1 187 1 233 25 45 2 
220 1 233 1 196 1 
228 1 123 1 233 1 
49 1 213 1 241 1 106 2 196 3 266 1 313 1 287 1 228 3 35 1 260 1 86 1 37 1 187 1 56 1 233 6 293 1 
48 1 49 2 213 1 241 1 135 1 264 1 196 6 266 2 154 1 287 1 199 1 56 2 293 1 220 1 123 1 106 2 162 1 128 1 228 6 35 2 86 1 37 2 187 1 233 12 
213 1 84 1 147 1 196 3 287 2 228 3 37 1 113 1 56 1 233 6 45 1 
306 1 213 1 106 2 241 1 27 1 84 1 196 2 277 1 287 2 228 1 6 1 86 1 113 1 187 1 233 3 45 1 293 1 
213 2 241 1 106 2 162 1 84 2 147 1 196 5 287 5 228 5 86 1 37 2 187 1 113 3 271 1 56 2 233 10 45 2 293 1 
213 1 106 2 241 1 162 1 266 1 287 1 228 2 86 1 187 1 56 1 233 2 293 1 
49 1 213 1 106 2 241 1 162 1 196 2 266 1 287 1 228 2 35 1 37 1 86 1 187 1 56 1 233 4 293 1 
306 1 213 1 106 6 241 3 162 1 84 1 196 2 287 2 164 1 228 1 6 1 86 3 187 3 113 1 233 3 45 1 293 3 
306 1 281 1 213 3 241 4 196 8 313 1 287 6 6 1 271 1 56 2 293 4 220 1 123 1 106 8 27 1 162 1 84 2 128 1 147 1 277 1 164 1 228 7 37 2 86 4 187 4 113 3 233 15 45 2 
306 1 48 1 49 2 213 4 241 2 135 1 264 1 196 10 266 2 154 1 287 8 271 1 199 1 56 5 293 2 220 1 124 1 123 1 106 4 27 1 162 1 84 2 128 1 147 2 277 1 228 14 35 1 86 2 37 4 113 4 187 2 233 24 45 2 
306 1 48 1 49 2 213 1 241 3 135 1 264 1 196 7 266 2 313 1 287 3 154 1 199 1 56 3 293 3 220 1 124 1 123 1 106 6 27 1 162 1 84 1 128 1 147 1 277 1 228 10 35 1 86 3 37 2 113 2 187 3 233 17 45 1 
306 1 48 1 49 2 213 1 241 3 135 1 264 1 196 10 266 2 313 1 154 1 287 4 199 1 56 3 293 3 220 1 124 1 123 1 106 6 27 1 162 1 84 1 128 1 147 1 277 1 228 9 35 2 86 3 37 3 187 3 113 3 233 19 45 1 
306 1 48 1 49 2 213 2 241 3 135 1 264 1 196 7 266 2 313 1 154 1 287 4 199 1 56 3 293 3 220 1 124 1 123 1 106 6 27 1 162 1 84 1 128 1 147 1 277 1 228 10 35 1 86 3 37 2 113 2 187 3 233 17 45 1 
306 1 48 1 49 2 213 4 241 2 135 1 264 1 196 10 266 2 154 1 287 8 271 1 199 1 56 5 293 2 220 1 124 1 123 1 106 4 27 1 162 1 84 2 128 1 147 2 277 1 228 14 35 1 86 2 37 4 113 4 187 2 233 24 45 2 
48 1 49 2 213 1 241 1 135 1 264 1 196 6 266 2 154 1 287 1 199 1 56 2 293 1 220 1 123 1 106 2 162 1 128 1 228 6 35 2 86 1 37 2 187 1 233 12 
306 2 48 1 49 2 213 2 241 4 135 1 264 1 196 8 266 2 313 1 154 1 287 5 199 1 56 3 293 4 220 1 124 1 123 1 106 8 27 1 162 1 84 1 128 1 147 1 277 1 228 10 35 1 86 4 37 2 187 4 113 3 233 18 45 1 
306 1 48 1 49 2 213 2 241 3 135 1 264 1 196 4 266 2 287 2 154 1 199 1 56 2 293 3 220 1 123 1 106 6 162 1 128 1 164 1 228 7 35 1 86 3 37 1 187 3 233 11 
213 3 27 1 84 3 147 1 196 4 277 2 287 6 228 3 37 1 113 3 56 1 233 7 45 3 
306 2 48 1 49 2 213 1 241 4 135 1 264 1 196 8 266 2 154 1 287 4 199 1 56 3 293 4 220 1 124 1 123 1 106 8 27 1 162 1 84 1 128 1 147 1 277 1 164 1 228 10 35 1 86 4 37 2 187 4 113 3 233 18 45 1 
92 1 142 1 343 1 169 1 274 1 289 1 42 1 
92 1 142 1 343 1 169 1 278 1 274 1 289 1 223 1 39 1 42 1 41 1 357 1 
47 1 342 1 316 1 345 1 178 1 82 1 55 1 146 1 30 1 114 1 99 1 
92 1 251 1 142 2 345 1 103 1 274 2 82 1 243 1 146 1 30 1 325 1 99 1 342 1 101 1 55 1 131 1 42 1 114 1 
92 1 251 1 142 2 345 1 103 1 282 1 274 2 82 1 301 1 242 1 243 2 146 1 30 1 325 1 342 1 268 1 101 2 179 1 55 2 131 1 261 1 42 2 114 3 
92 1 282 1 243 2 242 1 342 2 344 1 101 2 268 1 179 1 55 2 24 1 345 2 142 2 251 1 103 1 274 2 82 1 301 1 146 1 30 2 131 1 261 1 42 2 114 3 
24 1 305 1 345 3 282 1 82 1 98 1 301 1 145 2 146 1 116 1 73 1 30 3 99 1 342 3 317 1 268 1 101 1 155 1 55 1 188 1 140 1 114 4 280 2 
24 1 345 3 237 1 282 1 82 1 98 1 301 1 145 2 146 1 116 1 30 3 99 1 342 3 317 1 268 1 101 1 155 1 55 1 188 1 140 1 114 4 280 2 
342 1 345 1 82 1 146 1 30 1 129 1 
294 1 209 1 345 7 2 1 82 2 146 3 129 1 30 6 99 2 342 7 65 1 54 1 101 1 269 1 270 1 55 2 89 1 90 1 250 1 21 1 114 3 
92 2 236 1 0 1 238 1 241 2 243 1 309 1 196 3 342 1 287 2 100 1 101 1 270 1 55 1 56 1 293 2 159 1 251 1 142 2 345 1 103 1 124 1 274 2 82 1 106 4 27 1 146 1 126 2 84 1 30 1 147 1 348 1 325 1 277 1 328 2 228 3 111 1 37 1 86 2 113 2 187 2 67 1 131 1 233 6 42 1 114 1 45 1 
235 1 237 1 308 2 3 1 98 1 116 2 18 1 99 1 342 1 317 1 155 1 156 1 140 1 20 1 345 1 60 1 105 2 182 1 145 3 28 1 30 1 329 1 331 1 229 2 188 1 356 2 114 2 280 3 
209 1 345 2 82 1 146 2 62 1 129 1 30 2 342 2 317 1 101 1 270 1 55 1 114 2 
24 1 47 1 345 4 82 1 146 1 194 1 30 4 99 1 342 4 316 1 270 1 55 1 114 1 
345 2 282 1 143 1 324 1 82 1 146 2 30 2 342 2 101 1 269 1 55 1 89 1 272 1 114 1 
342 1 81 1 345 1 221 1 230 1 82 1 146 1 167 1 30 1 99 1 
342 2 345 2 54 1 94 1 82 1 270 1 55 1 146 1 90 1 30 2 114 1 
47 1 294 1 345 5 282 1 82 2 146 2 194 1 30 4 99 1 342 5 316 1 270 1 55 2 90 1 250 1 114 3 
47 1 294 1 345 5 282 1 82 2 146 2 194 1 30 4 99 1 342 5 316 1 270 1 55 2 139 1 90 1 114 3 
92 1 251 1 142 2 345 1 103 1 274 2 82 1 243 1 146 1 30 1 99 1 342 1 101 1 344 1 55 1 131 1 42 1 114 1 
209 1 345 1 282 1 2 1 82 1 146 2 30 1 342 1 101 1 269 1 55 1 89 1 114 1 
92 1 298 1 160 1 246 1 173 1 
92 1 235 1 203 1 298 2 93 1 160 2 98 1 242 1 145 2 192 1 246 1 173 2 119 1 218 1 155 1 179 1 188 1 261 1 280 2 
142 1 298 1 274 1 246 1 173 1 205 1 138 1 165 1 42 1 
93 1 192 1 246 1 
273 1 178 1 336 1 85 1 
273 1 61 1 299 1 336 1 245 1 200 1 85 1 
204 1 14 1 61 1 
115 1 148 2 273 1 61 3 299 3 279 1 336 1 245 1 200 1 85 1 63 1 292 1 
273 1 61 2 299 2 183 1 336 1 189 1 245 1 200 1 85 1 
115 1 81 1 273 1 61 1 221 1 299 1 245 1 32 1 267 1 66 1 200 1 
115 1 273 1 61 1 299 1 336 1 245 1 200 1 
115 1 61 1 299 1 336 2 245 1 200 1 85 1 
115 1 273 1 61 2 299 2 336 1 256 1 245 2 249 1 200 2 208 1 
115 1 296 1 273 2 61 3 299 3 97 1 183 2 245 1 85 1 227 1 66 1 336 1 200 1 
115 1 81 1 273 1 283 1 221 2 61 2 299 2 183 1 245 1 85 1 267 1 136 1 336 1 167 1 200 1 
115 1 296 1 273 2 61 4 299 4 183 2 72 1 245 2 85 1 66 1 336 1 189 1 200 2 
115 1 273 1 61 1 299 1 336 1 245 1 200 1 85 1 
296 1 273 3 61 4 299 4 183 2 245 1 63 1 85 2 312 1 148 1 66 1 336 2 200 1 292 1 
115 1 118 1 273 1 176 1 61 2 299 2 284 1 183 1 336 1 245 1 200 1 85 1 
115 1 273 1 61 3 299 3 245 1 63 2 85 1 148 2 334 1 336 1 200 1 292 1 
273 2 350 2 231 1 79 1 
314 1 115 1 61 1 299 1 245 1 200 1 
115 1 273 1 61 2 299 2 97 1 183 1 336 1 245 1 200 1 85 1 
157 1 
115 1 273 1 61 1 299 1 336 1 245 1 200 1 85 1 
115 1 148 1 273 1 61 3 299 3 97 1 183 1 336 1 245 1 200 1 85 1 
273 1 296 1 66 1 312 1 
273 1 336 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 74 (16,294) (16,294) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 74 (16,294) (16,294) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 74 (16,294) (16,294) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 74 (16,294) (16,294) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 20 213 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 20 213 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 1 365 1 144 1 74 1 76 1 126 1 294 1 80 1 16 1 196 1 380 1 
284 1 365 1 144 1 74 1 76 1 126 1 294 1 80 1 16 1 196 1 380 1 
284 1 365 1 144 1 74 1 76 1 126 1 294 1 80 1 16 1 196 1 380 1 
284 1 365 1 144 1 74 1 76 1 126 1 294 1 80 1 16 1 196 1 380 1 
222 1 73 2 238 1 194 1 80 1 133 1 196 4 120 3 284 1 94 1 273 1 208 1 101 3 164 1 175 2 126 4 20 1 380 1 
365 1 76 1 194 1 80 1 196 2 310 1 284 1 94 1 215 1 28 1 273 1 101 1 164 1 126 2 303 1 380 1 
114 1 76 1 80 2 196 3 120 1 284 2 94 1 208 1 101 2 164 1 175 1 126 3 380 1 
114 1 213 1 76 1 80 2 196 4 120 2 284 2 146 1 101 1 208 1 175 1 20 1 126 4 151 1 380 1 
114 1 213 1 76 1 80 2 196 4 120 2 284 2 146 1 101 1 208 1 175 1 20 1 126 4 151 1 380 1 
122 1 54 1 160 1 
122 1 226 1 102 2 
0 2 371 1 198 1 272 2 299 2 312 2 316 2 63 2 
1 1 0 2 141 1 166 1 264 2 351 1 167 1 321 2 324 1 355 2 190 1 297 1 27 1 7 1 272 3 358 1 299 3 29 1 55 1 11 1 277 1 61 2 179 1 63 2 282 1 259 2 371 1 198 1 134 1 157 1 19 1 312 2 316 2 375 1 44 1 347 1 67 1 
0 1 198 1 272 1 299 1 8 1 312 1 267 1 316 1 63 1 218 1 
336 1 130 1 24 1 267 1 5 1 122 1 272 1 299 1 312 1 160 1 313 1 161 1 302 1 248 1 
0 1 336 1 130 2 24 1 267 1 5 2 63 1 122 1 272 1 299 1 312 1 160 1 161 1 316 1 302 1 
130 1 212 1 230 1 5 1 349 1 
130 2 212 1 122 1 75 1 160 1 5 2 191 1 349 1 
130 1 212 1 5 1 
0 1 130 1 267 1 5 1 63 1 198 1 272 1 8 1 299 1 312 1 316 1 349 1 218 1 334 1 
122 1 
130 2 212 1 122 1 160 1 5 2 191 1 349 1 26 1 
130 5 115 1 212 2 223 1 145 1 5 5 121 2 122 1 298 1 97 1 171 2 51 2 373 1 136 1 160 1 314 1 191 1 363 1 349 2 
371 1 54 1 
0 1 250 1 63 1 371 2 272 2 299 2 312 2 316 1 361 1 
356 1 229 1 6 1 
141 1 166 1 351 1 321 1 355 1 259 1 282 1 156 1 297 1 371 1 272 1 358 1 299 1 55 1 375 1 277 1 
0 1 141 1 166 1 351 1 321 1 282 1 355 1 259 1 297 1 356 1 270 1 358 1 272 2 299 2 55 1 312 1 31 1 316 1 375 1 277 1 
0 3 371 1 272 3 299 3 312 3 31 1 316 3 63 1 
0 1 272 1 299 1 312 1 267 1 316 1 218 1 
0 1 250 1 272 1 299 1 312 1 267 1 316 1 63 1 361 1 
0 3 141 1 24 1 166 1 264 1 351 1 321 1 267 1 5 1 324 1 355 1 297 1 27 1 270 1 7 1 358 1 272 4 299 4 29 1 55 1 31 1 302 1 361 1 277 1 336 1 130 1 36 1 61 2 179 1 63 2 282 1 259 1 371 1 198 1 157 1 19 1 312 3 86 1 161 1 375 1 316 3 44 1 347 1 67 1 
206 1 0 1 371 1 272 2 299 2 312 2 31 1 316 1 248 1 
0 3 336 1 130 1 24 1 267 1 5 1 63 1 122 1 270 1 272 3 299 3 312 3 56 1 31 2 86 1 161 1 316 3 302 1 361 1 
0 2 63 1 6 1 356 1 272 2 299 2 312 2 31 1 316 2 361 1 
141 1 166 1 351 1 321 1 355 1 259 1 282 1 297 1 371 1 272 1 358 1 299 1 55 1 375 1 277 1 
141 1 166 1 351 1 321 1 354 1 355 1 259 1 282 1 297 1 371 1 235 1 272 1 299 1 55 1 277 1 
1 2 263 1 264 4 6 2 324 2 356 2 357 1 207 1 275 1 177 1 331 1 249 1 229 2 61 2 179 1 307 1 107 1 233 1 81 1 157 1 19 1 44 1 347 1 67 1 
336 1 0 1 272 1 299 1 312 1 267 1 316 1 169 1 
0 4 63 1 206 1 371 1 270 1 272 5 299 5 312 5 31 2 316 4 361 1 88 1 261 1 248 1 
0 2 272 2 299 2 312 2 267 1 316 2 169 1 218 1 
30 1 262 1 
30 1 262 1 
176 1 64 1 
176 1 64 1 
176 1 64 1 
30 1 49 1 262 1 
30 1 280 1 262 1 
204 1 30 2 176 1 257 1 262 2 64 1 
30 1 49 1 262 1 
30 1 49 1 262 1 
30 1 138 1 262 1 
30 1 138 1 262 1 
30 1 138 1 262 1 
130 2 91 1 239 2 322 1 5 2 257 1 323 2 325 1 286 1 122 1 84 2 96 3 30 2 227 1 113 1 276 2 127 1 262 2 335 2 
0 2 130 1 165 1 239 1 322 1 353 1 5 1 323 1 280 1 371 1 242 1 84 1 96 1 272 2 98 1 299 2 288 1 53 1 312 2 30 1 33 1 316 2 262 1 335 1 
273 1 194 1 133 1 
28 1 273 1 194 1 
28 1 210 1 194 3 133 2 89 1 119 1 
28 1 93 1 210 1 194 2 133 1 89 1 
28 1 210 2 194 2 133 1 89 1 
263 1 165 1 223 1 353 1 5 5 121 1 122 2 170 1 242 1 226 1 97 2 171 1 51 1 102 3 191 1 177 1 130 5 212 1 178 2 305 1 255 1 214 1 307 1 233 1 110 1 373 3 137 2 160 1 217 2 43 1 377 1 349 4 
263 3 223 1 5 9 121 2 242 4 122 5 170 2 226 3 97 6 171 2 51 2 209 1 102 9 174 5 191 1 177 3 130 9 13 1 212 6 230 5 254 1 305 3 339 1 279 1 255 2 307 3 233 3 197 1 373 8 137 6 160 1 314 1 217 6 43 1 349 7 
263 1 5 3 121 1 122 3 170 1 242 1 226 2 171 1 97 2 51 1 102 4 177 1 130 3 178 1 305 1 255 1 214 1 307 1 233 1 373 3 160 1 137 2 314 1 217 2 377 1 349 2 
263 2 5 4 121 1 122 4 170 1 242 2 226 3 171 1 97 4 51 1 209 1 102 7 177 2 130 4 178 2 305 2 339 1 255 1 214 1 307 2 233 2 197 1 373 5 160 1 137 4 217 4 314 1 377 1 349 3 
54 1 15 1 277 1 
368 1 277 1 
131 1 
55 1 277 1 
366 1 55 1 15 2 277 3 282 1 247 1 
55 1 277 1 282 1 
271 1 277 1 
1 4 263 1 90 1 152 1 264 7 77 1 78 1 268 2 324 3 357 2 50 1 207 3 159 1 42 1 34 1 177 1 320 1 
1 4 263 1 90 1 152 1 264 7 77 1 78 1 268 2 324 3 357 2 50 1 207 3 159 1 42 1 34 1 177 1 320 1 
1 4 263 1 90 1 152 1 264 7 77 1 78 1 268 2 324 3 357 2 50 1 207 3 159 1 148 1 42 1 34 1 177 1 320 1 
140 1 1 16 263 4 90 1 295 1 264 31 186 4 268 3 324 15 357 5 50 1 244 3 207 10 149 1 34 2 228 1 177 4 152 1 61 2 179 1 305 3 77 2 78 5 233 3 307 3 155 1 182 1 157 1 159 1 19 1 311 1 42 2 347 1 320 2 
1 5 263 1 264 9 268 2 324 4 357 3 50 1 207 4 34 1 177 1 152 1 61 4 179 2 77 1 78 1 155 1 157 2 216 1 159 1 19 2 42 1 347 2 320 1 200 1 
141 1 321 1 355 1 297 1 119 1 120 1 94 1 28 1 273 1 101 1 126 2 337 1 76 1 106 1 194 2 154 1 133 1 80 1 259 1 196 2 82 1 309 1 284 1 135 1 111 1 344 1 164 1 345 1 66 1 380 1 
141 1 221 1 321 1 189 1 355 1 119 1 297 1 120 2 94 1 28 1 273 1 101 1 126 3 337 1 76 1 106 1 194 2 281 1 154 1 133 1 80 1 259 1 196 3 309 1 284 1 111 1 344 1 164 1 345 1 66 1 
141 1 321 1 189 1 355 1 297 1 119 1 120 2 94 1 28 1 273 1 101 1 126 2 76 1 106 1 194 2 281 1 154 1 133 1 259 1 196 2 309 1 111 1 164 1 345 1 66 1 
141 1 166 1 221 1 321 1 118 1 355 1 297 1 55 1 126 1 277 1 14 1 76 2 369 1 80 1 195 1 259 1 196 1 284 1 18 1 111 2 345 2 66 2 378 1 
141 1 321 1 189 1 355 1 297 1 119 1 28 1 273 1 126 1 337 1 76 1 106 1 194 2 154 1 133 1 80 1 259 1 196 1 82 1 309 1 284 1 111 1 344 1 345 1 66 1 380 1 
125 1 
141 1 223 1 321 2 267 1 5 5 226 2 97 2 272 1 52 1 51 1 328 2 99 1 55 1 102 2 191 3 277 1 333 2 336 1 278 1 192 2 14 1 236 1 160 1 161 1 112 1 163 1 166 2 24 1 116 4 68 1 118 1 355 2 297 1 121 1 122 2 70 2 171 1 299 1 245 1 360 2 301 2 302 1 248 1 130 5 212 6 255 1 258 2 259 2 260 1 373 2 41 1 312 1 313 1 374 1 319 1 
24 1 116 2 68 1 267 1 5 3 26 1 272 1 299 1 99 1 360 1 302 1 191 1 248 1 336 1 130 3 212 2 236 1 312 1 41 1 313 1 161 1 112 1 
24 1 116 3 68 1 267 1 5 3 26 1 70 1 122 1 272 1 299 1 99 1 302 1 191 1 248 1 336 1 130 3 212 1 236 1 312 1 41 1 313 1 160 1 161 1 112 1 
24 1 116 3 68 1 267 1 5 3 26 1 70 1 122 1 272 1 299 1 99 1 328 1 360 1 302 1 191 1 248 1 336 1 130 3 212 2 236 1 312 1 41 1 313 1 160 1 161 1 112 1 
24 1 143 1 116 6 223 1 68 1 267 1 5 5 26 1 121 1 122 5 70 4 226 2 97 1 171 1 272 1 51 1 299 1 245 1 99 1 328 4 9 1 360 4 301 2 302 1 191 3 333 2 248 1 364 1 336 1 130 5 212 7 192 2 258 2 236 1 373 1 312 1 41 1 160 5 313 1 161 1 374 1 112 1 293 1 139 1 
223 1 267 1 5 4 272 1 97 1 226 2 51 1 99 1 328 2 102 2 191 2 333 2 336 1 192 2 236 1 160 1 161 1 112 1 24 1 116 4 68 1 121 1 70 2 122 2 171 1 299 1 245 1 360 2 301 2 302 1 248 1 130 4 212 4 258 2 260 1 312 1 41 1 373 1 313 1 374 1 
24 1 143 1 116 4 223 1 68 1 267 1 5 4 121 1 122 1 70 2 226 2 97 1 272 1 171 1 51 1 299 1 328 2 245 1 99 1 360 2 9 1 301 2 302 1 191 2 333 2 248 1 336 1 130 4 212 4 192 2 258 2 236 1 373 1 312 1 41 1 160 1 313 1 161 1 374 1 112 1 139 1 
24 1 143 1 116 4 223 1 68 1 267 1 5 4 121 1 122 1 70 2 226 2 97 1 272 1 171 1 51 1 299 1 328 2 245 1 99 1 360 2 9 1 301 2 302 1 191 2 333 2 248 1 336 1 130 4 212 4 192 2 258 2 236 1 373 1 312 1 41 1 160 1 313 1 161 1 374 1 112 1 139 1 
24 1 116 4 265 2 223 1 68 1 267 1 117 1 5 4 121 1 122 1 70 2 97 1 272 1 171 1 51 1 299 1 328 2 245 1 99 1 360 2 32 2 102 2 10 1 302 1 191 2 333 2 248 1 336 1 130 4 212 4 192 2 251 1 236 1 373 1 312 1 41 1 160 1 313 1 161 1 112 1 139 1 
24 1 143 1 116 5 223 1 68 1 267 1 5 4 121 1 122 1 70 3 226 2 97 1 171 1 272 1 51 1 299 1 245 1 99 1 328 3 360 3 9 1 301 2 302 1 191 2 333 2 248 1 336 1 130 4 212 5 192 2 258 2 236 1 373 1 312 1 41 1 160 1 313 1 161 1 374 1 112 1 293 1 139 1 
24 1 143 1 116 5 223 1 68 1 267 1 5 4 121 1 122 1 70 3 226 2 97 1 171 1 272 1 51 1 299 1 245 1 99 1 328 3 360 3 9 1 301 2 302 1 191 2 333 2 248 1 336 1 130 4 212 5 192 2 258 2 236 1 373 1 312 1 41 1 160 1 313 1 161 1 374 1 112 1 293 1 139 1 
265 2 223 1 267 1 5 4 272 1 97 1 51 1 99 1 328 2 102 2 191 2 333 2 336 1 192 2 236 1 160 1 161 1 112 1 24 1 116 4 68 1 121 1 70 2 122 1 171 1 299 1 245 1 360 2 32 2 302 1 248 1 130 4 212 4 251 1 260 1 312 1 41 1 373 1 313 1 
1 3 263 1 264 6 268 1 6 1 324 3 356 1 357 2 50 1 207 2 54 1 34 1 275 1 177 1 229 1 152 1 61 2 179 1 371 2 157 1 159 1 19 1 44 1 347 1 320 1 67 1 
1 8 140 1 263 1 295 1 264 14 167 1 186 3 6 4 324 6 357 1 356 11 7 1 244 3 207 2 177 2 229 11 35 1 61 4 179 2 305 2 78 1 233 2 307 1 371 1 65 1 157 2 287 1 341 1 19 2 343 1 44 1 347 2 67 2 
0 1 1 1 141 1 166 1 351 1 264 2 167 1 45 1 321 1 6 1 355 1 324 1 297 1 270 1 358 1 272 2 7 1 299 2 55 1 31 1 277 1 129 1 35 1 180 1 179 1 61 2 282 1 259 1 156 1 371 1 157 1 312 1 19 1 375 1 316 1 44 1 347 1 67 1 
0 1 1 10 263 3 141 2 220 1 264 20 321 3 268 1 189 1 6 7 324 10 270 1 50 1 7 1 272 3 329 1 55 2 277 2 58 2 229 7 152 1 338 1 61 6 233 2 282 2 340 2 157 3 159 1 19 3 347 3 67 3 166 1 351 2 167 1 355 3 297 2 357 4 356 7 358 2 299 3 172 2 207 8 29 2 31 1 34 1 177 3 35 1 179 3 305 2 78 4 307 2 259 3 371 2 39 2 312 1 316 1 375 2 44 3 320 1 
0 1 1 1 141 2 166 2 264 2 25 1 167 1 240 1 321 8 118 1 189 1 355 7 324 1 297 2 326 1 272 1 7 1 299 1 55 2 31 1 11 2 275 1 277 3 14 1 193 1 61 4 179 2 79 1 132 1 259 8 157 2 135 1 312 1 19 2 316 1 44 2 347 2 346 1 67 2 
0 1 1 1 263 1 142 1 264 3 6 1 324 2 357 1 356 1 272 1 207 1 299 1 361 1 177 1 229 1 35 1 61 2 179 1 305 1 63 1 233 1 307 1 157 1 19 1 312 1 316 1 44 1 347 1 67 1 
229 1 1 2 264 2 179 1 61 2 78 1 233 1 6 1 81 1 356 1 157 1 207 1 19 1 275 1 44 1 347 1 67 1 177 1 
229 1 263 1 264 2 179 1 61 2 307 1 6 1 324 2 357 1 356 1 157 1 207 1 19 1 275 1 44 1 347 1 67 1 331 1 
229 2 1 2 263 1 264 4 179 1 61 2 305 1 78 1 307 1 233 1 6 2 324 2 357 1 356 2 157 1 207 2 19 1 275 1 44 1 347 1 67 1 177 1 
229 1 1 2 264 2 179 1 61 2 78 1 132 1 233 1 6 1 81 1 356 1 157 1 207 1 19 1 44 1 347 1 67 1 177 1 
229 1 263 1 264 2 179 1 61 2 132 1 307 1 6 1 324 2 357 1 356 1 157 1 207 1 19 1 44 1 347 1 67 1 331 1 
229 2 1 2 263 1 264 4 179 1 61 2 305 1 78 1 307 1 132 1 233 1 6 2 324 2 357 1 356 2 157 1 207 2 19 1 44 1 347 1 67 1 177 1 
229 2 1 2 263 1 264 4 179 1 61 2 305 1 78 1 307 1 233 1 6 2 324 2 357 1 356 2 157 1 207 2 19 1 44 1 347 1 67 1 177 1 
1 1 141 1 166 1 264 2 351 1 167 1 321 1 355 1 324 1 297 1 358 1 272 1 7 1 299 1 29 1 55 1 277 1 179 1 61 2 282 1 259 1 371 1 157 1 19 1 375 1 44 1 347 1 67 1 
1 1 141 1 166 1 264 2 351 1 167 1 321 1 354 1 69 1 355 1 324 1 297 1 272 1 7 1 299 1 55 1 277 1 179 1 61 2 282 1 259 1 371 1 235 1 157 1 19 1 44 1 347 1 67 1 
229 2 1 2 263 1 35 1 264 4 179 1 61 2 305 1 78 1 307 1 233 1 6 2 324 2 357 1 356 2 157 1 207 2 19 1 44 1 347 1 67 1 177 1 
1 2 263 1 141 1 264 4 351 1 321 1 6 2 324 2 355 1 297 1 357 1 356 2 358 1 272 1 207 2 299 1 29 1 55 1 177 1 277 1 229 2 179 1 61 2 305 1 78 1 307 1 233 1 282 1 259 1 39 1 157 1 135 1 19 1 375 1 44 1 347 1 67 1 
0 1 1 2 263 1 264 3 224 1 6 1 324 1 356 1 272 1 207 1 299 1 361 1 177 1 229 1 35 1 61 2 179 1 305 1 78 1 63 1 307 1 233 1 157 1 19 1 312 1 316 1 44 1 347 1 67 1 
1 9 140 1 263 3 295 1 264 19 202 1 352 1 186 2 324 10 357 3 95 1 244 1 207 6 57 2 362 1 177 3 105 2 59 1 61 4 179 2 305 3 38 1 78 3 233 3 307 3 157 2 19 2 21 1 347 2 200 1 
1 8 263 1 295 2 264 16 202 1 352 1 186 2 324 8 95 1 244 2 57 4 246 1 177 1 105 1 153 1 61 2 179 1 305 1 38 2 307 1 233 1 157 1 19 1 21 2 347 1 200 1 
1 11 140 1 263 2 295 3 264 23 202 1 352 1 186 4 324 12 357 1 95 1 244 3 207 3 330 1 57 4 246 1 177 2 105 1 59 1 153 1 61 4 179 2 305 2 38 1 78 2 233 2 307 2 157 2 19 2 21 2 347 2 200 1 
1 11 140 1 263 2 295 3 264 23 202 1 352 1 186 4 324 12 357 2 95 1 244 3 207 4 330 1 57 4 246 1 177 2 105 1 59 1 153 1 61 4 179 2 305 2 38 1 78 2 233 2 307 2 157 2 19 2 21 2 347 2 200 1 
1 27 140 2 263 8 295 2 264 51 202 1 352 1 186 4 268 3 324 24 357 8 95 1 50 3 244 4 207 13 57 4 34 3 246 1 177 8 105 1 152 3 153 1 61 2 179 1 305 5 38 1 78 5 233 5 307 5 157 1 159 3 19 1 343 2 21 1 347 1 320 3 200 1 
285 1 286 1 84 1 239 1 30 1 257 1 323 1 325 1 262 1 335 1 
33 1 280 1 
84 1 232 1 239 1 290 1 30 1 87 1 323 1 262 1 335 1 
130 1 91 1 239 1 322 1 5 1 257 1 323 1 325 1 286 1 122 1 84 1 96 2 30 1 227 1 113 1 276 1 262 1 335 1 
130 1 91 1 239 1 322 1 5 1 257 1 323 1 325 1 286 1 122 1 84 1 96 2 30 1 227 1 113 1 276 1 262 1 335 1 
130 1 91 1 239 1 322 1 5 1 257 1 323 1 325 1 286 1 122 1 84 1 96 2 30 1 227 1 113 1 276 1 262 1 335 1 
204 1 46 1 49 1 
204 1 46 1 49 1 
350 1 138 1 
350 1 204 1 138 1 
98 1 288 1 
0 2 165 1 237 1 239 1 5 1 353 1 323 1 96 1 242 1 272 2 299 2 98 1 53 1 227 1 30 1 33 1 276 1 335 1 130 1 280 1 371 1 84 1 288 1 312 2 316 2 349 1 262 1 
46 1 49 1 
350 1 204 1 138 1 
1 1 141 1 264 2 167 1 240 1 321 2 324 1 355 2 297 1 272 2 7 1 299 2 71 1 55 1 173 1 11 2 277 1 35 1 37 1 179 1 61 2 306 1 259 2 157 1 312 2 19 1 291 1 44 1 347 1 346 1 67 1 
141 1 2 1 337 1 321 2 194 2 189 1 154 1 133 1 355 2 259 2 119 1 297 1 309 1 83 1 28 1 273 1 135 1 345 1 72 1 
141 1 337 1 321 1 194 2 189 1 154 1 133 1 355 1 259 1 119 1 309 1 297 1 83 1 28 1 273 1 274 1 345 1 
141 1 2 1 166 1 14 1 321 1 118 1 355 1 259 1 370 1 297 1 55 1 345 1 378 1 277 1 
2 1 141 1 337 1 321 1 194 2 189 1 154 1 133 1 355 1 259 1 119 1 297 1 309 1 83 1 28 1 273 1 345 1 72 1 
188 1 
115 1 122 1 97 1 373 1 54 1 160 1 363 1 
223 1 5 1 121 1 122 2 226 1 97 1 171 1 51 1 102 1 301 1 191 1 130 1 212 1 258 1 373 1 160 1 374 1 
141 3 263 2 223 4 321 3 92 2 5 5 271 2 226 6 97 8 51 4 55 3 102 12 103 1 191 3 277 10 60 2 231 2 15 2 233 2 282 3 340 2 160 2 162 1 292 2 115 1 166 1 24 2 203 2 205 1 355 3 297 4 121 4 243 2 122 8 171 4 300 2 363 1 247 1 177 2 130 5 212 5 368 3 305 2 255 2 307 2 259 3 40 1 135 1 373 9 137 6 217 6 379 2 319 1 219 1 
0 1 295 1 223 1 186 1 267 1 92 1 187 1 121 1 122 2 272 1 171 1 226 1 244 1 97 2 299 1 8 1 51 1 102 2 246 1 334 1 60 1 255 1 63 1 198 1 312 1 373 2 160 1 137 2 217 2 316 1 319 1 218 1 
0 1 263 1 143 1 223 1 267 1 92 2 5 1 121 1 272 1 171 1 97 2 299 1 51 1 8 1 34 1 177 2 334 1 12 1 130 1 152 1 60 1 63 1 198 1 373 2 312 1 316 1 320 1 218 1 
121 1 115 1 122 1 97 1 171 1 51 1 373 1 223 1 160 1 363 1 
263 2 60 1 305 2 92 2 233 2 307 2 340 1 122 5 97 5 226 5 373 5 137 5 217 5 102 10 177 2 
130 1 212 1 122 1 160 1 5 1 191 1 
141 1 166 2 223 1 321 4 5 3 118 1 355 4 297 1 121 2 171 2 97 2 52 1 51 2 55 1 103 1 191 2 277 1 278 1 130 3 212 4 252 1 14 1 255 2 259 4 234 1 373 2 314 1 162 2 319 2 
0 2 141 1 166 1 264 1 351 1 321 1 324 1 355 1 297 1 27 1 7 1 272 3 358 1 299 3 29 1 55 1 277 1 61 2 179 1 63 2 259 1 282 1 371 1 198 1 157 1 19 1 312 2 316 2 375 1 44 1 347 1 67 1 
223 1 255 1 268 1 121 1 122 4 226 2 97 2 171 1 51 1 373 1 137 2 160 2 102 4 217 2 319 1 
239 1 48 1 335 1 
17 1 98 1 239 1 325 1 335 1 
239 1 48 1 335 1 
239 1 48 1 335 1 
241 1 239 1 335 1 
241 1 239 1 335 1 
241 1 239 1 335 1 
239 1 335 1 
30 1 262 1 
1 4 263 1 152 1 264 8 179 2 61 4 268 1 78 1 155 1 324 4 357 2 157 2 50 1 207 3 159 1 19 2 34 1 347 2 177 1 320 1 
1 3 263 1 152 1 264 6 268 1 324 3 357 2 50 1 207 2 159 1 54 1 34 1 320 1 177 1 
1 2 263 1 264 4 185 1 179 1 61 2 305 1 78 1 307 1 233 1 324 2 357 1 157 1 207 2 19 1 347 1 177 1 
1 3 140 1 263 1 295 1 264 7 186 2 305 1 78 1 307 1 233 1 324 4 357 1 244 1 207 2 177 1 
140 1 1 11 263 3 264 23 186 2 4 1 268 1 324 12 357 5 50 1 244 2 207 9 34 2 177 3 152 1 305 2 179 2 61 4 78 4 233 2 307 2 155 2 65 1 157 2 159 1 19 2 343 1 347 2 320 2 
264 1 186 1 324 1 
1 1 244 1 264 1 
1 3 263 1 264 6 185 1 61 2 179 1 305 1 78 1 233 1 307 1 324 3 340 1 357 2 157 1 207 3 19 1 347 1 177 1 
1 1 295 1 264 2 179 1 61 2 186 1 324 1 157 1 244 1 19 1 347 1 246 1 200 1 
1 3 263 1 152 1 264 6 78 1 324 3 357 1 207 2 34 1 177 1 320 1 
1 1 264 3 4 1 179 1 61 2 78 1 155 1 324 2 357 1 157 1 50 1 207 2 159 1 19 1 34 1 347 1 320 1 
12 1 1 5 263 2 152 1 264 10 61 2 179 1 78 2 324 5 357 3 157 1 207 5 19 1 34 2 347 1 320 2 177 2 200 1 
1 2 264 2 179 1 61 2 78 1 233 1 157 1 207 1 19 1 347 1 177 1 200 1 
1 2 263 1 264 4 179 1 61 2 305 1 78 1 307 1 233 1 324 2 357 1 157 1 207 2 19 1 347 1 177 1 200 1 
1 1 59 1 264 3 4 1 179 3 61 6 78 1 155 1 324 2 357 1 157 3 207 2 19 3 34 1 347 3 320 1 200 1 
1 16 140 1 263 5 295 1 264 34 185 1 4 1 186 4 268 1 324 18 357 7 50 1 244 3 207 12 149 1 34 3 228 1 177 5 152 2 59 1 61 10 179 5 305 3 78 5 233 3 307 3 155 2 182 1 157 5 159 1 19 5 347 5 320 3 200 1 
1 14 263 4 295 1 264 24 186 1 268 1 324 10 357 5 50 1 244 1 147 1 207 9 34 2 246 1 177 5 104 1 12 1 152 2 61 4 179 2 305 2 78 4 233 2 307 1 155 1 157 2 159 1 183 1 19 2 347 2 348 1 320 2 200 1 
1 12 140 1 263 2 295 1 264 20 185 1 186 2 268 1 324 8 357 3 50 1 244 1 207 5 147 1 34 1 246 1 177 4 104 1 152 1 61 6 179 3 305 3 78 2 233 3 307 1 155 1 157 3 159 1 183 1 19 3 348 1 347 3 320 1 200 1 
1 8 263 3 295 1 264 15 185 1 186 1 268 1 324 7 357 3 244 1 50 1 207 4 34 2 246 1 177 3 12 1 152 2 61 4 179 2 78 1 157 2 159 1 19 2 347 2 320 2 200 1 
1 8 263 3 295 1 264 15 185 1 186 1 268 1 324 7 357 4 244 1 50 1 207 7 34 2 246 1 177 3 12 1 152 2 61 4 179 2 78 3 157 2 159 1 19 2 347 2 320 2 200 1 
1 14 263 4 295 1 264 24 186 1 268 1 324 10 357 5 50 1 244 1 147 1 207 9 34 2 246 1 177 5 104 1 12 1 152 2 61 4 179 2 305 2 78 4 233 2 307 1 155 1 157 2 159 1 183 1 19 2 347 2 348 1 320 2 200 1 
1 1 295 1 264 2 179 1 61 2 186 1 324 1 157 1 244 1 19 1 347 1 246 1 200 1 
1 1 295 1 264 2 185 1 179 2 61 4 186 1 324 1 244 1 157 2 19 2 347 2 246 1 200 1 
1 1 59 1 295 1 264 2 179 2 61 4 186 1 324 1 244 1 157 2 19 2 347 2 246 1 200 1 
1 3 263 1 152 1 264 7 78 3 324 4 357 3 50 1 207 6 159 2 34 3 320 3 177 1 
1 1 59 1 295 1 264 2 179 2 61 4 186 1 324 1 244 1 157 2 19 2 347 2 246 1 200 1 
206 1 108 1 371 1 272 1 299 1 312 1 248 1 
184 1 201 1 266 1 283 1 108 1 206 1 371 1 272 1 299 1 312 1 289 1 248 1 
141 1 166 1 14 1 55 1 54 1 321 1 118 1 277 1 259 1 355 1 297 1 
0 1 141 1 166 1 351 1 321 1 282 1 355 1 259 1 297 1 371 1 272 2 358 1 299 2 55 1 312 1 31 1 316 1 277 1 
336 1 0 1 141 1 351 1 321 1 267 1 282 2 355 1 259 1 297 1 371 1 271 1 272 2 358 1 299 2 55 2 312 2 31 1 292 1 316 2 162 1 302 1 277 3 
0 1 141 1 351 1 321 2 267 1 354 1 355 2 297 1 272 2 271 1 359 1 299 2 55 2 31 1 302 1 277 3 336 1 259 2 282 2 371 1 312 2 162 1 316 2 292 1 
130 2 141 1 212 1 166 1 24 1 253 1 368 1 62 1 321 3 5 2 15 1 282 1 355 3 259 3 297 1 122 1 271 1 359 1 55 1 160 1 292 1 162 1 277 4 
130 2 141 1 212 1 166 1 24 1 231 1 368 1 321 3 5 2 15 1 282 1 355 3 259 3 297 1 122 1 271 1 359 1 55 1 160 1 292 1 162 1 277 4 
141 1 193 1 321 1 259 1 355 1 297 1 
141 2 166 2 25 1 193 1 240 1 3 1 321 7 189 1 79 1 355 6 259 7 282 1 297 3 326 1 327 1 135 1 55 2 11 1 247 1 277 3 199 1 
1 3 0 1 263 1 141 1 264 6 351 1 321 1 268 1 6 1 324 3 355 1 297 1 356 1 357 2 50 1 272 2 358 1 207 2 299 2 172 1 71 1 29 1 55 1 31 1 34 1 177 1 277 1 229 1 152 1 35 1 179 2 61 4 282 1 259 1 371 2 39 1 157 2 135 1 159 1 312 1 19 2 316 1 375 1 44 2 347 2 320 1 67 2 
115 1 166 1 24 1 223 2 203 1 321 1 5 3 355 1 121 2 122 1 97 1 171 2 51 2 300 1 103 1 191 1 363 1 277 2 130 3 212 2 231 1 368 1 15 1 259 1 373 1 160 1 379 1 349 1 
141 1 193 1 321 2 15 1 355 2 259 2 282 1 297 2 40 1 135 1 55 1 247 1 277 2 
141 1 166 1 14 1 321 4 118 1 355 4 259 4 297 1 359 1 135 1 55 1 123 1 277 1 
141 1 3 1 321 2 181 1 355 2 259 2 282 1 297 2 327 1 329 1 158 1 55 1 162 1 277 1 
141 1 28 1 166 1 273 1 321 1 194 1 259 1 355 1 297 1 309 1 
141 1 135 1 55 1 240 1 321 2 306 1 189 1 277 1 259 2 355 2 297 1 
141 2 166 1 14 1 25 1 240 1 321 5 118 1 79 1 355 4 259 5 297 2 135 1 55 2 123 1 162 1 277 3 
141 2 166 1 14 1 240 1 321 5 118 1 79 1 355 4 259 5 297 2 135 1 55 2 123 1 162 1 128 1 277 3 
0 1 141 1 166 1 351 1 321 1 354 1 282 1 355 1 259 1 297 1 371 1 272 2 299 2 55 1 312 1 31 1 316 1 277 1 
141 1 3 1 321 1 355 1 259 1 282 1 297 2 327 1 55 1 162 1 247 1 277 1 199 1 
37 1 109 1 272 1 299 1 342 1 150 1 312 1 173 1 291 1 
109 1 85 1 211 1 
371 1 109 1 150 1 342 1 47 1 
336 1 130 2 24 1 267 1 5 2 47 2 371 1 122 1 109 1 85 1 342 2 150 2 160 1 86 1 161 1 302 1 318 1 349 1 211 1 
94 1 101 1 54 1 164 1 
284 1 94 1 101 1 164 1 126 1 80 1 196 1 
76 1 126 1 66 1 
269 1 80 1 196 3 284 1 310 2 94 1 101 1 315 1 164 1 126 3 332 1 380 1 
120 1 284 1 94 1 73 1 101 1 164 1 126 2 80 1 196 2 
238 1 194 1 80 1 133 1 196 1 284 1 273 1 101 1 175 1 126 1 380 1 
284 1 94 1 101 1 126 1 80 1 196 1 380 1 
284 1 94 2 164 1 126 1 80 1 196 1 380 1 
296 1 80 2 196 2 284 2 94 1 101 1 372 1 124 1 126 2 380 1 
80 1 196 1 284 1 94 1 146 1 164 1 126 1 22 1 380 1 
304 1 194 2 80 1 133 1 196 2 119 1 120 1 284 1 94 1 28 1 273 1 101 1 164 1 126 2 380 1 
222 1 73 1 80 2 196 4 120 2 284 2 94 1 208 1 101 2 164 1 175 1 126 4 380 1 
284 1 94 1 101 1 164 1 126 1 80 1 196 1 380 1 
269 1 80 1 196 4 120 2 310 1 284 1 94 2 208 1 101 3 315 1 164 2 175 1 126 4 22 1 
80 1 225 1 196 2 120 1 284 1 94 1 101 1 100 1 164 1 126 2 151 1 380 1 
367 1 269 1 80 1 196 3 284 1 310 2 94 1 101 1 315 2 164 1 126 3 380 1 
168 1 101 2 376 2 308 1 
284 1 256 1 126 1 80 1 196 1 380 1 
120 1 23 1 284 1 94 1 101 1 164 1 126 2 80 1 196 2 380 1 
317 1 
284 1 94 1 101 1 164 1 126 1 80 1 196 1 380 1 
23 1 80 1 196 3 120 1 284 1 310 1 94 1 101 1 164 1 126 3 380 1 
101 1 208 1 175 1 22 1 
94 1 101 1 

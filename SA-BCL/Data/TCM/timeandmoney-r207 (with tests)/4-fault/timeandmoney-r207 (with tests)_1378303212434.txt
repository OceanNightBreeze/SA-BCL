#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
317 2 173 1 132 1 226 2 359 9 1 2 336 3 53 1 232 2 81 1 56 2 82 1 282 1 234 1 203 1 366 1 87 1 214 1 348 2 284 1 164 1 351 1 64 4 196 2 101 6 168 5 46 9 224 1 
317 2 173 1 132 1 226 2 359 9 1 2 336 3 53 1 232 2 81 1 56 2 82 1 282 1 234 1 203 1 366 1 87 1 214 1 348 2 284 1 164 1 351 1 64 4 196 2 101 6 168 5 46 9 224 1 
317 2 173 1 132 1 226 2 359 10 1 2 336 4 53 1 232 2 81 1 56 2 82 1 282 1 234 1 203 1 366 1 87 1 214 1 348 2 284 1 164 1 351 1 64 5 196 2 101 7 168 6 46 10 224 1 
317 2 173 1 132 1 226 2 359 7 1 2 336 2 53 1 232 2 81 1 56 2 82 1 282 1 234 1 203 1 366 1 87 1 214 1 348 1 164 1 351 1 64 3 196 2 101 4 168 4 46 7 224 1 
317 1 173 1 348 2 284 1 359 4 1 1 336 1 53 1 81 1 232 1 82 1 56 1 64 2 196 1 101 3 168 3 46 4 87 1 
317 1 173 1 24 1 226 1 359 2 1 1 53 1 81 1 232 1 124 1 196 1 234 1 203 1 168 1 332 1 46 2 
173 1 214 1 226 1 359 3 336 1 53 1 81 1 232 2 64 1 196 2 101 1 168 2 46 3 
317 1 173 1 26 1 214 1 226 1 348 2 284 1 359 9 1 1 336 3 53 1 81 1 232 2 56 1 82 1 282 1 64 4 196 2 101 7 366 1 168 5 87 1 46 9 128 1 
317 1 173 1 26 1 214 1 226 1 348 2 284 1 359 9 1 1 336 3 53 1 81 1 232 2 56 1 82 1 282 1 64 4 196 2 101 7 366 1 168 5 87 1 46 9 128 1 
0 1 231 1 127 1 
3 2 127 1 370 1 
42 2 67 1 75 2 185 1 368 2 258 2 223 2 54 2 
22 1 227 1 302 1 75 2 133 1 27 1 155 1 52 1 54 2 181 1 137 1 6 2 185 1 32 1 236 1 368 3 258 2 119 1 322 1 346 2 243 1 211 1 37 1 10 1 326 1 166 2 290 1 216 1 42 3 67 1 267 1 270 2 149 2 16 1 294 1 223 2 19 1 
42 1 67 1 75 1 368 1 258 1 271 1 223 1 54 1 80 1 109 1 
152 1 264 1 106 1 123 1 231 1 178 1 80 1 42 1 57 1 368 1 222 1 127 1 223 1 316 1 
75 1 264 1 106 1 123 2 231 1 178 1 54 1 80 1 42 1 57 1 258 1 368 1 127 1 223 1 316 2 
300 1 36 1 123 1 295 1 316 1 
300 1 291 1 123 2 231 1 295 1 51 1 127 1 316 2 
123 1 295 1 316 1 
300 1 75 1 123 1 54 1 80 1 109 1 376 1 42 1 67 1 258 1 368 1 271 1 223 1 316 1 
127 1 
300 1 291 1 100 1 123 2 231 1 295 1 127 1 316 2 
299 1 300 2 162 2 123 5 231 1 327 1 66 1 5 1 147 1 219 2 291 1 8 2 33 1 295 2 127 1 252 1 209 1 161 1 316 5 
276 1 211 1 25 1 75 1 37 1 326 1 155 1 54 1 166 1 290 1 42 2 137 1 6 1 236 1 368 2 270 1 294 1 70 1 223 1 19 1 
0 1 185 1 
75 1 54 1 314 1 42 2 185 2 368 2 258 1 237 1 223 2 
276 1 175 1 350 1 
211 1 120 1 37 1 326 1 155 1 166 1 290 1 42 1 137 1 6 1 185 1 368 1 270 1 236 1 294 1 19 1 
152 1 25 1 75 4 153 1 54 4 248 1 42 5 353 1 185 1 368 5 258 1 237 1 70 2 223 5 
42 2 75 2 368 2 140 1 271 1 223 2 54 2 80 1 
42 3 75 3 185 1 258 1 368 3 70 1 223 3 54 3 
42 1 75 1 368 1 271 1 223 1 54 1 80 1 
314 1 42 1 75 1 368 1 258 1 237 1 223 1 54 1 80 1 
22 1 25 1 227 1 302 1 75 3 133 1 27 1 155 1 106 1 178 1 52 1 54 3 80 1 137 1 6 1 185 1 32 1 57 1 236 1 258 2 368 4 237 1 321 1 322 1 346 1 211 1 37 1 91 1 264 1 326 1 123 1 166 1 290 1 216 1 42 4 67 1 267 1 270 1 149 2 294 1 70 1 223 3 19 1 316 1 
248 1 152 1 42 2 75 1 185 1 368 2 70 1 223 2 54 1 
25 1 75 3 264 1 123 1 106 1 178 1 54 3 80 1 42 3 85 1 57 1 258 1 368 3 237 1 321 1 70 2 127 1 223 3 316 1 
276 1 42 2 75 2 175 1 368 2 258 1 237 1 70 1 223 2 54 2 
211 1 37 1 326 1 155 1 166 1 290 1 42 1 137 1 6 1 185 1 368 1 270 1 236 1 294 1 19 1 
211 1 61 1 37 1 326 1 155 1 166 1 42 1 137 1 6 1 184 1 185 1 368 1 270 1 236 1 19 1 
276 2 275 1 172 1 227 1 133 2 175 2 303 1 52 1 362 1 181 2 32 1 322 1 346 4 283 1 325 1 374 1 350 2 216 1 267 1 269 1 149 2 129 1 
42 1 75 1 368 1 106 1 223 1 140 1 54 1 80 1 
250 1 44 1 
250 1 44 1 
344 1 247 1 
344 1 247 1 
344 1 247 1 
343 1 250 1 44 1 
250 1 44 1 206 1 
250 2 306 1 44 2 286 1 344 1 247 1 
343 1 250 1 44 1 
343 1 250 1 44 1 
190 1 250 1 44 1 
190 1 250 1 44 1 
190 1 250 1 44 1 
150 1 47 1 75 2 228 1 77 1 280 1 54 2 111 1 342 1 185 1 138 1 368 2 206 1 239 1 309 1 123 1 93 1 42 2 217 1 250 1 220 1 44 1 223 2 316 1 
150 3 278 1 255 1 123 2 38 2 93 2 194 1 377 1 111 1 217 2 250 2 138 2 306 1 44 2 239 2 127 1 345 1 142 1 316 2 
56 1 317 1 1 1 
317 1 1 1 332 1 
364 1 56 2 317 3 233 1 126 1 332 1 
56 1 317 2 213 1 233 1 126 1 332 1 
56 1 317 2 233 1 126 2 332 1 
299 1 300 4 48 1 231 1 280 1 3 3 31 2 367 1 8 1 370 1 117 1 283 1 59 2 161 3 162 1 309 1 325 1 374 1 123 5 39 1 144 1 288 1 312 2 95 1 147 2 219 1 291 1 220 1 295 1 127 2 129 1 316 5 
299 1 300 7 48 3 231 1 3 9 257 1 5 1 31 6 367 2 8 2 369 5 370 3 117 1 88 1 283 3 59 6 161 8 162 2 309 4 325 3 36 5 374 3 143 1 123 9 39 2 289 1 94 1 354 1 147 6 219 2 291 1 295 6 127 5 129 3 316 9 
300 2 48 1 231 1 3 4 5 1 31 2 367 1 8 1 370 2 283 1 161 3 59 2 162 1 309 1 325 1 374 1 123 3 39 1 288 1 312 1 95 1 219 1 147 2 127 3 129 1 316 3 
300 3 48 2 231 1 3 7 257 1 5 1 31 4 367 1 8 1 370 3 283 2 59 4 161 5 162 1 309 2 325 2 374 2 123 4 39 1 288 1 312 2 94 1 95 1 354 1 219 1 147 4 127 4 129 2 316 4 
0 1 218 1 155 1 
155 1 176 1 
363 1 
37 1 236 1 155 1 
229 1 155 1 
236 1 155 1 
218 2 200 1 37 1 236 1 155 3 69 1 
324 1 151 3 320 2 133 3 374 1 182 1 181 4 281 1 96 1 112 1 197 1 235 1 356 2 7 1 296 1 346 7 283 1 
324 1 151 3 320 2 133 3 374 1 182 1 181 4 281 1 96 1 112 1 197 1 235 1 356 2 7 1 296 1 346 7 283 1 
324 1 151 3 320 2 133 3 374 1 182 1 181 4 281 1 96 1 112 1 197 1 235 1 356 2 7 1 296 1 357 1 346 7 283 1 
151 8 48 4 227 2 320 3 133 18 52 2 108 1 182 1 181 19 156 4 281 1 365 2 112 2 83 1 32 2 235 5 7 2 115 1 346 37 260 1 283 5 324 1 325 4 374 5 165 4 40 1 14 1 96 2 145 1 197 2 356 3 267 2 331 1 149 4 296 1 129 4 
324 1 151 4 227 2 320 2 133 4 374 1 52 2 182 1 181 5 365 1 96 1 112 1 157 1 197 1 158 1 32 2 235 1 356 3 267 2 7 1 149 4 296 1 346 9 283 1 
317 2 173 1 226 1 359 2 230 1 1 1 53 1 232 1 81 1 364 1 56 1 6 1 84 1 205 1 241 1 139 1 211 1 329 1 313 1 166 1 97 1 98 1 196 1 101 1 270 1 168 1 332 1 46 2 19 1 333 1 
317 2 173 1 226 1 360 1 359 3 230 1 1 1 53 1 232 1 364 1 56 1 6 1 84 1 205 1 241 1 211 1 308 1 329 1 313 1 166 1 97 1 98 1 196 1 101 2 270 1 168 1 332 1 46 3 380 1 19 1 
317 2 173 1 226 1 360 1 359 2 230 1 1 1 53 1 364 1 56 1 6 1 84 1 205 1 241 1 211 1 308 1 329 1 166 1 97 1 101 2 270 1 168 1 332 1 46 2 19 1 
211 1 226 2 49 1 263 1 359 1 256 1 230 2 155 1 232 1 166 1 97 2 137 1 68 1 196 1 6 1 236 1 270 1 45 1 380 1 46 1 241 2 19 1 170 1 
211 1 317 2 226 1 359 1 360 1 230 1 1 1 329 1 313 1 81 1 232 1 364 1 166 1 56 1 97 1 98 1 84 1 196 1 6 1 270 1 205 1 332 1 139 1 46 1 241 1 19 1 
202 1 
299 1 104 1 152 1 155 1 106 1 107 2 110 2 341 2 3 2 201 2 6 2 57 1 8 1 161 2 307 1 211 1 162 1 122 2 11 1 264 1 123 5 166 2 315 2 68 1 219 1 270 2 268 1 222 1 127 2 223 1 273 1 19 1 170 1 316 5 73 1 358 1 130 1 231 1 361 1 179 1 178 1 79 4 80 1 137 2 236 1 367 1 368 1 370 2 373 1 193 1 42 1 147 2 291 3 198 2 295 6 
130 1 104 1 152 1 264 1 106 1 123 3 178 1 79 2 80 1 42 1 201 1 291 1 100 1 57 1 268 1 368 1 295 2 222 1 223 1 307 1 316 3 73 1 
130 1 152 1 104 1 106 1 231 1 178 1 79 3 80 1 110 1 57 1 368 1 307 1 264 1 123 3 42 1 100 1 291 1 268 1 295 1 222 1 223 1 127 1 73 1 316 3 
130 1 152 1 104 1 106 1 231 1 178 1 79 3 80 1 110 1 341 1 201 1 57 1 368 1 307 1 264 1 123 3 42 1 291 1 100 1 268 1 222 1 295 2 223 1 127 1 73 1 316 3 
299 1 104 1 152 1 106 1 107 2 110 4 341 4 201 4 57 1 8 1 307 1 161 1 162 1 122 2 264 1 123 5 219 1 315 2 268 1 222 1 223 1 127 5 273 1 316 5 73 1 130 1 277 1 231 5 178 1 180 1 79 6 80 1 368 1 370 2 193 1 42 1 99 1 147 1 100 1 291 3 148 1 43 1 198 2 295 7 
299 1 152 1 104 1 106 1 107 2 110 2 3 2 341 2 201 2 57 1 8 1 307 1 161 1 162 1 122 2 264 1 123 4 219 1 315 2 268 1 222 1 273 1 223 1 127 2 316 4 73 1 130 1 231 1 178 1 79 4 80 1 368 1 370 2 373 1 193 1 42 1 147 1 291 2 198 2 295 4 
130 1 299 1 152 1 104 1 106 1 231 1 107 2 178 1 79 4 110 2 80 1 341 2 201 2 57 1 368 1 8 1 370 2 161 1 307 1 162 1 122 2 264 1 123 4 193 1 42 1 99 1 315 2 147 1 219 1 291 2 43 1 268 1 148 1 198 2 295 4 222 1 127 1 273 1 223 1 73 1 316 4 
130 1 299 1 152 1 104 1 106 1 231 1 107 2 178 1 79 4 110 2 80 1 341 2 201 2 57 1 368 1 8 1 370 2 161 1 307 1 162 1 122 2 264 1 123 4 193 1 42 1 99 1 315 2 147 1 219 1 291 2 43 1 268 1 148 1 198 2 295 4 222 1 127 1 273 1 223 1 73 1 316 4 
299 1 104 1 152 1 199 1 106 1 107 2 54 1 109 1 3 2 57 1 258 1 8 1 307 1 161 1 162 1 9 1 264 1 123 4 67 1 219 1 315 2 268 1 222 1 271 1 223 2 127 1 316 4 73 1 130 1 75 1 231 1 178 1 79 2 80 2 368 2 34 1 193 1 192 2 376 1 42 2 147 1 291 2 43 1 293 2 295 2 
299 1 130 1 152 1 104 1 277 1 106 1 231 1 107 2 178 1 79 5 80 1 110 3 341 3 201 3 57 1 368 1 8 1 370 2 161 1 307 1 162 1 122 2 264 1 123 4 193 1 42 1 99 1 315 2 147 1 219 1 291 2 43 1 148 1 268 1 198 2 222 1 295 5 127 1 273 1 223 1 73 1 316 4 
299 1 130 1 152 1 104 1 277 1 106 1 231 1 107 2 178 1 79 5 80 1 110 3 341 3 201 3 57 1 368 1 8 1 370 2 161 1 307 1 162 1 122 2 264 1 123 4 193 1 42 1 99 1 315 2 147 1 219 1 291 2 43 1 148 1 268 1 198 2 222 1 295 5 127 1 273 1 223 1 73 1 316 4 
130 1 299 1 104 1 152 1 199 1 106 1 107 1 178 1 79 2 80 1 3 1 57 1 368 1 8 1 161 1 307 1 162 1 264 1 373 1 123 3 192 1 193 1 42 1 315 1 147 1 219 1 291 1 293 1 268 1 295 1 222 1 223 1 73 1 316 3 
276 1 0 1 151 2 227 1 320 1 175 1 133 3 52 1 362 1 182 1 181 3 112 1 32 1 185 2 7 1 322 1 346 6 283 1 324 1 374 1 350 1 216 1 267 1 356 2 149 2 296 1 
22 1 276 11 253 1 151 1 48 2 227 2 133 6 175 4 52 2 181 8 156 3 185 1 32 2 235 1 115 1 119 1 322 1 346 14 283 1 325 2 374 2 245 1 165 3 350 11 265 1 40 1 216 2 145 1 378 1 267 2 149 4 129 1 
21 1 22 1 253 1 25 1 227 1 75 1 175 1 133 1 155 1 52 1 54 1 181 1 137 1 6 1 185 1 32 1 236 1 368 2 238 1 322 1 119 1 346 2 211 1 120 1 37 1 326 1 63 1 166 1 290 1 216 1 42 2 267 1 270 1 294 1 149 2 70 1 223 1 19 1 
253 1 151 6 48 2 155 2 52 3 54 1 304 2 55 2 112 1 6 3 7 1 119 1 346 20 211 2 350 7 166 3 13 1 216 3 356 2 267 3 167 2 270 3 70 1 223 1 19 2 129 2 171 2 22 1 276 7 25 1 227 3 75 1 360 1 320 1 133 10 27 2 175 7 182 1 181 10 137 1 185 2 32 3 235 4 368 3 236 2 186 1 322 3 283 3 324 1 325 2 37 2 326 2 374 3 375 1 290 2 42 3 149 6 294 2 296 1 
22 1 227 2 75 1 319 1 360 1 133 1 155 3 30 1 52 2 362 1 54 1 181 1 135 1 137 2 6 7 32 2 368 1 236 2 322 2 119 1 160 1 346 2 243 2 211 2 191 1 166 8 42 1 216 2 249 1 68 1 267 2 270 8 149 4 70 1 223 1 72 1 19 2 333 1 170 1 
276 1 253 1 48 1 227 1 75 1 175 1 133 2 52 1 54 1 181 1 32 1 258 1 368 1 237 1 322 1 346 3 283 1 325 1 374 1 330 1 350 1 216 1 42 1 267 1 149 2 223 1 129 1 
276 1 275 1 151 1 227 1 325 1 175 1 374 1 52 1 350 1 362 1 181 2 216 1 32 1 235 1 267 1 149 2 322 1 346 2 
276 1 227 1 175 1 133 2 52 1 303 1 350 1 362 1 216 1 32 1 267 1 149 2 322 1 129 1 346 2 283 1 
276 2 151 1 48 1 227 1 175 2 133 2 52 1 362 1 181 2 32 1 235 1 322 1 346 4 283 1 325 1 374 1 350 2 216 1 267 1 149 2 129 1 
276 1 275 1 151 1 227 1 325 1 175 1 374 1 52 1 350 1 181 2 216 1 249 1 32 1 235 1 267 1 149 2 322 1 346 2 
276 1 227 1 175 1 133 2 52 1 303 1 350 1 216 1 249 1 32 1 267 1 149 2 322 1 129 1 346 2 283 1 
276 2 48 1 227 1 325 1 133 2 175 2 374 1 52 1 350 2 181 2 216 1 249 1 32 1 267 1 149 2 129 1 322 1 346 4 283 1 
276 2 151 1 48 1 227 1 325 1 133 2 175 2 374 1 52 1 350 2 181 2 216 1 32 1 235 1 267 1 149 2 129 1 322 1 346 4 283 1 
22 1 227 1 27 1 133 1 155 1 52 1 181 1 137 1 6 1 185 1 32 1 236 1 368 1 119 1 322 1 346 2 211 1 37 1 326 1 166 1 290 1 42 1 216 1 267 1 270 1 294 1 149 2 19 1 
22 1 227 1 133 1 155 1 52 1 181 1 137 1 184 1 6 1 185 1 32 1 236 1 368 1 119 1 322 1 346 2 211 1 61 1 37 1 326 1 246 1 166 1 42 1 216 1 267 1 270 1 149 2 19 1 
276 2 253 1 151 1 48 1 227 1 175 2 133 2 52 1 181 2 32 1 235 1 322 1 346 4 283 1 325 1 374 1 350 2 216 1 267 1 149 2 129 1 
276 2 151 1 48 1 227 1 133 2 175 2 27 1 155 1 52 1 181 2 6 1 32 1 235 1 236 1 368 1 322 1 346 4 283 1 211 1 325 1 37 1 374 1 326 1 350 2 166 1 290 1 42 1 216 1 267 1 270 1 294 1 149 2 129 1 19 1 171 1 333 1 
276 1 253 1 151 1 48 1 227 1 75 1 133 1 175 1 52 1 54 1 181 2 32 1 235 1 258 1 368 1 237 1 322 1 346 3 283 1 325 1 374 1 350 1 216 1 42 1 267 1 149 2 223 1 129 1 20 1 
151 12 48 7 52 4 338 1 156 5 339 1 157 1 112 2 113 1 115 2 7 2 118 1 346 64 210 2 212 1 60 1 163 4 262 1 349 1 165 5 12 1 267 4 356 3 129 7 74 1 227 4 320 2 133 31 181 33 182 2 136 1 365 2 32 4 235 9 283 9 324 2 325 7 374 9 195 1 40 2 145 3 149 8 296 2 297 1 
151 9 48 7 227 4 320 1 133 25 52 4 182 1 338 1 181 28 339 1 156 4 365 2 136 1 112 1 157 1 32 4 113 1 235 7 7 1 115 2 118 1 210 1 346 53 283 7 324 1 60 1 262 1 163 4 325 7 349 1 374 8 165 4 195 1 12 1 40 2 145 2 356 2 267 4 149 8 296 1 129 6 297 1 74 1 
151 8 48 7 227 2 320 1 133 25 52 2 182 1 338 1 181 27 339 1 156 4 365 1 136 1 112 1 157 1 32 2 235 7 7 1 115 2 118 1 210 1 346 52 283 8 324 1 60 1 262 1 163 4 325 7 349 1 374 8 165 4 195 1 12 1 40 2 145 2 356 1 267 2 149 4 296 1 129 7 297 1 74 1 
151 11 48 8 52 4 338 1 156 4 339 1 340 1 157 1 112 1 113 1 115 2 7 1 118 1 346 57 210 1 60 1 163 4 262 1 349 1 165 4 12 1 267 4 356 2 129 7 74 1 227 4 320 1 133 27 181 30 182 1 136 1 365 2 32 4 235 9 283 8 324 1 325 8 374 9 195 2 40 2 145 2 149 8 296 1 297 1 
151 3 48 3 227 3 133 12 52 3 338 1 181 14 339 1 156 2 365 2 136 1 157 1 32 3 235 2 118 1 210 2 346 26 283 2 60 1 262 1 163 4 325 3 349 1 374 3 165 2 195 1 12 1 145 2 356 1 267 3 149 6 129 2 74 2 297 1 
377 1 217 1 138 1 250 1 306 1 44 1 239 1 159 1 93 1 142 1 
228 1 206 1 
23 1 217 1 76 1 138 1 250 1 204 1 44 1 239 1 93 1 
343 1 240 1 
190 1 286 1 141 1 
150 2 255 1 123 1 38 1 93 1 194 1 377 1 111 1 217 1 250 1 138 1 306 1 44 1 239 1 127 1 345 1 142 1 316 1 
150 2 255 1 123 1 38 1 93 1 194 1 377 1 111 1 217 1 250 1 138 1 306 1 44 1 239 1 127 1 345 1 142 1 316 1 
150 2 255 1 123 1 38 1 93 1 194 1 377 1 111 1 217 1 250 1 138 1 306 1 44 1 239 1 127 1 345 1 142 1 316 1 
343 1 286 1 240 1 
343 1 286 1 240 1 
190 1 141 1 
190 1 286 1 141 1 
47 1 342 1 
150 1 300 1 47 1 228 1 75 2 77 1 280 1 54 2 4 1 342 1 185 1 138 1 368 2 206 1 239 1 309 1 123 1 38 1 93 1 194 1 42 2 217 1 250 1 220 1 44 1 223 2 316 1 
22 1 253 1 227 1 133 1 155 1 177 1 52 1 181 1 135 1 6 2 32 1 236 1 368 2 114 1 322 1 119 1 346 2 243 2 211 1 191 1 285 1 287 1 166 2 216 1 15 1 42 2 267 1 270 2 149 2 223 2 19 1 
211 1 317 2 62 1 360 1 105 1 154 1 230 1 1 1 313 1 364 1 166 2 56 1 6 2 84 1 270 2 205 1 332 1 19 1 333 1 
211 1 317 2 62 1 189 1 360 1 230 1 1 1 313 1 364 1 166 1 56 1 6 1 84 1 270 1 205 1 332 1 19 1 
211 1 49 1 105 1 230 1 155 1 166 1 137 1 6 1 68 1 236 1 270 1 17 1 19 1 170 1 
211 1 317 2 62 1 360 1 105 1 154 1 230 1 1 1 313 1 364 1 166 1 56 1 6 1 84 1 270 1 205 1 332 1 19 1 
244 1 
66 1 0 1 147 1 231 1 127 1 209 1 161 1 
299 1 231 1 3 1 8 1 370 1 161 1 162 1 122 1 123 1 147 1 219 1 291 1 198 1 295 1 273 1 127 2 316 1 
299 2 48 1 50 1 155 3 176 2 178 1 304 1 3 6 200 1 137 1 31 3 6 1 236 1 367 1 8 2 116 1 370 3 371 1 283 1 59 3 161 4 187 1 211 2 162 2 325 1 37 1 374 1 123 2 166 1 147 3 219 2 291 1 355 1 270 1 295 2 169 1 127 3 129 1 19 1 316 2 225 1 
299 2 48 2 231 2 179 1 156 1 3 6 136 1 31 5 367 1 8 2 370 3 59 5 161 8 283 2 35 1 60 1 162 2 262 1 325 2 92 1 374 2 123 1 165 1 311 2 12 1 145 1 219 2 147 5 291 1 295 1 127 5 129 2 298 1 316 1 297 1 
299 1 75 1 54 1 182 1 80 1 109 1 112 1 368 1 258 1 7 1 8 1 283 1 161 2 162 1 92 1 374 2 123 1 311 2 376 1 42 1 67 1 219 1 147 2 148 1 271 1 223 1 103 1 316 1 
299 1 162 1 231 1 66 1 219 1 147 1 8 1 127 1 209 1 161 1 
48 2 325 2 92 1 374 2 304 1 3 10 147 5 31 5 370 5 127 5 129 2 59 5 283 2 161 5 
291 1 123 1 231 1 295 1 127 1 316 1 
299 1 131 1 155 1 361 1 179 2 78 2 5 1 137 2 6 4 236 1 367 2 8 2 207 1 323 1 161 2 211 1 162 2 11 1 123 3 166 4 219 2 147 2 68 1 291 2 270 4 295 4 19 1 316 3 170 1 
22 1 227 1 302 1 75 2 133 1 27 1 155 1 52 1 54 2 137 1 6 1 185 1 32 1 368 3 258 2 236 1 322 1 346 1 211 1 37 1 326 1 166 1 290 1 42 3 216 1 67 1 267 1 270 1 149 2 294 1 223 2 19 1 
299 1 162 1 320 1 231 2 179 1 3 4 31 2 147 2 219 1 367 1 8 1 370 2 127 4 59 2 161 1 
90 1 217 1 138 1 
377 1 47 1 217 1 138 1 251 1 
90 1 217 1 138 1 
90 1 217 1 138 1 
217 1 138 1 310 1 
217 1 138 1 310 1 
217 1 138 1 310 1 
217 1 138 1 
250 1 44 1 
324 1 60 1 151 2 227 1 320 1 133 4 374 1 165 1 52 1 182 1 181 4 156 1 112 1 157 1 145 1 32 1 356 2 267 1 7 1 149 2 296 1 346 8 283 1 
151 3 48 1 227 2 320 1 133 5 52 2 182 1 181 6 156 1 112 1 157 1 32 2 235 1 7 1 58 1 346 11 283 1 324 1 60 1 325 1 374 2 165 2 40 1 145 1 356 2 267 2 149 4 296 1 
151 4 48 2 227 3 320 1 133 10 52 3 182 1 181 9 156 1 136 1 365 1 112 1 157 1 32 3 235 1 7 1 58 1 346 19 283 3 324 1 60 1 262 1 325 2 374 3 165 1 12 1 145 1 267 3 356 3 149 6 296 1 129 2 297 1 
151 4 48 2 227 3 320 1 133 7 52 3 182 1 181 10 156 1 365 1 136 1 112 1 157 1 32 3 235 2 7 1 58 1 346 17 283 2 324 1 60 1 262 1 325 2 374 3 165 1 12 1 145 1 356 2 267 3 149 6 296 1 129 1 297 1 
324 1 60 1 151 2 227 1 320 1 133 4 374 1 165 1 52 1 182 1 181 4 156 1 112 1 157 1 145 1 32 1 356 2 267 1 7 1 149 2 296 1 346 8 283 1 
151 1 48 2 227 1 133 6 52 1 181 6 156 1 136 1 157 1 32 1 235 1 346 12 283 2 60 1 262 1 325 2 374 2 165 1 12 1 145 1 267 1 149 2 129 2 297 1 
151 5 48 2 227 4 320 1 133 8 52 4 182 1 181 10 156 1 136 1 365 2 112 1 157 1 32 4 235 2 7 1 58 1 346 18 283 2 324 1 60 1 262 1 325 2 374 3 165 1 12 1 145 1 267 4 356 3 149 8 296 1 129 1 297 1 
151 2 48 2 227 3 133 4 52 3 181 7 156 1 365 1 136 1 157 1 32 3 113 1 235 2 346 11 283 1 60 1 262 1 325 2 374 2 165 1 12 1 145 1 267 3 149 6 129 1 297 1 
324 1 151 6 133 4 374 1 182 1 181 3 112 3 356 3 235 3 7 3 296 2 346 7 283 1 
151 4 48 2 227 4 320 1 133 8 52 4 182 1 181 10 156 1 136 1 365 2 112 1 157 1 32 4 235 1 113 1 7 1 346 18 283 2 324 1 60 1 262 1 325 2 374 3 165 1 12 1 145 1 267 4 356 3 149 8 296 1 129 1 297 1 
324 1 151 3 227 2 320 1 133 4 374 1 52 2 182 1 181 4 365 1 112 1 32 2 235 1 356 2 267 2 7 1 149 4 296 1 346 8 283 1 
324 1 0 1 151 2 320 1 133 3 374 1 182 1 181 3 112 1 356 2 7 1 296 1 346 6 283 1 
48 1 227 1 325 1 133 2 374 1 52 1 181 2 32 1 267 1 58 1 149 2 129 1 346 4 283 1 
151 2 48 2 325 2 133 6 374 2 165 2 181 6 156 2 40 1 145 1 235 2 115 1 129 2 346 12 283 2 
151 10 48 2 227 2 320 1 133 16 52 2 108 1 182 2 181 14 156 2 365 2 112 4 32 2 235 5 7 4 115 1 346 30 283 4 324 1 325 2 374 4 245 1 165 2 40 1 356 5 267 2 149 4 296 1 129 2 103 1 
133 1 165 1 346 1 
346 1 181 1 156 1 
151 1 48 1 227 1 325 1 133 3 374 1 52 1 304 1 181 3 32 1 267 1 235 1 58 1 149 2 129 1 346 6 283 1 
151 1 48 2 227 1 133 6 52 1 181 6 156 1 136 1 157 1 32 1 235 1 346 12 283 2 60 1 262 1 325 2 374 2 165 1 12 1 145 1 267 1 149 2 129 2 297 1 
151 2 133 3 374 1 182 1 181 3 112 1 356 1 235 1 7 1 346 6 283 1 
324 1 151 2 227 1 133 2 52 1 108 1 181 1 365 1 112 1 32 1 235 1 356 1 267 1 7 1 149 2 296 1 346 3 
151 5 227 1 133 5 374 2 52 1 181 5 182 1 157 1 112 2 32 1 267 1 356 3 235 2 7 2 149 2 346 10 103 1 283 2 
151 1 227 1 325 1 374 1 52 1 181 2 157 1 32 1 267 1 235 1 149 2 346 2 
151 1 48 1 227 1 325 1 133 2 374 1 52 1 181 2 157 1 32 1 267 1 235 1 149 2 129 1 346 4 283 1 
151 2 227 3 133 2 52 3 108 1 181 1 365 1 157 1 112 1 32 3 113 1 267 3 356 1 235 1 7 1 149 6 346 3 
151 11 48 4 227 5 320 1 133 21 52 5 108 1 182 2 181 20 156 4 365 2 112 3 157 1 83 1 32 5 113 1 235 7 7 3 58 1 115 1 346 41 260 1 283 6 324 1 325 4 374 6 165 4 40 1 14 1 145 1 356 4 267 5 149 10 296 1 129 4 
248 1 42 1 152 1 301 1 185 1 368 1 223 1 
152 1 301 1 215 1 248 1 41 1 42 1 185 1 292 1 125 1 379 1 368 1 223 1 
211 1 166 1 0 1 137 1 68 1 6 1 236 1 270 1 155 1 19 1 170 1 
211 1 75 1 37 1 326 1 155 1 54 1 166 1 42 2 137 1 6 1 185 1 236 1 368 2 270 1 294 1 70 1 223 1 19 1 
211 1 174 1 75 1 37 2 229 1 264 1 326 1 106 1 155 3 78 1 54 2 80 1 166 1 42 2 6 1 185 1 236 2 368 2 270 1 294 1 70 1 223 2 19 1 
211 1 61 1 174 1 75 1 37 2 229 1 264 1 326 1 106 1 155 3 134 1 78 1 54 2 80 1 166 2 42 2 6 2 185 1 236 2 368 2 270 2 70 1 223 2 19 1 
174 1 229 1 155 4 134 1 176 1 231 1 178 1 78 1 337 1 137 1 6 3 236 1 211 1 37 1 123 2 166 3 218 1 270 3 295 1 272 1 127 1 19 1 316 2 
75 1 155 1 176 1 231 1 178 1 78 1 54 1 80 1 109 1 6 1 368 1 258 1 123 2 166 1 376 1 42 1 67 1 270 1 295 1 271 1 127 1 223 1 225 1 316 2 
211 1 166 1 6 1 319 1 270 1 19 1 
211 2 37 1 155 1 166 1 305 1 137 1 200 1 6 1 270 1 236 1 19 1 89 1 261 1 
253 1 151 2 155 1 52 2 54 1 112 1 6 1 7 1 346 6 211 1 350 1 166 1 15 1 216 2 167 1 267 2 356 2 270 1 70 1 223 1 19 1 171 1 276 1 227 2 75 1 320 1 175 1 27 1 133 3 182 1 181 3 32 2 185 2 368 2 236 1 322 2 283 1 324 1 37 1 326 1 374 1 290 1 42 2 294 1 149 4 296 1 333 1 
299 2 300 1 155 1 54 1 109 1 112 1 6 1 258 1 8 2 7 1 209 1 161 4 162 2 123 3 311 2 166 1 66 1 67 1 219 2 355 1 270 1 169 1 271 1 127 2 223 1 225 1 316 3 131 1 75 1 176 1 231 2 178 1 182 1 80 1 137 1 368 1 371 1 283 2 92 1 374 2 376 1 42 1 147 5 291 1 295 2 103 1 
211 2 319 1 37 1 155 2 166 2 218 1 200 1 6 2 270 2 236 1 116 1 19 1 333 1 
372 1 211 1 155 1 134 1 166 4 137 1 6 4 68 1 270 4 236 1 19 1 333 1 170 1 
211 2 334 1 37 1 155 1 28 1 375 1 166 1 6 1 270 1 236 1 19 1 89 1 261 1 
211 1 166 1 317 1 137 1 84 1 6 1 270 1 1 1 332 1 19 1 
211 1 360 1 155 1 285 1 166 2 135 1 6 2 270 2 236 1 19 1 333 1 
372 1 211 2 155 3 78 1 30 1 166 5 135 1 137 1 68 1 6 4 270 5 236 2 72 1 19 2 170 1 333 1 
372 1 211 2 155 3 78 1 30 1 166 5 135 1 137 1 146 1 68 1 6 4 270 5 236 2 19 2 170 1 333 1 
211 1 61 1 75 1 37 1 326 1 155 1 54 1 166 1 42 2 137 1 6 1 185 1 236 1 368 2 270 1 70 1 223 1 19 1 
211 2 37 1 155 1 78 1 166 1 305 1 200 1 6 1 270 1 236 1 19 1 89 1 261 1 
347 1 254 1 177 1 287 1 42 1 368 1 114 1 102 1 223 1 
254 1 279 1 274 1 
347 1 254 1 185 1 102 1 208 1 
347 2 300 1 254 1 264 1 106 1 123 2 231 1 178 1 279 1 80 1 183 1 185 1 57 1 321 1 127 1 274 1 102 2 208 2 316 2 
0 1 173 1 168 1 53 1 
173 1 196 1 359 1 168 1 53 1 46 1 232 1 
226 1 359 1 241 1 
121 1 173 1 196 1 359 3 203 2 168 1 53 1 29 1 46 3 259 1 232 1 81 1 
173 1 348 1 196 1 101 1 359 2 168 1 53 1 46 2 232 1 
56 1 317 1 64 1 196 1 359 1 1 1 168 1 87 1 46 1 232 1 81 1 
196 1 359 1 168 1 53 1 46 1 232 1 81 1 
173 1 196 1 359 1 53 2 46 1 232 1 81 1 
359 2 53 1 81 1 232 2 266 1 352 1 196 2 221 1 168 1 46 2 
173 1 359 3 336 1 53 1 81 1 232 1 282 1 64 1 196 1 101 2 366 1 168 2 46 3 
317 2 173 1 359 2 1 1 53 1 81 1 232 1 364 1 56 1 196 1 101 1 168 1 332 1 46 2 71 1 
173 1 348 1 359 4 284 1 336 1 53 1 81 1 232 2 64 1 196 2 101 2 168 2 46 4 
173 1 196 1 359 1 168 1 53 1 46 1 232 1 81 1 
121 1 173 2 359 4 336 1 29 1 53 2 232 1 65 1 64 1 196 1 101 2 203 1 168 3 46 4 
173 1 359 2 335 1 53 1 81 1 232 1 196 1 101 1 168 1 46 2 128 1 242 1 
121 1 173 1 196 1 359 3 203 2 168 1 53 1 29 2 328 1 46 3 232 1 81 1 
188 1 168 2 86 1 18 2 
196 1 318 1 359 1 46 1 232 1 81 1 
173 1 196 1 101 1 359 2 366 1 168 1 53 1 46 2 232 1 81 1 
2 1 
173 1 196 1 359 1 168 1 53 1 46 1 232 1 81 1 
173 1 359 3 53 1 81 1 232 1 196 1 101 1 203 1 366 1 168 1 46 3 
65 1 64 1 168 1 336 1 
168 1 53 1 

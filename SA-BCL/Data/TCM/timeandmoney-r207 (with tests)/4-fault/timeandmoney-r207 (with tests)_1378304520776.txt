#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 3 245 2 219 1 220 1 272 1 291 1 223 1 322 2 262 1 26 3 251 1 211 1 77 2 
301 2 78 1 217 1 245 5 219 2 220 3 272 1 321 1 223 6 322 2 63 1 324 2 326 2 251 1 16 2 308 1 115 9 257 1 368 1 350 1 291 1 262 1 206 1 26 9 145 1 211 4 212 1 77 2 
301 2 78 1 217 1 245 5 219 2 220 3 272 1 321 1 223 6 322 2 63 1 324 2 326 2 251 1 16 2 308 1 115 9 257 1 368 1 350 1 291 1 262 1 206 1 26 9 145 1 211 4 212 1 77 2 
301 2 78 1 217 1 245 6 219 2 220 4 272 1 321 1 223 7 322 2 63 1 324 2 326 2 251 1 16 2 308 1 115 10 257 1 368 1 350 1 291 1 262 1 206 1 26 10 145 1 211 5 212 1 77 2 
301 2 78 1 217 1 245 4 219 2 220 2 272 1 321 1 223 4 322 2 63 1 324 2 326 1 251 1 16 2 308 1 115 7 257 1 368 1 291 1 262 1 206 1 26 7 145 1 211 3 212 1 77 2 
308 1 301 1 115 4 217 1 245 3 220 1 272 1 350 1 223 3 322 1 324 1 262 1 26 4 326 2 251 1 16 1 211 2 77 1 
257 1 115 2 245 1 246 1 219 1 272 1 233 1 322 1 63 1 324 1 262 1 26 2 251 1 16 1 76 1 77 1 
301 1 245 5 217 1 219 1 220 3 272 1 321 1 223 7 322 2 324 1 326 2 251 1 199 1 16 1 308 1 115 9 330 1 350 1 291 1 262 1 26 9 145 1 211 4 77 2 
301 1 245 5 217 1 219 1 220 3 272 1 321 1 223 7 322 2 324 1 326 2 251 1 199 1 16 1 308 1 115 9 330 1 350 1 291 1 262 1 26 9 145 1 211 4 77 2 
88 1 270 1 189 1 203 1 311 1 222 1 339 1 234 1 173 1 264 1 123 1 135 1 240 1 112 1 
82 1 
85 1 203 2 135 2 123 1 365 1 82 1 376 1 187 1 
284 2 320 2 203 5 102 1 82 1 172 1 62 1 39 1 24 1 10 1 74 1 227 1 123 2 135 5 365 1 17 1 33 2 376 2 187 1 
82 1 187 1 6 1 
318 2 296 1 82 1 
127 1 189 2 270 2 264 2 222 2 311 1 112 2 240 2 
165 2 213 1 168 2 127 1 244 1 97 1 319 2 189 2 270 2 222 3 323 1 105 1 40 1 342 2 45 1 112 3 18 1 307 1 309 1 49 1 158 1 311 1 372 1 52 1 352 1 353 2 144 1 236 1 159 1 184 1 238 1 56 1 264 2 374 1 210 1 240 2 59 1 
88 1 189 1 270 1 264 1 222 1 311 1 339 1 234 1 112 1 240 1 
203 1 222 1 82 1 23 1 119 1 234 1 340 1 237 1 264 1 147 1 135 1 364 1 112 1 187 1 
270 1 189 1 203 2 222 1 82 1 23 1 119 1 234 1 264 1 147 1 135 2 364 1 240 1 112 1 187 1 
80 1 203 1 135 1 123 1 376 1 
203 2 15 1 135 2 123 1 365 1 82 1 376 1 187 1 
203 1 135 1 376 1 
165 1 213 1 244 1 319 1 270 1 189 1 222 2 105 1 144 1 342 1 263 1 238 1 56 1 264 1 374 1 230 1 112 2 59 1 113 1 18 1 
269 1 127 2 270 1 189 1 222 2 264 2 112 2 253 1 240 1 
114 1 21 1 113 1 
165 1 213 1 127 1 244 1 319 1 222 1 313 1 105 1 144 1 342 1 238 1 56 1 374 1 112 1 59 1 18 1 
127 1 6 1 
127 1 331 1 270 4 189 4 222 5 64 1 237 1 263 1 264 5 198 1 230 2 112 5 253 1 240 1 
189 2 270 2 264 2 222 2 371 1 339 1 234 1 112 2 
127 1 189 3 270 3 264 3 222 3 240 1 230 1 112 3 
189 1 270 1 264 1 222 1 339 1 234 1 112 1 
269 1 189 1 270 1 264 1 222 1 234 1 112 1 240 1 253 1 
165 1 213 1 168 1 127 1 244 1 319 1 189 3 270 3 222 4 323 1 105 1 40 1 342 1 133 1 45 1 135 1 364 1 253 1 112 4 230 1 18 1 307 1 309 1 49 1 203 1 158 1 311 1 372 1 23 1 119 1 234 1 353 2 144 1 236 1 263 1 184 1 238 1 56 1 264 3 147 1 374 1 299 1 240 2 59 1 
127 1 237 1 331 1 189 1 270 1 264 2 222 2 112 2 230 1 
270 3 189 3 203 1 222 3 82 1 23 1 119 1 234 1 90 1 263 1 133 1 264 3 147 1 135 1 364 1 240 1 253 1 230 2 112 3 
114 1 270 2 189 2 222 2 264 2 230 1 253 1 240 1 112 2 113 1 
165 1 213 1 127 1 244 1 319 1 222 1 105 1 144 1 342 1 56 1 238 1 374 1 112 1 59 1 18 1 
165 1 213 1 127 1 244 1 319 1 222 1 105 1 181 1 342 1 56 1 238 1 374 1 252 1 112 1 59 1 
168 4 243 1 131 1 103 1 361 1 40 1 278 1 87 1 45 1 113 2 114 2 367 1 49 2 21 2 289 1 158 1 372 1 353 2 73 1 236 1 205 1 184 1 210 2 267 1 
189 1 270 1 264 1 364 1 222 1 371 1 234 1 112 1 
81 1 221 1 110 1 
20 1 98 1 288 1 44 1 221 2 110 2 
221 1 110 1 
221 1 110 1 
98 1 44 1 
98 1 44 1 
98 1 44 1 
171 1 221 1 110 1 
171 1 221 1 110 1 
171 1 221 1 110 1 
221 1 110 1 54 1 
221 1 110 1 54 1 
221 1 110 1 54 1 
127 1 189 2 270 2 216 1 221 1 81 1 222 2 83 1 277 1 280 1 135 1 46 1 110 1 112 2 231 1 48 1 203 1 22 1 354 1 264 2 265 1 125 1 94 1 148 1 
256 1 156 1 50 2 216 1 288 1 203 2 221 2 82 1 83 3 194 1 25 1 11 1 354 2 277 2 185 1 280 2 135 2 110 2 94 2 
301 1 37 1 43 2 16 2 76 1 
301 1 16 1 324 1 
16 1 76 1 324 1 
301 2 149 1 43 1 37 1 16 3 76 1 
301 1 43 1 37 1 16 2 275 1 76 1 
95 1 243 1 189 1 339 1 10 1 112 1 17 2 203 5 71 1 311 1 259 1 264 1 123 4 209 2 33 1 267 1 318 3 79 1 320 1 270 1 222 1 82 2 131 1 274 2 39 3 173 1 278 1 228 1 135 5 365 1 284 1 88 1 48 1 177 1 234 1 296 1 376 1 240 1 241 2 187 1 
243 1 189 1 339 1 10 1 306 1 112 1 17 2 203 5 71 1 311 1 259 1 264 1 123 4 356 1 209 2 33 1 267 1 318 3 79 1 270 1 170 2 320 1 80 2 222 1 82 2 131 1 39 3 173 1 278 1 135 5 365 1 284 1 88 1 48 1 177 1 234 1 296 1 240 1 376 3 241 2 187 1 
95 1 318 3 243 1 189 1 270 1 320 1 222 1 339 1 82 2 172 1 131 1 274 1 39 3 173 1 278 1 228 1 135 3 112 1 17 2 284 1 88 1 48 1 177 1 203 3 71 1 311 1 234 1 259 1 296 1 264 1 123 2 209 2 240 1 33 1 267 1 241 2 187 1 
95 1 243 2 189 1 339 1 104 1 112 1 17 4 203 4 71 1 311 1 259 2 121 1 264 1 123 3 209 4 33 1 267 2 318 7 320 1 270 1 222 1 131 2 172 1 82 4 274 2 39 5 173 1 278 2 228 1 135 4 284 1 48 2 88 1 177 1 234 1 292 1 296 3 240 1 241 4 187 1 
60 1 
132 1 238 1 6 1 
238 1 108 1 
244 1 238 1 105 1 
238 1 362 1 
238 1 105 1 
294 1 132 2 244 1 238 3 279 1 105 1 
367 2 188 1 49 3 168 7 347 1 369 1 131 1 180 1 143 1 305 1 87 3 297 1 136 1 47 2 152 1 357 1 210 4 267 1 
188 1 168 6 40 1 65 1 305 2 66 1 87 2 47 1 152 1 367 1 49 3 346 1 369 1 372 1 353 2 143 1 261 1 120 1 236 1 55 1 184 1 239 1 357 1 210 3 
188 1 168 9 100 1 131 1 40 2 305 1 87 4 47 2 152 1 367 3 49 4 287 1 347 1 372 2 180 1 353 4 143 1 236 2 184 2 297 1 239 1 357 1 210 5 267 1 
367 2 188 1 49 3 168 7 347 1 369 1 131 1 180 1 143 1 305 1 87 3 297 1 47 2 152 1 357 1 210 4 267 1 
367 2 188 1 49 3 168 7 347 1 369 1 131 1 180 1 143 1 305 1 87 3 297 1 47 2 152 1 357 1 210 4 267 1 
165 1 213 1 338 1 115 1 310 2 319 1 348 1 219 2 370 1 179 2 322 1 105 1 314 2 342 1 26 1 56 1 238 1 343 1 146 1 374 1 154 1 282 1 77 1 
165 1 301 1 149 1 319 1 219 1 303 1 322 1 324 1 9 1 342 1 249 1 109 1 16 2 175 1 328 1 115 1 310 1 179 1 53 1 314 1 262 1 26 1 56 1 374 1 76 1 77 1 
165 1 301 1 149 1 319 1 245 1 219 1 272 1 303 1 223 1 322 1 324 1 9 1 342 1 249 1 251 1 109 1 69 1 16 2 175 1 328 1 115 2 310 1 179 1 314 1 262 1 26 2 56 1 374 1 76 1 77 1 
165 1 301 1 149 1 319 1 245 1 219 1 272 1 223 2 322 1 324 1 9 1 342 1 249 1 251 1 109 1 16 2 175 1 254 1 328 1 115 3 310 1 179 1 53 1 314 1 26 3 56 1 146 1 374 1 76 1 77 1 
165 1 149 1 301 1 319 1 245 1 219 1 272 1 223 2 324 1 9 1 342 1 251 1 109 1 16 2 254 1 328 1 115 2 310 1 179 1 53 1 314 1 26 2 56 1 374 1 76 1 
366 1 
340 1 105 1 106 1 107 2 197 1 10 1 342 2 14 2 153 1 111 1 154 1 17 2 112 1 19 1 344 1 258 2 348 1 117 4 203 5 23 1 119 1 160 1 264 1 208 1 33 1 165 2 318 2 213 2 214 2 319 2 129 1 215 1 320 1 222 1 82 2 39 2 135 5 365 3 364 1 137 2 232 2 284 1 138 1 177 1 234 1 296 2 237 1 238 1 56 1 147 1 374 1 298 2 186 1 376 6 187 1 
138 1 129 1 258 1 117 2 203 3 222 1 119 1 23 1 234 1 340 1 237 1 85 1 264 1 147 1 135 3 365 1 364 1 208 1 111 1 376 2 112 1 344 1 
129 1 222 1 82 1 340 1 85 1 135 3 364 1 365 1 111 1 112 1 344 1 232 1 138 1 117 3 203 3 23 1 119 1 234 1 237 1 264 1 147 1 208 1 376 1 187 1 
129 1 222 1 82 1 340 1 107 1 85 1 135 3 365 1 364 1 111 1 112 1 344 1 232 1 138 1 117 3 258 1 203 3 23 1 119 1 234 1 237 1 264 1 147 1 208 1 376 2 187 1 
340 1 106 1 107 4 10 1 14 2 111 1 112 1 17 1 344 1 258 4 117 6 203 5 119 1 23 1 160 1 264 1 208 1 162 1 33 1 34 1 359 1 214 2 129 1 320 1 222 1 82 5 39 1 85 1 135 5 364 1 365 3 137 2 232 4 138 1 284 1 332 1 234 1 92 1 237 1 296 2 147 1 298 2 376 7 187 5 
340 1 106 1 10 1 107 2 14 2 111 1 112 1 17 1 344 1 117 4 258 2 203 4 119 1 23 1 160 1 264 1 208 1 33 1 318 2 214 2 129 1 320 1 222 1 82 2 39 1 135 4 364 1 365 2 137 2 232 2 138 1 284 1 234 1 237 1 296 2 147 1 298 2 186 1 376 4 187 1 
214 2 129 1 320 1 222 1 82 1 340 1 39 1 106 1 107 2 10 1 14 2 135 4 365 2 364 1 111 1 137 2 17 1 112 1 232 2 344 1 138 1 284 1 332 1 258 2 117 4 203 4 23 1 119 1 234 1 92 1 296 2 160 1 237 1 264 1 147 1 298 2 208 1 162 1 376 4 33 1 187 1 
214 2 129 1 320 1 222 1 82 1 340 1 39 1 106 1 107 2 10 1 14 2 135 4 365 2 364 1 111 1 137 2 17 1 112 1 232 2 344 1 138 1 284 1 332 1 258 2 117 4 203 4 23 1 119 1 234 1 92 1 296 2 160 1 237 1 264 1 147 1 298 2 208 1 162 1 376 4 33 1 187 1 
318 2 129 1 320 1 222 1 302 1 82 1 340 1 39 1 107 2 12 1 10 1 14 2 135 4 365 2 364 1 111 1 17 1 112 1 232 2 344 1 138 1 284 1 285 2 332 1 258 2 117 4 203 4 23 1 119 1 234 1 160 1 237 1 264 1 147 1 298 2 208 1 376 4 33 1 317 2 187 1 300 1 
214 2 129 1 320 1 222 1 82 1 340 1 39 1 106 1 10 1 107 3 14 2 135 4 365 2 364 1 111 1 137 2 17 1 112 1 344 1 232 3 284 1 138 1 332 1 117 5 258 3 203 4 23 1 119 1 234 1 92 1 296 2 160 1 237 1 264 1 147 1 298 2 208 1 162 1 33 1 376 5 187 1 359 1 
214 2 129 1 320 1 222 1 82 1 340 1 39 1 106 1 10 1 107 3 14 2 135 4 365 2 364 1 111 1 137 2 17 1 112 1 344 1 232 3 284 1 138 1 332 1 117 5 258 3 203 4 23 1 119 1 234 1 92 1 296 2 160 1 237 1 264 1 147 1 298 2 208 1 162 1 33 1 376 5 187 1 359 1 
318 2 129 1 320 1 222 1 82 1 340 1 39 1 107 2 10 1 12 1 14 2 135 4 365 2 364 1 111 1 17 1 112 1 232 2 344 1 284 1 138 1 285 2 258 2 117 4 203 4 23 1 119 1 234 1 160 1 237 1 264 1 147 1 298 2 208 1 186 1 376 4 33 1 317 2 187 1 
165 7 213 2 337 1 168 2 319 8 189 1 270 1 222 1 105 2 84 1 40 2 226 1 342 8 45 2 69 1 112 1 230 1 154 1 283 1 309 1 49 1 157 1 348 1 158 2 372 2 53 1 352 1 353 4 236 2 205 1 159 2 56 2 238 3 184 2 264 1 374 2 58 1 336 1 210 1 
243 1 168 3 270 1 189 1 222 1 5 1 131 1 40 1 278 1 87 1 45 1 253 1 112 1 113 1 367 1 114 1 49 2 21 1 349 1 158 1 372 1 259 1 353 2 236 1 184 1 264 1 240 1 210 1 267 1 
168 6 127 2 131 1 6 1 40 1 87 2 45 1 47 1 113 1 114 1 367 2 49 3 347 1 21 1 158 1 372 1 180 1 353 2 143 1 236 1 205 1 184 1 297 1 357 1 210 3 267 1 
188 2 168 22 243 4 127 1 131 4 341 1 40 2 304 2 65 4 278 2 87 4 45 2 113 16 367 2 114 6 309 1 49 9 204 1 70 2 21 16 349 1 312 1 158 1 372 2 352 1 259 4 353 4 261 1 236 2 55 4 184 2 210 13 267 2 
165 1 213 1 168 2 127 1 244 1 319 1 189 1 270 1 150 1 222 2 105 1 40 1 342 1 45 1 68 1 112 2 230 1 18 1 114 1 309 1 49 1 349 1 158 1 372 1 313 1 352 1 353 2 144 1 235 1 236 1 263 1 238 1 56 1 184 1 264 1 374 1 210 1 59 1 
188 4 243 2 2 1 244 2 189 1 101 2 105 2 196 1 342 3 13 1 112 3 18 2 113 7 307 2 114 7 309 1 347 1 21 7 349 1 158 3 352 1 259 2 353 6 260 2 263 1 264 1 357 1 210 10 267 3 165 3 126 2 213 1 168 20 127 2 319 3 270 1 273 2 222 3 131 3 40 3 278 2 87 8 45 3 47 1 230 1 367 4 49 10 372 3 53 1 180 1 143 1 144 2 236 3 184 3 56 2 238 2 297 1 374 2 59 2 
114 1 188 1 168 2 243 1 21 1 158 1 372 1 131 1 361 1 353 2 40 1 236 1 205 1 184 1 87 1 45 1 210 2 113 1 
367 1 114 1 168 2 49 2 21 1 158 1 372 1 103 1 353 2 40 1 236 1 205 1 184 1 278 1 87 1 45 1 267 1 113 1 
188 1 243 1 168 4 131 1 40 1 278 1 87 2 45 1 113 2 114 2 367 1 49 2 21 2 158 1 372 1 259 1 353 2 236 1 205 1 184 1 210 2 267 1 
114 1 188 1 168 2 337 1 243 1 21 1 158 1 372 1 131 1 361 1 353 2 40 1 236 1 184 1 87 1 45 1 210 2 113 1 
367 1 114 1 168 2 337 1 49 2 21 1 158 1 372 1 103 1 353 2 40 1 236 1 184 1 278 1 87 1 45 1 267 1 113 1 
188 1 243 1 337 1 168 4 131 1 40 1 278 1 87 2 45 1 113 2 114 2 367 1 49 2 21 2 158 1 372 1 259 1 353 2 236 1 184 1 210 2 267 1 
188 1 168 4 243 1 131 1 40 1 278 1 87 2 45 1 113 2 114 2 367 1 49 2 21 2 158 1 372 1 259 1 353 2 236 1 184 1 210 2 267 1 
165 1 213 1 168 2 127 1 244 1 319 1 222 1 105 1 40 1 342 1 45 1 112 1 18 1 307 1 309 1 49 1 158 1 372 1 352 1 353 2 144 1 236 1 56 1 238 1 184 1 374 1 210 1 59 1 
165 1 213 1 168 2 127 1 244 1 319 1 222 1 105 1 40 1 342 1 45 1 252 1 112 1 309 1 202 1 49 1 158 1 372 1 352 1 353 2 181 1 236 1 56 1 238 1 184 1 374 1 210 1 59 1 
188 1 243 1 168 4 131 1 40 1 278 1 87 2 45 1 113 2 114 2 367 1 49 2 21 2 349 1 158 1 372 1 259 1 353 2 236 1 184 1 210 2 267 1 
126 1 165 1 188 1 168 4 243 1 244 1 319 1 222 1 131 1 105 1 40 1 342 1 278 1 87 2 45 1 69 1 112 1 113 2 18 1 307 1 367 1 114 2 49 2 21 2 158 1 372 1 259 1 353 2 144 1 236 1 56 1 238 1 184 1 374 1 210 2 267 1 59 1 
188 1 243 1 168 3 270 1 189 1 222 1 131 1 40 1 278 1 250 1 87 1 45 1 253 1 112 1 113 1 114 1 49 1 21 1 349 1 158 1 372 1 259 1 353 2 236 1 184 1 264 1 240 1 210 2 267 1 
188 2 168 12 243 2 61 1 100 1 218 1 191 1 131 2 40 2 278 2 87 4 367 2 49 6 139 2 72 1 372 2 259 2 353 4 373 1 236 2 184 2 124 1 210 6 267 2 163 2 164 1 
168 8 243 1 100 1 218 2 191 1 131 1 40 1 278 1 49 4 139 1 72 1 372 1 259 1 353 2 373 2 236 1 184 1 124 1 210 4 267 1 163 2 
188 1 168 8 243 1 100 1 218 2 191 1 131 1 248 1 40 2 278 1 87 1 49 4 139 1 72 1 372 2 259 1 353 4 373 1 236 2 184 2 124 1 210 4 267 1 163 2 164 1 
188 1 168 8 243 1 100 1 218 2 191 1 131 1 248 1 40 2 278 1 87 2 367 1 49 4 139 1 72 1 372 2 259 1 353 4 373 1 236 2 184 2 124 1 210 4 267 1 163 2 164 1 
188 1 243 1 168 18 100 1 218 1 191 1 131 3 40 1 278 1 87 4 47 2 367 3 49 8 347 2 139 1 72 1 372 1 259 1 180 2 353 2 373 1 143 2 236 1 184 1 297 2 124 1 357 2 210 10 267 3 163 2 
25 1 256 1 354 1 277 1 288 1 355 1 280 1 221 1 110 1 94 1 
81 1 148 1 
354 1 277 1 280 1 221 1 375 1 110 1 94 1 178 1 351 1 
171 1 358 1 
201 1 20 1 54 1 
256 1 50 1 216 1 288 1 203 1 221 1 82 1 83 2 194 1 25 1 11 1 354 1 277 1 185 1 135 1 280 1 110 1 94 1 
256 1 50 1 216 1 288 1 203 1 221 1 82 1 83 2 194 1 25 1 11 1 354 1 277 1 185 1 135 1 280 1 110 1 94 1 
256 1 50 1 216 1 288 1 203 1 221 1 82 1 83 2 194 1 25 1 11 1 354 1 277 1 185 1 135 1 280 1 110 1 94 1 
20 1 171 1 358 1 
20 1 171 1 358 1 
201 1 54 1 
201 1 20 1 54 1 
125 1 231 1 
166 1 127 1 270 2 189 2 221 1 81 1 222 2 83 1 277 1 135 1 280 1 46 1 110 1 112 2 231 1 48 1 50 1 203 1 22 1 354 1 185 1 264 2 265 1 123 1 125 1 94 1 148 1 
165 2 168 2 96 1 319 2 190 1 222 2 105 1 40 1 342 2 45 1 67 1 112 2 309 1 49 1 157 1 349 1 158 1 372 1 352 1 353 2 236 1 159 2 56 1 238 1 27 1 184 1 264 2 374 1 336 1 210 1 268 1 
165 1 213 1 319 1 310 1 348 1 105 1 142 1 342 1 56 1 238 1 29 1 343 1 374 1 154 1 
165 1 301 1 149 1 167 1 319 1 310 1 247 1 53 1 142 1 324 1 9 1 342 1 56 1 374 1 109 1 16 2 76 1 175 1 
165 2 301 1 149 1 167 1 319 2 310 1 247 1 53 1 142 1 324 1 9 1 342 2 56 1 374 1 109 1 16 2 69 1 76 1 175 1 
165 1 301 1 149 1 319 1 310 1 247 1 53 1 324 1 9 1 342 1 56 1 335 1 374 1 109 1 16 2 76 1 175 1 
276 1 
284 1 320 1 82 1 39 1 10 1 74 1 227 1 33 1 17 1 187 1 
318 10 243 2 273 1 131 2 82 5 259 2 7 2 39 5 296 5 28 1 278 2 209 5 17 5 241 5 267 2 
203 1 135 1 365 1 82 1 376 1 187 1 
165 4 213 2 242 1 319 4 320 2 172 1 105 1 39 2 225 1 197 1 10 1 342 4 135 3 153 2 365 2 17 2 154 1 19 1 284 2 177 2 348 1 203 3 140 2 56 1 238 1 161 1 374 1 33 2 376 4 
74 1 227 1 82 1 17 1 39 1 187 1 6 1 
318 1 214 1 320 1 82 2 39 1 106 1 10 1 135 1 365 1 137 1 17 1 284 1 203 1 296 1 33 1 376 1 187 1 
165 1 318 12 213 1 243 2 244 1 319 1 320 2 273 2 131 2 82 6 105 1 7 2 39 7 132 1 342 1 10 2 325 1 278 2 86 2 135 2 108 2 365 1 281 1 17 6 284 2 286 1 177 1 203 2 333 1 259 2 294 1 296 6 238 4 56 1 57 1 147 1 30 1 75 1 374 2 209 6 376 2 33 2 267 2 241 6 
318 10 243 4 99 1 320 2 38 1 82 7 131 4 192 1 39 13 7 3 304 1 41 1 65 2 10 2 278 4 135 1 151 1 229 1 153 1 365 1 327 1 17 8 284 2 177 1 203 1 70 1 259 4 261 1 296 5 55 2 28 1 209 8 376 1 33 2 241 8 267 4 187 2 
320 1 270 1 189 1 222 1 339 1 131 2 7 2 39 2 173 1 10 1 135 1 112 1 17 2 284 1 88 1 203 1 311 1 234 1 143 1 92 1 28 1 264 1 297 1 31 1 357 1 33 1 240 1 267 1 
165 1 213 1 168 1 127 1 244 1 319 1 189 2 270 2 222 3 323 1 105 1 40 1 342 1 45 1 112 3 18 1 307 1 309 1 49 1 311 1 158 1 372 1 353 2 144 1 236 1 184 1 56 1 238 1 264 2 374 1 240 2 59 1 
318 4 284 1 320 1 177 1 82 4 39 1 10 1 296 2 47 1 153 1 209 2 17 2 33 1 241 2 187 2 
256 1 182 1 354 1 280 1 231 1 
354 1 290 1 280 1 
354 1 290 1 280 1 
354 1 290 1 280 1 
354 1 280 1 316 1 
354 1 280 1 316 1 
354 1 280 1 316 1 
354 1 280 1 
221 1 110 1 
367 3 188 2 168 10 49 5 100 1 372 1 131 2 353 2 40 1 143 2 236 1 184 1 87 5 297 1 31 1 357 2 210 5 267 2 
188 1 243 1 168 2 100 1 372 1 131 1 353 2 40 1 236 1 184 1 87 1 210 2 
367 1 188 1 49 2 243 1 168 4 100 1 372 1 131 1 259 1 353 2 40 1 236 1 278 1 184 1 87 2 210 2 267 1 
367 1 188 1 49 2 168 3 346 1 100 1 372 3 353 6 40 3 143 1 236 3 184 3 87 2 239 1 357 1 210 1 164 1 
188 3 168 15 100 1 131 2 40 4 65 1 87 6 174 1 367 3 49 8 346 1 347 1 372 4 180 1 353 8 143 2 261 1 120 1 236 4 55 1 184 4 297 1 31 1 239 1 357 2 210 7 267 2 164 1 
188 4 168 24 243 2 99 1 100 1 131 5 40 2 65 1 41 1 278 1 87 9 47 1 229 1 151 1 327 1 367 5 49 10 347 1 372 2 180 1 259 2 353 4 143 2 261 1 236 2 55 1 184 2 297 2 31 1 239 1 357 2 210 14 267 4 
188 1 168 17 243 2 99 1 100 1 131 3 40 3 41 1 65 1 278 1 87 4 47 1 229 1 151 1 327 1 174 1 367 3 49 7 347 1 372 3 180 1 259 2 353 6 143 1 261 1 236 3 55 1 184 3 297 1 239 1 357 1 210 10 267 2 
188 2 168 29 243 4 99 1 100 1 131 5 40 3 304 1 41 1 65 2 278 4 87 6 47 1 151 1 229 1 327 1 174 1 367 4 49 15 347 1 70 1 372 3 180 1 259 4 353 6 143 1 261 1 236 3 55 2 184 3 297 1 239 1 357 1 210 14 267 5 
188 3 168 27 243 4 99 1 100 1 131 5 40 3 304 1 41 1 65 2 278 3 87 7 47 1 151 1 229 1 327 1 174 1 367 4 49 12 347 1 70 1 372 3 180 1 259 4 353 6 143 1 261 1 236 3 55 2 184 3 297 1 239 1 357 1 210 15 267 4 
188 4 168 24 243 2 99 1 100 1 131 5 40 2 65 1 41 1 278 1 87 9 47 1 229 1 151 1 327 1 367 5 49 10 347 1 372 2 180 1 259 2 353 4 143 2 261 1 236 2 55 1 184 2 297 2 31 1 239 1 357 2 210 14 267 4 
188 2 168 22 243 4 99 1 100 1 131 4 40 1 304 1 41 1 65 2 278 4 87 4 151 1 229 1 327 1 367 2 49 11 70 1 372 1 259 4 353 2 261 1 236 1 55 2 184 1 210 11 267 4 
188 3 168 28 243 4 99 1 100 1 131 5 40 4 304 1 41 1 65 2 278 3 87 7 47 1 151 1 229 1 327 1 174 1 367 4 49 13 347 1 70 1 372 4 180 1 259 4 353 8 143 1 261 1 236 4 55 2 184 4 297 1 239 2 357 1 210 15 267 4 
168 7 243 1 99 1 100 1 131 1 40 2 304 1 65 2 278 1 87 1 367 1 49 4 372 2 259 1 353 4 261 1 236 2 55 1 184 2 210 3 267 1 164 1 
367 3 188 3 49 4 168 7 347 2 131 1 180 1 143 3 87 6 297 1 357 3 210 3 267 1 
168 7 243 1 99 1 100 1 131 1 40 2 304 1 65 2 278 1 87 1 367 1 49 4 372 2 259 1 353 4 261 1 236 2 55 1 184 2 210 3 267 1 164 1 
367 2 188 1 49 4 168 8 347 1 131 1 372 2 180 1 353 4 40 2 143 1 236 2 184 2 87 3 297 1 47 1 239 1 357 1 210 4 267 1 
367 2 49 3 168 6 347 1 131 1 180 1 6 1 143 1 87 2 297 1 47 1 357 1 210 3 267 1 
367 1 188 1 49 2 243 1 168 4 372 1 131 1 259 1 353 2 40 1 236 1 278 1 184 1 87 2 174 1 210 2 267 1 
367 1 188 1 49 6 168 12 243 2 70 1 131 2 259 2 304 1 261 1 65 2 55 2 278 2 87 2 210 6 267 2 
188 4 243 2 168 23 131 3 341 1 304 1 40 2 65 2 278 2 87 9 47 1 367 5 49 12 346 1 347 1 70 1 372 2 180 1 259 2 353 4 143 2 236 2 55 2 184 2 297 1 239 2 357 2 210 11 267 3 
168 1 49 1 65 1 
168 1 55 1 210 1 
367 2 188 1 49 3 168 6 243 1 273 1 372 1 131 1 259 1 353 2 40 1 236 1 184 1 278 1 87 3 174 1 210 3 267 1 
188 2 168 22 243 4 99 1 100 1 131 4 40 1 304 1 41 1 65 2 278 4 87 4 151 1 229 1 327 1 367 2 49 11 70 1 372 1 259 4 353 2 261 1 236 1 55 2 184 1 210 11 267 4 
367 1 188 1 168 6 49 3 131 1 143 1 87 2 297 1 357 1 210 3 267 1 
367 1 188 1 49 2 168 3 346 1 347 1 372 1 180 1 353 2 143 1 40 1 236 1 184 1 87 2 239 1 357 1 210 1 
93 1 127 1 237 1 331 1 264 1 222 1 112 1 
176 1 127 1 331 1 222 1 130 1 93 1 295 1 237 1 122 1 264 1 112 1 35 1 
165 4 213 1 319 4 348 1 4 1 105 1 342 4 363 1 238 1 56 1 374 1 69 1 154 1 
165 2 329 1 244 1 128 1 319 2 140 1 105 1 342 2 183 1 238 1 56 1 13 1 374 2 200 1 
165 1 9 1 213 1 342 1 319 1 56 1 374 1 16 1 76 1 324 1 
165 2 319 2 157 1 53 1 105 1 342 2 238 1 56 1 67 1 374 1 69 1 
165 4 213 1 319 5 348 1 157 1 140 1 105 2 342 5 226 1 363 1 238 3 56 2 374 2 58 1 69 1 154 1 
165 4 213 1 319 5 348 1 157 1 140 1 91 1 105 2 342 5 226 1 363 1 238 3 56 2 374 2 69 1 154 1 
165 1 213 1 342 1 319 1 56 1 238 1 348 1 374 1 154 1 105 1 6 1 
165 1 213 1 127 1 244 1 319 1 270 1 189 1 222 2 105 1 342 1 238 1 56 1 264 1 374 1 230 1 112 2 59 1 18 1 
165 1 127 1 244 2 319 1 189 2 270 1 222 2 105 2 362 1 8 1 342 1 364 1 112 2 230 1 18 1 119 1 140 1 234 1 56 1 238 3 264 2 374 1 59 1 
165 2 127 1 244 2 319 2 189 2 270 1 4 1 222 2 105 2 362 1 8 1 342 2 364 1 112 2 230 1 119 1 140 1 234 1 181 1 56 1 238 3 264 2 374 1 59 1 
165 3 155 1 213 1 244 1 116 1 319 3 203 2 4 1 82 1 140 1 105 1 362 1 8 1 342 3 132 1 238 4 56 1 147 1 374 1 135 2 108 1 376 1 187 1 
165 3 213 1 244 1 319 3 203 2 4 1 82 1 140 1 105 1 362 1 8 1 342 3 132 1 238 4 56 1 147 1 30 1 374 1 135 2 108 1 376 1 187 1 
165 1 283 1 342 1 319 1 56 1 374 1 
165 6 345 1 283 1 213 2 329 1 244 1 128 1 319 7 157 1 53 1 105 2 84 1 294 1 226 1 342 7 159 1 238 3 56 2 374 3 58 1 69 1 
244 1 189 1 101 1 190 1 105 1 342 1 69 1 112 2 18 1 113 1 307 1 114 1 347 1 21 1 349 1 158 2 353 4 264 1 357 1 210 3 267 1 126 1 165 1 168 6 127 2 319 1 270 1 222 2 131 1 40 2 87 2 45 2 47 1 230 1 367 2 49 3 372 2 180 1 143 1 144 1 236 2 184 2 56 1 238 1 297 1 374 1 59 1 
165 1 213 1 242 1 319 1 320 2 82 1 39 1 342 1 10 2 132 1 227 1 135 3 108 1 365 1 281 1 17 1 284 2 203 3 333 1 74 1 238 2 57 1 30 1 147 1 123 1 33 2 376 2 187 1 
165 2 283 1 244 1 319 2 286 1 105 1 294 1 132 1 342 2 238 2 56 1 374 2 69 1 
165 1 213 1 127 1 244 1 319 1 270 1 189 1 222 2 105 1 181 1 342 1 238 1 56 1 264 1 374 1 230 1 112 2 59 1 
165 1 345 1 329 1 244 1 128 1 319 1 140 1 105 1 294 1 342 1 238 1 56 1 374 2 
1 1 127 1 207 1 360 1 51 1 
1 2 127 1 203 2 360 2 51 1 82 1 119 1 23 1 234 1 141 1 42 1 207 2 133 1 147 1 123 1 135 2 315 1 364 1 187 1 
96 1 360 1 51 1 222 1 207 1 27 1 264 1 112 1 268 1 
315 1 51 1 141 1 
115 1 262 1 26 1 245 1 272 1 251 1 322 1 77 1 
0 1 257 1 115 4 169 1 245 3 220 1 272 2 223 2 322 1 26 4 134 1 251 2 211 1 77 1 
115 2 36 1 245 1 272 1 223 1 322 1 224 1 262 1 26 2 251 1 199 1 77 1 
0 1 257 2 115 3 262 1 169 2 26 3 245 1 272 1 251 1 322 1 334 1 77 1 
195 1 255 1 245 2 271 2 
115 1 262 1 26 1 118 1 322 1 77 1 
115 2 262 1 26 2 245 1 145 1 272 1 251 1 223 1 322 1 77 1 
193 1 
115 1 262 1 26 1 245 1 272 1 251 1 322 1 77 1 
245 1 272 1 251 1 6 1 
115 1 26 1 245 1 272 1 251 1 322 1 77 1 
26 1 219 1 179 1 
0 1 257 2 115 3 262 1 169 1 26 3 245 1 89 1 272 1 251 1 322 1 77 1 
115 2 26 2 245 1 326 1 272 1 251 1 223 1 322 1 77 1 
301 1 115 1 262 1 26 1 245 1 217 1 16 1 322 1 211 1 324 1 77 1 
115 1 262 1 26 1 245 1 251 1 322 1 77 1 
115 1 262 1 26 1 272 1 251 2 322 1 77 1 
115 2 245 1 3 1 322 2 262 1 26 2 251 1 32 1 266 1 77 2 
115 3 245 2 220 1 272 1 321 1 223 2 322 1 262 1 26 3 145 1 251 1 211 1 77 1 
149 1 301 1 115 2 245 1 272 1 223 1 322 1 293 1 324 1 262 1 26 2 251 1 16 2 76 1 77 1 
115 4 245 2 220 1 272 1 350 1 223 2 322 2 262 1 26 4 326 1 251 1 211 1 77 2 
257 1 115 3 262 1 26 3 145 1 245 1 272 1 251 1 223 1 322 1 77 1 
245 1 134 1 220 1 211 1 
245 1 251 1 

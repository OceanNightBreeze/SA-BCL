#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (8,99) 324 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (8,99) 324 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 266 363 119 346 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 134 3 353 1 159 2 194 1 195 1 142 1 8 1 202 2 94 2 95 6 325 9 327 1 123 9 34 2 99 1 55 1 234 2 331 4 372 1 284 2 179 2 285 1 375 1 349 5 131 1 213 1 351 1 
133 1 134 3 353 1 159 2 194 1 195 1 142 1 8 1 202 2 94 2 95 6 325 9 327 1 123 9 34 2 99 1 55 1 234 2 331 4 372 1 284 2 179 2 285 1 375 1 349 5 131 1 213 1 351 1 
133 1 134 4 353 1 159 2 194 1 195 1 142 1 8 1 202 2 94 2 95 7 325 10 327 1 123 10 34 2 99 1 55 1 234 2 331 5 372 1 284 2 179 2 285 1 375 1 349 6 131 1 213 1 351 1 
134 2 353 1 159 2 194 1 195 1 142 1 8 1 202 2 94 2 95 4 325 7 327 1 123 7 34 2 99 1 55 1 234 1 331 3 372 1 284 2 179 2 285 1 375 1 349 4 131 1 213 1 351 1 
327 1 133 1 134 1 353 1 123 4 159 1 34 1 142 1 55 1 234 2 331 2 372 1 284 1 202 1 94 1 349 3 95 3 325 4 
303 1 353 1 123 2 159 1 194 1 55 1 372 1 284 1 202 1 361 1 179 1 94 1 349 1 375 1 164 1 325 2 
134 1 353 1 123 3 99 1 55 1 331 1 372 1 284 2 202 2 179 1 349 2 95 1 325 3 
99 1 372 1 284 1 202 1 123 1 324 1 325 1 
99 1 372 1 284 1 202 1 123 1 324 1 325 1 
96 1 187 1 354 1 
187 1 39 1 49 2 
370 2 2 2 241 2 73 1 12 2 301 2 43 2 274 1 
2 3 313 1 241 2 157 1 135 1 266 2 86 2 316 1 23 1 160 1 245 1 25 2 273 1 360 1 339 1 323 1 301 3 117 2 274 1 167 1 363 2 33 1 119 1 73 1 254 1 12 2 277 1 255 1 127 1 370 2 16 1 283 1 80 1 100 1 265 1 104 1 43 2 
36 1 370 1 2 1 118 1 74 1 241 1 73 1 12 1 301 1 43 1 
340 1 2 1 186 1 241 1 74 1 85 1 187 1 47 1 354 1 112 1 78 1 371 1 224 1 301 1 
340 1 2 1 186 1 241 1 74 1 187 1 12 1 47 2 354 1 78 1 370 1 371 1 224 2 43 1 301 1 
108 1 224 1 47 1 235 1 228 1 
2 1 118 1 74 1 241 1 73 1 12 1 187 1 47 2 333 1 354 1 126 1 36 1 370 1 224 2 235 1 102 1 301 1 43 1 228 1 
224 1 47 1 228 1 
118 1 2 1 74 1 73 1 241 1 12 1 47 1 126 1 36 1 370 1 224 1 235 1 43 1 301 1 
187 1 
2 1 118 1 74 1 241 1 73 1 12 1 187 1 47 2 333 1 354 1 126 1 36 1 370 1 224 2 297 1 235 1 301 1 43 1 228 1 
2 1 241 1 311 1 187 2 158 1 47 5 333 1 354 2 113 2 143 2 246 2 162 5 224 5 199 1 68 1 27 1 9 1 301 1 71 1 228 2 72 1 118 1 74 1 73 1 12 1 76 2 230 4 207 1 126 1 36 1 370 1 210 1 59 1 40 1 235 2 43 1 288 2 155 2 
96 1 274 1 
2 2 241 2 352 1 12 1 370 1 132 1 301 2 43 1 274 2 
3 1 91 1 318 1 
363 1 2 1 119 1 157 1 266 1 316 1 160 1 174 1 127 1 16 1 283 1 339 1 104 1 301 1 117 1 274 1 
363 1 3 1 2 2 119 1 241 1 157 1 266 1 316 1 160 1 127 1 16 1 294 1 370 1 283 1 339 1 104 1 287 1 43 1 301 2 117 1 
240 1 2 5 241 5 352 1 12 1 112 1 138 1 370 4 294 1 286 1 287 2 43 4 301 5 274 1 
36 1 370 2 2 2 74 1 241 2 263 1 301 2 43 2 
370 3 2 3 241 3 12 1 287 1 301 3 43 3 274 1 
36 1 370 1 2 1 74 1 241 1 301 1 43 1 
370 1 2 1 74 1 241 1 12 1 352 1 132 1 301 1 43 1 
2 4 186 1 313 1 241 3 157 1 352 1 47 1 135 1 292 1 266 1 86 1 316 1 23 1 160 1 245 1 25 2 294 1 360 1 224 1 339 1 323 1 301 4 117 1 274 1 340 1 363 1 33 1 119 1 74 1 254 1 73 1 12 2 78 1 127 1 16 1 370 3 371 1 283 1 80 1 100 1 62 1 104 1 43 3 287 1 
370 1 2 2 241 2 112 1 286 1 301 2 43 1 287 1 274 1 
340 1 2 3 186 1 74 1 241 3 12 1 352 1 187 1 47 1 78 1 294 1 370 3 371 1 224 1 62 1 287 2 43 3 301 3 148 1 
2 2 3 1 241 2 352 1 12 1 370 2 91 1 287 1 43 2 301 2 
363 1 2 1 119 1 157 1 266 1 316 1 160 1 127 1 16 1 283 1 339 1 104 1 301 1 117 1 274 1 
363 1 2 1 119 1 157 1 266 1 316 1 160 1 127 1 57 1 283 1 203 1 104 1 301 1 117 1 274 1 
3 1 313 1 302 1 304 1 135 2 121 1 86 2 23 1 318 1 245 1 25 2 260 1 91 1 360 1 100 1 345 1 146 1 323 1 288 1 
370 1 371 1 2 1 74 1 241 1 263 1 301 1 43 1 
165 1 6 1 
165 1 6 1 
276 1 236 1 
276 1 236 1 
276 1 236 1 
165 1 344 1 6 1 
165 1 344 1 6 1 
165 1 231 1 6 1 
165 2 276 1 364 1 236 1 61 1 6 2 
165 1 344 1 6 1 
165 1 103 1 6 1 
165 1 103 1 6 1 
165 1 103 1 6 1 
253 1 165 1 150 1 2 2 168 1 120 1 241 2 47 1 290 1 136 1 231 1 6 1 114 1 337 1 370 2 272 1 209 1 224 1 130 1 307 1 252 1 301 2 43 2 274 1 
253 2 165 2 168 2 364 1 187 1 47 2 6 2 293 1 114 1 337 2 280 1 144 1 262 2 321 1 322 1 224 2 130 3 264 1 307 2 
94 1 159 1 34 1 
94 1 164 1 159 1 
82 1 83 1 13 1 94 3 164 1 34 2 
83 1 13 1 94 2 164 1 34 1 193 1 
83 2 13 1 94 2 164 1 34 1 
156 2 187 2 47 5 290 1 136 1 333 1 354 1 49 3 143 1 246 1 162 2 67 1 224 5 298 2 226 1 251 1 228 1 76 1 14 1 230 3 257 1 260 1 37 1 151 1 209 1 59 1 39 1 235 4 182 2 288 1 155 1 310 1 
108 5 84 1 187 5 47 9 136 4 333 1 354 1 49 9 139 5 143 3 246 2 162 6 67 2 224 9 298 6 26 1 251 3 228 6 10 1 326 1 229 1 76 2 14 3 230 8 125 1 207 1 260 3 151 2 59 1 39 3 235 7 182 6 288 3 310 1 155 2 
156 1 187 3 47 3 136 1 354 1 49 4 143 1 246 1 67 1 162 2 224 3 298 2 251 1 76 1 230 3 14 1 207 1 257 1 260 1 37 1 151 1 39 2 235 2 182 2 288 1 155 1 
156 2 84 1 187 4 47 4 136 2 354 1 49 7 143 2 246 1 67 1 162 4 224 4 298 4 251 2 10 1 229 1 76 1 230 5 14 2 207 1 257 1 260 2 37 1 151 1 39 3 235 3 182 4 288 2 155 1 
96 1 283 1 169 1 
283 1 24 1 
338 1 
127 1 283 1 157 1 
283 1 92 1 
283 1 157 1 
127 1 169 2 283 3 157 1 336 1 184 1 
11 2 343 1 158 1 135 3 121 3 191 1 334 1 86 7 143 1 330 1 40 1 146 2 265 4 70 1 300 1 288 1 71 1 
11 2 343 1 158 1 135 3 121 3 191 1 334 1 86 7 143 1 330 1 40 1 146 2 265 4 70 1 300 1 288 1 71 1 
205 1 343 1 11 2 158 1 135 3 121 3 191 1 334 1 86 7 143 1 330 1 40 1 146 2 265 4 70 1 300 1 288 1 71 1 
313 1 158 1 135 15 191 1 334 2 86 31 23 1 143 4 25 2 50 1 146 5 29 1 70 1 323 1 300 2 251 3 71 2 343 1 11 3 14 3 121 10 328 1 232 4 172 1 330 5 260 3 100 1 306 1 40 2 41 1 183 3 265 16 288 4 81 1 
313 2 343 1 11 2 158 1 135 4 121 4 334 1 86 9 23 2 143 1 259 1 25 4 330 1 100 2 145 1 40 1 41 1 146 3 265 5 70 1 300 1 323 2 288 1 71 1 
44 1 82 1 353 1 266 1 244 1 4 1 159 1 87 1 160 1 198 1 202 1 94 2 115 1 164 1 95 1 117 1 325 2 275 1 363 1 123 2 34 1 256 1 55 1 152 1 372 1 284 1 179 1 211 1 349 1 104 1 
44 1 82 1 312 1 353 1 266 1 244 1 220 1 4 1 159 1 87 1 160 1 198 1 247 1 202 1 94 2 164 1 95 2 117 1 325 3 275 1 363 1 123 3 34 1 55 1 152 1 284 1 179 1 211 1 349 1 104 1 
44 1 275 1 82 1 363 1 312 1 353 1 266 1 123 2 159 1 34 1 160 1 87 1 55 1 152 1 198 1 247 1 179 1 94 2 211 1 349 1 164 1 104 1 95 2 117 1 325 2 
275 2 44 2 363 1 119 1 109 1 64 1 266 1 123 1 220 1 198 2 284 1 179 2 202 1 239 1 147 1 117 1 325 1 
44 1 82 1 312 1 266 1 244 1 4 1 159 1 87 1 160 1 198 1 202 1 94 2 164 1 117 1 325 1 275 1 363 1 123 1 34 1 256 1 152 1 372 1 284 1 179 1 211 1 104 1 
129 1 
157 2 47 2 111 1 266 2 333 1 65 1 5 1 355 1 271 1 160 2 66 1 246 1 162 1 224 2 28 1 117 2 228 2 363 2 119 2 76 1 230 1 127 1 151 1 283 2 59 1 346 1 238 1 104 3 155 1 
185 1 2 1 186 1 241 1 85 1 47 3 333 1 112 1 319 1 358 1 297 1 224 3 301 1 228 2 340 1 149 2 74 1 369 1 78 1 371 1 17 1 308 1 
2 1 186 1 241 1 85 1 187 1 47 3 333 1 112 1 354 1 319 1 320 1 358 1 224 3 297 1 301 1 228 1 340 1 149 3 74 1 369 1 78 1 371 1 17 1 308 1 
185 1 2 1 186 1 241 1 85 1 47 3 333 1 112 1 319 1 320 1 90 1 358 1 297 1 224 3 301 1 228 2 340 1 149 3 74 1 369 1 78 1 371 1 17 1 308 1 
185 4 186 1 2 2 241 2 85 1 187 1 189 1 47 5 333 3 246 1 90 4 297 1 301 2 340 1 52 1 341 2 149 4 12 1 98 2 258 1 17 1 59 1 308 1 155 1 354 1 112 1 319 1 320 2 358 1 162 1 359 1 224 5 228 7 362 2 118 1 73 1 74 2 369 1 76 1 230 1 78 1 171 1 126 1 36 1 279 1 370 1 371 1 332 2 39 2 374 1 43 1 
185 2 186 1 2 2 241 2 85 1 189 1 187 1 47 4 333 2 49 2 246 1 90 2 301 2 340 1 341 2 149 4 12 1 98 2 59 1 17 1 308 1 309 1 155 1 112 1 354 1 319 1 320 2 358 1 162 1 224 4 228 4 362 2 118 1 73 1 74 2 76 1 369 1 230 1 78 1 171 1 126 1 36 1 370 1 371 1 332 2 39 2 43 1 
185 2 2 1 186 1 241 1 85 1 187 1 189 1 47 4 333 2 354 1 112 1 246 1 320 2 319 1 90 2 162 1 358 1 224 4 301 1 228 4 362 2 340 1 341 2 52 1 149 4 74 1 369 1 76 1 98 2 230 1 78 1 171 1 279 1 371 1 332 2 17 1 59 1 39 2 374 1 308 1 155 1 
185 2 186 1 2 2 241 2 85 1 189 1 187 1 47 4 333 2 246 1 90 2 301 2 340 1 52 1 341 2 149 4 12 1 98 2 59 1 17 1 308 1 155 1 112 1 354 1 319 1 320 2 358 1 162 1 224 4 228 4 362 2 118 1 73 1 74 2 76 1 369 1 230 1 78 1 171 1 126 1 36 1 279 1 370 1 371 1 332 2 39 2 374 1 43 1 
185 2 186 1 2 2 241 2 85 1 46 1 187 1 47 4 333 2 49 2 246 1 90 2 301 2 340 1 341 2 149 4 12 1 98 2 59 1 17 1 308 1 155 1 112 1 354 1 319 1 320 2 358 1 162 1 224 4 227 1 228 4 32 2 118 1 73 1 74 2 367 2 76 1 369 1 230 1 78 1 171 1 126 1 36 1 370 1 128 1 371 1 374 1 43 1 
185 3 186 1 2 2 241 2 85 1 189 1 187 1 47 4 333 2 246 1 90 3 301 2 340 1 52 1 341 2 149 5 12 1 98 2 258 1 17 1 59 1 308 1 155 1 112 1 354 1 320 3 319 1 358 1 162 1 224 4 228 5 362 2 118 1 73 1 74 2 369 1 76 1 230 1 78 1 171 1 126 1 36 1 279 1 370 1 371 1 332 2 39 2 374 1 43 1 
185 3 186 1 2 2 241 2 85 1 189 1 187 1 47 4 333 2 246 1 90 3 301 2 340 1 52 1 341 2 149 5 12 1 98 2 258 1 17 1 59 1 308 1 155 1 112 1 354 1 320 3 319 1 358 1 162 1 224 4 228 5 362 2 118 1 73 1 74 2 369 1 76 1 230 1 78 1 171 1 126 1 36 1 279 1 370 1 371 1 332 2 39 2 374 1 43 1 
185 1 186 1 2 1 241 1 85 1 187 1 46 1 47 3 333 1 49 2 246 1 90 1 301 1 340 1 341 2 149 3 98 2 59 1 17 1 308 1 309 1 155 1 112 1 354 1 319 1 320 1 358 1 162 1 224 3 228 2 32 1 74 1 367 2 76 1 369 1 230 1 78 1 171 1 371 1 
3 1 313 1 158 1 135 3 86 6 23 1 245 1 318 1 143 1 25 2 91 1 360 1 146 2 70 1 323 1 71 1 274 2 96 1 343 1 11 1 302 1 121 2 100 1 40 1 265 3 288 1 
3 12 313 2 135 5 243 1 217 1 86 15 23 2 245 1 318 12 143 3 25 4 91 3 360 2 50 1 116 1 29 2 323 2 251 3 274 1 204 1 33 1 255 1 14 3 121 2 232 4 330 2 100 2 19 1 183 3 265 10 
2 2 313 1 241 1 157 1 135 1 266 1 217 1 316 1 86 2 160 1 23 1 245 1 25 2 294 1 91 1 360 1 339 1 323 1 117 1 301 2 274 1 363 1 119 1 33 1 75 1 255 1 174 1 127 1 16 1 370 1 261 1 283 1 100 1 265 1 104 1 43 1 287 1 106 1 
2 2 3 2 241 1 135 2 86 5 245 2 196 1 143 1 294 1 91 2 339 1 146 1 251 1 301 2 14 1 16 1 100 2 265 3 104 1 350 1 313 2 157 1 266 1 217 1 316 1 23 2 160 1 318 2 25 4 360 2 323 2 117 1 363 1 33 1 119 1 366 1 368 1 121 3 35 1 127 1 370 1 330 2 80 1 283 1 287 1 43 1 
2 1 312 1 241 1 313 2 157 2 135 1 192 1 266 8 355 1 86 2 160 2 23 2 245 2 66 1 25 4 273 2 360 2 115 1 323 2 301 1 117 8 363 7 119 2 33 1 302 1 255 1 370 1 233 1 79 1 56 1 178 1 283 3 100 2 265 1 63 1 153 1 104 2 43 1 287 1 
3 1 2 1 313 1 241 1 352 1 135 2 217 1 86 3 23 1 318 1 245 1 143 1 25 2 91 1 360 1 146 1 323 1 251 1 301 1 12 1 121 1 14 1 370 1 260 1 100 1 265 1 21 1 43 1 288 1 
3 1 313 1 302 1 121 1 315 1 86 2 23 1 318 1 245 1 143 1 25 2 330 1 91 1 360 1 100 1 265 2 323 1 251 1 
3 1 313 1 302 1 135 2 121 1 86 2 23 1 318 1 245 1 25 2 260 1 91 1 360 1 100 1 345 1 146 1 323 1 288 1 
3 2 313 1 135 2 86 4 23 1 245 1 318 2 143 1 25 2 91 2 360 1 146 1 251 1 323 1 302 1 14 1 121 2 330 1 260 1 100 1 265 2 288 1 
3 1 313 1 121 1 315 1 86 2 23 1 318 1 245 1 143 1 25 2 330 1 233 1 91 1 360 1 100 1 265 2 323 1 251 1 
3 1 313 1 135 2 121 1 86 2 23 1 318 1 245 1 25 2 233 1 260 1 91 1 360 1 100 1 345 1 146 1 323 1 288 1 
3 1 313 1 121 1 14 1 86 2 23 1 318 1 245 1 143 1 25 2 330 1 233 1 91 1 360 1 100 1 265 2 323 1 251 1 
3 1 313 1 121 1 14 1 86 2 23 1 318 1 245 1 143 1 25 2 330 1 91 1 360 1 100 1 265 2 323 1 251 1 
2 1 313 1 157 1 135 1 266 1 86 2 316 1 160 1 23 1 245 1 25 2 360 1 339 1 323 1 117 1 301 1 274 1 363 1 119 1 33 1 255 1 127 1 16 1 80 1 283 1 100 1 265 1 104 1 
2 1 313 1 157 1 135 1 266 1 86 2 316 1 160 1 23 1 245 1 25 2 360 1 203 1 323 1 117 1 301 1 274 1 363 1 119 1 33 1 365 1 255 1 127 1 57 1 283 1 100 1 265 1 104 1 
3 1 313 1 121 1 217 1 14 1 86 2 23 1 318 1 245 1 143 1 25 2 330 1 91 1 360 1 100 1 265 2 323 1 251 1 
3 1 2 1 313 1 157 1 266 1 86 2 316 1 160 1 23 1 318 1 245 1 143 1 25 2 91 1 360 1 339 1 115 1 251 1 323 1 117 1 301 1 363 1 368 1 121 1 14 1 127 1 330 1 16 1 80 1 283 1 100 1 265 2 104 1 
2 1 3 1 313 1 241 1 352 1 217 1 86 2 23 1 245 1 318 1 143 1 25 2 91 1 360 1 323 1 251 1 301 1 12 1 121 1 14 1 54 1 330 1 370 1 100 1 265 2 43 1 
313 2 242 1 188 2 135 10 86 19 23 2 143 3 25 4 201 1 146 3 50 1 163 1 29 1 323 2 251 3 97 1 14 3 121 6 232 2 259 1 281 1 282 1 330 3 260 3 38 2 100 2 20 1 183 1 265 9 288 3 
313 3 242 1 188 1 135 12 291 1 86 26 23 3 143 3 25 6 201 2 146 2 50 2 163 2 30 1 323 3 251 3 121 4 14 3 206 1 232 2 305 1 259 1 330 2 282 1 260 2 38 4 176 1 100 3 20 1 41 2 265 14 183 2 42 1 288 2 
313 3 242 1 188 1 158 1 291 1 135 21 86 41 23 3 143 5 25 6 201 2 146 4 50 3 249 1 163 1 30 1 29 1 70 1 323 3 251 4 71 1 11 1 343 1 14 4 121 8 206 1 232 4 305 1 259 1 281 1 282 1 330 4 260 4 176 1 38 4 100 3 40 1 20 1 41 1 183 3 265 20 42 1 288 5 
313 4 242 1 188 1 158 1 291 1 135 18 86 38 23 4 143 5 25 8 201 2 146 4 50 3 249 1 163 1 30 1 29 1 70 1 323 4 251 4 71 1 11 1 343 1 14 4 121 7 206 1 232 4 305 1 259 1 281 1 282 1 330 3 260 3 176 1 38 4 100 4 40 1 20 1 41 2 183 3 265 20 42 1 288 4 
313 2 242 1 188 1 158 1 291 1 135 25 86 52 23 2 143 8 25 4 201 1 146 7 50 2 163 1 30 1 29 2 70 1 323 2 251 7 71 1 204 2 11 1 343 1 14 7 121 14 206 1 232 4 305 1 259 1 282 1 330 7 260 7 176 1 38 4 100 2 40 1 20 1 41 1 183 4 265 27 42 1 288 8 
0 1 165 1 253 1 168 1 364 1 322 1 264 1 307 1 6 1 337 1 
272 1 231 1 
165 1 253 1 168 1 289 1 93 1 307 1 6 1 337 1 215 1 
344 1 141 1 
61 1 103 1 250 1 
253 1 165 1 168 1 364 1 187 1 47 1 6 1 293 1 114 1 337 1 280 1 262 1 321 1 322 1 224 1 130 2 264 1 307 1 
253 1 165 1 168 1 364 1 187 1 47 1 6 1 293 1 114 1 337 1 280 1 262 1 321 1 322 1 224 1 130 2 264 1 307 1 
253 1 165 1 168 1 364 1 187 1 47 1 6 1 293 1 114 1 337 1 280 1 262 1 321 1 322 1 224 1 130 2 264 1 307 1 
344 1 61 1 141 1 
344 1 61 1 141 1 
103 1 250 1 
61 1 103 1 250 1 
150 1 120 1 
2 2 241 2 47 1 136 1 290 1 6 1 337 1 272 1 224 1 252 1 301 2 274 1 165 1 253 1 168 1 150 1 120 1 231 1 280 1 370 2 262 1 209 1 130 1 101 1 235 1 307 1 43 2 
2 2 313 1 241 2 157 1 135 1 192 1 266 2 217 1 335 1 86 2 160 1 23 1 245 1 25 2 273 2 360 1 323 1 117 2 301 2 363 2 33 1 255 1 77 1 124 1 56 1 283 1 58 1 100 1 265 1 104 1 154 1 
275 1 82 1 363 2 312 1 53 1 266 2 244 1 159 1 34 1 160 1 87 1 152 1 94 2 115 1 164 1 104 1 105 1 117 2 216 1 
275 1 82 1 363 1 312 1 266 1 244 1 15 1 159 1 34 1 87 1 160 1 152 1 94 2 164 1 104 1 105 1 117 1 
275 1 363 1 119 1 266 1 239 1 269 1 117 1 216 1 
275 1 82 1 363 1 312 1 53 1 266 1 244 1 159 1 34 1 87 1 160 1 152 1 94 2 164 1 104 1 105 1 117 1 216 1 
22 1 
72 1 96 1 162 1 187 1 199 1 230 1 354 1 
2 1 241 1 189 1 187 1 47 1 333 1 354 1 49 1 246 1 162 1 224 1 301 1 228 1 362 1 118 1 74 1 73 1 12 1 76 1 230 1 126 1 36 1 370 1 59 1 332 1 39 1 43 1 155 1 
45 1 187 3 47 2 190 1 333 1 336 1 140 1 49 6 143 1 246 2 298 3 251 1 14 1 151 1 260 1 59 2 104 2 350 1 155 2 157 1 266 1 113 1 221 1 160 1 24 2 162 3 224 2 117 1 228 2 363 1 119 1 169 1 76 2 230 4 78 1 278 1 127 1 175 1 283 4 39 3 180 1 182 3 288 1 
2 1 241 1 187 5 47 1 291 1 333 1 49 6 143 2 246 2 197 1 200 1 298 5 50 1 251 2 301 1 9 1 12 1 14 2 206 1 305 1 260 2 151 1 59 2 155 2 65 1 354 2 113 2 162 5 224 1 228 1 118 1 74 1 73 1 76 2 230 8 232 1 126 1 36 1 370 1 176 1 39 3 183 1 182 5 42 1 288 2 43 1 
2 1 241 1 47 1 158 1 113 2 143 2 246 1 162 2 68 1 224 1 9 1 301 1 71 1 52 1 118 1 74 1 73 1 12 1 76 1 230 2 126 1 36 1 370 1 59 1 40 1 155 1 288 1 43 1 
72 1 187 1 76 1 230 1 354 1 246 1 162 1 199 1 59 1 155 1 
187 5 14 2 230 5 113 2 49 10 143 2 260 2 162 5 298 5 39 5 182 5 251 2 350 1 9 1 288 2 
2 1 118 1 74 1 241 1 73 1 12 1 187 1 47 1 333 1 354 1 126 1 36 1 370 1 224 1 301 1 43 1 228 1 
363 2 119 2 47 1 76 1 333 1 230 1 266 2 65 1 151 1 246 1 162 1 224 1 59 1 299 1 346 1 28 1 117 2 155 1 228 2 
2 3 241 2 313 1 157 1 135 1 266 1 86 1 316 1 23 1 160 1 245 1 25 2 360 1 339 1 323 1 117 1 301 3 274 1 363 1 33 1 119 1 73 1 254 1 12 2 127 1 370 2 16 1 80 1 283 1 100 1 104 1 43 2 
11 1 187 4 76 1 230 1 354 2 65 1 49 4 246 1 151 1 162 2 59 1 298 2 39 2 182 2 155 1 
1 1 307 1 337 1 
1 1 307 1 337 1 
357 1 120 1 264 1 307 1 337 1 
1 1 307 1 337 1 
295 1 307 1 337 1 
295 1 307 1 337 1 
295 1 307 1 337 1 
307 1 337 1 
165 1 6 1 
313 2 11 1 343 1 158 1 135 4 121 3 86 8 23 2 143 1 25 4 330 1 100 2 40 1 146 2 41 1 265 4 70 1 323 2 288 1 71 1 
96 1 11 1 343 1 158 1 135 3 121 2 86 6 143 1 40 1 146 2 265 3 70 1 288 1 71 1 
313 1 135 2 121 2 14 1 86 4 23 1 143 1 25 2 260 1 330 1 100 1 373 1 146 1 265 2 323 1 251 1 288 1 
135 4 14 1 121 2 232 2 86 7 143 1 260 1 330 1 146 1 50 1 183 1 265 3 29 1 251 1 288 1 
313 2 158 1 135 12 243 1 86 23 23 2 143 3 25 4 89 1 146 5 29 1 70 1 251 2 323 2 71 2 204 1 11 1 343 1 121 9 14 2 232 2 330 4 260 2 100 2 40 2 41 2 265 11 183 2 288 3 
135 1 86 1 232 1 
265 1 183 1 86 1 
313 1 135 3 14 1 121 3 86 6 23 1 143 1 25 2 330 1 260 1 100 1 373 1 146 2 265 3 323 1 251 1 350 1 288 1 
313 1 135 6 291 1 86 12 23 1 143 2 25 2 50 1 146 1 323 1 251 2 14 2 121 2 206 1 232 1 305 1 259 1 330 1 260 2 176 1 100 1 183 1 265 6 42 1 288 2 
158 1 135 3 121 2 86 6 143 1 330 1 40 1 146 1 265 3 288 1 71 1 
313 1 343 1 135 2 121 2 86 3 23 1 25 2 330 1 89 1 100 1 40 1 146 1 41 1 265 1 70 1 323 1 71 1 
313 1 158 1 135 5 121 5 86 10 23 1 143 2 25 2 259 1 330 2 68 1 100 1 40 2 146 3 265 5 323 1 288 2 71 2 
313 1 121 1 86 2 23 1 143 1 259 1 25 2 330 1 100 1 265 2 323 1 251 1 
313 1 135 2 121 2 14 1 86 4 23 1 143 1 259 1 25 2 260 1 330 1 100 1 146 1 265 2 323 1 251 1 288 1 
313 3 135 2 121 2 86 3 23 3 259 1 25 6 281 1 330 1 89 1 100 3 40 1 41 1 146 1 265 1 323 3 71 1 
313 5 158 2 135 18 86 34 23 5 143 5 25 10 89 1 50 1 146 7 29 1 70 1 323 5 251 3 71 3 11 1 343 1 328 1 14 3 121 12 232 4 259 1 281 1 330 5 260 3 306 1 100 5 40 3 373 1 41 2 183 3 265 16 81 1 288 5 
313 1 158 1 135 4 291 1 86 8 23 1 143 1 25 2 50 1 146 2 70 1 323 1 71 1 11 1 343 1 121 2 232 1 259 1 100 1 40 1 183 1 265 4 288 1 
313 2 158 1 135 5 291 1 86 11 23 2 143 2 25 4 146 2 50 1 29 1 70 1 323 2 251 1 71 1 11 1 343 1 14 1 121 3 232 2 259 1 330 1 100 2 40 1 373 1 183 1 265 6 288 1 
313 3 158 1 135 10 291 1 86 19 23 3 143 3 25 6 50 1 146 3 70 1 323 3 251 2 71 1 11 1 343 1 14 2 121 4 206 1 232 1 305 1 259 1 330 1 260 2 176 1 100 3 40 1 373 1 41 1 183 1 265 9 42 1 288 3 
313 3 158 1 135 7 291 1 86 17 23 3 143 3 25 6 50 1 146 3 70 1 323 3 251 2 71 1 11 1 343 1 14 2 121 5 206 1 232 1 305 1 259 1 330 2 260 1 176 1 100 3 40 1 373 1 41 1 183 1 265 10 42 1 288 2 
313 1 158 1 135 4 291 1 86 8 23 1 143 1 25 2 50 1 146 2 70 1 323 1 71 1 11 1 343 1 121 2 232 1 259 1 100 1 40 1 183 1 265 4 288 1 
313 1 135 6 291 1 86 12 23 1 143 2 25 2 50 1 146 1 323 1 251 2 14 2 121 2 206 1 232 1 305 1 259 1 330 1 260 2 176 1 100 1 183 1 265 6 42 1 288 2 
313 4 158 1 135 8 291 1 86 18 23 4 143 3 25 8 50 1 146 3 70 1 323 4 251 2 71 1 11 1 343 1 14 2 121 5 206 1 232 1 305 1 259 1 330 2 260 1 176 1 100 4 40 1 373 1 41 2 183 1 265 10 42 1 288 2 
313 4 135 7 291 1 86 16 23 4 143 3 25 8 50 1 146 3 323 4 251 3 14 3 121 6 206 1 232 1 305 1 259 1 330 3 281 1 260 2 176 1 100 4 41 2 183 1 265 9 42 1 288 2 
343 2 158 1 135 4 121 6 86 7 143 1 330 3 40 3 146 3 265 3 70 1 288 1 71 3 
313 4 158 1 135 8 291 1 86 18 23 4 143 3 25 8 50 1 146 3 70 1 323 4 251 2 71 1 11 1 343 1 14 2 121 4 206 1 232 1 305 1 259 1 330 1 281 1 260 1 176 1 100 4 40 1 41 2 183 1 265 10 42 1 288 2 
2 1 241 1 296 1 112 1 301 1 286 1 274 1 
2 1 241 1 112 1 88 1 7 1 296 1 51 1 212 1 348 1 286 1 301 1 274 1 
363 1 96 1 119 1 283 1 157 1 266 1 355 1 104 1 160 1 66 1 117 1 
363 1 2 2 119 1 241 1 157 1 266 1 316 1 160 1 127 1 370 1 16 1 283 1 104 1 287 1 43 1 301 2 117 1 274 1 
363 1 186 1 2 2 74 1 241 2 157 2 266 1 316 1 160 1 127 2 370 2 222 1 16 1 371 1 283 3 92 1 181 1 104 1 287 1 43 1 301 2 117 1 274 1 
363 2 186 1 2 2 74 1 241 2 157 2 170 1 266 2 316 1 160 1 127 2 370 2 222 1 371 1 57 1 283 3 92 1 181 1 104 1 287 1 43 1 301 2 117 2 274 1 
363 3 119 1 169 1 187 1 157 1 47 2 170 1 266 3 354 1 78 1 160 1 24 1 127 1 222 1 161 1 283 4 92 1 224 2 181 1 347 1 104 1 117 3 228 1 
363 3 119 1 169 1 187 1 157 1 47 2 170 1 266 3 354 1 78 1 160 1 24 1 127 1 222 1 175 1 283 4 92 1 224 2 181 1 104 1 117 3 228 1 
363 1 178 1 266 1 104 1 160 1 117 1 
363 6 119 2 312 1 157 2 192 1 111 1 266 7 336 1 5 1 160 2 173 1 127 1 273 1 79 1 178 1 283 3 115 1 63 1 153 1 104 3 117 7 
3 1 2 2 313 2 241 1 157 1 158 1 135 3 217 1 266 1 86 6 316 1 160 1 23 2 318 1 245 2 143 1 196 1 25 4 91 1 360 2 146 2 339 1 115 1 70 1 323 2 301 2 117 1 274 2 71 1 363 1 11 1 343 1 368 1 121 2 77 1 127 1 370 1 16 1 283 1 80 1 100 2 40 1 265 3 104 1 288 1 43 1 287 1 
45 1 2 1 241 1 187 2 47 3 333 1 140 1 143 2 246 2 199 1 299 1 9 1 301 1 12 1 59 2 155 2 158 1 266 1 354 2 113 2 24 1 162 5 224 3 68 1 117 1 228 2 71 1 363 1 72 1 119 1 118 1 74 1 73 1 169 1 76 2 230 4 78 1 278 1 126 1 36 1 370 1 175 1 283 2 235 1 40 1 288 2 43 1 
363 2 169 1 157 1 266 2 221 1 336 1 160 1 127 1 178 1 283 2 115 1 104 2 117 2 
363 4 119 1 314 1 157 1 170 1 266 4 355 1 160 1 66 1 283 1 115 1 104 1 117 4 
363 2 157 1 111 1 266 2 356 1 5 1 271 1 160 1 127 1 222 1 283 1 238 1 104 2 117 2 
363 1 119 1 94 1 266 1 164 1 159 1 104 1 160 1 87 1 117 1 
363 2 312 1 157 1 266 2 192 1 160 1 283 1 115 1 154 1 104 1 117 2 
363 4 119 1 314 1 157 2 266 5 192 1 355 1 160 2 66 1 222 1 283 3 115 1 63 1 104 2 153 1 117 5 
363 4 119 1 314 1 157 2 266 5 192 1 355 1 48 1 160 2 66 1 222 1 283 3 115 1 104 2 153 1 117 5 
363 1 2 2 119 1 241 1 157 1 266 1 316 1 160 1 127 1 370 1 57 1 283 1 104 1 287 1 43 1 301 2 117 1 274 1 
363 1 157 1 111 1 266 1 336 1 5 1 160 1 173 1 127 1 222 1 283 1 104 2 117 1 
69 1 248 1 219 1 268 1 274 1 
340 1 186 1 74 1 187 1 110 1 47 2 354 1 78 1 219 2 268 2 371 1 177 1 224 2 69 2 235 1 225 1 248 1 62 1 274 1 
2 1 241 1 219 1 335 1 124 1 268 1 58 1 248 1 301 1 
110 1 225 1 248 1 
55 1 96 1 353 1 349 1 
55 1 353 1 284 1 202 1 123 1 349 1 325 1 
44 1 179 1 123 1 
166 1 353 1 137 1 123 3 329 1 194 2 55 1 372 1 284 1 202 1 349 1 325 3 
55 1 234 1 353 1 284 1 202 1 123 2 349 1 95 1 325 2 
327 1 331 1 372 1 284 1 202 1 94 1 123 1 349 1 159 1 34 1 325 1 
55 1 372 1 284 1 202 1 123 1 349 1 325 1 
55 2 372 1 353 1 284 1 202 1 123 1 325 1 
218 1 123 2 122 1 55 1 208 1 372 1 284 2 202 2 349 1 325 2 
134 1 353 1 123 3 195 1 55 1 331 1 372 1 284 1 202 1 349 2 213 1 95 2 325 3 
82 1 353 1 123 2 34 1 159 1 55 1 372 1 284 1 202 1 94 2 349 1 237 1 164 1 95 1 325 2 
133 1 134 1 353 1 123 4 55 1 234 1 331 1 372 1 284 2 202 2 349 2 95 2 325 4 
55 1 372 1 353 1 284 1 202 1 123 1 349 1 325 1 
166 1 107 1 134 1 353 2 123 4 329 1 194 1 55 2 331 1 284 1 202 1 349 3 95 2 325 4 
55 1 372 1 353 1 284 1 202 1 60 1 123 2 349 1 317 1 95 1 214 1 325 2 
166 2 353 1 123 3 329 1 194 2 55 1 372 1 284 1 202 1 349 1 325 3 31 1 
223 1 18 2 349 2 267 1 
372 1 284 1 202 1 123 1 270 1 325 1 
55 1 372 1 353 1 284 1 202 1 123 2 349 1 95 1 213 1 325 2 
342 1 
55 1 372 1 353 1 284 1 202 1 123 1 349 1 325 1 
353 1 123 3 194 1 55 1 372 1 284 1 202 1 349 1 95 1 213 1 325 3 
107 1 331 1 134 1 349 1 
55 1 349 1 

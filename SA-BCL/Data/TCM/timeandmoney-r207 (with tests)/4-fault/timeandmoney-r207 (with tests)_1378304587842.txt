#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 16 18 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 16 157 142 366 344 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 16 157 142 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 16 157 142 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 16 157 142 366 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 16 157 142 366 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 3 206 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
322 3 115 1 10 1 39 1 300 1 326 3 267 1 237 1 332 2 134 1 59 2 19 1 251 2 
261 1 115 4 76 1 118 1 267 2 269 2 78 1 59 5 251 2 254 1 322 9 324 1 10 1 39 3 12 1 300 1 281 1 326 9 70 2 159 1 237 1 332 2 134 6 185 1 136 2 19 1 112 1 166 2 
261 1 115 4 76 1 118 1 267 2 269 2 78 1 59 5 251 2 254 1 322 9 324 1 10 1 39 3 12 1 300 1 281 1 326 9 70 2 159 1 237 1 332 2 134 6 185 1 136 2 19 1 112 1 166 2 
261 1 115 5 76 1 118 1 267 2 269 2 78 1 59 6 251 2 254 1 322 10 324 1 10 1 39 4 12 1 300 1 281 1 326 10 70 2 159 1 237 1 332 2 134 7 185 1 136 2 19 1 112 1 166 2 
261 1 115 3 76 1 118 1 267 2 269 1 78 1 59 4 251 2 254 1 322 7 324 1 10 1 39 2 12 1 300 1 281 1 326 7 70 2 159 1 237 1 332 2 134 4 185 1 136 2 19 1 166 2 
322 4 115 2 10 1 39 1 300 1 326 4 118 1 70 1 269 2 159 1 237 1 332 1 134 3 59 3 136 1 112 1 166 1 251 1 
322 2 255 1 10 1 300 1 326 2 281 1 266 1 267 1 70 1 237 1 332 1 109 1 185 1 59 1 136 1 251 1 
115 4 76 1 118 1 267 1 269 2 78 1 59 5 251 2 322 9 10 1 39 3 105 1 300 1 326 9 70 1 159 1 237 1 89 1 134 7 332 2 19 1 136 1 166 1 112 1 
115 4 76 1 118 1 267 1 269 2 78 1 59 5 251 2 322 9 10 1 39 3 105 1 300 1 326 9 70 1 159 1 237 1 89 1 134 7 332 2 19 1 136 1 166 1 112 1 
114 1 74 1 128 1 116 1 174 1 68 1 246 1 371 1 304 1 60 1 228 1 149 1 102 1 229 1 
252 1 
252 1 138 1 304 1 305 1 74 2 61 1 246 2 212 1 
252 1 0 1 74 5 173 2 325 1 246 5 350 1 303 1 98 1 304 2 305 2 61 1 187 1 343 1 353 1 167 2 64 2 95 1 212 1 
252 1 75 1 61 1 
252 1 38 2 264 1 
114 2 60 2 174 2 116 1 102 2 346 1 229 2 371 2 
114 2 174 2 116 1 28 1 341 1 315 1 225 2 146 1 60 3 199 1 345 1 102 2 346 1 229 3 275 1 123 2 150 2 257 2 14 1 232 1 180 1 369 1 181 1 43 1 327 1 329 1 182 1 156 2 371 2 88 1 184 1 283 1 186 1 188 1 239 1 165 1 211 1 
114 1 128 1 60 1 174 1 116 1 68 1 149 1 102 1 229 1 371 1 
252 1 114 1 74 1 246 1 42 1 370 1 56 1 90 1 334 1 111 1 60 1 61 1 149 1 229 1 
252 1 114 1 74 2 174 1 246 2 42 1 370 1 371 1 90 1 334 1 60 1 61 1 102 1 149 1 229 1 
304 1 305 1 74 1 246 1 297 1 
252 1 304 1 207 1 305 1 74 2 61 1 246 2 212 1 
305 1 74 1 246 1 
114 2 104 1 174 1 301 1 371 1 60 2 102 1 229 2 346 2 
21 1 190 1 262 1 
66 1 14 1 232 1 369 1 327 1 329 1 156 1 315 1 225 1 283 1 146 1 60 1 188 1 346 1 229 1 150 1 
21 1 114 1 49 1 65 1 232 1 14 1 174 1 369 1 327 1 329 1 156 1 371 1 315 1 225 1 283 1 146 1 60 2 188 1 229 2 150 1 
75 1 346 1 
114 5 49 2 65 1 129 1 174 4 331 1 301 1 56 1 371 4 60 5 80 1 102 1 229 5 346 1 
114 2 101 1 60 2 174 2 68 1 149 1 229 2 371 2 
114 3 49 1 60 3 174 3 102 1 346 1 229 3 371 3 
114 1 60 1 174 1 68 1 149 1 229 1 371 1 
114 1 104 1 60 1 174 1 149 1 102 1 229 1 301 1 371 1 
114 3 49 1 74 1 174 3 116 1 246 1 28 1 315 1 225 1 146 1 60 4 199 1 63 1 102 2 149 1 346 1 229 4 275 1 123 2 150 1 257 1 65 1 232 1 14 1 180 1 369 1 181 1 43 1 327 1 42 1 329 1 370 1 182 1 301 1 156 1 371 3 88 1 283 1 90 1 334 1 186 1 188 1 164 1 165 1 
114 2 49 1 60 2 129 1 174 1 346 1 229 2 56 1 371 1 
252 1 114 3 49 2 74 1 65 1 174 3 246 1 42 1 370 1 301 1 371 3 90 1 334 1 60 3 164 1 102 1 149 1 242 1 229 3 
114 2 21 1 49 1 262 1 174 2 301 1 371 2 60 2 102 1 229 2 
14 1 232 1 369 1 327 1 329 1 156 1 315 1 225 1 283 1 146 1 60 1 188 1 346 1 229 1 150 1 
232 1 369 1 329 1 156 1 302 1 315 1 225 1 283 1 146 1 60 1 188 1 209 1 346 1 229 1 150 1 
338 1 256 1 257 1 180 1 43 1 181 1 28 1 3 1 236 1 57 1 186 1 199 1 275 1 123 2 
114 1 334 1 101 1 60 1 174 1 149 1 229 1 371 1 
161 1 295 1 4 1 
50 1 161 2 135 1 179 1 240 1 4 2 
161 1 4 1 
161 1 4 1 
50 1 179 1 
50 1 179 1 
50 1 179 1 
161 1 97 1 4 1 
161 1 97 1 4 1 
161 1 97 1 4 1 
161 1 241 1 4 1 
161 1 241 1 4 1 
161 1 241 1 4 1 
114 2 140 1 74 1 194 1 172 1 26 1 174 2 246 1 4 1 197 1 271 1 273 1 60 2 7 1 295 1 121 1 346 1 229 2 154 1 371 2 44 1 161 1 282 1 243 1 
252 1 253 1 354 1 367 1 140 2 74 2 154 2 194 2 246 2 4 2 247 1 271 1 161 2 352 1 121 2 178 1 240 1 243 3 124 2 
109 1 278 1 136 2 166 1 27 2 
136 1 166 1 70 1 
109 1 136 1 70 1 
109 1 278 1 136 3 27 1 166 2 8 1 
109 1 278 1 136 2 308 1 27 1 166 1 
0 1 215 1 311 1 74 5 287 1 218 1 263 1 264 1 173 1 246 5 220 1 221 1 3 1 197 1 98 2 273 1 61 1 64 1 252 2 38 2 13 1 155 1 206 1 236 1 304 4 305 1 282 1 187 2 309 2 167 1 260 1 212 1 
304 1 74 1 246 1 258 1 
114 1 311 1 215 1 74 3 263 1 218 1 264 1 174 1 116 1 173 1 246 3 221 1 220 1 3 1 98 2 60 1 61 1 228 1 149 1 102 1 64 1 229 1 252 2 38 2 128 1 155 1 68 1 206 1 236 1 350 1 371 1 304 2 282 1 187 2 309 1 167 1 260 1 
246 4 3 2 98 4 60 1 61 1 149 1 102 1 64 1 252 3 155 2 68 1 206 2 350 1 304 3 309 2 167 1 260 1 114 1 214 1 215 2 311 1 74 4 263 1 218 2 264 2 173 1 116 1 174 1 220 2 221 1 228 1 229 1 38 4 365 1 128 1 236 2 132 1 371 1 282 2 187 3 
201 1 
75 1 369 1 356 1 
290 1 369 1 
315 1 369 1 329 1 
369 1 362 1 
315 1 369 1 
315 1 126 1 127 1 369 3 356 2 329 1 
339 1 298 1 192 1 277 3 257 7 193 1 348 1 234 1 220 1 236 1 58 1 249 1 293 1 189 1 148 2 93 2 211 4 275 3 
339 5 215 4 171 4 193 2 24 1 220 5 3 4 58 1 293 1 249 2 199 2 122 1 62 1 148 3 361 2 82 1 123 4 275 14 298 2 151 4 277 8 257 33 348 1 234 2 106 1 180 2 181 2 280 1 206 4 236 5 158 1 333 1 186 2 189 1 93 3 211 19 
339 1 193 1 220 1 53 1 58 1 199 2 249 1 293 1 148 3 361 1 123 4 275 4 298 1 277 4 257 9 234 1 180 2 181 2 328 1 236 1 186 2 189 1 93 2 211 5 
339 1 298 1 277 3 257 7 193 1 348 1 234 1 220 1 236 1 58 1 249 1 293 1 189 1 148 2 93 2 211 4 275 3 
339 1 298 1 277 3 257 7 193 1 348 1 234 1 220 1 236 1 58 1 249 1 293 1 189 1 148 2 93 2 211 4 275 3 
322 1 83 1 84 1 310 2 23 1 232 1 369 1 1 2 326 1 131 1 267 2 314 1 156 1 315 1 160 1 225 1 332 1 283 1 146 1 33 2 251 1 373 1 150 1 
310 1 1 1 175 1 267 1 224 1 225 1 358 1 33 1 35 1 8 1 251 1 150 1 322 1 41 1 232 1 233 1 86 1 326 1 70 1 156 1 237 1 332 1 109 1 283 1 136 2 166 1 
310 1 1 1 175 1 267 1 224 1 225 1 358 1 59 1 33 1 359 1 35 1 8 1 251 1 150 1 322 2 10 1 41 1 232 1 86 1 300 1 326 2 70 1 156 1 237 1 134 1 332 1 109 1 283 1 136 2 166 1 
310 1 1 1 175 1 267 1 119 1 224 1 225 1 358 1 59 1 33 1 8 1 251 1 150 1 322 3 83 1 10 1 41 1 232 1 233 1 86 1 300 1 326 3 70 1 156 1 332 1 134 2 109 1 283 1 136 2 166 1 
310 1 1 1 175 1 267 1 119 1 224 1 225 1 358 1 59 1 33 1 8 1 150 1 322 2 10 1 232 1 233 1 300 1 326 2 156 1 70 1 134 2 109 1 283 1 136 2 166 1 
85 1 
114 1 170 1 0 1 139 1 74 3 23 1 286 1 173 1 246 3 265 1 221 1 196 1 56 1 98 2 315 1 225 2 226 1 176 1 248 1 146 2 60 1 149 1 64 1 229 1 150 2 153 1 232 1 369 1 16 1 42 1 370 1 156 2 72 1 160 1 305 2 90 1 283 1 334 1 18 1 306 1 111 1 187 2 167 1 210 2 212 1 
114 1 138 1 170 1 74 3 286 1 246 3 42 1 265 1 370 1 313 1 56 1 226 1 305 2 90 1 334 1 306 1 111 1 60 1 149 1 210 2 229 1 212 1 
252 1 114 1 138 1 170 1 74 3 286 1 246 3 42 1 265 1 370 1 56 1 226 1 305 1 198 1 90 1 334 1 306 1 111 1 60 1 61 1 149 1 210 3 229 1 212 1 
114 1 138 1 170 1 74 3 286 1 246 3 265 1 313 1 56 1 226 1 198 1 60 1 61 1 149 1 229 1 252 1 368 1 42 1 370 1 305 2 90 1 334 1 111 1 306 1 210 3 212 1 
114 1 138 1 0 1 170 1 139 1 74 3 286 1 173 1 246 3 265 1 196 1 268 1 142 1 313 2 56 1 98 1 226 1 176 1 60 1 344 1 149 1 64 1 229 1 366 1 368 2 16 1 42 1 370 1 157 1 305 3 90 1 334 1 111 1 306 1 187 1 167 1 210 2 212 1 
114 1 170 1 0 1 139 1 74 2 286 1 173 1 246 2 265 1 196 1 56 1 98 1 226 1 176 1 60 1 149 1 64 1 229 1 16 1 42 1 370 1 90 1 334 1 111 1 306 1 187 1 167 1 210 2 
114 1 170 1 0 1 139 1 74 2 286 1 173 1 246 2 265 1 196 1 142 1 268 1 56 1 98 1 226 1 176 1 60 1 149 1 64 1 229 1 16 1 42 1 370 1 157 1 90 1 334 1 111 1 306 1 187 1 167 1 210 2 
114 1 170 1 0 1 139 1 74 2 286 1 173 1 246 2 265 1 196 1 142 1 268 1 56 1 98 1 226 1 176 1 60 1 149 1 64 1 229 1 16 1 42 1 370 1 157 1 90 1 334 1 111 1 306 1 187 1 167 1 210 2 
114 1 170 1 0 1 139 2 74 4 286 1 173 1 246 4 265 1 2 1 313 2 56 1 98 1 226 1 176 2 198 2 120 2 60 1 61 1 149 1 64 1 229 1 252 1 38 2 368 2 16 1 42 1 330 2 370 1 157 1 305 4 90 1 334 1 111 1 306 1 187 1 92 1 167 1 210 4 212 2 48 1 
114 1 0 1 170 1 139 1 74 2 286 1 173 1 246 2 265 1 196 1 268 1 142 1 313 1 56 1 98 1 226 1 176 1 198 1 60 1 149 1 64 1 229 1 366 1 368 1 16 1 42 1 370 1 157 1 305 1 90 1 334 1 111 1 306 1 187 1 167 1 210 3 
114 1 0 1 170 1 139 1 74 2 286 1 173 1 246 2 265 1 196 1 268 1 142 1 313 1 56 1 98 1 226 1 176 1 198 1 60 1 149 1 64 1 229 1 366 1 368 1 16 1 42 1 370 1 157 1 305 1 90 1 334 1 111 1 306 1 187 1 167 1 210 3 
114 1 170 1 0 1 139 2 74 4 286 1 173 1 246 4 265 1 313 2 56 1 98 1 226 1 176 2 198 2 120 2 60 1 61 1 149 1 64 1 229 1 252 1 38 2 368 2 349 1 16 1 42 1 330 2 370 1 305 4 90 1 334 1 111 1 306 1 187 1 92 1 167 1 210 4 212 2 
114 1 338 1 49 1 284 1 312 1 23 1 174 1 28 2 315 3 225 6 146 2 60 1 199 2 79 1 359 1 345 2 319 1 229 1 274 1 150 7 123 4 275 1 125 1 257 2 232 3 233 1 369 4 180 2 181 2 43 2 329 1 182 1 156 7 371 1 71 1 160 1 17 1 372 1 283 4 186 2 239 1 47 1 211 1 
114 1 215 1 174 1 220 1 28 1 3 1 54 1 60 1 199 1 102 1 229 1 123 2 275 1 257 2 180 1 181 1 43 1 206 1 301 1 236 1 371 1 186 1 162 1 211 1 
21 1 190 1 338 1 262 1 75 1 220 1 28 1 58 1 293 1 199 1 148 2 346 2 123 2 275 3 298 1 277 2 257 6 234 1 180 1 181 1 43 1 236 1 186 1 189 1 93 1 211 3 
190 10 21 10 339 1 215 2 262 3 24 1 171 3 220 2 28 2 3 1 54 1 316 1 199 2 62 1 346 1 275 5 123 4 151 3 277 1 257 13 279 1 180 2 181 2 43 1 280 1 206 2 182 1 236 1 186 2 239 1 94 1 211 8 
114 1 49 1 285 1 262 1 174 1 340 1 28 1 54 1 315 1 225 1 146 1 60 2 199 1 346 1 229 2 150 1 123 2 275 1 257 2 65 1 232 1 14 1 66 1 369 1 204 1 180 1 327 1 43 1 181 1 329 1 182 1 156 1 371 1 283 1 186 1 188 1 239 1 211 1 
190 5 49 1 339 4 3 2 54 1 58 1 146 1 60 3 293 1 199 3 294 2 296 2 148 2 346 2 150 3 298 1 257 18 11 2 65 1 14 2 206 2 156 3 259 1 211 10 114 1 21 5 215 2 262 5 174 1 117 2 220 3 28 3 315 2 225 3 229 3 275 8 123 6 323 1 277 6 232 2 233 1 234 1 180 3 369 2 181 3 43 3 327 2 329 2 236 3 182 1 371 1 183 1 88 2 283 2 186 3 188 2 189 1 239 1 93 1 
21 1 190 1 338 1 339 1 277 1 215 1 257 2 262 1 180 1 43 1 181 1 220 1 28 1 143 1 186 1 199 1 211 2 123 2 
338 1 257 1 180 1 43 1 181 1 28 1 3 1 236 1 57 1 186 1 199 1 123 2 275 1 
21 1 190 1 338 1 215 1 257 3 262 1 180 1 43 1 181 1 220 1 28 1 206 1 236 1 3 1 186 1 199 1 211 2 275 1 123 2 
21 1 190 1 339 1 277 1 215 1 257 2 262 1 180 1 43 1 181 1 220 1 28 1 143 1 186 1 199 1 319 1 211 2 123 2 
257 1 180 1 43 1 181 1 28 1 3 1 236 1 57 1 186 1 199 1 319 1 123 2 275 1 
21 1 190 1 215 1 257 3 262 1 180 1 43 1 181 1 220 1 28 1 206 1 236 1 3 1 186 1 199 1 319 1 211 2 275 1 123 2 
21 1 190 1 215 1 257 3 262 1 180 1 43 1 181 1 220 1 28 1 206 1 236 1 3 1 186 1 199 1 211 2 275 1 123 2 
28 1 315 1 225 1 146 1 60 1 199 1 346 1 229 1 150 1 123 2 275 1 257 2 232 1 14 1 369 1 180 1 327 1 43 1 181 1 329 1 182 1 156 1 88 1 283 1 186 1 188 1 239 1 211 1 
28 1 315 1 225 1 146 1 60 1 199 1 346 1 229 1 150 1 123 2 275 1 257 2 232 1 369 1 180 1 43 1 181 1 329 1 182 1 156 1 302 1 238 1 283 1 186 1 188 1 239 1 209 1 211 1 
21 1 190 1 215 1 257 3 262 1 180 1 43 1 181 1 220 1 28 1 206 1 236 1 3 1 54 1 186 1 199 1 211 2 275 1 123 2 
21 1 190 1 215 1 262 1 220 1 28 1 3 1 315 1 225 1 60 1 294 1 199 1 359 1 229 1 275 1 150 1 123 2 257 3 232 1 14 1 369 1 180 1 327 1 43 1 181 1 329 1 206 1 236 1 156 1 88 1 283 1 186 1 188 1 211 2 
114 1 190 1 21 1 215 1 262 1 25 1 174 1 220 1 28 1 3 1 54 1 60 1 199 1 102 1 229 1 275 2 123 2 257 4 180 1 181 1 43 1 206 1 236 1 301 1 371 1 186 1 211 2 
339 8 53 1 3 7 58 1 199 3 293 1 62 3 200 1 148 1 103 1 151 5 298 1 257 49 15 1 206 7 108 1 208 1 163 1 211 29 20 1 213 2 215 7 217 1 171 5 24 2 220 8 355 4 29 1 177 1 31 1 361 1 275 20 123 6 277 9 40 1 234 1 180 3 280 2 181 3 236 8 45 1 186 3 189 1 93 1 
213 1 339 7 217 1 215 7 24 2 171 4 355 4 220 8 53 1 3 6 177 1 58 1 293 1 31 1 199 3 200 1 62 2 148 1 361 1 103 1 123 6 275 18 298 1 151 4 277 8 257 46 40 1 234 1 15 1 180 3 181 3 280 2 206 7 236 7 108 1 45 1 208 1 163 1 186 3 189 1 93 1 211 28 20 1 
213 1 339 6 217 1 215 7 24 2 171 4 355 4 220 8 53 1 3 7 177 1 58 1 293 1 31 1 199 2 62 2 148 1 361 1 103 1 123 4 275 18 298 1 151 4 277 7 257 45 40 1 234 1 15 1 180 2 181 2 280 2 206 7 236 8 108 1 45 1 208 1 163 1 186 2 189 1 93 1 211 27 20 1 
213 1 339 7 217 1 215 7 24 2 171 4 355 3 220 8 53 1 3 6 177 1 58 1 293 1 31 1 199 3 200 1 62 2 148 1 361 1 103 1 123 6 275 17 298 1 151 4 277 8 257 44 40 1 234 1 15 1 180 3 181 3 280 2 206 7 236 7 87 1 108 1 208 1 163 1 186 3 189 1 93 1 211 27 20 1 
339 1 213 2 217 1 215 3 171 2 355 4 220 3 53 1 3 2 177 1 199 2 31 1 62 2 361 1 275 9 103 1 123 4 151 2 277 1 257 23 40 2 15 1 180 2 181 2 206 3 236 2 108 1 45 1 208 1 163 1 186 2 211 14 20 1 
161 1 140 1 154 1 352 1 194 1 121 1 178 1 240 1 276 1 4 1 
44 1 295 1 
137 1 161 1 140 1 6 1 154 1 194 1 195 1 121 1 4 1 
22 1 97 1 
216 1 135 1 241 1 
252 1 253 1 354 1 367 1 140 1 74 1 154 1 194 1 246 1 4 1 271 1 161 1 352 1 121 1 178 1 240 1 243 2 124 1 
252 1 253 1 354 1 367 1 140 1 74 1 154 1 194 1 246 1 4 1 271 1 161 1 352 1 121 1 178 1 240 1 243 2 124 1 
252 1 253 1 354 1 367 1 140 1 74 1 154 1 194 1 246 1 4 1 271 1 161 1 352 1 121 1 178 1 240 1 243 2 124 1 
22 1 135 1 97 1 
22 1 135 1 97 1 
216 1 241 1 
216 1 135 1 241 1 
26 1 172 1 
114 2 354 1 140 1 74 1 194 1 172 1 26 1 174 2 246 1 4 1 197 1 273 1 60 2 7 1 295 1 121 1 346 1 229 2 124 1 154 1 351 1 371 2 44 1 304 1 161 1 282 1 243 1 
114 2 169 1 312 1 28 1 54 1 315 1 225 2 60 2 199 1 32 1 79 1 345 2 229 2 150 2 123 2 275 1 257 2 202 1 232 1 369 1 130 1 180 1 43 1 69 1 181 1 182 1 156 2 283 1 186 1 239 1 211 1 
310 1 51 1 23 1 232 1 289 1 369 1 156 1 315 1 225 1 160 1 283 1 146 1 150 1 373 1 
310 1 289 1 232 1 233 1 86 1 70 1 156 1 224 1 270 1 225 1 109 1 283 1 358 1 136 2 318 1 166 1 8 1 150 1 
310 1 232 1 289 1 233 1 86 1 70 1 156 2 224 1 270 1 225 2 109 1 283 1 358 1 136 2 318 1 359 1 166 1 8 1 150 2 
310 1 232 1 233 1 86 1 70 1 156 1 224 1 225 1 109 1 145 1 283 1 358 1 136 2 318 1 166 1 8 1 150 1 
77 1 
252 1 0 1 173 1 303 1 98 1 61 1 187 1 167 1 64 1 95 1 
252 1 38 2 215 1 218 1 155 1 264 1 220 1 206 1 3 1 236 1 98 2 187 1 
252 1 305 1 74 1 61 1 246 1 212 1 
0 1 74 3 23 1 173 2 246 3 221 2 315 1 98 2 225 4 248 2 147 2 146 2 64 2 150 4 230 1 153 1 232 1 369 1 205 1 350 1 156 4 72 1 160 1 305 4 283 1 110 1 187 2 167 2 212 2 
252 1 98 1 75 1 61 1 187 1 95 1 303 1 
98 1 0 1 187 1 173 1 196 1 167 1 64 1 
191 2 0 4 246 5 3 2 290 3 98 8 100 2 248 1 147 1 146 1 61 2 296 2 64 4 150 3 252 6 155 4 206 2 156 3 303 1 73 2 305 5 110 1 167 4 212 3 215 2 74 5 218 4 264 4 173 4 221 2 220 2 356 2 315 3 225 3 30 1 227 2 359 1 81 1 362 2 38 8 127 1 232 3 369 10 329 3 235 2 236 2 283 4 90 2 187 7 336 2 95 1 244 2 245 1 
0 1 217 1 215 2 218 3 264 2 171 1 173 1 220 2 3 2 98 4 177 1 31 1 62 1 64 1 252 2 38 4 151 1 155 3 206 2 236 2 108 1 208 1 187 4 167 1 
114 1 0 1 74 1 173 1 116 1 174 1 246 1 220 2 268 1 98 2 58 1 60 1 228 1 149 1 250 1 102 1 64 1 229 1 37 2 298 1 128 1 234 1 68 1 235 1 236 1 371 1 187 2 167 1 
114 2 174 2 116 1 28 1 315 1 225 1 146 1 60 3 199 1 102 2 346 1 229 3 275 1 123 2 150 1 257 1 14 1 232 1 180 1 369 1 181 1 327 1 43 1 329 1 182 1 156 1 371 2 88 1 283 1 186 1 188 1 165 1 
252 4 38 4 0 1 218 2 264 2 155 2 173 1 221 1 98 2 248 1 61 2 187 1 93 1 167 1 64 1 
140 1 154 1 307 1 26 1 178 1 
144 1 140 1 154 1 
144 1 140 1 154 1 
144 1 140 1 154 1 
140 1 154 1 288 1 
140 1 154 1 288 1 
140 1 154 1 288 1 
140 1 154 1 
161 1 4 1 
217 1 171 1 220 1 53 1 58 1 199 1 293 1 62 1 148 2 275 4 123 2 151 1 298 1 277 2 257 8 234 1 180 1 181 1 236 1 186 1 189 1 93 1 211 4 
96 1 339 1 217 1 215 1 171 1 220 2 53 1 58 1 293 1 199 2 62 1 148 2 275 5 123 4 298 1 151 2 277 3 257 11 234 1 180 2 181 2 280 1 206 1 236 1 186 2 189 1 93 1 211 6 
96 1 339 1 217 1 215 2 171 1 220 2 53 1 3 2 177 1 199 2 31 1 62 1 275 4 123 4 151 1 277 1 257 10 180 2 181 2 206 2 236 2 108 1 208 1 186 2 211 6 
96 1 339 2 217 1 215 2 171 1 220 3 53 1 3 1 177 1 58 1 293 1 199 3 31 1 62 1 148 2 361 1 275 6 123 6 298 1 151 1 277 4 257 16 234 1 180 3 181 3 206 2 236 2 108 1 208 1 186 3 189 1 93 1 211 10 
217 1 171 1 220 1 53 1 58 1 199 1 293 1 62 1 148 2 275 4 123 2 151 1 298 1 277 2 257 8 234 1 180 1 181 1 236 1 186 1 189 1 93 1 211 4 
339 1 217 1 215 2 171 1 220 2 53 1 3 2 177 1 199 1 31 1 62 1 275 4 123 2 151 1 277 1 257 10 180 1 181 1 206 2 236 2 108 1 208 1 186 1 211 6 
96 1 339 1 217 1 215 2 171 1 220 2 53 1 3 1 177 1 199 3 31 1 62 1 361 1 275 3 123 6 151 1 277 1 257 10 180 3 181 3 206 2 236 1 108 1 208 1 186 3 211 7 
339 2 217 1 215 2 171 1 220 2 53 1 3 1 177 1 199 3 31 1 62 1 200 1 361 1 275 3 123 6 151 1 277 2 257 10 180 3 181 3 206 2 236 1 108 1 208 1 186 3 211 7 
298 3 339 3 277 6 257 7 234 3 220 1 236 1 58 1 293 1 189 2 148 3 211 3 275 4 
339 1 217 1 215 2 171 1 220 2 53 1 3 1 177 1 199 3 31 1 62 1 200 1 361 1 275 3 123 6 151 1 277 1 257 10 180 3 181 3 206 2 236 1 108 1 208 1 186 3 211 7 
298 2 339 2 277 5 257 10 234 2 180 1 181 1 220 2 53 1 236 2 58 1 186 1 199 1 148 3 250 1 211 5 123 2 275 5 
339 1 215 1 277 1 257 2 180 1 181 1 220 1 53 1 186 1 199 1 211 2 123 2 
339 1 277 1 215 1 257 3 180 1 181 1 220 1 53 1 206 1 236 1 3 1 186 1 199 1 211 2 275 1 123 2 
298 1 339 1 277 2 257 3 234 1 180 3 181 3 53 1 158 1 186 3 199 3 200 1 148 1 361 1 211 1 275 2 123 6 
96 1 339 7 215 4 171 4 24 1 220 6 53 1 3 4 58 2 293 1 199 5 122 1 62 1 200 1 148 4 361 2 82 1 275 17 123 10 298 3 151 4 277 11 257 37 234 3 106 1 180 5 181 5 280 1 206 4 236 6 158 1 186 5 189 1 93 1 211 20 
339 1 298 1 277 3 257 8 234 1 180 2 220 1 181 2 236 1 58 1 186 2 199 2 293 1 189 1 148 2 93 1 211 4 361 1 275 4 123 4 
298 1 277 2 257 6 58 1 75 1 234 1 293 1 189 1 220 1 148 2 93 1 236 1 211 3 275 3 
96 1 215 1 257 3 180 1 181 1 220 1 206 1 236 1 3 1 186 1 199 1 211 2 275 1 123 2 
151 2 339 2 215 2 277 2 257 10 24 1 171 2 280 1 220 2 206 2 236 2 3 2 62 1 211 6 275 4 
339 5 215 2 171 2 24 1 220 4 3 2 58 2 293 1 199 2 148 5 250 1 361 2 275 14 123 4 298 4 151 2 277 10 257 28 234 4 279 1 180 2 280 1 181 2 206 2 236 4 158 1 186 2 189 1 93 1 211 14 
151 1 257 1 275 1 
257 1 171 1 211 1 
339 1 277 1 215 1 257 5 296 1 220 1 206 1 236 1 3 1 211 3 275 2 
339 1 217 1 215 2 171 1 220 2 53 1 3 2 177 1 199 1 31 1 62 1 275 4 123 2 151 1 277 1 257 10 180 1 181 1 206 2 236 2 108 1 208 1 186 1 211 6 
298 1 339 1 277 2 257 6 234 1 220 1 236 1 58 1 148 1 211 3 275 3 
339 1 298 1 277 2 257 3 234 1 180 1 181 1 158 1 186 1 199 1 293 1 189 1 148 1 211 1 361 1 275 2 123 2 
114 1 342 1 60 1 129 1 346 1 229 1 56 1 
114 1 364 1 299 1 129 1 56 1 272 1 5 1 342 1 317 1 60 1 346 1 229 1 
23 1 203 1 232 1 369 1 156 4 315 1 225 4 160 1 283 1 146 1 359 1 335 1 150 4 
284 1 232 1 369 1 329 1 156 2 71 1 259 1 315 1 225 2 283 2 147 1 274 1 150 2 125 1 
225 1 109 1 283 1 358 1 146 1 232 1 136 1 70 1 150 1 156 1 
315 1 225 2 283 1 312 1 232 1 233 1 369 1 130 1 359 1 150 2 156 2 
23 1 312 1 232 2 369 3 156 5 315 2 160 1 225 4 17 1 372 1 283 2 147 1 146 1 359 1 335 1 150 5 
23 1 312 1 232 2 369 3 156 5 315 2 160 1 225 4 17 1 283 2 147 1 146 1 359 1 335 1 150 5 168 1 
315 1 160 1 225 1 283 1 23 1 146 1 232 1 75 1 369 1 150 1 156 1 
114 1 49 1 232 1 174 1 369 1 327 1 329 1 156 1 371 1 315 1 225 1 283 1 146 1 60 2 188 1 346 1 229 2 150 1 
114 2 49 1 174 1 315 2 225 1 100 1 147 1 60 2 149 1 346 1 229 2 150 1 362 1 232 1 369 3 327 1 42 1 329 2 156 1 371 2 283 1 334 1 188 1 
114 2 49 1 174 1 315 2 225 2 100 1 147 1 60 2 149 1 346 1 229 2 150 2 362 1 203 1 232 1 369 3 42 1 329 2 156 2 371 2 283 1 334 1 188 1 209 1 
74 2 246 2 356 1 223 1 290 1 315 1 225 3 100 1 147 1 146 1 61 1 150 3 362 1 252 1 203 1 232 1 369 4 329 1 107 1 156 3 305 1 283 1 90 1 
252 1 74 2 203 1 232 1 246 2 369 4 329 1 356 1 156 3 315 1 290 1 225 3 100 1 305 1 90 1 283 1 146 1 147 1 61 1 336 1 150 3 362 1 
225 1 283 1 232 1 67 1 150 1 156 1 
284 1 312 1 315 2 225 5 99 1 146 2 345 1 359 1 150 6 127 1 232 2 233 1 369 3 329 1 156 6 71 1 17 1 372 1 283 3 47 1 
21 1 190 1 114 1 169 1 49 1 262 1 174 1 220 1 28 2 54 1 315 1 225 1 58 1 60 2 293 1 199 2 294 1 148 2 359 1 346 2 229 2 275 3 123 4 150 1 298 1 277 2 257 6 11 1 232 1 14 1 234 1 369 1 180 2 43 2 181 2 327 1 329 1 236 1 156 1 371 1 88 1 283 1 186 2 188 1 189 1 93 1 211 3 
191 1 0 2 74 3 173 2 246 3 356 1 98 1 290 1 225 1 146 1 61 1 64 2 150 1 252 1 369 2 156 1 303 1 304 1 73 1 305 2 90 1 110 1 187 1 167 2 336 1 95 1 244 1 212 1 
127 1 232 1 67 1 369 2 356 1 329 1 156 2 315 1 225 2 283 2 359 1 81 1 150 2 
114 1 49 1 232 1 174 1 369 1 329 1 156 1 371 1 315 1 225 1 283 1 146 1 60 2 188 1 209 1 346 1 229 2 150 1 
284 1 127 1 232 1 369 1 329 1 156 1 71 1 315 1 225 1 99 1 283 2 147 1 150 1 
114 1 152 1 202 1 69 1 46 1 60 1 32 1 229 1 363 1 
320 1 55 1 363 1 
152 1 46 1 91 1 346 1 363 1 
252 1 152 2 74 2 246 2 42 1 370 1 55 1 304 1 90 1 46 2 334 1 61 1 91 2 164 1 149 1 360 1 320 1 346 1 363 1 
322 1 237 1 10 1 332 1 59 1 300 1 326 1 251 1 
322 4 115 1 10 2 39 1 141 1 300 2 326 4 291 1 134 2 332 1 185 1 59 3 36 1 251 1 
322 2 10 1 347 1 105 1 326 2 300 1 237 1 332 1 134 1 59 1 34 1 251 1 
322 3 337 1 10 1 326 3 300 1 237 1 291 2 332 1 185 2 59 1 36 1 251 1 
59 2 219 2 113 1 321 1 
322 1 237 1 332 1 52 1 326 1 251 1 
322 2 237 1 10 1 134 1 332 1 59 1 300 1 76 1 326 2 251 1 
222 1 
322 1 237 1 10 1 332 1 59 1 300 1 326 1 251 1 
10 1 59 1 75 1 300 1 
322 1 10 1 332 1 59 1 300 1 326 1 251 1 
322 1 1 1 267 1 
322 3 10 1 326 3 300 1 357 1 237 1 291 1 332 1 185 2 59 1 251 1 36 1 
322 2 10 1 134 1 332 1 59 1 300 1 326 2 251 1 269 1 
159 1 322 1 237 1 115 1 332 1 59 1 136 1 326 1 166 1 251 1 70 1 
322 1 237 1 10 1 332 1 59 1 326 1 251 1 
322 1 237 1 10 2 332 1 300 1 326 1 251 1 
9 1 322 2 10 1 231 1 326 2 237 1 292 1 332 2 59 1 251 2 
322 3 115 1 10 1 39 1 300 1 326 3 76 1 237 1 78 1 332 1 134 2 59 2 251 1 
322 2 10 1 300 1 326 2 133 1 70 1 237 1 109 1 332 1 134 1 59 1 136 2 8 1 166 1 251 1 
322 4 115 1 10 1 39 1 300 1 326 4 269 1 237 1 332 2 134 2 59 2 112 1 251 2 
322 3 10 1 326 3 300 1 76 1 237 1 134 1 332 1 185 1 59 1 251 1 
115 1 39 1 141 1 59 1 
10 1 59 1 

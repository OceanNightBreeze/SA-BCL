#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (196,306) 30 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (196,306) 30 63 189 (196,306) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (196,306) 30 191 29 243 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (196,306) 30 226 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (196,306) 30 63 116 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (196,306) 30 52 270 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (196,306) 30 63 189 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (196,306) 30 52 270 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (196,306) 30 63 189 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (196,306) 30 52 116 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (196,306) 30 194 (288,289) (288,289) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 4 251 1 295 1 146 3 45 1 65 9 118 2 213 2 275 1 346 1 347 2 67 1 233 2 14 6 34 1 156 1 192 9 195 2 104 1 105 5 201 1 202 2 331 2 353 1 354 1 25 1 290 1 139 1 
140 4 251 1 295 1 146 3 45 1 65 9 118 2 213 2 275 1 346 1 347 2 67 1 233 2 14 6 34 1 156 1 192 9 195 2 104 1 105 5 201 1 202 2 331 2 353 1 354 1 25 1 290 1 139 1 
140 5 251 1 295 1 146 4 45 1 65 10 118 2 213 2 275 1 346 1 347 2 67 1 233 2 14 7 34 1 156 1 192 10 195 2 104 1 105 6 201 1 202 2 331 2 353 1 354 1 25 1 290 1 139 1 
140 3 251 1 295 1 146 2 45 1 65 7 118 1 213 2 275 1 346 1 347 2 67 1 233 2 14 4 34 1 192 7 195 2 104 1 105 4 201 1 202 2 331 2 353 1 354 1 25 1 290 1 139 1 
34 1 14 3 140 2 156 1 192 4 295 1 195 1 146 1 65 4 118 2 213 1 104 1 105 3 202 1 347 1 67 1 233 1 353 1 
192 2 295 1 327 1 65 2 213 1 275 1 105 1 202 1 307 1 347 1 67 1 331 1 233 1 353 1 25 1 125 1 
140 1 14 1 192 3 295 1 146 1 65 3 213 2 105 2 67 1 331 1 233 2 353 1 290 1 
140 4 295 1 146 3 65 9 118 2 213 2 347 1 67 1 233 2 279 1 14 7 34 1 192 9 156 1 218 1 195 1 104 1 105 5 201 1 202 1 331 1 353 1 290 1 139 1 
140 4 295 1 146 3 65 9 118 2 213 2 347 1 67 1 233 2 279 1 14 7 34 1 192 9 156 1 218 1 195 1 104 1 105 5 201 1 202 1 331 1 353 1 290 1 139 1 
16 1 267 1 199 1 
16 1 21 1 39 2 
293 2 143 2 283 2 1 1 113 2 319 1 129 2 363 2 
249 1 293 2 84 1 143 3 207 1 1 1 113 2 225 1 336 1 362 2 363 2 227 1 317 2 365 1 11 2 319 1 215 1 276 1 12 1 47 1 190 1 15 1 283 2 158 1 35 1 241 1 36 1 129 3 130 1 166 1 20 1 132 2 106 1 246 1 177 1 82 2 83 1 
293 1 143 1 283 1 193 1 113 1 319 1 245 1 129 1 333 1 363 1 
357 1 143 1 16 1 283 1 89 1 2 1 164 1 129 1 169 1 267 1 107 1 333 1 247 1 237 1 
357 1 293 1 143 1 16 1 283 1 113 1 89 1 2 1 129 1 363 1 169 2 267 1 107 1 333 1 237 2 
169 1 313 1 134 1 369 1 237 1 
169 2 16 1 313 1 267 1 134 1 109 1 18 1 237 2 
169 1 134 1 237 1 
293 1 143 1 313 1 283 1 193 1 113 1 161 1 129 1 363 1 169 1 319 1 245 1 333 1 237 1 
16 1 
169 2 16 1 313 1 267 1 134 1 109 1 364 1 237 2 
179 1 0 2 16 1 313 2 325 1 261 2 7 1 103 1 131 1 169 5 170 1 267 1 134 2 269 1 109 1 203 2 322 1 137 1 237 5 
1 1 199 1 
349 1 293 1 143 2 283 2 113 1 1 2 51 1 129 2 363 1 
306 1 30 1 
84 1 143 1 207 1 1 1 158 1 36 1 225 1 129 1 362 1 120 1 365 1 106 1 11 1 276 1 47 1 82 1 
293 1 84 1 143 2 207 1 283 1 158 1 113 1 36 1 225 1 129 2 362 1 117 1 242 1 306 1 365 1 106 1 11 1 276 1 47 1 82 1 
293 3 143 3 283 3 1 1 113 3 129 3 363 1 117 1 
293 1 143 1 283 1 193 1 113 1 129 1 333 1 
349 1 293 1 143 1 283 1 113 1 51 1 129 1 333 1 363 1 
357 1 249 1 293 3 84 1 143 4 207 1 1 1 113 3 89 1 2 1 225 1 336 1 362 1 363 2 117 1 317 1 365 1 11 1 215 1 319 1 276 1 12 1 47 1 237 1 190 1 349 1 15 1 283 3 158 1 35 1 36 1 129 4 130 1 198 1 242 1 20 1 132 2 169 1 106 1 108 1 107 1 333 1 82 1 83 1 
293 1 143 2 283 2 1 1 113 1 174 1 129 2 247 1 117 1 
349 1 357 1 293 3 143 3 16 1 283 3 113 3 2 1 89 1 129 3 363 1 117 2 242 1 198 1 167 1 169 1 107 1 333 1 237 1 
349 1 293 2 143 2 283 2 113 2 129 2 363 1 117 1 182 1 306 1 
84 1 143 1 207 1 1 1 158 1 36 1 225 1 129 1 362 1 365 1 106 1 11 1 276 1 47 1 82 1 
143 1 207 1 72 1 1 1 158 1 36 1 225 1 129 1 362 1 106 1 11 1 276 1 57 1 47 1 82 1 
190 1 249 1 30 1 63 1 336 1 130 1 196 1 20 1 317 2 132 2 306 1 79 1 186 1 12 1 189 1 83 2 
357 1 293 1 143 1 283 1 113 1 129 1 333 1 255 1 
349 1 293 4 143 5 283 5 113 4 1 1 129 5 91 1 363 1 117 2 242 1 212 1 174 1 247 1 
293 2 143 2 283 2 193 1 113 2 129 2 333 1 255 1 
257 1 324 1 
257 1 324 1 
68 1 321 1 
68 1 321 1 
68 1 321 1 
257 1 234 1 324 1 
257 1 234 1 324 1 
257 1 100 1 324 1 
271 1 257 2 68 1 321 1 248 1 324 2 
257 1 234 1 324 1 
142 1 257 1 324 1 
142 1 257 1 324 1 
142 1 257 1 324 1 
271 1 180 3 257 2 28 1 16 1 240 2 159 1 210 2 368 1 263 2 287 1 371 2 342 1 200 2 169 2 235 1 324 2 291 1 237 2 
293 2 180 1 28 1 143 2 209 1 1 1 113 2 210 1 361 1 9 1 324 1 96 1 237 1 153 1 257 1 49 1 240 1 283 2 100 1 129 2 371 1 200 1 169 1 373 1 
202 1 347 1 195 1 
202 1 347 1 327 1 
202 3 195 2 101 1 304 1 327 1 281 1 
202 2 195 1 101 1 304 1 327 1 264 1 
202 2 195 1 101 2 304 1 327 1 
141 2 0 1 224 2 250 1 209 1 313 4 63 1 7 2 274 1 116 1 149 1 323 1 96 1 237 5 153 1 98 1 157 2 16 2 52 1 261 1 39 3 103 1 169 5 21 1 134 1 267 1 170 3 78 1 203 1 109 1 79 1 205 1 
179 1 141 6 0 2 313 7 62 1 63 3 3 1 7 6 116 3 149 1 323 2 96 4 237 9 348 1 98 3 157 6 16 5 259 1 219 1 52 3 261 2 328 5 369 5 39 9 103 1 169 9 21 3 134 6 267 1 170 8 135 1 109 1 203 2 79 3 205 2 
0 1 179 1 224 1 141 2 313 2 63 1 274 1 7 2 116 1 323 1 96 1 237 3 98 1 16 3 157 2 261 1 52 1 39 4 169 3 21 2 267 1 170 3 78 1 203 1 79 1 205 1 
141 4 0 1 179 1 224 2 313 3 63 2 274 1 7 4 116 2 323 1 96 2 237 4 348 1 98 2 16 4 157 4 219 1 261 1 52 2 39 7 169 4 21 3 267 1 170 5 135 1 78 1 203 1 79 2 205 1 
276 1 69 1 199 1 
76 1 276 1 
286 1 
158 1 276 1 
126 1 344 1 158 1 276 3 69 2 47 1 
158 1 276 1 47 1 
276 1 171 1 
98 1 302 1 335 1 194 2 262 1 166 4 317 7 318 1 232 1 173 1 79 1 123 1 289 1 288 1 81 2 83 3 178 3 
98 1 302 1 335 1 194 2 262 1 166 4 317 7 318 1 232 1 173 1 79 1 123 1 289 1 288 1 81 2 83 3 178 3 
98 1 302 1 335 1 194 2 262 1 166 4 317 7 318 1 232 1 173 1 79 1 123 1 288 1 58 1 289 1 81 2 83 3 178 3 
335 1 63 3 336 1 116 3 338 1 317 31 299 1 318 2 229 1 232 2 123 1 187 1 12 1 190 1 301 3 191 4 98 4 302 2 73 1 194 3 52 3 262 5 53 1 166 16 20 1 132 2 173 2 79 4 288 1 289 1 81 5 138 1 83 15 178 10 
336 2 317 9 46 1 318 1 232 1 123 1 187 1 12 2 190 2 98 1 302 1 194 2 262 1 220 1 166 5 20 2 132 4 173 1 79 1 289 1 288 1 81 3 83 4 178 4 
206 1 295 1 225 1 44 1 362 1 92 1 211 1 65 2 213 1 11 1 347 1 67 1 184 1 233 1 281 1 14 1 192 2 284 1 195 1 327 1 55 1 305 1 105 1 265 1 106 1 202 2 22 1 331 1 353 1 82 1 
206 1 295 1 225 1 44 1 362 1 92 1 211 1 65 3 213 1 11 1 228 1 347 1 233 1 281 1 14 2 216 1 192 3 284 1 195 1 327 1 305 1 105 1 265 1 106 1 202 2 22 1 331 1 353 1 60 1 82 1 
295 1 225 1 44 1 362 1 92 1 65 2 11 1 228 1 347 1 281 1 14 2 192 2 284 1 195 1 327 1 305 1 105 1 265 1 106 1 202 2 22 1 331 1 353 1 60 1 82 1 
207 1 225 1 145 1 44 2 362 1 92 2 65 1 213 1 32 1 10 1 11 1 276 1 233 1 124 1 216 1 192 1 158 1 106 1 265 2 372 1 331 2 175 1 82 1 
206 1 225 1 44 1 362 1 92 1 211 1 65 1 213 1 11 1 228 1 347 1 67 1 184 1 233 1 281 1 192 1 284 1 195 1 327 1 305 1 265 1 106 1 202 2 22 1 331 1 82 1 
223 1 
0 1 207 2 225 2 4 1 362 2 7 1 66 1 10 1 11 2 183 1 256 1 276 2 188 1 47 1 323 1 237 2 99 1 158 2 261 1 103 1 169 2 106 3 244 1 170 1 134 2 372 1 203 1 109 1 82 2 
357 1 358 2 143 1 181 1 89 1 2 1 364 1 341 1 185 1 237 3 283 1 303 1 129 1 164 1 370 1 169 3 134 2 107 1 109 1 333 1 247 1 356 1 
357 1 358 3 143 1 181 1 89 1 2 1 364 1 185 1 237 3 283 1 303 1 16 1 129 1 164 1 370 1 169 3 134 1 267 1 107 1 109 1 204 1 333 1 247 1 356 1 
357 1 27 1 358 3 143 1 181 1 89 1 2 1 364 1 341 1 185 1 237 3 283 1 303 1 16 1 129 1 164 1 370 1 169 3 134 2 267 1 107 1 109 1 204 1 333 1 247 1 356 1 
0 1 143 1 2 1 89 1 7 1 8 1 341 4 300 2 97 1 303 1 16 5 261 1 164 1 103 1 169 5 21 2 267 5 170 1 266 2 107 1 109 3 110 1 356 1 27 4 357 1 358 6 181 1 364 1 31 2 121 1 185 1 320 1 277 1 237 5 282 1 283 1 129 1 370 1 329 2 134 7 203 1 204 4 333 1 247 1 
0 1 143 1 2 1 89 1 7 1 341 2 214 1 300 2 97 1 303 1 16 2 261 1 164 1 103 1 169 4 21 2 170 1 266 2 267 1 107 1 109 2 356 1 357 1 27 2 358 4 181 1 31 2 185 1 320 1 237 4 283 1 129 1 370 1 329 2 39 2 134 4 203 1 204 2 333 1 247 1 
27 2 0 1 357 1 358 4 143 1 181 1 89 1 2 1 7 1 8 1 31 2 341 2 320 1 185 1 277 1 300 2 97 1 237 4 16 1 283 1 303 1 261 1 129 1 164 1 370 1 329 2 103 1 169 4 21 2 267 1 134 4 266 2 170 1 107 1 109 2 203 1 204 2 110 1 333 1 247 1 356 1 
27 2 0 1 357 1 358 4 143 1 181 1 89 1 2 1 7 1 8 1 31 2 341 2 320 1 185 1 277 1 300 2 97 1 237 4 16 1 283 1 303 1 261 1 129 1 164 1 370 1 329 2 103 1 169 4 21 2 267 1 134 4 266 2 170 1 107 1 109 2 203 1 204 2 110 1 333 1 247 1 356 1 
27 2 0 1 357 1 358 4 111 1 143 1 181 1 89 1 2 1 7 1 31 2 341 2 320 1 185 1 300 2 237 4 16 1 283 1 303 1 261 1 129 1 164 1 370 1 39 2 103 1 169 4 267 1 134 4 170 1 107 1 172 2 136 1 23 1 109 2 309 2 203 1 204 2 110 1 333 1 247 1 356 1 
0 1 357 1 27 3 358 5 143 1 181 1 89 1 2 1 7 1 8 1 31 2 341 3 121 1 320 1 185 1 277 1 300 2 97 1 237 4 16 1 283 1 303 1 261 1 129 1 164 1 370 1 329 2 103 1 169 4 21 2 267 1 266 2 170 1 134 5 107 1 109 2 203 1 110 1 204 3 333 1 247 1 356 1 
0 1 357 1 27 3 358 5 143 1 181 1 89 1 2 1 7 1 8 1 31 2 341 3 121 1 320 1 185 1 277 1 300 2 97 1 237 4 16 1 283 1 303 1 261 1 129 1 164 1 370 1 329 2 103 1 169 4 21 2 267 1 266 2 170 1 134 5 107 1 109 2 203 1 110 1 204 3 333 1 247 1 356 1 
0 1 143 1 2 1 89 1 7 1 341 2 214 1 300 2 303 1 16 1 261 1 164 1 103 1 169 4 170 1 267 1 107 1 172 2 309 2 109 2 356 1 357 1 27 2 358 4 181 1 31 2 185 1 320 1 237 4 283 1 129 1 370 1 39 2 134 4 136 1 203 1 204 2 333 1 247 1 
249 1 1 2 30 1 336 1 317 6 318 1 123 1 186 1 12 1 190 1 98 1 194 1 130 1 166 3 199 1 20 1 132 2 306 1 173 1 79 1 288 1 289 1 81 2 178 2 83 3 
190 1 249 1 191 1 29 1 30 1 336 1 130 1 20 1 317 1 132 2 243 1 306 1 374 1 12 1 83 1 
249 1 293 1 84 1 207 1 143 2 1 1 113 1 225 1 336 1 362 1 117 1 182 1 317 2 119 1 120 1 365 1 11 1 276 1 13 1 12 1 47 1 190 1 15 1 283 1 158 1 36 1 129 2 130 1 197 1 242 1 166 1 20 1 132 2 106 1 374 1 82 1 177 1 83 1 
249 2 293 1 84 1 143 2 207 1 113 1 30 1 225 1 226 1 336 2 362 1 117 1 317 2 365 1 298 1 366 1 11 1 276 1 12 2 47 1 190 2 15 1 283 1 158 1 35 1 36 1 129 2 165 1 130 2 242 1 19 1 20 2 132 4 306 1 106 1 374 1 82 1 83 2 
293 1 249 2 272 1 208 1 143 1 207 2 113 1 225 2 64 1 336 2 362 8 117 1 317 2 10 1 228 1 11 8 276 3 186 1 12 2 33 1 190 2 15 1 283 1 158 2 129 1 55 1 130 2 38 1 166 1 20 2 132 4 351 1 106 2 372 1 246 2 41 1 82 7 177 1 83 1 
249 1 293 1 143 1 359 1 113 1 30 1 63 1 336 1 363 1 116 1 317 3 12 1 349 1 190 1 98 1 283 1 52 1 129 1 130 1 166 1 20 1 132 2 306 1 374 1 79 1 83 2 
190 1 249 1 98 1 30 1 52 1 336 1 130 1 166 2 20 1 317 2 132 2 306 1 270 1 186 1 12 1 
190 1 249 1 30 1 63 1 336 1 130 1 20 1 317 2 132 2 306 1 79 1 186 1 12 1 189 1 83 2 
190 1 249 1 98 1 30 1 52 1 336 1 130 1 116 1 166 2 20 1 317 2 132 2 306 1 186 1 12 1 
190 1 249 1 98 1 30 1 52 1 64 1 336 1 130 1 166 2 20 1 317 2 132 2 306 1 270 1 12 1 
190 1 249 1 30 1 63 1 64 1 336 1 130 1 20 1 317 2 132 2 306 1 79 1 12 1 189 1 83 2 
190 1 249 1 98 1 30 1 52 1 64 1 336 1 130 1 116 1 166 2 20 1 317 2 132 2 306 1 12 1 
190 1 249 1 98 1 30 1 52 1 336 1 130 1 116 1 166 2 20 1 317 2 132 2 306 1 12 1 
249 1 84 1 207 1 143 1 1 1 225 1 336 1 362 1 317 2 365 1 11 1 276 1 12 1 47 1 190 1 15 1 158 1 35 1 36 1 129 1 130 1 166 1 20 1 132 2 106 1 177 1 82 1 83 1 
249 1 207 1 143 1 1 1 225 1 336 1 362 1 317 2 11 1 276 1 12 1 47 1 190 1 15 1 72 1 158 1 36 1 367 1 129 1 130 1 166 1 20 1 132 2 106 1 57 1 177 1 82 1 83 1 
190 1 249 1 98 1 30 1 52 1 336 1 130 1 116 1 166 2 20 1 317 2 132 2 306 1 374 1 12 1 
249 1 84 1 143 1 30 1 225 1 336 1 362 1 116 1 317 2 365 1 11 1 276 1 12 1 47 1 190 1 98 1 35 1 158 1 36 1 52 1 129 1 165 1 55 1 130 1 166 2 20 1 132 2 306 1 106 1 82 1 
190 1 349 1 293 1 249 1 98 1 143 1 283 1 113 1 30 1 52 1 129 1 297 1 336 1 130 1 116 1 363 1 166 2 20 1 317 2 132 2 306 1 374 1 12 1 
43 1 63 3 336 2 116 3 338 1 339 1 340 1 317 19 93 1 229 1 12 2 71 2 190 2 191 2 301 1 98 3 162 1 52 3 262 3 54 1 220 1 350 2 166 9 20 2 132 4 330 1 79 3 81 3 83 10 178 6 
314 1 63 2 336 3 116 3 339 2 338 2 340 1 317 26 187 2 12 3 71 1 190 3 238 1 191 2 301 2 98 3 258 1 160 1 162 2 52 3 262 2 54 1 220 1 350 4 166 14 20 3 132 6 330 1 79 2 24 1 26 1 81 2 178 4 83 12 
334 1 314 1 63 4 336 3 116 4 338 3 339 2 340 1 317 41 93 1 318 1 229 1 123 1 187 1 12 3 71 1 190 3 238 1 191 4 301 3 98 5 258 1 160 1 194 1 162 1 52 4 262 4 54 1 220 1 350 4 166 20 20 3 132 6 330 1 173 1 24 1 79 5 288 1 289 1 26 1 81 4 83 21 178 8 
334 1 314 1 63 3 336 4 116 4 338 3 339 2 340 1 317 38 93 1 318 1 229 1 123 1 187 2 12 4 71 1 190 4 238 1 191 4 301 3 98 5 258 1 160 1 194 1 162 1 52 4 262 3 54 1 220 1 350 4 166 20 20 4 132 8 330 1 173 1 24 1 79 4 288 1 289 1 26 1 81 4 83 18 178 7 
314 1 63 7 336 2 116 7 338 2 339 1 340 1 317 52 318 1 229 2 123 1 187 1 12 2 71 1 190 2 238 1 191 4 301 4 98 8 258 1 160 1 194 1 162 1 52 7 262 7 54 1 220 1 350 4 166 27 20 2 132 4 330 1 173 1 24 1 79 8 288 1 289 1 26 1 355 2 81 7 83 25 178 14 
271 1 257 1 200 1 240 1 159 1 210 1 371 1 324 1 291 1 152 1 
100 1 361 1 
292 1 257 1 200 1 240 1 210 1 332 1 371 1 324 1 61 1 
271 1 180 2 257 1 28 1 16 1 240 1 159 1 210 1 368 1 263 1 287 1 371 1 200 1 169 1 235 1 324 1 291 1 237 1 
271 1 180 2 257 1 28 1 16 1 240 1 159 1 210 1 368 1 263 1 287 1 371 1 200 1 169 1 235 1 324 1 291 1 237 1 
271 1 180 2 257 1 28 1 16 1 240 1 159 1 210 1 368 1 263 1 287 1 371 1 200 1 169 1 235 1 324 1 291 1 237 1 
239 1 234 1 248 1 
239 1 234 1 248 1 
142 1 40 1 
142 1 248 1 40 1 
49 1 9 1 
180 1 293 2 143 2 313 1 209 1 1 1 113 2 210 1 361 1 9 1 324 1 96 1 237 1 153 1 257 1 49 1 50 1 240 1 283 2 100 1 129 2 368 1 263 1 371 1 200 1 169 1 373 1 
239 1 234 1 
142 1 248 1 40 1 
249 1 208 1 143 2 225 1 336 1 337 1 362 2 253 1 317 2 11 2 276 1 231 1 12 1 33 1 190 1 15 1 283 2 158 1 129 2 130 1 166 1 20 1 132 2 106 1 352 1 374 1 246 2 311 1 177 1 82 2 83 1 
195 1 225 1 327 1 362 2 55 1 92 1 211 1 305 1 202 2 106 1 228 1 11 2 347 1 22 1 42 1 59 1 150 1 82 2 281 1 
86 1 195 1 225 1 327 1 362 1 92 1 211 1 305 1 202 2 106 1 228 1 11 1 347 1 22 1 150 1 82 1 281 1 
207 1 158 1 225 1 296 1 362 1 92 1 32 1 106 1 10 1 11 1 372 1 276 1 42 1 82 1 
195 1 225 1 327 1 362 1 92 1 211 1 305 1 202 2 106 1 228 1 11 1 347 1 22 1 42 1 59 1 150 1 82 1 281 1 
312 1 
16 1 170 1 267 1 269 1 7 1 137 1 199 1 
0 1 7 1 97 1 237 1 16 2 261 1 329 1 39 1 103 1 169 1 21 1 170 1 266 1 134 1 267 1 203 1 109 1 
0 4 141 6 207 1 88 2 2 2 5 1 254 1 7 8 147 2 148 2 11 3 47 3 151 2 155 1 98 2 157 6 16 8 158 3 261 4 52 2 55 1 103 4 169 5 106 4 21 6 267 2 170 9 269 1 171 2 109 3 176 2 63 2 225 3 226 2 362 3 116 2 315 2 122 2 276 10 323 2 69 2 237 5 126 1 285 1 75 1 39 12 76 3 244 1 133 2 134 5 203 4 79 2 137 1 82 3 
141 5 0 2 314 1 63 2 7 5 116 2 315 2 338 1 323 1 151 1 237 1 238 1 191 1 301 1 98 2 157 5 16 5 258 1 261 2 52 2 39 6 103 2 168 1 169 1 244 1 21 3 134 1 170 8 267 2 109 1 203 2 310 1 24 1 79 2 26 1 
0 1 293 1 143 1 112 1 113 1 7 2 363 1 315 2 318 1 319 1 123 1 277 1 151 1 237 1 98 2 283 1 193 1 161 1 261 1 129 1 103 1 169 1 170 2 245 1 173 1 203 1 79 1 333 1 
0 1 16 1 261 1 7 1 103 1 267 1 170 1 269 1 203 1 137 1 
141 5 98 2 157 5 16 5 63 2 52 2 226 1 7 5 116 2 315 2 39 10 21 5 170 5 79 2 151 1 
169 1 16 1 267 1 134 1 109 1 237 1 
0 1 207 2 225 2 4 1 362 2 7 1 66 1 10 1 11 2 183 1 256 1 276 2 188 1 47 1 323 1 237 1 155 1 99 1 158 2 261 1 103 1 169 1 106 3 244 1 170 1 134 2 372 1 203 1 109 1 82 2 
293 2 249 1 84 1 207 1 143 3 1 1 113 2 225 1 336 1 362 1 363 2 317 1 365 1 11 1 319 1 215 1 276 1 12 1 47 1 190 1 15 1 283 2 35 1 158 1 36 1 129 3 130 1 20 1 132 2 106 1 82 1 83 1 
141 2 0 1 157 2 16 4 194 1 261 1 7 2 39 4 103 1 21 2 244 1 170 1 267 2 203 1 323 1 
240 1 70 1 371 1 
240 1 70 1 371 1 
217 1 49 1 240 1 371 1 291 1 
240 1 70 1 371 1 
240 1 95 1 371 1 
240 1 95 1 371 1 
240 1 95 1 371 1 
240 1 371 1 
257 1 324 1 
190 2 98 1 194 1 262 1 336 2 166 4 20 2 317 8 132 4 318 1 173 1 79 1 123 1 187 1 289 1 288 1 81 2 12 2 83 4 178 3 
98 1 194 1 166 3 199 1 317 6 318 1 173 1 123 1 79 1 289 1 288 1 81 2 83 3 178 2 
190 1 98 1 63 1 52 1 262 1 336 1 17 1 116 1 166 2 20 1 317 4 132 2 79 1 81 1 12 1 83 2 178 2 
191 2 301 1 98 1 63 1 52 1 262 1 116 1 338 1 166 3 317 7 229 1 79 1 81 1 83 4 178 2 
29 1 63 2 336 2 116 2 317 23 318 2 229 1 123 1 187 2 12 2 190 2 301 2 191 2 98 3 194 1 52 2 262 4 166 11 20 2 132 4 173 2 79 3 288 1 289 1 80 1 81 5 355 1 178 9 83 12 
317 1 191 1 83 1 
317 1 301 1 166 1 
190 1 98 1 63 1 52 1 262 1 226 1 336 1 17 1 116 1 166 3 20 1 317 6 132 2 79 1 12 1 81 2 83 3 178 3 
63 2 314 1 336 1 116 2 338 1 317 12 12 1 190 1 301 1 191 1 238 1 98 2 258 1 52 2 262 1 220 1 166 6 20 1 132 2 24 1 79 2 26 1 81 1 83 6 178 2 
98 1 262 1 166 3 317 6 318 1 173 1 123 1 79 1 81 1 83 3 178 2 
190 1 262 1 336 1 166 1 20 1 317 3 132 2 318 1 173 1 288 1 80 1 187 1 289 1 81 1 12 1 178 2 83 2 
190 1 98 2 112 1 262 2 336 1 220 1 166 5 20 1 317 10 132 2 318 2 173 2 123 1 79 2 12 1 81 3 178 5 83 5 
190 1 98 1 52 1 262 1 336 1 220 1 166 2 20 1 317 2 132 2 12 1 178 1 
190 1 98 1 63 1 52 1 262 1 336 1 220 1 116 1 166 2 20 1 317 4 132 2 79 1 81 1 12 1 83 2 178 2 
190 3 262 1 336 3 220 1 166 1 20 3 317 3 132 6 93 1 318 1 173 1 187 1 80 1 12 3 81 1 83 2 178 2 
63 3 336 5 116 3 338 1 317 34 93 1 318 3 229 1 123 2 187 2 12 5 190 5 191 4 301 3 98 5 73 1 194 1 52 3 53 1 262 5 17 1 220 1 166 16 20 5 132 10 173 3 79 5 288 1 289 1 80 1 81 7 138 1 83 18 178 12 
336 1 338 1 317 8 318 1 123 1 12 1 190 1 301 1 191 1 98 1 194 1 220 1 166 4 20 1 132 2 173 1 79 1 24 1 289 1 288 1 81 2 83 4 178 2 
336 2 116 1 338 1 317 11 318 1 229 1 123 1 12 2 190 2 191 2 301 1 98 2 194 1 52 1 262 1 220 1 17 1 166 6 20 2 132 4 173 1 79 1 24 1 288 1 289 1 81 2 83 5 178 3 
63 2 314 1 336 3 116 2 338 1 317 19 318 1 123 1 187 1 12 3 190 3 238 1 301 1 191 1 98 3 258 1 194 1 52 2 262 1 17 1 220 1 166 9 20 3 132 6 173 1 24 1 79 3 288 1 289 1 26 1 81 3 83 10 178 4 
63 1 314 1 336 3 116 2 338 1 317 17 318 1 123 1 187 1 12 3 190 3 301 1 191 1 238 1 98 3 258 1 194 1 52 2 262 2 17 1 220 1 166 10 20 3 132 6 173 1 24 1 79 2 288 1 289 1 26 1 81 3 83 7 178 5 
336 1 338 1 317 8 318 1 123 1 12 1 190 1 301 1 191 1 98 1 194 1 220 1 166 4 20 1 132 2 173 1 79 1 24 1 289 1 288 1 81 2 83 4 178 2 
63 2 314 1 336 1 116 2 338 1 317 12 12 1 190 1 301 1 191 1 238 1 98 2 258 1 52 2 262 1 220 1 166 6 20 1 132 2 24 1 79 2 26 1 81 1 83 6 178 2 
314 1 63 1 336 4 116 2 338 1 317 18 318 1 123 1 187 2 12 4 190 4 238 1 191 1 301 1 98 3 258 1 194 1 52 2 262 2 17 1 220 1 166 10 20 4 132 8 173 1 24 1 79 2 288 1 289 1 26 1 81 3 83 8 178 5 
314 1 63 2 336 4 116 3 338 1 317 16 93 1 187 2 12 4 190 4 238 1 191 1 301 1 98 3 258 1 52 3 262 3 220 1 166 9 20 4 132 8 24 1 79 2 26 1 81 3 83 7 178 6 
98 1 262 3 166 3 317 7 318 3 173 3 79 1 123 1 289 1 288 2 81 3 83 4 178 6 
314 1 63 1 336 4 116 2 338 1 317 18 93 1 318 1 123 1 187 2 12 4 190 4 238 1 191 1 301 1 98 3 258 1 194 1 52 2 262 1 220 1 166 10 20 4 132 8 173 1 24 1 79 2 288 1 289 1 26 1 81 3 83 8 178 4 
143 1 283 1 1 1 129 1 174 1 236 1 247 1 
143 1 283 1 1 1 294 1 127 1 129 1 222 1 174 1 236 1 278 1 247 1 280 1 
207 1 106 1 10 1 158 1 372 1 11 1 225 1 276 1 362 1 82 1 199 1 
293 1 84 1 143 2 207 1 283 1 1 1 158 1 113 1 36 1 225 1 129 2 362 1 117 1 106 1 11 1 276 1 47 1 82 1 
357 1 293 2 84 1 143 2 1 1 113 1 225 1 362 1 117 1 11 1 276 3 47 2 283 2 158 2 36 1 75 1 129 2 106 1 107 1 171 1 333 1 176 1 82 1 
357 1 293 2 143 2 1 1 113 1 225 1 362 2 117 1 11 2 276 3 47 2 72 1 283 2 158 2 36 1 128 1 75 1 129 2 106 1 107 1 171 1 333 1 176 1 82 2 
207 1 16 1 158 1 87 1 2 1 225 1 128 1 75 1 362 3 76 1 343 1 169 2 106 1 267 1 11 3 134 1 171 1 276 4 176 1 47 1 69 1 82 3 237 2 
207 1 16 1 158 1 2 1 225 1 128 1 75 1 362 3 147 1 76 1 169 2 106 1 267 1 11 3 134 1 171 1 276 4 176 1 47 1 69 1 82 3 237 2 
106 1 11 1 225 1 362 1 38 1 82 1 
272 1 208 1 207 2 126 1 158 2 225 2 55 1 362 7 38 1 66 1 351 1 106 3 228 1 11 7 183 1 56 1 276 3 246 1 41 1 47 1 82 6 
249 2 293 1 84 1 143 2 1 2 113 1 30 1 225 1 336 2 337 1 362 1 117 1 317 6 298 1 365 1 318 1 11 1 276 1 123 1 12 2 47 1 190 2 98 1 283 1 158 1 35 1 36 1 194 1 129 2 165 1 130 2 55 1 166 3 20 2 132 4 306 1 106 1 173 1 374 1 79 1 288 1 289 1 81 2 82 1 83 3 178 2 
0 2 207 1 313 1 88 1 2 1 7 1 362 1 147 1 148 1 11 1 122 1 276 2 69 1 237 3 155 1 16 1 261 2 103 2 76 1 169 3 170 1 267 1 134 2 269 1 203 2 109 1 137 1 82 1 
126 1 158 1 225 1 285 1 55 1 362 2 38 1 106 2 11 2 276 2 69 1 47 1 82 2 
154 1 207 1 158 1 225 1 128 1 362 4 55 1 106 1 10 1 11 4 372 1 276 1 82 4 
99 1 158 1 225 1 163 1 75 1 4 1 362 2 66 1 106 2 11 2 183 1 276 1 47 1 82 2 
207 1 202 1 106 1 11 1 347 1 22 1 225 1 327 1 362 1 82 1 
208 1 106 1 158 1 228 1 11 2 225 1 276 1 362 2 55 1 311 1 82 2 
154 1 272 1 207 1 208 1 158 2 225 2 75 1 362 5 55 1 10 1 351 1 106 2 372 1 11 5 276 3 82 4 
154 1 272 1 207 1 208 1 158 2 225 2 144 1 75 1 362 5 55 1 10 1 106 2 372 1 11 5 276 3 82 4 
293 1 143 2 207 1 72 1 283 1 1 1 158 1 113 1 36 1 225 1 129 2 362 1 117 1 106 1 11 1 276 1 47 1 82 1 
126 1 158 1 225 1 75 1 362 1 66 1 106 2 11 1 183 1 56 1 276 1 47 1 82 1 
143 1 283 1 345 1 352 1 94 1 231 1 74 1 129 1 253 1 
345 1 114 1 37 1 
345 1 1 1 268 1 94 1 74 1 
357 1 16 1 313 1 1 1 2 1 89 1 37 1 114 1 74 2 316 1 198 1 169 2 345 1 267 1 268 2 107 1 94 2 333 1 237 2 
105 1 295 1 353 1 199 1 
213 1 105 1 192 1 295 1 233 1 353 1 65 1 
265 1 331 1 65 1 
192 3 295 1 6 1 65 3 213 1 105 1 67 1 233 1 353 1 25 2 375 1 48 1 
14 1 213 1 105 1 192 2 295 1 233 1 353 1 65 2 118 1 
140 1 192 1 195 1 65 1 213 1 104 1 105 1 202 1 347 1 67 1 233 1 
213 1 105 1 192 1 67 1 233 1 353 1 65 1 
213 1 192 1 295 1 67 1 233 1 353 2 65 1 
192 2 360 1 252 1 65 2 213 2 77 1 105 1 67 1 233 2 353 1 
14 2 140 1 192 3 295 1 146 1 65 3 213 1 201 1 105 2 67 1 233 1 353 1 139 1 
14 1 192 2 295 1 195 1 327 1 273 1 65 2 213 1 105 1 202 2 347 1 67 1 233 1 353 1 281 1 
14 2 140 1 192 4 156 1 295 1 146 1 65 4 118 1 213 2 105 2 67 1 233 2 353 1 
213 1 105 1 192 1 295 1 67 1 233 1 353 1 65 1 
14 2 140 1 85 1 192 4 295 2 146 1 65 4 213 1 105 3 233 1 353 2 25 1 375 1 48 1 
14 1 192 2 295 1 65 2 102 1 213 1 105 1 230 1 67 1 233 1 353 1 279 1 
192 3 295 1 260 1 65 3 213 1 105 1 67 1 233 1 353 1 25 2 375 1 48 2 
105 2 308 2 326 1 221 1 
213 1 192 1 67 1 90 1 233 1 65 1 
14 1 213 1 105 1 192 2 295 1 67 1 233 1 353 1 65 2 139 1 
115 1 
213 1 105 1 192 1 295 1 67 1 233 1 353 1 65 1 
14 1 192 3 295 1 65 3 213 1 105 1 67 1 233 1 353 1 25 1 139 1 
140 1 85 1 105 1 146 1 
105 1 353 1 

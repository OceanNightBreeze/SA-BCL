#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 313 (64,353) (64,353) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 313 (64,353) (64,353) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 313 (64,353) (64,353) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 313 (64,353) (64,353) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (154,215) 341 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (154,215) 341 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (202,224) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (200,309) 247 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (200,309) 247 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (200,309) 79 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (200,309) 79 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 256 1 192 1 353 1 336 1 258 1 130 1 215 1 313 1 64 1 132 1 
122 1 256 1 192 1 353 1 336 1 258 1 130 1 215 1 313 1 64 1 132 1 
122 1 256 1 192 1 353 1 336 1 258 1 130 1 215 1 313 1 64 1 132 1 
122 1 256 1 192 1 353 1 336 1 258 1 130 1 215 1 313 1 64 1 132 1 
335 1 310 2 264 2 312 1 336 1 337 1 170 1 91 1 256 4 161 1 92 1 47 3 237 3 258 1 130 1 109 1 299 1 132 4 
367 1 251 1 312 1 336 1 170 1 72 1 122 1 256 2 192 1 161 1 237 1 25 1 258 1 130 1 299 1 132 2 
154 1 256 3 310 1 192 1 47 1 237 2 336 2 258 1 337 1 130 2 170 1 299 1 132 3 
341 1 154 1 256 1 336 1 258 1 130 1 132 1 
341 1 154 1 256 1 336 1 258 1 130 1 132 1 
98 1 157 1 105 1 
138 1 149 2 105 1 
259 1 235 2 136 2 248 1 33 2 93 2 233 2 118 2 
85 1 332 1 333 1 259 1 334 1 287 1 222 1 33 3 243 1 150 1 223 1 118 2 291 2 191 1 248 1 59 2 295 1 60 1 319 1 93 2 40 1 366 1 63 1 136 2 275 2 216 1 68 1 370 2 233 2 75 1 74 1 235 3 159 2 306 1 238 1 184 1 185 1 
107 1 235 1 0 1 136 1 248 1 33 1 93 1 233 1 118 1 29 1 
95 1 65 1 33 1 254 1 118 1 105 1 235 1 343 1 107 1 163 1 157 1 128 1 379 1 380 1 
95 2 65 1 136 1 33 1 233 1 118 1 105 1 235 1 343 1 107 1 163 1 93 1 157 1 128 2 379 1 
95 1 276 1 375 1 128 1 28 1 
95 2 180 1 276 1 157 1 128 2 28 1 105 1 273 1 
95 1 128 1 28 1 
95 1 0 1 136 1 208 1 276 1 33 1 233 1 118 1 107 1 235 1 248 1 93 1 128 1 29 1 
105 1 
36 1 95 2 276 1 157 1 128 2 28 1 105 1 273 1 
95 5 135 2 368 1 276 2 97 1 301 1 56 2 280 1 338 2 290 1 105 1 38 1 8 1 213 1 157 1 128 5 28 2 214 1 273 1 
333 1 334 1 136 1 275 1 168 1 287 1 222 1 33 2 370 1 150 1 118 1 361 1 191 1 202 1 235 2 159 1 306 1 93 1 184 1 63 1 
259 1 98 1 
259 2 136 1 177 1 33 2 233 1 118 2 235 2 93 1 284 1 
53 1 202 1 374 1 
333 1 259 1 334 1 275 1 222 1 287 1 33 1 89 1 370 1 150 1 191 1 235 1 159 1 306 1 184 1 63 1 
259 1 235 3 136 3 168 1 33 3 93 3 233 1 118 3 
107 1 235 1 136 1 33 1 93 1 118 1 29 1 
107 1 235 1 136 1 177 1 33 1 93 1 233 1 118 1 284 1 
85 1 333 1 259 1 334 1 168 1 287 1 222 1 113 1 33 4 243 1 150 1 223 1 118 3 291 2 361 1 191 1 343 1 248 1 59 1 295 1 319 1 93 3 40 1 128 1 366 1 63 1 95 1 65 1 136 3 275 1 68 1 232 1 370 1 233 2 74 1 235 4 107 1 159 1 306 1 238 1 163 1 184 1 379 1 284 1 
259 1 235 2 136 1 168 1 33 2 93 1 378 1 118 2 380 1 
95 1 65 1 136 3 168 2 113 1 33 3 233 1 118 3 105 1 361 1 107 1 235 3 343 1 163 1 93 3 128 1 345 1 379 1 284 1 
53 1 202 1 235 2 136 2 168 1 33 2 93 2 233 1 118 2 284 1 
333 1 259 1 334 1 275 1 222 1 287 1 33 1 370 1 150 1 191 1 235 1 159 1 306 1 184 1 63 1 
333 1 259 1 334 1 275 1 263 1 287 1 33 1 370 1 150 1 191 1 235 1 159 1 184 1 13 1 63 1 
10 1 224 1 
107 1 65 1 235 1 136 1 196 1 33 1 93 1 118 1 
259 1 136 4 168 2 33 5 190 1 233 1 118 5 361 1 76 1 235 5 93 4 378 1 380 1 284 1 
107 1 235 2 196 1 136 2 33 2 93 2 118 2 29 1 
294 1 339 1 
294 1 339 1 
225 1 228 1 
225 1 228 1 
225 1 228 1 
294 1 339 1 151 1 
294 1 339 1 151 1 
225 1 228 1 294 2 200 1 339 2 309 1 
294 1 365 1 339 1 
294 1 339 1 151 1 
294 1 318 1 339 1 
294 1 318 1 339 1 
294 1 318 1 339 1 
95 2 96 1 43 1 44 1 169 2 200 1 339 2 105 1 140 1 153 3 246 1 78 2 125 2 127 2 294 2 327 2 128 2 377 1 50 1 
95 1 259 1 136 2 33 2 278 1 178 1 169 1 118 2 339 1 179 1 235 2 153 1 78 1 5 1 127 1 294 1 327 1 93 2 377 1 128 1 330 1 365 1 205 1 240 1 
335 1 161 1 312 1 
161 1 251 1 312 1 
124 1 335 2 316 1 251 1 312 3 219 1 
124 1 335 1 316 1 242 1 251 1 312 2 
335 1 124 1 316 2 251 1 312 2 
146 1 56 1 149 3 338 1 38 2 211 1 245 1 6 1 267 1 213 1 128 5 157 1 271 1 273 1 95 5 135 1 368 3 138 1 276 4 230 1 279 2 178 1 105 2 255 1 179 1 20 2 141 1 349 1 328 1 48 2 28 1 240 1 
146 3 56 2 149 9 338 2 342 1 38 6 267 2 61 1 213 1 128 9 157 1 271 3 273 1 95 9 135 2 368 8 369 1 138 3 276 7 217 1 97 1 218 1 230 1 346 1 279 6 178 4 105 5 255 3 141 2 349 3 24 5 328 3 48 6 375 5 28 6 
146 1 56 1 338 1 149 4 245 1 211 1 38 2 267 1 157 1 128 3 271 1 95 3 135 1 368 3 138 2 276 2 97 1 279 2 178 1 105 3 255 1 20 1 141 1 349 1 328 1 48 2 
146 2 56 1 149 7 338 1 245 1 211 1 38 4 267 1 61 1 157 1 128 4 271 2 95 4 135 1 368 5 369 1 138 3 276 3 217 1 97 1 279 4 178 2 105 4 255 2 20 2 141 1 349 2 328 2 48 4 
274 1 98 1 184 1 
69 1 184 1 
73 1 
184 1 63 1 
274 2 362 1 287 1 34 1 184 3 63 1 
287 1 184 1 63 1 
9 1 184 1 
85 3 260 1 87 3 197 1 2 1 45 1 71 1 255 1 75 4 46 2 326 2 59 7 283 1 328 1 26 1 331 1 94 1 
85 3 260 1 87 3 197 1 2 1 45 1 71 1 255 1 75 4 46 2 326 2 59 7 283 1 328 1 26 1 331 1 94 1 
85 3 260 1 87 3 197 1 188 1 2 1 45 1 71 1 255 1 75 4 46 2 326 2 59 7 283 1 328 1 26 1 331 1 94 1 
85 15 260 2 87 10 88 4 147 1 146 3 2 2 358 3 291 2 59 31 295 1 40 1 296 1 271 3 94 1 131 1 197 1 67 1 70 1 45 5 71 2 255 4 74 1 75 16 46 3 349 3 181 1 326 5 283 1 238 1 328 4 26 2 142 1 331 1 
85 4 260 1 87 4 2 1 291 4 59 9 295 2 40 2 298 1 67 1 197 1 45 1 71 1 255 1 74 2 22 1 75 5 46 2 326 3 238 2 283 1 328 1 26 1 331 1 
333 1 334 1 335 1 1 1 312 2 336 1 170 1 212 1 192 1 39 1 130 1 62 1 195 1 299 1 132 2 275 1 251 1 302 1 370 1 104 1 348 1 159 1 256 2 161 1 351 1 47 1 237 1 376 1 258 1 219 1 
333 1 334 1 335 1 1 1 312 2 336 1 170 1 35 1 212 1 174 1 192 1 39 1 129 1 130 1 62 1 195 1 299 1 132 3 275 1 251 1 302 1 370 1 348 1 159 1 256 3 161 1 47 2 237 1 376 1 219 1 
333 1 334 1 335 1 275 1 1 1 251 1 302 1 312 2 370 1 170 1 35 1 348 1 212 1 256 2 159 1 174 1 161 1 192 1 47 2 237 1 376 1 219 1 62 1 299 1 132 2 
333 1 334 1 275 1 1 2 289 1 336 1 370 1 191 1 256 1 159 1 192 2 193 1 307 1 376 2 239 1 129 1 194 1 130 1 184 1 206 1 62 2 63 1 132 1 
333 1 334 1 335 1 1 1 312 2 336 1 212 1 174 1 192 1 39 1 130 1 62 1 195 1 132 1 275 1 251 1 302 1 370 1 348 1 159 1 256 1 161 1 351 1 376 1 258 1 219 1 
111 1 
333 1 54 1 334 1 56 1 338 1 244 1 117 2 118 1 343 1 344 1 213 1 128 5 63 1 135 1 65 1 138 2 254 1 81 1 28 6 184 1 30 2 262 2 32 2 33 1 355 1 265 1 149 2 191 2 38 2 227 2 193 1 267 1 364 1 157 1 41 1 194 1 273 3 95 5 368 2 275 2 199 2 101 2 370 2 105 2 158 1 324 1 235 1 107 1 159 2 163 1 164 1 49 4 379 1 52 1 380 1 
95 3 65 1 199 1 33 1 355 1 265 1 254 1 118 1 36 1 324 1 107 1 343 1 235 1 163 1 128 3 164 1 28 2 49 2 379 1 52 1 273 1 380 1 
32 1 33 1 355 1 265 1 118 1 36 1 343 1 128 3 157 1 273 1 95 3 65 1 254 1 105 1 324 1 235 1 107 1 163 1 164 1 28 1 49 3 379 1 52 1 380 1 
262 1 32 1 33 1 355 1 265 1 118 1 36 1 343 1 128 3 157 1 273 1 95 3 65 1 199 1 254 1 105 1 324 1 235 1 107 1 163 1 164 1 49 3 28 2 379 1 52 1 380 1 
56 1 338 1 118 1 117 2 121 1 343 1 126 1 213 1 128 5 65 1 135 1 138 2 254 1 182 1 28 7 220 1 30 2 262 4 32 4 354 1 33 1 355 1 265 1 36 1 38 1 227 2 157 5 41 1 273 3 95 5 368 1 199 4 101 2 105 5 158 1 324 1 107 1 235 1 163 1 164 1 49 6 379 1 52 1 380 1 
56 1 338 1 118 1 117 2 244 1 343 1 213 1 128 4 65 1 135 1 138 2 254 1 28 4 30 2 262 2 32 2 33 1 355 1 265 1 149 2 38 1 227 2 41 1 157 1 273 2 95 4 368 1 101 2 199 2 158 1 105 2 324 1 107 1 235 1 163 1 164 1 49 4 379 1 52 1 380 1 
30 2 262 2 32 2 354 1 33 1 56 1 355 1 265 1 338 1 117 2 118 1 38 1 343 1 227 2 126 1 213 1 157 1 41 1 128 4 273 2 95 4 65 1 135 1 368 1 138 2 199 2 101 2 254 1 105 1 158 1 324 1 235 1 107 1 182 1 163 1 164 1 28 4 49 4 379 1 52 1 380 1 
30 2 262 2 32 2 354 1 33 1 56 1 355 1 265 1 338 1 117 2 118 1 38 1 343 1 227 2 126 1 213 1 157 1 41 1 128 4 273 2 95 4 65 1 135 1 368 1 138 2 199 2 101 2 254 1 105 1 158 1 324 1 235 1 107 1 182 1 163 1 164 1 28 4 49 4 379 1 52 1 380 1 
30 2 262 2 31 1 32 2 288 2 354 1 33 1 56 1 355 1 265 1 149 2 338 1 118 1 38 1 123 1 343 1 213 1 157 1 128 4 273 2 95 4 65 1 135 1 368 1 277 1 199 2 101 2 254 1 105 1 158 1 324 1 235 1 107 1 163 1 164 1 28 4 49 4 51 2 379 1 52 1 380 1 
30 2 262 3 354 1 32 3 33 1 56 1 355 1 265 1 338 1 117 2 118 1 121 1 38 1 343 1 227 2 126 1 213 1 157 1 41 1 128 4 273 2 95 4 135 1 65 1 368 1 138 2 101 2 199 3 254 1 105 1 158 1 324 1 235 1 107 1 182 1 163 1 164 1 49 5 28 5 379 1 52 1 380 1 
30 2 262 3 354 1 32 3 33 1 56 1 355 1 265 1 338 1 117 2 118 1 121 1 38 1 343 1 227 2 126 1 213 1 157 1 41 1 128 4 273 2 95 4 135 1 65 1 368 1 138 2 101 2 199 3 254 1 105 1 158 1 324 1 235 1 107 1 182 1 163 1 164 1 49 5 28 5 379 1 52 1 380 1 
288 2 56 1 338 1 118 1 244 1 123 1 343 1 213 1 128 4 65 1 135 1 254 1 28 4 30 2 262 2 32 2 33 1 355 1 265 1 149 2 38 1 157 1 273 2 95 4 368 1 101 2 199 2 158 1 105 1 324 1 107 1 235 1 163 1 164 1 49 4 379 1 51 2 52 1 380 1 
98 1 10 1 
85 6 53 4 259 1 86 1 87 2 88 3 55 1 146 2 358 3 223 1 291 4 360 1 173 1 59 14 295 2 319 1 40 2 366 2 271 2 45 1 70 1 255 2 74 2 374 11 202 11 75 8 160 1 349 1 326 1 238 2 328 1 142 1 185 1 
333 1 53 1 85 1 259 1 334 1 168 1 287 1 222 1 89 1 33 2 150 1 223 1 118 1 119 1 291 2 191 1 360 1 361 1 59 2 295 1 93 1 319 1 40 1 366 1 63 1 136 1 275 1 370 1 139 1 235 2 74 1 75 1 159 1 306 1 204 1 238 1 184 1 185 1 
333 2 53 7 334 2 168 1 287 2 243 2 118 1 291 6 292 1 174 1 59 20 295 3 175 2 63 2 136 1 137 1 255 3 74 3 75 10 306 2 349 2 26 1 184 2 185 1 85 10 259 2 260 1 87 8 222 2 33 3 148 2 146 2 150 2 223 3 191 1 361 1 360 1 37 1 319 1 93 1 40 3 366 3 271 2 275 3 197 1 370 3 102 2 281 2 45 4 235 3 374 7 202 7 46 1 159 3 326 4 283 1 238 3 328 3 331 1 
333 2 85 1 334 2 168 1 33 1 357 1 118 1 223 1 291 2 191 2 174 1 193 1 59 2 249 1 295 1 10 1 93 1 319 1 40 1 194 1 366 1 229 1 63 2 136 1 275 8 216 2 305 1 370 7 104 1 235 1 74 1 21 1 75 1 159 8 238 1 108 1 308 1 184 3 185 1 
53 1 85 2 87 1 33 1 146 1 223 1 118 1 291 2 360 1 4 1 59 3 295 1 93 1 40 1 366 1 271 1 136 1 233 1 255 1 202 1 374 1 74 1 235 1 75 1 349 1 326 1 238 1 328 1 284 1 
10 1 
10 1 
10 1 
53 1 261 1 87 1 45 1 223 1 291 2 255 1 202 1 374 1 21 1 74 1 75 2 59 2 295 1 238 1 40 1 366 1 271 1 
53 1 85 2 87 1 223 1 291 2 202 1 374 1 21 1 74 1 314 1 349 1 326 1 59 2 295 1 238 1 328 1 40 1 366 1 
53 2 85 2 87 2 146 1 223 1 291 2 59 4 295 1 40 1 271 1 366 1 45 1 255 1 75 2 74 1 21 1 374 2 202 2 349 1 326 1 238 1 328 1 
53 2 85 2 87 2 146 1 223 1 291 2 59 4 295 1 40 1 271 1 366 1 45 1 255 1 75 2 74 1 374 2 202 2 349 1 326 1 238 1 328 1 
333 1 85 1 259 1 334 1 287 1 222 1 33 1 243 1 150 1 223 1 291 2 191 1 59 2 295 1 319 1 40 1 366 1 63 1 275 1 370 1 75 1 235 1 74 1 159 1 306 1 238 1 184 1 185 1 
333 1 85 1 259 1 334 1 263 1 287 1 33 1 150 1 223 1 291 2 191 1 155 1 59 2 295 1 319 1 40 1 366 1 13 1 63 1 275 1 370 1 75 1 235 1 74 1 159 1 238 1 184 1 185 1 
53 2 85 2 87 2 146 1 223 1 291 2 360 1 59 4 295 1 40 1 271 1 366 1 45 1 255 1 75 2 74 1 374 2 202 2 349 1 326 1 238 1 328 1 
85 2 53 2 333 1 334 1 87 2 287 1 222 1 33 1 146 1 243 1 150 1 223 1 291 2 59 4 295 1 175 1 40 1 271 1 366 1 63 1 275 1 370 1 45 1 104 1 255 1 202 2 374 2 75 2 235 1 74 1 159 1 306 1 349 1 326 1 238 1 328 1 184 1 
85 1 53 1 87 1 33 1 146 1 223 1 115 1 118 1 291 2 360 1 59 3 295 1 93 1 40 1 366 1 271 1 136 1 233 1 45 1 255 1 74 1 235 1 75 2 374 1 202 1 349 1 238 1 328 1 284 1 
285 4 340 1 291 6 59 41 295 3 250 1 67 1 252 1 70 1 255 5 75 20 22 1 74 3 349 4 257 1 26 1 142 3 83 1 85 21 221 2 260 1 87 8 88 4 146 4 189 1 358 3 152 1 156 1 40 3 271 4 320 1 197 1 322 1 198 1 45 4 234 1 46 1 326 4 238 3 283 1 328 5 329 1 331 1 
285 4 85 18 260 1 221 2 87 7 88 4 146 4 189 1 358 3 340 1 152 1 291 8 156 1 59 38 295 4 250 1 40 4 320 1 271 4 322 1 197 1 67 2 198 1 252 1 70 1 45 3 234 1 255 5 74 4 22 1 75 20 46 1 349 3 326 4 283 1 257 1 238 4 328 4 329 1 26 1 83 1 142 3 331 1 
285 4 85 25 260 1 221 1 87 14 88 4 146 7 189 1 358 4 340 1 291 4 173 2 156 1 59 52 295 2 250 1 40 2 320 1 271 7 197 1 67 1 198 1 252 1 70 2 45 7 234 1 255 8 74 2 22 1 75 27 46 1 349 7 326 7 283 1 257 1 238 2 328 8 329 1 26 1 83 1 142 2 331 1 
285 2 85 10 221 1 87 6 88 2 146 3 358 1 340 2 152 1 291 4 59 19 295 2 40 2 320 1 271 3 252 1 70 1 45 3 255 3 74 2 22 1 75 9 349 3 326 3 257 1 238 2 328 3 329 1 142 1 165 1 
85 12 285 4 221 2 87 4 88 2 146 3 189 1 358 2 340 1 291 6 156 1 59 26 295 3 250 1 40 3 320 2 271 3 67 2 198 1 252 1 45 2 234 1 255 3 74 3 22 1 75 14 349 2 326 2 257 1 238 3 328 2 329 1 142 2 83 1 
140 1 78 1 80 1 127 1 294 1 327 1 169 1 200 1 339 1 50 1 
365 1 205 1 
78 1 127 1 315 1 294 1 327 1 356 1 114 1 169 1 339 1 
95 1 96 1 43 1 44 1 169 1 200 1 339 1 105 1 140 1 153 2 78 1 125 1 127 1 294 1 327 1 377 1 128 1 50 1 
95 1 96 1 43 1 44 1 169 1 200 1 339 1 105 1 140 1 153 2 78 1 125 1 127 1 294 1 327 1 377 1 128 1 50 1 
95 1 96 1 43 1 44 1 169 1 200 1 339 1 105 1 140 1 153 2 78 1 125 1 127 1 294 1 327 1 377 1 128 1 50 1 
247 1 309 1 151 1 
247 1 309 1 151 1 
79 1 318 1 
79 1 318 1 309 1 
5 1 330 1 
259 1 33 2 169 1 339 1 118 2 153 1 125 1 5 1 127 1 294 1 317 1 93 2 128 1 365 1 95 1 136 2 276 1 44 1 278 1 178 1 235 2 179 1 78 1 327 1 205 1 330 1 240 1 
247 1 151 1 
79 1 318 1 309 1 
333 1 85 1 334 1 33 2 223 1 118 2 291 2 360 1 226 1 172 1 58 1 59 2 295 1 319 1 40 1 366 1 229 1 63 1 275 2 216 2 42 1 370 2 372 1 235 2 74 1 75 1 159 2 238 1 108 1 184 1 185 1 
333 1 334 1 335 1 275 2 209 1 251 1 312 2 370 2 266 1 19 1 104 1 348 1 159 2 212 1 174 1 161 1 219 1 62 1 195 1 
333 1 334 1 335 1 275 1 209 1 145 1 251 1 312 2 370 1 348 1 159 1 212 1 174 1 161 1 219 1 62 1 195 1 
333 1 334 1 275 1 289 1 370 1 19 1 191 1 159 1 193 1 194 1 184 1 62 1 270 1 63 1 
333 1 334 1 335 1 275 1 209 1 251 1 312 2 370 1 266 1 19 1 348 1 159 1 212 1 174 1 161 1 219 1 62 1 195 1 
325 1 
38 1 368 1 98 1 8 1 157 1 280 1 105 1 
56 1 338 1 149 1 117 1 38 1 227 1 213 1 41 1 128 1 157 1 273 1 95 1 135 1 368 1 138 1 105 2 28 1 
333 3 334 4 287 3 56 4 338 4 7 1 8 1 213 4 9 2 128 5 63 3 135 4 138 6 66 2 300 2 69 3 255 2 349 2 81 1 82 1 143 1 28 5 184 10 146 2 149 12 359 1 191 1 38 8 362 1 267 2 268 2 363 1 157 2 271 2 273 3 95 5 274 2 368 9 275 3 100 2 370 3 279 6 280 1 323 2 371 2 281 2 104 1 105 8 106 2 159 3 163 2 48 6 328 2 207 2 
88 1 146 2 189 1 56 2 149 6 338 2 358 1 38 5 267 1 156 1 213 2 250 1 128 1 157 2 271 2 273 1 95 1 135 2 368 8 138 3 300 1 18 1 100 2 279 5 103 1 105 5 234 1 255 2 349 2 81 1 48 5 328 2 142 1 83 1 28 1 
260 1 0 1 208 1 33 1 56 1 338 1 118 1 38 2 126 1 248 1 213 1 93 1 128 1 95 1 135 1 136 1 368 2 300 1 100 2 233 1 255 2 107 1 235 1 328 1 26 1 29 1 166 1 331 1 
135 1 368 1 56 1 338 1 280 1 105 1 38 1 8 1 213 1 157 1 
368 5 138 5 300 1 100 2 146 2 279 5 149 10 281 1 105 5 255 2 38 5 349 2 48 5 328 2 271 2 
95 1 157 1 128 1 28 1 105 1 273 1 
333 1 334 1 56 2 338 2 359 1 191 2 38 2 7 2 267 2 193 1 344 1 213 1 364 1 128 3 194 1 63 1 273 2 14 1 95 3 135 2 275 4 368 2 97 1 370 4 159 4 162 1 81 2 28 4 184 1 
85 1 333 1 259 1 334 1 222 1 287 1 33 3 243 1 150 1 118 2 223 1 291 2 191 1 248 1 59 1 295 1 319 1 93 2 40 1 366 1 63 1 136 2 275 1 68 1 370 1 233 2 74 1 235 3 159 1 306 1 238 1 184 1 
135 1 368 1 138 2 56 1 279 2 149 4 338 1 105 4 38 2 46 1 267 1 81 1 48 2 213 1 157 2 
127 1 327 1 272 1 
127 1 327 1 272 1 
140 1 134 1 5 1 127 1 327 1 
127 1 327 1 272 1 
127 1 327 1 171 1 
127 1 327 1 171 1 
127 1 327 1 171 1 
127 1 327 1 
294 1 339 1 
85 4 260 1 87 2 88 1 358 1 291 2 59 8 295 1 40 1 197 1 255 1 234 1 74 1 22 1 75 4 46 1 326 2 238 1 283 1 328 1 26 1 142 1 331 1 
85 5 260 1 87 3 88 2 146 1 358 1 291 4 59 11 295 2 40 2 271 1 197 1 99 1 70 1 45 1 234 1 255 2 22 1 74 2 75 6 46 1 326 2 283 1 238 2 328 1 26 1 142 1 331 1 
85 10 260 1 87 4 88 1 146 2 189 1 358 1 291 6 156 1 59 19 295 3 250 1 40 3 271 2 197 1 67 1 99 1 45 1 234 1 255 3 74 3 22 1 75 9 46 1 349 2 326 3 283 1 238 3 328 3 26 1 142 1 83 1 331 1 
85 7 260 1 87 5 88 1 146 2 189 1 358 1 291 6 156 1 59 17 295 3 250 1 40 3 271 2 197 1 67 1 99 1 45 2 234 1 255 3 74 3 22 1 75 10 46 1 349 1 326 3 283 1 238 3 328 2 26 1 142 1 83 1 331 1 
85 4 260 1 87 2 88 1 358 1 291 2 59 8 295 1 40 1 197 1 255 1 234 1 74 1 22 1 75 4 46 1 326 2 238 1 283 1 328 1 26 1 142 1 331 1 
85 6 87 2 88 1 146 2 189 1 358 1 291 2 156 1 59 12 295 1 250 1 40 1 271 2 45 1 234 1 255 2 74 1 22 1 75 6 349 2 326 1 238 1 328 2 142 1 83 1 
85 8 260 1 87 5 88 1 146 2 189 1 358 1 291 8 156 1 59 18 295 4 250 1 40 4 271 2 197 1 67 2 99 1 45 2 234 1 255 3 74 4 22 1 75 10 46 1 349 1 326 3 283 1 238 4 328 2 26 1 142 1 83 1 331 1 
85 7 87 6 88 1 146 3 189 1 358 1 291 8 152 1 156 1 59 16 295 4 250 1 40 4 271 3 67 2 45 3 234 1 255 3 22 1 74 4 75 9 349 2 326 3 238 4 328 2 142 1 83 1 
85 4 260 3 87 6 197 2 45 3 255 1 75 3 59 7 326 3 283 1 328 1 26 3 331 1 
85 8 260 1 87 4 88 1 146 2 189 1 358 1 291 8 152 1 156 1 59 18 295 4 250 1 40 4 271 2 197 1 67 2 45 1 234 1 255 3 22 1 74 4 75 10 46 1 349 1 326 3 283 1 238 4 328 2 26 1 142 1 83 1 331 1 
85 4 260 1 87 3 67 1 197 1 45 1 255 1 291 4 75 4 74 2 46 1 59 8 326 2 295 2 238 2 283 1 328 1 26 1 40 2 331 1 
85 3 75 3 260 1 46 1 87 2 59 6 326 2 197 1 98 1 283 1 328 1 26 1 331 1 255 1 
85 2 87 2 99 1 146 1 45 1 291 2 255 1 74 1 75 2 349 1 326 1 59 4 295 1 238 1 328 1 40 1 271 1 
85 4 87 2 88 2 146 1 358 1 70 1 45 1 255 1 75 3 349 1 326 1 59 7 328 1 142 1 271 1 
85 12 260 2 87 9 88 2 55 1 146 2 358 2 116 1 291 4 173 1 59 23 295 2 40 2 271 2 197 1 67 2 45 4 70 1 255 3 75 11 74 2 46 1 349 2 326 5 283 1 238 2 328 3 26 2 331 1 
85 1 59 1 88 1 
75 1 59 1 358 1 
85 3 87 3 99 1 146 1 281 1 45 1 291 2 255 1 74 1 75 3 349 1 59 6 326 2 238 1 295 1 328 1 40 1 271 1 
85 6 87 2 88 1 146 2 189 1 358 1 291 2 156 1 59 12 295 1 250 1 40 1 271 2 45 1 234 1 255 2 74 1 22 1 75 6 349 2 326 1 238 1 328 2 142 1 83 1 
85 3 260 1 87 2 45 1 255 1 75 3 59 6 326 1 328 1 26 1 331 1 
85 2 260 1 87 2 197 1 67 1 45 1 116 1 291 2 75 1 74 1 326 1 59 3 295 1 238 1 283 1 26 1 40 1 
85 5 260 2 87 5 45 2 291 2 255 2 74 1 22 1 75 5 326 3 59 10 238 1 295 1 328 2 26 2 40 1 166 1 331 1 
87 1 45 1 291 2 255 1 22 1 74 1 75 2 59 2 295 1 238 1 40 1 271 1 
85 2 87 2 146 1 45 1 291 2 255 1 22 1 74 1 75 2 349 1 326 1 59 4 295 1 238 1 328 1 40 1 271 1 
85 2 260 1 87 2 67 1 116 1 45 1 152 1 291 6 22 1 74 3 75 1 59 3 326 1 295 3 238 3 26 1 40 3 
85 18 260 3 87 12 88 4 147 1 146 3 358 3 116 1 152 1 291 10 59 34 295 5 40 5 296 1 271 3 197 1 67 2 99 1 70 1 45 5 255 5 74 5 22 1 75 16 46 1 181 1 349 3 326 7 283 1 238 5 328 5 26 3 142 1 331 2 
259 1 235 1 33 1 378 1 118 1 380 1 120 1 
259 1 33 1 304 1 303 1 118 1 57 1 120 1 235 1 11 1 378 1 186 1 380 1 
333 1 191 1 334 1 159 1 275 1 193 1 98 1 370 1 194 1 184 1 63 1 
333 1 259 1 334 1 136 1 275 1 168 1 287 1 222 1 33 2 370 1 150 1 118 1 191 1 235 2 159 1 93 1 184 1 63 1 
333 1 259 1 334 1 168 1 222 1 287 2 33 2 150 1 118 2 343 1 7 1 93 1 9 1 63 2 65 1 136 2 275 1 66 1 370 1 235 2 107 1 159 1 184 3 
333 1 259 1 334 1 187 1 168 1 287 2 33 2 150 1 118 2 343 1 7 1 93 1 9 1 13 1 63 2 65 1 136 2 275 2 66 1 370 2 235 2 107 1 159 2 184 3 
333 1 334 1 187 1 287 1 191 1 7 1 269 1 9 1 128 2 157 1 63 1 95 2 274 1 275 3 66 1 69 1 370 3 105 1 159 3 282 1 163 1 28 1 184 4 
95 2 333 1 334 1 187 1 274 1 275 3 66 1 287 1 370 3 69 1 105 1 191 1 159 3 7 1 268 1 163 1 9 1 157 1 128 2 28 1 184 4 63 1 
333 1 334 1 159 1 275 1 370 1 305 1 
333 2 334 3 275 7 216 1 311 1 287 1 305 1 370 6 347 1 357 1 104 1 191 2 159 7 174 1 362 1 350 1 249 1 108 1 308 1 184 3 63 2 
53 1 333 1 334 1 168 1 287 1 243 1 118 1 291 4 59 6 295 2 175 1 63 1 136 1 255 1 74 2 75 3 306 1 26 1 184 1 85 3 260 1 259 2 87 2 222 1 148 1 33 2 150 1 223 2 360 1 93 1 40 2 366 2 275 1 197 1 370 1 104 1 372 1 235 2 374 1 202 1 159 1 46 1 326 2 238 2 283 1 328 1 331 1 
56 2 338 2 359 1 191 1 38 1 268 1 8 1 213 2 157 1 128 3 273 1 95 3 135 2 274 1 368 1 275 1 276 1 370 1 69 1 280 1 323 1 105 1 106 1 159 1 163 1 28 2 184 2 207 1 
333 1 334 2 274 1 275 2 287 1 305 1 370 2 104 1 159 2 362 1 363 1 184 2 63 1 
333 1 334 1 187 1 275 4 253 1 370 4 104 1 191 1 159 4 193 1 194 1 184 1 63 1 
333 1 334 2 137 1 275 2 311 1 287 1 370 2 236 1 159 2 350 1 7 1 27 1 184 1 63 1 
333 1 348 1 191 1 334 1 159 1 275 1 161 1 251 1 312 1 370 1 
333 1 334 1 275 2 370 2 104 1 159 2 58 1 174 1 108 1 184 1 63 1 
333 2 334 2 275 5 253 1 370 4 104 1 191 1 159 5 7 1 193 1 249 1 108 1 194 1 308 1 184 3 63 2 
333 2 334 2 275 5 253 1 370 4 104 1 191 1 159 5 293 1 7 1 193 1 108 1 194 1 308 1 184 3 63 2 
333 1 259 1 334 1 136 1 275 1 168 1 287 1 33 2 370 1 150 1 118 1 191 1 235 2 159 1 93 1 184 1 13 1 63 1 
333 1 334 2 275 1 311 1 287 1 370 1 347 1 159 1 362 1 350 1 7 1 184 1 63 1 
167 1 42 1 33 1 118 1 201 1 172 1 226 1 235 1 144 1 
15 1 203 1 167 1 
241 1 201 1 259 1 167 1 144 1 
133 1 95 2 15 1 241 2 259 1 65 1 167 1 276 1 113 1 105 1 201 2 107 1 343 1 203 1 163 1 157 1 128 2 144 2 379 1 
98 1 237 1 170 1 299 1 
256 1 237 1 336 1 130 1 170 1 299 1 132 1 
1 1 192 1 132 1 
112 1 256 3 183 1 237 1 25 2 90 1 336 1 258 1 130 1 170 1 299 1 132 3 
256 2 47 1 237 1 264 1 336 1 130 1 170 1 299 1 132 2 
335 1 256 1 161 1 310 1 237 1 312 1 336 1 258 1 130 1 91 1 132 1 
256 1 237 1 336 1 258 1 130 1 170 1 132 1 
256 1 336 1 258 1 130 1 170 2 299 1 132 1 
373 1 256 2 17 1 176 1 237 1 336 2 258 1 130 2 170 1 132 2 
256 3 310 1 352 1 47 2 237 2 336 1 258 1 337 1 130 1 170 1 12 1 299 1 132 3 
335 1 321 1 251 1 312 2 336 1 170 1 256 2 161 1 47 1 237 1 258 1 219 1 130 1 299 1 132 2 
256 4 310 1 92 1 47 2 237 2 264 1 336 2 258 1 337 1 130 2 170 1 299 1 132 4 
256 1 237 1 336 1 258 1 130 1 170 1 299 1 132 1 
112 1 310 1 90 1 336 1 337 1 170 2 256 4 47 2 237 3 25 1 84 1 130 1 299 2 132 4 
256 2 286 1 23 1 47 1 237 1 3 1 336 1 258 1 130 1 170 1 299 1 132 2 
112 2 16 1 90 1 336 1 170 1 256 3 237 1 25 2 258 1 130 1 299 1 132 3 
77 2 237 2 231 1 297 1 
256 1 336 1 258 1 130 1 110 1 132 1 
256 2 47 1 237 1 336 1 258 1 130 1 170 1 12 1 299 1 132 2 
210 1 
256 1 237 1 336 1 258 1 130 1 170 1 299 1 132 1 
256 3 47 1 237 1 25 1 336 1 258 1 130 1 170 1 12 1 299 1 132 3 
310 1 237 1 84 1 337 1 
237 1 170 1 

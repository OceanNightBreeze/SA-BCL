#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 307 (145,200) (145,200) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) 133 114 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) 133 270 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (53,214) 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) (6,234,258) 126 154 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (53,214) (53,214) 79 (161,204) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (53,214) (53,214) 79 (221,340) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (53,214) (53,214) (6,234,258) 133 298 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
278 2 299 2 147 1 173 3 306 1 280 1 339 3 111 1 175 2 69 1 125 1 318 1 91 1 
335 1 278 2 145 1 183 1 299 2 147 1 337 1 173 7 238 1 280 3 137 1 200 1 63 2 339 7 111 1 96 1 307 1 175 3 352 1 69 2 123 2 125 2 91 4 288 1 304 2 
183 1 306 1 137 1 63 2 111 1 307 1 352 1 69 3 71 1 91 6 335 1 145 1 278 2 299 2 147 1 173 9 337 1 238 1 280 4 200 1 339 9 96 2 175 5 123 2 125 2 318 1 288 1 304 2 
183 1 306 1 137 1 63 2 111 1 307 1 352 1 69 4 71 1 91 7 335 1 145 1 278 2 299 2 147 1 173 10 337 1 238 1 280 5 200 1 339 10 96 2 175 6 123 2 125 2 318 1 288 1 304 2 
183 1 306 1 137 1 63 2 111 1 307 1 352 1 69 2 91 4 335 1 145 1 278 2 299 2 147 1 173 7 337 1 238 1 280 3 200 1 339 7 96 1 175 4 123 2 125 2 318 1 288 1 304 2 
335 1 278 1 299 1 173 4 306 1 280 2 63 1 339 4 111 1 96 2 307 1 175 3 69 1 71 1 123 1 318 1 91 3 304 1 
322 1 278 1 299 1 109 1 173 2 306 1 137 1 339 2 63 1 111 1 175 1 300 1 352 1 125 1 318 1 304 1 
306 1 63 1 111 1 307 1 69 3 71 1 91 7 218 1 335 1 278 2 299 2 147 1 173 9 337 1 280 4 339 9 202 1 96 2 175 5 123 1 125 1 318 1 288 1 304 1 
306 1 63 1 111 1 307 1 69 3 71 1 91 7 218 1 335 1 278 2 299 2 147 1 173 9 337 1 280 4 339 9 202 1 96 2 175 5 123 1 125 1 318 1 288 1 304 1 
29 1 255 1 118 1 258 1 282 1 94 1 259 1 64 1 316 1 43 1 141 1 227 1 303 1 233 1 
225 1 
315 1 29 2 225 1 118 1 213 1 44 1 258 2 188 1 
181 1 29 5 30 1 134 1 118 2 135 1 213 2 258 5 188 1 4 1 190 2 315 1 225 1 9 1 99 2 205 1 83 1 24 1 26 2 
225 1 10 1 188 1 
225 1 59 2 80 1 
316 2 301 1 43 2 141 2 282 1 233 2 303 2 64 2 
160 1 34 1 3 1 64 2 139 2 70 2 272 1 42 1 271 1 274 1 43 3 141 2 233 3 296 1 168 1 169 1 297 1 336 1 77 1 199 1 47 1 282 1 49 1 79 1 120 2 149 1 313 1 97 2 152 1 316 2 342 1 301 1 22 1 204 1 344 2 303 2 129 1 
316 1 43 1 141 1 282 1 233 1 303 1 227 1 94 1 259 1 64 1 
6 1 53 1 43 1 234 1 233 1 303 1 14 1 94 1 214 1 
53 1 316 1 43 1 141 1 234 1 233 1 303 1 94 1 64 1 214 1 
29 1 118 1 213 1 258 1 249 1 
315 1 29 2 225 1 118 1 213 1 101 1 258 2 188 1 
29 1 213 1 258 1 
316 3 301 1 21 1 43 3 141 3 233 3 303 3 64 1 
316 1 43 1 141 1 233 1 303 1 94 1 259 1 
166 1 316 1 43 1 178 1 141 1 233 1 303 1 94 1 64 1 
133 1 94 1 64 1 214 1 114 1 53 1 316 2 21 1 43 2 178 1 82 1 141 2 303 2 233 2 234 1 
316 1 301 1 43 2 21 1 141 1 14 1 233 2 303 2 268 1 
270 1 53 1 133 1 316 1 43 1 21 1 141 1 82 1 234 1 233 1 303 1 94 1 214 1 
31 1 230 1 64 1 316 2 21 1 178 1 43 2 141 2 303 2 233 2 
160 1 77 1 47 1 79 1 313 1 97 1 139 1 70 1 342 1 301 1 43 1 204 1 233 1 168 1 169 1 
160 1 77 1 47 1 79 1 313 1 340 1 97 1 139 1 70 1 301 1 191 1 43 1 233 1 168 1 169 1 
58 2 105 1 31 2 185 1 230 2 3 1 265 1 41 1 88 1 271 1 272 2 297 2 171 1 199 1 312 1 49 1 120 4 149 1 176 1 152 1 262 1 228 1 343 1 344 2 
53 1 316 1 294 1 43 1 141 1 233 1 303 1 94 1 
64 1 166 1 316 1 301 2 43 2 178 1 141 1 303 2 233 2 
58 1 31 1 230 1 
160 1 77 1 47 1 79 1 313 1 97 1 165 1 139 1 70 1 342 1 301 1 43 1 204 1 233 1 168 1 169 1 
31 1 160 1 77 1 47 1 79 1 313 1 97 1 139 1 316 1 70 1 342 1 21 1 43 2 204 1 82 1 141 1 303 1 233 2 168 1 169 1 
301 1 10 1 
14 1 314 1 267 1 64 1 268 1 316 4 301 1 21 2 43 5 178 1 141 4 82 1 303 5 233 5 
316 2 294 1 43 2 141 2 233 2 303 2 94 1 259 1 
89 1 174 1 356 1 
89 1 142 1 174 1 
89 1 142 1 174 1 
89 1 142 1 174 1 
210 1 89 1 174 1 
98 1 89 2 78 1 75 1 174 2 25 1 
89 1 174 1 
89 1 174 1 
98 1 78 1 
98 1 78 1 
98 1 78 1 
89 1 174 1 356 1 
89 1 174 1 356 1 
345 2 305 2 29 2 195 2 86 1 1 1 231 1 258 2 174 2 232 1 65 1 284 2 308 2 52 3 225 1 89 2 208 1 25 1 354 1 
305 1 345 1 29 1 210 1 110 1 65 1 308 1 89 1 43 2 141 2 233 2 252 1 195 1 256 1 258 1 174 1 283 1 240 1 52 1 316 2 301 1 155 1 303 2 55 1 
341 2 109 1 123 1 63 2 122 1 
123 1 63 1 304 1 
109 1 63 1 304 1 
0 1 341 1 109 1 123 2 63 3 122 1 
182 1 341 1 109 1 123 1 63 2 122 1 
56 2 57 1 29 5 108 1 59 3 134 2 87 1 213 1 110 1 188 1 189 1 190 1 351 1 252 1 118 4 256 1 281 1 258 5 80 1 241 2 176 1 315 1 225 2 203 2 262 1 99 1 205 3 228 1 343 1 83 1 26 1 104 1 
56 6 57 1 29 9 184 1 59 9 134 6 245 1 87 3 213 6 187 1 249 5 188 1 4 1 190 2 351 2 309 1 252 4 237 5 118 7 258 9 239 1 80 3 241 6 176 3 315 1 225 5 262 3 99 2 205 8 228 3 343 3 83 1 130 1 26 2 104 2 
56 2 29 3 134 2 59 4 87 1 188 1 189 1 4 1 190 1 351 1 252 1 118 2 281 1 258 3 80 2 176 1 241 2 225 3 203 1 99 1 262 1 205 3 228 1 343 1 26 1 104 1 
56 4 29 4 184 1 59 7 134 4 245 1 87 2 187 1 188 1 4 1 189 1 190 1 351 1 252 2 118 3 281 1 258 4 80 3 241 4 176 2 225 4 203 2 99 1 262 2 205 5 228 2 343 2 26 1 104 1 
77 1 47 1 
321 1 77 3 74 2 47 1 360 1 313 1 
310 1 
77 1 74 1 10 1 
357 1 77 1 
77 1 47 1 313 1 
77 1 180 1 
297 4 211 1 291 1 312 2 265 3 36 1 120 7 40 1 176 1 260 2 272 3 167 1 275 1 276 1 228 1 333 1 362 1 209 1 
211 1 87 3 61 1 291 1 2 3 265 10 36 2 40 1 271 1 272 15 275 2 73 1 276 2 295 1 90 4 254 1 333 1 115 1 297 16 355 1 199 1 312 5 120 31 149 1 51 1 176 4 152 1 260 3 262 3 344 2 343 3 228 4 209 2 362 5 
211 1 291 1 265 4 36 1 271 2 272 4 275 1 276 1 254 1 333 1 236 1 297 5 199 2 312 3 120 9 149 2 176 1 152 2 243 1 260 2 228 1 344 4 209 1 362 1 
297 4 211 1 291 1 312 2 265 3 36 1 120 7 40 1 176 1 260 2 272 3 275 1 276 1 228 1 333 1 362 1 209 1 
297 4 211 1 291 1 312 2 265 3 36 1 120 7 40 1 176 1 260 2 272 3 275 1 276 1 228 1 333 1 362 1 209 1 
160 1 244 1 139 1 70 1 168 1 45 1 169 1 12 1 278 1 299 1 173 1 77 1 48 2 47 1 201 2 121 1 339 1 97 1 242 1 125 2 206 1 156 2 28 1 
0 1 160 1 109 1 63 2 111 1 139 1 70 1 217 1 251 1 168 1 76 1 278 1 299 1 173 1 48 1 201 1 339 1 150 1 97 1 123 1 125 1 81 1 207 1 156 1 320 1 304 1 
0 1 160 1 109 1 306 1 63 2 111 1 139 1 70 1 217 1 251 1 91 1 168 1 76 1 278 1 299 1 173 2 48 1 201 1 339 2 150 1 175 1 97 1 123 1 125 1 318 1 102 1 207 1 156 1 320 1 304 1 
0 1 160 1 109 1 306 1 63 2 139 1 70 1 217 1 72 1 91 2 168 1 76 1 278 1 299 1 173 3 48 1 201 1 339 3 150 1 175 1 97 1 242 1 123 1 125 1 318 1 81 1 207 1 156 1 320 1 304 1 
0 1 160 1 109 1 306 1 63 2 139 1 70 1 217 1 72 1 91 2 168 1 173 2 48 1 201 1 339 2 175 1 97 1 123 1 125 1 318 1 81 1 207 1 156 1 320 1 304 1 
23 1 
29 2 160 1 134 1 213 2 247 1 214 1 292 1 6 1 190 1 139 2 351 1 70 2 43 1 234 1 233 1 168 1 169 2 12 1 146 1 77 1 47 1 258 2 14 1 94 1 97 2 315 1 53 1 154 1 99 1 126 1 205 1 303 1 83 1 103 1 361 1 26 1 28 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 2 146 1 213 1 258 2 14 1 94 1 214 1 6 1 315 1 53 1 154 1 43 1 44 1 126 1 234 1 233 1 303 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 190 1 6 1 53 1 154 1 43 1 99 1 126 1 234 1 233 1 303 1 83 1 103 1 26 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 6 1 53 1 154 1 43 1 126 1 303 1 233 1 234 1 103 1 
29 1 146 1 258 1 14 1 94 1 214 1 190 1 6 1 53 1 154 1 43 1 99 1 126 1 234 1 233 1 303 1 83 1 103 1 26 1 
58 1 297 2 31 1 185 1 230 1 199 1 265 1 3 1 49 1 120 2 149 1 176 1 152 1 88 1 271 1 262 1 344 2 362 1 
58 1 105 1 31 1 185 1 230 1 199 1 312 1 265 1 3 1 49 1 120 2 149 1 152 1 271 1 272 2 344 2 343 1 228 1 
58 2 31 2 185 1 87 1 230 2 3 1 265 2 271 1 272 2 297 2 199 1 312 1 49 1 120 4 149 1 176 1 152 1 262 1 344 2 343 1 228 1 362 1 
58 1 297 2 31 1 230 1 172 1 199 1 265 1 3 1 49 1 120 2 149 1 176 1 152 1 88 1 271 1 262 1 344 2 362 1 
58 1 105 1 31 1 230 1 172 1 199 1 312 1 265 1 3 1 49 1 120 2 149 1 152 1 271 1 272 2 344 2 343 1 228 1 
58 2 31 2 87 1 230 2 3 1 265 2 271 1 272 2 297 2 172 1 199 1 312 1 49 1 120 4 149 1 176 1 152 1 262 1 344 2 343 1 228 1 362 1 
58 2 31 2 87 1 230 2 3 1 265 2 271 1 272 2 297 2 199 1 312 1 49 1 120 4 149 1 176 1 152 1 262 1 344 2 343 1 228 1 362 1 
160 1 3 1 139 1 70 1 271 1 42 1 272 1 43 1 296 1 233 1 168 1 169 1 297 1 77 1 47 1 199 1 79 1 49 1 120 2 313 1 149 1 97 1 152 1 342 1 301 1 22 1 204 1 344 2 
160 1 3 1 139 1 70 1 191 1 271 1 42 1 272 1 192 1 43 1 233 1 168 1 169 1 297 1 77 1 47 1 199 1 79 1 49 1 120 2 313 1 149 1 340 1 97 1 152 1 301 1 22 1 344 2 
58 2 31 2 87 1 230 2 3 1 265 2 271 1 272 2 297 2 199 1 312 1 49 1 120 4 149 1 176 1 285 1 152 1 262 1 344 2 343 1 228 1 362 1 
58 2 31 2 160 1 107 1 230 2 87 1 265 2 3 1 139 1 70 1 272 2 271 1 43 1 296 1 233 1 168 1 297 2 77 1 47 1 199 1 312 1 79 1 49 1 120 4 313 1 149 1 176 1 97 1 152 1 342 1 262 1 204 1 228 1 343 1 102 1 344 2 362 1 
58 1 31 1 87 1 230 1 265 1 3 1 35 1 64 1 272 1 271 1 43 1 141 1 233 1 297 2 199 1 49 1 120 3 149 1 285 1 176 1 152 1 316 1 178 1 262 1 228 1 343 1 344 2 303 1 362 1 
160 2 185 1 3 2 66 1 139 8 68 1 70 7 271 2 42 1 272 1 43 1 274 2 141 1 233 1 168 2 169 2 297 1 12 1 77 3 172 1 148 1 199 2 47 2 49 2 120 2 149 2 97 8 177 1 316 1 152 2 317 1 21 1 81 1 22 1 102 1 303 1 344 4 287 1 28 1 
58 1 31 1 230 1 87 1 265 1 3 1 64 1 271 1 272 2 43 1 141 1 233 1 297 1 46 1 199 1 312 1 49 1 120 3 149 1 285 1 176 1 152 1 316 1 178 1 262 1 344 2 303 1 343 1 228 1 
58 1 297 3 31 1 185 1 211 1 230 1 199 1 291 1 312 2 265 2 3 1 49 1 120 6 36 1 149 1 176 1 152 1 260 1 301 2 272 3 271 1 275 1 10 1 228 1 344 2 333 1 
58 11 31 11 87 2 230 4 2 3 265 2 3 1 140 1 42 1 272 6 271 2 90 3 295 1 297 8 197 1 199 2 312 1 49 2 120 14 149 2 51 1 285 1 176 2 152 2 301 1 262 2 22 1 179 1 344 4 343 1 228 1 128 1 362 1 
160 1 230 1 3 1 139 1 165 1 70 1 271 1 42 1 272 1 43 2 141 1 233 2 168 1 169 1 220 1 297 1 77 1 47 1 199 1 79 1 49 1 120 2 313 1 149 1 223 1 97 1 285 1 152 1 316 1 342 1 301 1 124 1 21 1 22 1 204 1 82 1 303 1 344 2 
323 2 58 7 107 2 160 2 211 1 291 1 3 3 70 3 296 2 333 1 168 2 169 1 297 10 170 2 257 2 77 2 79 2 120 20 176 3 260 1 342 2 301 2 21 1 262 2 81 1 22 1 82 1 228 3 344 6 303 1 343 2 31 7 230 7 87 2 265 8 36 1 37 1 139 3 272 10 42 1 271 3 275 1 43 3 141 1 233 3 199 3 47 2 312 4 49 3 149 3 313 2 97 3 285 1 316 1 152 3 204 2 319 1 157 1 362 4 
87 3 264 2 2 1 349 1 265 6 5 1 353 2 271 2 272 10 90 2 295 1 253 1 236 1 297 9 117 1 199 2 312 3 120 19 149 2 51 1 176 3 151 1 152 2 261 1 262 3 344 4 343 3 228 3 27 1 362 3 
106 1 87 3 264 4 33 1 2 2 349 1 265 4 138 1 5 1 353 1 272 12 271 3 90 2 254 2 253 2 311 1 236 1 297 14 199 3 312 2 120 26 149 3 50 1 51 2 176 3 358 1 151 2 152 3 262 3 228 2 344 6 343 2 362 2 27 1 
106 1 211 1 291 1 2 3 5 1 295 1 253 1 254 1 333 1 297 20 117 1 120 41 176 5 18 1 260 1 262 4 228 5 343 4 344 6 27 1 87 4 264 4 33 1 265 8 349 1 36 1 138 1 353 1 272 21 271 3 275 1 90 4 311 1 236 1 199 3 312 4 149 3 50 1 51 3 358 1 152 3 151 2 362 4 
106 1 211 1 87 4 264 4 291 1 33 1 2 3 349 1 265 7 36 1 138 1 5 1 353 1 271 4 272 18 275 1 90 4 295 1 254 2 253 1 333 1 311 1 236 1 297 20 117 1 199 4 312 4 120 38 149 4 50 1 51 3 18 1 176 5 358 1 151 2 152 4 260 1 262 4 344 8 343 3 228 4 27 1 362 3 
106 1 211 1 87 7 264 4 291 1 33 1 2 4 349 1 265 14 36 1 138 1 5 1 353 1 271 2 272 25 275 1 90 4 295 2 254 1 253 1 333 1 311 1 236 1 297 27 199 2 312 7 120 52 149 2 50 1 51 2 176 8 358 1 151 1 152 2 260 1 262 7 179 2 344 4 343 7 228 8 27 1 362 7 
345 1 305 1 29 1 195 1 1 1 231 1 258 1 174 1 232 1 65 1 284 1 308 1 52 2 225 1 89 1 208 1 25 1 354 1 
345 1 305 1 29 1 195 1 1 1 231 1 258 1 174 1 232 1 65 1 284 1 308 1 52 2 225 1 89 1 208 1 25 1 354 1 
345 1 305 1 29 1 195 1 1 1 231 1 258 1 174 1 232 1 65 1 284 1 308 1 52 2 225 1 89 1 208 1 25 1 354 1 
194 1 75 1 356 1 
194 1 75 1 356 1 
212 1 142 1 
212 1 75 1 142 1 
55 1 240 1 
305 1 345 1 29 1 210 1 248 1 110 1 308 1 89 1 43 2 141 2 233 2 252 1 195 1 118 1 256 1 258 1 174 1 283 1 284 1 240 1 52 1 316 2 301 1 155 1 208 1 303 2 55 1 
305 1 345 1 308 1 195 1 1 1 231 1 89 1 348 1 174 1 25 1 
210 1 155 1 
305 1 345 1 308 1 195 1 286 1 196 1 89 1 174 1 11 1 
194 1 356 1 
212 1 75 1 142 1 
160 1 347 1 32 1 3 1 139 2 67 1 70 2 271 1 42 1 272 1 43 2 274 2 233 2 168 1 297 1 77 1 47 1 199 1 49 1 120 2 149 1 97 2 285 1 152 1 317 1 22 1 302 1 303 2 344 2 287 1 159 1 
12 1 160 1 244 1 77 1 47 1 48 1 15 1 97 1 139 1 70 1 193 1 168 1 169 1 28 1 
0 1 160 1 109 1 48 1 63 2 327 1 97 1 139 1 70 1 123 1 217 1 81 1 193 1 158 1 320 1 168 1 304 1 76 1 
0 1 160 1 109 1 48 1 63 2 327 1 97 2 139 2 70 2 123 1 217 1 81 1 193 1 102 1 168 1 158 1 320 1 304 1 76 1 
0 1 160 1 109 1 48 1 63 2 327 1 97 1 113 1 139 1 70 1 123 1 217 1 81 1 320 1 168 1 304 1 76 1 
325 1 
181 1 134 1 188 1 190 1 225 1 9 1 99 1 205 1 83 1 26 1 
323 1 56 5 134 5 59 10 87 2 80 5 176 2 241 5 20 1 19 2 225 5 262 2 205 5 343 2 228 2 
315 1 29 1 225 1 213 1 258 1 188 1 
29 3 160 1 134 2 213 4 247 1 4 1 292 1 190 2 139 4 351 2 70 4 144 1 168 1 169 2 92 2 12 1 77 1 198 1 47 1 258 3 16 1 97 4 315 2 99 2 205 2 83 1 361 2 26 2 28 1 
181 1 225 1 134 1 9 1 10 1 205 1 188 1 
132 1 29 1 134 1 59 1 213 1 188 1 190 1 143 1 258 1 80 1 315 1 225 2 99 1 205 1 83 1 289 1 26 1 
323 2 56 6 160 4 161 2 59 12 213 5 163 1 112 2 70 3 9 1 74 2 168 3 169 1 77 10 258 5 16 1 80 6 176 2 19 2 20 2 225 8 262 2 83 4 343 2 228 2 229 2 180 2 26 4 181 1 29 5 134 8 87 2 186 2 346 1 188 2 38 1 39 2 350 2 190 4 351 2 139 3 92 1 47 3 313 3 357 3 97 3 315 3 241 6 153 2 99 4 205 9 360 1 102 1 361 1 
56 5 29 1 59 6 134 5 87 2 213 1 33 1 2 1 266 1 188 2 138 1 190 2 351 1 7 1 90 1 311 1 258 1 50 1 51 1 80 3 315 1 241 5 176 2 20 1 19 2 358 1 225 5 99 2 262 2 205 8 83 2 343 2 228 2 361 1 26 2 
29 1 134 2 36 1 64 1 269 1 190 1 43 1 275 1 141 1 233 1 277 1 333 1 255 1 258 1 282 1 94 1 259 1 176 2 20 1 19 2 316 1 99 1 205 2 83 1 228 1 227 1 303 1 26 1 
160 1 3 1 64 2 139 1 70 1 272 1 42 1 271 1 43 3 141 2 233 3 296 1 168 1 169 1 336 1 77 1 199 1 47 1 282 1 79 1 49 1 120 1 149 1 313 1 97 1 316 2 152 1 342 1 301 1 204 1 344 2 303 2 
56 2 59 4 134 2 188 2 80 2 190 1 241 2 351 1 225 4 260 1 99 1 205 1 83 1 361 1 26 1 
305 1 195 1 54 1 
305 1 195 1 93 1 
305 1 195 1 93 1 
305 1 195 1 93 1 
305 1 195 1 
89 1 174 1 
305 1 263 1 195 1 231 1 240 1 
305 1 195 1 54 1 
305 1 195 1 54 1 
236 1 297 5 199 1 312 3 265 5 36 2 120 10 149 1 269 1 176 2 152 1 271 1 272 5 275 2 344 2 228 2 333 1 362 2 
236 1 297 2 199 1 265 1 120 2 149 1 176 1 152 1 271 1 262 1 344 2 362 1 
236 1 297 2 87 1 199 1 312 1 265 2 120 4 149 1 176 1 152 1 272 2 271 1 262 1 228 1 343 1 344 2 362 1 
236 1 297 1 117 1 199 3 312 1 265 2 62 1 120 3 36 1 149 3 152 3 272 2 271 3 275 1 344 6 254 1 362 1 
211 1 87 3 61 1 291 1 2 3 265 12 36 3 62 1 272 18 271 5 275 3 73 1 90 4 295 1 254 2 333 2 219 1 236 1 297 16 117 1 355 1 199 5 312 7 120 34 149 5 51 1 176 5 152 5 260 1 262 3 344 10 343 3 228 5 362 5 
211 1 291 1 2 1 265 2 36 1 272 4 271 1 275 1 90 1 333 1 236 1 297 4 199 1 312 2 120 8 149 1 51 1 176 1 358 1 152 1 260 1 228 1 344 2 
211 1 87 1 291 1 2 1 265 3 36 1 272 5 271 2 275 1 90 2 295 1 333 1 219 1 236 1 297 6 199 2 312 2 120 11 149 2 51 1 176 2 358 1 152 2 260 1 262 1 228 1 344 4 362 1 
211 1 87 2 291 1 33 1 2 1 265 4 36 1 138 1 272 10 271 3 275 1 90 1 254 1 333 1 219 1 311 1 236 1 297 9 199 3 312 3 120 19 149 3 50 1 51 1 176 3 358 1 152 3 260 1 262 2 344 6 343 2 228 3 362 1 
211 1 87 2 291 1 33 1 2 1 265 5 36 1 138 1 272 7 271 3 275 1 90 1 254 1 333 1 219 1 311 1 236 1 297 10 199 3 312 3 120 17 149 3 50 1 51 1 176 3 358 1 152 3 260 1 262 2 344 6 343 1 228 2 362 2 
211 1 291 1 2 1 265 2 36 1 272 4 271 1 275 1 90 1 333 1 236 1 297 4 199 1 312 2 120 8 149 1 51 1 176 1 358 1 152 1 260 1 228 1 344 2 
87 2 33 1 2 1 265 2 138 1 272 6 271 1 90 1 311 1 236 1 297 6 199 1 312 1 120 12 149 1 50 1 51 1 176 2 358 1 152 1 262 2 344 2 343 2 228 2 362 1 
211 1 87 2 291 1 33 1 2 1 265 5 36 1 138 1 272 8 271 4 275 1 90 1 254 2 333 1 219 1 311 1 236 1 297 10 199 4 312 3 120 18 149 4 50 1 51 1 176 3 358 1 152 4 260 1 262 2 344 8 343 1 228 2 362 2 
87 3 33 1 2 1 265 6 138 1 272 7 271 4 90 1 254 2 311 1 236 1 297 9 117 1 199 4 312 3 120 16 149 4 50 1 51 1 176 3 358 1 152 4 262 3 344 8 343 2 228 2 362 3 
297 3 211 1 291 2 312 3 265 6 120 7 36 3 176 1 272 4 275 3 228 1 333 1 362 3 
211 1 87 2 291 1 33 1 2 1 265 4 36 1 138 1 272 8 271 4 275 1 90 1 254 2 333 1 311 1 236 1 297 10 117 1 199 4 312 3 120 18 149 4 50 1 51 1 176 3 358 1 152 4 260 1 262 2 344 8 343 1 228 2 362 1 
297 4 211 1 199 2 291 1 312 2 265 3 120 8 36 1 149 2 176 1 152 2 260 1 272 4 271 2 275 1 228 1 344 4 254 1 333 1 362 1 
297 3 211 1 291 1 312 2 265 2 36 1 120 6 176 1 260 1 272 3 275 1 10 1 228 1 333 1 
297 2 87 1 199 1 312 1 265 2 120 4 149 1 176 1 152 1 272 2 271 1 262 1 228 1 343 1 344 2 219 1 362 1 
297 3 87 1 312 1 2 1 265 2 120 7 51 1 176 1 272 4 262 1 90 2 295 1 228 1 343 1 362 1 
211 1 87 2 291 1 2 2 265 9 36 2 62 1 272 12 271 2 275 2 295 1 90 2 254 2 333 1 297 11 197 1 199 2 312 5 120 23 149 2 176 3 152 2 260 1 262 2 343 2 228 3 179 1 344 4 362 4 
272 1 90 1 120 1 
297 1 2 1 120 1 
323 1 297 3 87 1 199 1 312 2 265 3 120 6 149 1 176 1 152 1 271 1 272 3 262 1 344 2 343 1 228 1 219 1 362 1 
87 2 33 1 2 1 265 2 138 1 272 6 271 1 90 1 311 1 236 1 297 6 199 1 312 1 120 12 149 1 50 1 51 1 176 2 358 1 152 1 262 2 344 2 343 2 228 2 362 1 
297 3 312 1 265 2 120 6 36 1 176 1 272 3 275 1 228 1 333 1 362 1 
297 1 211 1 291 1 199 1 312 1 265 2 36 1 62 1 120 3 149 1 152 1 272 2 271 1 275 1 344 2 254 1 362 1 
326 1 301 1 43 1 233 1 303 1 14 1 268 1 
60 1 13 1 14 1 324 1 268 1 326 1 293 1 301 1 43 1 303 1 233 1 235 1 
334 1 97 4 12 1 139 4 160 1 70 4 8 1 77 1 47 1 102 1 168 1 28 1 169 1 
92 1 160 2 279 1 162 1 77 1 47 1 119 1 313 1 95 1 97 2 139 2 70 2 157 1 168 1 
97 1 139 1 160 1 109 1 70 1 217 1 63 1 168 1 304 1 169 1 
160 1 77 1 47 1 97 2 139 2 70 2 317 1 81 1 102 1 159 1 168 1 
92 1 12 1 160 2 77 3 148 1 47 2 97 5 66 1 139 5 70 4 8 1 317 1 102 1 168 2 28 1 169 1 
92 1 12 1 160 2 77 3 148 1 47 2 97 5 139 5 70 4 359 1 8 1 317 1 102 1 168 2 28 1 169 1 
97 1 12 1 139 1 160 1 70 1 77 1 47 1 10 1 168 1 28 1 169 1 
160 1 77 1 47 1 79 1 313 1 97 1 139 1 316 1 70 1 301 1 21 1 43 2 141 1 204 1 303 1 233 2 168 1 169 1 
92 1 160 1 77 1 47 1 79 1 313 1 94 1 214 1 97 1 139 1 53 1 316 1 70 1 21 1 43 1 141 1 204 1 303 1 233 1 168 1 
92 1 160 1 77 1 47 1 79 1 313 1 94 1 214 1 340 1 97 1 139 1 53 1 316 1 70 1 21 1 43 1 141 1 303 1 233 1 168 1 
334 1 92 1 221 1 29 2 160 1 77 4 213 1 47 1 258 2 188 1 313 1 350 1 97 3 357 1 139 3 225 1 70 3 74 1 127 1 229 1 180 1 168 1 169 1 
334 1 92 1 29 2 160 1 161 1 77 4 213 1 47 1 258 2 188 1 313 1 350 1 97 3 357 1 139 3 225 1 70 3 74 1 229 1 180 1 168 1 169 1 
97 1 139 1 160 1 68 1 70 1 168 1 
116 1 160 3 279 1 162 1 77 3 148 1 47 2 313 1 66 1 97 7 139 7 68 1 177 1 70 6 317 1 274 1 81 1 360 1 102 1 168 2 169 2 
58 1 31 1 160 1 107 1 211 1 230 1 291 1 265 2 3 2 36 1 139 1 70 1 272 3 271 2 275 1 43 2 141 1 233 2 296 1 333 1 168 1 297 3 77 1 257 1 47 1 199 2 312 2 79 1 49 2 120 6 313 1 149 2 176 1 285 1 97 1 152 2 316 1 260 1 342 1 301 2 21 1 302 1 204 1 228 1 303 1 344 4 102 1 
181 1 29 3 134 1 161 1 186 1 213 2 188 1 112 1 350 1 190 2 139 1 70 1 9 1 74 1 169 1 118 1 77 2 258 3 16 1 97 1 357 1 315 1 225 1 153 1 99 2 205 1 83 2 26 2 
160 2 77 2 163 1 47 1 313 1 97 2 139 2 68 1 70 2 74 1 360 1 102 1 168 1 
160 1 77 1 47 1 79 1 313 1 340 1 97 1 139 1 316 1 70 1 301 1 21 1 43 2 141 1 303 1 233 2 168 1 169 1 
92 1 116 1 160 2 279 1 162 1 77 1 47 1 313 1 97 1 139 1 70 1 360 1 168 1 
131 1 32 1 347 1 67 1 215 1 329 1 43 1 303 1 233 1 
328 1 131 1 298 1 
131 1 216 1 329 1 215 1 301 1 
131 1 29 1 298 1 133 1 118 1 338 1 258 1 94 1 214 1 328 1 53 1 215 1 329 1 216 1 234 1 
175 1 278 1 299 1 173 1 318 1 306 1 339 1 111 1 
278 1 299 1 173 4 306 2 280 1 137 1 339 4 17 1 175 3 69 1 330 1 318 2 331 1 91 2 
175 1 278 1 299 1 246 1 173 2 318 1 306 1 91 1 218 1 339 2 111 1 164 1 
85 1 278 1 299 1 173 3 306 1 137 2 339 3 17 1 111 1 175 1 330 2 318 1 
175 2 250 1 224 1 84 2 
278 1 299 1 226 1 173 1 339 1 111 1 
175 1 278 1 299 1 173 2 318 1 306 1 91 1 339 2 288 1 111 1 
136 1 
175 1 278 1 299 1 173 1 318 1 306 1 339 1 111 1 
175 1 318 1 306 1 10 1 
175 1 278 1 299 1 173 1 318 1 306 1 339 1 
125 1 156 1 339 1 
175 1 278 1 299 1 330 1 173 3 318 1 306 1 100 1 137 2 339 3 17 1 111 1 
175 1 278 1 299 1 173 2 318 1 306 1 91 1 339 2 96 1 
175 1 335 1 278 1 299 1 123 1 173 1 280 1 63 1 339 1 111 1 304 1 
175 1 278 1 299 1 173 1 306 1 339 1 111 1 
278 1 299 1 173 1 318 1 306 2 339 1 111 1 
278 2 299 2 173 2 222 1 306 1 339 2 111 1 175 1 273 1 332 1 
278 1 299 1 173 3 337 1 306 1 280 1 339 3 111 1 175 2 69 1 318 1 91 2 288 1 
290 1 0 1 278 1 109 1 299 1 173 2 306 1 63 2 339 2 111 1 175 1 123 1 318 1 91 1 304 1 
278 2 299 2 173 4 306 1 280 1 339 4 111 1 96 1 175 2 69 1 71 1 318 1 91 2 
175 1 278 1 299 1 173 3 318 1 306 1 137 1 91 1 339 3 288 1 111 1 
175 1 69 1 331 1 280 1 
175 1 306 1 

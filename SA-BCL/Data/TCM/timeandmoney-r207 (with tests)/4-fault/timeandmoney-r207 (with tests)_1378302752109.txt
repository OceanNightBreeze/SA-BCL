#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (42,139,218,280) (42,139,218,280) (18,54,337,377) 101 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (42,139,218,280) (42,139,218,280) (18,54,337,377) 101 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (42,139,218,280) (42,139,218,280) (18,54,337,377) (18,54,337,377) (18,54,337,377) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 1 239 1 289 1 218 6 354 1 355 2 27 4 34 1 153 1 184 3 154 1 368 1 370 2 68 1 275 1 85 1 42 9 345 9 346 1 280 2 139 2 259 5 377 1 20 1 193 2 118 2 262 1 53 2 
265 1 239 1 289 1 218 6 354 1 355 2 27 4 34 1 153 1 184 3 154 1 368 1 370 2 68 1 275 1 85 1 42 9 345 9 346 1 280 2 139 2 259 5 377 1 20 1 193 2 118 2 262 1 53 2 
265 1 239 1 289 1 218 7 354 1 355 2 27 5 34 1 153 1 184 4 154 1 368 1 370 2 68 1 275 1 85 1 42 10 345 10 346 1 280 2 139 2 259 6 377 1 20 1 193 2 118 2 262 1 53 2 
265 1 239 1 289 1 218 4 354 1 355 2 27 3 34 1 184 2 154 1 368 1 370 2 68 1 275 1 85 1 42 7 345 7 346 1 280 2 139 2 259 4 377 1 20 1 193 2 118 2 262 1 53 1 
265 1 289 1 42 4 218 3 355 1 27 2 345 4 280 1 153 1 139 1 259 3 377 1 184 1 154 1 118 1 193 1 368 1 53 2 
275 1 24 1 289 1 42 2 355 1 335 1 345 2 280 1 259 1 139 1 20 1 154 1 118 1 368 1 65 1 370 1 
85 1 289 1 42 3 218 1 27 1 345 3 280 2 139 2 259 2 184 1 154 1 368 1 370 1 
101 1 345 1 18 1 280 1 139 1 289 1 42 2 218 1 
101 1 345 1 18 1 280 1 139 1 289 1 42 2 218 1 
343 1 188 1 87 1 
321 1 185 2 87 1 
243 2 362 2 223 2 208 1 334 1 26 2 159 2 351 2 
307 2 306 1 56 1 57 1 23 1 268 1 59 1 219 1 334 1 313 1 26 3 199 1 80 1 243 3 362 2 223 2 297 1 159 2 317 1 110 1 318 1 319 1 208 1 252 1 72 1 43 1 227 1 136 2 344 1 213 1 49 1 115 2 215 2 260 2 351 2 176 1 96 1 
151 1 243 1 221 1 362 1 223 1 208 1 253 1 26 1 159 1 351 1 
274 1 196 1 299 1 147 1 253 1 26 1 87 1 303 1 166 1 343 1 243 1 223 1 84 1 62 1 
274 1 196 2 299 2 147 1 253 1 26 1 87 1 303 1 166 1 343 1 243 1 362 1 223 1 351 1 159 1 
196 1 299 1 322 1 37 1 190 1 
343 1 168 1 196 2 299 2 140 1 37 1 87 1 190 1 
196 1 299 1 190 1 
196 1 299 1 208 1 253 1 26 1 151 1 293 1 221 1 243 1 362 1 223 1 37 1 351 1 159 1 
87 1 
39 1 343 1 168 1 196 2 299 2 37 1 87 1 190 1 
107 2 196 5 161 1 299 5 197 1 371 1 180 1 210 2 333 1 212 1 254 1 87 1 229 1 190 2 343 1 168 1 167 1 37 2 338 2 
188 1 334 1 
285 1 26 2 334 2 358 1 243 2 362 1 223 2 351 1 159 1 
124 1 324 1 216 1 
319 1 268 1 59 1 219 1 334 1 26 1 136 1 199 1 80 1 243 1 215 1 260 1 297 1 96 1 95 1 317 1 
268 1 319 1 11 1 59 1 219 1 26 2 136 1 80 1 74 1 199 1 243 2 362 1 215 1 260 1 223 1 297 1 159 1 216 1 96 1 317 1 
285 1 11 2 207 1 26 5 334 1 74 1 48 1 243 5 362 4 223 5 84 1 284 1 159 4 351 1 
151 1 243 2 214 1 362 2 223 2 253 1 26 2 159 2 
243 3 362 3 11 1 223 3 351 1 334 1 26 3 159 3 
151 1 243 1 362 1 223 1 253 1 26 1 159 1 
358 1 285 1 243 1 362 1 223 1 253 1 26 1 159 1 351 1 
307 1 306 1 285 1 196 1 23 1 268 1 58 1 147 1 59 1 219 1 334 1 313 1 26 4 80 1 199 1 243 4 362 3 297 1 223 3 158 1 159 3 317 1 274 1 299 1 319 1 11 1 208 1 252 1 72 1 253 1 227 1 303 1 166 1 136 1 74 1 344 1 213 1 49 1 115 2 215 1 260 1 351 2 176 1 96 1 
243 2 362 1 11 1 207 1 223 2 84 1 334 1 26 2 159 1 
285 1 196 1 274 1 299 1 11 2 147 1 253 1 26 3 87 1 166 1 303 1 74 1 243 3 362 3 201 1 223 3 351 1 159 3 158 1 
285 1 243 2 362 2 11 1 223 2 324 1 26 2 159 2 351 1 216 1 
319 1 268 1 59 1 219 1 334 1 26 1 136 1 199 1 80 1 243 1 215 1 260 1 297 1 317 1 96 1 
8 1 319 1 268 1 219 1 3 1 334 1 26 1 136 1 199 1 80 1 243 1 215 1 260 1 317 1 96 1 
306 1 307 4 267 1 23 1 238 1 124 2 313 1 292 1 294 1 315 1 40 1 250 1 110 2 320 1 252 1 72 2 324 2 213 1 49 1 115 2 141 1 174 1 22 1 216 2 
243 1 214 1 362 1 223 1 253 1 26 1 159 1 303 1 
125 1 278 1 
125 1 278 1 
106 1 194 1 
106 1 194 1 
106 1 194 1 
109 1 125 1 278 1 
50 1 125 1 278 1 
165 1 64 1 106 1 125 2 194 1 278 2 
109 1 125 1 278 1 
109 1 125 1 278 1 
248 1 125 1 278 1 
248 1 125 1 278 1 
248 1 125 1 278 1 
196 1 0 1 308 1 1 1 125 1 334 1 26 2 60 1 243 2 61 1 362 2 223 2 159 2 249 1 132 1 299 1 134 1 10 1 70 1 71 1 209 1 278 1 50 1 177 1 
196 2 123 1 125 2 26 1 28 1 32 1 151 1 243 1 293 1 221 1 362 1 83 1 223 1 249 2 159 1 132 2 298 1 299 2 300 1 70 2 208 1 209 1 71 2 253 1 278 2 73 1 351 1 177 2 
355 1 118 1 193 1 
355 1 118 1 65 1 
355 3 105 1 193 2 77 1 7 1 65 1 
355 2 130 1 193 1 77 1 7 1 65 1 
355 2 193 1 77 2 7 1 65 1 
196 5 0 1 267 1 1 1 197 1 5 1 185 3 366 1 6 2 338 1 37 4 340 1 40 1 107 1 163 1 299 5 134 1 321 1 276 2 210 1 212 3 229 2 190 1 257 1 87 2 168 1 343 1 258 1 51 2 141 1 22 1 236 1 
0 4 196 9 267 3 197 1 180 1 2 1 296 1 5 2 185 9 37 7 338 2 157 1 38 1 40 3 107 2 299 9 164 1 321 3 322 5 189 1 276 6 210 2 212 8 229 6 190 6 87 5 257 1 343 1 168 1 258 3 51 6 76 5 141 3 22 3 236 2 
196 3 0 1 267 1 180 1 5 1 366 1 185 4 6 1 37 2 338 1 107 1 40 1 163 1 299 3 321 2 210 1 276 2 212 3 87 3 229 2 343 1 258 1 51 2 141 1 22 1 236 1 
196 4 0 2 267 2 180 1 2 1 5 1 185 7 366 1 6 2 338 1 37 3 157 1 107 1 40 2 299 4 163 1 321 3 189 1 276 4 210 1 212 5 87 4 229 4 343 1 258 2 51 4 141 2 22 2 236 1 
188 1 376 1 96 1 
246 1 96 1 
350 1 
268 1 319 1 96 1 
233 1 96 1 
268 1 96 1 
268 1 319 1 376 2 173 1 21 1 96 3 
40 1 237 1 307 7 250 2 267 1 110 4 323 1 72 3 30 1 222 1 336 1 169 1 174 3 156 1 63 1 175 1 263 2 
40 1 237 1 307 7 250 2 267 1 110 4 323 1 72 3 30 1 222 1 336 1 169 1 174 3 156 1 63 1 175 1 263 2 
40 1 237 1 307 7 250 2 267 1 110 4 323 1 72 3 30 1 222 1 336 1 169 1 4 1 174 3 156 1 63 1 175 1 263 2 
331 1 307 11 237 1 23 1 267 1 352 1 99 1 313 1 30 1 336 1 222 1 40 1 250 2 110 5 323 2 252 1 342 1 72 6 255 2 45 1 137 1 258 1 213 1 115 2 169 2 328 1 141 1 174 4 22 1 263 1 
121 1 307 9 237 1 267 1 23 2 313 2 30 1 222 1 156 1 63 1 40 1 250 3 110 5 323 1 252 2 72 4 137 1 213 2 115 4 169 1 91 1 174 4 263 2 175 1 
145 1 289 1 218 1 149 1 219 1 355 2 103 1 105 1 154 1 247 1 368 1 225 1 65 1 370 1 317 1 69 1 12 1 42 2 111 1 136 1 345 2 280 1 259 1 260 1 215 1 139 1 118 1 193 1 349 1 119 1 
218 2 149 1 219 1 182 1 355 2 103 1 105 1 152 1 154 1 247 1 368 1 226 1 65 1 370 1 317 1 69 1 12 1 42 3 111 1 136 1 345 3 280 1 259 1 260 1 215 1 139 1 118 1 193 1 349 1 119 1 
218 2 149 1 219 1 182 1 355 2 103 1 105 1 152 1 154 1 247 1 368 1 65 1 370 1 317 1 69 1 12 1 42 2 136 1 345 2 259 1 260 1 215 1 193 1 118 1 349 1 
9 1 268 1 42 1 219 1 136 1 199 1 103 2 345 1 82 1 280 1 375 1 139 1 215 1 260 1 270 1 271 1 329 1 247 2 226 1 349 2 317 1 96 1 370 2 
145 1 289 1 149 1 219 1 182 1 355 2 103 1 105 1 247 1 65 1 370 1 317 1 69 1 12 1 42 1 111 1 136 1 345 1 280 1 260 1 215 1 139 1 118 1 193 1 349 1 119 1 
88 1 
195 1 196 5 197 1 147 1 199 2 243 1 104 1 202 2 204 1 62 1 338 1 107 1 299 5 162 1 210 1 13 1 253 1 212 2 303 1 166 1 343 1 168 3 171 2 215 2 260 2 264 2 268 1 309 1 219 1 312 2 26 1 356 1 29 1 82 1 223 1 270 1 185 2 186 2 84 1 369 1 317 1 274 1 321 2 228 1 87 2 229 2 190 6 136 2 327 1 231 1 92 2 142 4 143 2 236 1 96 1 
196 3 147 1 309 1 26 1 356 1 29 1 243 1 223 1 204 1 84 1 62 1 39 1 274 1 299 3 13 1 253 1 303 1 166 1 190 2 168 1 171 1 142 2 
196 3 147 1 309 1 26 1 312 1 356 1 29 1 243 1 223 1 204 1 84 1 62 1 39 1 274 1 299 3 13 1 253 1 190 1 303 1 166 1 87 1 343 1 168 1 142 3 
196 3 147 1 309 1 26 1 312 1 356 1 29 1 243 1 223 1 204 1 84 1 62 1 39 1 274 1 299 3 13 1 253 1 303 1 166 1 190 2 87 1 168 1 343 1 171 1 92 1 142 3 
196 5 197 1 147 1 243 1 202 2 204 1 62 1 338 1 107 1 299 5 162 1 210 1 13 1 253 1 212 1 166 1 303 1 168 3 343 5 171 4 264 2 309 1 26 1 312 4 356 1 29 1 223 1 364 1 129 1 186 2 84 1 39 1 274 1 321 2 46 1 190 7 87 5 229 1 231 1 281 1 92 4 142 6 234 1 143 2 
196 4 197 1 147 1 243 1 202 2 204 1 62 1 338 1 107 1 162 1 299 4 210 1 13 1 253 1 212 1 166 1 303 1 168 2 343 1 171 2 264 2 309 1 26 1 312 2 356 1 29 1 223 1 186 2 185 2 84 1 369 1 274 1 321 2 229 1 190 4 87 2 231 1 92 2 142 4 143 2 
196 4 197 1 147 1 309 1 312 2 26 1 356 1 29 1 243 1 202 2 223 1 364 1 186 2 204 1 84 1 62 1 338 1 107 1 274 1 162 1 299 4 321 2 210 1 13 1 253 1 212 1 46 1 87 1 190 4 229 1 303 1 166 1 343 1 168 2 231 1 171 2 92 2 142 4 234 1 143 2 264 2 
196 4 197 1 147 1 309 1 312 2 26 1 356 1 29 1 243 1 202 2 223 1 364 1 186 2 204 1 84 1 62 1 338 1 107 1 274 1 162 1 299 4 321 2 210 1 13 1 253 1 212 1 46 1 87 1 190 4 229 1 303 1 166 1 343 1 168 2 231 1 171 2 92 2 142 4 234 1 143 2 264 2 
196 4 197 1 147 1 309 1 181 1 312 2 26 1 356 1 29 1 243 1 202 2 223 1 185 2 204 1 84 1 62 1 338 1 107 1 160 1 274 1 299 4 206 1 210 1 13 1 253 1 212 1 87 1 190 4 229 1 303 1 166 1 16 2 343 1 168 2 19 2 231 1 171 2 92 2 142 4 234 1 264 2 
196 4 197 1 147 1 309 1 26 1 312 3 356 1 29 1 243 1 202 2 364 1 223 1 129 1 186 2 204 1 84 1 62 1 338 1 107 1 274 1 162 1 299 4 321 2 210 1 13 1 253 1 212 1 46 1 87 1 229 1 303 1 166 1 190 5 343 1 168 2 231 1 171 3 92 3 142 5 234 1 143 2 264 2 
196 4 197 1 147 1 309 1 26 1 312 3 356 1 29 1 243 1 202 2 364 1 223 1 129 1 186 2 204 1 84 1 62 1 338 1 107 1 274 1 162 1 299 4 321 2 210 1 13 1 253 1 212 1 46 1 87 1 229 1 303 1 166 1 190 5 343 1 168 2 231 1 171 3 92 3 142 5 234 1 143 2 264 2 
196 4 197 1 147 1 243 1 202 2 204 1 62 1 338 1 107 1 160 1 299 4 210 1 13 1 253 1 212 1 166 1 303 1 16 2 168 2 343 1 19 2 171 2 264 2 309 1 26 1 312 2 356 1 29 1 223 1 185 2 84 1 369 1 274 1 229 1 190 4 87 1 231 1 92 2 142 4 
307 6 40 1 306 1 250 2 267 1 110 3 238 1 23 1 188 1 124 1 252 1 72 3 324 1 334 2 313 1 30 1 49 1 213 1 222 1 115 2 174 2 156 1 63 1 263 1 175 1 216 1 
331 1 306 1 307 14 23 2 267 1 352 3 124 11 310 1 334 1 313 2 128 1 339 1 40 2 250 1 110 8 252 2 342 1 72 6 324 4 43 1 255 3 213 2 49 2 258 2 169 1 230 1 115 4 141 2 174 2 93 1 22 1 176 1 216 11 
306 1 307 2 23 1 268 1 59 1 219 1 334 1 313 1 26 2 80 1 199 1 243 2 362 1 297 1 223 1 159 1 317 1 110 1 319 1 11 1 252 1 72 1 324 1 43 1 136 1 74 1 213 1 49 1 115 2 374 1 260 1 215 1 348 1 93 1 235 1 96 1 95 1 176 1 
306 1 23 1 11 1 252 1 26 1 313 1 136 1 199 1 74 1 243 1 49 1 213 1 115 2 362 1 260 1 215 1 223 1 283 1 93 1 159 1 
79 1 306 2 307 2 238 1 23 2 268 2 219 2 26 1 313 2 182 1 199 2 243 1 361 1 82 1 362 1 223 1 183 1 270 1 225 1 159 1 317 2 251 1 110 1 318 2 11 1 252 2 72 1 43 1 135 1 326 1 136 8 213 2 49 2 115 4 232 1 260 8 215 7 96 3 176 1 
285 1 306 1 307 3 23 1 267 1 124 1 148 1 313 1 26 1 243 1 362 1 223 1 159 1 40 1 250 1 110 1 252 1 72 2 324 1 213 1 49 1 258 1 115 2 141 1 174 1 93 1 22 1 351 1 216 1 
307 2 306 1 40 1 238 1 23 1 110 2 124 1 252 1 324 1 313 1 49 1 213 1 169 1 115 2 315 1 141 1 174 1 216 1 
307 2 306 1 250 1 238 1 23 1 267 1 124 1 252 1 72 2 324 1 313 1 292 1 49 1 213 1 115 2 174 1 22 1 216 1 
306 1 307 4 23 1 238 1 267 1 124 2 313 1 40 1 250 1 110 2 252 1 72 2 324 2 258 1 213 1 49 1 115 2 169 1 141 1 174 2 22 1 216 2 
307 2 306 1 40 1 23 1 110 2 124 1 252 1 324 1 313 1 49 1 213 1 169 1 115 2 315 1 183 1 141 1 174 1 216 1 
307 2 306 1 250 1 23 1 267 1 124 1 252 1 72 2 324 1 313 1 292 1 49 1 213 1 115 2 183 1 174 1 22 1 216 1 
306 1 307 4 23 1 267 1 124 2 313 1 183 1 40 1 250 1 110 2 252 1 72 2 324 2 258 1 213 1 49 1 115 2 169 1 141 1 174 2 22 1 216 2 
307 4 306 1 23 1 267 1 124 2 313 1 40 1 250 1 110 2 252 1 72 2 324 2 258 1 213 1 49 1 115 2 169 1 141 1 174 2 22 1 216 2 
307 2 306 1 23 1 268 1 59 1 219 1 334 1 26 1 313 1 80 1 199 1 243 1 297 1 317 1 110 1 319 1 252 1 72 1 43 1 227 1 136 1 49 1 213 1 115 2 260 1 215 1 96 1 176 1 
307 2 306 1 23 1 268 1 219 1 3 1 334 1 26 1 313 1 80 1 199 1 243 1 317 1 8 1 110 1 319 1 252 1 72 1 43 1 136 1 49 1 213 1 115 2 260 1 215 1 75 1 96 1 176 1 
306 1 307 4 23 1 267 1 124 2 313 1 40 1 250 1 110 2 252 1 72 2 324 2 258 1 213 1 49 1 115 2 169 1 141 1 174 2 93 1 22 1 216 2 
307 4 306 1 267 1 23 1 268 1 124 2 59 1 219 1 26 1 313 1 80 1 243 1 297 1 225 1 317 1 40 1 250 1 110 2 319 1 252 1 72 2 324 2 227 1 136 1 49 1 213 1 258 1 169 1 115 2 260 1 215 1 141 1 174 2 22 1 261 1 216 2 96 1 
285 1 306 1 307 3 267 1 23 1 124 1 313 1 26 1 314 1 243 1 362 1 223 1 159 1 40 1 110 2 252 1 72 1 324 1 213 1 49 1 258 1 169 1 115 2 141 1 174 1 22 1 93 1 351 1 216 1 
331 1 307 19 23 2 267 3 352 1 313 2 269 2 224 1 155 1 40 3 250 3 110 9 252 2 342 1 72 10 255 2 112 1 302 1 114 1 213 2 258 3 115 4 169 3 116 1 91 1 117 2 141 3 174 6 94 1 22 3 
307 26 331 2 178 1 267 2 23 3 179 1 352 2 146 1 313 3 269 4 33 1 224 1 155 2 187 1 40 3 250 2 110 14 252 3 72 12 112 1 255 2 137 2 213 3 258 3 169 2 115 6 116 2 91 1 117 1 141 3 174 4 94 1 22 2 120 1 
331 3 307 41 178 1 23 3 267 5 179 1 352 3 146 1 313 3 150 1 269 4 30 1 222 1 33 1 224 1 155 2 156 1 63 1 187 1 40 5 250 4 110 20 252 3 342 1 72 21 255 4 112 1 114 1 137 1 213 3 258 4 115 6 169 4 116 1 91 1 117 1 141 4 174 8 94 1 22 4 120 1 263 1 175 1 
331 3 307 38 178 1 23 4 267 4 179 1 352 3 146 1 313 4 150 1 269 4 30 1 222 1 33 1 224 1 155 2 156 1 63 1 187 1 40 5 250 4 110 20 252 4 342 1 72 18 255 4 112 1 114 1 137 2 213 4 258 4 115 8 169 3 116 1 91 1 117 1 141 4 174 7 94 1 22 3 120 1 263 1 175 1 
331 2 307 52 178 1 23 2 267 8 179 1 352 4 146 1 313 2 269 4 30 1 222 1 33 1 224 1 155 1 156 1 63 1 187 1 339 2 40 8 250 7 110 27 252 2 342 2 72 25 255 4 112 1 137 1 213 2 258 7 115 4 169 7 116 1 91 1 117 1 141 7 174 14 94 1 22 7 120 1 263 1 175 1 
132 1 245 1 70 1 71 1 165 1 125 1 256 1 330 1 278 1 249 1 
50 1 61 1 
290 1 132 1 244 1 363 1 70 1 71 1 125 1 278 1 249 1 
242 1 109 1 
64 1 248 1 304 1 
196 1 123 1 125 1 26 1 28 1 32 1 151 1 243 1 293 1 221 1 362 1 83 1 223 1 249 1 159 1 132 1 298 1 299 1 300 1 70 1 208 1 71 1 209 1 253 1 278 1 73 1 351 1 177 2 
196 1 123 1 125 1 26 1 28 1 32 1 151 1 243 1 293 1 221 1 362 1 83 1 223 1 249 1 159 1 132 1 298 1 299 1 300 1 70 1 208 1 71 1 209 1 253 1 278 1 73 1 351 1 177 2 
196 1 123 1 125 1 26 1 28 1 32 1 151 1 243 1 293 1 221 1 362 1 83 1 223 1 249 1 159 1 132 1 298 1 299 1 300 1 70 1 208 1 71 1 209 1 253 1 278 1 73 1 351 1 177 2 
242 1 109 1 64 1 
242 1 109 1 64 1 
248 1 304 1 
64 1 248 1 304 1 
308 1 10 1 
196 1 0 1 308 1 1 1 125 1 334 1 26 2 60 1 243 2 61 1 362 2 223 2 36 1 37 1 249 1 159 2 132 1 299 1 134 1 10 1 300 1 70 1 71 1 278 1 73 1 50 1 177 1 
306 1 307 2 122 1 23 1 268 1 332 1 219 1 26 2 313 1 220 1 243 2 361 1 223 2 317 1 108 1 110 1 318 2 252 1 72 1 15 1 43 1 136 2 213 1 49 1 115 2 232 1 260 2 215 2 93 1 96 1 176 1 
144 1 266 1 273 1 69 1 12 1 219 1 182 1 136 2 355 2 105 1 215 2 260 2 118 1 193 1 247 1 225 1 119 1 65 1 317 1 
273 1 69 1 12 1 219 1 182 1 136 1 355 2 17 1 105 1 215 1 260 1 118 1 193 1 247 1 119 1 65 1 317 1 
266 1 268 1 240 1 219 1 136 1 199 1 82 1 215 1 260 1 375 1 270 1 247 1 317 1 96 1 
144 1 266 1 273 1 69 1 12 1 219 1 182 1 136 1 355 2 105 1 215 1 260 1 118 1 193 1 247 1 119 1 65 1 317 1 
372 1 
343 1 188 1 333 1 212 1 254 1 87 1 229 1 
196 1 197 1 186 1 185 1 338 1 107 1 162 1 299 1 321 1 210 1 212 1 229 1 87 2 190 1 168 1 343 1 143 1 
196 5 197 4 333 1 102 2 199 1 104 1 203 2 246 3 338 4 107 4 299 5 210 4 14 1 254 1 212 9 166 2 343 2 168 3 258 2 215 3 260 3 172 1 173 1 22 2 217 2 267 2 268 3 219 4 31 1 35 2 365 2 185 12 225 1 317 3 133 1 40 2 319 3 321 6 276 6 44 2 136 3 190 5 87 8 229 8 89 2 90 2 138 1 376 2 51 6 233 2 141 2 282 2 236 2 96 10 
331 1 196 1 178 1 267 2 179 1 197 2 352 1 146 1 81 1 104 1 33 1 35 2 185 6 338 2 107 2 40 2 299 1 321 3 276 5 210 2 44 1 212 8 255 1 190 1 87 5 229 5 168 1 343 2 258 2 51 5 378 1 141 2 22 2 120 1 236 1 
196 1 267 1 197 1 26 1 30 1 151 1 243 1 222 1 293 1 221 1 362 1 35 2 364 1 223 1 338 1 159 1 107 1 40 2 299 1 208 1 210 1 253 1 44 1 212 2 229 2 170 1 175 1 351 1 
107 1 197 1 210 1 333 1 254 1 212 1 229 1 87 1 343 1 338 1 
40 2 267 2 321 5 276 5 44 1 212 5 229 5 87 5 258 2 35 2 51 5 185 10 141 2 282 1 22 2 
343 1 196 1 168 1 299 1 87 1 190 1 
195 1 196 3 268 1 197 1 180 1 219 1 199 2 104 2 82 1 270 1 338 2 317 1 107 2 133 1 299 3 210 2 277 1 14 2 212 2 86 1 136 4 190 4 229 2 327 1 168 2 260 4 215 4 96 1 236 2 
307 1 306 1 23 1 268 1 59 1 219 1 334 1 313 1 26 3 199 1 80 1 243 3 362 2 223 2 297 1 159 2 317 1 319 1 208 1 252 1 72 1 227 1 136 1 344 1 49 1 213 1 115 2 260 1 215 1 351 2 176 1 96 1 
107 1 321 2 197 1 276 2 210 1 212 1 229 2 87 4 343 2 104 1 51 2 185 4 338 1 263 1 236 1 
70 1 347 1 71 1 
100 1 308 1 245 1 70 1 71 1 
70 1 347 1 71 1 
70 1 347 1 71 1 
359 1 70 1 71 1 
359 1 70 1 71 1 
359 1 70 1 71 1 
70 1 71 1 
125 1 278 1 
40 1 307 8 250 2 267 1 110 4 23 2 252 2 72 4 313 2 137 1 30 1 213 2 222 1 169 1 115 4 174 3 156 1 63 1 263 1 175 1 
40 1 307 6 250 2 188 1 110 3 267 1 72 3 30 1 222 1 156 1 174 2 63 1 263 1 175 1 
40 1 307 4 250 1 286 1 267 1 23 1 110 2 252 1 72 2 313 1 213 1 258 1 115 2 169 1 141 1 174 2 22 1 
331 1 307 7 40 1 250 1 267 1 110 3 352 1 342 1 72 4 255 2 258 1 169 1 141 1 174 2 22 1 
307 23 267 3 23 2 352 2 313 2 128 1 30 2 222 2 156 1 63 1 339 1 40 3 250 5 110 11 342 1 252 2 72 12 255 2 137 2 258 2 213 2 169 4 115 4 328 1 141 2 174 9 22 2 263 1 175 1 
307 1 72 1 255 1 
307 1 110 1 352 1 
307 6 40 1 286 1 250 2 23 1 110 3 267 1 252 1 72 3 313 1 213 1 258 1 115 2 169 1 141 1 282 1 174 3 22 1 
307 12 331 1 178 1 23 1 267 2 179 1 352 1 146 1 313 1 33 1 40 2 250 1 110 6 252 1 72 6 255 1 213 1 258 2 169 1 115 2 91 1 141 2 174 2 22 2 120 1 
40 1 307 6 250 1 110 3 267 1 72 3 30 1 222 1 169 1 174 2 175 1 
307 3 250 1 110 1 23 1 252 1 72 2 313 1 137 1 30 1 222 1 213 1 169 1 115 2 328 1 174 2 156 1 63 1 
307 10 40 2 250 3 23 1 110 5 267 2 252 1 72 5 313 1 30 2 213 1 222 2 115 2 170 1 169 2 91 1 174 5 175 1 
40 1 307 2 23 1 110 2 252 1 313 1 213 1 115 2 169 1 91 1 141 1 174 1 
40 1 307 4 250 1 267 1 23 1 110 2 252 1 72 2 313 1 213 1 258 1 115 2 169 1 91 1 141 1 174 2 22 1 
307 3 250 1 23 3 110 1 252 3 72 2 313 3 114 1 137 1 30 1 213 3 222 1 115 6 169 1 328 1 91 1 174 2 
331 1 307 15 286 1 267 2 23 4 352 1 313 4 30 2 222 2 156 1 63 1 40 2 250 3 110 7 252 4 72 8 255 1 45 1 114 1 137 1 213 4 170 1 169 3 115 8 91 1 328 1 174 6 175 1 
307 8 331 1 267 1 23 1 352 1 313 1 30 1 222 1 33 1 156 1 63 1 40 1 250 2 110 4 252 1 72 4 255 1 213 1 115 2 91 1 174 2 263 1 175 1 
307 11 331 1 286 1 267 1 23 2 352 1 313 2 30 1 222 1 33 1 156 1 63 1 40 2 250 2 110 6 252 2 342 1 72 5 255 2 213 2 258 1 115 4 169 1 91 1 141 1 174 3 263 1 175 1 
307 19 331 1 286 1 178 1 23 3 267 3 179 1 352 1 146 1 313 3 30 1 222 1 33 1 156 1 63 1 40 3 250 3 110 9 252 3 72 10 255 1 137 1 213 3 258 2 169 1 115 6 91 1 141 2 174 4 22 2 120 1 263 1 175 1 
307 17 331 1 286 1 178 1 23 3 267 2 179 1 352 1 146 1 313 3 30 1 222 1 33 1 156 1 63 1 40 3 250 3 110 10 252 3 72 7 255 1 137 1 213 3 258 2 169 2 115 6 91 1 141 2 174 5 22 1 120 1 263 1 175 1 
307 8 331 1 267 1 23 1 352 1 313 1 30 1 222 1 33 1 156 1 63 1 40 1 250 2 110 4 252 1 72 4 255 1 213 1 115 2 91 1 174 2 263 1 175 1 
307 12 331 1 178 1 23 1 267 2 179 1 352 1 146 1 313 1 33 1 40 2 250 1 110 6 252 1 72 6 255 1 213 1 258 2 169 1 115 2 91 1 141 2 174 2 22 2 120 1 
307 18 331 1 178 1 286 1 23 4 267 2 179 1 352 1 146 1 313 4 30 1 222 1 33 1 156 1 63 1 40 3 250 3 110 10 252 4 72 8 255 1 137 2 213 4 258 2 169 2 115 8 91 1 141 2 174 5 22 1 120 1 263 1 175 1 
307 16 331 1 178 1 23 4 267 2 179 1 352 1 146 1 313 4 33 1 40 3 250 3 110 9 252 4 72 7 255 1 114 1 137 2 213 4 258 3 169 3 115 8 91 1 141 3 174 6 22 2 120 1 
307 7 40 1 250 3 267 1 110 3 72 4 30 3 222 3 169 3 156 2 174 6 63 1 175 1 
307 18 331 1 178 1 23 4 267 2 179 1 352 1 146 1 313 4 30 1 222 1 33 1 156 1 63 1 40 3 250 3 110 10 252 4 72 8 255 1 114 1 137 2 213 4 258 2 169 1 115 8 91 1 141 2 174 4 22 1 120 1 263 1 175 1 
291 1 243 1 223 1 207 1 84 1 334 1 26 1 
131 1 207 1 325 1 98 1 334 1 26 1 191 1 291 1 243 1 223 1 84 1 66 1 
199 1 82 1 188 1 268 1 260 1 215 1 270 1 219 1 317 1 96 1 136 1 
268 1 319 1 11 1 59 1 219 1 334 1 26 2 136 1 80 1 199 1 243 2 362 1 215 1 260 1 223 1 159 1 96 1 317 1 
268 2 59 1 219 1 334 1 26 2 80 1 243 2 362 1 223 2 159 2 317 1 274 1 319 2 11 1 14 1 253 1 136 1 303 1 90 1 260 1 215 1 233 1 96 3 
268 2 219 1 334 1 26 2 80 1 243 2 362 1 223 2 316 1 159 2 317 1 8 1 274 1 319 2 11 1 14 1 253 1 136 2 303 1 90 1 260 2 215 2 233 1 96 3 
196 2 287 1 268 1 219 1 199 1 316 1 246 1 317 1 299 2 319 1 301 1 14 1 190 1 136 3 166 1 87 1 343 1 90 1 376 1 260 3 215 3 233 1 96 4 
196 2 299 2 268 1 319 1 14 1 219 1 87 1 166 1 136 3 190 1 199 1 343 1 90 1 215 3 260 3 376 1 233 1 203 1 316 1 246 1 96 4 317 1 
79 1 260 1 215 1 219 1 317 1 136 1 
79 1 305 1 318 1 251 1 319 1 268 2 288 1 219 3 135 1 326 1 182 1 136 7 199 2 232 1 215 6 260 7 173 1 367 1 225 1 96 3 317 2 
307 6 306 2 55 1 267 1 23 2 268 1 124 1 59 1 219 1 334 2 313 2 26 2 30 1 80 1 222 1 243 2 362 1 223 1 297 1 156 1 63 1 225 1 159 1 317 1 40 1 108 1 250 2 110 3 319 1 11 1 252 2 72 3 324 1 227 1 136 1 213 2 49 2 115 4 215 1 260 1 174 2 93 1 261 1 263 1 175 1 216 1 96 1 
217 1 196 3 197 2 333 1 199 1 102 1 203 1 246 1 338 2 37 1 107 2 133 1 299 3 210 2 212 1 254 1 87 1 229 1 136 1 190 2 166 1 343 1 89 1 168 1 215 1 260 1 376 1 96 2 
79 1 319 1 268 1 219 2 136 2 138 1 376 1 215 2 260 2 173 1 225 1 96 2 317 1 
268 1 219 1 136 4 199 1 82 1 215 4 260 4 270 1 316 1 225 1 78 1 96 1 317 1 
305 1 319 1 268 1 288 1 14 1 211 1 219 2 136 2 279 1 215 2 260 2 379 1 96 1 317 1 
355 1 199 1 69 1 260 1 215 1 118 1 219 1 65 1 317 1 136 1 
268 1 219 1 136 2 182 1 220 1 232 1 215 2 260 2 225 1 96 1 317 1 
251 1 268 2 14 1 219 2 135 1 136 5 199 1 82 1 232 1 215 4 260 5 270 1 225 1 78 1 96 3 317 2 
268 2 14 1 219 2 135 1 136 5 373 1 199 1 82 1 232 1 215 4 260 5 270 1 225 1 78 1 96 3 317 2 
8 1 268 1 319 1 11 1 219 1 334 1 26 2 136 1 80 1 199 1 243 2 362 1 215 1 260 1 223 1 159 1 96 1 317 1 
305 1 319 1 268 1 288 1 14 1 219 2 136 1 215 1 260 1 173 1 367 1 96 1 317 1 
295 1 41 1 205 1 334 1 25 1 
274 1 196 2 299 2 353 1 41 2 147 1 253 1 334 1 25 1 87 1 166 1 303 1 343 1 360 1 295 2 205 2 37 1 158 1 67 1 
243 1 122 1 295 1 223 1 332 1 41 1 15 1 26 1 25 1 
360 1 353 1 25 1 
188 1 259 1 154 1 368 1 
345 1 280 1 259 1 139 1 154 1 42 1 368 1 
345 1 349 1 370 1 
289 1 311 1 42 3 113 1 345 3 280 1 259 1 139 1 192 1 20 2 154 1 368 1 
345 2 280 1 259 1 139 1 154 1 42 2 218 1 368 1 53 1 
289 1 42 1 355 1 27 1 345 1 280 1 139 1 259 1 377 1 193 1 118 1 
345 1 280 1 259 1 139 1 289 1 154 1 42 1 
345 1 280 1 139 1 289 1 154 2 42 1 368 1 
289 1 42 2 127 1 47 1 345 2 280 2 200 1 259 1 139 2 154 1 
68 1 289 1 42 3 218 2 27 1 345 3 346 1 280 1 139 1 259 2 184 1 154 1 368 1 
289 1 42 2 218 1 355 2 345 2 280 1 105 1 259 1 139 1 154 1 193 1 118 1 368 1 272 1 65 1 
289 1 42 4 218 2 27 1 345 4 280 2 139 2 153 1 259 2 184 1 154 1 368 1 53 1 
345 1 280 1 259 1 139 1 289 1 154 1 42 1 368 1 
42 4 218 2 113 1 126 1 27 1 345 4 280 1 139 1 259 3 192 1 20 1 184 1 154 2 368 2 
54 1 345 1 18 1 280 1 139 1 289 1 337 1 42 2 218 1 
289 1 341 1 42 3 113 2 345 3 280 1 259 1 139 1 192 1 20 2 154 1 368 1 
357 1 241 2 259 2 198 1 
345 1 280 1 139 1 289 1 52 1 42 1 
346 1 345 2 280 1 259 1 139 1 289 1 154 1 42 2 218 1 368 1 
97 1 
345 1 280 1 259 1 139 1 289 1 154 1 42 1 368 1 
346 1 345 3 280 1 259 1 139 1 289 1 20 1 154 1 42 3 218 1 368 1 
27 1 259 1 184 1 126 1 
259 1 154 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (46,75) 16 (37,251) (37,251) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (46,75) 16 (37,251) (37,251) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (46,75) 16 (37,251) (37,251) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (46,75) 16 (37,251) (37,251) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (200,301) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 87 140 79 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 87 140 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 87 140 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 251 1 88 1 165 1 75 1 16 1 37 1 264 1 45 1 234 1 96 1 
20 1 251 1 88 1 165 1 75 1 16 1 37 1 264 1 45 1 234 1 96 1 
20 1 251 1 88 1 165 1 75 1 16 1 37 1 264 1 45 1 234 1 96 1 
20 1 251 1 88 1 165 1 75 1 16 1 37 1 264 1 45 1 234 1 96 1 
88 4 89 1 253 1 211 2 45 1 245 1 280 3 316 1 206 1 96 4 134 1 246 2 344 1 264 1 117 1 234 1 250 1 13 3 
335 1 88 2 324 1 145 1 45 1 245 1 96 2 206 1 330 1 20 1 165 1 264 1 117 1 234 1 250 1 13 1 
88 3 45 2 46 1 245 1 280 1 96 3 246 1 165 1 264 1 344 1 117 1 234 2 13 2 
253 1 211 2 46 1 45 2 316 1 134 1 165 1 8 1 344 3 117 1 234 2 235 1 185 1 13 5 88 9 89 1 32 1 245 1 280 7 96 9 206 1 246 4 264 1 250 1 
253 1 211 2 46 1 45 2 316 1 134 1 165 1 8 1 344 3 117 1 234 2 235 1 185 1 13 5 88 9 89 1 32 1 245 1 280 7 96 9 206 1 246 4 264 1 250 1 
168 1 243 1 309 1 
243 1 278 1 49 2 
305 2 125 2 219 2 123 1 193 2 21 2 110 2 22 1 
198 1 210 1 110 2 182 1 160 1 133 1 52 1 113 2 343 1 7 1 115 2 85 1 10 1 27 1 323 1 203 1 139 1 14 1 240 1 190 1 91 1 123 1 263 1 193 3 146 2 282 1 218 1 329 1 305 2 125 2 351 1 36 2 219 3 306 2 249 1 21 2 22 1 
305 1 125 1 174 1 252 1 219 1 39 1 193 1 21 1 110 1 22 1 
131 1 261 1 252 1 242 1 243 1 193 1 124 1 305 1 100 1 219 1 320 1 168 1 266 1 295 1 
131 1 261 2 252 1 242 1 243 1 193 1 110 1 124 2 125 1 305 1 100 1 219 1 168 1 21 1 295 1 
72 1 261 1 288 1 170 1 124 1 
72 1 261 2 162 1 288 1 168 1 243 1 255 1 124 2 
72 1 261 1 124 1 
261 1 252 1 288 1 270 1 193 1 110 1 124 1 125 1 305 1 174 1 219 1 39 1 21 1 22 1 
243 1 
72 1 261 2 288 1 168 1 243 1 293 1 255 1 124 2 
72 2 252 1 42 1 132 1 74 2 270 1 288 2 107 1 272 1 110 1 227 1 255 1 275 1 230 2 168 1 321 1 57 2 58 1 297 1 261 5 192 4 193 1 243 1 64 1 148 1 124 5 305 1 125 1 126 4 174 1 207 1 219 1 39 1 128 1 353 1 153 1 21 1 22 1 
123 1 309 1 
123 2 193 2 110 1 304 1 305 2 125 1 219 2 201 1 21 1 
196 1 200 1 315 1 
178 1 14 1 240 1 91 1 123 1 193 1 263 1 146 1 182 1 160 1 113 1 343 1 219 1 115 1 7 1 85 1 
14 1 240 1 91 1 263 1 193 2 146 1 160 1 182 1 256 1 125 1 305 1 343 1 53 1 113 1 7 1 219 2 115 1 200 1 85 1 21 1 
273 1 123 1 193 5 110 1 304 1 125 4 305 5 256 1 53 2 219 5 266 1 209 1 21 4 294 1 
305 2 125 2 174 1 252 1 219 2 193 2 48 1 21 2 
305 3 125 3 53 1 219 3 123 1 193 3 110 1 21 3 
305 1 125 1 174 1 252 1 219 1 193 1 21 1 
305 1 125 1 252 1 219 1 201 1 193 1 21 1 110 1 304 1 
198 1 210 1 131 1 252 1 110 2 160 1 182 1 52 1 256 1 343 1 53 1 113 1 7 1 115 1 85 1 323 1 203 1 295 1 139 1 14 1 261 1 240 1 190 1 91 1 242 1 123 1 263 1 193 4 146 1 34 1 304 1 329 1 124 1 305 3 125 3 351 1 100 1 36 2 219 4 306 1 127 1 249 1 21 3 22 1 
305 2 125 1 53 1 219 2 123 1 266 1 193 2 209 1 21 1 
131 1 261 1 252 1 242 1 243 1 193 3 110 1 304 1 124 1 228 1 256 1 125 3 305 3 53 2 100 1 219 3 127 1 21 3 295 1 
315 1 193 2 110 1 304 1 125 2 305 2 53 1 219 2 200 1 21 2 
14 1 240 1 91 1 123 1 193 1 263 1 146 1 182 1 160 1 113 1 343 1 219 1 115 1 7 1 85 1 
240 1 91 1 123 1 193 1 327 1 263 1 146 1 160 1 113 1 343 1 219 1 115 1 7 1 85 1 11 1 
301 1 277 1 
131 1 305 1 125 1 252 1 219 1 193 1 21 1 48 1 
35 1 268 1 
35 1 268 1 
292 1 62 1 
292 1 62 1 
292 1 62 1 
60 1 35 1 268 1 
60 1 35 1 268 1 
171 1 35 1 268 1 
300 1 187 1 292 1 62 1 35 2 268 2 
60 1 35 1 268 1 
151 1 35 1 268 1 
151 1 35 1 268 1 
151 1 35 1 268 1 
179 1 104 1 25 1 271 1 80 1 346 1 204 1 59 1 261 1 15 1 123 1 171 1 193 2 35 1 283 1 124 1 125 2 305 2 219 2 221 1 21 2 197 1 268 1 23 1 
300 1 261 2 179 3 104 1 271 2 122 1 243 1 281 1 35 2 194 1 124 2 111 2 350 1 80 2 346 2 265 1 197 2 137 1 268 2 
316 1 206 1 250 1 
335 1 206 1 250 1 
335 1 337 1 225 1 316 2 250 3 298 1 
335 1 337 1 225 1 316 1 308 1 250 2 
335 1 337 2 225 1 316 1 250 2 
72 1 261 4 288 3 289 1 243 1 349 1 227 1 255 1 124 4 99 1 81 1 168 1 154 1 
72 2 261 4 120 1 288 3 170 1 243 1 349 1 227 1 255 1 124 4 168 1 154 1 138 1 175 1 
288 2 289 1 44 2 340 1 49 4 275 1 81 1 230 1 168 1 55 1 278 2 297 1 57 1 261 3 192 2 243 3 349 1 283 1 99 1 124 3 126 3 207 1 222 1 38 1 128 1 129 2 
288 3 44 4 289 1 340 1 49 7 275 1 81 2 163 1 230 2 168 1 55 2 278 3 297 1 57 2 261 4 192 4 243 4 349 1 147 1 283 2 124 4 99 1 126 5 207 1 222 2 38 2 129 4 128 1 310 1 
6 1 85 1 309 1 
85 1 169 1 
248 1 
7 1 85 1 263 1 
85 1 130 1 
7 1 85 1 
186 1 6 2 7 1 85 3 208 1 263 1 
198 3 205 2 121 2 107 1 144 1 77 1 50 1 65 1 282 4 230 1 166 1 306 7 152 1 321 1 153 1 57 1 102 3 
198 3 205 2 121 2 107 1 144 1 77 1 50 1 65 1 282 4 230 1 166 1 306 7 152 1 321 1 153 1 57 1 102 3 
198 3 205 2 121 2 107 1 144 1 77 1 50 1 65 1 282 4 230 1 166 1 306 7 152 1 321 1 153 1 57 1 102 3 279 1 
198 15 107 2 212 1 77 5 50 2 166 1 230 4 231 1 215 1 321 2 55 3 202 3 322 1 323 1 57 4 139 1 325 1 190 1 121 3 205 5 144 1 244 4 303 1 282 16 65 2 351 1 36 2 222 3 38 3 306 31 152 1 68 1 153 1 102 10 
198 4 103 1 107 1 77 1 50 1 230 1 321 1 323 2 57 1 139 2 190 2 121 2 205 3 144 1 303 1 282 5 65 1 351 2 36 4 306 9 152 1 153 1 356 1 102 4 
335 1 45 1 316 1 160 1 113 1 343 1 115 1 165 1 9 1 167 1 86 1 117 1 116 1 234 1 298 1 13 1 88 2 141 1 245 1 280 1 146 1 206 1 97 1 96 2 98 1 150 1 66 1 264 1 101 1 250 2 
335 1 45 1 339 1 316 1 160 1 113 1 343 1 115 1 165 1 167 1 86 1 117 1 116 1 234 1 298 1 13 1 88 3 141 1 245 1 146 1 280 2 206 1 96 3 98 1 150 1 66 1 101 1 267 1 250 2 156 1 
335 1 339 1 316 1 160 1 113 1 343 1 165 1 115 1 167 1 86 1 117 1 116 1 298 1 13 1 88 2 141 1 245 1 146 1 280 2 96 2 206 1 150 1 101 1 250 2 156 1 
286 1 312 1 45 1 160 1 343 1 113 1 115 1 165 2 7 1 85 1 216 1 116 2 347 1 12 1 234 1 88 1 240 1 146 1 96 1 149 1 150 2 101 2 267 1 
335 1 45 1 316 1 160 1 113 1 343 1 115 1 165 1 9 1 167 1 86 1 116 1 234 1 298 1 88 1 141 1 146 1 206 1 96 1 98 1 150 1 66 1 264 1 101 1 250 2 156 1 
257 1 
113 1 261 1 240 1 115 1 146 1 227 1 124 1 
72 2 131 1 176 1 0 1 261 3 252 1 242 1 326 1 61 1 193 1 255 1 124 3 305 1 229 1 100 1 219 1 345 1 320 1 266 1 293 1 233 2 295 1 
72 1 176 1 131 1 0 1 252 1 255 1 229 1 320 1 345 1 168 1 233 3 293 1 295 1 261 3 242 1 193 1 61 1 243 1 124 3 305 1 100 1 219 1 266 1 71 1 
176 1 131 1 72 2 0 1 252 1 255 1 229 1 320 1 345 1 168 1 293 1 233 3 295 1 261 3 242 1 326 1 193 1 61 1 243 1 124 3 305 1 100 1 219 1 266 1 355 1 71 1 
131 1 72 3 176 1 0 1 261 3 252 1 242 1 326 2 193 1 61 1 227 1 78 1 79 1 255 1 124 3 305 1 229 1 100 1 219 1 345 1 320 1 266 1 355 2 233 2 293 1 295 1 87 1 140 1 
131 1 176 1 0 1 261 2 252 1 242 1 61 1 193 1 227 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 233 2 295 1 
131 1 176 1 0 1 261 2 252 1 242 1 61 1 193 1 227 1 78 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 233 2 295 1 87 1 
131 1 176 1 0 1 261 2 252 1 242 1 61 1 193 1 227 1 78 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 233 2 295 1 87 1 
131 1 176 1 0 1 261 2 252 1 242 1 2 1 61 1 193 1 227 1 124 2 305 1 229 1 100 1 164 1 219 1 345 1 320 1 266 1 233 2 295 1 
72 1 131 1 176 1 0 1 261 2 252 1 242 1 326 1 61 1 193 1 227 1 78 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 355 1 233 3 295 1 87 1 71 1 140 1 
72 1 131 1 176 1 0 1 261 2 252 1 242 1 326 1 61 1 193 1 227 1 78 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 355 1 233 3 295 1 87 1 71 1 140 1 
131 1 176 1 0 1 261 2 252 1 242 1 61 1 193 1 227 1 124 2 305 1 229 1 100 1 219 1 345 1 320 1 266 1 233 2 295 1 
277 1 309 1 
198 6 181 1 43 1 315 4 77 1 158 1 52 1 112 1 200 11 230 1 231 1 10 1 55 1 202 3 323 2 203 1 57 2 139 2 325 1 205 1 190 2 123 1 244 3 282 8 329 2 351 2 36 4 196 11 222 2 38 2 306 14 354 1 102 2 
198 1 178 1 336 1 314 1 315 1 160 1 182 1 112 1 256 1 52 1 343 1 113 1 53 1 7 1 115 1 85 1 10 1 323 1 203 1 139 1 14 1 240 1 91 1 190 1 94 1 123 1 263 1 193 2 146 1 282 1 329 1 305 1 125 1 351 1 36 2 219 2 306 2 21 1 
198 10 224 1 105 2 107 1 315 7 160 2 52 1 112 1 113 3 53 1 114 1 115 3 7 2 230 3 200 7 321 1 10 1 55 2 203 3 323 3 119 2 57 3 14 2 240 1 121 1 205 4 123 2 282 10 329 3 125 1 70 2 21 1 210 2 77 4 182 2 256 1 343 2 85 2 139 3 190 3 91 2 93 2 144 1 193 3 263 2 146 3 305 1 351 3 36 6 196 7 219 3 222 2 38 2 306 20 152 1 352 1 153 1 102 8 156 1 
198 1 286 1 269 1 312 1 108 1 159 1 160 2 133 2 342 1 52 1 53 1 343 2 113 7 115 8 7 2 85 3 10 1 277 1 323 1 203 1 236 1 139 1 90 1 188 1 240 2 190 1 193 1 146 8 97 1 282 1 329 1 305 1 125 1 351 1 36 2 219 1 306 2 21 1 156 1 
198 2 315 1 110 1 112 1 200 1 230 1 55 1 323 1 203 1 57 1 139 1 205 1 190 1 193 1 63 1 304 1 282 1 329 1 125 1 305 1 351 1 196 1 36 2 219 1 222 1 38 1 306 3 21 1 102 1 
277 1 
277 1 
277 1 
90 1 190 1 315 1 77 1 173 1 282 2 329 1 351 1 196 1 36 2 200 1 38 1 306 2 203 1 323 1 102 1 57 1 139 1 
198 2 90 1 205 1 190 1 315 1 329 1 351 1 196 1 36 2 200 1 230 1 306 2 55 1 203 1 323 1 102 1 296 1 139 1 
198 2 90 1 205 1 190 1 315 2 77 1 282 2 329 1 351 1 196 2 36 2 230 1 200 2 222 1 38 1 306 4 55 1 203 1 323 1 102 2 57 1 139 1 
198 2 205 1 190 1 315 2 77 1 282 2 329 1 351 1 196 2 36 2 230 1 200 2 222 1 38 1 306 4 55 1 203 1 323 1 102 2 57 1 139 1 
210 1 198 1 160 1 182 1 52 1 343 1 113 1 7 1 115 1 85 1 10 1 203 1 323 1 139 1 14 1 240 1 91 1 190 1 123 1 263 1 193 1 146 1 282 1 329 1 351 1 36 2 219 1 306 2 
198 1 160 1 52 1 343 1 113 1 7 1 115 1 85 1 10 1 11 1 203 1 323 1 139 1 240 1 91 1 190 1 123 1 263 1 327 1 193 1 146 1 282 1 329 1 351 1 36 2 219 1 306 2 333 1 
198 2 205 1 190 1 315 2 77 1 282 2 329 1 112 1 351 1 196 2 36 2 230 1 200 2 222 1 38 1 306 4 55 1 203 1 323 1 102 2 57 1 139 1 
198 2 210 1 105 1 315 2 77 1 160 1 182 1 343 1 113 1 115 1 7 1 230 1 200 2 85 1 55 1 203 1 323 1 57 1 139 1 14 1 205 1 91 1 190 1 263 1 193 1 146 1 282 2 97 1 329 1 351 1 196 2 36 2 219 1 38 1 222 1 306 4 102 2 
198 1 41 1 315 1 77 1 110 1 112 1 230 1 200 1 55 1 323 1 203 1 57 1 139 1 190 1 193 1 304 1 282 2 329 1 125 1 305 1 351 1 36 2 196 1 219 1 222 1 38 1 306 3 21 1 102 1 
198 10 3 2 77 3 82 1 230 3 231 1 259 1 55 3 56 1 202 1 323 2 57 3 139 2 325 1 142 1 205 3 190 2 143 1 244 2 282 9 285 2 351 2 36 4 222 3 38 3 247 1 306 19 334 1 356 1 102 6 
198 12 3 4 77 2 258 1 82 1 230 2 84 1 231 2 259 2 260 1 55 2 56 1 202 2 323 3 57 3 184 1 139 3 238 1 239 1 142 1 205 2 190 3 303 2 244 2 282 14 285 1 351 3 36 6 222 3 38 3 306 26 334 2 102 4 356 1 
198 21 107 1 3 4 230 5 231 3 55 4 321 1 56 1 202 3 323 3 57 5 238 1 325 1 239 1 205 4 121 1 244 4 282 20 285 1 247 1 334 1 77 4 258 1 82 1 84 1 259 2 260 1 184 1 139 3 142 1 190 3 144 1 303 1 351 3 36 6 38 4 222 4 306 41 152 1 153 1 102 8 356 1 155 1 
198 18 107 1 3 4 77 3 258 1 82 1 230 4 84 1 231 3 259 2 321 1 260 1 55 3 56 1 202 3 323 4 57 5 184 1 238 1 139 4 239 1 325 1 142 1 121 1 205 4 190 4 144 1 303 2 244 4 282 20 285 1 351 4 36 8 222 4 38 4 247 1 306 38 152 1 334 1 153 1 356 1 102 7 155 1 
198 25 43 2 107 1 3 4 77 7 258 1 82 1 230 8 84 1 231 2 259 1 321 1 260 1 55 7 56 1 202 4 323 2 57 8 184 1 238 1 139 2 239 1 325 2 142 1 121 1 205 7 190 2 144 1 303 1 244 4 282 27 285 1 351 2 36 4 222 7 38 7 306 52 152 1 334 1 153 1 356 1 102 14 
300 1 80 1 346 1 271 1 122 1 223 1 281 1 197 1 35 1 268 1 
15 1 171 1 
80 1 311 1 191 1 346 1 271 1 95 1 197 1 35 1 268 1 
60 1 318 1 
54 1 187 1 151 1 
300 1 261 1 179 2 104 1 271 1 122 1 243 1 281 1 35 1 124 1 111 1 350 1 80 1 346 1 265 1 197 1 137 1 268 1 
300 1 261 1 179 2 104 1 271 1 122 1 243 1 281 1 35 1 124 1 111 1 350 1 80 1 346 1 265 1 197 1 137 1 268 1 
300 1 261 1 179 2 104 1 271 1 122 1 243 1 281 1 35 1 124 1 111 1 350 1 80 1 346 1 265 1 197 1 137 1 268 1 
187 1 60 1 318 1 
187 1 60 1 318 1 
54 1 151 1 
54 1 187 1 151 1 
221 1 204 1 
179 1 25 1 288 1 271 1 111 1 80 1 346 1 137 1 204 1 59 1 261 1 15 1 123 1 171 1 193 2 35 1 283 1 124 1 125 2 305 2 219 2 221 1 332 1 21 2 197 1 268 1 23 1 
177 1 198 1 269 1 26 1 4 1 160 1 133 2 112 1 342 1 52 1 343 1 113 2 7 1 115 2 214 1 85 1 10 1 323 1 203 1 139 1 190 1 262 1 193 2 146 2 282 1 329 1 305 2 351 1 36 2 219 2 306 2 
335 1 141 1 17 1 146 2 316 1 206 1 160 1 97 1 98 1 343 1 113 2 115 2 220 1 167 1 291 1 116 1 250 2 298 1 156 1 
335 1 141 1 146 1 172 1 316 1 206 1 160 1 98 1 113 1 343 1 115 1 167 1 291 1 116 1 250 2 298 1 156 1 
286 1 240 1 312 1 146 1 160 1 343 1 113 1 7 1 115 1 220 1 199 1 85 1 116 1 12 1 
335 1 141 1 17 1 146 1 316 1 206 1 160 1 98 1 343 1 113 1 115 1 220 1 167 1 291 1 116 1 250 2 298 1 156 1 
195 1 
126 1 42 1 168 1 192 1 243 1 309 1 148 1 
227 1 
113 1 240 1 115 1 146 1 227 1 
227 1 
261 1 227 1 78 1 124 1 
42 1 227 1 
74 2 44 5 192 5 243 5 64 1 49 10 126 5 222 2 38 2 230 2 129 5 55 2 70 1 278 5 57 2 
72 1 261 1 168 1 243 1 255 1 124 1 
113 1 180 1 240 1 115 1 146 1 227 1 
198 1 210 1 110 2 182 1 160 1 52 1 113 1 343 1 115 1 7 1 85 1 203 1 323 1 139 1 14 1 240 1 190 1 91 1 123 1 193 3 263 1 146 1 329 1 305 2 125 2 351 1 36 2 219 3 306 1 249 1 21 2 22 1 
227 1 
80 1 346 1 5 1 
80 1 346 1 5 1 
299 1 80 1 346 1 122 1 204 1 
80 1 346 1 5 1 
19 1 80 1 346 1 
19 1 80 1 346 1 
19 1 80 1 346 1 
80 1 346 1 
35 1 268 1 
198 4 121 1 205 2 190 2 144 1 107 1 77 1 303 1 282 4 351 2 36 4 230 1 306 8 152 1 321 1 153 1 323 2 57 1 102 3 139 2 
198 3 121 1 205 2 144 1 107 1 282 3 230 1 306 6 152 1 321 1 153 1 309 1 102 2 57 1 
198 2 205 1 190 1 77 1 282 2 331 1 351 1 36 2 230 1 222 1 38 1 306 4 55 1 323 1 102 2 57 1 139 1 
198 4 325 1 205 1 244 2 77 1 282 3 230 1 222 1 38 1 231 1 306 7 55 1 202 1 57 1 102 2 
198 12 43 1 107 2 77 4 230 3 83 1 321 2 55 2 202 2 323 2 57 3 139 2 325 1 121 1 205 5 190 2 144 1 244 2 303 2 282 11 351 2 36 4 38 2 222 2 306 23 152 1 153 1 354 1 102 9 
198 1 306 1 244 1 
306 1 202 1 282 1 
198 3 190 1 205 2 77 1 282 3 351 1 331 1 36 2 222 1 38 1 230 1 306 6 55 1 70 1 323 1 57 1 102 3 139 1 
198 6 77 1 258 1 230 2 231 1 84 1 55 2 202 1 323 1 57 2 184 1 139 1 238 1 239 1 190 1 205 1 244 1 282 6 351 1 36 2 222 2 38 2 306 12 356 1 102 2 
198 3 205 1 107 1 77 1 282 3 230 1 306 6 321 1 153 1 57 1 102 2 
198 2 205 1 190 1 107 1 144 1 77 1 303 1 282 1 351 1 36 2 83 1 306 3 152 1 321 1 323 1 102 2 139 1 
198 5 132 1 190 1 205 3 107 2 77 2 282 5 351 1 36 2 230 2 306 10 321 2 153 1 323 1 356 1 102 5 57 2 139 1 
190 1 77 1 282 2 351 1 36 2 38 1 306 2 323 1 356 1 57 1 102 1 139 1 
198 2 205 1 190 1 77 1 282 2 351 1 36 2 230 1 222 1 38 1 306 4 55 1 323 1 102 2 356 1 57 1 139 1 
198 2 190 3 205 1 107 1 303 1 77 1 282 1 351 3 36 6 83 1 247 1 306 3 321 1 323 3 356 1 102 2 139 3 
198 18 107 3 77 5 83 1 230 5 231 1 215 1 321 3 55 3 322 1 202 3 323 5 57 5 139 5 325 1 121 1 190 5 205 7 144 1 303 2 244 4 282 16 331 1 351 5 36 10 222 3 38 3 247 1 306 34 152 1 68 1 153 2 356 1 102 12 
198 4 107 1 258 1 230 1 231 1 321 1 202 1 323 1 57 1 139 1 121 1 190 1 205 2 144 1 244 1 282 4 351 1 36 2 306 8 152 1 153 1 356 1 102 2 
198 5 107 1 77 1 258 1 230 1 231 1 321 1 202 1 323 2 57 2 139 2 325 1 121 1 205 2 190 2 144 1 244 2 282 6 351 2 331 1 36 4 222 1 38 1 306 11 152 1 153 1 356 1 102 3 
198 10 107 1 77 1 258 1 230 3 84 1 231 1 321 1 55 2 202 1 323 3 57 3 184 1 139 3 238 1 239 1 121 1 190 3 205 3 144 1 244 1 303 1 282 9 331 1 351 3 36 6 222 2 38 2 306 19 152 1 153 1 356 1 102 4 
198 7 107 1 77 2 258 1 230 2 231 1 84 1 321 1 55 1 202 1 323 3 57 3 184 1 139 3 238 1 239 1 121 1 190 3 205 3 144 1 303 1 244 1 282 10 331 1 351 3 36 6 222 2 38 2 306 17 152 1 153 1 356 1 102 5 
198 4 107 1 258 1 230 1 231 1 321 1 202 1 323 1 57 1 139 1 121 1 190 1 205 2 144 1 244 1 282 4 351 1 36 2 306 8 152 1 153 1 356 1 102 2 
198 6 77 1 258 1 230 2 231 1 84 1 55 2 202 1 323 1 57 2 184 1 139 1 238 1 239 1 190 1 205 1 244 1 282 6 351 1 36 2 222 2 38 2 306 12 356 1 102 2 
198 8 107 1 77 2 258 1 230 2 84 1 231 1 321 1 55 1 202 1 323 4 57 3 184 1 139 4 238 1 239 1 121 1 190 4 205 3 144 1 244 1 303 2 282 10 331 1 351 4 36 8 222 2 38 2 306 18 152 1 153 1 356 1 102 5 
198 7 77 3 258 1 230 2 84 1 231 1 55 2 202 1 323 4 57 3 184 1 139 4 238 1 239 1 190 4 205 3 244 1 303 2 282 9 351 4 36 8 222 3 38 3 306 16 247 1 356 1 102 6 
198 4 205 3 144 2 107 3 77 3 282 3 230 1 306 7 152 1 321 3 153 1 102 6 57 1 
198 8 107 1 77 1 258 1 230 2 84 1 231 1 321 1 55 1 202 1 323 4 57 3 184 1 139 4 238 1 239 1 121 1 190 4 205 3 144 1 244 1 303 2 282 10 351 4 36 8 222 2 38 2 306 18 247 1 152 1 153 1 356 1 102 4 
305 1 287 1 219 1 123 1 193 1 266 1 209 1 
305 1 290 1 161 1 287 1 219 1 123 1 193 1 266 1 338 1 47 1 209 1 341 1 
343 1 113 1 286 1 240 1 7 1 312 1 115 1 85 1 146 1 160 1 309 1 
240 1 91 1 123 1 263 1 193 2 146 1 182 1 160 1 125 1 305 1 343 1 53 1 113 1 7 1 219 2 115 1 85 1 21 1 
131 1 252 1 91 1 31 1 123 1 263 2 193 2 146 1 182 1 160 1 136 1 125 1 305 2 343 1 53 1 113 1 100 1 7 2 219 2 115 1 85 3 130 1 21 2 
131 1 252 1 160 1 136 1 113 2 53 1 343 1 115 2 7 2 85 3 232 1 91 1 31 1 123 1 327 1 193 2 263 2 146 2 305 2 125 1 100 1 219 2 130 1 21 2 
72 1 1 1 313 1 160 1 136 1 113 3 343 1 6 1 115 3 7 1 85 4 168 1 232 1 169 1 295 1 261 2 240 1 31 1 263 1 243 1 146 3 124 2 130 1 
72 1 261 2 240 1 31 1 243 1 263 1 146 3 33 1 160 1 124 2 136 1 343 1 113 3 6 1 7 1 115 3 168 1 85 4 232 1 130 1 169 1 295 1 
343 1 113 1 115 1 146 1 160 1 159 1 
188 1 240 2 269 1 24 1 108 1 263 1 146 7 213 1 159 1 97 1 160 2 133 1 284 1 113 6 343 3 115 7 7 2 208 1 85 3 236 1 156 1 
198 3 210 1 105 1 107 1 315 1 160 1 182 1 112 1 343 1 53 1 113 1 7 1 115 1 200 1 230 1 85 1 321 1 323 2 203 2 119 1 57 1 139 2 14 1 121 1 205 2 91 1 190 2 144 1 262 1 123 2 263 1 193 2 146 1 282 3 97 1 329 2 305 1 125 1 351 2 196 1 36 4 219 2 306 6 152 1 153 1 21 1 102 2 
72 2 261 3 180 1 240 1 288 1 146 1 33 1 227 2 254 1 255 1 124 3 113 1 6 1 115 1 183 1 85 2 169 1 295 1 118 1 
189 1 263 1 146 2 97 1 159 1 160 1 113 2 343 2 6 1 115 2 7 1 208 1 85 2 
286 1 240 1 312 1 146 4 97 1 160 1 18 1 343 1 113 4 115 4 7 1 85 1 232 1 
24 1 30 1 31 1 226 1 263 1 146 2 213 1 160 1 113 2 343 2 114 1 115 2 7 1 85 1 
335 1 343 1 113 1 141 1 240 1 115 1 146 1 206 1 250 1 160 1 
269 1 146 2 26 1 97 1 160 1 113 2 343 1 115 2 7 1 85 1 156 1 
286 1 240 1 188 1 312 1 269 1 31 1 108 1 146 5 97 1 160 2 18 1 113 4 343 2 115 5 7 2 85 3 
286 1 240 1 312 1 269 1 31 1 108 1 146 5 97 1 160 2 18 1 113 4 343 2 115 5 7 2 85 3 307 1 
240 1 91 1 123 1 263 1 193 2 327 1 146 1 160 1 125 1 305 1 343 1 53 1 113 1 7 1 219 2 115 1 85 1 21 1 
24 1 31 1 263 1 146 1 213 1 160 1 284 1 113 1 343 2 115 1 7 1 208 1 85 1 
317 1 76 1 106 1 123 1 237 1 
131 1 29 1 261 2 252 1 241 1 288 1 242 1 106 1 76 2 123 1 243 1 124 2 317 2 100 1 168 1 127 1 295 1 28 1 237 2 
177 1 76 1 106 1 193 1 4 1 305 1 219 1 214 1 237 1 
29 1 106 1 28 1 
245 1 117 1 309 1 13 1 
88 1 45 1 245 1 117 1 234 1 96 1 13 1 
165 1 101 1 96 1 
348 1 88 3 157 1 264 1 145 2 45 1 245 1 117 1 234 1 96 3 274 1 13 1 
88 2 211 1 45 1 245 1 117 1 280 1 234 1 96 2 13 1 
246 1 89 1 88 1 264 1 45 1 316 1 234 1 206 1 250 1 96 1 13 1 
88 1 264 1 45 1 245 1 234 1 96 1 13 1 
88 1 264 1 45 1 245 2 117 1 234 1 96 1 
88 2 45 2 245 1 96 2 135 1 264 1 69 1 40 1 234 2 13 1 
88 3 32 1 45 1 245 1 280 2 96 3 246 1 8 1 264 1 344 1 117 1 234 1 13 2 
335 1 88 2 92 1 45 1 245 1 280 1 316 1 96 2 206 1 264 1 117 1 234 1 250 2 298 1 13 1 
88 4 211 1 45 2 245 1 280 2 96 4 134 1 246 1 264 1 344 1 117 1 234 2 13 2 
88 1 264 1 45 1 245 1 117 1 234 1 96 1 13 1 
348 1 88 4 145 1 45 1 245 2 280 2 328 1 96 4 274 1 246 1 344 1 117 2 234 1 13 3 
88 2 73 1 302 1 45 1 245 1 280 1 96 2 264 1 117 1 234 1 235 1 13 1 
348 1 88 3 145 2 45 1 245 1 96 3 274 2 51 1 264 1 117 1 234 1 13 1 
276 1 67 1 109 2 13 2 
88 1 319 1 264 1 45 1 234 1 96 1 
88 2 8 1 264 1 45 1 245 1 117 1 280 1 234 1 96 2 13 1 
217 1 
88 1 264 1 45 1 245 1 117 1 234 1 96 1 13 1 
88 3 145 1 45 1 280 1 245 1 96 3 8 1 264 1 117 1 234 1 13 1 
246 1 344 1 328 1 13 1 
245 1 13 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (153,244) (93,173) (93,173) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (153,244) (93,173) (93,173) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (153,244) (93,173) (93,173) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (153,244) (93,173) (93,173) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (153,244) 316 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (153,244) 316 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (153,244) 
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 346 (60,202,232) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 346 78 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 346 78 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 346 (60,202,232) 217 214 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 346 78 184 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 346 78 184 177 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 1 53 2 208 1 275 2 173 1 312 1 153 1 93 1 167 1 74 1 255 1 320 1 244 1 124 1 26 1 52 1 
330 1 53 2 208 1 275 2 173 1 312 1 153 1 93 1 167 1 74 1 255 1 320 1 244 1 124 1 26 1 52 1 
330 1 53 2 208 1 275 2 173 1 312 1 153 1 93 1 167 1 74 1 255 1 320 1 244 1 124 1 26 1 52 1 
330 1 53 2 208 1 275 2 173 1 312 1 153 1 93 1 167 1 74 1 255 1 320 1 244 1 124 1 26 1 52 1 
330 1 53 4 208 1 130 2 275 4 276 3 199 1 40 2 314 1 116 1 58 1 268 3 167 1 320 1 11 1 124 1 26 1 125 1 
53 2 330 1 208 1 275 2 312 1 58 1 141 1 268 1 21 1 167 1 255 1 26 1 124 1 125 1 79 1 52 1 
53 2 208 1 167 1 276 1 275 2 244 1 26 1 297 1 316 1 
53 2 208 1 167 1 276 1 275 2 244 1 26 1 297 1 316 1 
53 1 208 1 167 1 275 1 244 1 26 1 
270 1 322 1 232 2 242 2 107 1 69 1 278 1 111 1 
272 2 266 1 3 1 232 5 83 1 69 1 87 2 16 1 278 1 118 1 339 1 59 1 270 1 322 2 107 2 242 5 281 2 108 1 203 1 
104 1 270 1 278 1 
133 2 341 1 278 1 
298 1 250 1 353 2 56 2 85 2 25 2 326 2 189 2 
273 1 183 2 56 2 86 1 295 1 85 3 84 1 5 2 225 1 325 1 115 1 326 3 227 2 91 1 298 1 243 1 306 1 189 2 127 1 250 1 98 1 191 1 353 2 13 1 42 1 18 1 194 1 317 1 358 1 44 1 235 1 46 1 105 1 25 2 156 1 293 2 181 2 
298 1 353 1 56 1 122 1 85 1 25 1 282 1 326 1 189 1 70 1 
60 1 346 1 
353 1 56 1 355 1 85 1 232 2 101 1 326 1 278 1 202 1 270 1 122 1 303 1 242 2 25 1 189 1 
36 1 322 1 232 1 242 1 107 1 
270 1 322 1 232 2 242 2 107 1 69 1 219 1 278 1 
322 1 232 1 242 1 
353 1 56 1 232 1 85 1 326 1 70 1 298 1 120 1 122 1 107 1 242 1 282 1 25 1 189 1 
278 1 
250 1 98 1 183 1 191 1 129 1 85 1 115 1 326 1 194 1 18 1 46 1 44 1 105 1 243 1 293 1 181 1 
343 1 258 1 329 1 
98 1 182 1 183 1 343 1 191 1 353 1 172 1 85 2 115 1 326 2 18 1 194 1 44 1 46 1 105 1 25 1 243 1 293 1 189 1 181 1 
250 1 104 1 
250 2 353 1 56 1 85 2 88 1 326 2 25 2 305 1 189 1 
250 1 353 3 56 1 172 1 85 3 25 3 326 3 189 3 
353 1 122 1 85 1 25 1 326 1 189 1 70 1 
353 1 56 1 122 1 85 1 25 1 88 1 305 1 326 1 189 1 
273 1 182 1 183 1 56 2 295 1 84 1 85 4 5 2 225 1 325 1 115 1 326 4 227 1 91 1 298 1 202 1 122 1 10 1 303 1 242 1 243 1 305 1 306 1 189 3 250 1 98 1 191 1 353 3 13 1 288 1 355 1 172 1 232 1 42 1 101 1 18 1 194 1 44 1 46 1 105 1 25 3 156 1 293 1 181 1 
353 1 172 1 85 1 25 1 346 1 78 1 326 1 189 1 
182 1 353 3 185 1 56 1 288 1 355 1 172 2 232 1 85 3 101 1 326 3 278 1 202 1 122 1 303 1 242 1 25 3 305 1 189 3 
353 2 343 1 56 1 172 1 85 2 326 2 25 2 305 1 189 2 329 1 
250 1 98 1 183 1 191 1 85 1 115 1 326 1 194 1 18 1 46 1 44 1 105 1 243 1 293 1 181 1 
250 1 183 1 191 1 85 1 115 1 326 1 194 1 18 1 211 1 44 1 105 1 243 1 23 1 293 1 181 1 
0 1 273 1 343 2 198 1 86 2 5 2 258 2 325 1 164 1 91 2 227 4 123 1 306 1 329 2 171 1 64 1 13 1 287 1 41 1 42 1 43 1 212 1 156 1 49 1 
28 1 353 1 355 1 122 1 85 1 25 1 326 1 189 1 
250 1 182 1 353 4 56 1 82 1 172 2 85 4 346 1 326 4 25 4 245 1 305 1 78 1 189 4 
28 1 353 2 122 1 85 2 25 2 326 2 189 2 70 1 
356 1 271 1 
356 1 271 1 
95 1 4 1 
95 1 4 1 
95 1 4 1 
356 1 271 1 241 1 
356 1 271 1 241 1 
356 1 271 1 241 1 
254 1 356 1 271 1 
254 1 356 1 271 1 
254 1 356 1 271 1 
352 1 356 1 271 1 
29 1 356 2 95 1 271 2 4 1 17 1 
222 1 160 1 128 2 2 2 356 2 232 2 138 1 32 1 347 1 90 2 17 1 33 1 278 1 92 2 22 3 271 2 180 2 242 2 63 1 
250 1 352 1 2 1 353 2 356 1 85 2 232 1 138 1 152 1 90 1 326 2 201 1 92 1 45 1 359 1 22 1 166 1 143 1 271 1 25 2 242 1 180 1 262 1 189 2 
330 1 320 1 124 1 
330 1 21 1 124 1 
186 1 330 3 97 1 21 1 320 2 265 1 
186 1 330 2 97 1 21 1 320 1 121 1 
186 1 330 2 97 2 21 1 320 1 
0 1 272 1 162 1 87 1 57 2 278 2 118 3 348 1 143 1 281 1 242 5 203 2 171 1 334 1 266 1 287 1 232 5 67 2 152 1 69 1 252 1 133 3 212 1 359 1 155 1 322 1 270 1 107 4 109 1 341 1 136 2 323 1 
0 3 272 2 56 1 57 6 326 1 278 5 118 8 120 1 122 1 282 1 242 9 281 2 203 6 171 3 333 1 65 1 287 3 69 1 252 3 70 1 339 1 133 9 212 3 25 1 77 1 341 3 136 6 85 1 87 2 298 1 260 1 348 2 36 5 143 4 189 1 39 1 353 1 266 1 231 5 232 9 47 1 270 1 322 6 107 7 109 2 323 1 
0 1 272 1 162 1 87 1 57 2 278 3 118 3 348 1 143 1 281 1 242 3 203 2 171 1 287 1 232 3 67 1 252 1 339 1 133 4 212 1 155 1 270 1 107 2 109 1 341 2 136 2 
0 2 272 1 162 1 87 1 57 4 278 5 118 5 348 1 143 2 281 1 242 4 203 4 171 2 39 1 287 2 232 4 67 2 252 2 133 8 339 1 212 2 47 1 155 1 270 1 107 3 77 1 109 1 341 4 136 4 
191 1 104 1 280 1 
191 1 230 1 
145 1 
191 1 18 1 
44 1 191 3 269 1 280 2 224 1 18 1 
44 1 191 1 18 1 
126 1 191 1 
0 1 171 1 286 1 197 1 198 3 239 2 192 1 86 5 43 2 117 1 91 4 340 1 227 9 135 1 328 1 61 1 157 1 
0 1 171 1 286 1 197 1 198 3 239 2 192 1 86 5 43 2 117 1 91 4 340 1 227 9 135 1 328 1 61 1 157 1 
0 1 171 1 286 1 197 1 238 1 198 3 239 2 192 1 86 5 43 2 117 1 91 4 340 1 227 9 135 1 328 1 61 1 157 1 
0 3 342 1 274 1 197 2 239 3 198 10 86 16 5 2 325 1 117 1 91 13 227 29 328 5 61 1 204 1 306 1 171 4 286 1 151 1 354 3 287 2 192 2 267 1 42 1 252 3 43 5 102 1 340 2 135 1 212 3 154 1 48 4 156 1 157 2 
0 1 197 1 239 2 198 5 86 6 5 4 325 2 117 1 227 11 91 5 328 2 61 1 306 2 171 1 286 1 192 1 42 2 43 3 132 1 102 1 340 1 156 2 50 1 157 1 
53 2 183 1 276 1 275 2 89 1 58 1 327 1 300 1 167 1 124 1 125 1 265 1 38 1 330 2 249 1 309 1 208 1 291 1 315 1 210 1 194 1 268 1 21 1 320 1 105 1 321 1 293 1 26 1 181 1 52 1 
53 3 183 1 275 3 276 2 89 1 58 1 327 1 300 1 124 1 125 1 265 1 332 1 330 2 249 1 309 1 208 1 315 1 210 1 194 1 134 1 268 1 21 1 361 1 320 1 105 1 321 1 293 1 26 1 181 1 52 1 
53 2 183 1 275 2 276 2 58 1 327 1 300 1 124 1 125 1 265 1 330 2 249 1 309 1 210 1 194 1 134 1 268 1 21 1 361 1 105 1 320 1 321 1 293 1 181 1 52 1 
205 1 332 1 53 1 249 2 309 2 183 1 191 1 208 1 275 1 233 1 194 1 18 1 299 1 140 1 165 1 105 1 321 2 243 1 293 1 26 1 148 1 181 1 52 2 
53 1 183 1 275 1 89 1 327 1 300 1 167 1 124 1 265 1 330 2 249 1 309 1 208 1 291 1 315 1 210 1 194 1 134 1 21 1 320 1 105 1 321 1 293 1 26 1 181 1 52 1 
247 1 
272 1 183 2 87 1 346 1 118 1 348 1 165 1 140 1 350 1 60 1 168 1 243 2 281 1 242 2 203 1 190 1 191 1 266 1 232 2 69 1 194 1 18 1 214 1 217 1 105 1 322 2 293 2 196 1 181 2 237 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 322 1 232 2 168 1 242 2 69 1 346 1 111 1 
272 1 214 1 266 1 217 1 350 1 60 1 232 1 168 1 281 1 242 1 87 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
214 1 217 1 350 1 60 1 232 1 168 1 242 1 346 1 
272 1 214 1 266 1 217 1 350 1 60 1 232 1 168 1 281 1 242 1 87 1 346 1 
273 2 183 8 30 1 85 1 86 1 295 1 5 4 345 1 325 2 326 1 227 2 91 1 165 1 140 1 243 2 123 1 189 1 306 2 149 1 38 1 127 2 353 1 191 3 13 2 172 1 68 1 42 2 194 2 18 2 19 1 134 1 20 1 358 1 105 2 179 1 25 1 156 2 293 8 181 7 
0 1 273 1 343 1 198 3 239 1 86 4 5 2 258 1 325 1 117 1 227 8 91 4 328 1 61 1 123 1 306 1 329 1 171 1 250 3 286 1 13 1 192 1 42 1 43 2 104 1 156 1 157 1 
0 1 273 1 343 11 198 2 295 1 86 8 5 4 258 11 325 2 91 6 227 14 328 1 35 1 306 2 285 1 329 4 171 2 250 1 335 1 13 2 354 3 151 1 287 1 267 1 15 1 234 1 42 2 43 1 252 2 212 2 358 1 48 3 156 2 
27 1 273 1 182 1 183 1 240 1 85 2 295 1 86 1 5 2 115 1 325 1 326 2 91 1 227 2 35 1 243 1 147 1 306 1 189 1 329 1 250 1 98 1 191 1 353 1 129 1 13 1 172 1 42 1 18 1 194 1 44 1 46 1 358 1 105 1 25 1 156 1 293 1 181 1 
0 3 273 3 55 1 239 1 198 11 5 6 6 1 325 3 115 2 326 3 117 1 328 5 61 1 62 1 243 1 329 7 171 3 250 3 286 1 13 3 287 2 172 1 175 2 252 2 18 2 134 1 212 2 75 2 25 1 293 3 181 3 182 1 183 3 343 7 295 1 85 3 84 2 86 11 258 7 259 2 91 11 227 22 35 1 146 2 189 1 306 3 98 2 353 1 191 2 192 1 42 3 43 6 194 2 358 1 46 2 44 2 105 2 156 3 157 1 
171 1 273 1 343 1 13 1 198 1 41 1 86 2 5 2 258 1 42 1 325 1 227 2 212 1 328 1 156 1 123 1 306 1 329 1 
0 1 64 1 273 1 343 1 13 1 198 1 287 1 5 2 258 1 42 1 325 1 43 1 227 2 91 2 156 1 123 1 306 1 329 1 
0 1 273 1 343 2 198 1 86 2 5 2 258 2 325 1 227 4 91 2 123 1 306 1 329 2 171 1 13 1 287 1 42 1 252 1 43 1 212 1 156 1 
171 1 273 1 343 1 13 1 198 1 41 1 86 2 5 2 258 1 42 1 325 1 227 2 212 1 328 1 179 1 156 1 306 1 329 1 
0 1 64 1 273 1 343 1 13 1 198 1 287 1 5 2 258 1 42 1 325 1 43 1 227 2 91 2 179 1 156 1 306 1 329 1 
0 1 273 1 343 2 198 2 86 2 5 2 258 2 325 1 227 4 91 2 328 1 306 1 329 2 171 1 13 1 287 1 42 1 252 1 43 1 212 1 179 1 156 1 
0 1 273 1 343 2 198 1 86 2 5 2 258 2 325 1 227 4 91 2 306 1 329 2 171 1 13 1 287 1 42 1 252 1 43 1 212 1 156 1 
273 1 183 1 86 1 84 1 85 1 295 1 5 2 115 1 325 1 326 1 227 2 91 1 243 1 306 1 250 1 98 1 191 1 13 1 42 1 18 1 194 1 358 1 44 1 46 1 105 1 156 1 293 1 181 1 
273 1 183 1 86 1 85 1 295 1 5 2 115 1 325 1 326 1 227 2 91 1 243 1 12 1 306 1 250 1 191 1 13 1 42 1 18 1 194 1 211 1 358 1 44 1 105 1 23 1 156 1 293 1 181 1 
0 1 273 1 343 2 198 1 86 2 5 2 258 2 325 1 227 4 91 2 35 1 306 1 329 2 171 1 13 1 287 1 42 1 252 1 43 1 212 1 156 1 
0 1 273 1 183 1 343 2 198 1 86 2 84 1 85 1 5 2 258 2 115 1 325 1 326 1 91 2 227 4 306 1 329 2 171 1 38 1 98 1 191 1 13 1 287 1 42 1 43 1 252 1 194 1 18 1 212 1 44 1 46 1 105 1 75 1 156 1 293 1 181 1 
0 1 273 1 256 1 343 1 198 1 56 1 85 1 86 2 5 2 258 1 325 1 326 1 91 1 227 3 328 1 35 1 305 1 189 1 306 1 329 1 171 1 353 1 13 1 287 1 42 1 252 1 212 1 25 1 156 1 
0 1 273 1 343 1 198 1 56 1 85 1 86 1 5 2 258 1 325 1 326 1 227 3 91 2 35 1 37 1 305 1 189 1 306 1 329 1 171 1 353 1 13 1 287 1 42 1 43 1 252 1 212 1 25 1 156 1 
159 1 113 1 0 3 198 8 239 1 5 8 325 4 117 1 328 5 61 1 171 5 286 1 287 2 252 4 209 2 290 1 71 1 72 4 212 4 253 1 31 1 86 21 296 1 227 38 91 17 187 1 144 1 301 1 188 1 306 4 310 1 151 1 354 3 192 1 267 3 42 4 43 3 357 1 102 2 48 4 156 4 50 1 157 1 
0 1 159 1 198 3 86 7 5 4 296 1 325 2 91 6 227 13 328 2 188 1 301 1 306 2 171 2 287 1 354 1 151 1 267 1 42 2 43 1 290 1 209 1 252 2 357 1 212 2 72 2 48 2 156 2 50 1 
113 1 159 1 0 4 31 1 239 1 198 8 86 19 5 6 296 1 325 3 117 1 91 17 227 36 328 4 61 1 144 1 188 1 301 1 306 3 171 5 286 1 310 1 354 2 151 1 287 3 192 1 267 2 42 3 290 1 209 1 252 4 43 4 102 2 253 1 71 1 72 3 212 4 48 3 156 3 157 1 50 1 
0 1 159 1 198 2 86 6 5 4 325 2 226 1 91 5 227 11 328 1 188 1 301 1 306 2 171 2 287 1 354 1 151 1 267 1 42 2 43 1 290 1 209 1 252 2 357 1 212 2 72 1 48 2 156 2 50 1 
0 2 159 2 113 1 31 1 198 4 86 14 5 6 296 1 325 3 91 12 227 26 328 2 144 1 188 1 301 1 306 3 171 3 310 1 354 2 287 2 267 2 42 3 290 1 43 2 209 2 252 3 102 2 253 1 72 4 71 1 212 3 48 2 156 3 50 1 
92 1 349 1 2 1 356 1 271 1 180 1 347 1 90 1 17 1 63 1 
160 1 128 1 2 1 356 1 232 1 138 1 32 1 347 1 90 1 17 1 33 1 278 1 92 1 22 2 271 1 242 1 180 1 63 1 
160 1 128 1 2 1 356 1 232 1 138 1 32 1 347 1 90 1 17 1 33 1 278 1 92 1 22 2 271 1 242 1 180 1 63 1 
160 1 128 1 2 1 356 1 232 1 138 1 32 1 347 1 90 1 17 1 33 1 278 1 92 1 22 2 271 1 242 1 180 1 63 1 
29 1 257 1 241 1 
29 1 257 1 241 1 
254 1 169 1 
29 1 254 1 169 1 
166 1 201 1 
2 1 85 2 32 1 90 1 326 2 277 1 201 1 92 1 143 1 166 1 242 1 262 1 189 2 250 1 128 1 352 1 353 2 356 1 232 1 152 1 45 1 359 1 22 1 271 1 107 1 180 1 25 2 
352 1 262 1 
92 1 1 1 248 1 206 1 2 1 356 1 271 1 180 1 90 1 
257 1 241 1 
29 1 254 1 169 1 
221 1 273 1 183 2 161 1 30 1 85 2 86 1 295 1 5 2 325 1 326 2 227 2 91 1 35 1 263 1 306 1 127 2 191 1 99 1 13 1 42 1 194 1 18 1 20 1 358 1 292 1 105 1 25 2 156 1 293 2 181 2 
330 2 38 1 207 1 309 1 183 2 223 1 315 1 194 1 134 1 327 1 21 1 300 1 320 1 105 1 24 1 293 2 124 1 265 1 181 2 
330 2 309 1 183 1 223 1 315 1 194 1 134 1 327 1 21 1 300 1 320 1 105 1 304 1 293 1 124 1 265 1 181 1 
205 1 207 1 309 1 183 1 191 1 344 1 194 1 18 1 165 1 140 1 105 1 243 1 293 1 181 1 
330 2 207 1 309 1 183 1 223 1 315 1 194 1 134 1 327 1 21 1 300 1 320 1 105 1 24 1 293 1 124 1 265 1 181 1 
313 1 
270 1 232 1 322 1 242 1 69 1 278 1 
272 2 183 4 87 2 118 2 348 2 165 1 140 1 281 2 243 2 242 3 203 2 190 1 191 1 266 1 232 3 336 2 69 2 194 1 18 1 193 1 339 1 216 1 105 1 322 4 195 1 293 4 196 2 237 1 181 4 
118 1 3 1 104 1 270 1 203 1 16 1 278 1 
54 1 272 1 87 1 278 2 118 1 302 1 281 1 242 1 203 1 266 1 232 1 69 1 133 1 318 1 322 1 270 1 341 1 
324 2 272 4 0 2 3 1 200 1 57 6 278 8 118 9 280 2 281 4 243 1 242 5 203 8 283 2 126 2 171 2 251 1 287 2 336 1 69 3 16 1 252 2 18 3 133 12 213 2 212 2 218 2 293 3 181 3 341 6 136 6 183 3 87 4 259 2 348 2 228 2 264 2 38 1 191 10 266 4 230 3 232 5 100 2 101 2 193 1 194 3 44 3 236 2 269 1 105 4 270 2 322 5 196 1 110 1 
272 2 113 1 0 2 31 1 87 2 57 5 278 5 118 8 348 1 228 1 144 1 242 1 281 2 203 5 264 2 171 2 66 1 310 1 266 2 354 1 287 2 232 1 267 1 337 1 69 1 252 2 133 6 71 1 212 2 322 1 270 2 48 1 196 1 341 3 136 5 
272 1 0 1 56 1 85 1 87 1 326 1 118 2 298 1 120 1 228 1 122 1 9 1 61 1 281 1 242 1 282 1 203 2 264 2 189 1 171 2 353 1 266 1 192 1 232 1 70 1 25 1 157 1 220 1 
272 1 266 1 3 1 87 1 16 1 278 1 118 1 270 1 281 1 203 1 
171 2 0 2 287 2 57 5 252 2 259 1 278 5 133 10 118 5 212 2 228 1 203 5 264 2 341 5 136 5 
273 1 183 1 56 2 295 1 85 3 84 1 5 2 225 1 325 1 115 1 326 3 227 1 91 1 298 1 243 1 189 2 306 1 250 1 98 1 353 2 191 1 13 1 42 1 194 1 18 1 46 1 44 1 105 1 25 2 156 1 293 1 181 1 
272 1 266 1 239 1 87 1 57 2 278 4 133 4 118 1 348 1 270 2 281 1 203 2 196 1 341 2 136 2 
92 1 360 1 90 1 
92 1 360 1 90 1 
92 1 360 1 90 1 
92 1 311 1 90 1 
92 1 311 1 90 1 
92 1 311 1 90 1 
92 1 90 1 
356 1 271 1 
112 1 92 1 166 1 347 1 90 1 
0 1 239 1 198 3 86 5 5 2 325 1 117 1 227 10 91 5 328 1 61 1 306 1 171 1 286 1 354 1 192 1 267 1 42 1 43 2 71 1 48 1 156 1 50 1 157 1 
0 1 239 1 198 4 86 7 5 4 325 2 117 1 227 13 91 6 328 2 61 1 306 2 171 2 286 1 354 1 151 1 192 1 267 1 42 2 43 2 252 1 71 1 212 1 48 2 156 2 157 1 50 1 362 1 
113 1 0 1 31 1 198 3 86 7 5 8 325 4 227 12 91 5 328 2 144 1 306 4 171 2 310 1 354 1 287 1 267 1 42 4 252 2 43 1 102 2 71 1 212 2 48 1 156 4 50 1 362 1 
113 1 0 1 31 1 198 3 86 7 5 8 325 4 227 12 91 5 328 1 144 1 306 4 171 2 310 1 354 1 287 1 267 1 42 4 252 2 43 2 102 2 71 1 212 2 48 1 156 4 50 1 362 1 
0 1 239 1 198 3 86 5 5 2 325 1 117 1 227 10 91 5 328 1 61 1 306 1 171 1 286 1 354 1 192 1 267 1 42 1 43 2 71 1 48 1 156 1 50 1 157 1 
113 1 0 1 31 1 198 4 86 7 5 6 325 3 227 12 91 5 328 2 144 1 306 3 171 2 310 1 354 1 287 1 267 1 42 3 252 2 43 2 102 2 71 1 212 2 48 1 156 3 50 1 
113 1 0 2 31 1 239 1 198 5 86 11 5 8 325 4 117 1 227 20 91 9 328 2 61 1 144 1 306 4 171 3 286 1 310 1 354 1 287 1 192 1 267 1 42 4 252 2 43 3 102 2 71 1 212 2 48 1 156 4 157 1 50 1 362 1 
113 1 0 1 31 1 198 4 86 7 5 4 325 2 227 12 91 5 328 2 144 1 306 2 171 2 310 1 354 1 287 1 267 1 42 2 357 1 252 2 43 2 71 1 212 2 48 1 156 2 50 1 
286 2 198 4 192 2 86 2 43 2 117 1 227 4 91 2 328 2 157 2 
113 1 0 2 31 1 239 1 198 5 86 11 5 8 325 4 117 1 227 20 91 9 328 2 61 1 144 1 306 4 171 3 286 1 310 1 354 1 287 1 192 1 267 1 42 4 357 1 252 2 43 3 102 2 71 1 212 2 48 1 156 4 157 1 50 1 
0 1 171 1 286 1 239 1 198 3 192 1 86 4 5 4 42 2 325 2 43 2 102 1 117 1 91 4 227 8 328 1 61 1 156 2 157 1 306 2 
0 1 171 1 286 1 239 1 198 3 192 1 86 4 43 2 117 1 227 8 91 4 328 1 104 1 61 1 157 1 
0 1 171 1 287 1 198 2 86 2 5 2 42 1 325 1 43 1 252 1 91 2 227 4 212 1 328 1 156 1 362 1 306 1 
0 1 171 1 287 1 354 1 151 1 198 2 86 3 267 1 43 1 252 1 91 4 227 7 212 1 328 1 48 2 
0 3 239 1 198 9 86 11 5 4 163 1 325 2 117 1 227 23 91 12 328 4 61 1 306 2 285 1 171 3 286 1 151 1 354 2 287 2 192 2 15 1 42 2 252 2 43 5 102 2 212 2 48 2 156 2 157 2 
227 1 91 1 48 1 
227 1 354 1 86 1 
171 1 0 1 198 4 287 1 86 3 5 2 42 1 325 1 252 1 43 2 259 1 91 3 227 6 212 1 328 2 156 1 306 1 362 1 
113 1 0 1 31 1 198 4 86 7 5 2 325 1 227 12 91 5 328 2 144 1 306 1 171 2 310 1 354 1 287 1 267 1 42 1 252 2 43 2 71 1 212 2 48 1 156 1 50 1 
171 1 0 1 198 2 192 1 86 3 43 1 227 6 91 3 328 1 61 1 157 1 
286 1 198 2 192 1 86 1 5 2 163 1 42 1 325 1 43 1 102 1 117 1 91 2 227 3 328 1 156 1 157 1 306 1 
171 2 0 2 198 4 192 1 86 5 43 2 227 10 91 5 328 2 9 1 61 1 157 1 
171 1 198 1 86 2 5 2 42 1 325 1 227 2 212 1 328 1 156 1 50 1 306 1 
0 1 171 1 198 1 287 1 86 2 5 2 42 1 325 1 43 1 252 1 91 2 227 4 212 1 156 1 50 1 306 1 
198 2 192 1 86 1 5 2 42 1 325 1 43 1 91 1 227 2 328 1 156 1 50 1 157 1 306 1 
342 1 0 4 274 1 239 1 198 12 86 17 5 10 163 1 325 5 117 1 91 17 227 34 328 6 61 2 306 5 171 5 286 1 354 3 151 1 287 2 192 3 267 1 42 5 43 6 357 1 252 3 102 2 212 3 154 1 48 4 156 5 157 3 50 1 362 1 
184 1 346 1 78 1 
96 1 177 1 184 1 150 1 261 1 346 1 78 1 307 1 
330 1 327 1 21 1 183 1 105 1 243 1 293 1 124 1 181 1 194 1 
38 1 183 2 191 1 30 1 18 1 194 1 134 1 105 1 293 2 263 1 181 2 
140 1 165 1 183 1 191 1 104 1 105 1 243 1 293 1 181 1 194 1 18 1 
250 1 98 1 183 1 191 1 353 1 172 1 85 2 115 1 326 2 18 1 194 1 44 1 105 1 25 1 243 1 293 1 189 1 181 1 
183 1 85 2 115 1 326 2 122 1 303 1 189 1 126 1 250 1 98 1 353 2 191 3 355 1 172 1 336 1 194 1 18 2 213 1 44 2 105 1 25 2 293 1 181 1 
126 1 250 1 183 2 191 3 353 2 355 1 172 1 85 2 336 1 115 1 326 2 18 2 194 1 213 1 44 2 142 1 105 1 122 1 303 1 25 2 23 1 293 2 189 1 181 2 
126 1 183 3 191 4 230 1 232 2 336 1 131 1 101 1 278 1 18 1 194 1 213 1 44 1 142 1 105 1 270 1 322 1 280 1 243 1 242 2 293 3 158 1 181 3 
126 1 183 3 191 4 230 1 232 2 336 1 101 1 278 1 18 1 194 1 213 1 44 1 142 1 105 1 270 1 322 1 280 1 243 1 242 2 293 3 283 1 181 3 
19 1 183 1 105 1 293 1 181 1 194 1 
127 1 38 1 183 7 191 3 30 1 80 1 68 1 174 1 345 1 18 2 194 2 19 1 134 1 44 1 73 1 269 1 105 3 243 2 293 7 181 6 149 1 
0 1 273 2 161 1 183 1 343 1 239 1 198 3 86 4 85 2 84 1 5 4 258 1 115 1 325 2 326 2 117 1 91 4 227 8 328 1 35 1 61 1 146 1 306 2 189 1 329 1 171 1 38 1 250 3 98 1 286 1 191 1 353 1 13 2 192 1 172 1 42 2 43 2 18 1 194 1 44 1 46 1 105 1 75 1 25 1 156 2 293 1 157 1 181 1 
272 2 324 1 183 1 3 1 87 2 278 1 118 1 280 1 243 1 281 2 242 3 203 1 283 1 191 2 266 2 230 1 232 3 69 1 101 1 16 1 193 1 236 1 270 1 322 2 107 1 218 1 293 1 181 1 
38 1 19 1 44 1 183 2 191 2 269 1 105 2 280 1 200 1 293 2 181 2 194 1 18 1 
38 1 183 4 191 1 18 1 194 1 165 1 140 1 142 1 319 1 105 1 243 1 293 4 181 4 
183 2 191 1 80 1 294 1 336 1 174 1 338 1 18 1 194 1 44 1 105 2 62 1 293 2 181 2 
38 1 183 5 191 3 30 1 336 1 68 1 18 2 194 2 140 1 165 1 319 1 105 2 243 1 293 5 181 4 149 1 
38 1 183 5 191 3 30 1 336 1 18 2 194 2 140 1 165 1 319 1 105 2 243 1 293 5 181 4 170 1 149 1 
250 1 183 1 191 1 353 1 172 1 85 2 115 1 326 2 18 1 194 1 44 1 105 1 25 1 243 1 23 1 293 1 189 1 181 1 
183 1 191 1 80 1 174 1 336 1 18 1 194 1 44 1 73 1 269 1 105 2 293 1 181 1 
221 1 99 1 85 1 289 1 326 1 8 1 292 1 106 1 25 1 
137 1 289 1 246 1 
34 1 250 1 106 1 289 1 8 1 
331 1 250 1 355 1 137 1 288 1 232 2 101 1 289 1 278 1 8 2 34 2 202 1 270 1 122 1 303 1 106 2 107 1 242 2 246 1 
53 4 351 1 208 1 130 1 276 2 275 4 116 1 58 2 268 3 178 1 255 1 26 1 125 2 284 1 
53 2 208 1 275 2 276 1 139 1 297 1 58 1 268 1 103 1 167 1 26 1 125 1 
58 1 53 3 308 1 351 2 268 1 208 1 178 1 167 1 255 2 275 3 26 1 125 1 
268 2 279 1 176 1 7 2 
53 1 119 1 208 1 167 1 275 1 26 1 
58 1 53 2 268 1 208 1 167 1 276 1 275 2 76 1 26 1 125 1 
14 1 
58 1 268 1 104 1 125 1 
58 1 53 1 268 1 208 1 275 1 26 1 125 1 
249 1 275 1 52 1 
53 3 351 1 229 1 208 1 275 3 58 1 268 1 178 1 167 1 255 2 26 1 125 1 
58 1 53 2 268 1 208 1 276 1 275 2 40 1 26 1 125 1 
53 1 330 1 208 1 130 1 275 1 199 1 268 1 167 1 320 1 26 1 124 1 
58 1 53 1 268 1 208 1 167 1 275 1 26 1 
58 2 53 1 208 1 167 1 275 1 26 1 125 1 
53 2 114 1 208 2 81 1 275 2 58 1 268 1 94 1 167 1 26 2 
53 3 208 1 130 1 275 3 276 2 116 1 58 1 268 2 167 1 76 1 26 1 125 1 51 1 
330 2 53 2 208 1 275 2 276 1 58 1 268 1 21 1 167 1 215 1 320 1 26 1 124 1 125 1 265 1 
53 4 208 2 130 1 275 4 276 2 40 1 116 1 58 1 268 2 167 1 11 1 26 2 125 1 
58 1 53 1 268 1 208 1 167 1 275 1 26 1 125 1 
53 3 208 1 276 1 275 3 58 1 268 1 167 1 255 1 76 1 26 1 125 1 
268 1 130 1 284 1 116 1 
58 1 268 1 
58 1 53 1 268 1 208 1 167 1 275 1 26 1 125 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (69,72) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (69,72) 9 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (69,72) 9 313 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 254 203 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 347 203 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 254 203 140 102 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 172 171 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
113 3 150 1 305 2 334 9 246 1 155 1 141 2 229 2 317 4 166 1 346 1 106 6 210 1 291 1 280 1 256 1 60 9 61 5 214 1 294 1 350 2 282 1 194 2 260 1 261 1 83 1 220 2 266 2 
113 3 150 1 305 2 334 9 246 1 155 1 141 2 317 4 229 2 166 1 346 1 106 6 210 1 291 1 280 1 256 1 60 9 61 5 214 1 294 1 350 2 282 1 194 2 260 1 261 1 83 1 220 2 266 2 
113 4 150 1 305 2 334 10 246 1 155 1 141 2 317 5 229 2 166 1 346 1 106 7 210 1 291 1 280 1 256 1 60 10 61 6 214 1 294 1 350 2 282 1 194 2 260 1 261 1 83 1 220 2 266 2 
113 2 150 1 305 2 334 7 246 1 155 1 141 2 317 3 229 1 166 1 346 1 106 4 210 1 291 1 280 1 256 1 60 7 61 4 214 1 294 1 350 2 282 1 194 2 260 1 261 1 220 2 266 2 
166 1 346 1 113 1 106 3 305 1 334 4 60 4 214 1 61 3 155 1 350 1 260 1 83 1 266 1 220 1 141 1 229 2 317 2 
166 1 346 1 150 1 43 1 305 1 46 1 210 1 334 2 61 1 60 2 155 1 350 1 259 1 194 1 266 1 141 1 
166 1 346 1 113 1 106 1 305 2 334 3 60 3 61 2 294 1 155 1 350 2 194 1 317 1 
113 3 305 2 334 9 155 1 141 1 317 4 229 2 166 1 346 1 106 7 126 1 319 1 291 1 280 1 60 9 61 5 214 1 294 1 350 2 194 1 260 1 83 1 220 1 266 1 
113 3 305 2 334 9 155 1 141 1 317 4 229 2 166 1 346 1 106 7 126 1 319 1 291 1 280 1 60 9 61 5 214 1 294 1 350 2 194 1 260 1 83 1 220 1 266 1 
100 1 77 1 15 1 
175 2 326 1 15 1 
237 2 18 2 131 2 180 2 211 2 54 2 273 1 164 1 
89 1 285 1 18 2 114 1 180 3 273 1 95 1 224 1 154 1 205 1 50 1 315 2 139 1 161 1 53 1 340 1 54 2 164 1 252 1 167 1 279 1 168 1 170 2 255 1 211 3 81 2 193 2 237 2 297 1 131 2 221 2 267 1 177 1 86 1 39 1 40 1 41 1 
237 1 18 1 253 1 131 1 24 1 180 1 211 1 54 1 273 1 309 1 
199 1 18 1 231 1 180 1 307 1 211 1 309 1 136 1 321 1 226 1 13 1 217 1 100 1 15 1 
18 1 231 1 180 1 307 1 211 1 136 2 309 1 237 1 226 1 13 2 131 1 217 1 100 1 54 1 15 1 
142 1 248 1 13 1 196 1 136 1 
144 1 248 1 13 2 100 1 14 1 15 1 196 1 136 2 
248 1 13 1 136 1 
18 1 253 1 180 1 273 1 211 1 309 1 136 1 237 1 13 1 21 1 131 1 24 1 54 1 196 1 
15 1 
248 1 13 2 100 1 14 1 148 1 15 1 196 1 136 2 
289 2 201 1 12 1 169 1 281 1 3 2 136 5 248 2 13 5 158 2 33 1 74 1 311 1 351 1 100 1 14 1 15 1 196 2 87 1 
327 1 252 1 18 1 59 1 279 1 180 2 255 1 211 2 224 1 81 1 237 1 99 1 315 1 53 1 161 1 221 1 340 1 54 1 40 1 41 1 
77 1 164 1 
18 2 180 2 128 1 211 2 286 1 237 1 131 1 54 1 164 2 
99 1 47 1 232 1 
252 1 180 1 279 1 211 1 255 1 224 1 81 1 322 1 315 1 221 1 161 1 53 1 340 1 40 1 164 1 41 1 
237 3 18 3 131 1 59 1 180 3 211 3 54 3 164 1 
237 1 18 1 24 1 180 1 211 1 54 1 309 1 
237 1 18 1 131 1 180 1 128 1 211 1 54 1 309 1 286 1 
89 1 285 1 327 1 18 3 114 1 180 4 307 1 273 1 224 1 95 1 309 1 136 1 205 1 226 1 315 1 53 1 161 1 340 1 54 3 163 1 164 1 252 1 167 1 59 1 231 1 279 1 128 1 170 1 255 1 211 4 81 1 193 2 237 3 13 1 297 1 131 2 217 1 64 1 221 1 177 1 86 1 39 1 40 1 41 1 
321 1 237 1 18 2 263 1 59 1 180 2 211 2 54 1 164 1 
327 1 18 3 59 2 231 1 128 1 180 3 307 1 211 3 136 1 309 1 237 3 13 1 226 1 131 1 218 1 217 1 64 1 54 3 15 1 
18 2 59 1 128 1 180 2 232 1 211 2 237 2 99 1 131 1 54 2 
252 1 180 1 279 1 211 1 255 1 224 1 81 1 315 1 221 1 161 1 53 1 340 1 40 1 164 1 41 1 
30 1 230 1 252 1 180 1 279 1 211 1 255 1 81 1 315 1 221 1 161 1 53 1 340 1 164 1 41 1 
285 1 89 1 200 1 167 1 114 1 93 1 347 1 170 1 193 2 205 1 310 1 297 1 265 1 86 1 
237 1 18 1 217 1 180 1 211 1 54 1 162 1 309 1 
327 1 18 5 59 2 180 5 128 1 211 5 321 1 237 4 216 1 131 1 263 1 52 1 54 4 164 1 
237 2 18 2 24 1 180 2 162 1 211 2 54 2 309 1 
78 1 72 1 
78 1 72 1 
239 1 69 1 
239 1 69 1 
239 1 69 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 72 1 
78 1 10 1 72 1 9 1 
78 1 13 1 10 1 313 1 72 1 9 1 136 1 
266 1 220 1 141 1 
43 1 266 1 141 1 
65 1 42 1 43 1 220 2 141 3 207 1 
65 1 302 1 42 1 43 1 220 1 141 2 
65 2 42 1 43 1 220 1 141 2 
303 1 90 1 201 2 271 1 203 1 3 1 136 5 248 1 310 1 97 1 274 1 158 1 288 1 124 1 100 1 289 1 347 1 233 2 169 1 254 1 281 1 213 1 13 5 63 1 241 1 14 1 196 4 15 1 
67 1 303 3 90 2 201 5 271 1 203 3 3 2 136 9 5 1 248 6 49 1 310 3 250 5 158 2 288 2 100 1 142 5 289 2 347 3 169 3 254 3 281 1 109 1 258 1 63 4 13 9 14 1 16 1 196 7 15 2 87 1 
303 1 18 1 90 1 201 2 180 1 273 1 203 1 3 1 309 1 136 3 310 1 97 1 21 1 158 1 24 1 288 1 100 1 54 1 289 1 253 1 347 1 233 1 169 1 211 1 254 1 213 1 237 1 13 3 63 1 131 1 15 1 196 2 87 1 
67 1 303 2 18 1 90 1 201 3 180 1 273 1 203 2 3 1 309 1 136 4 310 2 97 1 21 1 158 1 24 1 288 1 100 1 54 1 289 1 253 1 347 2 233 2 169 2 211 1 254 2 213 1 237 1 109 1 13 4 63 2 131 1 15 1 16 1 196 3 87 1 
312 1 255 1 77 1 
204 1 255 1 
22 1 
279 1 255 1 
337 1 105 1 312 2 279 1 255 3 41 1 
279 1 255 1 41 1 
333 1 255 1 
284 1 303 1 68 1 330 2 92 1 167 2 190 2 170 6 292 1 96 1 348 1 172 1 186 1 324 3 139 4 147 1 
284 1 303 1 68 1 330 2 92 1 167 2 190 2 170 6 292 1 96 1 348 1 172 1 186 1 324 3 139 4 147 1 
284 1 303 1 68 1 330 2 92 1 167 2 190 2 170 6 292 1 96 1 348 1 172 1 73 1 186 1 324 3 139 4 147 1 
284 2 89 2 68 1 303 5 330 3 92 2 203 4 19 4 96 2 205 2 310 4 185 1 121 1 122 1 338 1 186 2 123 1 75 1 139 14 227 2 165 1 167 12 190 3 347 4 292 1 170 26 254 4 348 1 172 1 193 4 297 2 264 1 324 5 298 4 86 2 147 2 
284 2 89 2 303 1 68 1 330 3 92 1 96 1 205 2 186 1 139 5 227 1 343 1 167 3 190 2 170 8 348 1 172 1 193 4 349 1 297 2 324 5 86 2 147 1 
44 1 43 1 305 1 334 2 94 1 155 1 184 1 315 1 23 1 161 1 342 1 141 2 276 1 189 1 207 1 166 1 252 1 346 1 106 1 11 1 209 1 61 1 60 2 236 1 81 1 350 1 194 1 266 1 220 1 221 1 
304 1 44 1 43 1 305 1 334 3 94 1 155 1 184 1 315 1 161 1 342 1 141 2 207 1 189 1 252 1 346 1 11 1 106 2 209 1 61 1 60 3 236 1 81 1 350 1 194 1 266 1 220 1 221 1 243 1 283 1 
44 1 43 1 334 2 94 1 155 1 184 1 315 1 161 1 342 1 141 2 207 1 252 1 346 1 11 1 106 2 209 1 61 1 60 2 81 1 194 1 221 1 220 1 266 1 243 1 283 1 
66 1 104 1 304 1 328 1 252 1 11 2 44 2 279 1 272 1 305 1 209 2 334 1 255 1 60 1 81 1 350 1 173 1 194 2 315 1 161 1 195 1 221 1 340 1 
44 1 43 1 305 1 334 1 94 1 184 1 315 1 23 1 161 1 342 1 141 2 189 1 207 1 166 1 252 1 11 1 209 1 60 1 236 1 81 1 350 1 194 1 266 1 220 1 221 1 243 1 
353 1 
269 1 90 1 179 1 180 1 307 1 3 1 136 5 309 1 6 2 226 1 138 1 315 2 100 1 231 1 279 1 191 1 234 2 235 1 281 1 321 1 13 5 195 1 110 1 326 2 14 3 325 4 15 2 66 1 197 1 111 1 199 1 18 1 201 2 245 2 116 2 20 1 120 2 248 6 158 1 339 2 125 2 161 1 28 1 340 2 289 1 252 1 169 2 255 1 211 1 81 2 130 1 295 1 217 1 175 2 221 2 
199 1 18 1 180 1 307 1 136 3 309 1 248 2 226 1 138 1 28 1 339 1 231 1 191 1 211 1 321 1 295 1 13 3 217 1 110 1 325 2 148 1 14 1 
199 1 18 1 180 1 245 1 307 1 136 3 309 1 248 1 226 1 138 1 28 1 100 1 231 1 191 1 211 1 321 1 295 1 13 3 217 1 110 1 325 3 148 1 14 1 15 1 
199 1 18 1 180 1 245 1 307 1 116 1 136 3 309 1 248 2 226 1 138 1 28 1 339 1 100 1 231 1 191 1 211 1 321 1 295 1 13 3 217 1 110 1 14 1 148 1 325 3 15 1 
180 1 307 1 3 1 309 1 136 5 6 2 226 1 138 1 100 5 103 1 231 1 191 1 234 2 281 1 321 1 13 5 110 1 325 6 148 1 14 3 326 2 15 5 112 1 199 1 18 1 201 1 245 4 116 4 118 1 153 1 20 1 120 2 248 7 158 1 339 4 28 1 125 2 289 1 169 1 211 1 212 1 130 1 295 1 217 1 
199 1 18 1 179 1 201 1 180 1 245 2 307 1 116 2 3 1 20 1 136 4 309 1 120 2 6 2 248 4 158 1 226 1 138 1 339 2 125 2 28 1 100 1 289 1 231 1 191 1 234 2 169 1 211 1 281 1 130 1 295 1 321 1 13 4 217 1 175 2 110 1 14 2 326 2 325 4 15 2 
199 1 18 1 201 1 180 1 245 2 307 1 116 2 118 1 3 1 20 1 136 4 309 1 120 2 6 2 248 4 226 1 158 1 138 1 339 2 125 2 28 1 100 1 103 1 289 1 231 1 191 1 234 2 169 1 212 1 211 1 281 1 130 1 321 1 295 1 13 4 217 1 110 1 14 2 326 2 325 4 15 1 
199 1 18 1 201 1 180 1 245 2 307 1 116 2 118 1 3 1 20 1 136 4 309 1 120 2 6 2 248 4 226 1 158 1 138 1 339 2 125 2 28 1 100 1 103 1 289 1 231 1 191 1 234 2 169 1 212 1 211 1 281 1 130 1 321 1 295 1 13 4 217 1 110 1 14 2 326 2 325 4 15 1 
199 1 18 1 201 1 180 1 245 2 307 1 116 2 202 1 335 2 3 1 20 1 136 4 309 1 120 2 6 2 248 4 226 1 158 1 138 1 339 2 28 1 100 1 289 1 345 1 290 1 231 1 191 1 169 1 212 1 211 1 281 1 321 1 295 1 13 4 262 2 217 1 175 2 110 1 14 2 325 4 15 1 
199 1 18 1 201 1 180 1 245 3 307 1 116 3 118 1 3 1 153 1 20 1 136 4 309 1 120 2 6 2 248 5 158 1 226 1 138 1 125 2 28 1 339 3 100 1 103 1 289 1 231 1 191 1 234 2 169 1 212 1 211 1 281 1 130 1 321 1 295 1 13 4 217 1 110 1 14 2 326 2 325 5 15 1 
199 1 18 1 201 1 180 1 245 3 307 1 116 3 118 1 3 1 153 1 20 1 136 4 309 1 120 2 6 2 248 5 158 1 226 1 138 1 125 2 28 1 339 3 100 1 103 1 289 1 231 1 191 1 234 2 169 1 212 1 211 1 281 1 130 1 321 1 295 1 13 4 217 1 110 1 14 2 326 2 325 5 15 1 
199 1 18 1 179 1 201 1 180 1 245 2 307 1 116 2 202 1 335 2 3 1 20 1 136 4 309 1 120 2 6 2 248 4 158 1 226 1 138 1 339 2 28 1 100 1 289 1 231 1 191 1 169 1 211 1 281 1 295 1 321 1 13 4 262 2 217 1 175 2 110 1 14 2 325 4 15 1 
284 1 285 1 89 1 303 1 68 1 330 2 92 1 167 2 114 1 190 1 47 1 93 1 232 1 170 5 348 1 172 1 193 2 205 1 99 1 297 1 139 3 324 3 86 1 77 1 147 1 164 2 
89 2 285 2 303 2 332 1 114 1 47 8 203 2 19 3 205 2 310 2 121 1 338 1 99 8 75 1 139 6 164 1 143 1 167 6 168 1 347 2 232 1 170 12 254 2 80 1 193 4 297 2 298 3 146 1 86 2 39 1 
89 1 285 1 327 1 18 1 114 1 180 2 224 1 287 1 205 1 315 1 314 1 139 1 53 1 161 1 340 1 54 1 164 1 252 1 143 1 167 1 59 1 279 1 168 1 232 1 255 1 211 2 170 2 81 1 193 2 237 1 34 1 322 1 297 1 221 1 86 1 40 1 39 1 41 1 
89 3 303 3 92 1 1 2 180 3 47 3 224 2 310 2 99 3 315 1 139 8 53 2 54 1 277 1 143 1 190 1 59 1 279 2 232 3 193 6 237 1 324 3 147 1 284 1 327 1 285 3 68 1 18 1 330 2 331 2 114 3 203 2 156 1 205 3 251 2 161 2 340 1 164 2 252 2 167 7 168 1 347 2 211 3 170 15 255 2 254 2 348 1 81 1 172 1 297 3 221 1 177 2 86 3 39 1 40 2 41 2 222 2 
66 1 89 2 285 2 18 1 91 1 114 2 180 1 93 1 182 1 48 1 154 2 205 2 157 1 315 8 76 1 139 1 161 2 340 2 54 1 276 1 208 1 252 2 167 1 59 1 279 2 168 1 211 1 255 3 170 2 293 1 81 8 193 4 237 1 297 2 221 7 195 1 86 2 243 1 39 1 
285 1 89 1 303 1 18 1 143 1 114 1 180 1 128 1 170 2 254 1 203 1 211 1 193 2 205 1 238 1 237 1 297 1 131 1 139 2 54 1 86 1 
285 1 89 1 303 1 114 1 135 1 93 1 170 1 254 1 193 2 205 1 297 1 139 1 86 1 
285 1 89 1 200 1 114 1 167 1 93 1 347 1 170 1 193 2 205 1 310 1 297 1 86 1 
285 1 89 1 303 1 167 1 114 1 347 1 93 1 170 2 203 1 254 1 193 2 205 1 310 1 297 1 139 1 86 1 
285 1 89 1 303 1 114 1 135 1 182 1 170 1 254 1 193 2 205 1 297 1 139 1 86 1 
285 1 89 1 200 1 114 1 167 1 182 1 347 1 170 1 193 2 205 1 310 1 297 1 86 1 
285 1 89 1 303 1 167 1 114 1 347 1 182 1 170 2 203 1 254 1 193 2 205 1 310 1 297 1 139 1 86 1 
285 1 89 1 303 1 167 1 114 1 347 1 203 1 254 1 170 2 193 2 205 1 310 1 297 1 139 1 86 1 
285 1 89 1 114 1 180 1 224 1 205 1 315 1 139 1 53 1 161 1 340 1 164 1 252 1 167 1 279 1 168 1 170 2 255 1 211 1 81 1 193 2 297 1 221 1 177 1 86 1 40 1 39 1 41 1 
285 1 89 1 114 1 180 1 205 1 315 1 139 1 53 1 161 1 340 1 164 1 30 1 230 1 252 1 167 1 279 1 168 1 170 2 255 1 211 1 81 1 193 2 323 1 297 1 221 1 86 1 39 1 41 1 
285 1 89 1 303 1 143 1 167 1 114 1 347 1 170 2 203 1 254 1 193 2 205 1 310 1 297 1 139 1 86 1 
285 1 89 1 303 1 331 1 114 1 180 1 203 1 224 1 205 1 310 1 315 1 139 1 53 1 161 1 276 1 252 1 167 1 279 1 347 1 170 2 254 1 255 1 211 1 81 1 193 2 297 1 221 1 177 1 86 1 40 1 41 1 
285 1 89 1 303 1 18 1 143 1 167 2 114 1 180 1 128 1 347 1 170 3 254 1 203 1 211 1 4 1 193 2 205 1 310 1 237 1 297 1 131 1 139 1 54 1 86 1 
89 2 303 7 149 1 203 7 19 4 119 1 205 2 310 7 137 1 121 2 338 2 75 2 139 14 25 1 29 1 140 1 341 2 102 1 167 14 347 7 107 1 170 28 254 7 193 4 349 1 240 1 297 2 82 1 176 1 298 4 86 2 268 1 301 1 
89 1 303 2 149 1 203 2 19 2 205 1 310 2 338 2 316 1 139 7 25 1 29 1 140 1 341 2 102 1 167 7 347 2 107 1 170 14 254 2 193 2 349 1 240 1 297 1 82 1 176 2 298 2 86 1 268 1 301 2 
89 2 303 7 149 1 203 7 19 4 205 2 310 7 137 1 121 2 338 2 75 2 316 1 139 15 25 1 29 1 140 1 341 3 102 1 167 15 347 7 107 1 170 30 254 7 193 4 349 1 240 1 297 2 82 1 176 1 298 4 86 2 268 1 301 1 
89 2 303 7 149 1 203 7 19 4 205 2 310 7 137 1 121 2 338 2 75 2 316 1 139 15 25 1 29 1 140 1 341 3 102 1 167 15 347 7 107 1 170 30 254 7 193 4 349 1 240 1 297 2 82 1 176 1 298 4 86 2 268 1 301 1 
284 1 89 1 68 1 303 8 330 1 92 1 149 1 203 7 19 4 205 1 310 7 121 2 338 2 75 2 316 1 139 18 25 1 29 1 140 1 341 3 102 1 167 16 190 1 347 7 107 1 170 34 254 7 348 1 172 1 193 2 349 1 240 1 297 1 82 1 324 2 176 1 298 4 86 1 147 1 268 1 301 1 
285 1 89 1 18 2 91 1 114 1 180 2 71 1 154 2 205 1 315 2 139 1 8 1 161 1 208 1 252 1 143 1 167 1 127 1 279 1 168 1 255 1 211 2 170 2 215 1 81 2 193 2 297 1 221 2 38 1 86 1 39 1 
252 1 43 1 44 1 94 1 236 1 81 2 315 2 51 1 159 1 266 1 220 1 161 1 221 2 27 1 141 2 243 1 342 1 276 1 207 1 
252 1 43 1 44 1 94 1 236 1 81 1 174 1 315 1 266 1 220 1 221 1 27 1 161 1 141 2 243 1 342 1 207 1 
66 1 252 1 44 1 279 1 117 1 255 1 81 1 173 1 315 1 51 1 161 1 221 1 195 1 340 1 
252 1 43 1 44 1 94 1 236 1 81 1 315 1 51 1 159 1 266 1 220 1 221 1 27 1 161 1 141 2 243 1 342 1 207 1 
206 1 
33 1 201 1 351 1 100 1 169 1 77 1 15 1 
201 1 3 1 136 1 248 1 158 1 125 1 100 1 289 1 234 1 169 1 281 1 130 1 13 1 175 1 326 1 14 1 15 2 
303 2 90 2 223 1 2 2 306 1 3 3 136 5 310 2 226 2 315 1 312 2 100 1 105 1 279 1 281 3 13 5 14 3 326 2 15 3 197 1 17 2 115 2 201 6 203 2 204 3 247 2 248 5 158 3 251 2 26 2 161 1 340 1 31 1 289 3 252 2 347 2 169 5 255 6 254 2 81 1 296 2 175 4 221 1 37 2 41 1 
303 1 289 1 201 2 169 3 254 1 203 1 281 1 3 1 19 1 158 1 338 1 298 1 26 3 175 4 37 3 140 1 326 2 102 1 268 1 15 2 
303 1 289 1 92 1 201 2 169 2 281 1 3 1 171 1 136 1 172 1 310 1 13 1 158 1 352 1 103 1 147 1 
289 1 201 1 169 1 281 1 3 1 158 1 33 1 351 1 100 1 15 1 
310 1 303 1 201 1 347 1 169 1 254 1 203 1 
248 1 13 1 100 1 14 1 15 1 136 1 
66 1 198 2 111 1 197 2 269 1 90 2 201 2 181 1 3 2 136 3 248 4 336 1 158 2 315 4 161 1 340 2 289 2 252 1 318 1 279 1 169 2 255 1 281 1 81 4 13 3 221 4 195 1 14 2 87 1 
89 1 285 1 18 2 114 1 180 3 273 1 95 1 224 1 205 1 315 1 161 1 53 1 340 1 54 2 164 1 252 1 167 1 279 1 170 1 211 3 255 1 81 1 193 2 237 2 131 2 297 1 221 1 177 1 86 1 39 1 40 1 41 1 
289 1 197 1 90 1 201 1 190 1 169 2 281 1 3 1 158 1 175 4 26 2 37 2 100 2 326 2 15 4 
257 1 36 1 188 1 
32 1 257 1 275 1 160 1 188 1 
257 1 36 1 188 1 
257 1 36 1 188 1 
257 1 0 1 188 1 
257 1 0 1 188 1 
257 1 0 1 188 1 
257 1 188 1 
78 1 72 1 
284 1 89 2 303 1 68 1 330 2 92 1 167 2 190 1 170 5 348 1 172 1 193 4 205 2 297 2 139 3 324 3 227 1 86 2 147 1 
284 1 303 1 68 1 92 1 330 2 167 2 190 1 170 5 348 1 172 1 324 3 139 3 77 1 147 1 
89 1 303 1 167 1 70 1 347 1 203 1 254 1 170 2 193 2 205 1 310 1 297 1 139 1 86 1 
303 2 167 4 347 2 170 8 203 2 254 2 19 2 310 2 121 1 338 1 75 1 139 4 298 2 
284 2 89 2 303 3 68 1 330 3 92 2 203 2 19 2 205 2 310 2 185 1 121 1 75 1 139 8 227 2 167 8 190 1 347 2 254 2 170 16 348 1 172 1 193 4 297 2 324 5 298 2 146 1 86 2 147 2 
167 1 170 1 19 1 
139 1 298 1 170 1 
310 1 303 1 167 2 251 1 139 2 347 1 254 1 203 1 170 4 
89 1 303 2 149 1 167 4 347 2 107 1 254 2 203 2 170 8 19 1 193 2 205 1 310 2 349 1 338 1 297 1 139 4 298 1 140 1 86 1 102 1 268 1 
172 1 303 1 139 1 170 1 
284 1 89 1 68 1 330 1 92 1 167 2 170 3 348 1 193 2 205 1 185 1 297 1 139 1 324 2 227 1 86 1 147 1 
284 2 303 2 92 1 330 2 167 3 170 6 171 1 172 1 310 1 324 4 139 3 147 1 
205 1 193 2 89 1 303 1 349 1 297 1 139 1 170 1 254 1 86 1 
89 1 303 1 167 1 347 1 203 1 254 1 170 2 193 2 205 1 310 1 349 1 297 1 139 1 86 1 
284 1 89 1 92 1 330 1 167 1 170 2 193 2 205 1 349 1 297 1 324 2 139 1 86 1 147 1 
284 2 89 5 68 1 303 6 330 3 92 2 70 1 203 4 19 4 205 5 185 1 310 4 137 1 121 1 338 1 122 1 75 1 139 13 227 2 165 1 167 12 190 1 347 4 170 25 254 4 348 1 172 2 193 10 349 1 297 5 264 1 324 5 298 4 86 5 147 2 
284 1 89 1 303 1 68 1 92 1 330 2 19 1 205 1 338 1 139 4 102 1 167 3 190 1 170 7 348 1 172 1 193 2 349 1 297 1 324 3 298 1 86 1 147 1 
89 2 303 4 149 1 70 1 203 4 19 2 205 2 310 4 121 1 338 1 75 1 139 7 140 1 102 1 167 7 347 4 107 1 170 14 254 4 193 4 349 1 297 2 298 2 86 2 268 1 
89 2 303 2 149 1 70 1 203 2 19 1 205 2 310 2 338 1 139 4 140 1 102 1 167 4 347 2 107 1 170 8 254 2 193 4 349 1 297 2 298 1 86 2 268 1 
89 2 303 2 149 1 70 1 203 2 19 1 205 2 310 2 338 1 139 4 140 1 102 1 167 4 347 2 107 1 170 8 254 2 193 4 349 1 297 2 298 1 86 2 268 1 
284 1 89 1 303 1 68 1 92 1 330 2 19 1 205 1 338 1 139 4 102 1 167 3 190 1 170 7 348 1 172 1 193 2 349 1 297 1 324 3 298 1 86 1 147 1 
89 1 303 2 149 1 167 4 347 2 107 1 254 2 203 2 170 8 19 1 193 2 205 1 310 2 349 1 338 1 297 1 139 4 298 1 140 1 86 1 102 1 268 1 
89 2 303 2 149 1 70 1 203 2 19 1 205 2 310 2 338 1 139 4 140 1 102 1 167 4 347 2 107 1 170 8 254 2 193 4 349 1 297 2 298 1 86 2 268 1 
89 2 303 2 149 1 203 2 19 1 205 2 310 2 137 1 338 1 139 4 140 1 102 1 167 4 347 2 107 1 170 8 254 2 193 4 349 1 297 2 298 1 86 2 268 1 
284 2 68 2 92 2 330 2 167 2 170 4 348 1 324 4 139 2 147 2 
89 2 303 2 149 1 203 2 19 1 205 2 310 2 137 1 338 1 139 4 140 1 102 1 167 4 347 2 107 1 170 8 254 2 193 4 349 1 297 2 298 1 86 2 268 1 
321 1 18 1 98 1 263 1 180 1 211 1 164 1 
178 1 270 1 18 1 180 1 152 1 211 1 321 1 98 1 85 1 263 1 101 1 164 1 
66 1 252 1 315 1 279 1 161 1 195 1 221 1 340 1 255 1 77 1 81 1 
252 1 18 1 59 1 279 1 180 2 255 1 211 2 81 1 237 1 315 1 53 1 221 1 161 1 340 1 54 1 40 1 164 1 41 1 
198 1 18 2 333 1 180 2 309 1 315 1 161 1 53 1 54 2 164 1 252 1 59 1 231 1 279 2 211 2 255 3 81 1 237 1 145 1 217 1 221 1 40 1 41 2 
198 1 18 2 333 1 180 2 309 1 315 2 161 1 53 1 54 2 164 1 230 1 252 1 59 1 231 1 279 2 211 2 255 3 320 1 81 2 237 1 145 1 217 1 221 2 41 2 
198 1 329 1 252 1 244 1 333 1 279 1 255 4 320 1 136 2 81 3 204 1 248 1 226 1 13 2 145 1 315 3 312 1 221 3 161 1 340 1 100 1 15 1 41 1 
198 1 252 1 333 1 279 1 2 1 255 4 320 1 136 2 81 3 204 1 248 1 226 1 13 2 145 1 315 3 312 1 221 3 161 1 340 1 100 1 15 1 41 1 
252 1 157 1 315 1 161 1 221 1 81 1 
252 3 91 1 105 1 58 1 279 2 255 3 293 1 48 1 81 7 154 1 249 1 157 1 315 7 76 1 221 6 161 2 340 2 299 1 243 1 276 1 41 1 
284 1 89 2 285 2 303 1 68 1 18 1 330 2 92 1 331 1 114 2 1 1 180 2 47 1 224 1 205 2 99 1 315 1 139 3 53 1 161 1 54 1 276 1 164 2 252 1 143 1 167 2 190 1 127 1 59 1 279 1 232 1 170 5 255 1 211 2 348 1 81 1 172 1 193 4 237 1 297 2 324 3 221 1 177 1 86 2 147 1 40 1 41 1 
17 1 201 1 115 1 2 1 3 2 136 3 204 1 248 2 336 1 158 2 226 1 315 1 312 1 100 1 340 1 289 2 169 1 255 2 281 2 81 1 296 1 13 3 33 1 351 1 221 1 14 1 15 1 196 1 
252 2 223 1 105 1 279 1 255 2 81 2 157 1 312 1 315 2 221 2 161 1 276 1 41 1 
66 1 252 1 279 1 255 1 320 1 81 4 315 4 187 1 221 4 195 1 161 1 340 1 276 1 
198 1 252 2 58 1 279 1 45 1 183 1 255 1 81 2 108 1 315 2 221 2 161 1 299 1 41 1 
252 1 43 1 315 1 266 1 161 1 221 1 94 1 340 1 141 1 81 1 
252 1 91 1 279 1 255 1 81 2 215 1 315 2 221 2 161 1 243 1 276 1 
66 1 198 1 252 2 91 1 279 2 255 3 293 1 81 5 315 5 187 1 76 1 195 1 221 4 161 2 340 1 276 1 
66 1 198 1 252 2 91 1 279 2 255 3 293 1 81 5 315 5 84 1 187 1 195 1 221 4 161 2 340 1 276 1 
230 1 252 1 18 1 59 1 279 1 180 2 255 1 211 2 81 1 237 1 315 1 53 1 221 1 161 1 340 1 54 1 164 1 41 1 
198 1 252 2 105 1 58 1 279 1 255 1 81 1 249 1 315 1 221 1 161 1 299 1 41 1 
79 1 18 1 57 1 180 1 8 1 71 1 38 1 211 1 308 1 
242 1 62 1 308 1 
79 1 57 1 300 1 308 1 164 1 
79 2 57 2 231 1 307 1 308 1 62 1 309 1 136 2 226 1 13 2 217 1 64 1 242 1 100 1 300 2 15 1 196 1 164 1 56 1 
155 1 346 1 77 1 61 1 
155 1 350 1 346 1 305 1 334 1 61 1 60 1 
194 1 209 1 334 1 
166 1 346 1 150 2 305 1 334 3 61 1 60 3 155 1 350 1 7 1 35 1 228 1 
155 1 350 1 346 1 106 1 305 1 334 2 61 1 229 1 60 2 
166 1 350 1 260 1 305 1 266 1 220 1 334 1 141 1 61 1 317 1 60 1 
166 1 350 1 346 1 305 1 334 1 61 1 60 1 
155 1 166 1 350 1 346 2 305 1 334 1 60 1 
166 1 344 1 346 1 305 2 334 2 61 1 60 2 350 2 225 1 55 1 
166 1 346 1 113 1 106 2 305 1 291 1 334 3 280 1 60 3 61 2 155 1 350 1 317 1 
166 1 346 1 106 1 43 1 305 1 334 2 61 1 60 2 155 1 350 1 219 1 220 1 266 1 141 2 207 1 
166 1 346 1 113 1 106 2 305 2 334 4 60 4 61 2 155 1 350 2 83 1 229 1 317 1 
155 1 166 1 350 1 346 1 305 1 334 1 61 1 60 1 
346 2 113 1 150 1 106 2 305 1 334 4 60 4 61 3 155 2 192 1 350 1 35 1 228 1 317 1 
166 1 346 1 106 1 151 1 305 1 319 1 334 2 61 1 60 2 155 1 350 1 354 1 
166 1 346 1 150 2 305 1 334 3 129 1 61 1 60 3 155 1 350 1 35 2 228 1 
133 2 278 1 132 1 61 2 
88 1 166 1 350 1 305 1 334 1 60 1 
155 1 166 1 350 1 346 1 106 1 305 1 334 2 280 1 61 1 60 2 
134 1 
155 1 166 1 350 1 346 1 305 1 334 1 61 1 60 1 
166 1 346 1 106 1 150 1 305 1 334 3 280 1 60 3 61 1 155 1 350 1 
192 1 113 1 61 1 317 1 
346 1 61 1 

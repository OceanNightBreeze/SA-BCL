#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 121 166 21 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 121 166 21 55 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 121 166 21 (136,314) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 121 166 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 121 166 21 (136,314) (136,314) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 121 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 101 196 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 173 273 271 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 121 166 21 (136,314) (136,314) 281 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 121 166 21 55 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 121 149 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 121 149 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 121 149 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 121 149 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 121 149 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 2 256 2 208 1 210 1 168 1 209 2 6 6 171 1 215 9 295 2 217 1 17 1 51 1 219 1 301 2 229 1 67 1 232 3 234 1 185 2 187 1 104 9 188 1 307 1 308 2 152 1 31 4 112 5 
255 2 256 2 208 1 210 1 168 1 209 2 6 6 171 1 215 9 295 2 217 1 17 1 51 1 219 1 301 2 229 1 67 1 232 3 234 1 185 2 187 1 104 9 188 1 307 1 308 2 152 1 31 4 112 5 
255 2 256 2 208 1 210 1 168 1 209 2 6 7 171 1 215 10 295 2 217 1 17 1 51 1 219 1 301 2 229 1 67 1 232 4 234 1 185 2 187 1 104 10 188 1 307 1 308 2 152 1 31 5 112 6 
255 1 256 2 208 1 168 1 209 2 6 4 171 1 215 7 295 2 217 1 17 1 51 1 219 1 301 2 229 1 67 1 232 2 234 1 185 2 187 1 104 7 188 1 307 1 308 2 152 1 31 3 112 4 
301 1 232 1 255 2 256 1 208 1 210 1 168 1 185 1 104 4 6 3 308 1 215 4 152 1 295 1 31 2 17 1 112 3 219 1 
301 1 229 1 256 1 209 1 104 2 188 1 308 1 215 2 152 1 295 1 17 1 112 1 219 1 177 1 160 1 96 1 
67 1 232 1 209 1 104 3 6 1 308 2 215 3 152 1 295 2 31 1 17 1 112 2 219 1 
251 1 255 2 208 1 256 1 209 1 168 1 210 1 6 7 215 9 295 2 217 1 17 1 219 1 301 1 67 1 232 3 234 1 185 1 104 9 308 2 152 1 31 4 112 5 36 1 
251 1 255 2 208 1 256 1 209 1 168 1 210 1 6 7 215 9 295 2 217 1 17 1 219 1 301 1 67 1 232 3 234 1 185 1 104 9 308 2 152 1 31 4 112 5 36 1 
53 1 157 1 10 1 
53 1 75 1 319 2 
21 1 166 1 121 1 
21 1 166 1 55 1 121 1 
21 1 166 1 314 1 121 1 
212 1 213 1 69 1 290 1 269 1 135 1 138 1 193 1 52 1 53 1 157 1 244 1 115 1 316 1 
166 1 121 1 
313 1 80 1 193 1 269 1 123 1 
80 1 30 1 193 2 233 1 53 1 157 1 269 2 123 1 
80 1 193 1 269 1 
21 1 166 1 136 1 193 1 314 1 269 1 121 1 123 1 
53 1 
133 1 80 1 193 2 233 1 53 1 157 1 269 2 123 1 
279 1 42 1 204 1 80 2 233 1 211 2 269 5 90 1 311 1 312 1 9 1 216 1 193 5 53 1 157 1 161 2 247 1 123 2 79 2 
47 1 118 1 
47 1 118 1 
272 1 59 1 
272 1 59 1 
272 1 59 1 
83 1 47 1 118 1 
83 1 47 1 118 1 
126 1 272 1 47 2 59 1 118 2 71 1 
47 1 143 1 118 1 
83 1 47 1 118 1 
245 1 47 1 118 1 
245 1 47 1 118 1 
245 1 47 1 118 1 
13 1 193 1 243 1 47 1 258 1 118 1 132 1 25 1 269 1 121 1 27 1 
266 2 237 1 103 1 47 2 258 2 25 2 132 2 269 2 27 3 71 1 151 1 13 2 192 1 193 2 53 1 176 1 243 1 118 2 144 1 
301 1 256 1 185 1 
301 1 256 1 96 1 
256 3 185 2 102 1 309 1 239 1 96 1 
207 1 256 2 185 1 102 1 309 1 96 1 
256 2 185 1 102 2 309 1 96 1 
252 1 204 1 80 1 81 1 85 1 211 1 288 1 87 1 53 2 220 1 263 1 94 2 265 1 145 1 98 1 99 1 233 1 269 5 311 3 312 2 110 2 193 5 194 1 157 1 75 1 159 1 161 1 198 2 317 1 319 3 79 1 123 4 
252 3 80 6 204 1 167 5 85 3 288 4 211 2 292 1 293 1 9 1 92 1 53 5 220 3 223 1 265 2 145 1 98 3 233 1 269 9 311 8 312 6 313 5 110 6 193 9 157 1 158 1 75 3 159 2 119 1 161 2 198 6 317 3 319 9 123 7 79 2 
252 1 81 1 85 1 211 1 288 1 87 1 9 1 53 3 220 1 265 1 94 1 98 1 269 3 311 3 312 2 110 2 193 3 157 1 75 2 159 1 161 1 317 1 198 2 123 2 79 1 319 4 
252 2 81 1 85 2 211 1 288 2 87 1 293 1 9 1 92 1 53 4 220 2 265 1 94 2 98 2 269 4 311 5 312 4 110 4 193 4 157 1 158 1 75 3 159 1 161 1 198 4 317 2 319 7 79 1 123 3 
205 1 18 1 259 1 172 1 10 1 
205 1 148 1 
222 1 
205 1 73 1 224 1 
205 1 68 1 
205 1 73 1 
205 3 18 2 284 1 73 1 5 1 224 1 
98 1 202 1 41 2 66 1 84 1 285 2 85 1 186 1 169 4 8 1 105 1 294 3 153 1 191 1 49 3 35 7 200 1 
98 1 202 1 41 2 66 1 84 1 285 2 85 1 186 1 169 4 8 1 105 1 294 3 153 1 191 1 49 3 35 7 200 1 
98 1 202 1 41 2 66 1 84 1 285 2 85 1 186 1 169 4 8 1 105 1 294 3 153 1 108 1 191 1 49 3 35 7 200 1 
202 5 41 5 252 3 1 1 4 1 285 3 84 2 85 4 169 16 86 1 8 1 294 10 173 3 297 1 49 15 220 3 261 1 56 1 58 1 98 4 66 1 231 1 236 4 267 1 186 1 150 2 105 2 153 2 273 1 191 2 195 1 35 31 317 3 200 1 
41 3 202 1 4 1 285 2 84 1 85 1 169 5 86 2 294 4 297 2 49 4 261 2 98 1 66 1 267 2 186 1 150 4 238 1 105 1 153 1 32 1 191 1 35 9 200 1 
203 2 128 1 206 1 44 1 282 1 256 2 130 1 209 1 6 1 215 2 295 1 91 1 137 1 50 1 17 1 219 1 142 2 264 1 96 1 301 1 185 1 104 2 189 1 308 1 310 2 239 1 152 1 112 1 114 1 38 1 122 1 
203 1 128 1 206 1 44 1 130 1 256 2 209 1 6 2 215 3 295 1 91 1 296 1 137 1 50 1 17 1 219 1 57 1 142 1 96 1 301 1 185 1 104 3 308 1 310 1 239 1 112 1 114 1 38 1 122 1 78 1 
203 1 128 1 206 1 130 1 256 2 209 1 6 2 215 2 91 1 296 1 50 1 17 1 219 1 57 1 142 1 96 1 301 1 185 1 104 2 310 1 239 1 112 1 114 1 38 1 122 1 
203 1 165 1 205 1 206 2 183 1 209 2 268 1 104 1 308 1 215 1 310 1 91 1 295 1 50 1 139 1 114 2 73 1 142 1 225 1 39 1 95 1 78 1 122 2 
301 1 128 1 203 1 44 1 206 1 256 2 130 1 209 1 185 1 104 1 189 1 308 1 215 1 310 1 239 1 152 1 91 1 295 1 137 1 50 1 114 1 38 1 57 1 142 1 96 1 122 1 
48 1 
80 6 165 2 82 2 257 2 170 1 89 1 11 4 260 1 91 1 262 1 265 1 23 1 182 2 100 1 268 1 269 5 193 5 197 2 115 1 277 1 120 1 39 1 203 2 204 1 205 1 211 1 212 1 213 1 290 1 291 1 135 1 138 1 50 1 52 1 53 2 218 1 142 2 62 1 64 2 233 3 306 2 69 1 311 2 310 2 312 2 157 1 156 1 73 1 244 1 75 2 161 1 316 1 248 2 319 2 79 1 
80 2 23 1 233 1 212 1 213 1 306 1 170 1 290 1 69 1 291 1 89 1 269 3 133 1 11 2 135 1 138 1 193 3 52 1 244 1 115 1 277 1 316 1 
80 1 82 1 213 1 212 1 290 1 170 1 89 1 291 1 11 3 133 1 135 1 138 1 52 1 53 1 23 1 233 1 69 1 269 3 193 3 157 1 244 1 115 1 316 1 277 1 
80 2 82 1 213 1 212 1 290 1 170 1 89 1 291 1 133 1 11 3 135 1 138 1 52 1 53 1 23 1 233 1 69 1 306 1 269 3 193 3 197 1 157 1 244 1 115 1 316 1 277 1 
80 7 82 4 170 1 257 2 89 1 11 6 181 1 23 1 182 2 269 5 29 1 193 5 197 4 115 1 117 1 277 1 204 1 43 1 211 1 213 1 212 1 290 1 291 1 133 1 135 1 138 1 52 1 53 5 62 1 64 2 233 3 306 4 69 1 311 1 312 1 157 5 156 1 244 1 75 2 161 1 316 1 162 1 248 2 79 1 
80 4 204 1 82 2 211 1 212 1 213 1 257 2 290 1 170 1 89 1 291 1 11 4 260 1 135 1 138 1 52 1 53 2 62 1 64 2 23 1 182 2 233 2 306 2 69 1 269 4 311 1 312 1 193 4 157 1 197 2 156 1 244 1 75 2 115 1 161 1 277 1 316 1 248 2 319 2 79 1 
80 4 204 1 43 1 82 2 211 1 213 1 212 1 257 2 290 1 170 1 89 1 291 1 11 4 135 1 138 1 52 1 53 1 62 1 64 2 23 1 182 2 233 2 306 2 69 1 269 4 311 1 312 1 29 1 193 4 157 1 197 2 156 1 244 1 75 2 115 1 161 1 162 1 316 1 277 1 248 2 79 1 
80 4 204 1 43 1 82 2 211 1 213 1 212 1 257 2 290 1 170 1 89 1 291 1 11 4 135 1 138 1 52 1 53 1 62 1 64 2 23 1 182 2 233 2 306 2 69 1 269 4 311 1 312 1 29 1 193 4 157 1 197 2 156 1 244 1 75 2 115 1 161 1 162 1 316 1 277 1 248 2 79 1 
80 4 204 1 82 2 211 1 131 2 213 1 212 1 290 1 170 1 89 1 291 1 11 4 135 1 138 1 16 1 52 1 53 1 93 1 62 1 64 2 23 1 233 2 306 2 69 1 269 4 311 1 312 1 193 4 157 1 197 2 244 1 115 1 77 2 161 1 162 1 316 1 277 1 248 2 199 1 319 2 79 1 
204 1 80 5 43 1 82 3 211 1 213 1 212 1 257 2 290 1 170 1 89 1 291 1 11 5 135 1 138 1 52 1 53 1 62 1 64 2 23 1 182 2 233 2 69 1 306 3 269 4 311 1 312 1 29 1 193 4 157 1 156 1 197 3 244 1 75 2 115 1 161 1 117 1 162 1 316 1 277 1 248 2 79 1 
204 1 80 5 43 1 82 3 211 1 213 1 212 1 257 2 290 1 170 1 89 1 291 1 11 5 135 1 138 1 52 1 53 1 62 1 64 2 23 1 182 2 233 2 69 1 306 3 269 4 311 1 312 1 29 1 193 4 157 1 156 1 197 3 244 1 75 2 115 1 161 1 117 1 162 1 316 1 277 1 248 2 79 1 
80 4 204 1 82 2 211 1 131 2 212 1 213 1 290 1 170 1 89 1 291 1 11 4 260 1 135 1 138 1 16 1 52 1 53 1 62 1 64 2 23 1 233 2 306 2 69 1 269 4 311 1 312 1 193 4 157 1 197 2 244 1 115 1 77 2 161 1 277 1 316 1 248 2 319 2 79 1 
41 3 125 1 202 3 0 2 252 3 85 3 169 9 86 2 294 6 297 2 173 1 49 10 220 3 261 2 300 1 98 3 227 1 226 1 236 2 267 2 150 4 238 1 270 2 72 1 273 1 195 1 34 1 35 19 116 1 317 3 
202 2 41 2 125 1 0 4 252 2 4 2 85 3 169 14 88 1 86 3 294 4 12 1 297 3 173 2 49 12 220 3 261 3 61 1 300 2 98 2 227 1 236 2 267 3 150 6 238 1 270 1 72 2 271 1 273 2 35 26 116 1 317 3 320 1 40 1 
0 4 252 4 4 1 85 5 169 20 86 3 88 1 12 1 173 3 261 3 98 5 267 3 186 1 105 1 270 1 271 1 273 3 195 1 34 1 35 41 116 1 200 1 40 1 202 4 125 1 41 4 285 1 294 8 297 3 49 21 220 4 61 1 300 2 66 1 227 1 236 4 150 6 238 1 72 1 153 1 240 1 317 4 320 1 
41 4 125 1 202 3 0 4 252 3 4 2 285 1 85 5 169 20 88 1 86 4 294 7 12 1 297 4 173 3 49 18 220 4 261 4 61 1 300 2 98 4 227 1 66 1 236 4 267 4 186 1 150 8 105 1 238 1 270 1 153 1 72 1 271 1 273 3 195 1 240 1 34 1 35 38 116 1 317 4 200 1 320 1 40 1 
41 7 125 1 202 7 0 4 252 7 4 1 285 1 85 8 169 27 88 1 86 2 294 14 12 1 297 2 173 4 49 25 220 7 261 2 61 1 300 1 98 8 227 1 66 1 236 4 267 2 186 1 150 4 105 1 238 1 270 1 153 1 72 1 271 1 273 2 195 2 35 52 116 1 317 7 200 1 320 1 40 1 124 2 
278 1 203 2 205 1 289 1 169 1 86 1 134 1 91 1 297 1 49 1 50 1 52 2 54 1 261 1 142 2 264 2 63 1 304 1 184 1 267 1 305 1 150 2 69 2 26 1 310 2 190 1 155 1 35 2 73 1 115 2 76 1 
301 1 203 2 44 1 282 1 256 2 130 1 185 1 310 2 239 1 91 1 275 1 50 1 242 1 114 1 57 1 74 1 38 1 142 2 96 1 
301 1 203 1 44 1 256 2 130 1 185 1 310 1 239 1 14 1 91 1 275 1 50 1 114 1 57 1 38 1 142 1 96 1 
203 1 165 1 205 1 268 1 310 1 91 1 274 1 50 1 139 1 242 1 114 1 73 1 142 1 39 1 
301 1 203 1 44 1 256 2 130 1 185 1 310 1 239 1 91 1 275 1 50 1 242 1 114 1 57 1 74 1 38 1 142 1 96 1 
111 1 
279 1 53 1 157 1 247 1 311 1 312 1 10 1 
80 1 204 1 182 1 233 1 211 1 257 1 269 1 311 1 312 1 193 1 157 1 53 2 156 1 75 1 161 1 319 1 79 1 
203 1 204 1 165 1 101 1 211 1 310 1 91 1 50 1 196 1 142 1 161 1 79 1 
204 1 236 1 211 1 311 1 312 1 271 1 173 1 273 1 110 1 53 1 75 1 161 1 198 1 79 1 319 2 
98 1 21 1 204 1 281 1 166 1 85 1 211 1 269 1 105 1 311 2 312 1 29 1 153 1 136 1 193 1 299 2 161 1 314 1 121 1 200 1 79 1 
279 1 204 1 211 1 311 1 312 1 157 1 53 1 161 1 247 1 79 1 
98 2 252 2 235 1 85 2 311 5 312 5 110 5 53 5 299 2 220 2 75 5 317 2 198 5 163 1 319 10 
80 1 193 1 233 1 53 1 157 1 269 1 
203 4 204 1 165 2 80 4 2 1 205 1 211 2 9 1 91 1 50 1 262 1 142 4 265 2 60 2 147 1 100 2 233 2 268 1 269 3 310 4 311 2 312 2 193 3 73 1 161 2 246 1 120 1 39 1 79 2 
21 1 166 1 55 1 121 1 
204 1 100 1 285 1 211 1 311 1 312 2 110 2 157 2 53 4 75 2 161 1 198 2 265 1 319 4 79 1 
221 1 258 1 132 1 
221 1 258 1 132 1 
175 1 103 1 258 1 132 1 106 1 
221 1 258 1 132 1 
127 1 258 1 132 1 
127 1 258 1 132 1 
127 1 258 1 132 1 
258 1 132 1 
47 1 118 1 
98 1 202 1 41 2 66 1 4 1 285 1 85 1 267 2 186 1 169 4 150 4 86 2 105 1 294 3 153 1 297 2 49 4 35 8 261 2 200 1 
41 2 98 1 66 1 285 1 85 1 186 1 169 3 105 1 10 1 153 1 294 2 49 3 35 6 200 1 
41 1 98 1 202 1 252 1 228 1 267 1 85 1 150 2 169 2 86 1 294 2 297 1 49 2 220 1 35 4 261 1 317 1 
41 1 98 1 202 1 252 1 236 2 85 1 169 3 294 2 273 1 173 1 49 4 195 1 35 7 220 1 317 1 
202 4 41 5 252 2 4 2 285 1 85 3 169 11 86 2 294 9 173 2 297 2 49 12 220 2 261 2 98 3 66 1 236 2 24 1 267 2 186 1 150 4 105 2 153 2 195 1 35 23 37 1 317 2 200 1 124 1 
49 1 236 1 35 1 
173 1 35 1 169 1 
202 1 98 1 41 2 228 1 252 1 235 1 267 1 85 1 150 2 169 3 86 1 294 3 297 1 49 3 35 6 220 1 261 1 317 1 
202 1 41 1 252 2 85 2 169 6 86 1 88 1 294 2 173 1 297 1 49 6 220 2 261 1 61 1 98 2 236 1 267 1 150 2 238 1 271 1 273 1 35 12 317 2 40 1 320 1 
98 1 41 1 202 1 85 1 169 3 105 1 153 1 294 2 49 3 35 6 200 1 
202 1 41 1 66 1 4 1 267 1 186 1 169 1 150 2 86 1 105 1 294 2 153 1 297 1 49 2 35 3 37 1 261 1 
41 3 202 2 98 2 281 1 267 1 85 2 150 2 169 5 86 1 238 1 105 2 153 2 294 5 297 1 49 5 35 10 261 1 200 1 
202 1 267 1 85 1 150 2 169 2 86 1 238 1 294 1 297 1 220 1 35 2 261 1 
41 1 98 1 202 1 252 1 267 1 85 1 150 2 169 2 86 1 238 1 294 2 297 1 49 2 220 1 35 4 261 1 317 1 
41 1 202 1 4 1 267 3 150 6 169 1 86 3 238 1 105 1 153 1 294 2 297 3 49 2 34 1 35 3 37 1 261 3 
202 5 41 7 252 3 4 2 285 1 85 5 169 16 86 5 294 12 297 5 173 3 49 18 220 3 261 5 56 1 58 1 98 5 66 1 228 1 231 1 236 4 267 5 186 1 150 10 105 3 238 1 153 3 273 1 195 1 34 1 35 34 37 1 317 3 200 2 
41 2 285 1 85 1 169 4 86 1 294 2 173 1 297 1 49 4 261 1 98 1 66 1 236 1 267 1 186 1 150 2 238 1 105 1 153 1 271 1 273 1 35 8 200 1 
41 2 202 1 285 1 85 2 169 6 86 2 294 3 297 2 173 1 49 5 220 1 261 2 98 1 66 1 228 1 236 2 267 2 186 1 150 4 105 1 238 1 153 1 271 1 273 1 195 1 35 11 317 1 200 1 
202 1 41 3 252 2 4 1 285 1 85 3 169 9 86 3 88 1 294 4 173 1 297 3 49 10 220 2 261 3 61 1 98 3 66 1 228 1 236 1 267 3 186 1 150 6 105 1 238 1 153 1 271 1 273 1 35 19 317 2 200 1 320 1 40 1 
202 2 41 3 252 1 4 1 285 1 85 3 169 10 86 3 88 1 294 5 173 1 297 3 49 7 220 2 261 3 61 1 98 2 66 1 228 1 236 1 267 3 186 1 150 6 105 1 238 1 153 1 271 1 273 1 35 17 317 2 200 1 40 1 320 1 
41 2 285 1 85 1 169 4 86 1 294 2 173 1 297 1 49 4 261 1 98 1 66 1 236 1 267 1 186 1 150 2 238 1 105 1 153 1 271 1 273 1 35 8 200 1 
202 1 41 1 252 2 85 2 169 6 86 1 88 1 294 2 173 1 297 1 49 6 220 2 261 1 61 1 98 2 236 1 267 1 150 2 238 1 271 1 273 1 35 12 317 2 40 1 320 1 
202 2 41 3 252 1 4 2 285 1 85 3 169 10 88 1 86 4 294 5 297 4 173 1 49 8 220 2 261 4 61 1 98 2 66 1 228 1 236 1 267 4 186 1 150 8 105 1 238 1 153 1 271 1 273 1 35 18 317 2 200 1 320 1 40 1 
202 3 41 3 252 2 4 2 85 3 169 9 88 1 86 4 294 6 297 4 173 1 49 7 220 3 261 4 61 1 98 2 236 1 267 4 150 8 238 1 271 1 273 1 34 1 35 16 317 3 320 1 40 1 
98 1 41 3 202 3 66 2 85 1 186 1 169 3 105 3 153 3 294 6 49 4 35 7 200 1 
202 1 41 3 252 1 4 2 285 1 85 3 169 10 88 1 86 4 294 4 297 4 173 1 49 8 220 2 261 4 61 1 98 2 66 1 236 1 267 4 186 1 150 8 105 1 238 1 153 1 271 1 273 1 34 1 35 18 317 2 200 1 320 1 40 1 
65 1 52 1 174 1 115 1 69 1 316 1 20 1 
65 1 46 1 69 1 109 1 174 1 52 1 113 1 19 1 178 1 115 1 316 1 20 1 
91 1 203 1 165 1 205 1 50 1 73 1 268 1 142 1 39 1 310 1 10 1 
149 1 121 1 
149 1 121 1 
149 1 121 1 
97 1 203 3 165 1 80 1 205 4 148 1 286 1 68 1 269 2 310 3 91 1 50 1 193 2 18 1 53 1 157 1 141 1 244 1 73 1 142 3 224 1 60 1 249 1 
203 3 165 1 80 1 205 4 148 1 286 1 68 1 269 2 310 3 91 1 50 1 193 2 18 1 53 1 157 1 33 1 244 1 73 1 142 3 224 1 60 1 249 1 
91 1 203 1 50 1 142 1 70 1 310 1 
203 7 146 1 165 2 205 3 253 1 282 1 284 1 70 1 26 1 214 1 310 7 154 1 91 2 50 3 73 2 57 1 142 6 264 1 224 1 201 1 179 1 
149 1 121 1 
279 1 203 1 280 1 165 1 204 2 80 2 205 2 129 1 211 2 18 1 53 1 142 1 148 1 233 1 269 3 311 1 310 1 312 1 193 3 157 1 33 1 241 1 244 1 161 2 246 1 247 1 79 2 123 1 
91 1 203 1 50 1 101 1 142 1 70 1 310 1 
203 4 165 1 205 1 254 1 282 1 286 1 268 1 310 4 91 1 50 1 73 1 142 4 39 1 
203 2 146 1 205 1 230 1 310 2 91 1 50 2 140 1 298 1 73 1 142 2 224 1 60 1 201 1 
301 1 91 1 203 1 165 1 50 1 256 1 38 1 142 1 310 1 96 1 
203 2 205 1 282 1 26 1 310 2 91 1 50 1 54 1 73 1 57 1 142 2 
203 5 165 1 205 3 254 1 282 1 268 1 26 1 310 5 154 1 91 2 50 2 73 2 142 4 60 1 39 1 179 1 
203 5 165 1 205 3 254 1 282 1 3 1 268 1 26 1 310 5 91 2 50 2 73 2 142 4 60 1 39 1 179 1 
149 1 121 1 
203 1 146 1 205 1 253 1 284 1 310 1 91 1 50 2 73 1 142 1 224 1 60 1 201 1 
17 1 112 1 219 1 10 1 
295 1 17 1 112 1 219 1 104 1 308 1 215 1 
206 1 209 1 104 1 
250 1 22 1 104 3 188 2 308 1 215 3 152 1 295 1 17 1 112 1 276 1 219 1 
295 1 17 1 255 1 112 1 219 1 6 1 104 2 308 1 215 2 
301 1 256 1 168 1 185 1 104 1 308 1 215 1 152 1 295 1 31 1 112 1 
152 1 295 1 17 1 112 1 104 1 308 1 215 1 
152 1 295 1 17 2 219 1 104 1 308 1 215 1 
152 1 295 2 302 1 17 1 112 1 104 2 315 1 308 2 215 2 107 1 
232 1 234 1 104 3 6 2 308 1 215 3 152 1 295 1 31 1 217 1 17 1 112 2 219 1 
301 1 256 2 185 1 287 1 104 2 6 1 308 1 215 2 239 1 152 1 295 1 17 1 112 1 219 1 96 1 
255 1 232 1 210 1 104 4 6 2 308 2 215 4 152 1 295 2 31 1 17 1 112 2 219 1 
152 1 295 1 17 1 112 1 219 1 104 1 308 1 215 1 
22 1 232 1 6 2 104 4 188 1 308 1 215 4 295 1 31 1 15 1 17 2 112 3 276 1 219 2 
180 1 104 2 6 1 308 1 215 2 152 1 295 1 17 1 112 1 219 1 36 1 318 1 
22 2 104 3 188 2 308 1 7 1 215 3 152 1 295 1 17 1 112 1 276 1 219 1 
164 1 45 2 283 1 112 2 
152 1 295 1 303 1 104 1 308 1 215 1 
152 1 295 1 17 1 112 1 234 1 219 1 6 1 104 2 308 1 215 2 
28 1 
152 1 295 1 17 1 112 1 219 1 104 1 308 1 215 1 
234 1 6 1 104 3 188 1 308 1 215 3 152 1 295 1 17 1 112 1 219 1 
31 1 15 1 232 1 112 1 
17 1 112 1 

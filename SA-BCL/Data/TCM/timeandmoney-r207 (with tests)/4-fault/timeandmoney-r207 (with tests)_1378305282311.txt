#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 337 4 272 1 128 1 318 1 249 1 275 2 278 1 176 1 60 1 11 3 300 5 345 1 284 1 255 9 178 1 256 7 155 2 120 1 332 2 376 9 50 1 335 1 104 1 
269 1 337 4 272 1 128 1 318 1 249 1 275 2 278 1 176 1 60 1 11 3 300 5 345 1 284 1 255 9 178 1 256 7 155 2 120 1 332 2 376 9 50 1 335 1 104 1 
269 1 337 4 1 1 272 1 128 2 318 1 172 1 249 1 275 2 278 1 60 1 11 3 300 5 345 1 91 1 284 2 255 9 155 2 256 6 327 1 120 2 332 2 376 9 50 2 335 1 104 1 219 1 315 1 
269 1 337 4 1 1 272 1 128 2 318 1 172 1 249 1 275 2 278 1 60 1 11 3 300 5 345 1 91 1 284 2 255 9 155 2 256 6 327 1 120 2 332 2 376 9 50 2 335 1 104 1 219 1 315 1 
269 1 337 5 1 1 272 1 128 2 318 1 172 1 249 1 275 2 278 1 60 1 11 4 300 6 345 1 91 1 284 2 255 10 155 2 256 7 327 1 120 2 332 2 376 10 50 2 335 1 104 1 219 1 315 1 
269 1 337 3 1 1 272 1 128 2 318 1 172 1 249 1 275 1 278 1 60 1 11 2 300 4 345 1 91 1 284 2 255 7 155 2 256 4 327 1 120 2 332 2 376 7 50 2 104 1 219 1 315 1 
269 1 155 1 256 3 337 2 272 1 128 1 120 1 275 2 278 1 332 1 376 4 60 1 11 1 335 1 300 3 345 1 284 1 255 4 
269 1 155 1 128 1 213 1 250 1 278 1 332 1 77 1 376 2 60 1 50 1 300 1 91 1 315 1 284 1 255 2 
269 1 155 2 256 1 337 1 318 1 278 1 332 2 376 3 60 1 50 1 11 1 300 2 255 3 
156 1 144 1 68 1 
102 2 144 1 17 1 
321 2 236 2 366 2 220 2 74 2 247 2 81 1 191 1 
55 1 34 2 173 1 247 2 191 1 321 3 196 1 9 1 198 2 365 1 366 3 153 1 230 1 113 1 92 1 325 1 207 2 95 1 67 1 97 2 121 1 259 1 19 1 74 2 261 2 20 1 307 1 236 2 309 1 24 1 311 1 379 1 359 1 220 2 81 1 169 1 170 1 
321 1 182 1 236 1 366 1 239 1 220 1 124 1 74 1 247 1 81 1 
271 1 144 1 4 1 247 1 321 2 251 1 366 2 283 1 288 1 303 1 156 1 181 1 46 1 74 1 182 1 236 1 357 1 239 1 220 2 124 2 81 1 
271 1 144 1 247 2 321 2 251 1 366 2 303 1 288 2 156 1 181 2 46 1 74 2 182 1 236 2 357 1 239 1 220 2 124 2 81 1 
149 1 54 1 288 1 282 1 181 1 
149 1 288 2 156 1 144 1 134 1 282 1 109 1 181 2 
288 1 282 1 181 1 
288 1 271 1 181 1 247 1 74 1 149 1 321 1 182 1 236 1 366 1 239 1 220 1 124 1 81 1 
144 1 
149 1 75 1 288 2 156 1 144 1 282 1 109 1 181 2 
231 1 288 5 156 1 118 2 189 1 144 1 109 1 181 5 306 1 149 2 101 1 197 1 12 1 280 1 41 1 282 2 286 2 15 1 93 2 
68 1 191 1 
96 1 247 1 74 1 191 2 321 2 236 1 366 2 380 1 220 2 
148 1 192 1 270 1 
55 1 207 1 67 1 34 1 97 1 173 1 259 1 191 1 20 1 321 1 307 1 9 1 366 1 217 1 113 1 170 1 
270 1 55 1 32 1 207 1 67 1 34 1 97 1 259 1 173 1 74 1 20 1 321 2 307 1 110 1 236 1 9 1 366 2 113 1 220 1 170 1 
321 3 110 1 236 3 366 3 220 3 247 1 74 3 191 1 
321 1 236 1 366 1 239 1 220 1 124 1 74 1 
321 1 236 1 366 1 96 1 380 1 220 1 124 1 74 1 247 1 
55 1 247 2 191 1 342 1 251 1 110 1 9 1 196 1 198 1 113 1 303 1 207 1 67 1 121 1 259 1 74 3 261 2 20 1 307 1 357 1 311 1 24 1 220 3 123 1 81 1 124 2 169 1 170 1 82 1 32 1 34 1 173 1 321 4 366 4 365 1 230 1 92 1 325 1 288 1 97 1 181 1 46 1 236 3 379 1 380 1 
321 2 110 1 236 1 366 2 330 1 283 1 220 2 74 1 191 1 
288 1 303 1 32 1 144 1 181 1 247 1 74 3 46 1 321 3 110 2 251 1 236 3 357 1 366 3 164 1 380 1 220 3 123 1 124 1 
270 1 247 1 74 2 192 1 321 2 110 1 236 2 366 2 380 1 220 2 
55 1 207 1 67 1 34 1 97 1 173 1 259 1 191 1 20 1 321 1 307 1 9 1 366 1 113 1 170 1 
55 1 207 1 340 1 67 1 34 1 97 1 259 1 191 1 20 1 321 1 38 1 307 1 366 1 113 1 170 1 
31 1 270 2 83 1 319 1 108 1 148 2 192 2 196 1 198 4 61 1 230 1 92 1 301 1 302 1 328 1 95 2 121 1 261 2 331 1 311 1 24 2 377 1 78 1 379 1 
321 1 348 1 236 1 366 1 220 1 124 1 46 1 74 1 
32 1 330 1 74 4 247 1 191 1 321 5 132 1 110 2 236 4 103 1 366 5 380 1 283 1 220 5 
348 1 321 2 236 2 366 2 239 1 220 2 124 1 74 2 
151 1 364 1 
151 1 364 1 
6 1 14 1 
6 1 14 1 
6 1 14 1 
65 1 151 1 364 1 
151 1 304 1 364 1 
6 1 151 2 378 1 14 1 364 2 139 1 
65 1 151 1 364 1 
65 1 151 1 364 1 
151 1 260 1 364 1 
151 1 260 1 364 1 
151 1 260 1 364 1 
0 3 288 2 350 2 244 1 144 1 146 1 159 1 161 1 181 2 364 2 139 1 234 1 263 2 21 2 59 2 151 2 344 2 266 1 154 1 
242 1 0 1 136 1 288 1 350 1 33 1 159 1 304 1 181 1 364 1 74 2 191 1 263 1 321 2 264 1 59 1 22 1 151 1 236 2 366 2 25 1 344 1 220 2 285 1 
128 1 120 1 284 1 
250 1 128 1 284 1 
250 1 30 1 223 1 371 1 128 3 120 2 
248 1 250 1 30 1 371 1 128 2 120 1 
250 1 30 1 371 2 128 2 120 1 
242 1 125 2 31 1 33 1 144 2 109 1 129 1 149 4 131 1 39 1 152 1 280 1 282 1 41 3 286 1 93 1 302 1 288 5 118 1 156 1 17 1 210 1 72 2 181 5 101 2 102 3 22 1 377 1 78 1 240 1 267 2 316 1 
242 4 54 5 31 3 144 5 145 1 109 1 129 2 149 7 39 1 152 3 280 1 282 6 41 8 114 1 286 2 204 1 93 2 231 1 302 3 288 9 156 1 118 2 257 1 17 3 72 6 181 9 372 1 101 6 102 9 356 5 122 1 377 3 78 3 240 2 267 6 
242 1 125 1 31 1 144 3 129 1 149 2 131 1 152 1 41 3 286 1 93 1 231 1 302 1 288 3 156 1 118 1 17 2 72 2 181 3 101 2 102 4 240 1 78 1 377 1 267 2 316 1 
242 2 125 2 31 2 144 4 145 1 129 1 149 3 131 1 152 2 41 5 114 1 286 1 93 1 231 1 302 2 288 4 156 1 118 1 17 3 72 4 181 4 101 4 102 7 122 1 240 1 78 2 377 2 267 4 316 1 
67 1 68 1 47 1 
67 1 43 1 
354 1 
55 1 67 1 
276 1 55 1 307 1 67 3 362 1 47 2 
55 1 307 1 67 1 
67 1 13 1 
171 1 302 1 126 1 328 3 329 2 95 4 363 1 319 2 292 1 174 1 320 1 322 1 215 1 310 1 198 7 24 3 377 1 
171 1 302 1 126 1 328 3 329 2 95 4 363 1 319 2 292 1 174 1 320 1 322 1 215 1 310 1 198 7 24 3 377 1 
171 1 302 1 126 1 328 3 329 2 95 4 57 1 363 1 319 2 292 1 174 1 320 1 322 1 215 1 310 1 198 7 24 3 377 1 
171 1 126 1 31 3 360 1 363 2 319 5 174 1 320 5 229 1 322 2 343 1 198 31 152 3 230 1 92 1 64 4 368 3 302 4 328 10 329 3 95 16 44 1 121 1 293 1 292 2 261 2 214 1 215 1 235 1 310 2 24 15 311 1 78 3 377 4 
171 1 302 1 126 1 328 4 329 2 95 5 363 1 121 2 319 3 292 1 261 4 229 1 320 1 322 1 215 1 310 1 198 9 24 4 311 2 377 1 230 2 28 1 92 2 347 1 
269 1 243 1 223 1 128 2 246 1 34 1 250 1 278 1 60 1 300 1 281 1 113 1 284 1 255 2 324 1 256 1 155 1 179 1 207 1 138 1 120 1 97 1 259 1 262 1 332 1 376 2 50 1 27 1 314 1 336 1 
269 1 223 1 128 2 3 1 246 1 34 1 250 1 278 1 300 1 281 1 113 1 284 1 255 3 324 1 155 1 256 2 179 1 207 1 120 1 97 1 259 1 262 1 332 1 376 3 50 1 166 1 27 1 314 1 336 1 105 1 
269 1 256 2 223 1 207 1 128 2 3 1 34 1 246 1 120 1 97 1 259 1 262 1 250 1 278 1 376 2 50 1 166 1 300 1 281 1 27 1 113 1 314 1 284 1 324 1 255 2 
55 1 246 2 34 1 85 1 281 2 113 1 135 1 255 1 155 1 232 1 207 1 67 1 97 1 259 1 332 1 376 1 216 1 142 1 50 2 183 1 27 2 105 1 170 1 
223 1 128 2 3 1 246 1 34 1 250 1 60 1 281 1 113 1 284 1 255 1 324 1 155 1 179 1 207 1 138 1 120 1 97 1 259 1 262 1 332 1 376 1 50 1 27 1 314 1 336 1 
37 1 
107 1 143 2 144 3 4 1 147 1 109 2 274 1 321 1 193 1 277 1 251 1 366 1 202 1 280 1 89 1 41 1 282 5 283 1 286 1 93 1 288 4 303 1 118 1 156 3 119 2 290 3 42 3 291 1 352 2 17 2 45 1 98 5 181 4 46 1 295 1 101 1 334 1 238 3 357 1 220 1 124 1 53 2 
107 1 143 2 144 3 4 1 147 1 109 2 274 1 321 1 193 1 277 1 251 1 366 1 202 1 280 1 89 1 41 1 283 1 282 5 286 1 93 1 303 1 288 4 118 1 156 3 119 2 290 3 42 3 291 1 352 2 17 2 45 1 98 5 181 4 46 1 295 1 101 1 334 1 238 3 357 1 220 1 124 1 53 2 
107 1 143 2 144 3 4 1 147 1 225 2 109 2 299 2 193 1 321 1 277 1 251 1 200 1 366 1 280 1 282 4 41 1 283 1 286 1 93 1 288 4 303 1 118 1 156 3 290 2 42 2 16 1 45 1 98 4 181 4 46 1 295 1 101 1 102 2 238 2 357 1 220 1 124 1 53 2 
107 1 143 2 55 1 144 3 4 1 147 1 109 3 193 1 251 1 113 1 117 1 303 1 118 1 156 2 119 2 207 2 67 1 352 2 16 1 17 2 259 1 357 1 167 1 80 1 220 1 124 1 170 2 361 1 34 2 85 1 129 1 321 1 277 1 366 1 280 1 282 6 41 2 283 1 135 1 286 1 93 1 288 5 290 2 42 2 291 1 97 2 45 1 98 4 181 5 46 1 295 1 101 2 102 2 238 2 53 2 
107 1 144 2 4 1 147 1 109 1 321 1 193 1 277 1 251 1 366 1 283 1 282 2 303 1 288 3 156 2 290 1 98 2 181 3 46 1 295 1 75 1 357 1 220 1 124 1 
107 1 288 2 303 1 156 2 144 2 4 1 98 3 147 1 181 2 46 1 295 1 193 1 321 1 251 1 277 1 238 1 357 1 366 1 283 1 220 1 124 1 
107 1 144 3 4 1 147 1 109 1 321 1 193 1 277 1 251 1 366 1 283 1 282 2 303 1 288 3 156 3 290 1 42 1 98 3 181 3 46 1 295 1 75 1 357 1 238 1 220 1 124 1 
107 1 143 2 144 4 4 1 147 1 109 3 247 1 193 1 251 1 202 1 303 1 156 4 118 1 119 2 352 2 17 2 211 1 74 1 75 1 357 1 220 2 81 1 124 2 271 1 274 1 321 2 277 1 366 2 89 1 280 1 282 7 283 1 41 1 286 1 93 1 288 5 290 4 42 4 291 1 98 5 45 1 181 5 46 1 295 1 182 1 101 1 236 1 238 3 334 1 239 1 53 2 
107 1 143 2 144 4 4 1 147 1 109 2 193 1 321 1 277 1 251 1 366 1 280 1 282 4 41 1 283 1 286 1 93 1 288 4 303 1 118 1 156 3 119 2 290 2 42 2 291 1 352 2 16 1 17 2 45 1 98 4 181 4 46 1 295 1 101 1 102 2 238 2 357 1 220 1 124 1 53 2 
107 1 143 2 144 3 4 1 147 1 109 2 274 1 321 1 193 1 277 1 251 1 366 1 202 1 280 1 282 4 41 1 283 1 286 1 93 1 303 1 288 4 156 3 118 1 119 2 290 2 42 2 291 1 352 2 17 2 45 1 98 4 181 4 46 1 295 1 101 1 238 2 357 1 334 1 220 1 124 1 53 2 
107 1 143 2 144 3 4 1 147 1 109 2 274 1 321 1 193 1 277 1 251 1 366 1 202 1 280 1 282 4 41 1 283 1 286 1 93 1 303 1 288 4 156 3 118 1 119 2 290 2 42 2 291 1 352 2 17 2 45 1 98 4 181 4 46 1 295 1 101 1 238 2 357 1 334 1 220 1 124 1 53 2 
107 1 143 2 144 3 4 1 147 1 225 2 109 2 274 1 299 2 321 1 193 1 277 1 251 1 200 1 366 1 280 1 282 4 41 1 283 1 286 1 93 1 303 1 288 4 156 3 118 1 290 2 42 2 45 1 98 4 181 4 18 1 46 1 295 1 101 1 141 1 102 2 238 2 357 1 220 1 124 1 53 2 
171 1 270 1 126 1 363 1 319 2 191 2 148 1 192 1 196 1 198 6 230 1 92 1 302 1 328 2 329 1 68 1 95 3 121 1 261 2 331 1 215 1 310 1 311 1 24 3 377 1 379 1 
270 11 31 1 319 1 191 1 320 1 148 11 192 4 196 1 365 1 198 14 152 2 230 2 92 2 64 3 368 3 302 1 328 2 95 8 44 1 121 2 293 1 19 1 261 4 162 1 308 1 24 6 311 2 165 1 78 2 377 2 379 2 221 1 222 1 
55 1 32 1 34 1 173 1 191 1 192 1 321 2 110 1 9 1 196 1 366 2 365 1 198 2 230 1 113 1 92 1 207 1 157 1 67 1 95 1 97 1 121 1 71 1 259 1 74 1 19 1 261 2 20 1 307 1 333 1 236 1 217 1 311 1 165 1 24 1 379 1 220 1 170 1 
55 2 3 1 191 2 148 7 192 7 110 1 150 2 196 3 9 2 198 20 152 2 252 1 113 2 253 2 302 3 207 3 158 1 67 2 121 3 259 2 19 1 74 1 261 6 20 2 215 1 307 2 310 1 24 10 165 1 311 3 78 2 268 2 220 1 169 2 170 1 171 1 126 1 270 7 31 2 32 1 34 3 363 1 319 4 173 2 320 4 321 3 365 1 366 3 230 3 92 3 328 8 329 1 95 10 97 3 236 1 377 3 184 2 379 3 106 1 
243 1 55 2 3 1 34 8 85 1 87 1 321 1 110 1 195 1 196 2 366 1 198 2 365 1 153 2 230 2 113 2 92 2 63 1 135 1 206 1 207 7 67 3 95 1 97 8 258 1 121 2 259 2 74 1 19 1 261 4 331 1 236 1 51 1 311 2 24 1 79 1 379 2 220 1 170 2 
270 1 31 1 319 1 247 1 148 1 192 1 321 1 196 1 366 1 198 3 152 1 230 1 92 1 302 1 328 1 209 1 95 1 121 1 74 1 261 2 236 1 311 1 165 1 24 2 78 1 377 1 379 1 380 1 220 1 
301 1 270 1 328 1 95 2 121 1 261 2 320 1 148 1 331 1 192 1 196 1 198 2 311 1 78 1 377 1 379 1 230 1 92 1 
302 1 270 1 31 1 328 1 121 1 319 1 108 1 261 2 148 1 331 1 192 1 196 1 198 2 311 1 24 2 379 1 230 1 92 1 
270 2 31 1 319 1 148 2 320 1 192 2 196 1 198 4 152 1 230 1 92 1 302 1 328 2 95 2 121 1 261 2 331 1 311 1 24 2 377 1 78 1 379 1 
301 1 270 1 328 1 95 2 121 1 261 2 320 1 148 1 192 1 196 1 198 2 311 1 78 1 377 1 379 1 230 1 63 1 92 1 
302 1 270 1 31 1 328 1 121 1 319 1 108 1 261 2 148 1 192 1 196 1 198 2 311 1 24 2 379 1 230 1 63 1 92 1 
302 1 31 1 270 2 328 2 95 2 121 1 319 1 261 2 320 1 148 2 192 2 196 1 198 4 24 2 311 1 152 1 78 1 377 1 379 1 230 1 63 1 92 1 
302 1 31 1 270 2 328 2 95 2 121 1 319 1 261 2 320 1 148 2 192 2 196 1 198 4 24 2 311 1 152 1 78 1 377 1 379 1 230 1 92 1 
55 1 34 1 173 1 191 1 321 1 9 1 196 1 198 2 366 1 365 1 230 1 113 1 92 1 207 1 95 1 67 1 97 1 121 1 259 1 19 1 261 2 20 1 307 1 311 1 24 1 379 1 169 1 170 1 
55 1 340 1 34 1 191 1 321 1 38 1 196 1 198 2 199 1 366 1 365 1 230 1 113 1 92 1 207 1 95 1 67 1 97 1 121 1 259 1 19 1 261 2 20 1 307 1 311 1 24 1 379 1 170 1 
302 1 31 1 270 2 328 2 95 2 121 1 319 1 261 2 320 1 148 2 192 2 196 1 198 4 24 2 165 1 311 1 152 1 78 1 377 1 379 1 230 1 92 1 
31 1 270 2 243 1 55 1 34 1 319 1 173 1 320 1 148 2 192 2 321 1 9 1 196 1 198 4 366 1 152 1 230 1 113 1 92 1 302 1 328 2 207 1 95 2 67 1 97 1 121 1 259 1 261 2 20 1 307 1 24 2 311 1 377 1 78 1 184 1 379 1 169 1 
31 1 270 1 247 1 320 1 148 1 321 1 192 1 196 1 366 1 198 3 152 1 230 1 92 1 302 1 328 1 95 2 121 1 74 1 261 2 236 1 24 1 311 1 165 1 78 1 377 1 26 1 379 1 380 1 220 1 
338 1 31 2 339 1 58 4 319 1 320 2 198 23 152 2 201 1 230 2 92 2 64 4 116 1 66 1 368 3 302 2 328 3 95 11 44 3 121 2 180 2 293 1 294 1 261 4 355 1 265 1 311 2 24 12 78 2 377 2 186 1 28 1 
338 1 31 2 339 1 58 4 319 2 320 2 198 23 152 2 201 1 230 2 92 2 64 4 116 1 66 1 368 3 302 2 328 4 95 11 44 3 121 2 180 2 293 1 294 1 261 4 355 1 265 1 311 2 24 12 78 2 377 2 186 1 28 1 
171 3 126 3 338 1 31 5 339 1 363 3 58 4 319 8 320 5 198 51 152 5 201 1 230 1 92 1 64 4 116 1 368 4 302 8 328 13 329 3 95 27 44 2 121 1 180 1 293 2 294 1 261 2 162 2 215 3 265 1 310 3 311 1 24 24 78 5 377 8 186 1 28 1 
31 3 339 1 58 2 319 3 320 3 198 19 152 3 201 1 230 2 92 2 64 2 116 1 66 1 368 1 302 3 328 6 95 9 44 1 121 2 180 1 293 1 294 1 261 4 76 1 265 2 311 2 24 10 78 3 377 3 28 1 
31 1 338 1 339 1 58 4 198 16 152 1 201 1 230 1 92 1 64 2 116 1 302 1 368 2 95 8 44 2 121 1 180 2 294 2 261 2 265 1 24 8 311 1 78 1 377 1 186 1 28 1 
263 1 59 1 350 1 244 1 151 1 344 1 161 1 112 1 364 1 139 1 
264 1 304 1 
263 1 367 1 59 1 350 1 151 1 351 1 344 1 168 1 364 1 
0 2 288 1 350 1 244 1 144 1 159 1 161 1 181 1 364 1 139 1 234 1 263 1 21 1 59 1 151 1 344 1 266 1 154 1 
0 2 288 1 350 1 244 1 144 1 159 1 161 1 181 1 364 1 139 1 234 1 263 1 21 1 59 1 151 1 344 1 266 1 154 1 
0 2 288 1 350 1 244 1 144 1 159 1 161 1 181 1 364 1 139 1 234 1 263 1 21 1 59 1 151 1 344 1 266 1 154 1 
65 1 127 1 378 1 
65 1 127 1 378 1 
175 1 260 1 
175 1 378 1 260 1 
136 1 25 1 
187 1 0 1 242 1 33 1 364 1 191 1 149 1 321 2 59 1 151 1 366 2 344 1 285 1 136 1 288 1 350 1 181 1 304 1 74 2 263 1 21 1 264 1 22 1 236 2 25 1 266 1 220 2 
65 1 127 1 
175 1 378 1 260 1 
55 1 273 1 245 1 341 1 34 2 87 1 321 2 196 1 366 2 198 2 365 1 153 2 230 1 113 1 254 1 92 1 207 2 67 1 95 1 97 2 121 1 259 1 19 1 261 2 100 1 311 1 165 1 24 1 79 1 379 1 220 2 
243 1 223 1 207 2 128 2 3 1 34 2 120 1 97 2 259 1 262 1 373 1 250 1 140 1 237 1 27 1 113 1 314 1 284 1 336 1 
223 1 207 1 128 2 3 1 34 1 120 1 97 1 259 1 262 1 250 1 140 1 323 1 27 1 314 1 113 1 284 1 336 1 
55 1 207 1 67 1 34 1 97 1 259 1 85 1 279 1 237 1 142 1 27 1 113 1 135 1 170 1 
223 1 207 1 128 2 3 1 34 1 120 1 97 1 259 1 262 1 373 1 250 1 140 1 237 1 27 1 314 1 113 1 284 1 336 1 
160 1 
55 1 34 1 173 1 247 2 191 1 321 3 9 1 196 1 198 1 365 1 366 3 230 1 113 1 92 1 325 1 207 1 67 1 97 1 121 1 259 1 74 2 261 2 20 1 307 1 236 2 24 1 311 1 379 1 220 2 81 1 169 1 170 1 
118 1 156 2 329 1 144 4 17 2 72 2 129 1 101 2 102 4 267 2 280 1 80 1 41 1 286 1 93 1 
156 1 101 1 197 1 189 1 144 1 68 1 41 1 
144 2 109 1 280 1 41 1 282 1 286 1 93 1 288 1 118 1 156 1 119 1 291 1 352 1 17 1 181 1 101 1 102 1 
55 1 118 1 137 1 207 1 67 2 34 1 43 1 97 1 259 2 276 1 307 1 280 1 358 1 41 1 253 1 113 1 286 1 317 1 93 1 170 1 
338 1 188 1 271 1 144 2 129 1 247 1 321 1 366 1 280 1 41 2 64 1 286 1 93 1 368 1 369 1 156 1 118 1 44 1 17 1 72 2 74 1 182 1 101 2 102 2 236 1 163 1 239 1 267 2 80 1 220 1 124 1 81 1 
171 1 188 1 271 1 363 1 247 1 321 1 366 1 202 1 280 1 41 2 286 1 93 1 369 2 288 1 302 1 118 1 181 1 74 1 101 2 182 1 236 1 310 1 239 1 377 2 241 1 220 1 124 1 81 1 
118 1 156 1 189 1 144 1 101 1 197 1 280 1 41 1 286 1 93 1 
369 2 302 2 31 2 188 1 144 5 17 5 72 5 101 5 102 10 152 2 78 2 377 2 267 5 253 1 41 5 
288 1 156 1 144 1 282 1 181 1 109 1 
55 1 361 1 34 4 85 1 129 2 109 2 133 1 280 1 113 1 41 2 282 4 135 1 286 2 93 2 231 1 117 1 288 3 118 2 370 2 207 4 208 1 67 1 97 4 259 1 181 3 48 1 101 2 80 2 170 2 
263 1 59 1 84 1 
263 1 136 1 59 1 244 1 10 1 
263 1 59 1 84 1 
263 1 59 1 84 1 
263 1 375 1 59 1 
263 1 375 1 59 1 
263 1 375 1 59 1 
263 1 59 1 
151 1 364 1 
171 2 126 1 338 1 31 1 363 2 319 5 226 1 229 1 320 4 198 24 152 2 230 2 92 2 64 1 368 1 302 4 328 9 329 1 95 14 44 1 353 1 121 2 233 1 261 4 215 1 310 2 24 10 311 2 78 2 377 5 241 1 28 1 52 1 
171 1 126 1 338 1 31 1 363 1 319 3 226 1 229 1 320 2 198 20 152 3 230 3 40 1 92 3 64 2 368 1 302 2 328 5 329 1 95 12 353 1 44 1 121 3 233 1 293 1 261 6 215 1 310 1 24 8 311 3 78 3 377 4 28 1 52 1 
171 2 338 1 126 1 363 2 319 3 320 1 198 15 230 2 40 1 92 2 64 1 302 3 368 1 328 4 329 1 95 8 44 1 121 2 261 4 215 1 310 2 24 7 311 2 377 3 241 1 28 1 
171 2 338 1 126 1 363 2 319 4 320 3 198 15 230 2 40 1 92 2 64 1 302 3 368 1 328 7 329 1 95 8 44 1 121 2 261 4 215 1 310 2 24 7 311 2 377 3 241 1 28 1 
171 2 126 1 338 1 31 1 363 2 319 5 226 1 229 1 320 4 198 24 152 2 230 2 92 2 64 1 368 1 302 4 328 9 329 1 95 14 44 1 353 1 121 2 233 1 261 4 215 1 310 2 24 10 311 2 78 2 377 5 241 1 28 1 52 1 
368 1 338 1 95 1 44 1 121 1 261 2 198 2 311 1 24 1 230 1 28 1 92 1 64 1 
368 1 338 1 95 1 44 1 121 2 261 4 198 2 311 2 24 1 230 2 40 1 28 1 92 2 64 1 
368 1 66 1 338 1 95 1 44 1 121 2 261 4 198 2 311 2 24 1 230 2 92 2 28 1 64 1 
171 1 302 1 126 2 328 6 95 3 363 3 319 3 320 3 215 1 198 7 310 3 24 4 377 1 
368 1 66 1 338 1 95 1 44 1 121 2 261 4 198 2 311 2 24 1 230 2 92 2 28 1 64 1 
171 1 302 1 126 1 328 3 329 1 95 4 363 1 121 2 319 2 261 4 320 1 229 1 215 1 198 8 310 1 24 4 311 2 377 1 230 2 92 2 
171 1 302 1 126 1 328 2 329 1 68 1 95 3 363 1 319 2 215 1 310 1 198 6 24 3 377 1 
302 1 31 1 328 2 95 2 121 1 319 1 261 2 320 1 198 4 24 2 311 1 152 1 78 1 377 1 230 1 40 1 92 1 
302 1 368 1 31 1 328 2 95 3 44 1 319 1 293 1 320 1 198 7 24 4 152 1 78 1 377 1 64 2 
171 1 126 1 31 2 363 2 319 5 320 4 229 2 130 1 198 23 152 2 230 2 92 2 64 2 368 2 302 3 328 9 329 1 95 11 121 2 293 1 261 4 162 1 215 1 308 1 310 2 24 12 311 2 377 3 78 2 
198 1 24 1 64 1 
368 1 198 1 95 1 
302 1 31 1 328 3 95 3 121 1 319 2 261 2 320 1 198 6 311 1 24 3 152 1 78 1 377 1 230 1 40 1 253 1 92 1 
368 1 338 1 95 1 44 1 121 1 261 2 198 2 311 1 24 1 230 1 28 1 92 1 64 1 
171 1 302 1 328 2 95 3 363 1 319 1 320 1 198 6 310 1 24 3 377 1 
126 1 328 2 95 1 363 1 121 1 319 1 261 2 320 1 130 1 229 1 215 1 310 1 198 3 24 2 311 1 230 1 92 1 
171 1 302 2 328 5 95 5 363 2 121 1 319 3 261 2 320 2 310 2 198 10 311 1 24 5 377 2 230 1 92 1 28 1 241 1 
328 1 95 2 121 1 261 2 320 1 198 2 311 1 78 1 377 1 230 1 28 1 92 1 
302 1 31 1 328 2 95 2 121 1 319 1 261 2 320 1 198 4 24 2 311 1 152 1 78 1 377 1 230 1 28 1 92 1 
66 1 328 2 95 1 363 1 121 3 319 1 261 6 229 1 130 1 320 1 198 3 310 1 24 2 311 3 230 3 28 1 92 3 
171 2 126 1 31 3 360 1 363 3 319 7 130 1 229 2 320 5 198 34 152 3 230 5 40 1 92 5 64 4 66 1 368 3 302 5 328 12 329 1 95 16 44 1 121 5 293 1 261 10 214 1 215 1 235 1 310 3 24 18 311 5 78 3 377 5 28 1 
321 1 2 1 366 1 330 1 283 1 220 1 191 1 
298 1 2 1 70 1 330 1 73 1 191 1 228 1 321 1 366 1 185 1 283 1 220 1 
55 1 207 1 67 1 68 1 34 1 97 1 259 1 113 1 85 1 135 1 170 1 
55 1 207 1 67 1 34 1 97 1 259 1 173 1 74 1 191 1 20 1 321 2 307 1 110 1 236 1 366 2 113 1 220 1 170 1 
82 1 55 2 34 1 173 1 191 1 36 1 321 2 110 1 251 1 366 2 13 1 113 1 370 1 207 1 67 3 97 1 259 1 74 2 46 1 20 1 307 2 236 1 220 2 124 2 
82 1 55 2 34 1 191 1 36 1 321 2 38 1 110 1 251 1 366 2 13 1 113 1 370 1 207 1 67 3 97 1 259 1 74 2 46 1 20 1 307 2 236 1 220 2 124 2 
297 1 55 1 271 1 144 1 34 1 247 1 36 1 321 1 366 1 13 1 113 1 282 1 288 2 156 1 370 1 207 1 94 1 67 4 43 1 97 1 259 1 181 2 74 1 47 1 182 1 307 1 236 1 357 1 239 1 220 1 124 1 81 1 
55 1 271 1 144 1 34 1 247 1 36 1 321 1 366 1 13 1 113 1 282 1 288 2 156 1 370 1 207 1 67 4 43 1 97 1 259 1 181 2 74 1 47 1 182 1 307 1 236 1 357 1 239 1 312 1 220 1 124 1 81 1 
207 1 51 1 34 1 97 1 259 1 113 1 
243 1 55 2 206 1 207 6 3 1 67 3 34 7 97 7 258 1 5 1 259 3 305 1 87 1 276 1 307 1 195 1 51 1 153 1 218 1 113 2 170 2 
243 1 55 1 245 1 191 2 148 1 192 1 110 1 150 1 9 1 196 2 198 6 113 1 302 1 207 1 67 1 121 2 259 1 74 1 261 4 20 1 307 1 215 1 310 1 165 1 311 2 24 3 220 1 169 1 171 1 126 1 270 1 34 1 363 1 319 2 173 1 321 2 366 2 230 2 92 2 328 2 329 1 95 3 97 1 236 1 377 1 184 1 379 2 
188 1 189 1 144 2 109 1 247 1 149 1 197 1 302 2 118 2 156 2 207 1 67 2 212 1 74 1 357 1 310 1 312 1 313 1 220 1 124 1 81 1 170 1 171 1 271 1 34 1 363 1 35 1 321 1 366 1 133 1 280 2 282 2 41 4 286 2 93 2 288 3 369 2 43 1 97 1 181 3 47 1 101 5 182 1 236 1 239 1 377 2 241 1 
243 1 55 1 207 2 67 2 34 2 97 2 259 2 47 1 276 1 307 1 51 1 358 1 113 1 
243 1 55 1 207 4 67 1 34 4 97 4 99 1 259 1 85 1 194 1 113 1 135 1 170 1 
289 1 55 1 370 1 207 2 67 1 34 2 97 2 5 1 259 2 307 1 218 1 113 1 346 1 106 1 
250 1 207 1 128 1 34 1 97 1 259 1 113 1 284 1 262 1 170 1 
243 1 55 1 207 2 3 1 67 1 34 2 97 2 259 1 100 1 87 1 113 1 
243 1 55 2 370 1 207 4 206 1 67 3 34 5 97 5 258 1 85 1 259 2 87 1 194 1 113 2 135 1 170 1 
243 1 55 2 370 1 207 4 67 3 34 5 97 5 190 1 258 1 85 1 259 2 87 1 194 1 113 2 135 1 170 1 
55 1 207 1 67 1 34 1 97 1 259 1 74 1 191 1 20 1 321 2 307 1 110 1 38 1 236 1 366 2 113 1 220 1 170 1 
55 1 370 1 207 1 67 1 34 1 97 1 5 1 259 2 305 1 276 1 307 1 218 1 113 1 
86 1 349 1 8 1 224 1 191 1 
271 1 144 1 224 1 247 1 149 1 86 1 321 1 251 1 8 1 366 1 88 1 177 1 303 1 349 1 288 2 156 1 69 1 181 2 74 1 46 1 182 1 236 1 357 1 239 1 220 1 123 1 81 1 124 2 
86 1 321 1 8 1 273 1 366 1 341 1 224 1 220 1 254 1 
8 1 88 1 177 1 
269 1 256 1 155 1 332 1 278 1 376 3 60 1 104 1 300 1 91 1 255 3 
337 1 11 1 300 1 227 1 
269 1 300 1 
269 1 278 1 68 1 300 1 
269 1 155 1 278 1 332 1 376 1 300 1 255 1 
376 1 50 1 246 1 
269 1 287 1 155 1 205 1 332 1 278 1 376 3 60 1 23 1 300 1 91 2 255 3 
269 1 275 1 256 1 155 1 278 1 332 1 376 2 300 1 255 2 
155 1 337 1 332 1 376 1 272 1 128 1 60 1 120 1 300 1 284 1 255 1 
269 1 155 1 332 1 376 1 60 1 300 1 255 1 
269 2 155 1 278 1 332 1 376 1 60 1 255 1 
269 1 115 1 155 2 296 1 332 2 376 2 60 1 203 1 300 1 255 2 
269 1 155 1 256 2 337 1 249 1 278 1 332 1 376 3 60 1 11 1 104 1 300 2 255 3 
269 1 155 1 256 1 223 1 128 2 120 1 250 1 278 1 332 1 376 2 60 1 300 1 90 1 284 1 255 2 
269 1 155 2 256 2 337 1 275 1 278 1 332 2 376 4 60 1 335 1 11 1 300 2 255 4 
269 1 155 1 278 1 332 1 376 1 60 1 300 1 255 1 
269 2 287 1 256 2 155 1 337 1 227 1 278 2 332 1 376 4 23 1 11 1 300 3 91 1 255 4 
269 1 7 1 256 1 155 1 278 1 332 1 176 1 376 2 60 1 111 1 300 1 255 2 
269 1 374 1 287 1 155 1 278 1 332 1 376 3 23 2 60 1 300 1 91 2 255 3 
56 2 300 2 62 1 29 1 
49 1 155 1 332 1 376 1 60 1 255 1 
269 1 256 1 155 1 278 1 332 1 376 2 60 1 104 1 300 1 255 2 
326 1 
269 1 155 1 278 1 332 1 376 1 60 1 300 1 255 1 

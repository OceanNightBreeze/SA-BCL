#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 (143,306) (143,306) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 (143,306) (143,306) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 (143,306) (143,306) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 (143,306) (143,306) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 343 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 120 343 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 158 62 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 158 62 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (10,197,232,334) (10,197,232,334) 332 293 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 2 336 1 345 1 370 1 321 1 10 7 185 1 208 1 232 4 322 1 159 2 210 2 211 1 41 1 143 1 95 2 236 1 357 6 120 1 306 1 264 1 47 2 197 2 332 1 
208 1 232 4 336 1 334 2 322 1 159 2 210 2 211 1 41 1 95 2 143 1 236 1 357 6 120 1 345 1 306 1 264 1 370 1 47 2 197 2 332 1 321 1 185 1 10 7 
208 1 232 4 336 1 334 2 322 1 159 2 210 2 211 1 41 1 95 2 143 1 236 1 357 6 120 1 345 1 306 1 264 1 370 1 47 2 197 2 332 1 321 1 185 1 10 7 
208 1 232 4 336 1 334 2 322 1 159 2 210 2 211 1 41 1 95 2 143 1 236 1 357 6 120 1 345 1 306 1 264 1 370 1 47 2 197 2 332 1 321 1 185 1 10 7 
232 1 334 1 357 1 120 1 345 1 197 1 332 1 10 2 
208 1 276 1 334 1 322 1 159 1 210 1 211 1 2 1 236 1 357 2 345 1 346 1 379 1 197 1 198 1 10 2 
232 1 334 2 336 1 159 2 210 1 2 1 95 1 357 3 345 1 47 1 197 2 198 1 10 3 
232 5 334 2 336 1 159 2 210 1 72 1 95 2 357 6 343 1 120 1 345 1 370 1 47 2 197 2 332 1 185 1 10 7 
232 5 334 2 336 1 159 2 210 1 72 1 95 2 357 6 343 1 120 1 345 1 370 1 47 2 197 2 332 1 185 1 10 7 
326 1 165 1 113 1 
300 2 113 1 331 1 
224 1 103 2 26 2 13 1 56 2 124 2 263 2 126 2 
361 1 152 2 337 1 124 2 362 1 267 1 126 2 338 1 313 1 247 1 315 1 224 1 103 3 26 2 56 2 270 1 59 1 130 1 9 1 349 1 13 1 187 1 279 1 90 2 37 1 160 1 91 1 117 1 69 1 116 2 191 2 192 1 356 1 145 2 213 1 263 3 146 1 
103 1 26 1 13 1 56 1 124 1 172 1 263 1 46 1 126 1 303 1 
244 1 126 1 173 1 113 1 248 1 355 1 103 1 119 1 263 1 46 1 165 1 149 1 183 1 380 1 
124 1 244 2 126 1 173 1 113 1 355 1 26 1 103 1 56 1 119 2 263 1 46 1 165 1 183 1 380 1 
119 1 244 1 38 1 112 1 190 1 
285 1 119 2 244 2 165 1 113 1 112 1 292 1 190 1 
119 1 244 1 190 1 
13 1 124 1 172 1 244 1 53 1 126 1 112 1 303 1 26 1 103 1 56 1 119 1 263 1 46 1 
113 1 
285 1 119 2 244 2 165 1 113 1 112 1 325 1 190 1 
218 1 285 1 220 2 244 5 302 1 113 1 112 2 67 1 190 2 368 1 341 1 119 5 165 1 307 1 206 2 7 1 19 1 133 2 298 1 
326 1 224 1 
51 1 124 1 126 2 14 1 103 2 26 1 224 2 56 1 263 2 
250 1 35 1 366 1 
267 1 279 1 90 1 338 1 37 1 160 1 91 1 116 1 224 1 103 1 191 1 356 1 59 1 263 1 348 1 9 1 
224 1 103 3 26 3 56 3 124 1 263 3 126 3 101 1 
103 1 26 1 56 1 172 1 263 1 46 1 126 1 
14 1 103 1 26 1 56 1 51 1 124 1 263 1 46 1 126 1 
361 1 51 1 152 1 337 1 267 1 124 2 244 1 126 3 338 1 173 1 313 1 247 1 101 1 315 1 4 1 224 1 103 4 26 3 56 3 270 1 59 1 130 1 183 1 9 1 349 1 13 1 279 1 256 1 90 1 37 1 160 1 91 1 69 1 116 1 355 1 42 1 191 1 356 1 119 1 145 2 263 4 146 1 46 1 380 1 
248 1 224 1 103 2 26 1 56 1 263 2 377 1 126 2 101 1 
51 1 124 1 244 1 126 3 256 1 173 1 113 1 101 2 4 1 355 1 26 3 103 3 56 3 119 1 263 3 46 1 183 1 380 1 231 1 
35 1 51 1 124 1 126 2 101 1 366 1 26 2 103 2 56 2 263 2 
267 1 279 1 90 1 338 1 160 1 37 1 91 1 116 1 224 1 103 1 191 1 356 1 59 1 263 1 9 1 
12 1 267 1 279 1 90 1 338 1 160 1 37 1 91 1 116 1 224 1 103 1 191 1 59 1 263 1 170 1 
361 1 337 1 152 4 363 1 1 1 366 2 315 1 250 2 27 1 270 1 29 1 32 1 349 2 371 1 35 2 106 1 187 2 212 1 69 1 376 1 145 2 45 1 146 1 166 1 
103 1 26 1 56 1 317 1 263 1 46 1 126 1 183 1 
267 1 126 1 279 1 338 1 90 1 37 1 160 1 91 1 101 1 366 1 116 1 4 1 26 1 103 2 191 1 56 1 356 1 59 1 263 2 9 1 
51 1 124 1 126 5 101 2 248 1 4 1 26 4 103 5 224 1 178 1 56 4 263 5 377 1 320 1 
103 2 26 2 317 1 56 2 172 1 263 2 46 1 126 2 
21 1 48 1 
21 1 48 1 
135 1 324 1 
135 1 324 1 
135 1 324 1 
21 1 205 1 48 1 
21 1 205 1 48 1 
21 1 205 1 48 1 
21 1 48 1 20 1 
316 1 21 1 48 1 
135 1 136 1 21 2 324 1 48 2 142 1 
21 1 48 1 20 1 
21 1 48 1 20 1 
253 2 136 1 21 2 36 2 244 2 64 1 312 2 189 1 113 1 68 1 367 1 203 2 164 3 281 1 119 2 358 1 369 1 48 2 241 2 
21 1 287 1 244 1 153 1 126 2 312 1 367 1 222 1 203 1 224 1 26 2 103 2 204 1 56 2 316 1 226 1 273 1 299 1 36 1 164 1 119 1 263 2 48 1 241 1 
236 1 322 1 264 1 
276 1 236 1 322 1 
276 1 342 1 236 3 289 1 264 2 134 1 
276 1 342 1 43 1 236 2 289 1 264 1 
276 1 342 1 236 2 264 1 289 2 
285 1 363 1 220 1 153 1 244 5 55 2 222 1 368 3 204 1 29 1 206 1 228 1 133 1 184 2 274 1 350 1 371 1 85 1 300 3 372 2 302 2 112 4 113 2 190 1 71 1 376 1 98 1 119 5 165 1 331 1 19 1 217 1 
285 1 363 2 220 2 244 8 245 1 55 4 269 1 368 6 204 4 81 1 29 2 206 2 228 2 133 2 298 1 184 4 11 1 274 2 371 2 85 1 300 6 302 4 38 4 112 6 113 4 352 1 190 5 235 1 260 4 376 2 119 8 165 1 331 2 19 1 217 2 
363 1 220 1 244 3 55 2 368 3 204 1 29 1 206 1 228 1 133 1 298 1 184 2 274 1 371 1 300 4 372 1 302 2 113 3 112 2 71 1 376 1 98 1 119 3 165 1 331 2 217 1 
363 1 220 1 244 3 245 1 55 2 269 1 368 3 204 2 81 1 29 1 206 1 228 1 133 1 184 2 298 1 274 1 371 1 300 4 372 1 302 2 113 2 112 2 71 1 376 1 119 3 98 1 331 2 217 1 
326 1 37 1 314 1 
288 1 37 1 
57 1 
37 1 91 1 
311 1 63 1 338 1 37 3 91 1 314 2 
338 1 37 1 91 1 
374 1 37 1 
349 3 371 1 152 7 52 1 106 2 209 1 187 4 246 1 212 3 66 1 373 1 239 2 29 1 16 1 132 1 381 1 50 1 
349 3 371 1 152 7 52 1 106 2 209 1 187 4 246 1 212 3 66 1 373 1 239 2 29 1 16 1 132 1 381 1 50 1 
349 3 371 1 152 7 52 1 106 2 209 1 187 4 246 1 212 3 66 1 373 1 375 1 239 2 29 1 16 1 132 1 381 1 50 1 
52 1 152 31 363 3 246 1 339 1 315 1 270 1 29 4 132 2 61 1 274 3 349 15 371 4 106 5 209 2 187 16 139 4 212 10 66 1 373 2 69 1 94 1 305 3 376 3 261 1 145 2 73 1 239 3 146 1 16 1 194 1 150 1 381 2 50 5 
349 4 371 1 52 1 152 9 106 3 209 1 187 5 246 1 339 1 212 4 66 1 373 1 315 2 69 2 155 1 270 2 145 4 239 2 146 2 29 1 147 1 132 1 381 1 50 1 
334 1 364 1 2 1 100 1 129 1 59 1 345 1 8 1 252 1 296 1 134 1 10 2 232 1 276 1 322 1 159 1 279 1 65 1 90 1 210 1 259 1 116 1 191 1 236 2 357 2 264 1 197 1 198 1 77 1 169 1 
283 1 334 1 286 1 364 1 2 1 100 1 129 1 59 1 8 1 272 1 252 1 296 1 134 1 10 3 232 2 276 1 322 1 159 1 279 1 65 1 90 1 210 1 116 1 191 1 236 2 357 3 264 1 197 1 198 1 169 1 
286 1 364 1 2 1 100 1 129 1 59 1 8 1 272 1 296 1 134 1 10 2 232 2 276 1 322 1 159 1 279 1 210 1 65 1 90 1 116 1 191 1 236 2 357 2 264 1 198 1 
283 1 334 1 364 2 291 1 128 1 129 2 59 1 207 1 10 1 108 1 279 1 257 1 65 2 90 1 210 2 160 1 37 1 91 1 116 1 191 1 357 1 197 1 76 1 
334 1 286 1 364 1 100 1 129 1 59 1 345 1 8 1 252 1 296 1 134 1 10 1 276 1 322 1 279 1 65 1 90 1 210 1 116 1 191 1 236 2 357 1 264 1 197 1 77 1 169 1 
340 1 
199 2 284 1 285 3 242 2 244 5 291 1 248 1 5 1 103 1 59 1 347 1 206 1 300 2 160 2 302 2 113 2 114 1 115 1 116 2 354 4 355 1 119 5 263 1 165 1 216 2 19 1 217 1 310 1 220 1 126 1 173 1 127 1 368 2 128 1 318 1 180 1 271 2 227 1 183 1 319 1 133 1 279 1 323 2 234 2 90 2 37 1 91 1 190 6 191 2 328 2 46 1 148 1 149 1 331 2 380 1 
284 1 285 1 244 3 126 1 173 1 114 1 325 1 115 1 190 2 5 1 354 2 248 1 355 1 103 1 119 3 263 1 46 1 183 1 227 1 149 1 216 1 380 1 
284 1 285 1 244 3 126 1 173 1 113 1 114 1 325 1 115 1 190 1 5 1 354 3 248 1 355 1 103 1 119 3 263 1 46 1 165 1 271 1 183 1 227 1 149 1 380 1 
284 1 285 1 242 1 244 3 126 1 173 1 248 1 5 1 103 1 271 1 227 1 183 1 113 1 114 1 325 1 115 1 190 2 354 3 355 1 119 3 263 1 46 1 165 1 149 1 216 1 380 1 
199 2 310 1 284 1 285 3 242 4 220 1 244 5 126 1 173 1 368 1 248 1 5 1 103 1 347 1 206 1 271 4 227 1 183 1 133 1 62 1 158 1 323 2 234 2 302 1 113 5 114 1 258 1 115 1 325 1 190 7 354 6 355 1 328 2 119 5 263 1 46 1 165 5 149 1 195 1 331 2 19 1 216 4 380 1 282 1 
199 2 284 1 310 1 285 2 242 2 220 1 244 4 126 1 173 1 368 1 248 1 5 1 103 1 347 1 271 2 206 1 227 1 183 1 319 1 133 1 300 2 323 2 234 2 302 1 113 2 114 1 115 1 190 4 354 4 355 1 328 2 119 4 263 1 46 1 165 1 149 1 331 2 216 2 19 1 380 1 
199 2 310 1 284 1 285 2 242 2 220 1 244 4 126 1 173 1 368 1 248 1 5 1 103 1 347 1 271 2 206 1 227 1 183 1 133 1 158 1 323 2 234 2 302 1 113 1 114 1 115 1 190 4 354 4 355 1 328 2 119 4 263 1 46 1 165 1 149 1 195 1 331 2 216 2 19 1 380 1 282 1 
199 2 310 1 284 1 285 2 242 2 220 1 244 4 126 1 173 1 368 1 248 1 5 1 103 1 347 1 271 2 206 1 227 1 183 1 133 1 158 1 323 2 234 2 302 1 113 1 114 1 115 1 190 4 354 4 355 1 328 2 119 4 263 1 46 1 165 1 149 1 195 1 331 2 216 2 19 1 380 1 282 1 
199 2 284 1 285 2 242 2 220 1 79 1 244 4 126 1 173 1 23 1 368 1 248 1 5 1 103 1 58 2 347 1 295 1 271 2 206 1 131 2 227 1 183 1 133 1 300 2 234 2 302 1 113 1 114 1 115 1 190 4 354 4 355 1 119 4 263 1 46 1 165 1 149 1 195 1 216 2 19 1 380 1 
284 1 242 1 62 1 158 1 244 2 126 1 173 1 114 1 115 1 190 1 5 1 354 3 248 1 355 1 103 1 119 2 263 1 46 1 271 1 183 1 227 1 149 1 216 1 380 1 
284 1 242 1 62 1 158 1 244 2 126 1 173 1 114 1 115 1 190 1 5 1 354 3 248 1 355 1 103 1 119 2 263 1 46 1 271 1 183 1 227 1 149 1 216 1 380 1 
199 2 284 1 285 2 242 2 220 1 244 4 126 1 173 1 23 1 368 1 248 1 5 1 103 1 58 2 347 1 271 2 206 1 131 2 227 1 183 1 319 1 133 1 300 2 234 2 302 1 113 1 114 1 115 1 190 4 354 4 355 1 119 4 263 1 46 1 165 1 149 1 216 2 19 1 380 1 
361 1 52 1 337 1 152 6 246 1 366 1 315 1 224 2 250 1 270 1 29 1 349 3 35 1 371 1 106 2 209 1 187 3 212 2 66 1 373 1 69 1 326 1 145 2 45 1 239 1 146 1 
265 1 309 1 361 2 337 1 152 14 363 2 313 1 366 11 315 2 224 1 250 11 270 2 29 2 274 2 349 6 35 4 371 1 106 1 107 1 187 8 88 1 139 3 212 2 117 1 69 2 305 3 376 1 145 4 146 2 214 1 194 1 150 1 50 1 
361 1 267 1 337 1 152 2 243 1 126 1 338 1 313 1 101 1 315 1 4 1 224 1 103 2 26 1 56 1 59 1 270 1 348 1 9 1 349 1 35 1 187 1 279 1 90 1 37 1 160 1 91 1 116 1 69 1 117 1 191 1 327 1 356 1 145 2 263 2 146 1 214 1 330 1 
286 1 52 1 337 3 152 20 246 1 338 2 101 1 247 2 4 1 103 3 250 7 56 1 59 2 9 2 349 10 254 1 106 4 209 1 161 1 160 1 212 8 66 1 117 1 116 3 69 3 163 2 356 2 263 3 214 1 168 2 361 3 308 2 267 2 363 2 126 1 313 1 366 7 315 3 224 2 26 1 270 3 29 3 31 1 274 2 371 3 35 7 187 10 277 2 279 2 90 3 37 2 91 2 373 1 191 3 376 2 145 6 239 1 146 3 50 4 
99 1 361 2 286 1 125 1 337 2 152 2 201 1 126 1 54 1 313 1 291 1 101 1 315 2 103 1 26 1 128 1 56 1 59 2 270 2 33 1 349 1 187 1 89 1 279 2 90 8 37 3 160 2 91 2 259 1 353 1 116 8 69 2 117 1 191 7 192 2 145 4 45 1 263 1 146 2 
361 1 51 1 124 1 337 1 363 1 152 3 126 1 366 1 315 1 250 1 26 1 103 1 56 1 270 1 29 1 274 1 349 2 35 1 371 1 106 1 187 1 212 1 69 1 304 1 376 1 145 2 263 1 146 1 214 1 
32 1 361 1 35 1 152 2 337 1 363 1 187 2 212 1 366 1 315 1 69 1 250 1 270 1 145 2 45 1 146 1 29 1 50 1 
361 1 349 2 35 1 371 1 152 2 337 1 106 1 212 1 366 1 315 1 69 1 250 1 376 1 270 1 145 2 45 1 146 1 166 1 
361 1 363 1 337 1 152 4 366 2 315 1 250 2 270 1 29 1 274 1 349 2 35 2 371 1 106 1 187 2 212 2 69 1 376 1 145 2 45 1 146 1 50 1 
32 1 361 1 35 1 152 2 337 1 363 1 187 2 54 1 212 1 366 1 315 1 69 1 250 1 270 1 145 2 146 1 29 1 50 1 
361 1 349 2 35 1 371 1 152 2 337 1 106 1 54 1 212 1 366 1 315 1 69 1 250 1 376 1 270 1 145 2 146 1 166 1 
361 1 363 1 337 1 152 4 54 1 366 2 315 1 250 2 270 1 29 1 274 1 349 2 35 2 371 1 106 1 187 2 212 2 69 1 376 1 145 2 146 1 50 1 
274 1 349 2 361 1 371 1 35 2 337 1 363 1 152 4 106 1 187 2 212 2 366 2 315 1 69 1 250 2 376 1 270 1 145 2 146 1 29 1 50 1 
361 1 152 2 267 1 337 1 338 1 313 1 247 1 315 1 224 1 103 1 59 1 270 1 9 1 349 1 187 1 279 1 90 1 160 1 37 1 91 1 117 1 116 1 69 1 191 1 356 1 145 2 263 1 146 1 
361 1 152 2 267 1 337 1 338 1 313 1 315 1 224 1 179 1 103 1 59 1 270 1 12 1 349 1 187 1 279 1 90 1 160 1 37 1 91 1 117 1 116 1 69 1 191 1 145 2 263 1 146 1 170 1 
361 1 363 1 337 1 152 4 366 2 315 1 250 2 270 1 29 1 274 1 349 2 35 2 371 1 106 1 187 2 212 2 69 1 376 1 145 2 146 1 214 1 50 1 
361 1 152 4 363 1 267 1 337 1 338 1 247 1 366 2 315 1 250 2 103 1 59 1 270 1 29 1 9 1 274 1 349 2 371 1 35 2 106 1 187 2 279 1 90 1 37 1 91 1 212 2 259 1 116 1 69 1 191 1 376 1 356 1 145 2 263 1 146 1 168 1 50 1 
333 1 361 1 51 1 124 1 337 1 363 1 152 3 126 1 366 1 315 1 26 1 103 1 250 1 56 1 270 1 29 1 274 1 349 1 371 1 35 1 187 2 212 1 69 1 376 1 145 2 263 1 146 1 214 1 50 1 
152 19 363 3 175 1 315 2 24 1 155 1 25 1 249 1 270 2 29 3 274 3 349 10 371 3 106 3 137 1 187 9 278 1 139 2 140 1 212 6 69 2 305 1 376 3 359 2 145 4 146 2 215 2 194 1 150 1 50 3 
152 26 363 3 339 2 175 2 365 1 176 1 315 3 24 1 155 1 25 2 249 1 28 1 270 3 29 3 274 3 349 12 34 1 371 2 106 2 187 14 351 1 139 2 212 4 140 1 69 3 305 2 376 2 359 1 145 6 146 3 215 4 121 1 150 2 50 2 
52 1 152 41 363 4 246 1 339 1 365 1 175 2 176 1 315 3 24 1 155 1 25 1 249 1 28 1 270 3 29 5 274 4 34 1 349 21 371 5 106 4 209 1 187 20 278 1 351 1 139 4 140 1 212 8 66 1 373 1 69 3 305 3 376 4 359 1 145 6 44 1 239 1 146 3 121 1 215 4 194 1 150 3 50 4 
52 1 152 38 363 4 246 1 339 2 365 1 175 2 176 1 315 4 24 1 155 1 25 1 249 1 28 1 270 4 29 5 274 4 34 1 349 18 371 4 106 4 209 1 187 20 278 1 351 1 139 4 140 1 212 7 66 1 373 1 69 4 305 3 376 3 359 1 145 8 44 1 239 1 146 4 121 1 215 4 194 1 150 3 50 3 
52 1 152 52 363 7 246 1 339 1 365 1 175 1 176 1 315 2 24 1 155 1 25 1 249 1 28 1 270 2 29 8 274 7 34 1 349 25 371 8 106 7 209 1 107 2 187 27 351 1 139 4 140 1 212 14 66 1 373 1 69 2 305 4 376 7 359 1 145 4 239 1 146 2 121 1 215 4 194 2 150 2 50 7 
203 1 136 1 21 1 36 1 64 1 369 1 312 1 196 1 48 1 241 1 
316 1 273 1 
40 1 203 1 21 1 36 1 312 1 30 1 48 1 268 1 241 1 
253 1 136 1 21 1 36 1 244 1 64 1 312 1 113 1 68 1 367 1 203 1 164 2 281 1 119 1 358 1 369 1 48 1 241 1 
253 1 136 1 21 1 36 1 244 1 64 1 312 1 113 1 68 1 367 1 203 1 164 2 281 1 119 1 358 1 369 1 48 1 241 1 
253 1 136 1 21 1 36 1 244 1 64 1 312 1 113 1 68 1 367 1 203 1 164 2 281 1 119 1 358 1 369 1 48 1 241 1 
138 1 205 1 142 1 
138 1 205 1 142 1 
221 1 20 1 
221 1 142 1 20 1 
287 1 226 1 
21 1 287 1 244 1 153 1 126 2 312 1 222 1 203 1 224 1 103 2 204 1 26 2 316 1 56 2 226 1 157 1 273 1 299 1 253 1 36 1 112 1 164 1 119 1 358 1 263 2 48 1 241 1 
138 1 205 1 
221 1 142 1 20 1 
171 1 361 1 200 1 337 1 152 2 126 2 313 1 315 1 103 2 59 1 270 1 275 1 33 1 349 1 187 1 279 1 90 2 37 1 91 1 39 1 353 1 116 2 69 1 117 1 162 1 191 2 192 2 145 2 263 2 146 1 214 1 
276 1 286 1 322 1 279 1 90 2 259 1 116 2 191 2 236 2 59 1 129 1 264 1 8 1 296 1 167 1 134 1 240 1 229 1 169 1 
276 1 286 1 322 1 279 1 90 1 116 1 191 1 236 2 129 1 59 1 264 1 8 1 74 1 296 1 134 1 240 1 169 1 
279 1 90 1 37 1 160 1 91 1 291 1 116 1 191 1 128 1 59 1 129 1 167 1 122 1 76 1 
276 1 286 1 322 1 279 1 90 1 116 1 191 1 236 2 129 1 59 1 264 1 8 1 296 1 167 1 134 1 240 1 229 1 169 1 
223 1 
368 1 341 1 326 1 165 1 307 1 302 1 113 1 
310 1 285 1 300 1 220 1 244 1 323 1 302 1 113 2 190 1 368 1 119 1 328 1 165 1 206 1 331 1 19 1 133 1 
285 3 244 5 288 3 338 3 102 2 55 6 202 1 341 1 6 1 59 3 206 4 104 2 300 12 109 2 63 1 160 1 302 8 113 8 259 1 116 3 355 2 163 2 119 5 165 2 307 1 19 4 217 2 123 2 363 2 220 4 22 1 314 2 177 2 368 9 29 2 83 1 133 4 84 2 184 6 274 2 371 2 279 4 188 1 90 3 37 10 91 3 190 5 374 2 191 3 96 2 376 2 238 2 148 1 331 6 
266 1 285 1 363 2 220 2 244 1 365 1 176 1 55 5 177 2 368 8 28 1 182 1 29 2 206 2 133 2 184 5 274 2 34 1 371 2 300 6 139 1 302 5 113 5 190 1 119 1 305 1 376 2 238 1 165 2 148 1 121 1 331 3 150 1 19 2 217 1 
124 1 172 1 220 1 244 1 53 1 126 1 246 1 177 2 368 2 103 1 26 1 56 1 29 2 206 1 297 1 133 1 13 1 371 1 209 1 302 2 373 1 303 1 119 1 238 1 263 1 46 1 19 1 282 1 
220 1 302 1 113 1 341 1 368 1 165 1 307 1 206 1 19 1 133 1 
274 2 371 2 363 2 300 10 302 5 113 5 55 5 177 2 368 5 163 1 376 2 238 1 29 2 331 5 184 5 
285 1 119 1 244 1 165 1 113 1 190 1 
285 2 220 2 244 3 291 1 127 1 202 1 368 2 128 1 6 2 318 1 225 1 59 1 206 2 133 2 298 1 279 1 90 4 37 1 160 2 91 1 302 2 116 4 190 4 191 4 280 1 119 3 148 2 19 1 217 2 
361 1 152 1 124 2 267 1 337 1 126 2 338 1 313 1 247 1 315 1 224 1 103 3 26 2 56 2 270 1 59 1 130 1 9 1 349 1 13 1 279 1 90 1 160 1 37 1 91 1 69 1 116 1 191 1 356 1 145 2 263 3 146 1 
300 4 220 1 302 2 113 4 55 2 368 1 239 1 165 2 206 1 148 1 331 2 19 1 133 1 184 2 217 1 
203 1 360 1 312 1 
203 1 360 1 312 1 
203 1 360 1 312 1 
203 1 233 1 312 1 
203 1 287 1 64 1 312 1 80 1 
203 1 233 1 312 1 
203 1 233 1 312 1 
203 1 312 1 
21 1 48 1 
349 4 371 1 152 8 52 1 106 2 187 4 209 1 246 1 339 1 212 3 66 1 315 2 69 2 373 1 270 2 145 4 239 1 146 2 29 1 50 1 
349 3 371 1 52 1 152 6 106 2 209 1 187 3 246 1 212 2 66 1 373 1 326 1 239 1 29 1 
274 1 349 2 371 1 363 1 152 4 106 1 187 2 110 1 212 2 315 1 69 1 376 1 270 1 145 2 146 1 29 1 50 1 
274 1 349 4 371 1 152 7 363 1 106 1 187 3 139 2 212 2 376 1 305 1 29 1 194 1 150 1 50 1 
265 1 52 1 363 2 152 23 246 1 339 2 315 2 270 2 29 3 274 2 349 12 371 3 106 5 209 2 187 11 107 1 139 2 212 9 66 1 373 2 69 2 305 2 376 2 145 4 239 1 146 2 17 1 194 1 50 4 
349 1 152 1 139 1 
152 1 305 1 187 1 
274 1 349 3 371 1 152 6 363 1 106 2 187 3 110 1 212 3 69 1 315 1 163 1 376 1 145 2 270 1 146 1 29 1 50 1 
152 12 363 2 365 1 176 1 315 1 155 1 270 1 28 1 29 2 274 2 349 6 34 1 371 2 106 1 187 6 139 1 212 2 69 1 305 1 376 2 145 2 146 1 121 1 150 1 50 1 
349 3 371 1 152 6 106 1 187 3 209 1 246 1 212 2 373 1 29 1 50 1 
349 2 152 3 52 1 106 1 187 1 209 1 339 1 212 2 66 1 373 1 315 1 69 1 270 1 145 2 146 1 17 1 50 1 
349 6 371 2 152 12 106 3 209 2 187 6 246 1 212 6 373 2 29 2 297 1 50 3 
363 1 152 2 187 2 212 1 315 1 69 1 155 1 270 1 145 2 146 1 29 1 50 1 
274 1 349 2 371 1 363 1 152 4 106 1 187 2 212 2 315 1 69 1 155 1 376 1 270 1 145 2 146 1 29 1 50 1 
349 2 152 3 106 1 209 1 187 1 278 1 339 1 212 2 315 3 69 3 373 1 155 1 270 3 145 6 146 3 17 1 50 1 
52 1 152 34 363 3 246 2 339 2 315 5 155 1 270 5 29 5 274 3 349 18 371 5 106 7 209 3 187 16 110 1 278 1 139 4 212 12 66 1 373 3 69 5 94 1 261 1 305 3 376 3 145 10 239 1 73 1 146 5 17 1 194 1 150 1 50 5 
152 8 52 1 246 1 315 1 155 1 270 1 29 1 349 4 34 1 371 1 106 2 187 4 209 1 139 1 212 2 66 1 69 1 373 1 305 1 145 2 239 1 146 1 150 1 
52 1 152 11 363 1 246 1 315 2 155 1 270 2 29 2 274 1 349 5 34 1 371 1 106 2 209 1 187 6 110 1 139 2 212 3 66 1 373 1 69 2 305 1 145 4 239 1 146 2 194 1 150 1 50 1 
52 1 152 19 363 2 246 1 339 1 365 1 176 1 315 3 155 1 28 1 270 3 29 3 274 2 349 10 34 1 371 3 106 3 209 1 187 9 110 1 139 1 212 4 66 1 373 1 69 3 305 1 376 2 145 6 239 1 146 3 121 1 150 1 50 1 
52 1 152 17 363 2 246 1 339 1 365 1 176 1 315 3 155 1 270 3 28 1 29 3 274 2 349 7 34 1 371 2 106 3 209 1 187 10 110 1 139 1 212 5 66 1 373 1 69 3 305 1 376 1 145 6 239 1 146 3 121 1 150 1 50 2 
152 8 52 1 246 1 315 1 155 1 270 1 29 1 349 4 34 1 371 1 106 2 187 4 209 1 139 1 212 2 66 1 69 1 373 1 305 1 145 2 239 1 146 1 150 1 
152 12 363 2 365 1 176 1 315 1 155 1 270 1 28 1 29 2 274 2 349 6 34 1 371 2 106 1 187 6 139 1 212 2 69 1 305 1 376 2 145 2 146 1 121 1 150 1 50 1 
52 1 152 18 363 2 246 1 339 2 365 1 176 1 315 4 155 1 28 1 270 4 29 3 274 2 349 8 34 1 371 2 106 3 209 1 187 10 110 1 139 1 212 5 66 1 373 1 69 4 305 1 376 1 145 8 239 1 146 4 121 1 150 1 50 2 
152 16 363 3 339 2 365 1 176 1 315 4 155 1 28 1 270 4 29 3 274 3 349 7 34 1 371 2 106 3 187 9 278 1 139 1 212 6 69 4 305 1 376 2 145 8 146 4 121 1 150 1 50 3 
349 4 371 1 152 7 52 1 106 3 209 3 187 3 246 1 212 6 66 2 373 3 29 1 50 3 
52 1 152 18 363 2 246 1 339 2 365 1 176 1 315 4 155 1 28 1 270 4 29 3 274 2 349 8 34 1 371 2 106 3 209 1 187 10 278 1 139 1 212 4 66 1 373 1 69 4 305 1 376 1 145 8 239 1 146 4 121 1 150 1 50 1 
248 1 224 1 103 1 263 1 126 1 377 1 92 1 
105 1 87 1 126 1 92 1 118 1 248 1 224 1 103 1 263 1 377 1 378 1 230 1 
326 1 128 1 191 1 59 1 279 1 90 1 37 1 160 1 91 1 291 1 116 1 
267 1 126 1 279 1 338 1 90 1 37 1 160 1 91 1 101 1 116 1 224 1 26 1 103 2 191 1 56 1 356 1 59 1 263 2 
267 1 126 2 338 2 101 1 224 1 103 2 26 1 6 1 56 2 59 1 183 1 279 1 90 1 37 3 91 2 116 1 374 1 191 1 96 1 356 1 263 2 46 1 380 1 
267 1 126 2 338 2 101 1 224 1 103 2 26 1 6 1 56 2 59 1 183 1 12 1 279 1 90 2 37 3 91 2 116 2 374 1 191 2 96 1 263 2 46 1 75 1 380 1 
244 2 0 1 288 1 279 1 338 1 90 3 160 1 37 4 91 1 113 1 314 1 154 1 116 3 190 1 355 1 374 1 191 3 96 1 6 1 119 2 59 1 165 1 75 1 
104 1 244 2 288 1 279 1 338 1 90 3 160 1 37 4 91 1 113 1 314 1 116 3 190 1 355 1 374 1 191 3 96 1 6 1 119 2 59 1 165 1 75 1 
191 1 59 1 201 1 279 1 90 1 116 1 
99 1 286 1 125 1 186 1 201 1 63 1 89 1 279 3 90 7 338 1 160 2 37 3 91 2 259 1 353 1 116 7 191 6 192 1 181 1 294 1 59 2 
337 2 52 1 152 6 338 1 246 1 247 1 101 1 103 2 250 1 56 1 59 1 9 1 349 3 106 2 209 1 212 2 66 1 259 1 116 1 69 2 356 1 263 2 214 1 168 1 308 1 361 2 267 1 126 1 366 1 315 2 26 1 224 2 270 2 29 1 35 1 371 1 187 3 279 1 90 1 37 1 91 1 39 1 373 1 191 1 145 4 239 1 146 2 
285 1 220 2 244 3 288 1 314 1 368 1 341 1 202 1 206 2 133 2 84 1 104 1 109 1 90 1 160 1 37 2 302 1 113 1 112 1 116 1 190 2 355 1 191 1 119 3 165 1 307 1 19 2 123 1 
22 1 201 1 63 1 279 2 90 2 338 1 37 2 91 1 314 1 259 1 116 2 191 2 59 1 
335 1 279 1 90 4 160 1 37 1 291 1 91 1 259 1 116 4 191 4 128 1 59 1 75 1 
78 1 186 1 279 2 90 2 338 1 161 1 37 1 91 1 116 2 191 2 6 1 294 1 59 1 156 1 
276 1 191 1 236 1 322 1 59 1 279 1 8 1 90 1 160 1 116 1 
275 1 286 1 279 1 90 2 37 1 91 1 259 1 116 2 353 1 191 2 59 1 
335 1 125 1 279 2 89 1 90 5 160 1 37 3 291 1 91 2 259 1 116 5 353 1 128 1 191 4 6 1 59 2 
335 1 86 1 279 2 89 1 90 5 160 1 37 3 291 1 91 2 259 1 116 5 353 1 128 1 191 4 6 1 59 2 
12 1 267 1 126 1 279 1 338 1 90 1 37 1 160 1 91 1 101 1 116 1 224 1 26 1 103 2 191 1 56 1 59 1 263 2 
186 1 63 1 279 2 90 1 338 1 37 1 91 1 116 1 191 1 6 1 181 1 294 1 59 1 
171 1 200 1 219 1 126 1 290 1 141 1 162 1 103 1 263 1 
97 1 290 1 49 1 
224 1 237 1 219 1 290 1 141 1 
219 2 244 2 256 1 173 1 290 1 113 1 112 1 141 2 70 1 355 1 224 1 97 1 119 2 237 2 46 1 165 1 183 1 49 1 380 1 
326 1 159 1 2 1 198 1 
334 1 357 1 159 1 2 1 197 1 198 1 10 1 
357 1 364 1 210 1 
334 1 159 1 255 1 211 2 2 1 144 1 357 3 345 1 197 1 18 1 198 1 10 3 
232 1 334 1 357 1 197 1 332 1 10 2 
95 1 236 1 334 1 357 1 322 1 159 1 264 1 301 1 345 1 197 1 10 1 
334 1 357 1 159 1 345 1 2 1 197 1 10 1 
334 1 357 1 345 1 2 2 197 1 198 1 10 1 
93 1 334 2 357 2 159 1 345 1 174 1 2 1 197 2 151 1 10 2 
232 2 334 1 159 2 2 1 95 1 357 3 345 1 370 1 47 1 197 1 198 1 10 3 185 1 
276 1 232 1 334 1 322 1 159 1 2 1 111 1 236 2 357 2 345 1 264 1 197 1 198 1 134 1 10 2 
232 1 334 1 357 1 345 1 197 1 332 1 293 1 10 2 
334 1 357 1 159 1 345 1 2 1 197 1 198 1 10 1 
232 2 334 1 159 3 255 1 211 1 2 2 95 1 144 1 357 4 82 1 47 1 197 1 198 2 10 4 
232 1 72 1 334 1 357 2 159 1 345 1 60 1 2 1 197 1 198 1 3 1 10 2 
334 1 159 1 255 2 211 2 2 1 144 1 357 3 345 1 329 1 197 1 198 1 10 3 
262 1 344 2 193 1 159 2 
15 1 334 1 357 1 345 1 197 1 10 1 
232 1 334 1 357 2 159 1 345 1 2 1 197 1 198 1 185 1 10 2 
251 1 
334 1 357 1 159 1 345 1 2 1 197 1 198 1 10 1 
232 1 334 1 357 3 159 1 345 1 211 1 2 1 197 1 198 1 185 1 10 3 
95 1 82 1 159 1 47 1 
159 1 2 1 

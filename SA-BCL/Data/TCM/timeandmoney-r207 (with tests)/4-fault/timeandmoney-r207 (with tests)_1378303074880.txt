#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 31 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 31 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 (76,158) (76,158) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 (76,158) (76,158) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 (76,158) (76,158) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 (76,158) (76,158) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 264 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 264 61 272 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 264 61 272 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 264 61 272 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 9 308 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
291 1 265 1 182 1 258 1 305 2 20 4 155 7 266 3 63 1 253 1 175 1 91 1 316 1 338 2 67 9 60 9 70 1 127 1 205 4 276 1 18 2 31 1 
291 1 265 1 182 1 258 1 305 2 155 7 20 4 266 3 63 1 253 1 175 1 91 1 316 1 338 2 67 9 60 9 70 1 127 1 205 4 276 1 18 2 31 1 
291 1 258 1 265 2 182 2 305 2 307 1 155 6 20 4 266 3 76 1 63 1 103 1 352 1 253 1 175 2 158 1 177 1 91 2 316 1 338 2 67 9 60 9 70 1 127 1 205 4 18 2 
291 1 258 1 265 2 182 2 305 2 307 1 155 6 20 4 266 3 76 1 63 1 103 1 352 1 253 1 175 2 158 1 177 1 91 2 316 1 338 2 67 9 60 9 70 1 127 1 205 4 18 2 
291 1 258 1 265 2 182 2 305 2 307 1 155 6 20 4 266 3 76 1 63 1 103 1 352 1 253 1 175 2 158 1 177 1 91 2 316 1 338 2 67 9 60 9 70 1 127 1 205 4 18 2 
291 1 258 1 265 2 182 2 305 1 307 1 155 4 20 3 266 2 76 1 63 1 103 1 352 1 253 1 175 2 158 1 177 1 91 2 338 2 67 7 60 7 70 1 127 1 205 3 18 2 
265 1 182 1 305 2 155 3 20 2 266 1 253 1 91 1 316 1 338 1 67 4 60 4 70 1 127 1 205 2 18 1 
265 1 1 1 33 1 102 1 103 1 243 1 352 1 175 1 91 1 338 1 67 2 60 2 127 1 165 1 205 1 18 1 
102 1 20 1 155 1 266 1 63 1 243 1 175 1 338 2 67 3 60 3 127 1 205 2 18 2 
238 1 11 1 278 1 
313 1 278 1 208 2 
109 2 322 2 78 2 172 1 6 2 96 1 141 2 44 2 
129 1 73 1 322 2 293 1 211 2 363 2 364 1 23 1 53 1 78 2 298 1 79 1 6 3 7 1 141 3 164 1 347 2 109 2 330 1 83 1 34 1 172 1 351 1 196 1 10 1 12 1 245 1 90 2 40 1 246 1 201 1 152 2 380 1 96 1 126 1 44 2 180 1 
109 1 322 1 78 1 93 1 6 1 96 1 141 1 150 1 87 1 44 1 
322 1 173 1 11 1 87 1 176 1 120 1 77 1 178 1 80 1 6 1 203 1 141 1 278 1 207 1 
109 1 322 1 173 1 11 1 87 1 120 2 77 1 178 1 78 1 80 2 6 1 203 1 141 1 44 1 278 1 
59 1 80 1 303 1 120 1 38 1 
109 1 322 1 11 1 150 1 87 1 120 2 38 1 39 1 217 1 78 1 93 1 80 2 6 1 96 1 356 1 141 1 44 1 303 1 278 1 
80 1 120 1 38 1 
109 1 322 1 150 1 87 1 120 1 217 1 93 1 78 1 80 1 6 1 96 1 141 1 303 1 44 1 
278 1 
39 1 80 2 11 1 303 1 120 2 278 1 38 1 244 1 
233 2 169 1 171 1 234 1 174 2 11 1 365 1 104 1 120 5 38 2 39 1 58 1 262 1 162 2 80 5 202 1 303 2 189 1 278 1 
238 1 172 1 
109 1 145 1 322 2 172 2 138 1 78 1 6 2 141 2 44 1 
321 1 27 1 336 1 
330 1 83 1 172 1 211 1 10 1 23 1 90 1 245 1 52 1 40 1 53 1 6 1 152 1 7 1 380 1 141 1 
109 3 322 3 78 3 172 1 224 1 6 3 141 3 44 1 
109 1 322 1 78 1 6 1 141 1 150 1 87 1 
109 1 145 1 138 1 322 1 78 1 6 1 141 1 87 1 44 1 
129 1 322 3 293 1 211 1 363 1 21 1 23 1 77 1 53 1 138 1 78 3 79 1 80 1 6 4 7 1 141 4 8 1 164 1 347 2 109 3 83 1 330 1 34 1 172 1 173 1 196 1 10 1 224 1 87 1 120 1 12 1 245 1 90 1 178 1 40 1 122 1 246 1 201 1 152 1 380 1 203 1 96 1 126 1 44 2 
109 1 322 2 78 1 172 1 6 2 224 1 81 1 141 2 207 1 
109 3 322 3 173 1 224 2 335 1 87 1 120 1 77 1 178 1 138 1 122 1 78 3 80 1 6 3 203 1 141 3 8 1 44 1 278 1 
109 2 322 2 224 1 336 1 138 1 78 2 6 2 27 1 141 2 44 1 
330 1 83 1 172 1 211 1 10 1 23 1 90 1 245 1 40 1 53 1 6 1 152 1 380 1 7 1 141 1 
83 1 172 1 211 1 10 1 183 1 90 1 245 1 40 1 53 1 107 1 6 1 152 1 380 1 7 1 141 1 
231 1 99 1 321 2 293 2 101 1 363 4 364 2 214 1 295 1 57 1 27 2 301 1 164 1 347 2 373 1 144 1 62 1 196 1 336 2 12 1 94 1 246 1 201 1 126 1 
109 1 354 1 322 1 78 1 6 1 141 1 87 1 77 1 
109 1 83 1 330 1 322 1 211 1 10 1 224 1 23 1 245 1 90 1 40 1 53 1 122 1 78 1 27 1 6 2 152 1 7 1 380 1 141 2 
109 4 322 5 172 1 224 2 254 1 138 1 122 1 78 4 379 1 6 5 81 1 141 5 44 1 207 1 
354 1 109 2 322 2 78 2 6 2 141 2 150 1 87 1 
361 1 163 1 
361 1 163 1 
273 1 151 1 
273 1 151 1 
273 1 151 1 
361 1 3 1 163 1 
361 1 3 1 163 1 
257 1 361 1 163 1 
191 1 361 2 273 1 163 2 156 1 151 1 
361 1 3 1 163 1 
361 1 163 1 320 1 
361 1 163 1 320 1 
361 1 163 1 320 1 
220 3 191 1 46 1 361 2 170 1 36 1 267 1 88 2 120 2 327 1 367 2 255 1 80 2 339 2 185 2 274 2 163 2 241 1 278 1 
257 1 220 1 109 2 72 1 361 1 331 1 322 2 172 1 323 1 212 1 120 1 88 1 327 1 78 2 26 1 80 1 6 2 339 1 185 1 274 1 163 1 141 2 358 1 206 1 
91 1 265 1 182 1 
91 1 265 1 1 1 
91 3 182 2 65 1 1 1 325 1 142 1 
111 1 91 2 182 1 65 1 1 1 325 1 
91 2 182 1 65 2 1 1 325 1 
233 1 100 1 101 1 323 1 212 1 137 1 365 2 215 2 297 2 26 1 57 1 162 1 58 1 80 5 302 1 303 4 278 2 373 1 144 1 169 3 174 1 376 2 11 1 120 5 38 1 284 1 39 1 313 1 123 1 124 1 16 1 208 3 
233 2 101 3 323 4 137 1 344 1 365 6 366 1 215 6 297 6 57 3 140 1 58 1 162 2 59 5 80 9 372 1 302 2 303 7 278 5 373 3 144 3 169 8 147 1 174 2 11 1 120 9 38 6 284 2 39 1 313 3 314 5 262 1 124 3 43 1 208 9 
233 1 100 1 101 1 323 1 365 2 215 2 297 2 57 1 162 1 80 3 302 1 303 2 278 3 373 1 144 1 169 3 174 1 376 1 11 1 120 3 284 1 313 2 262 1 124 1 16 1 208 4 
233 1 100 1 101 2 323 2 344 1 365 4 366 1 215 4 297 4 57 2 162 1 80 4 302 1 303 3 278 4 373 2 144 2 169 5 147 1 174 1 376 2 11 1 120 4 284 1 313 3 262 1 124 2 16 1 208 7 
238 1 7 1 268 1 
195 1 7 1 
154 1 
7 1 245 1 
268 2 7 3 380 1 69 1 236 1 245 1 
7 1 380 1 245 1 
360 1 7 1 
373 1 45 1 250 1 144 1 2 1 293 3 363 7 114 1 364 4 295 2 105 1 66 2 94 3 228 1 188 1 340 1 290 1 
373 1 45 1 250 1 144 1 2 1 293 3 363 7 114 1 364 4 295 2 105 1 66 2 94 3 228 1 188 1 340 1 290 1 
373 1 45 1 250 1 144 1 304 1 2 1 293 3 363 7 114 1 364 4 295 2 105 1 66 2 94 3 228 1 188 1 340 1 290 1 
45 2 250 2 2 1 362 1 293 15 101 3 363 31 294 1 364 16 295 5 105 1 57 3 164 1 166 1 188 2 219 1 347 2 329 1 373 4 144 4 114 2 12 1 92 4 66 3 94 10 246 1 288 3 228 1 201 1 124 3 319 1 248 1 340 5 290 1 
250 1 45 1 2 1 293 4 363 9 294 1 364 5 295 3 105 1 164 2 188 1 347 4 373 1 144 1 35 1 114 1 310 1 12 2 66 2 94 4 246 2 201 2 340 1 290 1 
265 1 182 1 232 1 1 1 102 1 155 1 211 1 343 1 51 1 54 1 60 2 346 1 142 1 280 1 83 1 146 1 10 1 243 1 175 1 90 1 91 2 285 1 315 1 338 1 67 2 152 1 318 1 127 1 205 1 18 1 
265 1 182 1 232 1 1 1 102 1 211 1 155 2 343 1 51 1 371 1 54 1 60 3 346 1 142 1 83 1 146 1 10 1 243 1 175 1 90 1 91 2 121 1 285 1 315 1 338 1 67 3 152 1 204 1 205 1 18 1 
182 1 265 1 1 1 102 1 211 1 155 2 343 1 51 1 371 1 54 1 60 2 346 1 142 1 83 1 10 1 243 1 175 1 90 1 91 2 285 1 315 1 67 2 152 1 204 1 205 1 
211 1 51 2 345 1 60 1 7 1 346 2 83 1 349 1 281 1 115 1 10 1 175 2 90 1 245 1 40 1 121 1 315 2 338 1 67 1 152 1 247 1 289 1 18 1 
265 1 182 1 232 1 1 1 211 1 343 1 51 1 371 1 54 1 60 1 346 1 142 1 83 1 146 1 10 1 175 1 90 1 91 2 285 1 315 1 338 1 67 1 152 1 318 1 127 1 18 1 
132 1 
209 2 0 1 50 2 160 1 58 1 162 1 6 1 221 2 169 1 173 1 174 1 353 3 11 1 116 1 64 5 176 1 120 4 178 1 313 2 125 1 263 1 233 1 74 1 322 1 365 1 77 1 271 3 80 4 240 1 141 1 187 1 277 1 278 1 332 2 149 1 87 1 337 3 38 5 39 2 377 1 203 1 207 1 
209 2 233 1 0 1 322 1 74 1 50 2 365 1 77 1 160 1 271 3 162 1 58 1 80 4 6 1 240 1 141 1 187 1 277 1 278 1 221 2 332 2 169 1 173 1 174 1 11 1 353 3 149 1 116 1 87 1 176 1 64 5 120 4 337 3 38 5 39 2 313 2 178 1 377 1 125 1 203 1 263 1 207 1 
233 1 0 1 74 1 322 1 50 2 365 1 77 1 160 1 271 2 162 1 58 1 80 4 6 1 141 1 187 1 143 2 278 1 221 2 169 1 173 1 174 1 11 1 353 2 87 1 176 1 64 4 337 2 312 2 120 4 38 4 226 1 39 2 178 1 377 1 125 1 203 1 208 2 207 1 98 1 
209 2 0 1 211 2 50 2 160 1 58 1 162 1 6 1 7 1 221 2 169 2 173 1 115 1 174 1 10 1 11 1 353 2 176 1 64 4 120 5 226 1 313 2 178 1 125 1 181 1 233 1 74 1 322 1 365 2 77 1 271 2 370 1 80 5 240 1 141 1 187 1 278 2 83 1 332 2 281 1 87 1 337 2 245 1 38 6 284 1 90 2 200 1 39 3 40 2 377 1 287 1 152 2 203 1 208 2 207 1 
74 1 322 1 173 1 353 1 87 1 64 2 176 1 120 3 244 1 38 2 77 1 39 1 178 1 160 1 377 1 80 3 125 1 6 1 203 1 141 1 187 1 207 1 
322 1 74 1 77 1 160 1 80 3 6 1 141 1 187 1 278 1 173 1 11 1 87 1 176 1 64 3 120 3 337 1 38 1 244 1 39 1 178 1 377 1 125 1 203 1 207 1 
322 1 74 1 77 1 160 1 271 1 80 3 6 1 141 1 187 1 278 1 173 1 353 1 11 1 87 1 176 1 64 3 120 3 337 1 244 1 38 2 39 1 178 1 377 1 125 1 203 1 207 1 
209 2 0 1 50 2 160 1 58 1 162 1 6 1 221 2 169 1 173 1 174 1 353 4 11 5 116 1 117 1 64 6 176 1 120 5 178 1 313 2 125 1 263 1 233 1 74 1 322 1 365 1 77 1 271 4 80 5 240 1 141 1 187 1 277 1 278 5 332 2 149 1 87 1 337 4 244 1 38 7 39 3 377 1 203 1 207 1 
209 2 0 1 50 2 160 1 58 1 162 1 6 1 221 2 169 1 173 1 174 1 353 2 11 1 64 4 176 1 120 4 226 1 178 1 313 2 125 1 233 1 322 1 74 1 365 1 77 1 271 2 80 4 240 1 141 1 187 1 278 2 332 2 87 1 337 2 38 4 39 2 377 1 203 1 207 1 208 2 
209 2 233 1 0 1 322 1 74 1 50 2 365 1 77 1 160 1 271 2 162 1 58 1 80 4 6 1 240 1 141 1 187 1 277 1 278 1 221 2 332 2 169 1 173 1 174 1 11 1 353 2 149 1 87 1 176 1 64 4 337 2 120 4 38 4 39 2 313 2 178 1 377 1 125 1 203 1 263 1 207 1 
209 2 233 1 0 1 322 1 74 1 50 2 365 1 77 1 160 1 271 2 162 1 58 1 80 4 6 1 240 1 141 1 187 1 277 1 278 1 221 2 332 2 169 1 173 1 174 1 11 1 353 2 149 1 87 1 176 1 64 4 337 2 120 4 38 4 39 2 313 2 178 1 377 1 125 1 203 1 263 1 207 1 
233 1 0 1 322 1 74 1 50 2 22 1 365 1 77 1 160 1 271 2 162 1 58 1 80 4 6 1 141 1 187 1 143 2 278 1 221 2 169 1 173 1 174 1 11 1 353 2 149 1 87 1 176 1 64 4 337 2 312 2 120 4 38 4 39 2 178 1 377 1 125 1 203 1 208 2 98 1 207 1 359 1 
99 1 45 1 321 1 2 1 293 3 363 6 364 3 295 2 105 1 238 1 27 1 164 1 347 2 373 1 144 1 172 2 114 1 196 1 336 1 12 1 66 1 94 2 246 1 201 1 126 1 290 1 
73 1 321 11 293 6 101 2 363 14 324 1 364 8 295 1 79 1 57 1 27 11 164 2 166 1 347 4 329 1 373 2 144 1 84 1 172 1 196 2 336 4 12 2 92 3 94 2 95 1 246 2 288 3 201 2 124 2 126 1 340 1 249 1 71 1 
73 1 322 1 293 1 211 1 363 2 364 1 23 1 52 1 53 1 239 1 78 1 79 1 6 2 7 1 141 2 164 1 347 2 109 1 83 1 330 1 84 1 172 1 10 1 196 1 224 1 336 1 198 1 245 1 90 1 12 1 225 1 40 1 122 1 246 1 152 1 201 1 380 1 126 1 
45 1 2 1 293 10 341 1 101 2 211 3 295 4 105 1 53 2 57 2 6 3 7 2 164 3 347 6 109 1 172 2 309 2 114 1 224 1 10 2 12 3 66 1 122 1 124 2 126 3 73 1 321 7 322 1 363 20 364 10 23 2 371 1 78 1 79 1 27 7 141 3 186 1 373 3 144 3 84 1 192 2 330 2 83 2 34 2 196 3 336 7 37 1 90 3 245 2 40 1 41 2 286 2 94 8 246 3 152 3 201 3 380 2 340 4 290 1 
99 1 73 1 322 1 293 1 211 8 363 2 235 1 364 1 159 1 371 1 78 1 79 1 6 1 7 3 141 1 218 1 164 2 347 4 109 1 280 1 83 2 306 1 85 1 281 1 351 2 224 1 10 2 196 2 115 1 90 7 12 2 245 2 40 2 246 2 152 8 201 2 68 1 153 1 126 2 
321 1 322 1 101 1 293 2 363 3 251 1 364 1 295 1 138 1 78 1 57 1 27 1 6 1 141 1 164 1 347 2 109 1 373 1 144 1 84 1 196 1 336 1 12 1 94 1 246 1 201 1 124 1 126 1 44 1 
99 1 373 1 321 1 101 1 363 2 196 1 336 1 364 2 12 1 94 1 246 1 27 1 201 1 301 1 126 1 164 1 340 1 347 2 
99 1 321 1 144 1 293 2 363 2 196 1 62 1 336 1 295 1 12 1 94 1 57 1 246 1 27 1 201 1 126 1 164 1 347 2 
99 1 373 1 144 1 321 2 293 2 101 1 363 4 196 1 336 2 364 2 295 1 12 1 57 1 94 2 246 1 27 2 201 1 124 1 126 1 164 1 340 1 347 2 
373 1 321 1 306 1 101 1 363 2 196 1 336 1 364 2 12 1 94 1 246 1 27 1 201 1 301 1 126 1 164 1 340 1 347 2 
321 1 144 1 306 1 293 2 363 2 196 1 62 1 336 1 295 1 12 1 94 1 57 1 246 1 27 1 201 1 126 1 164 1 347 2 
373 1 144 1 321 2 293 2 306 1 101 1 363 4 196 1 336 2 364 2 295 1 12 1 57 1 94 2 246 1 27 2 201 1 124 1 126 1 164 1 340 1 347 2 
373 1 144 1 321 2 293 2 101 1 363 4 196 1 336 2 364 2 295 1 12 1 57 1 94 2 246 1 27 2 201 1 124 1 126 1 164 1 340 1 347 2 
73 1 293 1 211 1 363 2 364 1 23 1 53 1 79 1 6 1 7 1 141 1 164 1 347 2 83 1 330 1 34 1 172 1 10 1 196 1 245 1 90 1 12 1 40 1 246 1 152 1 201 1 380 1 126 1 
73 1 293 1 211 1 363 2 364 1 183 1 53 1 107 1 79 1 6 1 7 1 141 1 164 1 347 2 167 1 83 1 172 1 10 1 196 1 245 1 90 1 12 1 40 1 246 1 152 1 201 1 380 1 126 1 
373 1 144 1 321 2 84 1 293 2 101 1 363 4 196 1 336 2 364 2 295 1 12 1 57 1 94 2 246 1 27 2 201 1 124 1 126 1 164 1 340 1 347 2 
321 2 293 2 101 1 211 1 363 4 364 2 295 1 23 1 53 1 57 1 27 2 6 1 7 1 141 1 164 1 347 2 373 1 280 1 144 1 83 1 330 1 34 1 10 1 196 1 336 2 90 1 245 1 12 1 41 1 94 2 246 1 152 1 201 1 124 1 380 1 126 1 340 1 
321 1 322 1 293 1 101 1 363 3 364 2 138 1 78 1 57 1 6 1 27 1 141 1 164 1 347 2 109 1 373 1 144 1 84 1 196 1 336 1 12 1 94 1 246 1 317 1 201 1 124 1 126 1 44 1 340 1 
19 1 293 10 101 3 363 19 364 9 295 3 272 1 299 1 57 3 61 1 164 2 166 1 190 1 347 4 329 1 373 3 144 3 259 1 310 1 12 2 92 2 355 2 94 6 246 2 288 1 201 2 124 3 17 2 340 3 128 1 
19 2 293 3 363 6 310 1 364 3 12 1 92 1 272 1 288 1 246 1 201 1 164 1 61 2 17 2 166 1 264 1 128 1 347 2 
19 2 293 10 101 2 363 19 364 9 295 1 272 1 57 2 61 1 164 2 166 2 190 1 347 4 329 1 373 2 144 2 259 1 310 1 12 2 92 3 355 1 378 1 94 3 246 2 288 2 201 2 124 2 17 3 264 1 340 2 128 1 
19 2 293 10 101 2 363 19 364 9 295 2 272 1 57 2 61 1 164 2 166 2 190 1 347 4 329 1 373 2 144 2 259 1 310 1 12 2 92 3 355 1 378 1 94 4 246 2 288 2 201 2 124 2 17 3 264 1 340 2 128 1 
45 1 19 1 2 1 293 10 101 2 363 21 324 1 364 11 295 3 105 1 272 1 57 2 61 1 164 1 166 1 347 2 329 1 373 3 144 3 114 1 310 1 12 1 92 2 66 1 94 5 246 1 288 2 201 1 124 2 17 2 264 1 340 2 290 1 128 1 
5 1 191 1 361 1 274 1 185 1 339 1 267 1 163 1 241 1 88 1 
257 1 72 1 
131 1 361 1 42 1 274 1 185 1 339 1 163 1 88 1 199 1 
220 2 191 1 46 1 361 1 36 1 267 1 120 1 88 1 327 1 367 1 255 1 80 1 339 1 185 1 274 1 163 1 241 1 278 1 
220 2 191 1 46 1 361 1 36 1 267 1 120 1 88 1 327 1 367 1 255 1 80 1 339 1 185 1 274 1 163 1 241 1 278 1 
220 2 191 1 46 1 361 1 36 1 267 1 120 1 88 1 327 1 367 1 255 1 80 1 339 1 185 1 274 1 163 1 241 1 278 1 
3 1 135 1 156 1 
3 1 135 1 156 1 
320 1 237 1 
156 1 320 1 237 1 
358 1 206 1 
72 1 361 1 322 2 323 1 212 1 367 1 78 2 26 1 80 1 6 2 274 1 185 1 163 1 141 2 303 1 220 1 257 1 109 2 113 1 331 1 172 1 36 1 120 1 88 1 339 1 358 1 206 1 
3 1 135 1 
156 1 320 1 237 1 
73 1 322 2 293 1 211 2 363 2 364 1 157 1 270 1 56 1 79 1 6 2 7 1 141 2 164 1 347 2 279 1 83 1 84 1 85 1 351 2 10 1 196 1 89 1 245 1 12 1 90 2 246 1 152 2 201 1 153 1 126 1 
280 1 265 1 182 1 232 1 1 1 83 1 211 2 10 1 51 1 90 2 91 2 285 1 24 1 256 1 371 1 54 1 152 2 142 1 242 1 
265 1 182 1 232 1 1 1 83 1 211 1 10 1 51 1 90 1 91 2 285 1 24 1 371 1 54 1 184 1 152 1 142 1 
83 1 281 1 211 1 148 1 10 1 115 1 51 1 245 1 90 1 40 1 345 1 152 1 7 1 242 1 
265 1 182 1 232 1 1 1 83 1 211 1 10 1 51 1 90 1 91 2 285 1 24 1 256 1 371 1 54 1 152 1 142 1 242 1 
223 1 
129 1 322 2 293 1 211 1 363 1 23 1 53 1 78 2 79 1 6 3 7 1 141 3 164 1 347 2 109 2 330 1 83 1 34 1 172 1 10 1 196 1 90 1 245 1 12 1 40 1 246 1 201 1 152 1 96 1 380 1 126 1 44 2 
233 1 169 1 174 1 11 2 365 2 215 2 284 1 313 2 66 1 297 2 58 1 162 1 287 1 208 4 278 4 
169 1 238 1 171 1 11 1 202 1 365 1 278 1 
209 1 233 1 332 1 169 1 174 1 11 1 365 1 120 1 38 1 39 1 313 1 58 1 162 1 80 1 240 1 278 2 208 1 
101 2 211 3 213 2 4 1 215 6 106 2 297 6 58 4 162 4 57 2 7 10 168 1 169 9 171 1 173 2 10 3 174 4 11 2 120 5 313 6 124 2 229 1 360 2 233 4 136 2 268 2 365 8 236 1 326 2 80 5 275 1 30 2 278 8 280 1 373 2 82 2 144 2 83 4 374 1 282 2 195 3 86 2 284 2 245 3 90 3 38 5 39 3 40 1 286 2 287 1 152 3 202 1 380 3 208 12 
233 2 101 2 136 1 252 1 365 5 215 5 216 1 297 5 139 1 162 2 58 2 57 2 80 1 166 1 348 1 278 5 112 1 373 2 144 2 169 8 282 2 174 2 11 2 197 1 120 1 284 1 38 1 39 1 92 1 313 3 14 1 287 1 288 1 124 2 208 6 
45 1 233 1 322 1 136 1 365 2 105 1 217 1 78 1 162 1 58 1 80 1 6 1 141 1 277 1 109 1 373 2 144 1 169 2 282 2 114 1 174 1 150 1 87 1 283 1 120 1 93 1 96 1 44 1 
233 1 169 1 171 1 174 1 11 1 365 1 58 1 162 1 202 1 278 1 
373 2 144 2 169 5 101 2 282 2 136 1 365 5 215 5 313 5 286 1 297 5 57 2 124 2 208 10 278 5 
39 1 80 1 11 1 120 1 278 1 38 1 
233 2 211 4 48 1 365 2 370 1 162 2 58 1 80 3 7 1 83 1 169 2 374 1 281 1 10 1 174 2 115 1 120 3 245 1 200 1 90 4 284 2 38 4 39 2 40 2 262 1 287 2 152 4 357 1 229 2 
368 1 274 1 88 1 
368 1 274 1 88 1 
133 1 274 1 241 1 206 1 88 1 
368 1 274 1 88 1 
350 1 274 1 88 1 
350 1 274 1 88 1 
350 1 274 1 88 1 
274 1 88 1 
361 1 163 1 
373 1 45 1 144 1 2 1 293 4 363 8 114 1 294 1 364 4 295 2 12 2 105 1 66 1 94 3 246 2 201 2 164 2 340 1 347 4 290 1 
373 1 105 1 45 1 144 1 66 1 2 1 238 1 293 3 94 2 363 6 114 1 364 3 295 2 290 1 
373 1 144 1 293 2 101 1 363 4 364 2 295 1 12 1 13 1 57 1 94 2 246 1 201 1 124 1 164 1 340 1 347 2 
373 1 144 1 293 4 101 1 363 7 364 3 295 1 92 2 57 1 94 2 288 1 124 1 166 1 340 1 329 1 
45 2 2 1 101 2 293 12 363 23 324 1 294 2 364 11 295 5 105 1 57 2 164 2 329 1 347 4 373 3 144 3 114 2 12 2 261 1 92 2 66 1 94 9 288 2 246 2 124 2 201 2 340 4 249 1 290 1 
92 1 293 1 363 1 
363 1 288 1 364 1 
373 1 144 1 293 3 101 1 363 6 364 3 295 2 12 1 286 1 13 1 94 3 57 1 246 1 201 1 124 1 164 1 340 1 347 2 
293 6 101 2 363 12 252 1 364 6 295 1 216 1 139 1 57 2 164 1 166 1 347 2 112 1 373 2 144 2 310 1 197 1 12 1 92 1 94 2 288 1 246 1 201 1 124 2 340 1 
373 1 45 1 144 1 293 3 363 6 114 1 364 3 295 1 105 1 94 2 340 1 
45 1 2 1 293 2 363 3 114 1 294 1 364 1 295 1 261 1 12 1 94 2 246 1 201 1 164 1 340 1 290 1 347 2 
45 2 373 2 144 2 293 5 363 10 114 2 310 1 364 5 283 1 295 3 12 1 105 1 94 5 246 1 201 1 164 1 340 2 347 2 
373 1 101 1 363 2 310 1 364 2 12 1 94 1 246 1 201 1 164 1 340 1 347 2 
373 1 144 1 293 2 101 1 363 4 310 1 364 2 295 1 12 1 57 1 94 2 246 1 201 1 124 1 164 1 340 1 347 2 
45 1 293 2 363 3 114 1 294 1 310 1 364 1 295 1 261 1 12 3 94 2 246 3 201 3 164 3 190 1 340 1 347 6 
45 3 2 1 362 1 293 18 101 3 363 34 294 2 364 16 295 7 105 2 57 3 164 5 166 1 219 1 190 1 347 10 329 1 373 5 144 5 114 3 310 1 261 1 12 5 92 4 66 1 13 1 94 12 246 5 288 3 201 5 124 3 319 1 340 5 290 1 
45 1 2 1 293 4 363 8 364 4 295 2 216 1 105 1 164 1 166 1 347 2 373 1 144 1 114 1 310 1 12 1 92 1 66 1 94 2 288 1 246 1 201 1 290 1 
45 1 2 1 293 5 101 1 363 11 364 6 295 2 216 1 105 1 164 2 166 1 347 4 329 1 373 2 144 1 114 1 310 1 12 2 92 2 66 1 13 1 94 3 246 2 288 1 201 2 124 1 340 1 290 1 
45 1 2 1 293 10 101 2 363 19 294 1 252 1 364 9 295 3 216 1 105 1 139 1 57 2 164 3 166 1 347 6 112 1 373 3 144 3 114 1 310 1 197 1 12 3 92 1 66 1 13 1 94 4 288 1 246 3 201 3 124 2 340 1 290 1 
45 1 2 1 293 7 101 2 363 17 294 1 252 1 364 10 295 3 216 1 105 1 139 1 57 1 164 3 166 1 347 6 112 1 373 3 144 2 114 1 310 1 197 1 12 3 92 1 66 1 13 1 94 5 288 1 246 3 201 3 124 2 340 2 290 1 
45 1 2 1 293 4 363 8 364 4 295 2 216 1 105 1 164 1 166 1 347 2 373 1 144 1 114 1 310 1 12 1 92 1 66 1 94 2 288 1 246 1 201 1 290 1 
293 6 101 2 363 12 252 1 364 6 295 1 216 1 139 1 57 2 164 1 166 1 347 2 112 1 373 2 144 2 310 1 197 1 12 1 92 1 94 2 288 1 246 1 201 1 124 2 340 1 
45 1 2 1 293 8 101 2 363 18 294 2 252 1 364 10 295 3 216 1 105 1 139 1 57 1 164 4 166 1 347 8 112 1 373 3 144 2 114 1 310 1 197 1 12 4 92 1 66 1 13 1 94 5 246 4 288 1 201 4 124 2 340 2 290 1 
293 7 101 3 363 16 294 2 252 1 364 9 295 3 216 1 139 1 57 2 164 4 166 1 190 1 347 8 112 1 373 3 144 2 310 1 197 1 12 4 92 1 94 6 246 4 288 1 201 4 124 3 340 3 
45 3 373 1 144 1 2 1 293 4 363 7 114 3 364 3 295 3 105 1 94 6 340 3 290 2 
45 1 2 1 293 8 101 2 363 18 294 2 252 1 364 10 295 3 216 1 105 1 139 1 57 1 164 4 166 1 190 1 347 8 112 1 373 3 144 2 114 1 310 1 197 1 12 4 92 1 66 1 94 4 246 4 288 1 201 4 124 2 340 1 290 1 
322 1 172 1 6 1 81 1 141 1 9 1 207 1 
222 1 308 1 342 1 108 1 230 1 9 1 
40 1 83 1 238 1 281 1 211 1 10 1 115 1 152 1 7 1 245 1 90 1 
109 1 83 1 322 1 172 1 211 1 224 1 10 1 23 1 245 1 90 1 40 1 53 1 78 1 6 2 152 1 7 1 380 1 141 2 
360 1 322 2 211 1 23 1 77 1 53 1 78 1 6 2 7 3 141 2 30 1 109 2 83 1 172 1 10 1 224 1 87 1 90 1 245 2 178 1 152 1 380 2 229 1 
360 1 322 2 211 2 183 1 77 1 53 1 78 1 6 2 7 3 28 1 141 2 30 1 109 2 83 1 172 1 10 1 224 1 87 1 90 2 245 2 178 1 152 2 380 2 229 1 
360 1 83 1 210 1 211 3 194 1 173 1 195 1 10 1 11 1 268 1 120 2 245 1 90 3 38 1 40 1 80 2 152 3 380 1 7 4 28 1 229 1 278 1 30 1 
360 1 82 1 83 1 211 3 173 1 195 1 10 1 11 1 268 1 120 2 245 1 90 3 38 1 40 1 80 2 152 3 380 1 7 4 28 1 229 1 278 1 30 1 
159 1 83 1 211 1 10 1 152 1 90 1 
280 1 83 3 211 7 351 1 260 1 10 2 235 1 118 1 236 1 90 6 245 2 40 2 159 1 371 1 152 7 380 1 7 3 68 1 97 1 153 1 218 1 
45 1 321 1 2 1 322 1 293 3 211 1 363 6 364 3 295 2 23 1 105 1 53 1 270 1 78 1 27 1 6 2 7 1 141 2 164 2 347 4 109 1 373 1 280 1 144 1 83 1 84 1 192 1 330 1 34 1 172 2 114 1 10 1 196 2 224 1 336 1 245 1 12 2 90 1 41 1 66 1 94 2 246 2 201 2 152 1 380 1 126 2 290 1 
233 2 211 1 268 1 365 1 326 1 106 1 162 2 58 2 80 3 7 2 303 1 278 1 82 1 169 1 171 1 374 1 173 1 174 2 195 1 11 1 86 1 120 3 90 1 38 2 39 1 40 1 152 1 202 1 
280 1 83 2 211 2 10 1 268 1 236 1 90 2 245 1 159 1 152 2 275 1 380 1 7 2 
280 1 40 1 83 1 281 1 211 4 10 1 115 1 152 4 7 1 28 1 381 1 245 1 90 4 
83 2 47 1 333 1 211 2 10 1 118 1 37 1 90 2 245 1 152 2 380 1 7 1 97 1 229 1 
91 1 40 1 265 1 285 1 1 1 83 1 211 1 10 1 152 1 90 1 
280 1 83 1 371 1 211 2 10 1 152 2 7 1 153 1 89 1 245 1 90 2 
280 1 83 2 281 1 211 5 115 1 10 2 90 4 245 2 40 1 152 5 7 3 68 1 381 1 229 1 218 1 153 1 
280 1 83 2 281 1 211 5 115 1 10 2 269 1 90 4 245 2 40 1 152 5 7 3 68 1 381 1 229 1 153 1 
109 1 83 1 322 1 172 1 211 1 224 1 10 1 183 1 245 1 90 1 40 1 53 1 78 1 6 2 152 1 7 1 380 1 141 2 
83 2 211 1 260 1 10 1 118 1 236 1 90 1 245 1 152 1 380 1 7 1 97 1 229 1 
279 1 322 1 134 1 157 1 369 1 56 1 6 1 300 1 141 1 
161 1 55 1 134 1 
292 1 369 1 172 1 134 1 300 1 
292 2 172 1 134 1 173 1 11 1 311 1 87 1 120 2 77 1 178 1 369 2 161 1 55 1 80 2 300 2 203 1 8 1 303 1 278 1 
291 1 155 1 102 1 103 1 243 1 338 1 67 3 60 3 127 1 205 1 18 1 
20 1 266 1 119 1 205 1 
102 1 205 1 
238 1 102 1 243 1 205 1 
102 1 338 1 67 1 243 1 60 1 205 1 18 1 
315 1 67 1 175 1 
102 1 103 2 243 1 338 1 179 1 328 1 67 3 60 3 29 1 127 1 205 1 18 1 
305 1 102 1 155 1 338 1 67 2 243 1 60 2 205 1 18 1 
182 1 265 1 20 1 91 1 338 1 67 1 60 1 70 1 127 1 205 1 18 1 
102 1 338 1 67 1 60 1 127 1 205 1 18 1 
102 2 338 1 67 1 243 1 60 1 127 1 18 1 
334 1 102 1 193 1 296 1 338 2 67 2 60 2 127 1 205 1 18 2 
291 1 258 1 102 1 155 2 20 1 266 1 243 1 338 1 67 3 60 3 127 1 205 2 18 1 
182 1 265 1 1 1 102 1 155 1 243 1 49 1 91 2 338 1 67 2 60 2 127 1 142 1 205 1 18 1 
305 1 102 1 155 2 20 1 266 1 243 1 316 1 338 2 67 4 60 4 127 1 205 2 18 2 
102 1 338 1 67 1 243 1 60 1 127 1 205 1 18 1 
102 2 155 2 20 1 266 1 103 1 243 2 119 1 328 1 179 1 338 1 67 4 60 4 205 3 18 1 
110 1 130 1 102 1 155 1 243 1 338 1 67 2 60 2 127 1 205 1 276 1 18 1 
375 1 102 1 103 2 243 1 179 1 338 1 328 2 67 3 60 3 127 1 205 1 18 1 
32 1 227 2 15 1 205 2 
75 1 338 1 67 1 60 1 127 1 18 1 
291 1 102 1 155 1 338 1 67 2 243 1 60 2 127 1 205 1 18 1 
25 1 
102 1 338 1 67 1 243 1 60 1 127 1 205 1 18 1 

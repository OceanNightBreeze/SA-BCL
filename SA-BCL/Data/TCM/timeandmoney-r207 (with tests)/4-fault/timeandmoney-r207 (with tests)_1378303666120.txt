#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 3 356 1 317 2 52 2 320 1 236 1 295 1 296 4 266 1 297 1 322 2 139 1 324 1 73 1 239 1 169 9 144 2 146 9 242 1 197 6 199 1 202 1 13 1 14 2 55 1 251 5 82 2 20 2 
158 3 356 1 317 2 52 2 320 1 236 1 295 1 296 4 266 1 297 1 322 2 139 1 324 1 73 1 239 1 169 9 144 2 146 9 242 1 197 6 199 1 202 1 13 1 14 2 55 1 251 5 82 2 20 2 
158 4 356 1 317 2 52 2 320 1 236 1 295 1 296 5 266 1 297 1 322 2 139 1 324 1 73 1 239 1 169 10 144 2 146 10 242 1 197 7 199 1 202 1 13 1 14 2 55 1 251 6 82 2 20 2 
158 2 356 1 317 2 52 2 320 1 236 1 295 1 296 3 297 1 322 2 139 1 324 1 73 1 239 1 169 7 144 2 146 7 242 1 197 4 199 1 202 1 13 1 14 2 55 1 251 4 82 1 20 2 
158 1 239 1 144 1 169 4 146 4 197 3 317 1 13 1 52 1 320 1 295 1 296 2 266 1 139 1 322 1 251 3 82 2 20 1 
185 1 169 2 347 1 356 1 144 1 146 2 199 1 51 1 317 1 13 1 14 1 295 1 251 1 139 1 322 1 20 1 
158 1 169 3 146 3 197 1 13 1 14 1 236 1 295 1 296 1 139 1 322 2 251 2 20 2 
158 3 317 1 52 1 320 1 236 1 295 1 296 4 93 1 322 2 139 1 266 1 324 1 73 1 239 1 169 9 144 1 368 1 146 9 197 7 13 1 14 1 251 5 82 2 20 2 
158 3 317 1 52 1 320 1 236 1 295 1 296 4 93 1 322 2 139 1 266 1 324 1 73 1 239 1 169 9 144 1 368 1 146 9 197 7 13 1 14 1 251 5 82 2 20 2 
35 1 190 1 44 1 
156 2 335 1 35 1 
134 1 6 2 113 2 1 2 221 2 16 1 344 2 217 2 
1 2 259 1 209 1 286 1 287 1 288 1 262 1 134 1 292 2 6 2 113 2 27 1 138 2 265 1 363 1 140 1 70 1 342 1 344 2 215 1 166 1 72 1 9 2 305 1 330 1 217 3 80 1 331 1 221 3 376 1 16 1 225 1 19 1 205 1 252 2 127 2 184 1 
210 1 6 1 113 1 1 1 221 1 283 1 16 1 344 1 84 1 217 1 
1 1 283 1 22 1 290 1 235 1 210 1 6 1 113 1 190 1 344 2 171 1 35 1 348 1 246 1 217 2 150 1 221 2 16 1 379 1 46 1 84 2 
1 2 283 1 35 1 348 1 22 1 217 2 246 1 290 1 150 1 210 1 6 2 113 2 221 2 190 1 16 1 379 2 46 2 344 2 84 2 
26 1 223 1 326 1 379 1 46 1 
26 1 96 1 35 1 190 1 223 1 379 2 299 1 46 2 
26 1 379 1 46 1 
1 1 283 1 217 1 290 1 210 1 6 1 113 1 221 1 223 1 16 1 379 1 46 1 344 1 84 1 
35 1 
26 1 35 1 190 1 223 1 379 2 299 1 46 2 30 1 
345 2 61 1 35 1 349 2 231 1 321 1 26 2 68 1 112 1 190 1 223 2 294 2 341 1 379 5 378 1 299 1 46 5 268 1 271 1 
134 1 44 1 
1 1 260 1 217 2 276 1 134 2 6 1 113 1 221 2 344 2 
104 1 307 1 282 1 
9 1 305 1 209 1 286 1 262 1 217 1 134 1 80 1 221 1 332 1 265 1 140 1 342 1 215 1 252 1 127 1 
9 1 1 1 305 1 241 1 209 1 286 1 262 1 217 2 80 1 113 1 221 2 265 1 340 1 140 1 342 1 215 1 344 1 252 1 127 1 282 1 
134 1 6 1 113 3 1 3 221 3 241 1 344 3 217 3 
113 1 1 1 221 1 283 1 344 1 84 1 217 1 
6 1 113 1 1 1 221 1 260 1 344 1 84 1 217 1 276 1 
1 3 286 1 287 1 288 1 292 2 134 1 6 2 138 1 340 1 140 1 342 1 344 3 9 1 348 1 241 1 305 1 246 1 150 1 152 1 16 1 19 1 205 1 252 1 259 1 22 1 209 1 262 1 113 3 27 1 265 1 363 1 70 1 215 1 330 1 217 4 276 1 80 1 221 4 373 1 379 1 46 1 127 1 84 2 281 1 184 1 
134 1 33 1 113 1 1 1 221 2 171 1 241 1 344 2 217 2 
1 3 35 1 22 1 241 2 348 1 132 1 276 1 217 3 246 1 150 1 6 1 113 3 152 1 221 3 340 1 379 1 46 1 344 3 84 1 
1 2 241 1 307 1 276 1 217 2 6 1 113 2 221 2 344 2 282 1 
9 1 305 1 209 1 286 1 262 1 217 1 134 1 80 1 221 1 265 1 140 1 342 1 215 1 252 1 127 1 
9 1 170 1 305 1 209 1 262 1 217 1 134 1 80 1 221 1 137 1 265 1 140 1 215 1 252 1 127 1 
60 1 24 1 287 1 288 1 292 2 188 1 138 4 237 1 363 1 70 1 267 1 166 2 366 1 303 1 124 1 330 1 102 1 307 2 104 2 377 1 19 1 280 1 205 2 282 2 
113 1 1 1 221 1 56 1 344 1 84 1 246 1 217 1 
33 1 1 4 171 1 241 2 232 1 217 5 276 1 134 1 6 1 113 4 221 5 374 1 340 1 344 5 
113 2 1 2 221 2 283 1 56 1 344 2 84 1 217 2 
214 1 312 1 
214 1 312 1 
7 1 65 1 
7 1 65 1 
7 1 65 1 
214 1 229 1 312 1 
214 1 229 1 312 1 
214 1 182 1 312 1 
367 1 214 2 7 1 65 1 148 1 312 2 
214 1 229 1 312 1 
143 1 214 1 312 1 
143 1 214 1 312 1 
143 1 214 1 312 1 
238 1 157 2 74 2 315 3 35 1 131 1 148 1 41 1 214 2 351 2 339 1 379 2 46 2 155 2 59 2 47 1 183 1 254 1 312 2 
49 1 157 1 1 2 315 1 129 1 130 1 134 1 113 2 214 1 339 1 323 1 344 2 325 1 350 1 217 2 220 1 221 2 351 1 379 1 46 1 182 1 155 1 59 1 312 1 
144 1 317 1 52 1 
144 1 51 1 317 1 
81 1 180 1 51 1 317 3 94 1 52 2 
206 1 180 1 51 1 317 2 94 1 52 1 
180 1 51 1 317 2 94 2 52 1 
156 3 335 1 129 1 61 1 231 2 26 1 188 1 263 2 28 1 92 1 294 1 190 1 299 1 216 2 271 3 345 1 325 1 35 2 196 1 349 1 39 1 102 1 220 1 310 2 223 4 375 1 377 1 379 5 46 5 18 1 280 1 253 1 
156 9 335 3 357 5 61 1 63 1 231 6 26 6 188 3 263 6 112 1 264 1 92 2 190 1 294 2 343 1 299 1 216 6 271 8 345 2 274 1 35 5 326 5 349 2 102 3 371 1 103 1 220 4 223 7 375 1 377 3 379 9 46 9 18 2 280 3 253 3 
156 4 335 2 231 2 188 1 263 2 112 1 92 1 190 1 294 1 216 2 271 3 345 1 35 3 196 1 349 1 39 1 102 1 220 1 310 1 223 2 377 1 379 3 46 3 18 1 280 1 253 1 
156 7 335 3 63 1 231 4 188 2 263 4 112 1 264 1 92 1 190 1 294 1 343 1 216 4 271 5 345 1 35 4 196 1 349 1 39 1 102 2 220 2 310 2 223 3 377 2 379 4 46 4 18 1 280 2 253 2 
305 1 36 1 44 1 
305 1 186 1 
85 1 
265 1 305 1 
352 1 265 1 36 2 305 3 173 1 140 1 
265 1 305 1 140 1 
305 1 233 1 
336 2 258 1 64 1 200 1 25 1 219 1 116 1 138 7 237 2 43 1 377 1 267 3 205 3 280 1 166 4 95 1 48 1 
336 2 258 1 64 1 200 1 25 1 219 1 116 1 138 7 237 2 43 1 377 1 267 3 205 3 280 1 166 4 95 1 48 1 
336 2 258 1 64 1 200 1 2 1 25 1 219 1 116 1 138 7 237 2 43 1 377 1 267 3 205 3 280 1 95 1 166 4 48 1 
336 3 258 1 64 1 88 3 288 1 25 5 292 2 360 4 111 1 164 1 188 3 116 2 138 31 237 5 363 1 267 10 70 1 269 1 95 1 166 16 76 1 200 1 37 1 201 1 102 3 151 1 219 2 43 2 377 4 19 1 205 15 280 4 253 3 48 2 
336 2 316 1 258 1 288 2 25 1 292 4 138 9 116 1 237 3 363 2 70 2 267 4 166 5 95 1 201 1 200 1 219 1 43 1 377 1 279 1 19 2 280 1 205 4 48 1 
257 1 21 1 62 1 51 1 317 2 209 1 4 1 133 1 52 1 110 1 295 1 322 1 139 1 362 1 215 1 9 1 144 1 169 2 146 2 197 1 329 1 101 1 13 1 14 1 308 1 81 1 251 1 127 1 252 1 20 1 
355 1 21 1 62 1 51 1 317 2 209 1 4 1 133 1 52 1 110 1 295 1 322 1 362 1 215 1 9 1 144 1 169 3 146 3 197 2 99 1 101 1 13 1 14 1 81 1 308 1 311 1 251 1 127 1 252 1 20 1 
9 1 355 1 144 1 169 2 62 1 146 2 197 2 51 1 317 2 99 1 209 1 101 1 13 1 133 1 14 1 52 1 110 1 81 1 308 1 295 1 251 1 362 1 215 1 252 1 127 1 
9 1 313 1 169 1 207 1 146 1 305 1 198 1 209 1 14 2 80 1 110 2 308 2 311 1 265 1 250 1 57 1 322 1 362 2 126 1 215 1 252 1 127 1 20 1 
355 1 21 1 62 1 51 1 317 2 209 1 4 1 133 1 52 1 110 1 322 1 139 1 362 1 215 1 9 1 144 1 169 1 146 1 329 1 101 1 14 1 308 1 81 1 127 1 252 1 20 1 
346 1 
335 2 337 1 231 2 189 2 235 1 92 1 294 1 190 2 299 3 344 1 192 2 142 1 301 1 345 1 9 2 305 1 348 1 349 1 149 1 246 1 150 1 247 1 250 1 57 1 252 2 156 2 354 2 314 2 107 2 61 1 208 1 22 1 23 2 209 1 359 2 108 1 26 6 265 1 215 1 271 2 31 1 171 1 35 3 34 1 327 1 174 1 217 1 80 2 177 4 221 1 278 1 379 5 46 5 127 2 84 1 
354 1 208 1 22 1 108 1 26 2 235 1 190 2 299 1 344 1 30 1 301 1 171 1 35 2 348 1 174 1 217 1 246 1 150 1 177 2 221 1 247 1 379 3 46 3 84 1 
35 2 171 1 208 1 22 1 348 1 174 1 359 1 108 1 246 1 217 1 177 3 150 1 235 1 247 1 221 1 190 2 379 2 46 2 344 1 84 1 301 1 
354 1 208 1 22 1 23 1 359 1 108 1 26 2 235 1 190 2 299 1 344 1 30 1 301 1 171 1 35 2 348 1 174 1 217 1 246 1 150 1 177 3 221 1 247 1 379 3 46 3 84 1 
335 2 1 1 283 1 231 1 5 1 290 1 235 1 189 2 6 1 190 4 294 1 299 3 344 2 142 1 192 2 301 1 345 1 348 1 349 1 245 1 246 1 150 1 247 1 16 1 354 4 314 2 61 1 107 2 208 1 22 1 23 4 359 3 108 1 26 7 210 1 113 1 364 1 30 1 271 1 35 4 171 1 327 1 174 1 175 1 217 2 177 5 221 2 372 1 379 5 46 5 84 2 
335 2 231 1 235 1 189 2 190 3 294 1 299 2 344 1 142 1 192 2 301 1 345 1 348 1 349 1 246 1 150 1 247 1 156 2 354 2 314 2 61 1 107 2 208 1 22 1 23 2 359 2 108 1 26 4 271 1 35 4 171 1 327 1 174 1 217 1 177 4 221 1 278 1 379 4 46 4 84 1 
354 2 335 2 314 2 107 2 61 1 208 1 22 1 23 2 359 2 231 1 108 1 5 1 26 4 189 2 235 1 294 1 190 3 299 2 344 1 192 2 142 1 271 1 301 1 345 1 171 1 35 3 327 1 348 1 174 1 349 1 245 1 217 1 246 1 150 1 177 4 221 1 247 1 372 1 379 4 46 4 84 1 
354 2 335 2 314 2 107 2 61 1 208 1 22 1 23 2 359 2 231 1 108 1 5 1 26 4 189 2 235 1 294 1 190 3 299 2 344 1 192 2 142 1 271 1 301 1 345 1 171 1 35 3 327 1 348 1 174 1 349 1 245 1 217 1 246 1 150 1 177 4 221 1 247 1 372 1 379 4 46 4 84 1 
156 2 354 2 314 2 61 1 208 1 22 1 23 2 359 2 261 1 231 1 108 1 5 1 26 4 135 2 235 1 29 1 294 1 190 3 299 2 344 1 192 2 142 1 271 1 301 1 345 1 77 1 171 1 35 3 348 1 174 1 349 1 217 1 246 1 150 1 177 4 221 1 247 1 333 2 379 4 46 4 84 1 
335 2 354 3 314 2 107 2 61 1 208 1 22 1 23 3 359 3 231 1 108 1 5 1 26 5 189 2 235 1 294 1 190 3 299 2 344 1 192 2 142 1 271 1 301 1 345 1 171 1 35 3 327 1 348 1 174 1 349 1 175 1 245 1 217 1 246 1 150 1 177 5 221 1 247 1 372 1 379 4 46 4 84 1 
335 2 354 3 314 2 107 2 61 1 208 1 22 1 23 3 359 3 231 1 108 1 5 1 26 5 189 2 235 1 294 1 190 3 299 2 344 1 192 2 142 1 271 1 301 1 345 1 171 1 35 3 327 1 348 1 174 1 349 1 175 1 245 1 217 1 246 1 150 1 177 5 221 1 247 1 372 1 379 4 46 4 84 1 
231 1 235 1 135 2 190 3 294 1 299 2 344 1 142 1 192 2 301 1 345 1 348 1 349 1 246 1 150 1 247 1 156 2 354 2 314 2 61 1 208 1 22 1 23 2 359 2 108 1 26 4 271 1 77 1 35 3 171 1 174 1 217 1 177 4 221 1 333 2 278 1 379 4 46 4 84 1 
336 1 258 1 24 1 287 1 288 1 292 2 134 2 116 1 138 6 237 2 363 1 70 1 267 2 95 1 166 3 200 1 330 1 307 1 44 1 104 1 377 1 19 1 280 1 205 3 282 1 48 1 
88 3 287 2 3 1 288 2 25 1 134 1 292 4 111 1 360 3 188 1 114 1 293 1 138 14 237 1 363 2 267 2 70 2 269 1 166 8 75 1 123 1 330 1 102 2 307 4 104 11 377 2 225 1 19 2 205 6 280 1 253 2 184 1 282 11 
227 1 1 1 209 1 286 1 287 1 3 1 262 1 288 1 90 1 134 1 292 2 113 1 265 1 136 1 138 2 340 1 140 1 363 1 342 1 70 1 215 1 344 1 166 1 9 1 305 1 241 1 330 1 307 1 217 2 80 1 221 2 332 1 225 1 19 1 205 1 127 1 252 1 184 1 
334 2 336 1 1 1 286 2 3 1 287 3 288 3 134 2 292 6 188 2 138 20 237 4 340 1 54 2 140 2 342 2 344 1 95 1 9 3 145 1 241 1 305 2 200 1 102 2 307 7 154 2 104 7 19 3 205 10 252 3 253 2 355 1 258 1 209 2 262 2 162 1 25 4 211 1 113 1 27 2 213 2 116 1 265 2 363 3 70 3 267 8 215 2 166 10 330 3 217 3 80 1 221 3 377 3 225 1 280 3 127 3 48 1 184 1 282 7 
355 1 128 1 1 1 257 1 24 1 209 2 287 2 288 2 109 1 292 4 113 1 138 2 265 2 298 1 363 2 70 2 344 1 215 2 166 1 71 1 302 1 8 1 9 7 241 1 305 3 330 2 217 1 80 2 331 2 221 1 250 1 57 1 225 1 353 1 19 2 205 1 127 8 252 8 184 1 
1 1 287 1 3 1 89 1 288 1 292 2 188 1 6 1 113 1 138 3 237 1 363 1 267 1 70 1 344 1 166 1 330 1 102 1 307 1 276 1 217 1 221 1 104 1 377 1 19 1 280 1 205 2 253 1 282 1 
60 1 24 1 287 1 330 1 288 1 102 1 25 1 307 1 292 2 138 2 104 1 377 1 363 1 267 1 70 1 19 1 166 2 282 1 
366 1 24 1 287 1 330 1 288 1 307 1 292 2 188 1 138 2 237 1 104 1 363 1 267 1 70 1 19 1 280 1 205 2 282 1 
24 1 287 1 288 1 25 1 292 2 188 1 138 4 237 1 363 1 70 1 267 2 166 2 102 1 330 1 307 2 104 2 377 1 19 1 280 1 205 2 253 1 282 2 
60 1 287 1 330 1 288 1 102 1 25 1 109 1 307 1 292 2 138 2 104 1 377 1 363 1 267 1 70 1 19 1 166 2 282 1 
366 1 287 1 330 1 288 1 109 1 307 1 292 2 188 1 138 2 237 1 104 1 363 1 267 1 70 1 19 1 280 1 205 2 282 1 
287 1 288 1 109 1 25 1 292 2 188 1 138 4 237 1 363 1 70 1 267 2 166 2 102 1 330 1 307 2 104 2 377 1 19 1 280 1 205 2 253 1 282 2 
287 1 288 1 25 1 292 2 188 1 138 4 237 1 363 1 70 1 267 2 166 2 102 1 330 1 307 2 104 2 377 1 19 1 280 1 205 2 253 1 282 2 
209 1 286 1 287 1 262 1 288 1 134 1 292 2 27 1 138 2 265 1 140 1 363 1 342 1 70 1 215 1 166 1 9 1 305 1 330 1 217 1 80 1 221 1 225 1 19 1 205 1 127 1 252 1 184 1 
209 1 287 1 262 1 288 1 134 1 292 2 138 2 265 1 137 1 140 1 165 1 363 1 70 1 215 1 166 1 9 1 170 1 305 1 330 1 217 1 80 1 221 1 225 1 19 1 205 1 127 1 252 1 184 1 
287 1 3 1 288 1 25 1 292 2 188 1 138 4 237 1 363 1 70 1 267 2 166 2 102 1 330 1 307 2 104 2 377 1 19 1 280 1 205 2 253 1 282 2 
257 1 209 1 286 1 287 1 262 1 288 1 25 1 292 2 188 1 27 1 138 4 265 1 237 1 54 1 140 1 363 1 267 2 342 1 70 1 215 1 166 2 9 1 305 1 102 1 330 1 307 2 217 1 221 1 104 2 377 1 19 1 205 2 280 1 127 1 252 1 253 1 282 2 
1 1 287 1 3 1 288 1 25 1 292 2 188 1 6 1 113 1 138 3 363 1 267 1 70 1 344 1 166 2 147 1 330 1 102 1 276 1 217 1 307 1 221 1 104 1 377 1 19 1 205 1 280 1 253 1 282 1 
336 1 87 1 88 3 288 3 292 6 188 4 138 41 237 4 95 1 195 1 11 1 201 1 200 1 203 1 102 4 248 1 17 1 19 3 205 21 58 2 253 4 255 1 316 1 258 1 25 4 111 3 360 4 69 1 212 1 115 1 116 1 363 3 267 8 70 3 269 1 166 20 365 1 32 1 328 4 377 5 224 1 280 5 48 1 
336 1 316 1 258 1 87 1 88 3 288 4 25 3 292 8 69 1 360 4 111 3 188 3 212 1 115 1 116 1 138 38 237 4 363 4 70 4 267 7 269 1 95 1 166 20 365 1 32 1 195 1 11 1 328 4 200 1 201 2 203 1 102 4 248 1 224 1 377 5 17 1 19 4 58 2 205 18 280 4 253 4 255 1 48 1 
336 1 316 1 258 1 87 1 88 4 288 2 25 7 292 4 69 1 360 4 111 2 188 7 115 1 116 1 138 52 237 7 363 2 70 2 267 14 269 2 95 1 166 27 365 1 32 1 75 2 195 1 328 4 200 1 201 1 203 1 102 7 248 1 224 1 377 8 17 1 19 2 58 1 205 25 280 8 253 7 255 1 48 1 
316 1 87 1 88 1 288 2 338 1 25 3 292 4 360 2 111 1 188 3 138 19 237 3 363 2 70 2 267 6 269 1 166 9 365 1 195 1 11 1 328 2 102 3 377 3 17 2 19 2 58 1 205 10 280 3 253 3 255 1 
316 1 87 1 88 2 288 3 25 2 292 6 69 1 111 2 360 2 188 2 115 1 138 26 237 2 363 3 267 4 70 3 166 14 365 2 32 1 195 1 328 4 201 2 203 1 102 3 248 1 224 1 377 3 17 1 19 3 280 2 205 12 58 2 253 3 255 1 
238 1 157 1 214 1 351 1 148 1 155 1 59 1 254 1 289 1 312 1 
130 1 182 1 
53 1 157 1 214 1 351 1 172 1 155 1 270 1 59 1 312 1 
238 1 157 1 74 1 315 2 35 1 131 1 148 1 41 1 214 1 351 1 339 1 379 1 46 1 155 1 59 1 47 1 254 1 312 1 
238 1 157 1 74 1 315 2 35 1 131 1 148 1 41 1 214 1 351 1 339 1 379 1 46 1 155 1 59 1 47 1 254 1 312 1 
238 1 157 1 74 1 315 2 35 1 131 1 148 1 41 1 214 1 351 1 339 1 379 1 46 1 155 1 59 1 47 1 254 1 312 1 
367 1 229 1 285 1 
367 1 229 1 285 1 
143 1 153 1 
143 1 367 1 153 1 
49 1 350 1 
49 1 157 1 315 1 129 1 1 2 130 1 134 1 113 2 214 1 323 1 344 2 74 1 325 1 350 1 217 2 220 1 221 2 351 1 223 1 379 1 46 1 182 1 226 1 155 1 47 1 59 1 312 1 
229 1 285 1 
143 1 367 1 153 1 
209 1 287 1 3 1 288 1 292 2 265 1 138 2 363 1 70 1 215 1 344 2 166 1 302 1 8 1 9 2 194 1 78 1 305 1 330 1 15 1 217 2 218 1 309 1 331 2 221 2 225 1 19 1 205 1 127 2 252 2 184 1 
193 1 9 2 355 1 144 1 257 1 21 1 51 1 317 2 209 1 101 1 38 1 133 1 52 1 81 1 308 1 117 1 215 1 252 2 127 2 
193 1 9 1 355 1 144 1 21 1 51 1 317 2 160 1 101 1 209 1 133 1 52 1 81 1 308 1 215 1 252 1 127 1 
9 1 207 1 305 1 275 1 209 1 38 1 80 1 308 1 265 1 250 1 57 1 215 1 252 1 127 1 
193 1 9 1 355 1 144 1 21 1 51 1 317 2 209 1 101 1 38 1 133 1 52 1 81 1 308 1 117 1 215 1 252 1 127 1 
306 1 
35 1 190 1 44 1 341 1 268 1 231 1 271 1 
156 1 335 1 107 1 61 1 231 1 26 1 189 1 294 1 190 1 299 1 271 1 345 1 35 2 327 1 349 1 379 1 46 1 
335 3 186 2 231 3 187 1 188 1 92 1 294 2 140 1 299 1 345 2 9 1 305 4 349 2 243 1 244 1 102 1 352 1 252 1 253 1 156 6 61 2 22 1 209 2 26 2 263 3 213 1 265 1 361 1 215 1 216 3 271 4 121 1 35 3 122 1 36 1 125 1 80 1 277 1 377 1 379 2 46 2 280 1 127 1 
156 6 335 3 61 2 284 1 88 1 231 5 291 1 26 1 69 1 263 5 360 1 111 1 188 2 92 1 115 1 361 2 294 2 190 2 299 1 216 5 271 8 345 2 35 5 349 2 203 1 149 1 102 2 248 1 224 1 377 2 379 1 181 1 46 1 280 2 253 2 
1 1 61 1 283 1 258 1 66 1 231 2 290 1 210 1 6 1 113 1 361 2 116 1 294 1 344 1 271 2 345 1 349 1 217 1 221 1 372 1 377 2 16 1 379 1 181 1 46 1 280 1 84 1 48 1 
345 1 61 1 35 1 349 1 231 1 294 1 190 1 341 1 268 1 271 1 
156 10 335 5 35 5 102 2 231 5 263 5 188 2 213 1 361 2 377 2 181 1 216 5 280 2 253 2 271 5 
26 1 35 1 190 1 379 1 46 1 299 1 
61 1 209 1 337 1 231 2 26 4 112 1 92 2 265 1 294 2 299 2 215 1 119 1 120 1 271 2 31 1 345 2 9 4 305 1 12 2 349 2 149 2 80 2 250 1 57 1 204 1 379 3 46 3 127 4 252 4 
1 2 259 1 209 1 286 1 287 1 288 1 262 1 134 1 292 2 6 2 113 2 27 1 138 1 265 1 363 1 140 1 342 1 70 1 344 2 215 1 9 1 305 1 330 1 217 3 80 1 221 3 16 1 19 1 205 1 127 1 252 1 184 1 
156 4 335 2 345 1 336 1 61 1 35 4 349 1 149 1 231 2 263 2 92 1 294 1 190 2 216 2 271 1 
50 1 155 1 59 1 
50 1 155 1 59 1 
238 1 222 1 350 1 155 1 59 1 
50 1 155 1 59 1 
83 1 155 1 59 1 
83 1 155 1 59 1 
83 1 155 1 59 1 
155 1 59 1 
214 1 312 1 
336 1 316 1 258 1 88 1 288 1 292 2 360 1 111 1 138 8 116 1 237 2 363 1 70 1 267 2 166 4 95 1 200 1 203 1 377 1 19 1 280 1 205 4 48 1 
336 1 316 1 258 1 88 1 288 2 319 1 25 1 292 4 360 2 111 1 116 1 138 11 237 2 363 2 70 2 267 3 269 1 95 1 166 6 200 1 203 1 102 1 377 2 19 2 280 1 205 5 253 1 48 1 
336 1 316 1 258 1 88 1 319 1 288 3 25 1 292 6 69 1 360 1 111 1 188 2 115 1 116 1 138 19 237 3 363 3 70 3 267 4 95 1 166 9 200 1 201 1 203 1 102 2 248 1 377 3 224 1 19 3 205 10 280 3 253 2 48 1 
336 1 316 1 258 1 88 1 319 1 288 3 25 2 292 6 360 1 111 1 188 1 69 1 115 1 116 1 138 17 237 3 363 3 70 3 267 5 95 1 166 10 200 1 201 1 203 1 102 2 248 1 377 3 224 1 19 3 205 7 280 2 253 2 48 1 
336 1 316 1 258 1 88 1 288 1 292 2 360 1 111 1 138 8 116 1 237 2 363 1 70 1 267 2 166 4 95 1 200 1 203 1 377 1 19 1 280 1 205 4 48 1 
316 1 88 1 288 1 25 1 292 2 360 1 111 1 188 2 69 1 115 1 138 12 237 1 363 1 70 1 267 2 166 6 203 1 102 2 248 1 377 2 224 1 19 1 205 6 280 2 253 2 
336 1 316 1 258 1 88 1 319 1 288 4 25 2 292 8 69 1 360 1 111 1 188 1 115 1 116 1 138 18 237 3 363 4 70 4 267 5 95 1 166 10 200 1 201 2 203 1 102 2 248 1 224 1 377 3 19 4 205 8 280 2 253 2 48 1 
316 1 88 1 288 4 25 3 292 8 69 1 360 1 111 1 188 2 115 1 138 16 237 3 363 4 70 4 267 6 166 9 11 1 201 2 203 1 102 3 248 1 224 1 377 3 19 4 205 7 280 2 253 3 
258 1 200 1 25 3 138 7 116 3 237 3 377 1 267 6 205 4 280 1 95 2 166 3 48 3 
336 1 316 1 258 1 88 1 288 4 25 1 292 8 69 1 360 1 111 1 188 1 115 1 116 1 138 18 237 3 363 4 70 4 267 4 95 1 166 10 11 1 200 1 201 2 203 1 102 2 248 1 224 1 377 3 19 4 205 8 280 2 253 2 48 1 
336 1 258 1 201 1 200 1 288 2 25 1 292 4 138 8 116 1 237 2 377 1 363 2 267 3 70 2 19 2 280 1 205 4 166 4 95 1 48 1 
336 1 258 1 200 1 116 1 138 6 44 1 237 2 377 1 267 2 205 3 95 1 166 3 280 1 48 1 
319 1 288 1 102 1 25 1 292 2 188 1 138 4 237 1 377 1 363 1 267 2 70 1 19 1 205 2 280 1 166 2 253 1 
88 1 102 1 25 1 188 1 111 1 360 2 138 7 237 1 377 1 267 2 269 1 280 1 205 4 166 3 253 1 
336 1 258 1 88 2 288 2 25 4 292 4 360 2 188 2 114 1 116 2 138 23 237 5 363 2 267 9 70 2 269 1 95 1 166 11 75 1 200 1 201 2 100 1 102 2 377 3 19 2 205 12 280 3 253 2 48 2 
360 1 138 1 205 1 
138 1 88 1 166 1 
288 1 319 1 102 1 25 1 292 2 188 1 213 1 138 6 237 2 377 1 363 1 70 1 267 3 19 1 205 3 166 3 280 1 253 1 
316 1 88 1 288 1 25 1 292 2 360 1 111 1 188 2 69 1 115 1 138 12 237 1 363 1 70 1 267 2 166 6 203 1 102 2 248 1 377 2 224 1 19 1 205 6 280 2 253 2 
258 1 25 1 138 6 116 1 237 1 377 1 267 2 166 3 280 1 205 3 48 1 
100 1 201 1 200 1 288 1 25 1 292 2 116 1 138 3 237 1 363 1 267 2 70 1 19 1 166 1 95 1 205 2 48 1 
316 1 258 1 66 1 288 1 25 2 292 2 116 2 138 10 237 3 377 2 363 1 70 1 267 5 19 1 166 5 205 5 280 2 48 2 
316 1 288 1 102 1 25 1 292 2 138 2 377 1 363 1 70 1 267 1 19 1 166 2 
316 1 288 1 102 1 25 1 292 2 188 1 138 4 237 1 377 1 363 1 267 2 70 1 19 1 205 2 280 1 166 2 253 1 
316 1 11 1 201 1 100 1 288 3 25 1 292 6 138 3 116 1 237 1 363 3 70 3 267 2 19 3 205 2 166 1 48 1 
336 1 316 1 258 2 88 3 319 1 288 5 25 5 292 10 360 4 111 1 188 3 116 3 138 34 237 7 363 5 70 5 267 12 269 1 95 1 166 16 76 1 11 1 200 1 100 1 201 2 37 1 102 3 151 1 377 5 19 5 205 18 280 5 253 3 48 3 
134 1 33 1 358 1 221 1 171 1 344 1 217 1 
228 1 358 1 33 1 171 1 230 1 176 1 217 1 134 1 221 1 118 1 344 1 273 1 
80 1 9 1 265 1 250 1 305 1 57 1 44 1 209 1 215 1 127 1 252 1 
9 1 1 1 305 1 241 1 209 1 286 1 262 1 217 2 134 1 80 1 113 1 221 2 265 1 140 1 344 1 215 1 252 1 127 1 
9 1 1 1 159 1 348 1 305 3 241 1 12 1 209 1 286 1 262 1 233 1 246 1 217 2 134 1 113 2 221 2 265 2 140 2 344 2 215 1 84 1 252 1 127 1 
1 1 159 1 209 1 262 1 233 1 134 1 113 2 265 2 140 2 215 1 344 2 9 2 170 1 241 1 305 3 348 1 12 1 40 1 217 2 246 1 221 2 127 2 252 2 84 1 
1 1 283 1 161 1 186 1 290 1 210 1 6 1 113 1 190 1 344 1 9 1 35 1 305 1 12 1 217 1 221 1 16 1 379 1 46 1 84 1 127 1 252 1 
1 1 283 1 186 1 290 1 210 1 6 1 113 1 190 1 344 1 9 1 35 1 305 1 243 1 12 1 217 1 221 1 16 1 379 1 46 1 84 1 127 1 252 1 
9 1 298 1 209 1 215 1 127 1 252 1 
128 1 355 1 256 1 257 1 209 3 91 1 265 2 298 1 140 1 215 2 302 1 71 1 9 6 305 3 80 2 331 1 352 1 45 1 353 1 127 7 252 7 
334 1 1 1 336 1 286 1 3 1 287 2 288 2 292 4 134 2 138 6 237 2 54 1 140 1 342 1 344 1 95 1 9 1 241 1 305 1 200 1 15 1 307 1 104 1 19 2 205 3 252 1 257 1 258 1 209 1 262 1 27 1 113 1 265 1 116 1 363 2 70 2 267 2 215 1 166 3 330 2 217 2 221 2 377 1 280 1 127 1 48 1 282 1 
1 1 283 1 186 1 231 5 290 1 6 1 294 2 190 2 341 1 299 1 344 1 345 2 9 1 305 2 243 1 349 2 244 1 16 1 252 1 61 2 258 1 22 1 66 1 26 2 210 1 113 1 116 1 361 2 119 1 268 1 271 4 35 2 122 1 36 1 125 1 217 1 80 1 221 1 223 1 377 2 379 3 181 1 46 3 280 2 84 1 127 1 48 1 
9 2 257 1 36 1 305 2 209 2 352 1 277 1 265 1 298 1 140 1 215 1 252 2 127 2 
9 4 257 1 305 1 209 1 370 1 40 1 80 1 250 1 265 1 57 1 215 1 252 4 127 4 
9 2 10 1 256 1 305 1 12 1 209 2 211 1 265 1 45 1 140 1 215 1 252 2 127 2 300 1 
80 1 9 1 144 1 51 1 317 1 209 1 215 1 133 1 127 1 252 1 
9 2 355 1 257 1 305 1 209 1 309 1 265 1 215 1 252 2 127 2 302 1 
9 4 128 1 257 1 305 3 12 1 209 2 370 1 80 1 250 1 265 2 57 1 215 2 252 5 127 5 302 1 71 1 
9 4 257 1 305 3 12 1 209 2 370 1 80 1 179 1 250 1 265 2 57 1 215 2 252 5 127 5 302 1 71 1 
9 1 1 1 170 1 305 1 241 1 209 1 262 1 217 2 134 1 80 1 113 1 221 2 265 1 140 1 344 1 215 1 252 1 127 1 
9 1 256 1 305 1 12 1 209 2 91 1 352 1 265 1 45 1 140 1 215 1 252 1 127 1 
134 1 304 1 249 1 191 1 67 1 
1 1 283 1 86 1 22 1 67 1 290 1 210 1 6 1 113 1 190 1 344 1 191 1 98 1 304 1 35 1 348 1 217 1 246 1 150 1 152 1 221 1 249 1 223 1 16 1 379 2 46 2 84 2 380 1 
218 1 221 1 194 1 304 1 78 1 249 1 344 1 67 1 217 1 
98 1 304 1 86 1 
295 1 251 1 44 1 13 1 
169 1 295 1 146 1 251 1 322 1 13 1 20 1 
110 1 146 1 14 1 
168 1 169 3 146 3 199 2 13 1 369 1 295 1 251 1 139 1 322 1 272 1 20 1 
169 2 295 1 146 2 251 1 197 1 322 1 82 1 13 1 20 1 
169 1 144 1 146 1 317 1 52 1 320 1 296 1 139 1 322 1 251 1 20 1 
169 1 146 1 251 1 322 1 139 1 13 1 20 1 
169 1 295 1 146 1 322 1 139 1 13 2 20 1 
167 1 0 1 169 2 146 2 13 1 163 1 251 1 139 1 322 2 20 2 
73 1 158 1 169 3 146 3 197 2 13 1 295 1 296 1 139 1 322 1 251 2 324 1 20 1 
97 1 169 2 144 1 146 2 197 1 51 1 317 2 13 1 52 1 81 1 295 1 251 1 139 1 322 1 20 1 
158 1 169 4 146 4 197 2 13 1 295 1 296 1 139 1 322 2 266 1 251 2 82 1 20 2 
169 1 295 1 146 1 251 1 322 1 139 1 13 1 20 1 
168 1 158 1 169 4 146 4 197 2 199 1 13 2 295 2 42 1 296 1 322 1 251 3 272 1 20 1 
169 2 368 1 146 2 197 1 13 1 234 1 295 1 251 1 139 1 322 1 106 1 20 1 
168 1 169 3 146 3 199 2 13 1 295 1 251 1 139 1 322 1 105 1 272 2 20 1 
240 1 251 2 141 2 318 1 
178 1 169 1 146 1 322 1 139 1 20 1 
169 2 295 1 146 2 251 1 197 1 322 1 139 1 324 1 13 1 20 1 
79 1 
169 1 295 1 146 1 251 1 322 1 139 1 13 1 20 1 
169 3 146 3 197 1 199 1 13 1 295 1 139 1 322 1 251 1 324 1 20 1 
158 1 42 1 296 1 251 1 
251 1 13 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (37,319) (37,319) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (37,319) (37,319) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (37,319) (37,319) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (37,319) (37,319) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 226 151 153 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 226 14 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 226 151 153 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 226 14 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 226 151 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 226 193 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 328 1 19 1 281 1 80 1 228 1 145 1 37 1 207 1 351 1 319 1 
334 1 328 1 19 1 281 1 80 1 228 1 145 1 37 1 207 1 351 1 319 1 
334 1 328 1 19 1 281 1 80 1 228 1 145 1 37 1 207 1 351 1 319 1 
334 1 328 1 19 1 281 1 80 1 228 1 145 1 37 1 207 1 351 1 319 1 
80 1 295 1 266 1 11 1 219 2 318 3 351 1 15 3 161 2 72 1 19 4 120 1 28 1 228 4 145 1 343 1 369 1 315 1 
148 1 328 1 80 1 295 1 11 1 172 1 207 1 351 1 15 1 72 1 19 2 28 1 228 2 145 1 152 1 97 1 
101 1 328 1 80 2 11 1 318 1 351 1 15 2 161 1 19 3 120 1 28 1 228 3 145 2 
112 1 266 1 295 1 318 7 161 4 72 1 120 3 28 1 145 2 343 1 369 1 328 1 101 1 80 2 11 1 219 2 351 1 15 5 19 9 228 9 285 1 22 1 315 1 66 1 
112 1 266 1 295 1 318 7 161 4 72 1 120 3 28 1 145 2 343 1 369 1 328 1 101 1 80 2 11 1 219 2 351 1 15 5 19 9 228 9 285 1 22 1 315 1 66 1 
354 1 194 1 89 1 
27 2 194 1 308 1 
46 2 138 2 312 1 313 2 146 1 156 2 175 2 106 2 
177 1 157 1 46 2 138 2 139 2 179 1 238 1 143 1 368 1 75 2 53 1 122 1 146 1 247 2 31 1 55 1 147 1 373 1 82 1 39 1 13 1 60 1 222 1 332 1 331 1 106 3 333 1 130 2 42 1 312 1 313 3 200 1 284 2 154 1 156 2 175 2 360 1 
46 1 138 1 313 1 76 1 128 1 146 1 35 1 156 1 175 1 106 1 
292 1 46 1 361 1 217 1 10 1 194 1 106 1 320 1 119 1 354 1 313 1 4 1 357 1 35 1 
292 1 119 1 320 1 361 1 46 1 138 1 217 2 354 1 313 1 4 2 194 1 35 1 156 1 175 1 106 1 
217 1 87 1 4 1 183 1 262 1 
163 1 217 2 354 1 4 2 194 1 183 1 262 1 61 1 
217 1 4 1 183 1 
138 1 46 1 217 1 128 1 58 1 106 1 76 1 313 1 4 1 146 1 35 1 156 1 262 1 175 1 
194 1 
163 1 217 2 354 1 4 2 194 1 12 1 183 1 262 1 
276 1 362 1 217 5 205 1 194 1 103 2 183 2 184 1 298 2 375 2 244 1 163 1 354 1 2 1 133 1 4 5 356 1 275 1 262 2 
312 1 89 1 
46 2 138 1 158 1 106 2 312 2 282 1 313 2 156 1 175 1 
272 1 29 1 253 1 
177 1 216 1 139 1 179 1 106 1 333 1 143 1 312 1 368 1 313 1 75 1 200 1 53 1 247 1 122 1 360 1 
177 1 138 1 46 1 139 1 179 1 106 2 333 1 225 1 272 1 143 1 368 1 53 1 200 1 30 1 313 2 75 1 122 1 247 1 156 1 360 1 
138 4 46 5 158 1 317 1 106 5 225 1 20 1 312 1 30 2 313 5 123 1 357 1 156 4 175 1 
46 2 138 2 313 2 128 1 35 1 156 2 316 1 106 2 
46 3 138 3 312 1 30 1 313 3 156 3 175 1 106 3 
46 1 138 1 313 1 128 1 35 1 156 1 106 1 
46 1 138 1 158 1 282 1 313 1 35 1 156 1 175 1 106 1 
177 1 292 1 157 1 361 1 46 3 138 3 158 1 139 1 179 1 238 1 142 1 210 1 320 1 119 1 143 1 368 1 53 1 30 1 75 1 4 1 122 1 146 1 247 1 147 1 35 1 217 1 373 1 13 1 60 1 332 1 331 1 106 4 333 1 225 1 130 1 42 1 312 1 200 1 313 4 284 2 154 1 156 3 175 2 360 1 
46 2 138 1 312 1 20 1 313 2 30 1 357 1 156 1 106 2 
292 1 138 3 46 3 361 1 158 1 217 1 194 1 106 3 210 1 225 1 320 1 119 1 30 2 313 3 4 1 378 1 35 1 156 3 175 1 
138 2 46 2 158 1 106 2 272 1 29 1 30 1 313 2 156 2 175 1 
177 1 139 1 179 1 106 1 333 1 143 1 312 1 368 1 313 1 75 1 200 1 53 1 247 1 122 1 360 1 
177 1 139 1 179 1 106 1 333 1 143 1 312 1 368 1 86 1 313 1 75 1 53 1 247 1 122 1 370 1 
157 1 203 1 113 1 114 1 267 1 206 1 159 1 238 2 240 1 272 2 29 2 96 1 31 2 147 1 253 2 373 1 60 1 332 1 331 1 130 4 131 1 284 2 314 1 287 1 
119 1 46 1 138 1 313 1 35 1 156 1 316 1 106 1 
81 1 116 1 
81 1 116 1 
132 1 32 1 
132 1 32 1 
132 1 81 1 116 1 32 1 
81 1 256 1 116 1 
81 1 256 1 116 1 
81 1 256 1 116 1 
241 1 81 1 116 1 
252 1 132 1 81 2 32 1 116 2 347 1 
190 1 81 1 116 1 
190 1 81 1 116 1 
190 1 81 1 116 1 
45 1 46 2 138 2 169 1 364 1 217 1 81 1 116 1 330 1 106 2 41 1 223 1 71 1 241 1 311 1 312 1 95 1 353 1 3 1 313 2 4 1 323 1 165 1 156 2 
252 1 169 2 265 1 217 2 364 1 181 1 194 1 81 2 116 2 268 1 41 2 280 1 311 2 353 2 4 2 165 3 345 2 111 1 215 1 
72 1 295 1 343 1 
72 1 295 1 152 1 
295 3 343 2 152 1 306 1 337 1 79 1 
295 2 343 1 152 1 306 1 278 1 79 1 
295 2 343 1 152 1 306 2 79 1 
45 1 113 1 114 1 206 1 183 1 184 3 298 1 27 3 163 1 51 1 95 1 96 1 212 2 2 1 3 1 4 5 326 2 372 1 217 5 57 2 194 2 103 1 308 1 84 1 83 1 279 1 375 1 354 1 133 2 231 1 262 4 232 1 
47 1 113 3 114 3 206 3 183 6 50 1 184 8 298 2 117 1 27 9 51 1 163 1 95 4 96 3 212 6 2 1 4 9 275 1 5 1 249 1 326 6 372 2 36 5 217 9 194 5 103 2 308 3 375 2 355 1 354 1 133 6 87 5 231 3 262 7 232 2 
113 1 114 1 206 1 184 3 298 1 27 4 95 1 96 1 212 2 4 3 275 1 372 1 326 2 217 3 57 1 194 3 103 1 308 2 279 1 83 1 375 1 354 1 133 2 262 2 231 1 232 1 
47 1 113 2 114 2 206 2 184 5 298 1 27 7 95 2 96 2 212 4 4 4 275 1 5 1 249 1 326 4 372 1 217 4 57 2 194 4 103 1 308 3 279 1 83 1 375 1 354 1 133 4 262 3 231 2 232 1 
54 1 89 1 333 1 
199 1 333 1 
227 1 
177 1 122 1 333 1 
124 1 333 1 
177 1 333 1 
177 1 67 1 122 1 54 2 307 1 333 3 
294 1 91 1 114 1 267 4 218 1 238 3 141 1 352 1 26 1 130 5 131 3 108 2 96 1 31 2 136 1 44 1 176 1 
294 1 91 1 114 1 267 4 218 1 141 1 238 4 352 1 26 1 130 6 131 3 108 2 96 1 31 2 136 1 44 1 176 1 
294 1 91 1 114 1 267 4 218 1 238 3 141 1 352 1 26 1 130 5 131 3 108 2 96 1 31 2 136 1 291 1 44 1 176 1 
157 1 91 1 338 3 294 5 113 2 267 13 114 5 206 2 180 1 141 3 238 19 297 1 26 1 243 3 188 1 96 5 31 16 147 1 250 1 305 1 218 2 38 1 220 1 352 3 331 1 332 1 130 35 131 8 108 3 284 2 136 1 231 2 44 2 176 2 
157 2 294 1 91 1 114 1 267 5 238 5 141 1 209 1 26 1 96 1 31 3 147 2 218 1 220 1 352 1 332 2 331 2 130 8 107 1 131 4 108 2 284 4 44 1 176 1 
234 1 295 2 139 1 178 1 179 1 318 1 339 1 366 1 72 1 300 1 28 1 145 1 343 1 75 1 53 1 247 1 304 1 328 1 80 1 170 1 11 1 254 1 351 1 15 1 310 1 19 2 335 1 228 2 152 1 337 1 
234 1 295 2 139 1 179 1 318 2 339 1 366 1 72 1 300 1 28 1 145 1 343 1 75 1 53 1 247 1 34 1 328 1 80 1 170 1 11 1 254 1 277 1 15 1 310 1 198 1 19 3 335 1 228 3 152 1 337 1 
234 1 295 2 139 1 179 1 318 2 366 1 72 1 28 1 75 1 53 1 343 1 247 1 328 1 170 1 11 1 254 1 277 1 15 1 310 1 198 1 19 2 335 1 228 2 152 1 337 1 
177 1 234 2 139 1 179 1 366 2 211 1 368 1 145 1 75 1 53 1 213 1 247 1 34 1 248 1 167 1 328 2 80 1 254 2 171 1 333 1 19 1 228 1 109 1 
234 1 295 2 139 1 179 1 339 1 366 1 72 1 300 1 145 1 343 1 75 1 53 1 247 1 304 1 328 1 80 1 170 1 254 1 351 1 310 1 198 1 19 1 335 1 228 1 152 1 337 1 
379 1 
177 1 292 1 46 1 139 2 179 1 93 2 183 6 184 2 298 1 185 1 242 1 2 1 53 1 4 5 247 2 6 2 56 1 251 2 102 4 10 1 149 2 194 2 103 1 308 2 105 1 196 2 106 1 354 1 313 1 109 1 357 1 202 1 264 2 361 1 208 1 27 2 320 1 119 1 211 1 163 3 368 2 164 2 75 2 166 1 35 1 78 1 126 1 217 5 333 1 374 1 375 1 133 2 336 1 288 1 232 1 
292 1 361 1 46 1 208 1 183 2 185 1 320 1 119 1 163 1 164 1 4 3 35 1 78 1 56 1 102 2 217 3 10 1 12 1 106 1 313 1 336 1 357 1 
292 1 361 1 46 1 208 1 183 1 185 1 320 1 119 1 163 1 4 3 35 1 78 1 56 1 102 3 217 3 10 1 194 1 12 1 106 1 354 1 313 1 336 1 357 1 264 1 
292 1 361 1 46 1 208 1 183 2 185 1 320 1 119 1 163 1 164 1 4 3 6 1 35 1 78 1 56 1 102 3 217 3 10 1 194 1 12 1 106 1 354 1 313 1 336 1 357 1 264 1 
292 1 46 1 93 2 183 7 184 1 185 1 298 1 242 1 2 1 4 5 6 4 56 1 102 6 251 2 10 1 149 2 194 5 12 1 103 1 308 2 257 1 106 1 17 1 196 2 354 5 313 1 260 1 357 1 202 1 264 4 361 1 68 1 208 1 119 1 320 1 163 3 73 1 164 4 78 1 35 1 217 5 375 1 133 1 336 1 
292 1 46 1 93 2 183 4 184 1 298 1 185 1 242 1 2 1 4 4 6 2 56 1 102 4 251 2 10 1 149 2 194 2 103 1 308 2 105 1 106 1 196 2 354 1 313 1 357 1 202 1 264 2 361 1 208 1 119 1 320 1 27 2 163 2 164 2 78 1 35 1 217 4 375 1 133 1 336 1 
292 1 361 1 46 1 93 2 208 1 183 4 184 1 185 1 298 1 320 1 119 1 242 1 163 2 73 1 2 1 164 2 4 4 6 2 35 1 78 1 56 1 251 2 102 4 217 4 10 1 149 2 194 1 103 1 308 2 257 1 196 2 106 1 17 1 375 1 354 1 133 1 313 1 336 1 357 1 202 1 264 2 
292 1 361 1 46 1 93 2 208 1 183 4 184 1 185 1 298 1 320 1 119 1 242 1 163 2 73 1 2 1 164 2 4 4 6 2 35 1 78 1 56 1 251 2 102 4 217 4 10 1 149 2 194 1 103 1 308 2 257 1 196 2 106 1 17 1 375 1 354 1 133 1 313 1 336 1 357 1 202 1 264 2 
292 1 361 1 46 1 93 2 208 1 183 4 184 1 185 1 298 1 27 2 320 1 119 1 242 1 163 2 73 1 2 1 164 2 4 4 6 2 33 2 7 1 35 1 78 1 56 1 191 2 102 4 217 4 10 1 9 1 149 2 194 1 103 1 106 1 18 1 375 1 354 1 133 1 313 1 336 1 357 1 264 2 
292 1 361 1 46 1 93 2 208 1 183 5 184 1 298 1 185 1 320 1 119 1 242 1 163 2 73 1 2 1 164 3 4 4 6 3 35 1 78 1 56 1 251 2 102 5 217 4 10 1 149 2 194 1 103 1 308 2 257 1 196 2 17 1 106 1 375 1 354 1 133 1 313 1 260 1 336 1 357 1 202 1 264 3 
292 1 361 1 46 1 93 2 208 1 183 5 184 1 298 1 185 1 320 1 119 1 242 1 163 2 73 1 2 1 164 3 4 4 6 3 35 1 78 1 56 1 251 2 102 5 217 4 10 1 149 2 194 1 103 1 308 2 257 1 196 2 17 1 106 1 375 1 354 1 133 1 313 1 260 1 336 1 357 1 202 1 264 3 
292 1 46 1 93 2 183 4 184 1 298 1 185 1 242 1 2 1 4 4 6 2 56 1 191 2 102 4 10 1 149 2 194 1 103 1 105 1 106 1 18 1 354 1 313 1 357 1 264 2 361 1 208 1 119 1 320 1 27 2 163 2 164 2 33 2 78 1 35 1 217 4 375 1 133 1 336 1 
157 1 91 1 267 2 114 1 141 1 238 3 26 1 272 1 29 1 96 1 31 2 147 1 253 1 373 1 352 1 60 1 332 1 331 1 130 5 131 2 312 1 108 1 284 2 314 1 89 1 176 1 
157 2 294 1 338 3 113 2 267 2 114 2 206 1 367 1 238 6 297 1 272 11 243 3 29 4 96 1 74 1 31 8 55 1 147 2 125 1 371 1 253 11 373 2 195 1 60 1 332 2 331 2 130 14 312 1 131 1 173 1 284 4 154 1 231 2 
177 1 46 1 138 1 157 1 139 1 179 1 235 1 238 1 143 1 368 1 29 1 53 1 75 1 30 1 122 1 247 1 31 1 55 1 125 1 147 1 100 1 216 1 373 1 60 1 332 1 331 1 106 2 333 1 225 1 130 2 312 1 200 1 313 2 284 2 88 1 154 1 156 1 360 1 
177 2 138 1 46 1 91 1 294 4 139 3 179 2 141 1 238 10 143 2 96 3 53 2 247 3 55 1 147 3 253 7 352 1 13 2 60 3 106 3 198 1 312 1 108 1 313 3 200 2 63 1 154 1 156 1 360 2 157 3 23 2 113 2 114 3 267 8 206 2 26 1 272 7 368 1 29 7 322 1 273 2 75 3 30 1 274 2 122 2 31 9 125 1 373 3 331 3 332 3 225 1 333 2 130 19 131 4 284 6 43 1 231 2 380 2 176 1 
177 3 46 1 138 1 157 2 233 1 178 1 139 4 179 3 238 1 270 1 162 1 211 1 368 2 245 1 30 1 53 2 75 4 122 1 247 4 31 1 55 1 147 2 99 1 373 2 39 1 60 2 106 1 332 2 331 2 226 1 333 3 130 2 151 1 313 1 284 4 314 1 153 1 109 1 154 1 156 1 135 1 
138 1 157 1 46 1 158 1 113 1 267 1 114 1 206 1 238 2 187 1 272 1 29 1 96 1 31 1 147 1 125 1 253 1 373 1 60 1 332 1 331 1 106 1 130 3 131 1 313 1 284 2 156 1 175 1 231 1 
157 1 294 1 113 1 267 1 114 1 253 1 373 1 159 1 60 1 331 1 332 1 130 2 272 1 29 1 284 2 314 1 31 2 147 1 
157 1 267 1 253 1 373 1 206 1 238 2 60 1 331 1 332 1 130 2 272 1 131 1 29 1 96 1 284 2 314 1 287 1 147 1 
157 1 294 1 113 1 114 1 267 2 206 1 238 2 272 2 29 2 96 1 31 2 147 1 253 2 373 1 60 1 332 1 331 1 130 4 131 1 284 2 314 1 231 1 
157 1 294 1 113 1 267 1 114 1 253 1 373 1 159 1 60 1 331 1 332 1 130 2 272 1 29 1 284 2 31 2 147 1 135 1 
157 1 267 1 253 1 373 1 206 1 238 2 60 1 331 1 332 1 130 2 272 1 131 1 29 1 96 1 284 2 287 1 147 1 135 1 
157 1 294 1 113 1 114 1 267 2 206 1 238 2 272 2 29 2 96 1 31 2 147 1 253 2 373 1 60 1 332 1 331 1 130 4 131 1 284 2 231 1 135 1 
157 1 294 1 113 1 267 2 114 1 253 2 373 1 206 1 238 2 60 1 331 1 332 1 130 4 272 2 131 1 29 2 96 1 284 2 31 2 147 1 231 1 
177 1 157 1 139 1 179 1 238 1 143 1 368 1 53 1 75 1 122 1 247 1 31 1 55 1 147 1 373 1 13 1 60 1 106 1 331 1 332 1 333 1 130 2 312 1 200 1 313 1 284 2 154 1 360 1 
177 1 157 1 139 1 179 1 238 1 143 1 368 1 53 1 75 1 122 1 247 1 31 1 55 1 370 1 147 1 373 1 60 1 106 1 331 1 332 1 333 1 130 2 312 1 86 1 313 1 284 2 154 1 290 1 
157 1 294 1 113 1 114 1 267 2 206 1 238 2 272 2 29 2 96 1 31 2 147 1 125 1 253 2 373 1 60 1 332 1 331 1 130 4 131 1 284 2 231 1 
177 1 157 1 294 1 113 1 23 1 267 2 114 1 139 1 178 1 179 1 206 1 238 2 272 2 143 1 29 2 96 1 53 1 75 1 122 1 247 1 31 2 147 1 253 2 373 1 13 1 60 1 106 1 331 1 332 1 333 1 130 4 131 1 200 1 313 1 284 2 231 1 360 1 
138 1 157 1 46 1 294 1 158 1 113 1 267 1 114 1 206 1 238 1 272 1 342 1 29 1 96 1 31 2 147 1 125 1 253 1 373 1 60 1 332 1 331 1 106 1 130 3 313 1 284 2 156 1 175 1 231 1 
157 2 338 2 294 3 204 1 113 3 114 3 267 6 206 3 238 10 297 1 209 1 243 1 144 1 94 1 96 3 31 9 147 2 371 1 327 1 127 1 309 2 332 2 331 2 85 1 130 19 131 3 284 4 261 2 134 1 231 3 
157 3 294 2 338 2 113 3 267 4 114 3 206 2 238 12 49 1 269 1 297 2 209 1 243 2 144 1 94 1 96 2 31 14 147 3 127 2 220 2 129 1 309 1 332 3 331 3 224 1 85 1 130 26 258 1 131 2 284 6 64 1 261 4 134 2 231 3 
157 3 91 1 338 4 294 4 113 4 114 5 267 9 365 1 206 4 141 1 49 1 238 21 269 1 297 3 209 1 26 1 243 3 144 1 94 1 96 5 31 19 147 3 371 1 327 1 127 2 220 1 129 1 352 1 309 1 332 3 331 3 224 1 85 1 130 40 258 1 131 5 108 1 284 6 64 1 261 4 134 1 231 4 176 1 
157 4 91 1 338 4 294 3 113 4 114 5 267 8 365 1 206 3 141 1 49 1 238 19 269 1 297 3 209 1 26 1 243 3 144 1 94 1 96 4 31 19 147 4 371 1 327 1 127 2 220 2 129 1 352 1 309 1 332 4 331 4 224 1 85 1 130 38 258 1 131 5 108 1 284 8 64 1 261 4 134 1 231 4 176 1 
157 2 91 1 338 4 294 7 113 7 114 8 267 15 206 7 367 2 141 1 49 1 238 26 269 1 297 2 209 1 26 1 243 4 144 1 94 1 96 8 31 26 147 2 371 2 127 1 220 1 129 1 352 1 309 1 332 2 331 2 224 1 85 1 130 52 258 1 131 8 108 1 284 4 64 1 261 4 134 1 231 7 176 1 
252 1 280 1 311 1 169 1 353 1 181 1 81 1 116 1 104 1 41 1 
241 1 223 1 
341 1 311 1 169 1 353 1 81 1 325 1 116 1 98 1 41 1 
344 1 256 1 
190 1 214 1 347 1 
252 1 169 1 265 1 364 1 217 1 181 1 194 1 81 1 116 1 268 1 41 1 280 1 311 1 353 1 4 1 165 2 345 1 215 1 
252 1 169 1 265 1 364 1 217 1 181 1 194 1 81 1 116 1 268 1 41 1 280 1 311 1 353 1 4 1 165 2 345 1 215 1 
252 1 169 1 265 1 364 1 217 1 181 1 194 1 81 1 116 1 268 1 41 1 280 1 311 1 353 1 4 1 165 2 345 1 215 1 
344 1 256 1 347 1 
344 1 256 1 347 1 
190 1 214 1 
190 1 214 1 347 1 
323 1 330 1 
45 1 138 2 46 2 265 1 182 1 116 1 71 1 241 1 95 1 3 1 4 1 345 1 165 1 323 1 169 1 217 1 81 1 330 1 106 2 41 1 223 1 311 1 312 1 353 1 313 2 156 2 262 1 
177 2 46 2 157 1 233 1 139 2 179 2 237 1 238 1 239 1 270 1 162 1 245 1 53 1 75 2 122 1 247 2 31 1 55 1 8 1 125 1 147 1 99 1 373 1 39 2 14 1 60 1 331 1 106 2 332 1 333 2 226 1 130 2 283 1 313 2 284 2 154 1 
170 1 295 2 234 1 139 2 178 1 179 1 339 1 59 1 198 1 72 1 335 1 343 1 53 1 75 2 247 2 152 1 337 1 65 1 90 1 
170 1 295 2 234 1 139 1 179 1 339 1 198 1 72 1 335 1 1 1 343 1 75 1 53 1 247 1 152 1 337 1 90 1 
177 1 234 1 139 1 179 1 333 1 211 1 368 1 189 1 53 1 75 1 213 1 247 1 109 1 65 1 
170 1 295 2 234 1 139 1 179 1 339 1 59 1 198 1 72 1 335 1 343 1 75 1 53 1 247 1 152 1 337 1 65 1 90 1 
70 1 
244 1 354 1 133 1 194 1 356 1 184 1 89 1 
183 1 184 1 298 1 27 1 163 1 2 1 4 1 251 1 217 1 194 2 103 1 308 1 196 1 375 1 354 1 133 1 202 1 
177 3 292 2 178 1 139 3 179 4 0 1 296 2 183 5 184 9 298 4 244 1 301 2 52 2 2 4 96 2 302 2 53 3 4 5 247 3 54 2 255 2 194 8 103 4 308 6 199 3 354 2 356 1 67 1 113 2 114 2 206 2 69 1 25 1 118 2 27 12 321 2 368 1 163 3 212 6 75 3 122 3 124 2 326 6 168 2 217 5 333 10 376 1 375 4 133 8 288 1 230 1 231 2 232 2 380 2 
338 1 113 2 114 2 206 2 296 1 48 1 49 1 183 1 269 1 184 8 297 1 298 2 27 6 243 1 163 1 212 5 2 2 96 2 302 2 4 1 326 5 217 1 129 1 194 5 103 2 308 3 16 1 224 1 258 1 375 2 354 2 133 5 288 1 231 2 232 1 
138 1 46 1 114 2 296 1 141 1 184 2 298 1 188 1 2 1 96 1 302 2 76 1 4 1 146 1 35 1 217 1 128 1 103 1 58 1 352 1 106 1 17 1 375 1 313 1 133 2 156 1 175 1 176 1 
194 1 103 1 184 1 298 1 375 1 244 1 2 1 354 1 133 1 356 1 
113 2 114 2 206 2 194 5 296 1 308 5 184 5 27 10 212 5 96 2 302 2 133 5 231 2 380 1 326 5 
163 1 217 1 354 1 4 1 194 1 183 1 
177 1 293 1 139 4 179 1 183 4 184 2 25 2 298 2 299 1 211 1 368 2 163 2 2 1 53 1 75 4 4 3 247 4 275 1 126 1 217 3 103 2 333 1 374 1 375 2 376 1 133 2 109 1 288 2 232 2 
177 1 157 1 46 2 138 2 139 1 179 1 238 1 143 1 368 1 75 1 53 1 247 1 146 1 122 1 147 1 373 1 13 1 60 1 332 1 106 3 331 1 333 1 130 1 42 1 312 1 313 3 200 1 284 2 154 1 156 2 175 2 360 1 
184 2 298 1 27 4 2 1 212 2 302 1 326 2 194 3 103 1 308 2 375 1 108 1 354 1 133 1 288 1 232 1 
349 1 311 1 169 1 
349 1 311 1 169 1 
349 1 311 1 169 1 
311 1 169 1 323 1 181 1 303 1 
311 1 169 1 236 1 
311 1 169 1 236 1 
311 1 169 1 236 1 
311 1 169 1 
81 1 116 1 
157 2 294 1 91 1 114 1 267 3 220 1 238 4 141 1 352 1 331 2 332 2 26 1 130 7 131 2 108 1 96 1 284 4 31 3 147 2 176 1 
91 1 267 2 114 1 238 3 141 1 352 1 26 1 130 5 131 2 108 1 96 1 31 2 89 1 176 1 
157 1 294 1 113 1 267 2 92 1 114 1 206 1 238 2 331 1 332 1 130 4 131 1 96 1 284 2 31 2 147 1 231 1 
338 2 294 1 113 1 114 1 267 2 206 1 238 4 297 1 130 7 243 1 131 1 96 1 31 3 371 1 231 1 
157 2 91 1 294 4 338 2 113 2 267 9 114 3 206 2 367 1 141 2 238 12 26 1 243 2 96 3 31 10 371 1 147 2 220 2 352 2 195 1 331 2 332 2 130 22 131 5 108 1 62 1 284 4 231 2 176 1 
130 1 338 1 238 1 
130 1 243 1 31 1 
157 1 294 1 113 1 92 1 114 1 267 3 206 1 238 3 332 1 331 1 130 6 131 2 96 1 284 2 31 3 147 1 231 1 380 1 
157 1 294 1 338 1 113 2 114 2 267 2 206 2 238 6 49 1 269 1 297 1 209 1 243 1 96 2 31 6 147 1 129 1 332 1 331 1 224 1 130 12 258 1 131 1 284 2 231 2 
294 1 114 1 267 2 238 3 141 1 352 1 130 6 131 1 96 1 31 3 176 1 
157 1 294 1 91 1 267 2 220 1 141 1 238 2 352 1 331 1 332 1 26 1 130 3 131 1 62 1 284 2 31 1 147 1 
157 1 294 2 267 5 114 2 141 2 238 5 352 2 332 1 331 1 209 1 130 10 188 1 131 3 96 2 284 2 31 5 147 1 176 1 
157 1 294 1 113 1 114 1 267 1 209 1 331 1 332 1 130 2 284 2 31 2 147 1 
157 1 294 1 113 1 267 2 114 1 206 1 238 2 209 1 331 1 332 1 130 4 131 1 96 1 284 2 31 2 147 1 231 1 
157 3 294 1 267 2 220 1 238 2 141 1 352 1 209 1 331 3 332 3 130 3 131 1 62 1 284 6 31 1 147 3 327 1 
157 5 91 1 338 4 294 5 113 3 92 1 114 5 267 12 180 1 206 3 141 3 238 18 297 1 209 1 26 1 243 3 96 5 31 15 147 5 371 1 250 1 327 1 38 1 220 2 352 3 332 5 331 5 130 33 131 7 108 1 62 1 284 10 231 3 176 2 
157 1 338 1 91 1 114 1 267 2 238 4 49 1 141 1 297 1 209 1 26 1 243 1 96 1 31 3 147 1 352 1 332 1 331 1 130 7 131 2 108 1 284 2 176 1 
157 2 91 1 338 2 294 1 113 1 92 1 114 2 267 3 141 1 238 5 49 1 297 1 209 1 26 1 243 1 96 1 31 5 147 2 371 1 352 1 332 2 331 2 130 10 131 2 108 1 284 4 231 1 176 1 
157 3 91 1 294 1 338 1 113 2 92 1 114 3 267 4 206 2 141 1 238 10 49 1 269 1 297 1 209 1 26 1 243 1 96 3 31 8 147 3 220 1 129 1 352 1 332 3 331 3 224 1 130 18 258 1 131 3 108 1 284 6 231 2 176 1 
157 3 91 1 294 2 338 1 113 2 92 1 114 3 267 5 206 1 141 1 238 7 49 1 269 1 297 1 209 1 26 1 243 1 96 2 31 9 147 3 220 1 129 1 352 1 332 3 331 3 224 1 130 16 258 1 131 3 108 1 284 6 231 2 176 1 
157 1 338 1 91 1 114 1 267 2 238 4 49 1 141 1 297 1 209 1 26 1 243 1 96 1 31 3 147 1 352 1 332 1 331 1 130 7 131 2 108 1 284 2 176 1 
157 1 294 1 338 1 113 2 114 2 267 2 206 2 238 6 49 1 269 1 297 1 209 1 243 1 96 2 31 6 147 1 129 1 332 1 331 1 224 1 130 12 258 1 131 1 284 2 231 2 
157 4 91 1 294 2 338 1 113 2 92 1 114 3 267 5 206 1 141 1 238 8 49 1 269 1 297 1 209 1 26 1 243 1 96 2 31 9 147 4 220 2 129 1 352 1 332 4 331 4 224 1 130 17 258 1 131 3 108 1 284 8 231 2 176 1 
157 4 294 3 338 1 113 3 114 3 267 6 206 2 238 7 49 1 269 1 297 1 209 1 243 1 96 2 31 9 147 4 327 1 220 2 129 1 332 4 331 4 224 1 130 16 258 1 131 3 284 8 231 3 
91 1 294 3 267 6 114 1 238 4 141 3 352 3 26 2 130 7 131 3 96 1 31 3 176 1 
157 4 91 1 294 1 338 1 113 2 114 3 267 4 206 1 141 1 238 8 49 1 269 1 297 1 209 1 26 1 243 1 96 2 31 9 147 4 327 1 220 2 129 1 352 1 332 4 331 4 224 1 130 17 258 1 131 3 108 1 284 8 231 2 176 1 
46 1 312 1 20 1 21 1 313 1 357 1 106 1 
46 1 271 1 106 1 312 1 21 1 20 1 174 1 313 1 121 1 286 1 324 1 357 1 
177 1 211 1 368 1 139 1 179 1 53 1 75 1 247 1 109 1 89 1 333 1 
177 1 138 1 46 1 139 1 179 1 106 2 333 1 143 1 312 1 368 1 30 1 313 2 75 1 200 1 53 1 122 1 247 1 156 1 
177 2 138 1 46 2 139 1 179 1 106 2 25 1 118 1 333 3 119 1 320 1 143 1 312 1 30 1 313 2 75 1 200 1 53 1 122 2 247 1 124 1 35 1 156 2 
177 2 46 2 138 1 139 2 179 1 25 1 118 1 320 1 119 1 143 1 53 1 75 2 30 1 247 2 122 2 124 1 370 1 35 1 106 2 333 3 259 1 312 1 313 2 156 2 
292 1 177 1 217 2 139 3 179 1 194 1 183 1 25 1 118 1 333 4 259 1 368 1 199 1 354 1 75 3 53 1 4 2 122 1 247 3 54 1 124 1 110 1 358 1 
292 1 177 1 217 2 139 3 179 1 194 1 183 1 25 1 118 1 333 4 259 1 321 1 368 1 199 1 354 1 75 3 53 1 4 2 122 1 247 3 54 1 124 1 
139 1 179 1 53 1 75 1 77 1 247 1 
67 1 177 3 233 2 178 1 139 3 179 4 270 2 226 1 333 3 162 1 368 2 151 1 245 1 75 3 53 2 247 3 122 2 153 1 348 1 
177 1 46 1 138 1 157 2 91 1 23 1 114 1 267 2 178 1 139 1 179 1 238 3 141 1 26 1 272 1 143 1 29 1 96 1 273 1 53 1 30 1 75 1 122 1 247 1 31 2 125 1 147 2 253 1 373 2 352 1 13 1 60 2 332 2 331 2 106 2 333 1 130 5 312 1 131 2 108 1 283 1 313 2 200 1 284 4 156 1 176 1 360 1 
292 1 139 1 183 2 184 1 298 2 321 1 244 1 368 1 163 1 301 1 2 2 52 1 75 1 4 3 247 1 54 1 168 1 217 3 194 1 103 2 333 2 375 2 376 1 199 1 354 1 133 1 356 1 262 1 
67 1 177 1 178 1 139 2 179 2 69 1 333 2 75 2 53 1 77 1 247 2 122 1 54 1 
177 1 139 4 178 1 179 1 333 1 259 1 211 1 368 1 75 4 53 1 247 4 377 1 109 1 
177 1 233 1 139 2 179 2 25 1 270 1 333 1 162 1 322 1 245 1 75 2 53 1 247 2 122 1 
72 1 335 1 368 1 295 1 139 1 179 1 53 1 75 1 247 1 152 1 
177 2 233 1 178 1 139 2 179 2 14 1 270 1 226 1 333 2 198 1 162 1 245 1 53 1 75 2 247 2 122 1 
177 2 233 1 139 2 178 1 179 2 270 1 226 1 333 2 162 1 368 1 151 1 245 1 53 1 75 2 247 2 122 1 
177 2 233 1 193 1 139 2 178 1 179 2 270 1 226 1 333 2 162 1 368 1 245 1 53 1 75 2 247 2 122 1 
177 1 138 1 46 1 139 1 179 1 106 2 333 1 143 1 312 1 368 1 30 1 313 2 75 1 53 1 122 1 247 1 370 1 156 1 
177 1 67 1 233 1 139 1 179 2 53 1 75 1 122 1 247 1 348 1 270 1 25 1 333 1 
312 1 363 1 150 1 155 1 289 1 
292 1 361 1 192 1 363 1 217 2 221 1 194 1 150 2 210 1 119 1 320 1 312 1 354 1 4 2 155 2 35 1 262 1 289 2 359 1 
46 1 363 1 150 1 237 1 239 1 106 1 313 1 8 1 289 1 
363 1 221 1 359 1 
28 1 11 1 15 1 89 1 
19 1 80 1 28 1 228 1 145 1 11 1 15 1 
328 1 228 1 366 1 
137 1 148 2 80 1 11 1 351 1 340 1 15 1 197 1 19 3 228 3 28 1 145 1 
19 2 80 1 28 1 228 2 145 1 11 1 318 1 219 1 15 1 
161 1 72 1 19 1 80 1 295 1 266 1 228 1 145 1 343 1 351 1 15 1 
19 1 80 1 28 1 228 1 145 1 351 1 15 1 
19 1 80 1 28 2 228 1 145 1 11 1 351 1 
80 2 329 1 351 1 15 1 19 2 28 1 228 2 145 2 229 1 263 1 
112 1 80 1 11 1 318 2 351 1 15 2 161 1 19 3 120 1 28 1 228 3 145 1 285 1 
80 1 295 2 11 1 318 1 351 1 15 1 72 1 19 2 28 1 228 2 145 1 343 1 152 1 337 1 346 1 
80 2 11 1 219 1 318 2 351 1 15 2 161 1 19 4 120 1 28 1 228 4 145 2 369 1 
19 1 80 1 28 1 228 1 145 1 11 1 351 1 15 1 
148 1 137 1 80 1 115 1 11 2 318 2 15 3 197 1 161 1 19 4 120 1 28 2 228 4 145 1 
80 1 11 1 318 1 351 1 15 1 186 1 19 2 28 1 228 2 145 1 246 1 66 1 
148 2 137 2 19 3 80 1 28 1 228 3 145 1 11 1 160 1 351 1 15 1 197 1 
350 1 24 2 40 1 15 2 
19 1 80 1 228 1 140 1 145 1 351 1 
112 1 19 2 80 1 28 1 228 2 145 1 11 1 318 1 351 1 15 1 
201 1 
19 1 80 1 28 1 228 1 145 1 11 1 351 1 15 1 
148 1 112 1 19 3 80 1 28 1 228 3 145 1 11 1 318 1 351 1 15 1 
161 1 120 1 115 1 15 1 
28 1 15 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (12,208,274,296,339) (163,267) (163,267) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (12,208,274,296,339) (163,267) (163,267) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (12,208,274,296,339) (163,267) (163,267) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (12,208,274,296,339) (163,267) (163,267) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (9,81) 321 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (154,158) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (35,61,235) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (154,158) (154,158) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 96 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 96 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 332 2 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (9,81) (9,81) (24,323) 224 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (9,81) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 279 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (9,81) (9,81) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (154,158) (154,158) 179 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (9,81) 321 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 96 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 265 (113,128) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 265 (113,128) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 265 (67,331) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 265 (67,331) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 63 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 148 1 341 1 260 1 150 1 333 1 163 1 267 1 164 1 274 1 134 1 60 1 288 1 318 1 
37 1 148 1 260 1 341 1 150 1 333 1 163 1 267 1 164 1 274 1 134 1 60 1 288 1 318 1 
37 1 148 1 260 1 341 1 150 1 333 1 163 1 267 1 164 1 274 1 134 1 60 1 288 1 318 1 
37 1 148 1 260 1 341 1 150 1 333 1 163 1 267 1 164 1 274 1 134 1 60 1 288 1 318 1 
340 1 0 2 148 4 260 1 341 1 150 1 172 1 355 3 18 1 194 1 185 1 252 3 60 1 62 1 288 1 365 2 73 1 318 4 
148 2 159 1 260 1 150 1 223 1 54 1 333 1 355 1 185 1 274 1 134 1 60 1 288 1 62 1 73 1 318 2 
0 1 148 3 260 2 150 1 333 1 355 2 49 1 18 1 185 1 252 1 60 2 73 1 318 3 
0 4 340 1 246 1 341 1 143 1 49 1 185 1 252 7 297 1 73 1 148 9 260 2 150 1 333 1 172 1 355 5 310 1 18 3 194 1 60 2 365 2 288 1 62 1 318 9 
0 4 340 1 246 1 341 1 143 1 49 1 185 1 252 7 297 1 73 1 148 9 260 2 150 1 333 1 172 1 355 5 310 1 18 3 194 1 60 2 365 2 288 1 62 1 318 9 
230 1 96 1 21 1 
301 1 93 2 21 1 
190 1 325 2 336 2 
80 2 153 2 9 1 114 1 190 1 320 1 222 1 325 1 336 1 321 1 202 2 249 1 
190 1 158 1 325 1 336 1 
235 1 118 1 152 1 324 1 57 1 104 1 240 1 268 1 230 1 231 1 21 1 338 1 61 1 35 1 
235 1 325 1 336 1 
276 1 112 1 294 1 35 1 240 1 
276 1 230 1 262 1 21 1 112 1 35 2 192 1 240 2 
112 1 35 1 240 1 
190 1 154 1 158 1 276 1 325 1 336 1 35 1 240 1 
21 1 
276 1 230 1 262 1 261 1 21 1 112 1 35 2 240 2 
258 1 127 2 350 2 276 2 115 2 262 1 209 1 141 1 103 1 120 1 240 5 69 1 166 1 230 1 71 1 136 1 21 1 35 5 112 2 
96 1 
74 1 39 1 353 1 324 1 57 1 268 1 336 1 325 1 231 1 299 1 
221 1 57 1 324 1 354 1 353 1 241 2 268 1 243 1 325 4 336 1 231 1 345 1 338 1 299 1 
325 1 
80 1 153 1 320 1 243 1 325 1 202 1 241 1 
336 1 325 3 241 1 
325 1 
74 1 325 1 336 1 299 1 
243 1 336 1 325 2 299 1 241 1 
221 1 324 1 57 1 353 1 241 1 268 1 325 1 231 1 338 1 
243 1 325 1 241 1 
325 1 336 1 299 1 
80 1 153 1 320 1 202 1 
80 1 153 1 320 1 202 1 
312 1 
169 1 325 1 
29 1 167 1 
29 1 167 1 
351 1 33 1 
351 1 33 1 
351 1 33 1 
98 1 29 1 167 1 
29 1 43 1 167 1 
29 2 207 1 351 1 33 1 167 2 7 1 
98 1 29 1 167 1 
98 1 29 1 167 1 
29 1 303 1 167 1 
29 1 303 1 167 1 
29 1 303 1 167 1 
217 1 234 1 291 1 75 1 306 1 117 1 240 1 295 1 29 1 43 1 229 1 325 2 244 1 20 1 197 1 111 1 167 1 257 1 35 1 
217 2 207 1 291 2 306 1 342 1 211 2 90 1 91 1 295 2 240 2 162 1 29 2 82 1 244 2 46 1 21 1 167 2 257 3 35 2 
341 1 62 1 288 1 
223 1 62 1 288 1 
83 1 341 2 223 1 3 1 343 1 288 3 
341 1 223 1 3 1 191 1 343 1 288 2 
341 1 223 1 3 2 343 1 288 2 
178 2 115 1 292 1 88 2 117 1 4 1 120 2 93 3 70 1 253 1 71 1 230 1 35 5 300 1 301 1 127 1 259 1 350 1 276 4 262 1 42 1 78 1 240 5 193 1 337 1 196 1 136 3 86 2 197 1 111 1 21 2 112 1 
319 1 178 6 115 2 292 3 4 3 120 6 294 5 93 9 166 1 70 1 253 2 230 1 71 1 35 9 300 3 301 3 127 2 13 1 350 2 276 7 101 1 102 5 262 1 78 3 240 9 193 2 284 1 269 1 337 3 136 8 86 6 317 1 111 4 21 5 112 6 
178 2 115 1 292 1 88 1 4 1 120 2 93 4 166 1 253 1 230 1 35 3 300 1 301 2 127 1 350 1 276 2 42 1 240 3 193 1 78 1 196 1 136 3 337 1 86 2 111 1 21 3 
319 1 178 4 115 1 292 2 88 2 4 2 120 4 93 7 166 1 253 1 230 1 35 4 300 2 301 3 127 1 350 1 276 3 42 1 240 4 193 1 78 2 284 1 269 1 196 1 136 5 337 2 86 4 111 2 21 4 
266 1 122 1 96 1 
122 1 15 1 
8 1 
122 1 201 1 79 1 
122 1 359 1 
122 1 79 1 
266 2 218 1 19 1 122 3 201 1 79 1 
179 1 200 2 292 3 140 6 119 1 142 1 204 4 250 14 236 2 329 1 16 1 171 2 40 2 56 5 212 1 78 3 45 1 138 8 
179 1 200 2 292 3 140 6 119 1 142 3 204 4 250 14 236 2 329 1 16 1 171 2 40 2 56 7 212 1 78 3 45 1 138 8 
179 1 200 2 292 3 140 6 142 1 119 1 204 4 250 14 236 2 329 1 16 1 171 2 40 2 56 5 212 1 78 3 131 1 45 1 138 8 
23 1 139 4 179 1 247 1 290 1 200 3 271 1 140 19 292 6 4 3 119 1 142 7 66 1 204 7 27 1 250 40 251 2 228 1 145 1 300 3 236 3 349 3 329 1 16 2 171 3 40 2 56 14 212 2 78 6 173 1 45 1 337 3 286 1 138 21 287 1 
179 1 247 2 290 2 200 2 292 3 140 7 142 2 204 5 27 1 250 16 251 4 228 2 236 2 329 1 16 1 171 2 40 2 210 1 56 7 212 1 78 3 108 1 45 1 286 2 138 9 
341 1 223 1 202 1 185 1 252 1 50 1 94 1 187 1 347 1 73 1 348 1 328 1 99 1 126 1 148 2 260 1 238 1 150 1 333 1 355 1 80 1 153 1 83 1 314 1 174 1 59 1 60 1 62 1 288 2 318 2 
341 1 223 1 202 1 226 1 205 1 185 1 50 1 252 2 94 1 347 1 73 1 348 1 99 1 126 1 148 3 260 1 238 1 333 1 355 1 80 1 153 1 83 1 132 1 314 1 174 1 59 1 60 1 62 1 288 2 318 3 
341 1 223 1 202 1 226 1 205 1 185 1 50 1 252 2 94 1 347 1 73 1 348 1 99 1 126 1 148 2 333 1 355 1 80 1 153 1 83 1 314 1 59 1 288 2 62 1 318 2 
320 1 202 1 203 1 94 1 50 2 122 1 275 1 52 1 348 2 126 2 148 1 260 1 333 2 79 1 80 1 153 1 132 1 133 1 316 1 59 1 175 1 60 1 318 1 
341 1 223 1 202 1 226 1 50 1 94 1 347 1 348 1 328 1 99 1 126 1 148 1 260 1 238 1 150 1 333 1 80 1 153 1 83 1 314 1 174 1 59 1 60 1 62 1 288 2 318 1 
242 1 
219 1 1 1 320 2 324 1 93 2 94 1 230 1 95 2 231 1 327 2 53 4 235 1 330 1 149 1 152 1 17 1 57 1 104 1 193 1 240 5 105 1 153 2 59 1 195 1 109 1 21 2 338 1 112 6 61 1 115 1 248 1 202 2 118 1 120 2 121 2 122 1 71 1 31 1 35 5 301 2 127 1 350 1 305 2 262 3 129 2 308 2 79 1 80 2 268 1 316 1 135 1 361 2 175 1 136 2 176 1 
53 2 235 1 330 1 149 1 262 1 261 1 118 1 152 1 104 1 17 1 324 1 57 1 240 3 268 1 361 1 109 1 176 1 231 1 338 1 112 2 35 3 61 1 
118 1 324 1 95 1 230 1 231 1 35 3 53 3 235 1 330 1 149 1 261 1 262 1 152 1 57 1 17 1 104 1 240 3 268 1 109 1 176 1 338 1 21 1 112 1 61 1 
118 1 324 1 95 1 230 1 231 1 35 3 53 3 235 1 330 1 149 1 262 1 261 1 305 1 152 1 57 1 17 1 104 1 240 3 268 1 361 1 109 1 176 1 338 1 21 1 61 1 112 2 
324 1 184 1 144 1 95 4 230 5 231 1 327 2 189 1 53 6 235 1 330 1 149 1 152 1 104 1 57 1 17 1 240 5 195 1 109 1 338 1 21 5 112 7 61 1 115 1 118 1 120 1 121 2 68 1 71 1 31 1 35 5 301 2 127 1 350 1 305 4 261 1 262 3 129 2 308 2 44 1 268 1 361 4 136 1 176 1 
324 1 93 2 95 2 230 1 231 1 327 2 53 4 235 1 330 1 149 1 152 1 104 1 57 1 17 1 240 4 195 1 109 1 338 1 21 2 61 1 112 4 115 1 118 1 120 1 121 2 71 1 31 1 35 4 301 2 127 1 350 1 262 2 305 2 129 2 308 2 268 1 361 2 135 1 136 1 176 1 
115 1 118 1 120 1 324 1 121 2 184 1 230 1 95 2 71 1 31 1 231 1 327 2 35 4 301 2 189 1 53 4 235 1 127 1 350 1 330 1 149 1 305 2 262 2 129 2 308 2 152 1 57 1 17 1 104 1 240 4 44 1 268 1 361 2 195 1 136 1 109 1 176 1 21 1 338 1 112 4 61 1 
115 1 118 1 120 1 324 1 121 2 184 1 230 1 95 2 71 1 31 1 231 1 327 2 35 4 301 2 189 1 53 4 235 1 127 1 350 1 330 1 149 1 305 2 262 2 129 2 308 2 152 1 57 1 17 1 104 1 240 4 44 1 268 1 361 2 195 1 136 1 109 1 176 1 21 1 338 1 112 4 61 1 
115 1 322 1 118 1 120 1 324 1 121 2 184 1 93 2 344 1 230 1 95 2 71 1 231 1 327 2 35 4 233 2 188 1 53 4 302 2 235 1 127 1 350 1 330 1 149 1 305 2 262 2 152 1 57 1 17 1 104 1 240 4 268 1 361 2 195 1 136 1 109 1 176 1 21 1 338 1 112 4 61 1 
115 1 118 1 120 1 324 1 121 2 184 1 68 1 230 1 71 1 95 3 31 1 231 1 327 2 35 4 301 2 189 1 53 5 235 1 127 1 350 1 330 1 149 1 262 2 305 3 129 2 308 2 152 1 57 1 17 1 104 1 240 4 44 1 268 1 195 1 361 3 136 1 109 1 176 1 21 1 338 1 61 1 112 5 
115 1 118 1 120 1 324 1 121 2 184 1 68 1 230 1 71 1 95 3 31 1 231 1 327 2 35 4 301 2 189 1 53 5 235 1 127 1 350 1 330 1 149 1 262 2 305 3 129 2 308 2 152 1 57 1 17 1 104 1 240 4 44 1 268 1 195 1 361 3 136 1 109 1 176 1 21 1 338 1 61 1 112 5 
115 1 118 1 120 1 324 1 121 2 93 2 230 1 95 2 71 1 231 1 327 2 35 4 233 2 188 1 53 4 302 2 235 1 127 1 350 1 330 1 149 1 305 2 262 2 152 1 17 1 57 1 104 1 240 4 268 1 135 1 361 2 195 1 136 1 109 1 176 1 21 1 338 1 112 4 61 1 
312 1 96 1 
139 1 247 1 349 1 290 1 170 1 140 1 2 1 332 1 92 1 250 2 251 2 228 1 286 1 168 1 138 1 
247 1 290 1 140 1 170 1 55 1 92 1 334 1 241 1 281 1 250 2 251 2 243 1 228 1 325 1 110 1 286 1 168 1 138 1 
247 1 290 1 320 1 140 1 170 1 202 1 323 1 224 1 92 1 241 1 250 1 80 1 81 1 153 1 251 2 9 1 243 1 228 1 325 1 110 1 286 1 168 1 
87 1 247 1 290 1 320 1 170 1 202 1 250 1 281 1 28 1 80 1 251 2 153 1 228 1 286 1 168 1 138 1 
247 1 290 1 292 1 140 1 4 1 92 1 250 2 251 2 228 1 325 1 168 1 299 1 300 1 170 1 78 1 58 1 336 1 337 1 286 1 138 1 
312 1 
312 1 
312 1 
87 1 247 1 290 1 170 1 48 1 78 1 250 1 251 2 228 1 337 1 286 1 168 1 138 1 
87 1 300 1 247 1 290 1 170 1 292 1 140 1 358 1 250 1 251 2 228 1 286 1 168 1 
300 1 87 1 247 1 290 1 140 1 292 1 170 1 4 1 78 1 250 2 251 2 228 1 337 1 286 1 168 1 138 1 
300 1 247 1 290 1 140 1 292 1 170 1 4 1 78 1 250 2 251 2 228 1 337 1 286 1 168 1 138 1 
80 1 153 1 9 1 320 1 202 1 
80 1 153 1 320 1 202 1 279 1 
300 1 247 1 290 1 140 1 292 1 170 1 4 1 92 1 78 1 250 2 251 2 228 1 337 1 286 1 168 1 138 1 
80 1 81 1 153 1 9 1 202 1 187 1 
247 1 290 1 292 1 140 1 4 1 92 1 250 2 251 2 228 1 186 1 325 1 168 1 299 1 300 1 170 1 78 1 336 1 337 1 286 1 138 1 
139 2 247 2 290 2 65 1 271 1 140 10 292 3 6 1 4 3 142 3 204 3 273 2 250 19 251 4 228 2 326 1 300 3 349 1 352 1 210 1 56 6 78 3 335 2 173 1 106 1 337 3 137 1 286 2 138 9 22 1 
139 2 247 3 290 3 180 1 65 2 271 2 292 2 140 12 4 3 142 2 27 2 204 2 273 1 250 26 251 6 228 3 326 1 206 1 300 2 349 2 56 4 210 1 78 3 335 4 283 1 106 1 107 1 362 1 363 1 337 3 137 2 286 3 138 14 22 1 
270 1 139 4 180 1 271 3 140 21 4 4 6 1 142 4 273 1 228 3 326 1 236 1 329 1 56 8 335 4 283 1 106 1 107 1 337 4 286 3 22 1 247 3 290 3 65 1 200 1 292 5 204 4 27 1 250 41 251 6 206 1 300 4 349 3 171 1 40 1 210 1 78 5 173 1 362 1 45 1 363 1 137 2 138 20 
270 1 139 4 247 4 290 4 200 1 180 1 65 1 271 3 140 18 292 4 6 1 4 4 142 3 27 2 204 4 273 1 250 38 251 8 228 4 326 1 206 1 300 3 236 1 349 3 329 1 171 1 40 1 210 1 56 7 78 5 335 4 173 1 283 1 106 1 107 1 45 1 362 1 363 1 337 4 137 2 286 4 138 20 22 1 
139 4 247 2 290 2 200 1 180 1 65 1 271 2 140 25 292 8 4 7 142 7 27 1 204 7 273 1 250 52 251 4 30 2 228 2 326 1 206 1 300 7 236 1 349 4 329 1 171 1 40 1 210 1 56 14 78 8 335 4 173 2 283 1 106 1 107 1 45 1 362 1 363 1 337 7 137 1 286 2 138 27 22 1 
217 1 29 1 82 1 207 1 291 1 244 1 32 1 167 1 91 1 295 1 
43 1 229 1 
125 1 217 1 29 1 291 1 254 1 244 1 11 1 167 1 295 1 
98 1 10 1 
303 1 26 1 7 1 
217 1 207 1 291 1 306 1 211 1 90 1 91 1 240 1 295 1 162 1 29 1 82 1 244 1 46 1 21 1 167 1 257 2 35 1 
217 1 207 1 291 1 306 1 211 1 90 1 91 1 240 1 295 1 162 1 29 1 82 1 244 1 46 1 21 1 167 1 257 2 35 1 
217 1 207 1 291 1 306 1 211 1 90 1 91 1 240 1 295 1 162 1 29 1 82 1 244 1 46 1 21 1 167 1 257 2 35 1 
98 1 10 1 7 1 
98 1 10 1 7 1 
303 1 26 1 
303 1 26 1 7 1 
75 1 20 1 
217 1 234 1 276 1 291 1 75 1 117 1 151 1 211 1 90 1 295 1 240 1 29 1 43 1 325 2 229 1 244 1 20 1 197 1 111 1 257 1 167 1 35 1 
247 1 290 1 140 1 47 1 202 2 160 1 324 2 249 2 92 1 28 1 250 2 94 1 251 2 122 1 228 1 231 2 168 1 97 1 170 1 307 1 309 1 57 2 79 1 281 1 80 2 153 2 313 1 59 1 110 1 286 1 138 1 
64 1 99 1 126 1 341 1 237 1 223 1 202 2 226 1 80 2 94 1 153 2 83 1 174 1 59 1 187 1 347 1 62 1 288 2 36 1 
99 1 126 1 341 1 237 1 223 1 202 1 41 1 226 1 80 1 153 1 94 1 83 1 174 1 59 1 347 1 62 1 288 2 
64 1 126 1 320 1 202 1 79 1 80 1 94 1 153 1 122 1 59 1 146 1 316 1 175 1 52 1 
64 1 99 1 126 1 341 1 237 1 223 1 202 1 226 1 80 1 94 1 153 1 83 1 174 1 59 1 347 1 62 1 288 2 36 1 
356 1 
230 1 136 1 209 1 96 1 21 1 103 1 120 1 
115 1 120 1 93 1 71 1 230 1 31 1 35 1 301 1 127 1 350 1 262 1 129 1 308 1 240 1 136 1 21 2 112 1 
218 1 178 6 1 1 320 1 220 2 181 1 272 2 4 2 89 1 93 12 94 4 230 2 187 1 14 1 15 3 103 1 104 2 193 2 240 5 153 3 282 2 59 3 337 2 21 8 112 5 113 2 156 2 24 2 115 4 201 3 292 2 202 3 120 8 122 10 71 4 346 2 35 5 301 6 300 2 127 4 350 4 262 3 209 1 77 2 357 2 79 3 78 2 213 1 80 3 266 2 215 1 359 2 136 9 86 6 
139 1 178 5 1 1 220 1 180 1 115 2 271 1 116 1 292 2 4 2 120 5 93 6 71 2 230 2 35 1 206 1 301 3 300 2 127 2 350 2 349 1 262 1 239 1 193 1 240 1 357 2 78 2 283 1 107 1 136 8 363 1 337 2 86 5 21 5 112 1 
189 1 127 1 179 1 190 1 350 1 236 1 158 1 115 1 292 1 171 1 40 1 120 1 78 1 240 1 357 2 154 1 325 1 336 1 71 1 136 2 35 1 
127 1 350 1 115 1 209 1 103 1 120 1 71 1 230 1 136 1 21 1 
301 5 300 2 178 5 220 1 292 2 4 2 120 5 357 2 78 2 93 10 282 1 337 2 136 5 86 5 21 5 
230 1 262 1 21 1 35 1 112 1 240 1 
219 1 115 2 320 2 1 2 202 4 120 2 94 1 166 1 122 1 51 1 71 1 35 3 127 2 350 2 262 2 79 1 193 2 240 3 213 1 80 4 105 1 153 4 215 2 315 1 59 1 316 1 175 1 136 2 112 4 
80 1 153 1 9 1 190 1 320 1 325 1 336 1 321 1 202 1 
301 2 178 2 127 1 350 1 200 1 115 1 1 1 120 2 193 1 93 4 71 1 230 2 136 1 86 2 21 4 
217 1 244 1 123 1 
217 1 82 1 244 1 183 1 20 1 
217 1 244 1 123 1 
217 1 244 1 123 1 
217 1 214 1 244 1 
217 1 214 1 244 1 
217 1 214 1 244 1 
217 1 244 1 
29 1 167 1 
179 1 247 2 290 2 200 1 140 8 292 3 142 3 27 1 204 4 250 17 251 4 228 2 236 2 329 1 171 2 40 2 56 7 78 3 45 1 286 2 138 9 
236 1 200 1 329 1 140 2 292 1 171 1 40 1 56 2 204 2 78 1 250 5 45 1 96 1 138 3 
300 1 147 1 247 1 290 1 140 2 292 1 56 2 4 1 142 1 204 1 78 1 250 4 251 2 228 1 337 1 286 1 138 2 
300 1 139 2 349 1 271 1 292 1 140 4 56 2 4 1 142 1 204 1 78 1 250 7 173 1 337 1 138 3 
139 2 179 1 247 1 290 1 200 1 292 5 140 12 4 2 142 2 204 5 27 1 250 25 251 2 30 1 228 1 300 2 236 2 349 2 329 1 171 2 40 2 56 7 332 1 78 5 173 1 45 1 337 2 286 1 138 13 
250 1 139 1 140 1 
250 1 349 1 138 1 
300 1 147 1 247 1 290 1 140 3 292 1 56 3 4 1 142 1 78 1 204 2 250 6 251 2 282 1 228 1 337 1 286 1 138 3 
139 1 247 1 290 1 180 1 271 1 140 6 292 2 4 2 142 1 204 1 250 12 251 2 228 1 206 1 300 2 349 1 210 1 56 2 78 2 283 1 107 1 363 1 337 2 286 1 138 6 
236 1 292 1 140 3 171 1 40 1 56 2 142 1 78 1 204 1 250 6 138 3 
247 1 236 1 290 1 329 1 140 2 171 1 56 2 142 1 204 1 27 1 250 3 251 2 228 1 45 1 286 1 34 1 138 1 
247 1 179 1 290 1 236 2 140 5 292 2 171 2 40 1 210 1 56 5 142 2 204 3 78 2 250 10 251 2 228 1 286 1 138 5 
247 1 290 1 210 1 56 1 142 1 78 1 250 2 251 2 228 1 337 1 286 1 138 2 
300 1 247 1 290 1 140 2 292 1 56 2 210 1 4 1 142 1 204 1 78 1 250 4 251 2 228 1 337 1 286 1 138 2 
247 3 290 3 236 1 140 2 171 1 210 1 56 2 6 1 142 1 27 1 204 1 250 3 251 6 228 3 286 3 34 1 138 1 
23 1 139 3 179 1 247 4 290 4 200 1 271 1 140 15 292 5 6 1 4 2 142 4 66 1 27 1 204 5 250 31 251 8 145 1 228 4 300 2 147 1 236 2 349 3 329 1 171 2 40 2 210 1 56 9 78 5 45 1 337 2 286 4 138 16 
139 1 179 1 247 1 290 1 200 1 271 1 292 3 140 7 142 1 204 4 250 15 251 2 228 1 206 1 349 1 236 2 329 1 171 2 40 2 210 1 56 5 78 3 45 1 286 1 138 8 
139 2 179 1 247 2 290 2 200 1 271 1 292 3 140 8 4 1 142 2 204 4 250 18 251 4 228 2 206 1 147 1 236 2 349 1 329 1 171 2 40 2 210 1 56 6 78 4 173 1 45 1 337 1 286 2 138 10 
139 1 179 1 247 3 290 3 200 1 180 1 271 1 140 13 292 5 4 2 142 2 204 5 27 1 250 26 251 6 228 3 206 1 300 2 147 1 236 2 349 1 329 1 171 2 40 2 210 1 56 7 78 5 283 1 107 1 45 1 363 1 337 2 286 3 138 13 
139 1 179 1 247 3 290 3 200 1 180 1 271 1 140 10 292 4 4 2 142 4 27 1 204 5 250 24 251 6 228 3 206 1 300 1 147 1 236 2 349 1 329 1 171 2 40 2 210 1 56 9 78 5 283 1 107 1 45 1 363 1 337 2 286 3 138 14 
139 1 179 1 247 1 290 1 200 1 271 1 292 3 140 7 142 1 204 4 250 15 251 2 228 1 206 1 349 1 236 2 329 1 171 2 40 2 210 1 56 5 78 3 45 1 286 1 138 8 
139 1 247 1 290 1 180 1 271 1 140 6 292 2 4 2 142 1 204 1 250 12 251 2 228 1 206 1 300 2 349 1 210 1 56 2 78 2 283 1 107 1 363 1 337 2 286 1 138 6 
139 1 179 1 247 4 290 4 200 1 180 1 271 1 140 11 292 4 4 2 142 2 204 5 27 2 250 25 251 8 228 4 206 1 300 1 147 1 236 2 349 1 329 1 171 2 40 2 210 1 56 7 78 5 283 1 107 1 45 1 363 1 337 2 286 4 138 14 
139 1 247 4 290 4 180 1 271 1 140 7 292 2 6 1 4 3 142 3 204 3 27 2 250 16 251 8 228 4 206 1 300 2 349 1 210 1 56 6 78 3 283 1 107 1 363 1 337 3 286 4 138 9 
236 3 329 2 140 4 292 1 171 3 40 1 56 6 142 3 204 3 78 1 250 7 45 1 138 3 
139 1 179 1 247 4 290 4 200 1 180 1 271 1 140 11 292 4 6 1 4 2 142 2 204 5 27 2 250 25 251 8 228 4 206 1 300 1 236 2 349 1 329 1 171 2 40 2 210 1 56 7 78 5 283 1 107 1 45 1 363 1 337 2 286 4 138 14 
221 1 39 1 231 1 232 1 338 1 57 1 324 1 
157 1 221 1 263 1 39 1 324 1 57 1 227 1 72 1 232 1 231 1 124 1 338 1 
80 1 94 1 153 1 122 1 320 1 59 1 316 1 175 1 202 1 96 1 79 1 
80 1 94 1 153 1 122 1 320 1 59 1 128 1 325 1 201 1 202 1 79 1 265 1 241 1 
128 1 201 1 202 1 241 1 265 1 79 1 80 1 153 1 94 1 122 1 215 1 325 1 59 1 
201 1 202 1 67 1 241 1 265 1 79 1 80 1 153 1 94 1 122 1 215 1 325 1 59 1 
156 1 320 1 277 1 15 1 201 1 331 1 202 3 104 1 130 1 79 1 240 2 80 3 266 1 94 1 153 3 215 1 122 4 359 1 230 1 59 1 21 1 35 2 112 1 
156 1 320 1 15 1 201 1 202 3 104 1 130 1 79 1 240 2 80 3 266 1 94 1 153 3 215 1 122 4 359 1 230 1 59 1 21 1 35 2 112 1 113 1 
80 1 94 1 153 1 289 1 59 1 202 1 
218 1 289 1 320 2 201 1 47 1 202 7 264 1 293 1 5 1 249 1 226 1 280 1 79 2 80 6 153 7 94 3 122 3 255 1 59 2 187 1 298 1 
325 1 241 1 
320 1 115 2 24 1 202 1 272 1 120 1 122 2 230 1 71 2 35 3 127 2 350 2 276 1 15 1 262 1 209 1 103 1 77 1 104 1 240 3 213 1 80 1 266 1 153 1 136 1 21 1 112 2 113 1 
218 1 289 1 201 1 202 2 89 1 79 1 266 1 80 2 153 2 94 2 122 2 59 1 187 1 
304 1 320 1 202 4 130 1 79 1 80 4 94 1 153 4 122 1 316 1 59 1 175 1 187 1 
201 1 202 2 264 1 161 1 280 1 79 1 311 1 80 2 153 2 94 2 215 1 122 1 59 1 216 1 
80 1 94 1 153 1 320 1 59 1 223 1 202 1 347 1 62 1 288 1 
80 2 94 1 153 2 122 1 313 1 59 1 47 1 202 2 187 1 226 1 79 1 
304 1 320 1 202 5 47 1 5 1 79 2 80 4 153 5 94 2 215 1 122 3 316 1 59 2 175 1 187 1 298 1 
245 1 304 1 320 1 202 5 47 1 79 2 80 4 153 5 94 2 215 1 122 3 316 1 59 2 175 1 187 1 298 1 
80 1 94 1 153 1 122 1 320 1 59 1 325 1 201 1 202 1 67 1 79 1 265 1 241 1 
218 1 201 1 202 1 264 1 293 1 280 1 79 1 80 1 153 1 94 2 215 1 122 1 59 1 
278 1 307 1 309 1 324 1 57 1 165 1 231 1 198 1 97 1 
63 1 165 1 182 1 
165 1 278 1 198 1 199 1 
63 1 165 1 276 1 278 1 182 1 198 1 35 1 364 1 199 1 240 1 
185 1 96 1 355 1 73 1 
185 1 148 1 260 1 60 1 355 1 73 1 318 1 
50 1 148 1 333 1 
148 3 208 1 260 1 150 1 355 1 296 1 185 1 274 2 60 1 339 1 318 3 73 1 
185 1 252 1 148 2 260 1 60 1 355 1 365 1 73 1 318 2 
0 1 194 1 148 1 341 1 260 1 150 1 60 1 62 1 288 1 355 1 318 1 
148 1 260 1 150 1 60 1 355 1 73 1 318 1 
185 1 148 1 260 1 150 1 60 1 73 2 318 1 
148 2 260 2 38 1 150 1 25 1 355 1 256 1 60 2 73 1 318 2 
0 1 148 3 246 1 260 1 150 1 355 2 310 1 18 1 185 1 252 2 60 1 73 1 318 3 
148 2 260 1 341 1 150 1 223 1 355 1 185 1 252 1 83 1 285 1 60 1 288 2 62 1 73 1 318 2 
0 1 148 4 260 2 150 1 172 1 355 2 18 1 185 1 252 2 60 2 365 1 73 1 318 4 
185 1 148 1 260 1 150 1 60 1 355 1 73 1 318 1 
0 1 148 4 208 1 260 1 355 3 18 1 296 1 185 2 252 2 274 1 155 1 60 1 73 2 318 4 
148 2 260 1 150 1 355 1 252 1 185 1 360 1 85 1 297 1 60 1 73 1 318 2 
148 3 208 2 260 1 150 1 355 1 296 1 185 1 274 2 60 1 318 3 12 1 73 1 
84 1 177 2 225 1 355 2 
148 1 260 1 150 1 76 1 60 1 318 1 
185 1 252 1 246 1 148 2 260 1 150 1 60 1 355 1 73 1 318 2 
100 1 
185 1 148 1 260 1 150 1 60 1 355 1 73 1 318 1 
148 3 246 1 260 1 150 1 355 1 252 1 185 1 274 1 60 1 318 3 73 1 
0 1 18 1 155 1 355 1 
355 1 73 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (97,357) (97,357) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (97,357) (97,357) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (97,357) (97,357) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (97,357) (97,357) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 265 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 265 4 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 265 4 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (131,198,376) (189,277,350) (189,277,350) (189,277,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (131,198,376) (189,277,350) (189,277,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (131,198,376) (189,277,350) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (131,198,376) (189,277,350) (189,277,350) (189,277,350) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (131,198,376) (131,198,376) (131,198,376) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (131,198,376) (131,198,376) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (131,198,376) (131,198,376) (131,198,376) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 39 43 (98,267) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
357 1 334 1 97 1 311 1 117 1 228 1 21 1 158 1 329 1 243 1 199 1 56 1 
357 1 329 1 158 1 334 1 97 1 243 1 199 1 311 1 56 1 117 1 228 1 21 1 
357 1 329 1 158 1 334 1 97 1 243 1 199 1 311 1 56 1 117 1 228 1 21 1 
357 1 329 1 158 1 334 1 97 1 243 1 199 1 311 1 56 1 117 1 228 1 21 1 
33 1 1 1 334 1 27 1 243 1 199 2 311 1 297 1 265 1 117 1 268 1 228 2 
33 1 311 1 117 1 266 1 99 1 228 2 326 1 158 1 243 1 199 2 272 1 173 1 56 1 174 1 274 1 343 1 
33 2 321 1 311 1 297 1 117 2 228 3 268 1 327 1 243 2 199 3 56 1 174 1 274 1 
33 3 321 2 1 1 334 1 377 1 311 1 297 3 265 1 117 2 4 1 228 7 268 5 238 1 327 1 60 1 27 1 243 2 199 7 56 1 
33 3 321 2 1 1 334 1 377 1 311 1 297 3 265 1 117 2 4 1 228 7 268 5 238 1 327 1 60 1 27 1 243 2 199 7 56 1 
239 1 177 1 217 1 
22 1 177 1 150 2 
370 2 345 2 135 1 220 2 245 2 84 2 11 2 31 1 
153 1 176 2 309 1 279 1 2 1 335 1 280 1 361 1 19 2 100 2 23 1 160 1 317 1 135 1 318 1 320 1 31 1 209 2 370 2 114 1 164 1 344 1 345 2 82 1 296 2 84 2 11 2 299 1 301 1 54 1 303 1 172 1 55 1 124 1 220 3 245 3 382 1 
370 1 103 1 345 1 165 1 135 1 220 1 245 1 84 1 11 1 175 1 
177 1 222 1 34 1 141 1 84 1 347 1 86 1 103 1 270 1 217 1 245 1 220 1 231 1 260 1 
177 1 370 1 345 1 34 2 141 1 11 1 84 1 347 1 86 1 103 1 270 2 217 1 245 1 220 1 231 1 
270 1 139 1 34 1 346 1 108 1 
177 1 349 1 270 2 217 1 351 1 34 2 346 1 108 1 
270 1 34 1 108 1 
370 1 345 1 165 1 34 1 346 1 11 1 84 1 103 1 270 1 203 1 135 1 245 1 220 1 175 1 
177 1 
177 1 349 1 270 2 217 1 34 2 346 1 10 1 108 1 
177 1 191 1 34 5 346 2 52 1 194 1 254 1 340 1 102 1 349 1 270 5 67 1 215 2 217 1 257 2 244 1 161 2 258 1 108 2 
239 1 31 1 
370 1 371 1 345 1 84 2 11 1 285 1 245 2 220 2 31 2 
163 1 360 1 325 1 
176 1 164 1 309 1 82 1 2 1 361 1 100 1 301 1 302 1 23 1 124 1 220 1 245 1 318 1 31 1 209 1 
222 1 370 1 73 2 345 4 375 1 336 1 58 1 11 4 84 5 285 1 28 1 245 5 220 5 31 1 
137 1 103 1 345 2 165 1 220 2 245 2 84 2 11 2 
163 1 176 1 164 1 73 1 309 1 345 1 82 1 2 1 361 1 336 1 11 1 84 1 100 1 301 1 23 1 124 1 245 2 220 2 318 1 209 1 
370 1 73 1 345 3 220 3 245 3 84 3 11 3 31 1 
103 1 345 1 165 1 220 1 245 1 84 1 11 1 
370 1 103 1 371 1 345 1 220 1 245 1 84 1 11 1 285 1 
153 1 176 1 73 1 309 1 279 1 2 1 335 1 361 1 336 1 19 1 285 1 100 1 103 1 23 1 104 1 317 1 135 1 318 1 231 1 320 1 31 1 209 1 370 2 164 1 344 1 345 3 82 1 296 2 34 1 141 1 84 3 11 3 298 1 347 1 86 1 299 1 301 1 270 1 303 1 172 1 55 1 124 1 220 4 245 4 
222 1 73 1 345 1 375 1 220 2 245 2 84 2 11 1 31 1 
370 1 177 1 73 2 345 3 34 1 141 1 336 1 11 3 84 3 285 1 347 1 86 1 103 1 270 1 104 1 159 1 245 3 220 3 231 1 
163 1 370 1 73 1 345 2 11 2 84 2 285 1 325 1 245 2 220 2 
176 1 164 1 309 1 82 1 2 1 361 1 100 1 301 1 23 1 124 1 220 1 245 1 318 1 31 1 209 1 
176 1 164 1 309 1 82 1 361 1 98 1 100 1 301 1 23 1 121 1 124 1 220 1 245 1 31 1 209 1 
93 1 38 1 279 1 76 1 360 2 335 1 19 4 364 1 366 1 320 1 136 1 163 2 211 1 344 1 294 1 295 1 296 2 264 1 325 2 85 1 299 1 55 1 172 2 382 2 
103 1 137 1 345 1 231 1 220 1 245 1 84 1 11 1 
304 1 292 1 
304 1 292 1 
79 1 77 1 
79 1 77 1 
79 1 77 1 
162 1 304 1 292 1 
162 1 304 1 292 1 
304 1 193 1 292 1 
314 1 96 1 79 1 304 2 77 1 292 2 
162 1 304 1 292 1 
42 1 304 1 292 1 
42 1 304 1 292 1 
42 1 304 1 292 1 
180 1 130 1 202 1 132 1 204 1 26 1 259 1 31 1 292 1 65 1 345 2 34 1 193 1 11 2 84 2 118 1 170 1 270 1 123 1 304 1 200 1 245 2 220 2 71 1 
177 1 373 1 18 1 96 1 34 2 130 2 118 2 119 1 170 1 202 2 328 1 270 2 123 2 304 2 242 1 218 2 352 1 259 3 292 2 
334 1 
326 1 266 1 343 1 
326 1 147 1 334 2 266 1 
326 1 221 1 48 1 332 1 190 1 334 1 266 1 
326 1 221 2 332 1 190 1 334 1 266 1 
177 2 76 1 155 1 364 1 22 1 341 2 5 1 132 1 342 1 26 1 366 1 257 1 161 1 258 1 108 1 369 1 211 1 191 2 34 5 346 4 194 3 300 2 15 1 349 1 270 5 215 1 195 1 196 1 217 1 200 1 150 3 69 2 
177 5 76 3 3 1 254 1 364 3 286 1 22 3 341 6 315 1 342 2 26 4 366 3 257 2 161 2 258 1 108 6 234 1 369 3 32 1 211 3 139 5 191 6 34 9 346 7 145 1 194 8 270 9 349 1 195 1 215 2 196 2 217 1 150 9 69 6 151 5 
177 3 155 1 76 1 254 1 364 1 22 2 341 2 5 1 342 1 26 1 257 1 366 1 161 1 369 1 211 1 34 3 191 2 346 2 194 3 300 1 270 3 215 1 196 1 217 1 150 4 69 2 
177 4 155 1 76 2 254 1 364 2 286 1 22 3 341 4 5 1 315 1 342 1 26 2 257 1 366 2 161 1 369 2 32 1 211 2 34 4 191 4 346 3 194 5 300 2 270 4 215 1 196 1 217 1 150 7 69 4 
239 1 301 1 9 1 
301 1 271 1 
51 1 
301 1 23 1 309 1 
301 1 305 1 
301 1 23 1 
301 3 23 1 309 1 9 2 129 1 337 1 
330 1 113 1 75 1 167 2 19 7 12 1 364 1 85 2 365 1 148 1 172 3 366 1 289 1 246 1 80 1 382 4 136 3 
330 1 113 1 75 1 167 2 19 7 12 1 364 1 85 2 365 1 148 1 172 3 366 1 289 1 246 1 80 1 382 4 136 3 
330 1 113 1 75 1 182 1 167 2 19 7 12 1 364 1 85 2 365 1 148 1 172 3 366 1 289 1 246 1 80 1 382 4 136 3 
330 5 75 2 279 1 76 3 19 31 364 4 365 1 25 1 289 1 366 4 80 2 320 1 208 1 136 10 293 3 113 2 369 3 344 1 211 3 296 2 35 1 167 3 12 1 85 5 378 1 14 1 379 1 148 2 122 4 172 15 55 1 219 1 246 1 382 16 
330 1 75 1 279 2 362 1 19 9 364 1 365 1 366 1 289 1 320 2 80 1 136 4 113 1 344 2 296 4 167 2 236 1 85 3 378 1 148 1 55 2 172 4 382 5 246 1 
176 1 164 1 8 1 249 1 82 1 334 1 376 1 311 1 266 1 117 1 144 1 228 1 100 1 156 1 326 1 147 1 350 1 186 1 134 1 243 1 199 1 56 1 189 1 277 1 209 1 
176 1 249 1 334 1 339 1 228 2 156 1 100 1 133 1 134 1 186 1 209 1 164 1 82 1 376 1 144 1 117 1 266 1 348 1 268 1 326 1 147 1 350 1 243 1 199 2 56 1 277 1 
176 1 164 1 82 1 334 1 376 1 266 1 144 1 268 1 228 1 348 1 100 1 156 1 326 1 133 1 147 1 350 1 186 1 134 1 199 1 56 1 209 1 
308 1 176 1 112 1 164 1 82 1 339 1 117 1 144 2 228 1 100 1 184 1 156 2 301 1 23 1 44 1 134 2 243 1 124 1 199 1 273 1 56 2 126 1 209 1 
176 1 164 1 249 1 82 1 334 1 376 1 311 1 266 1 117 1 144 1 228 1 348 1 100 1 156 1 326 1 147 1 350 1 186 1 134 1 243 1 199 1 56 1 189 1 277 1 209 1 
61 1 
176 2 222 1 177 5 41 1 224 1 284 2 338 1 227 2 342 1 45 2 188 1 231 1 81 2 140 1 82 1 191 2 141 1 84 1 194 2 347 1 86 1 301 1 349 3 150 2 245 1 92 1 154 1 100 2 157 4 22 2 313 1 103 1 23 1 62 1 256 1 257 1 161 1 258 1 108 6 260 1 209 2 109 2 112 1 164 1 34 5 324 1 169 2 269 1 270 5 215 1 171 2 217 4 124 2 273 1 220 1 
92 1 222 1 177 2 338 1 157 2 103 1 256 1 188 1 231 1 260 1 108 2 140 1 34 3 141 1 10 1 84 1 347 1 86 1 349 1 270 3 171 1 217 2 220 1 245 1 
92 1 222 1 177 3 338 1 227 1 157 3 103 1 256 1 188 1 231 1 108 1 260 1 140 1 34 3 141 1 84 1 10 1 347 1 86 1 270 3 349 1 217 3 220 1 245 1 
92 1 222 1 177 3 284 1 338 1 227 1 157 3 103 1 256 1 188 1 231 1 260 1 108 2 140 1 34 3 141 1 10 1 84 1 347 1 86 1 349 1 270 3 171 1 217 3 220 1 245 1 
92 1 72 1 222 1 177 8 358 1 278 1 41 1 284 4 338 1 227 4 157 6 22 2 313 1 103 1 45 2 256 1 257 1 161 1 188 1 258 1 231 1 260 1 108 7 109 2 110 1 81 2 140 1 191 1 34 5 141 1 84 1 10 1 169 2 194 1 347 1 86 1 349 3 270 5 215 1 171 4 217 8 245 1 220 1 37 1 
177 6 222 1 41 1 284 2 338 1 227 2 45 2 188 1 231 1 81 2 140 1 191 1 141 1 84 1 347 1 194 1 86 1 349 2 245 1 150 2 92 1 154 1 157 4 22 2 313 1 103 1 256 1 257 1 161 1 258 1 260 1 108 4 109 2 34 4 169 2 270 4 215 1 171 2 217 5 220 1 
92 1 72 1 222 1 177 5 358 1 41 1 284 2 338 1 227 2 157 4 22 2 313 1 103 1 45 2 256 1 257 1 161 1 188 1 231 1 258 1 108 4 260 1 109 2 81 2 140 1 191 1 34 4 141 1 84 1 169 2 194 1 347 1 86 1 349 2 270 4 215 1 171 2 217 5 220 1 245 1 37 1 
92 1 72 1 222 1 177 5 358 1 41 1 284 2 338 1 227 2 157 4 22 2 313 1 103 1 45 2 256 1 257 1 161 1 188 1 231 1 258 1 108 4 260 1 109 2 81 2 140 1 191 1 34 4 141 1 84 1 169 2 194 1 347 1 86 1 349 2 270 4 215 1 171 2 217 5 220 1 245 1 37 1 
92 1 0 1 72 1 222 1 177 5 250 2 41 1 284 2 338 1 363 1 227 2 157 4 103 1 106 2 45 2 256 1 257 1 161 1 188 1 231 1 258 1 108 4 260 1 140 1 191 1 34 4 141 1 84 1 169 2 194 1 168 1 347 1 86 1 349 2 270 4 215 1 171 2 217 5 150 2 220 1 245 1 
92 1 72 1 222 1 177 6 358 1 41 1 284 3 338 1 227 3 157 5 22 2 313 1 103 1 45 2 256 1 257 1 161 1 188 1 258 1 231 1 260 1 108 5 109 2 110 1 81 2 140 1 191 1 34 4 141 1 84 1 169 2 194 1 347 1 86 1 349 2 270 4 215 1 171 3 217 6 220 1 245 1 37 1 
92 1 72 1 222 1 177 6 358 1 41 1 284 3 338 1 227 3 157 5 22 2 313 1 103 1 45 2 256 1 257 1 161 1 188 1 258 1 231 1 260 1 108 5 109 2 110 1 81 2 140 1 191 1 34 4 141 1 84 1 169 2 194 1 347 1 86 1 349 2 270 4 215 1 171 3 217 6 220 1 245 1 37 1 
92 1 222 1 177 5 154 1 250 2 41 1 284 2 338 1 227 2 157 4 103 1 106 2 45 2 256 1 257 1 188 1 161 1 258 1 231 1 108 4 260 1 140 1 191 1 34 4 141 1 84 1 169 2 194 1 168 1 347 1 86 1 349 2 270 4 215 1 171 2 217 5 150 2 245 1 220 1 
38 1 75 1 279 1 360 1 335 1 19 6 364 1 365 1 289 1 366 1 320 1 80 1 136 2 31 2 163 1 344 1 296 2 167 1 325 1 85 2 239 1 299 1 55 1 172 3 246 1 382 3 
330 1 248 1 279 2 76 2 223 1 360 11 335 1 19 14 364 1 6 1 160 1 317 1 366 2 30 1 320 2 31 1 136 2 163 11 293 3 369 2 344 2 211 1 296 4 325 4 85 1 299 2 120 1 379 1 122 3 172 6 55 2 219 1 382 8 
176 1 247 1 73 1 309 1 359 1 279 1 2 1 361 1 335 1 336 1 19 2 100 1 23 1 160 1 317 1 318 1 30 1 320 1 31 1 209 1 164 1 345 1 344 1 82 1 296 2 84 1 11 1 325 1 237 1 299 1 301 1 302 1 55 1 172 1 124 1 220 2 245 2 382 1 
176 3 330 4 73 1 75 1 279 3 76 2 2 2 336 1 335 3 183 2 289 1 80 1 232 1 136 8 344 3 345 1 82 2 296 6 11 1 84 1 348 1 85 4 299 3 301 2 16 1 303 2 17 1 55 3 245 3 246 1 355 2 309 2 252 2 360 7 361 2 19 20 364 3 100 3 365 1 23 2 160 1 317 1 366 3 30 1 318 2 320 3 31 2 209 3 368 2 163 7 369 2 164 2 211 2 167 1 325 7 172 10 124 1 220 3 382 10 
38 1 176 7 128 1 73 1 279 2 335 2 280 2 283 1 19 2 100 8 287 1 23 2 288 1 160 1 317 1 320 2 209 8 112 1 262 1 8 1 164 2 345 1 344 2 82 2 83 1 166 1 296 4 84 1 11 1 348 1 299 2 301 3 55 2 172 1 124 2 273 1 220 1 245 1 382 1 
279 1 76 1 360 1 335 1 19 3 285 1 364 1 366 1 30 1 320 1 261 1 136 1 163 1 370 1 369 1 345 1 344 1 211 1 296 2 11 1 84 1 325 1 85 1 299 1 55 1 172 2 245 1 220 1 382 1 
163 1 38 1 330 1 344 1 279 1 76 1 360 1 296 2 335 1 264 1 19 2 325 1 299 1 55 1 366 1 320 1 382 2 136 1 
163 1 38 1 93 1 344 1 211 1 279 1 360 1 296 2 335 1 19 2 325 1 85 1 364 1 299 1 55 1 172 2 320 1 136 1 
38 1 330 1 76 1 279 1 360 2 335 1 19 4 364 1 366 1 320 1 136 2 163 2 369 1 344 1 211 1 296 2 325 2 85 1 299 1 55 1 172 2 382 2 
163 1 330 1 344 1 166 1 279 1 76 1 360 1 296 2 335 1 264 1 19 2 325 1 299 1 55 1 366 1 320 1 382 2 136 1 
163 1 93 1 344 1 211 1 166 1 279 1 360 1 296 2 335 1 19 2 325 1 85 1 364 1 299 1 55 1 172 2 320 1 136 1 
330 1 76 1 279 1 360 2 335 1 19 4 364 1 366 1 320 1 136 2 163 2 369 1 344 1 211 1 166 1 296 2 325 2 85 1 299 1 55 1 172 2 382 2 
163 2 330 1 369 1 211 1 344 1 279 1 76 1 360 2 296 2 335 1 19 4 325 2 85 1 364 1 299 1 172 2 55 1 366 1 320 1 382 2 136 2 
176 1 309 1 279 1 2 1 361 1 335 1 19 2 100 1 23 1 160 1 317 1 318 1 320 1 31 1 209 1 164 1 344 1 82 1 296 2 299 1 301 1 303 1 55 1 172 1 124 1 245 1 220 1 382 1 
176 1 309 1 279 1 361 1 335 1 19 2 98 1 100 1 23 1 160 1 317 1 320 1 31 1 209 1 164 1 344 1 82 1 296 2 299 1 301 1 121 1 241 1 55 1 172 1 124 1 245 1 220 1 382 1 
330 1 76 1 279 1 360 2 335 1 19 4 364 1 366 1 30 1 320 1 136 2 163 2 369 1 344 1 211 1 296 2 325 2 85 1 299 1 55 1 172 2 382 2 
355 1 176 1 330 1 309 1 76 1 279 1 360 2 2 1 361 1 335 1 19 4 364 1 100 1 23 1 366 1 318 1 320 1 136 2 209 1 163 2 369 1 164 1 8 1 211 1 344 1 82 1 296 2 325 2 85 1 299 1 301 1 303 1 172 2 55 1 245 1 220 1 382 2 
330 1 279 1 76 1 360 1 335 1 19 3 285 1 364 1 366 1 30 1 320 1 136 1 163 1 370 1 369 1 211 1 345 1 344 1 296 2 11 1 84 1 325 1 299 1 13 1 172 1 55 1 245 1 220 1 382 2 
330 3 310 1 279 2 76 3 281 1 362 1 19 19 364 3 366 3 291 1 320 2 136 6 293 1 369 3 49 1 344 2 211 3 322 2 296 4 85 3 379 1 122 2 55 2 172 10 219 1 68 2 70 1 152 1 382 9 307 1 
330 2 178 1 179 1 181 1 310 2 279 3 76 3 281 1 362 1 19 26 364 2 366 3 320 3 136 4 64 1 293 2 369 3 49 2 344 3 211 2 322 4 296 6 323 1 378 2 85 2 146 1 122 2 172 12 55 3 219 2 68 1 70 1 152 1 382 14 
330 4 178 1 75 1 179 1 181 1 310 1 279 3 76 4 281 1 362 1 19 41 364 5 365 1 289 1 366 5 291 1 80 1 320 3 64 1 136 8 293 3 369 4 49 2 344 3 211 4 322 4 296 6 167 1 323 1 378 1 85 4 146 1 379 1 122 4 381 1 55 3 172 21 219 3 68 1 70 1 152 1 246 1 382 20 
330 3 178 1 75 1 179 1 181 1 310 1 279 4 76 4 281 1 362 1 19 38 364 4 365 1 289 1 366 5 291 1 80 1 320 4 64 1 136 7 293 3 369 4 49 2 344 4 211 3 322 4 296 8 167 1 323 1 378 2 85 4 146 1 379 1 122 4 381 1 55 4 172 18 219 3 68 1 70 1 152 1 246 1 382 20 
330 7 178 1 75 1 179 1 181 1 310 1 279 2 76 7 223 2 281 1 362 1 19 52 364 8 365 1 289 1 366 8 80 1 320 2 64 1 136 14 293 4 369 7 49 1 344 2 211 7 322 4 296 4 167 1 323 1 378 1 85 7 146 1 379 2 122 4 55 2 172 25 219 2 68 1 70 1 152 1 246 1 382 27 
202 1 356 1 373 1 96 1 123 1 304 1 130 1 352 1 118 1 292 1 
193 1 71 1 
202 1 216 1 123 1 304 1 130 1 276 1 306 1 118 1 292 1 
162 1 333 1 
42 1 314 1 87 1 
177 1 373 1 18 1 96 1 34 1 130 1 118 1 119 1 170 1 202 1 270 1 123 1 304 1 242 1 218 1 352 1 259 2 292 1 
177 1 373 1 18 1 96 1 34 1 130 1 118 1 119 1 170 1 202 1 270 1 123 1 304 1 242 1 218 1 352 1 259 2 292 1 
177 1 373 1 18 1 96 1 34 1 130 1 118 1 119 1 170 1 202 1 270 1 123 1 304 1 242 1 218 1 352 1 259 2 292 1 
162 1 314 1 333 1 
162 1 314 1 333 1 
42 1 87 1 
42 1 314 1 87 1 
65 1 204 1 
40 1 180 1 130 1 202 1 132 1 204 1 26 1 259 1 31 1 292 1 65 1 345 2 34 1 346 1 193 1 11 2 84 2 118 1 270 1 123 1 218 1 242 1 304 1 200 1 220 2 245 2 71 1 
176 2 128 1 279 1 335 1 280 2 19 2 78 1 100 2 312 1 23 1 160 1 317 1 367 1 30 1 320 1 209 2 164 1 344 1 82 1 83 1 212 1 296 2 84 2 299 1 301 1 197 1 55 1 172 1 220 2 245 2 382 1 
176 2 164 1 8 1 249 1 82 1 372 1 334 1 376 1 131 1 266 1 348 1 100 2 326 1 147 1 134 1 186 1 198 1 209 2 
176 1 164 1 249 1 235 1 82 1 334 1 376 1 131 1 266 1 348 1 100 1 326 1 147 1 134 1 186 1 209 1 
176 1 308 1 112 1 164 1 82 1 372 1 100 1 301 1 23 1 134 1 89 1 124 1 273 1 209 1 
176 1 164 1 249 1 372 1 82 1 334 1 376 1 131 1 266 1 348 1 100 1 326 1 147 1 134 1 186 1 198 1 209 1 
230 1 
102 1 239 1 177 1 67 1 217 1 191 1 194 1 
177 2 22 1 313 1 257 1 161 1 258 1 108 1 109 1 81 1 191 1 34 1 194 1 349 1 270 1 215 1 217 1 150 1 
176 3 39 2 177 8 76 2 337 1 229 1 341 6 342 2 46 1 47 2 8 1 138 2 9 2 82 3 191 8 141 2 142 2 194 9 240 2 301 10 349 3 305 2 150 12 57 1 309 3 20 2 59 2 100 3 364 2 102 1 22 6 23 3 62 1 105 2 29 1 257 4 366 2 161 4 258 4 108 5 209 3 368 2 369 2 164 4 211 2 34 5 270 5 67 1 271 3 215 4 217 2 124 1 275 1 69 6 
177 5 178 1 179 1 181 1 76 2 20 2 364 2 341 5 22 3 62 1 342 1 290 1 257 2 366 2 161 2 258 2 108 1 64 1 293 1 369 2 211 2 34 1 191 5 194 8 240 1 146 1 270 1 349 1 380 1 215 2 122 1 217 2 219 1 150 6 69 5 
75 1 358 1 20 2 364 1 103 1 203 1 135 1 257 1 366 2 161 1 258 1 80 1 370 1 345 1 165 1 34 1 191 2 143 1 11 1 84 1 194 2 240 1 270 1 215 1 220 1 245 1 246 1 175 1 
177 1 191 1 194 1 102 1 67 1 215 1 217 1 257 1 161 1 258 1 
369 2 177 5 211 2 76 2 191 5 20 2 194 5 364 2 240 1 341 5 22 5 366 2 150 10 69 5 368 1 
177 1 270 1 349 1 217 1 34 1 108 1 
176 4 254 1 100 4 23 1 342 2 62 2 29 2 207 1 257 2 46 1 161 2 258 1 108 4 209 4 112 1 164 1 82 1 191 2 34 3 116 1 324 1 194 2 269 1 301 1 349 2 270 3 215 2 124 2 273 1 
176 1 153 1 309 1 279 1 2 1 361 1 335 1 19 1 100 1 23 1 317 1 135 1 318 1 320 1 31 1 209 1 370 2 164 1 344 1 345 2 82 1 296 2 84 2 11 2 299 1 301 1 303 1 172 1 55 1 124 1 220 3 245 3 
177 4 191 2 167 1 194 1 22 2 341 2 215 1 342 1 62 1 217 2 257 1 161 1 150 4 258 1 69 2 
213 1 123 1 130 1 
213 1 123 1 130 1 
204 1 123 1 130 1 352 1 53 1 
213 1 123 1 130 1 
63 1 123 1 130 1 
63 1 123 1 130 1 
63 1 123 1 130 1 
123 1 130 1 
304 1 292 1 
330 1 344 2 75 1 279 2 296 4 167 1 19 8 364 1 85 2 378 1 365 1 172 4 55 2 366 1 289 1 246 1 382 4 320 2 80 1 136 3 
75 1 167 1 19 6 85 2 364 1 239 1 365 1 172 3 289 1 366 1 80 1 246 1 382 3 136 2 
369 1 330 1 211 1 344 1 279 1 76 1 296 2 19 4 85 1 364 1 172 2 149 1 55 1 366 1 320 1 382 2 136 2 
293 1 369 1 330 1 211 1 76 1 19 7 85 1 364 1 379 1 122 2 172 4 219 1 366 1 382 3 136 2 
330 4 248 1 75 2 76 2 279 2 223 1 19 23 364 3 365 1 289 1 366 3 80 2 320 2 136 9 369 2 293 2 211 2 344 2 296 4 192 1 167 1 85 5 378 2 379 1 122 2 172 12 55 2 246 1 382 11 
122 1 172 1 19 1 
293 1 19 1 382 1 
369 1 330 1 344 1 211 1 279 1 76 1 296 2 19 6 364 1 85 2 55 1 149 1 172 3 366 1 320 1 382 3 136 3 368 1 
330 1 178 1 179 1 181 1 279 1 76 2 19 12 362 1 364 2 366 2 320 1 64 1 136 2 293 1 369 2 344 1 211 2 296 2 85 1 146 1 122 1 172 6 55 1 219 1 382 6 
330 1 75 1 19 6 364 1 85 1 172 3 366 1 246 1 382 3 80 1 136 2 
330 1 75 1 344 1 279 1 192 1 296 2 19 3 85 1 378 1 365 1 172 2 55 1 289 1 382 1 80 1 320 1 136 2 
330 2 344 1 75 2 279 1 296 2 362 1 143 1 19 10 85 3 364 2 55 1 172 5 366 2 320 1 80 2 382 5 246 1 136 5 
330 1 344 1 279 1 76 1 296 2 362 1 19 2 55 1 366 1 320 1 382 2 136 1 
369 1 330 1 211 1 344 1 279 1 76 1 296 2 362 1 19 4 85 1 364 1 172 2 55 1 366 1 320 1 382 2 136 2 
330 1 344 3 75 1 279 3 192 1 296 6 19 3 362 1 378 1 85 1 172 2 55 3 291 1 320 3 80 1 382 1 136 2 
330 5 75 3 279 5 76 3 362 1 19 34 364 5 365 1 289 1 366 5 291 1 80 3 208 1 320 5 136 12 293 3 369 3 344 5 211 3 192 1 35 1 296 10 167 1 378 2 85 7 14 1 379 1 122 4 172 18 149 1 55 5 219 1 246 2 382 16 
178 1 75 1 279 1 19 8 362 1 364 1 365 1 366 1 289 1 320 1 80 1 136 2 293 1 344 1 296 2 167 1 85 2 122 1 172 4 55 1 219 1 382 4 246 1 
330 1 178 1 75 1 279 2 76 1 19 11 362 1 364 1 365 1 289 1 366 2 80 1 320 2 136 3 293 1 369 1 344 2 296 4 167 1 85 2 379 1 122 2 172 5 55 2 149 1 219 1 246 1 382 6 
330 1 178 1 75 1 179 1 181 1 279 3 76 2 19 19 362 1 364 3 365 1 289 1 366 3 80 1 320 3 64 1 136 4 293 1 369 2 344 3 211 2 296 6 167 1 85 3 378 1 146 1 122 1 149 1 172 10 55 3 219 1 246 1 382 9 
330 2 178 1 75 1 179 1 181 1 279 3 76 2 19 17 362 1 364 2 365 1 289 1 366 3 80 1 320 3 64 1 136 5 293 1 369 2 344 3 211 1 296 6 167 1 378 1 85 3 146 1 122 1 149 1 172 7 55 3 219 1 246 1 382 10 
178 1 75 1 279 1 19 8 362 1 364 1 365 1 366 1 289 1 320 1 80 1 136 2 293 1 344 1 296 2 167 1 85 2 122 1 172 4 55 1 219 1 382 4 246 1 
330 1 178 1 179 1 181 1 279 1 76 2 19 12 362 1 364 2 366 2 320 1 64 1 136 2 293 1 369 2 344 1 211 2 296 2 85 1 146 1 122 1 172 6 55 1 219 1 382 6 
330 2 178 1 75 1 179 1 181 1 279 4 76 2 19 18 362 1 364 2 365 1 289 1 366 3 80 1 320 4 64 1 136 5 293 1 369 2 344 4 211 1 296 8 167 1 85 3 378 2 146 1 122 1 172 8 149 1 55 4 219 1 246 1 382 10 
330 3 178 1 179 1 181 1 279 4 76 3 19 16 362 1 364 2 366 3 291 1 320 4 64 1 136 6 293 1 369 3 344 4 211 2 296 8 85 3 378 2 146 1 122 1 172 7 55 4 219 1 382 9 
330 3 75 3 19 7 364 1 85 3 365 1 172 4 289 2 366 1 80 3 246 1 382 3 136 6 
330 1 178 1 75 1 179 1 181 1 279 4 76 2 19 18 362 1 364 2 365 1 289 1 366 3 291 1 80 1 320 4 64 1 136 4 293 1 369 2 344 4 211 1 296 8 167 1 85 3 378 2 146 1 122 1 172 8 55 4 219 1 246 1 382 10 
222 1 375 1 282 1 220 1 245 1 84 1 31 1 
127 1 222 1 331 1 375 1 282 1 84 1 185 1 7 1 245 1 220 1 319 1 31 1 
239 1 176 1 112 1 164 1 301 1 23 1 82 1 124 1 273 1 209 1 100 1 
176 1 164 1 73 1 309 1 345 1 82 1 2 1 361 1 11 1 84 1 100 1 301 1 23 1 124 1 245 2 220 2 31 1 209 1 
176 1 39 1 73 1 309 2 2 1 361 1 100 1 103 1 23 2 29 1 231 1 31 1 209 1 164 1 345 1 82 1 84 2 11 2 347 1 301 3 305 1 220 2 245 2 
176 2 39 1 73 1 309 2 361 1 98 1 100 2 103 1 23 2 29 1 231 1 31 1 209 2 164 1 345 1 82 1 374 1 84 2 11 2 347 1 301 3 305 1 220 2 245 2 
176 1 39 1 164 1 309 1 9 1 82 1 34 1 267 1 100 1 43 1 301 4 23 1 270 1 271 1 29 1 305 1 209 1 
176 3 177 1 39 1 164 1 309 1 9 1 82 1 374 1 34 2 141 1 142 1 100 3 301 4 23 1 270 2 271 1 217 1 124 1 29 1 305 1 108 1 209 3 
176 1 287 1 164 1 82 1 209 1 100 1 
176 6 262 1 128 1 8 1 164 3 309 1 94 1 82 2 280 1 283 1 337 1 348 1 100 7 287 1 301 3 23 2 288 1 124 2 107 1 209 7 354 1 
176 1 355 1 73 1 75 1 309 1 279 2 360 1 2 1 361 1 335 2 19 6 78 1 183 1 364 1 100 1 365 1 23 1 366 1 289 1 30 1 318 1 80 1 320 2 31 2 136 2 209 1 163 1 164 1 8 1 345 1 344 2 82 1 296 4 167 1 84 1 11 1 325 1 85 2 299 2 301 1 303 1 172 3 55 2 220 2 245 2 382 3 246 1 
176 1 177 1 100 1 102 1 105 1 257 2 46 1 161 2 258 2 108 2 209 1 47 1 138 1 9 1 191 1 34 3 141 1 346 1 142 1 194 1 301 2 270 3 349 1 67 1 215 2 271 1 217 1 124 1 
176 2 57 1 8 1 164 2 309 1 9 1 82 1 337 1 100 2 287 1 301 2 23 1 209 2 
176 4 112 1 164 1 8 1 82 1 374 1 226 1 100 4 301 1 23 1 124 1 273 1 209 4 
176 2 164 2 50 1 309 1 95 1 82 1 100 2 301 1 23 1 16 1 29 1 107 1 209 2 354 1 
326 1 176 1 164 1 82 1 186 1 124 1 266 1 343 1 209 1 100 1 
176 2 8 1 128 1 164 1 82 1 348 1 100 2 301 1 23 1 367 1 209 2 
176 4 112 1 8 1 128 1 164 2 262 1 82 2 283 1 226 1 100 5 301 3 23 2 29 1 124 1 273 1 209 5 
176 4 112 1 8 1 128 1 164 2 262 1 82 2 226 1 100 5 301 3 23 2 29 1 124 1 273 1 209 5 91 1 
176 1 164 1 73 1 309 1 345 1 82 1 361 1 11 1 84 1 98 1 100 1 301 1 23 1 124 1 245 2 220 2 31 1 209 1 
176 1 164 2 309 1 94 1 82 1 337 1 100 1 301 1 23 1 29 1 107 1 209 1 354 1 
312 1 201 1 214 1 197 1 212 1 125 1 220 1 245 1 84 1 
101 1 201 1 36 1 
201 1 214 1 205 1 125 1 31 1 
177 1 201 1 263 1 34 2 141 1 346 1 347 1 86 1 101 1 103 1 214 2 270 2 104 1 217 1 205 2 125 2 231 1 36 1 31 1 
239 1 33 1 174 1 274 1 
33 1 243 1 199 1 174 1 117 1 274 1 228 1 
56 1 228 1 156 1 
111 1 210 1 33 1 311 1 117 1 228 3 99 2 243 1 187 1 199 3 174 1 274 1 
33 1 1 1 243 1 199 2 174 1 117 1 274 1 268 1 228 2 
33 1 334 1 27 1 243 1 199 1 311 1 297 1 117 1 228 1 
33 1 243 1 199 1 311 1 117 1 274 1 228 1 
243 1 199 1 311 1 174 1 117 1 274 2 228 1 
33 1 311 1 117 2 228 2 66 1 24 1 243 2 199 2 274 1 90 1 
33 2 321 1 377 1 311 1 297 1 117 1 228 3 268 2 238 1 243 1 199 3 174 1 274 1 
326 1 147 1 88 1 334 1 243 1 199 1 311 1 117 1 266 1 228 1 
33 2 321 1 1 1 225 1 311 1 297 1 117 2 228 4 268 2 243 2 199 4 174 1 274 1 
33 1 243 1 199 1 311 1 174 1 117 1 274 1 228 1 
111 1 33 3 321 1 297 1 117 1 99 1 268 2 228 4 243 1 187 1 199 4 353 1 174 2 274 2 
33 1 60 1 243 1 206 1 199 2 311 1 174 1 117 1 274 1 268 1 228 2 233 1 
111 1 33 1 115 1 243 1 187 2 199 3 311 1 174 1 117 1 274 1 99 2 228 3 
33 2 316 1 253 2 255 1 
251 1 243 1 199 1 311 1 117 1 228 1 
33 1 243 1 199 2 311 1 174 1 117 1 274 1 268 1 228 2 238 1 
74 1 
33 1 243 1 199 1 311 1 174 1 117 1 274 1 228 1 
33 1 311 1 117 1 268 1 228 3 99 1 238 1 243 1 199 3 174 1 274 1 
33 1 321 1 353 1 297 1 
33 1 274 1 

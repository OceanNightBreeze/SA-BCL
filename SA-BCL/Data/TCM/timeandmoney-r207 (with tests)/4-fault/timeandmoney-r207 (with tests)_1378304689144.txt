#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 182 168 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 10 1 42 2 367 3 178 1 308 1 232 1 309 1 20 2 64 1 22 3 350 2 36 1 
255 1 256 1 307 1 258 2 308 3 232 4 309 1 261 2 80 1 172 1 237 2 81 2 64 1 36 2 243 1 10 1 42 2 151 1 367 9 178 6 156 1 20 5 276 1 320 1 22 9 350 2 24 1 353 1 
255 1 256 1 307 1 258 2 308 3 232 4 309 1 261 2 80 1 172 1 237 2 81 2 64 1 36 2 243 1 10 1 42 2 151 1 367 9 178 6 156 1 20 5 276 1 320 1 22 9 350 2 24 1 353 1 
255 1 256 1 307 1 258 2 308 4 232 5 309 1 261 2 80 1 172 1 237 2 81 2 64 1 36 2 243 1 10 1 42 2 151 1 367 10 178 7 156 1 20 6 276 1 320 1 22 10 350 2 24 1 353 1 
255 1 256 1 307 1 258 2 308 2 232 3 309 1 261 2 80 1 237 2 81 1 64 1 36 2 243 1 10 1 42 2 151 1 367 7 178 4 156 1 20 4 276 1 320 1 22 7 350 2 24 1 353 1 
255 1 243 1 10 1 42 1 367 4 178 3 258 1 308 1 232 2 261 1 172 1 20 3 237 1 81 2 64 1 22 4 350 1 353 1 
243 1 10 1 42 1 57 1 307 1 367 2 258 1 261 1 80 1 20 1 64 1 75 1 21 1 22 2 350 1 36 1 
255 1 258 1 232 4 308 3 309 1 261 1 237 1 172 1 81 2 64 1 36 1 243 1 10 1 42 2 367 9 178 7 318 1 15 1 156 1 20 5 320 1 22 9 350 2 353 1 
255 1 258 1 232 4 308 3 309 1 261 1 237 1 172 1 81 2 64 1 36 1 243 1 10 1 42 2 367 9 178 7 318 1 15 1 156 1 20 5 320 1 22 9 350 2 353 1 
53 1 355 1 55 1 108 1 88 1 290 1 346 1 292 1 100 1 321 1 7 1 376 1 196 1 219 1 
56 1 
53 1 91 1 56 1 216 1 292 2 360 1 219 2 188 1 
53 2 56 1 164 1 140 2 213 1 201 1 330 1 154 1 120 2 91 2 291 1 216 1 292 5 282 1 23 1 184 1 219 5 149 2 188 1 
56 1 8 1 188 1 
71 2 41 1 56 1 
346 1 55 2 199 1 100 2 376 2 7 2 196 2 88 2 
55 2 357 1 166 1 189 1 141 1 359 2 264 2 332 2 362 1 266 1 334 2 100 2 123 1 7 2 148 1 196 2 240 1 316 1 241 2 130 1 104 1 199 1 338 1 44 1 244 1 369 1 200 1 70 1 88 3 346 1 279 1 249 1 50 1 306 1 250 1 376 3 284 1 
346 1 355 1 55 1 100 1 321 1 108 1 376 1 7 1 196 1 88 1 
355 1 229 1 56 1 96 1 109 1 88 1 169 1 215 1 292 1 376 1 196 1 83 1 219 1 188 1 
55 1 355 1 229 1 56 1 109 1 88 1 169 1 215 1 292 2 100 1 7 1 376 1 196 1 219 2 188 1 
53 1 182 1 292 1 219 1 
53 1 91 1 158 1 56 1 216 1 292 2 219 2 188 1 
91 1 292 1 219 1 
55 1 199 2 211 1 16 1 88 2 100 1 376 2 7 1 196 2 
301 1 328 1 270 1 
130 1 199 1 338 1 166 1 70 1 88 1 264 1 332 1 334 1 249 1 123 1 306 1 376 1 284 1 93 1 240 1 
199 1 8 1 
355 1 100 1 321 1 376 1 7 1 196 1 88 1 
355 1 55 1 211 1 100 1 376 1 7 1 196 1 16 1 88 1 
287 1 55 2 355 1 229 1 357 1 166 1 189 1 141 1 359 2 169 1 264 1 332 1 215 1 334 1 292 1 100 3 123 1 7 3 148 1 196 3 219 1 240 1 316 1 241 1 130 1 104 1 199 1 338 1 152 1 244 1 200 1 70 1 109 1 16 1 88 4 346 1 371 1 74 1 249 1 50 1 306 1 250 1 376 4 284 1 
199 1 152 1 100 1 376 2 7 1 196 2 83 1 17 1 88 2 
55 1 355 1 287 1 229 1 56 1 152 2 16 1 109 1 88 3 169 1 215 1 371 1 292 1 100 3 335 1 7 3 376 3 196 3 219 1 
55 1 152 1 328 1 16 1 88 2 301 1 100 2 7 2 376 2 196 2 
130 1 199 1 338 1 166 1 70 1 88 1 264 1 332 1 334 1 249 1 123 1 306 1 376 1 284 1 240 1 
130 1 199 1 338 1 139 1 166 1 343 1 70 1 88 1 264 1 332 1 334 1 249 1 306 1 376 1 240 1 
357 1 189 1 328 2 359 2 329 1 61 1 313 1 122 1 148 1 270 2 241 4 104 2 317 1 339 1 200 1 301 2 279 2 92 1 159 1 50 1 250 1 51 1 380 1 52 1 
215 1 355 1 100 1 376 1 7 1 196 1 88 1 94 1 
55 1 199 1 152 2 16 1 17 1 88 5 155 1 371 1 100 4 7 4 376 5 196 5 83 1 324 1 
355 1 100 2 321 1 376 2 7 2 196 2 94 1 88 2 
55 1 199 1 152 1 100 3 376 3 7 3 196 3 88 3 
130 1 338 1 152 1 166 1 70 1 88 2 264 1 332 1 301 1 371 1 334 1 249 1 100 1 123 1 306 1 7 1 376 2 196 1 284 1 240 1 
29 1 187 1 115 1 
63 1 251 1 342 1 29 2 224 1 115 2 
29 1 115 1 
29 1 115 1 
63 1 224 1 
63 1 224 1 
63 1 224 1 
193 1 29 1 115 1 
193 1 29 1 115 1 
193 1 29 1 115 1 
293 1 29 1 115 1 
293 1 29 1 115 1 
293 1 29 1 115 1 
231 1 356 1 29 1 292 1 194 1 100 2 7 2 196 2 219 1 38 1 39 1 199 1 43 1 86 1 245 1 370 1 88 2 280 1 281 1 376 2 283 1 379 1 115 1 187 1 
38 1 39 2 297 1 56 1 43 2 356 2 231 2 245 3 28 1 29 2 263 1 48 2 302 1 113 1 292 2 76 1 251 1 219 2 115 2 
237 1 258 1 261 1 
258 1 21 1 261 1 
237 2 54 1 288 1 21 1 261 3 125 1 
237 1 288 1 368 1 21 1 261 2 125 1 
237 1 288 2 21 1 261 2 125 1 
53 4 56 2 140 1 358 1 259 1 311 1 120 1 291 1 216 1 364 2 292 5 194 1 6 2 149 1 219 5 41 1 296 1 339 1 153 1 370 1 180 1 201 3 71 3 49 1 91 1 280 1 134 2 184 2 51 1 380 1 52 1 188 1 
53 2 182 1 292 2 87 1 168 1 366 1 219 2 
53 2 56 3 140 1 358 1 311 1 330 1 120 1 292 3 194 1 364 2 6 1 149 1 219 3 41 2 296 1 339 1 153 1 201 3 71 4 49 1 134 2 184 2 51 1 52 1 380 1 188 1 
53 3 77 1 56 4 140 1 358 1 311 1 330 1 120 1 364 4 292 4 194 2 6 2 149 1 219 4 41 3 296 1 339 2 106 1 153 2 201 5 71 7 49 1 373 1 134 4 184 4 51 2 52 2 380 2 188 1 
19 1 
37 1 249 1 8 1 
130 1 249 1 
37 2 130 1 174 1 78 1 338 1 249 3 
130 1 338 1 249 1 
249 1 47 1 
105 1 249 1 
95 1 241 7 104 3 271 1 13 2 202 1 265 1 278 1 303 1 279 4 175 1 92 3 159 2 51 1 197 1 380 1 66 1 136 1 
95 1 357 1 189 1 359 2 60 3 265 1 5 1 175 2 197 1 66 1 241 31 104 15 339 3 153 3 13 3 271 5 273 1 344 4 202 2 345 1 157 1 203 1 278 2 304 1 279 16 303 2 92 10 159 5 50 1 250 1 378 1 51 4 52 3 380 4 
95 1 241 9 104 4 2 1 357 2 271 1 13 2 189 2 97 1 359 4 202 1 265 1 203 1 278 1 303 1 279 5 175 1 92 4 159 3 50 2 250 2 51 1 380 1 66 1 
95 1 241 7 104 3 271 1 13 2 202 1 265 1 278 1 303 1 279 4 175 1 92 3 159 2 51 1 197 1 380 1 66 1 
95 1 241 7 104 3 271 1 13 2 202 1 265 1 278 1 303 1 279 4 175 1 92 3 159 2 51 1 197 1 380 1 66 1 
254 2 208 1 130 1 42 1 210 1 367 1 12 1 166 1 190 1 70 1 143 1 264 1 131 1 299 1 332 1 334 1 249 1 22 1 336 2 350 1 35 2 36 2 240 1 
254 1 54 1 42 1 117 1 367 1 258 1 166 1 327 1 223 1 70 1 261 2 264 1 332 1 237 1 112 1 248 1 334 1 64 1 21 1 374 1 22 1 350 1 336 1 35 1 220 1 36 1 
254 1 54 1 117 1 258 1 166 1 261 2 264 1 332 1 237 1 173 1 334 1 64 1 336 1 35 1 36 1 220 1 243 1 10 1 42 1 367 2 178 1 223 1 70 1 20 1 248 1 112 1 374 1 21 1 22 2 350 1 
254 1 54 1 117 1 258 1 327 1 166 1 261 2 264 1 332 1 237 1 334 1 336 1 337 1 35 1 36 1 220 1 243 1 10 1 42 1 367 3 178 2 223 1 70 1 299 1 20 1 248 1 112 1 21 1 22 3 350 1 
254 1 54 1 117 1 258 1 327 1 166 1 261 2 264 1 332 1 237 1 334 1 336 1 337 1 35 1 36 1 220 1 243 1 10 1 367 2 178 2 223 1 70 1 20 1 21 1 22 2 
310 1 
355 1 229 1 56 1 27 2 140 1 96 1 260 1 79 1 58 1 169 1 312 1 120 1 215 1 236 2 291 1 333 1 216 2 292 4 195 2 176 1 365 3 295 1 196 1 149 1 83 1 219 4 41 2 14 1 109 1 201 1 88 1 89 1 274 3 90 2 91 5 225 3 376 1 322 1 184 1 207 1 114 5 188 1 
355 1 229 1 56 1 27 2 140 1 96 1 260 1 79 1 58 1 169 1 312 1 120 1 215 1 236 2 291 1 333 1 216 2 292 4 195 2 365 3 176 1 295 1 196 1 149 1 83 1 219 4 41 2 14 1 109 1 201 1 88 1 89 1 274 3 90 2 91 5 225 3 376 1 322 1 184 1 207 1 114 5 188 1 
355 1 229 1 56 1 118 2 96 1 140 1 260 1 79 1 59 1 169 1 120 1 215 1 333 1 291 1 216 2 292 4 195 2 365 2 34 1 196 1 149 1 219 4 83 1 107 2 109 1 201 1 88 1 274 2 89 1 71 2 90 2 91 4 225 2 376 1 322 1 184 1 207 1 114 4 188 1 
229 1 56 2 140 1 96 1 190 1 59 1 332 2 236 2 291 1 334 2 333 1 292 5 195 2 196 1 295 1 149 1 240 2 12 1 70 1 109 1 201 2 71 2 249 1 207 1 114 4 162 1 355 1 27 2 166 1 260 1 79 1 264 2 169 1 120 1 215 1 216 3 32 1 365 2 219 5 83 1 41 2 130 1 88 1 274 2 89 1 90 2 49 1 319 1 91 6 225 2 375 1 376 1 322 1 184 2 188 1 
355 1 229 1 96 1 79 1 360 1 109 1 88 1 274 1 169 1 89 1 215 1 91 2 333 1 216 1 292 3 322 1 376 1 207 1 196 1 114 2 219 3 83 1 
355 1 229 1 56 1 96 1 79 1 360 1 109 1 88 1 169 1 89 1 215 1 91 1 333 1 216 1 292 3 225 1 322 1 376 1 207 1 196 1 114 3 219 3 83 1 188 1 
355 1 229 1 56 1 96 1 79 1 360 1 169 1 215 1 333 1 216 1 292 3 365 1 196 1 83 1 219 3 109 1 88 1 89 1 274 1 91 2 225 1 376 1 322 1 207 1 114 3 188 1 
229 1 56 5 96 1 140 1 58 1 236 2 333 1 291 1 292 5 195 2 196 1 295 1 149 1 14 1 109 1 201 1 205 1 207 1 114 6 355 1 27 2 260 1 79 1 360 1 169 1 312 1 215 1 120 1 216 3 365 4 176 1 219 5 83 1 41 2 88 1 274 4 89 1 90 2 91 7 225 4 322 1 376 1 184 1 188 5 
229 1 56 2 140 1 96 1 59 1 236 2 291 1 333 1 292 4 195 2 295 1 196 1 149 1 109 1 201 1 71 2 207 1 114 4 355 1 27 2 260 1 79 1 169 1 215 1 120 1 216 2 365 2 83 1 219 4 41 2 88 1 89 1 274 2 90 2 91 4 225 2 322 1 376 1 184 1 188 1 
355 1 229 1 56 1 27 2 96 1 140 1 260 1 79 1 169 1 312 1 120 1 215 1 236 2 333 1 291 1 216 2 292 4 195 2 365 2 176 1 295 1 196 1 83 1 219 4 149 1 41 2 14 1 109 1 201 1 88 1 274 2 89 1 90 2 91 4 225 2 376 1 322 1 184 1 207 1 114 4 188 1 
355 1 229 1 56 1 27 2 96 1 140 1 260 1 79 1 169 1 312 1 120 1 215 1 236 2 333 1 291 1 216 2 292 4 195 2 365 2 176 1 295 1 196 1 83 1 219 4 149 1 41 2 14 1 109 1 201 1 88 1 274 2 89 1 90 2 91 4 225 2 376 1 322 1 184 1 207 1 114 4 188 1 
355 1 229 1 56 1 118 2 96 1 140 1 260 1 79 1 4 1 169 1 145 1 120 1 215 1 333 1 291 1 216 2 292 4 195 2 365 2 34 1 196 1 83 1 219 4 149 1 107 2 14 1 109 1 201 1 88 1 274 2 89 1 71 2 90 2 91 4 225 2 376 1 322 1 184 1 207 1 114 4 188 1 
230 1 357 2 327 1 166 2 189 2 190 1 359 4 264 8 332 7 362 1 173 1 334 8 100 1 7 1 196 1 148 2 103 1 240 2 69 1 128 1 241 2 130 2 104 1 317 1 152 1 44 2 244 1 12 1 200 2 70 2 88 1 275 1 279 1 249 3 50 2 376 1 250 2 351 1 227 1 
55 1 357 1 328 1 189 1 359 2 214 1 100 1 7 1 148 1 196 1 270 1 241 3 104 2 339 1 153 1 200 1 16 1 88 1 72 1 301 1 279 1 92 1 159 1 50 1 250 1 376 1 51 1 52 1 380 1 
95 1 357 1 328 1 189 1 359 2 265 1 175 1 148 1 8 1 270 1 66 1 241 6 104 3 199 2 317 1 13 1 200 1 301 1 278 1 279 3 92 2 159 2 50 1 250 1 51 1 380 1 
1 1 257 1 357 2 189 2 328 4 359 4 214 1 60 3 361 1 362 1 315 1 148 1 270 11 241 14 104 6 199 1 339 1 244 1 153 2 271 1 200 2 273 1 344 3 157 1 301 11 279 8 92 2 159 1 50 2 250 2 51 1 52 2 380 2 
357 1 166 1 328 1 189 1 359 2 214 1 264 1 332 1 362 1 334 1 100 1 123 1 7 1 148 1 196 1 65 1 240 1 130 1 241 2 104 1 11 1 199 1 85 1 338 1 152 1 244 1 200 1 70 1 88 2 371 1 279 1 249 1 306 1 50 1 250 1 376 2 284 1 93 1 
95 1 327 1 189 3 328 7 332 3 334 3 192 2 100 1 7 1 196 1 148 3 66 1 240 1 241 20 104 10 199 2 338 2 152 1 339 2 244 1 153 2 13 1 200 3 70 2 246 1 301 7 349 2 249 2 159 4 306 2 250 3 206 2 161 2 357 3 166 2 359 6 214 1 264 3 265 1 362 1 175 1 123 2 270 7 316 2 130 2 271 4 88 3 371 1 183 1 278 1 372 1 279 10 92 8 50 3 376 3 284 2 51 3 52 2 380 3 
241 2 317 1 357 1 271 1 328 1 189 1 200 1 359 2 329 1 301 1 279 2 92 1 50 1 250 1 148 1 270 1 52 1 380 1 
241 2 104 2 317 1 339 1 357 1 328 1 189 1 200 1 359 2 61 1 301 1 92 1 159 1 50 1 250 1 148 1 51 1 270 1 
357 1 189 1 328 2 359 2 148 1 270 2 241 4 104 2 317 1 339 1 153 1 271 1 200 1 301 2 279 2 92 2 159 1 50 1 250 1 51 1 380 1 52 1 
241 2 69 1 357 1 271 1 328 1 189 1 200 1 359 2 329 1 301 1 279 2 92 1 50 1 250 1 148 1 270 1 52 1 380 1 
241 2 69 1 104 2 339 1 357 1 328 1 189 1 200 1 359 2 61 1 301 1 92 1 159 1 50 1 250 1 148 1 51 1 270 1 
357 1 189 1 328 2 359 2 148 1 270 2 69 1 241 4 104 2 339 1 153 1 271 1 200 1 301 2 279 2 92 2 159 1 50 1 250 1 51 1 380 1 52 1 
357 1 189 1 328 2 359 2 148 1 270 2 241 4 104 2 339 1 153 1 271 1 200 1 301 2 279 2 92 2 159 1 50 1 250 1 51 1 380 1 52 1 
357 1 166 1 189 1 359 2 264 1 332 1 362 1 334 1 123 1 148 1 240 1 316 1 241 2 130 1 104 1 199 1 338 1 244 1 200 1 70 1 88 1 279 1 249 1 306 1 50 1 376 1 250 1 284 1 
139 1 357 1 166 1 189 1 359 2 264 1 332 1 362 1 334 1 148 1 240 1 241 2 130 1 104 1 199 1 338 1 244 1 179 1 200 1 70 1 343 1 88 1 279 1 249 1 306 1 50 1 376 1 250 1 
357 1 189 1 328 2 359 2 214 1 148 1 270 2 241 4 104 2 339 1 153 1 271 1 200 1 301 2 279 2 92 2 159 1 50 1 250 1 51 1 380 1 52 1 
357 1 166 1 328 2 189 1 359 2 264 1 332 1 173 1 334 1 192 1 123 1 148 1 270 2 316 1 241 4 130 1 104 2 338 1 339 1 153 1 271 1 200 1 70 1 88 1 301 2 279 2 92 2 249 1 159 1 306 1 50 1 376 1 250 1 284 1 51 1 380 1 52 1 
55 1 357 1 189 1 328 1 359 2 214 1 100 1 7 1 148 1 196 1 102 1 270 1 241 3 104 1 339 1 153 1 271 1 200 1 16 1 88 1 301 1 279 2 92 1 50 1 250 1 376 1 51 1 52 1 380 1 
163 1 325 1 138 1 165 1 357 2 2 1 189 2 359 4 60 1 363 1 67 2 127 1 241 19 104 10 339 3 153 3 271 3 273 1 344 2 157 1 204 1 279 9 92 6 159 3 50 2 250 2 285 2 51 3 52 3 380 3 
163 2 325 1 138 2 165 1 357 3 2 1 189 3 359 6 119 1 60 2 30 1 67 1 129 1 241 26 104 12 339 2 153 3 271 2 272 1 344 2 157 2 203 2 347 1 204 1 279 14 92 4 159 2 50 3 250 3 285 4 51 2 186 1 52 3 380 3 
95 1 325 1 138 2 2 1 189 3 60 3 66 1 67 1 241 41 104 21 339 4 153 4 13 1 344 4 247 1 157 3 347 1 203 1 204 1 159 4 250 3 163 1 165 1 357 3 359 6 119 1 265 1 30 1 175 1 363 1 129 1 271 4 272 1 273 1 279 20 278 1 92 8 50 3 285 4 51 5 380 5 52 4 186 1 
95 1 163 1 325 1 138 2 165 1 357 4 2 1 189 4 359 8 119 1 60 3 265 1 30 1 363 1 175 1 66 1 67 1 129 1 241 38 104 18 339 3 153 4 13 1 271 3 272 1 273 1 344 4 247 1 157 3 203 2 347 1 278 1 204 1 279 20 92 7 159 4 50 4 250 4 285 4 51 4 186 1 52 4 380 5 
95 1 163 1 325 1 138 1 165 1 357 2 2 1 189 2 359 4 119 1 60 4 265 1 361 2 30 1 175 1 66 1 67 1 129 1 241 52 104 25 339 7 153 7 13 1 271 7 272 1 273 2 344 4 157 2 203 1 347 1 278 1 204 1 279 27 92 14 159 7 50 2 250 2 285 4 51 8 186 1 52 7 380 8 
39 1 297 1 43 1 231 1 356 1 101 1 251 1 29 1 263 1 115 1 
283 1 187 1 
39 1 31 1 43 1 231 1 356 1 33 1 135 1 29 1 115 1 
193 1 185 1 
293 1 147 1 342 1 
38 1 39 1 297 1 56 1 43 1 356 1 231 1 245 2 28 1 29 1 263 1 48 1 113 1 292 1 76 1 251 1 219 1 115 1 
38 1 39 1 297 1 56 1 43 1 356 1 231 1 245 2 28 1 29 1 263 1 48 1 113 1 292 1 76 1 251 1 219 1 115 1 
38 1 39 1 297 1 56 1 43 1 356 1 231 1 245 2 28 1 29 1 263 1 48 1 113 1 292 1 76 1 251 1 219 1 115 1 
193 1 342 1 185 1 
193 1 342 1 185 1 
293 1 147 1 
293 1 147 1 342 1 
281 1 379 1 
53 1 231 1 356 1 29 1 99 1 292 1 194 1 100 2 7 2 196 2 219 1 39 1 199 1 43 1 86 1 245 1 370 1 88 2 48 1 113 1 280 1 281 1 376 2 283 1 379 1 115 1 187 1 
357 1 166 1 189 1 359 2 214 1 264 2 332 2 362 1 238 1 334 2 98 1 267 1 148 1 196 2 68 1 130 1 128 1 241 2 104 1 44 2 244 1 200 1 70 1 88 2 279 1 249 1 50 1 376 2 250 1 351 1 253 1 
18 1 332 1 130 1 334 1 249 1 12 1 166 1 190 1 336 1 70 1 25 1 143 1 264 1 240 1 
54 1 177 1 40 1 117 1 258 1 166 1 327 1 70 1 261 2 264 1 332 1 18 1 237 1 112 1 334 1 21 1 336 1 220 1 
54 1 177 1 40 1 117 1 258 1 166 1 327 1 70 1 261 2 264 2 332 2 18 1 237 1 173 1 112 1 334 2 21 1 336 1 220 1 
54 1 40 1 117 1 258 1 327 1 166 1 70 1 261 2 264 1 331 1 332 1 237 1 112 1 334 1 21 1 336 1 220 1 
217 1 
56 1 164 1 140 1 201 1 120 1 291 1 23 1 184 1 149 1 188 1 
221 2 41 5 56 5 339 2 153 2 201 5 71 10 364 5 134 5 218 1 184 5 51 2 161 1 52 2 380 2 
91 1 56 1 216 1 292 1 219 1 188 1 
162 2 26 1 212 1 140 2 166 1 190 1 330 1 264 4 332 4 120 2 291 1 334 4 216 2 292 3 32 1 268 1 149 2 219 3 240 2 130 1 12 1 70 1 181 2 201 2 49 2 91 4 249 1 375 1 184 2 
56 1 164 1 23 1 184 1 8 1 201 1 188 1 
41 1 56 2 27 1 140 1 201 1 71 1 120 1 236 1 91 1 291 1 216 1 292 1 295 1 184 1 219 1 149 1 188 1 
0 1 229 2 56 8 140 4 234 1 332 3 291 4 334 3 62 2 292 5 239 2 149 4 240 1 105 3 338 3 339 2 153 2 70 3 201 9 110 2 71 12 73 2 348 2 249 10 23 1 161 2 162 1 164 1 212 1 166 4 167 2 262 1 264 3 120 4 173 1 174 1 216 3 364 6 218 2 219 5 37 2 221 2 130 3 41 6 47 2 181 1 49 2 91 5 134 6 184 8 51 2 52 2 380 2 188 2 
162 1 56 5 140 2 119 1 60 1 30 1 120 2 121 1 291 2 216 1 292 1 364 5 218 1 219 1 269 1 149 2 129 1 221 2 41 3 339 2 153 2 272 1 201 8 344 1 71 6 49 1 157 1 91 1 347 1 134 5 184 5 51 2 52 2 380 2 188 2 
355 1 55 1 209 1 140 1 290 1 312 1 265 1 120 1 291 1 175 1 292 1 100 1 218 1 7 1 196 1 149 1 219 1 221 2 108 1 88 1 201 2 346 1 278 1 321 1 376 1 184 2 51 1 380 2 
55 2 357 1 166 1 189 1 141 1 359 2 264 1 332 1 334 1 100 2 123 1 7 2 196 2 148 1 240 1 316 1 241 1 130 1 104 1 199 1 338 1 244 1 200 1 70 1 88 3 346 1 249 1 306 1 50 1 250 1 376 3 284 1 
162 1 41 2 56 4 140 1 13 1 201 1 71 4 120 1 49 1 291 1 364 2 134 2 184 2 149 1 188 2 
43 1 231 1 340 1 379 1 263 1 
126 1 43 1 231 1 
126 1 43 1 231 1 
126 1 43 1 231 1 
133 1 43 1 231 1 
133 1 43 1 231 1 
133 1 43 1 231 1 
43 1 231 1 
29 1 115 1 
241 10 104 5 209 1 357 1 2 1 189 1 271 2 359 2 265 1 278 2 279 5 175 2 92 5 159 3 50 1 250 1 51 2 380 2 
241 2 2 1 357 1 189 1 271 1 359 2 279 2 92 1 50 1 250 1 52 1 380 1 
241 4 104 2 339 1 2 1 357 1 153 1 189 1 271 1 359 2 279 2 92 2 159 1 50 1 250 1 51 1 52 1 380 1 
241 3 104 2 2 1 357 3 341 1 189 3 271 1 359 6 203 1 278 1 279 1 363 1 175 1 92 2 159 1 50 3 250 3 
95 1 357 5 2 1 189 5 359 10 60 3 265 2 170 1 5 1 175 3 363 1 66 1 241 34 104 18 339 3 153 3 13 1 341 1 271 5 273 1 344 4 345 1 157 1 203 2 278 3 279 16 92 12 159 7 50 5 250 5 378 1 51 5 52 3 380 5 
95 1 241 8 104 4 357 2 13 1 271 1 189 2 359 4 265 1 203 1 279 4 278 1 175 1 92 3 159 2 50 2 250 2 51 1 380 1 66 1 
265 1 95 1 241 6 104 3 279 3 278 1 175 1 92 2 159 2 13 1 51 1 8 1 380 1 66 1 
241 4 104 2 339 1 357 1 153 1 189 1 271 1 359 2 170 1 279 2 92 2 159 1 50 1 250 1 51 1 52 1 380 1 
241 7 104 4 339 1 153 1 271 1 273 1 344 2 60 1 157 1 279 3 92 2 159 1 51 1 52 1 380 1 
95 1 357 1 189 1 359 2 60 2 265 1 361 1 315 1 175 2 66 1 241 20 104 10 339 2 153 2 13 1 271 2 273 1 344 2 203 1 278 2 279 10 92 6 159 4 50 1 250 1 51 3 380 3 52 2 
241 1 104 1 344 1 
241 1 279 1 60 1 
241 6 104 3 339 1 357 1 153 1 189 1 271 1 359 2 170 1 279 3 92 3 159 2 50 1 250 1 51 1 161 1 52 1 380 1 
357 1 2 1 189 1 359 2 119 1 60 1 30 1 241 12 129 1 104 6 339 2 153 2 271 1 272 1 344 1 157 1 347 1 279 6 92 2 159 1 50 1 250 1 51 2 52 2 380 2 
241 6 104 3 271 1 265 1 279 3 278 1 175 1 92 2 159 1 51 1 380 1 
95 1 241 3 104 2 357 1 271 1 341 1 189 1 359 2 203 1 279 1 278 1 175 1 92 2 159 1 50 1 250 1 66 1 
95 1 357 1 2 1 189 1 359 2 60 1 265 1 175 1 66 1 241 8 104 4 13 1 272 1 344 1 157 1 279 4 278 1 92 2 159 2 50 1 250 1 51 1 380 1 
95 1 2 1 357 2 189 2 359 4 60 1 265 1 170 1 175 1 66 1 241 11 104 5 153 1 13 1 271 1 272 1 273 1 344 2 157 1 278 1 279 6 92 3 159 2 50 2 250 2 51 1 52 1 380 2 
95 1 357 3 2 1 189 3 359 6 119 1 60 1 265 1 170 1 30 1 175 1 66 1 241 19 129 1 104 10 339 2 153 2 13 1 271 1 272 1 344 1 157 1 347 1 203 1 278 1 279 9 92 4 159 3 50 3 250 3 51 3 52 2 380 3 
95 1 357 3 2 1 189 3 359 6 119 1 60 1 265 1 170 1 30 1 175 1 66 1 241 17 129 1 104 7 339 1 153 2 13 1 271 2 272 1 344 1 157 1 203 1 347 1 278 1 279 10 92 5 159 3 50 3 250 3 51 2 52 2 380 3 
95 1 357 1 2 1 189 1 359 2 60 1 265 1 175 1 66 1 241 8 104 4 13 1 272 1 344 1 157 1 279 4 278 1 92 2 159 2 50 1 250 1 51 1 380 1 
357 1 2 1 189 1 359 2 119 1 60 1 30 1 241 12 129 1 104 6 339 2 153 2 271 1 272 1 344 1 157 1 347 1 279 6 92 2 159 1 50 1 250 1 51 2 52 2 380 2 
95 1 357 4 2 1 189 4 359 8 119 1 60 1 265 1 30 1 170 1 175 1 66 1 129 1 241 18 104 8 339 1 153 2 13 1 271 2 272 1 344 1 157 1 347 1 203 2 278 1 279 10 92 5 159 3 50 4 250 4 51 2 52 2 380 3 
2 1 357 4 189 4 359 8 119 1 60 1 30 1 363 1 129 1 241 16 104 7 339 2 153 3 271 3 272 1 344 1 157 1 347 1 203 2 279 9 92 6 159 3 50 4 250 4 51 2 52 3 380 3 
95 1 241 7 104 4 271 3 265 1 278 3 279 3 175 3 92 6 159 3 51 1 380 1 66 2 
95 1 2 1 357 4 189 4 359 8 119 1 60 1 265 1 30 1 175 1 363 1 66 1 129 1 241 18 104 8 339 1 153 2 13 1 271 1 272 1 344 1 157 1 347 1 203 2 278 1 279 10 92 4 159 3 50 4 250 4 51 2 52 2 380 3 
199 1 289 1 191 1 142 1 17 1 88 1 111 1 376 1 196 1 252 1 83 1 354 1 
199 1 376 1 196 1 191 1 88 1 83 1 17 1 
130 1 12 1 166 1 233 1 190 1 70 1 264 4 332 4 173 1 277 1 334 4 249 1 240 1 
130 1 338 1 222 1 3 1 166 2 70 1 181 1 246 1 264 2 332 2 171 1 334 2 249 1 124 1 
332 1 334 1 258 1 21 1 166 1 70 1 261 1 220 1 264 1 240 1 
68 1 130 1 327 1 166 1 70 1 264 2 332 2 173 1 334 2 249 1 351 1 
130 2 12 1 166 2 190 1 70 2 181 1 264 5 332 4 275 1 173 1 277 1 334 5 249 3 351 1 103 1 240 1 
130 2 12 1 166 2 190 1 46 1 70 2 181 1 264 5 332 4 275 1 173 1 277 1 334 5 249 3 351 1 240 1 
332 1 130 1 334 1 249 1 12 1 166 1 190 1 70 1 8 1 264 1 240 1 
130 1 199 1 338 1 152 1 166 1 70 1 88 2 264 1 332 1 334 1 249 1 100 1 123 1 306 1 7 1 376 2 196 1 240 1 
355 1 130 2 199 1 338 2 152 1 166 1 70 1 47 1 88 2 181 1 110 1 169 1 264 1 332 1 215 1 334 1 249 3 100 1 123 1 306 1 7 2 376 2 196 2 
355 1 130 2 199 1 338 2 152 1 166 1 233 1 343 1 70 1 47 1 88 2 181 1 110 1 169 1 264 2 332 2 215 1 334 2 249 3 100 1 306 1 7 2 376 2 196 2 
37 1 130 1 229 1 56 1 338 1 105 1 298 1 166 1 233 1 70 1 47 1 181 1 110 1 264 3 332 3 91 1 334 3 146 1 292 2 249 4 219 2 240 1 188 1 
37 1 130 1 229 1 56 1 338 1 105 1 166 1 233 1 70 1 47 1 181 1 110 1 264 3 332 3 91 1 334 3 62 1 292 2 249 4 219 2 240 1 188 1 
332 1 334 1 166 1 70 1 264 1 227 1 
130 2 338 1 44 1 230 1 222 1 327 1 166 3 70 2 264 7 332 6 275 1 171 1 173 1 334 7 174 1 249 3 351 1 352 1 103 1 227 1 240 2 
95 1 328 1 189 2 332 1 334 1 192 1 98 1 100 1 7 1 196 1 148 2 66 1 241 6 104 3 199 2 338 1 152 1 13 1 200 2 70 1 301 1 349 1 249 1 159 2 306 1 250 2 357 2 166 1 359 4 214 1 264 1 265 1 173 1 175 1 123 1 270 1 316 1 130 1 88 2 278 1 279 3 92 2 50 2 376 2 284 1 51 1 380 1 
53 1 229 1 56 1 164 1 212 1 140 2 264 1 332 1 120 2 291 2 334 1 62 1 216 1 292 3 239 1 149 2 219 3 240 1 37 1 105 1 201 1 73 1 91 2 348 1 249 2 23 1 184 1 188 1 
37 1 130 1 338 1 166 2 70 1 262 1 264 2 332 2 173 1 334 2 174 1 249 2 227 1 
130 1 199 1 338 1 152 1 166 1 343 1 70 1 88 2 264 1 332 1 334 1 249 1 100 1 306 1 7 1 376 2 196 1 240 1 
130 1 338 1 222 1 166 2 70 1 181 1 264 1 332 1 171 1 334 1 174 1 249 1 352 1 
242 1 137 1 88 1 132 1 238 1 267 1 376 1 196 1 253 1 
132 1 150 1 294 1 
132 1 242 1 199 1 137 1 377 1 
53 1 355 1 150 1 287 1 229 1 242 2 199 1 84 1 137 2 56 1 109 1 169 1 215 1 132 1 292 2 294 1 377 2 219 2 188 1 
20 1 243 1 10 1 42 1 367 1 64 1 22 1 350 1 
243 2 10 2 42 1 116 1 367 4 178 2 308 1 232 1 80 1 20 3 22 4 323 1 160 1 350 1 
9 1 243 1 42 1 10 1 367 2 178 1 318 1 144 1 20 1 64 1 22 2 350 1 
42 1 10 1 243 1 367 3 80 2 20 1 64 1 22 3 160 1 350 1 323 2 82 1 
235 1 300 2 20 2 228 1 
42 1 367 1 64 1 22 1 350 1 198 1 
156 1 20 1 243 1 10 1 42 1 367 2 64 1 178 1 22 2 350 1 
45 1 
20 1 243 1 10 1 42 1 367 1 64 1 22 1 350 1 
20 1 243 1 10 1 8 1 
20 1 243 1 10 1 42 1 367 1 22 1 350 1 
367 1 35 1 36 1 
42 1 10 1 243 1 367 3 80 2 20 1 305 1 64 1 22 3 350 1 160 1 323 1 
20 1 243 1 10 1 42 1 81 1 367 2 178 1 22 2 350 1 
237 1 20 1 42 1 367 1 64 1 258 1 232 1 22 1 350 1 261 1 353 1 
20 1 243 1 42 1 367 1 64 1 22 1 350 1 
243 2 10 1 42 1 367 1 64 1 22 1 350 1 
286 1 243 1 42 2 367 2 326 1 20 1 314 1 64 1 22 2 350 2 
243 1 10 1 42 1 367 3 178 2 308 1 232 1 156 1 20 2 64 1 320 1 22 3 350 1 
54 1 243 1 10 1 42 1 367 2 178 1 258 1 261 2 20 1 237 1 64 1 21 1 22 2 350 1 226 1 
243 1 10 1 42 2 367 4 178 2 308 1 232 1 172 1 20 2 81 1 64 1 22 4 350 2 
156 1 20 1 243 1 10 1 42 1 367 3 64 1 178 1 22 3 350 1 80 1 
20 1 116 1 232 1 308 1 
20 1 243 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 1 145 1 28 1 241 2 293 1 199 1 265 1 220 1 249 2 318 1 126 3 221 9 203 1 131 1 280 1 135 5 15 2 227 4 312 1 353 1 284 9 333 1 24 1 47 7 
106 1 145 1 28 1 241 2 293 1 199 1 265 1 220 1 249 2 318 1 126 3 221 9 203 1 131 1 280 1 135 5 227 4 15 2 312 1 353 1 284 9 333 1 24 1 47 7 
106 1 145 1 28 2 241 2 293 1 179 1 199 2 265 1 220 1 249 2 126 3 203 2 221 9 129 1 131 1 280 2 135 5 15 2 227 4 312 1 194 1 380 1 353 1 195 1 284 9 335 1 24 1 47 6 
106 1 145 1 28 2 241 2 293 1 179 1 199 2 265 1 220 1 249 2 126 3 203 2 221 9 129 1 131 1 280 2 135 5 15 2 227 4 312 1 194 1 380 1 353 1 195 1 284 9 335 1 24 1 47 6 
106 1 145 1 28 2 241 2 293 1 179 1 199 2 265 1 220 1 249 2 126 4 203 2 221 10 129 1 131 1 280 2 135 6 15 2 227 5 312 1 194 1 380 1 353 1 195 1 284 10 335 1 24 1 47 7 
145 1 28 2 241 1 293 1 179 1 199 2 265 1 220 1 249 2 126 2 203 2 221 7 129 1 131 1 280 2 135 4 15 2 227 3 312 1 194 1 380 1 353 1 195 1 284 7 335 1 24 1 47 4 
106 1 145 1 241 2 293 1 131 1 280 1 199 1 135 3 265 1 15 1 227 2 249 1 284 4 24 1 126 1 47 3 221 4 203 1 
145 1 28 1 293 1 0 1 129 1 280 1 135 1 199 1 226 1 15 1 173 1 249 1 284 2 335 1 24 1 221 2 
145 1 28 1 293 1 135 2 15 2 227 1 249 2 353 1 284 3 24 1 126 1 47 1 221 3 
81 1 219 1 301 1 
219 1 343 2 69 1 
189 1 46 2 178 2 96 2 31 2 3 2 119 1 33 2 
144 1 214 2 291 1 74 1 339 1 50 1 178 2 243 1 53 1 2 1 31 2 3 2 125 1 33 3 156 1 56 1 189 1 344 1 205 1 207 1 93 1 63 2 96 3 376 2 169 1 352 1 136 1 378 2 231 1 379 1 46 2 141 1 234 1 316 1 236 2 119 1 359 1 
189 1 364 1 46 1 178 1 96 1 31 1 245 1 3 1 287 1 33 1 
204 1 275 1 364 1 178 1 96 1 150 1 191 1 33 1 200 1 219 1 58 1 301 1 103 1 70 1 
204 1 275 1 364 1 178 1 96 1 150 1 31 1 191 2 3 1 33 1 200 2 219 1 46 1 58 1 301 1 
191 1 134 1 25 1 200 1 26 1 
219 1 301 1 191 2 25 1 200 2 307 1 192 1 26 1 
191 1 25 1 200 1 
189 1 364 1 178 1 96 1 191 1 245 1 31 1 3 1 33 1 200 1 46 1 262 1 287 1 26 1 
219 1 
219 1 301 1 191 2 25 1 10 1 200 2 307 1 26 1 
27 1 254 2 64 1 224 1 191 5 200 5 152 1 184 1 209 2 219 1 87 2 301 1 319 1 286 1 323 1 25 2 306 1 307 1 26 2 
344 1 205 1 50 1 178 1 63 1 53 1 96 2 2 1 125 1 77 1 3 1 33 2 378 1 46 1 141 1 234 1 285 1 236 1 359 1 360 1 
81 1 119 1 
178 2 96 2 31 1 3 1 33 2 90 1 313 1 46 1 119 2 
308 1 285 1 153 1 
344 1 205 1 50 1 63 1 96 1 2 1 53 1 125 1 33 1 378 1 141 1 234 1 60 1 236 1 119 1 359 1 
178 5 96 5 31 1 77 2 3 4 33 5 172 1 313 1 46 4 111 1 103 1 127 1 119 1 360 1 
34 1 364 1 46 2 178 2 96 2 3 2 287 1 33 2 
46 3 178 3 96 3 31 1 77 1 3 3 119 1 33 3 
364 1 46 1 178 1 96 1 3 1 287 1 33 1 
90 1 313 1 364 1 46 1 178 1 96 1 31 1 3 1 33 1 
214 2 291 1 339 1 50 1 364 1 178 3 243 1 53 1 2 1 150 1 31 2 125 1 3 3 77 1 33 4 200 1 156 1 58 1 204 1 275 1 189 1 344 1 205 1 207 1 94 1 63 1 96 4 191 1 376 1 169 1 16 1 136 1 378 1 231 1 313 1 379 1 46 3 141 1 234 1 316 1 236 1 119 1 359 1 360 1 
46 1 178 2 111 1 103 1 96 2 3 1 77 1 119 1 33 2 
204 1 275 1 11 1 364 1 178 3 96 3 150 1 31 1 191 1 77 2 3 3 33 3 200 1 16 1 219 1 313 1 46 3 58 1 360 1 
178 2 96 2 31 1 77 1 3 2 33 2 153 1 313 1 46 2 285 1 
344 1 205 1 50 1 63 1 96 1 2 1 53 1 125 1 33 1 378 1 141 1 234 1 236 1 119 1 359 1 
344 1 205 1 50 1 63 1 279 1 96 1 53 1 33 1 378 1 141 1 234 1 236 1 119 1 213 1 359 1 
238 1 214 2 291 1 339 1 366 1 153 2 217 1 56 2 308 2 345 1 258 1 278 1 260 1 169 1 376 4 208 1 136 1 139 1 231 1 379 2 285 2 316 1 356 1 177 1 
34 1 364 1 46 1 178 1 96 1 150 1 3 1 33 1 
109 1 105 1 
109 1 105 1 
155 1 12 1 
155 1 12 1 
155 1 12 1 
202 1 109 1 105 1 
202 1 109 1 105 1 
273 1 109 1 105 1 
155 1 12 1 44 1 43 1 109 2 105 2 
202 1 109 1 105 1 
230 1 109 1 105 1 
230 1 109 1 105 1 
230 1 109 1 105 1 
71 1 178 2 51 1 109 1 3 2 33 2 200 1 80 1 154 1 157 1 59 1 35 1 273 1 39 1 40 1 95 1 96 2 191 1 170 1 311 1 46 2 314 1 119 1 105 1 
206 1 75 2 44 1 109 2 191 2 350 1 329 1 201 1 170 2 200 2 154 2 219 1 157 3 314 2 59 2 140 1 35 1 113 1 105 2 
280 1 199 1 203 1 
0 1 280 1 199 1 
188 1 0 1 355 1 199 3 288 1 203 2 
188 1 0 1 355 1 92 1 199 2 203 1 
188 2 0 1 355 1 199 2 203 1 
27 3 51 1 340 2 217 1 200 5 270 1 219 2 87 1 301 1 112 1 306 2 307 1 254 1 343 3 39 1 258 1 40 1 349 2 191 5 331 1 209 1 139 1 98 2 69 1 22 1 286 1 212 1 357 1 25 1 48 1 177 1 26 4 
364 1 178 1 245 1 31 1 3 1 33 1 200 2 219 1 301 1 250 1 189 1 96 1 191 2 134 1 193 1 210 1 46 1 262 1 287 1 25 1 26 2 
27 3 340 1 200 3 217 1 270 1 219 3 87 1 301 1 112 1 306 2 254 1 343 4 258 1 40 1 64 1 191 3 349 2 331 1 209 1 139 1 98 2 69 2 357 1 212 1 26 2 177 1 
27 5 1 1 340 2 200 4 217 2 270 1 219 4 87 1 301 1 112 1 306 4 254 1 343 7 163 1 258 2 40 2 64 1 349 4 191 4 331 1 209 1 139 2 98 4 69 3 101 1 357 1 212 2 26 3 177 2 
81 1 234 1 341 1 
234 1 290 1 
89 1 
141 1 234 1 53 1 
234 1 320 1 
234 1 53 1 
277 1 141 1 234 3 53 1 375 1 341 2 
238 3 257 2 258 1 65 1 366 2 376 7 17 1 377 1 229 1 5 1 218 1 97 1 56 4 379 3 117 1 324 1 177 1 
238 3 257 2 258 1 65 1 366 2 376 7 17 1 377 1 229 1 5 1 218 1 97 1 56 4 379 3 117 1 324 1 177 1 
238 3 257 2 258 1 65 1 366 2 67 1 376 7 17 1 377 1 229 1 5 1 97 1 218 1 56 4 379 3 117 1 324 1 177 1 
238 10 214 2 240 1 292 1 366 5 217 3 218 1 5 2 56 16 302 3 324 1 255 4 257 3 258 4 347 1 65 2 14 1 165 1 169 1 376 31 17 2 229 2 136 1 377 5 97 1 139 3 231 1 174 1 379 15 117 1 316 1 336 1 212 3 177 4 
238 4 214 2 246 1 366 3 218 1 5 2 56 8 369 1 257 2 258 3 65 1 169 1 376 14 17 1 377 1 136 1 229 2 332 1 97 1 231 1 379 6 316 1 117 2 177 3 
145 1 73 1 28 1 293 1 50 1 0 1 199 2 249 1 91 1 252 1 203 1 221 2 63 1 280 1 132 1 348 1 135 1 15 1 18 1 378 1 19 1 284 2 100 1 175 1 24 1 47 1 236 1 359 1 288 1 120 1 
145 1 73 1 28 1 50 1 0 1 198 1 54 1 199 2 249 1 91 1 321 1 252 1 203 1 221 3 63 1 280 1 132 1 348 1 135 1 15 1 378 1 284 3 100 1 175 1 24 1 236 1 47 2 288 1 359 1 120 1 
145 1 28 1 73 1 50 1 0 1 54 1 199 2 91 1 321 1 252 1 221 2 203 1 63 1 280 1 132 1 135 1 378 1 284 2 175 1 24 1 236 1 47 2 359 1 288 1 120 1 
344 1 28 2 73 2 128 1 50 1 63 1 53 1 198 1 132 2 15 1 378 1 354 1 249 1 284 1 234 1 160 1 274 1 236 1 252 2 359 1 104 1 221 1 162 1 
73 1 28 1 293 1 50 1 0 1 199 2 249 1 91 1 321 1 252 1 203 1 221 1 63 1 280 1 132 1 348 1 15 1 18 1 378 1 284 1 100 1 175 1 236 1 359 1 288 1 120 1 
337 1 
27 1 364 1 30 1 178 1 52 1 150 1 296 2 55 2 33 1 200 4 79 3 185 2 298 3 219 1 88 2 87 1 6 3 58 1 301 1 8 1 272 1 322 1 307 2 306 1 371 1 204 1 326 5 254 1 275 1 42 1 96 1 191 4 281 1 283 1 228 1 209 1 69 2 196 1 103 1 286 1 25 5 70 1 
27 1 364 1 30 1 178 1 52 1 150 1 296 2 55 2 33 1 200 4 79 3 185 2 298 3 219 1 88 2 87 1 6 3 58 1 301 1 8 1 272 1 322 1 307 2 306 1 371 1 204 1 326 5 254 1 275 1 42 1 96 1 191 4 281 1 283 1 228 1 209 1 69 2 196 1 103 1 286 1 25 5 70 1 
150 1 200 4 298 2 6 2 58 1 301 1 305 2 306 1 307 2 204 1 254 1 343 2 256 1 13 2 209 1 25 4 70 1 27 1 364 1 178 1 33 1 79 2 185 2 219 1 87 1 88 2 370 1 272 1 322 1 326 4 275 1 42 1 96 1 191 4 283 1 228 1 196 1 103 1 286 1 
50 1 53 1 149 1 150 1 296 2 55 2 200 5 298 2 6 2 58 1 301 1 307 3 306 2 204 1 254 1 343 2 344 2 256 1 309 1 63 2 68 1 209 1 69 2 25 6 359 1 70 1 27 2 364 1 178 1 30 1 33 1 79 2 185 2 219 2 85 1 88 2 87 1 272 1 274 1 322 1 326 4 275 1 42 1 96 1 191 5 283 1 331 1 228 1 378 2 196 1 234 1 103 1 286 1 236 2 104 1 
364 1 178 1 150 1 33 1 200 3 6 1 58 1 272 1 322 1 10 1 307 1 204 1 326 2 275 1 96 1 191 3 283 1 228 1 196 1 103 1 25 2 70 1 
364 1 178 1 150 1 33 1 200 3 298 1 219 1 58 1 301 1 272 1 322 1 10 1 307 1 204 1 326 3 275 1 96 1 191 3 283 1 228 1 196 1 103 1 25 1 70 1 
364 1 178 1 150 1 33 1 200 3 79 1 298 1 219 1 6 1 58 1 301 1 272 1 322 1 10 1 307 1 204 1 326 3 275 1 96 1 191 3 283 1 228 1 196 1 103 1 25 2 70 1 
27 1 364 1 30 1 178 1 52 1 150 1 296 2 295 1 55 2 33 1 200 5 79 4 185 2 298 4 219 5 88 2 87 1 6 4 58 1 8 1 301 5 272 1 322 1 10 1 306 1 371 1 307 3 204 1 326 6 254 1 275 1 42 1 96 1 191 5 281 1 283 1 228 1 209 1 69 2 196 1 103 1 286 1 25 7 70 1 
150 1 296 2 55 2 200 4 298 2 6 2 58 1 301 1 306 1 307 2 204 1 254 1 343 2 256 1 209 1 69 2 25 4 70 1 27 1 364 1 30 1 178 1 33 1 79 2 185 2 219 2 87 1 88 2 272 1 322 1 326 4 275 1 42 1 96 1 191 4 283 1 228 1 196 1 103 1 286 1 
27 1 364 1 30 1 178 1 52 1 150 1 296 2 55 2 33 1 200 4 79 2 298 2 185 2 219 1 88 2 87 1 6 2 58 1 301 1 8 1 272 1 322 1 307 2 306 1 371 1 204 1 326 4 275 1 254 1 42 1 96 1 191 4 283 1 228 1 209 1 69 2 196 1 103 1 286 1 25 4 70 1 
27 1 364 1 30 1 178 1 52 1 150 1 296 2 55 2 33 1 200 4 79 2 298 2 185 2 219 1 88 2 87 1 6 2 58 1 301 1 8 1 272 1 322 1 307 2 306 1 371 1 204 1 326 4 275 1 254 1 42 1 96 1 191 4 283 1 228 1 209 1 69 2 196 1 103 1 286 1 25 4 70 1 
27 1 364 1 178 1 150 1 365 1 33 1 200 4 79 2 298 2 185 2 219 1 88 2 87 1 6 2 370 1 58 1 301 1 8 1 272 1 322 1 305 2 307 2 306 1 204 1 326 4 275 1 254 1 343 2 13 2 42 1 41 1 96 1 191 4 283 1 228 1 209 1 196 1 103 1 286 1 25 4 70 1 
238 2 214 2 291 1 339 1 366 2 153 1 218 1 81 1 5 1 56 3 308 1 345 1 257 1 258 1 169 1 376 6 229 1 136 1 97 1 231 1 379 3 285 1 316 1 117 1 119 2 177 1 
238 2 144 1 214 4 291 2 108 1 339 1 243 1 366 1 217 2 153 4 56 8 7 1 302 3 255 3 308 11 62 1 258 1 347 1 310 1 169 2 376 14 377 1 136 2 231 2 139 1 379 6 285 11 316 2 336 1 358 1 212 2 119 1 177 2 
214 2 144 1 291 1 108 1 50 1 339 1 178 1 243 1 53 1 2 1 125 1 3 1 77 1 33 2 153 1 186 1 56 1 60 1 344 1 205 1 63 1 164 1 96 2 169 1 376 2 136 1 378 1 231 1 46 1 379 1 141 1 234 1 316 1 236 1 119 1 359 1 360 1 237 1 
238 8 144 1 291 3 108 1 339 3 50 2 243 1 2 2 53 2 3 1 153 7 5 1 156 2 56 10 300 1 344 1 308 7 205 2 257 1 258 3 63 3 169 3 117 1 316 3 212 2 119 2 360 1 359 2 177 3 214 6 263 2 178 1 216 2 366 4 317 1 77 1 125 2 33 3 367 2 217 2 218 1 321 1 325 2 130 1 96 3 376 20 229 1 136 3 377 4 97 1 378 3 231 3 139 2 379 10 46 1 141 2 234 2 285 7 236 3 
214 4 144 1 291 2 50 2 339 2 178 1 243 1 53 2 244 1 3 1 77 1 33 1 269 1 56 1 248 1 57 1 321 1 274 1 253 1 344 2 345 1 93 2 63 8 96 1 259 1 169 2 376 2 136 2 378 8 19 1 231 2 138 1 46 1 379 1 234 3 316 2 236 7 359 2 104 1 
238 1 214 2 291 1 108 1 339 1 178 1 76 1 366 1 31 1 3 1 33 1 153 1 217 1 56 1 308 1 258 1 96 1 169 1 376 3 136 1 231 1 139 1 313 1 46 1 379 2 285 1 316 1 212 1 177 1 
238 1 214 2 308 1 291 1 345 1 339 1 153 1 376 2 169 1 217 1 377 1 136 1 231 1 56 2 285 1 316 1 356 1 177 1 
238 1 214 2 308 1 291 1 345 1 339 1 258 1 278 1 366 1 153 1 376 2 169 1 136 1 231 1 139 1 379 2 285 1 316 1 
238 2 214 2 291 1 339 1 366 1 217 1 153 2 56 2 308 2 345 1 258 1 169 1 376 4 136 1 377 1 231 1 139 1 379 2 285 2 316 1 212 1 177 1 
238 1 214 2 308 1 291 1 339 1 153 1 376 2 169 1 217 1 377 1 136 1 138 1 231 1 56 2 285 1 316 1 356 1 177 1 
238 1 214 2 308 1 291 1 339 1 258 1 278 1 366 1 153 1 376 2 169 1 136 1 138 1 231 1 139 1 379 2 285 1 316 1 
238 2 214 2 291 1 339 1 366 1 217 1 153 2 56 2 308 2 258 1 169 1 376 4 136 1 377 1 231 1 138 1 139 1 379 2 285 2 316 1 212 1 177 1 
238 2 214 2 308 2 291 1 339 1 258 1 366 1 153 2 169 1 217 1 376 4 377 1 136 1 139 1 231 1 56 2 379 2 285 2 316 1 212 1 177 1 
144 1 214 2 291 1 50 1 339 1 243 1 53 1 2 1 125 1 33 1 156 1 56 1 344 1 205 1 63 1 96 1 376 2 169 1 136 1 378 1 231 1 379 1 141 1 234 1 316 1 236 1 119 1 359 1 
144 1 214 2 291 1 50 1 339 1 294 1 243 1 53 1 33 1 56 1 344 1 205 1 63 1 279 1 96 1 376 2 169 1 136 1 378 1 231 1 379 1 141 1 234 1 316 1 236 1 119 1 359 1 213 1 
238 2 214 2 291 1 108 1 339 1 366 1 217 1 153 2 56 2 308 2 258 1 169 1 376 4 136 1 377 1 231 1 139 1 379 2 285 2 316 1 212 1 177 1 
238 2 214 2 291 1 50 1 339 1 2 1 53 1 366 1 125 1 33 1 153 2 217 1 156 1 56 2 325 1 308 2 205 1 258 1 63 1 96 1 376 4 169 1 377 1 136 1 378 1 139 1 19 1 231 1 379 2 141 1 234 1 285 2 316 1 236 1 212 1 359 1 177 1 
238 1 214 2 291 1 108 1 121 1 339 1 178 1 31 1 3 1 33 1 217 1 153 1 56 2 308 1 258 1 96 1 169 1 376 3 377 1 136 1 139 1 231 1 313 1 379 1 46 1 285 1 316 1 212 1 177 1 
238 8 143 2 240 1 214 6 197 1 242 1 123 1 366 4 246 1 124 1 217 4 5 1 218 1 84 1 83 1 56 20 302 3 161 1 61 1 38 1 255 4 276 1 257 1 258 5 347 1 166 1 133 1 328 4 169 3 376 41 229 1 137 1 136 3 377 4 97 1 231 3 139 4 379 21 117 1 316 3 336 3 212 4 177 5 
238 7 143 2 240 2 214 8 197 1 242 1 123 1 366 4 246 1 124 1 217 4 5 1 218 1 84 1 83 1 56 20 302 3 161 1 61 1 38 1 255 4 276 1 257 1 258 4 347 1 166 1 133 1 328 4 169 4 376 38 229 1 137 1 136 4 377 3 97 1 231 4 139 3 379 18 117 1 316 4 336 3 212 4 177 5 
238 14 143 1 240 1 214 4 197 1 242 1 123 1 366 7 246 1 124 1 217 7 5 1 218 1 84 1 83 1 56 27 302 4 161 1 61 1 38 1 255 4 62 2 257 1 258 8 347 2 133 1 328 4 169 2 376 52 229 1 137 1 136 2 377 7 97 1 231 2 139 7 379 25 117 1 316 2 336 2 212 7 177 8 
238 6 362 1 143 1 214 4 197 1 366 3 246 1 217 3 56 9 302 1 161 2 61 1 38 1 255 2 258 3 347 1 166 1 133 1 328 2 169 2 376 19 136 2 377 3 231 2 139 3 379 10 316 2 336 1 212 3 177 3 
238 4 143 2 240 2 214 6 197 1 242 1 123 1 366 2 246 1 124 1 217 3 83 1 84 1 56 14 302 2 161 1 61 1 38 2 255 2 258 2 133 1 328 4 169 3 376 26 377 2 137 1 136 3 231 3 139 2 379 12 316 3 336 2 212 3 177 3 
154 1 314 1 59 1 44 1 109 1 113 1 329 1 151 1 170 1 105 1 
95 1 273 1 
154 1 314 1 59 1 66 1 225 1 109 1 267 1 170 1 105 1 
202 1 142 1 
4 1 230 1 43 1 
206 1 75 1 44 1 191 1 109 1 329 1 201 1 200 1 170 1 154 1 219 1 157 2 314 1 59 1 140 1 35 1 113 1 105 1 
206 1 75 1 44 1 191 1 109 1 329 1 201 1 200 1 170 1 154 1 219 1 157 2 314 1 59 1 140 1 35 1 113 1 105 1 
206 1 75 1 44 1 191 1 109 1 329 1 201 1 200 1 170 1 154 1 219 1 157 2 314 1 59 1 140 1 35 1 113 1 105 1 
202 1 142 1 43 1 
202 1 142 1 43 1 
4 1 230 1 
4 1 230 1 43 1 
71 1 80 1 
239 1 71 1 178 2 51 1 75 1 109 1 3 2 33 2 200 1 80 1 154 1 157 1 59 1 273 1 39 1 40 1 95 1 96 2 191 1 170 1 311 1 314 1 46 2 140 1 119 1 105 1 26 1 
214 2 144 1 291 1 107 1 108 1 50 1 339 1 178 2 243 1 53 1 244 1 33 2 183 1 56 1 248 1 299 1 342 1 93 2 63 2 96 2 169 1 376 2 136 1 378 2 231 1 379 1 334 1 234 1 316 1 236 2 359 1 
73 1 0 1 50 1 264 1 63 2 280 1 348 1 199 2 78 1 378 2 19 1 91 1 321 1 236 2 251 1 288 1 359 1 203 1 120 1 
73 1 0 1 114 1 50 1 63 1 280 1 348 1 199 2 378 1 91 1 321 1 236 1 251 1 288 1 359 1 203 1 120 1 
344 1 73 1 50 1 63 1 53 1 78 1 378 1 234 1 315 1 160 1 236 1 274 1 359 1 104 1 
73 1 0 1 50 1 264 1 63 1 280 1 348 1 199 2 78 1 378 1 91 1 321 1 236 1 251 1 288 1 359 1 203 1 120 1 
36 1 
214 2 291 1 50 1 339 1 178 2 243 1 2 1 53 1 31 2 3 2 125 1 33 3 156 1 344 1 189 1 205 1 207 1 63 1 96 3 376 1 169 1 136 1 378 1 231 1 379 1 46 2 141 1 234 1 316 1 236 1 119 1 359 1 
254 1 27 1 343 4 257 1 309 1 349 2 331 1 209 1 219 4 87 1 98 2 69 2 301 2 286 1 306 2 
27 1 81 1 219 1 301 1 224 1 306 1 184 1 
27 1 30 1 296 1 55 1 200 1 219 2 87 1 301 1 306 1 307 1 254 1 343 1 191 1 209 1 69 1 286 1 25 1 
50 4 53 3 200 5 158 1 301 2 304 1 341 2 307 3 306 8 254 4 344 1 343 12 309 1 63 3 258 2 349 6 209 4 19 1 69 6 23 1 21 2 116 2 212 2 359 3 25 5 177 2 27 9 215 2 181 2 266 2 367 2 217 2 184 1 219 8 87 4 320 2 372 2 275 2 374 2 224 1 223 1 375 1 191 5 282 1 331 2 378 3 232 2 139 2 98 6 141 3 234 10 286 4 236 3 290 3 
27 8 242 1 148 1 124 1 200 1 217 2 83 1 219 5 84 1 87 2 302 1 301 2 307 1 306 5 254 2 343 6 255 1 309 1 258 2 191 1 349 5 351 1 331 1 137 1 209 2 232 1 139 2 98 5 69 3 116 2 286 2 336 1 212 2 25 1 177 2 
27 2 364 1 178 1 52 1 245 1 31 1 3 1 33 1 200 1 5 1 87 1 369 1 306 2 254 1 189 1 258 1 96 1 191 1 229 1 209 1 232 1 46 1 116 2 286 1 117 1 262 1 287 1 177 2 
254 1 27 1 224 1 184 1 209 1 219 1 87 1 301 1 286 1 306 1 
27 5 343 10 258 2 349 5 367 1 217 2 219 5 232 1 139 2 98 5 69 5 116 2 212 2 177 2 306 5 
219 1 301 1 191 1 25 1 200 1 307 1 
27 2 50 1 53 1 149 1 200 3 87 2 304 1 274 1 306 2 307 2 254 2 344 2 63 4 309 2 64 1 191 3 331 2 68 1 209 2 45 1 261 1 378 4 23 2 234 1 286 1 236 4 359 1 25 4 104 1 
154 1 115 1 170 1 
154 1 115 1 170 1 
154 1 113 1 289 1 170 1 80 1 
154 1 115 1 170 1 
154 1 37 1 170 1 
154 1 37 1 170 1 
154 1 37 1 170 1 
154 1 170 1 
109 1 105 1 
238 2 214 2 246 1 366 2 218 1 5 1 83 1 56 4 302 1 255 1 257 1 258 1 376 8 169 1 136 1 229 1 97 1 231 1 379 4 316 1 117 1 336 1 177 1 
238 3 214 4 363 1 366 2 246 1 217 1 5 1 218 1 83 1 56 6 302 1 255 2 257 1 258 1 347 1 376 11 169 2 229 1 136 2 377 1 97 1 231 2 379 5 117 1 316 2 336 1 212 1 177 2 
238 4 363 1 214 6 240 1 242 1 246 1 366 3 124 1 217 2 5 1 218 1 83 1 84 1 56 9 302 1 255 1 257 1 258 3 376 19 169 3 229 1 377 1 136 3 137 1 97 1 231 3 139 2 379 10 117 1 316 3 336 1 212 2 177 3 
238 5 363 1 240 1 214 6 242 1 246 1 366 3 124 1 217 2 5 1 218 1 83 1 84 1 56 10 302 1 255 1 257 1 258 2 376 17 169 3 229 1 377 2 136 3 137 1 97 1 231 3 139 1 379 7 117 1 316 3 336 1 212 2 177 3 
238 2 214 2 246 1 366 2 218 1 5 1 83 1 56 4 302 1 255 1 257 1 258 1 376 8 169 1 136 1 229 1 97 1 231 1 379 4 316 1 117 1 336 1 177 1 
238 2 214 2 242 1 246 1 366 1 124 1 217 2 83 1 84 1 56 6 302 1 255 1 258 2 376 12 169 1 377 1 136 1 137 1 231 1 139 2 379 6 316 1 336 1 212 2 177 2 
238 5 363 1 214 8 240 2 242 1 246 1 366 3 124 1 217 2 5 1 218 1 83 1 84 1 56 10 302 1 255 1 257 1 258 2 376 18 169 4 229 1 377 2 137 1 136 4 97 1 231 4 139 1 379 8 117 1 316 4 336 1 212 2 177 3 
238 6 214 8 240 2 242 1 246 1 366 3 124 1 217 3 83 1 84 1 56 9 302 1 255 1 258 2 166 1 376 16 169 4 377 3 137 1 136 4 231 4 139 2 379 7 316 4 336 1 212 3 177 3 
238 6 258 1 366 3 376 7 229 3 377 3 218 1 97 2 5 3 56 3 379 4 117 1 177 1 
238 4 214 8 240 2 242 1 246 1 366 3 124 1 217 2 5 1 218 1 83 1 84 1 56 10 302 1 255 1 257 1 258 2 166 1 376 18 169 4 229 1 377 1 137 1 136 4 97 1 231 4 139 1 379 8 117 1 316 4 336 1 212 2 177 3 
238 3 214 4 240 1 257 1 258 1 366 2 376 8 169 2 377 1 136 2 229 1 218 1 97 1 5 1 56 4 231 2 379 4 117 1 316 2 177 1 
238 2 257 1 258 1 366 2 376 6 229 1 81 1 218 1 97 1 5 1 56 3 379 3 117 1 177 1 
238 2 363 1 214 2 258 1 366 1 169 1 217 1 376 4 136 1 377 1 139 1 231 1 56 2 379 2 316 1 212 1 177 1 
238 2 255 2 258 1 347 1 366 1 376 7 217 1 377 1 139 1 56 3 379 4 302 1 336 1 212 1 177 1 
238 9 240 2 214 4 366 5 217 2 5 2 218 1 56 11 7 1 302 2 255 2 62 1 257 1 258 3 347 1 327 1 376 23 169 2 229 2 377 4 136 2 97 1 139 2 231 2 379 12 117 1 316 2 212 2 177 3 
255 1 379 1 376 1 
56 1 302 1 376 1 
238 3 214 2 363 1 258 1 366 2 169 1 367 1 376 6 217 1 136 1 377 1 231 1 56 3 139 1 379 3 316 1 212 1 177 1 
238 2 214 2 242 1 246 1 366 1 124 1 217 2 83 1 84 1 56 6 302 1 255 1 258 2 376 12 169 1 377 1 136 1 137 1 231 1 139 2 379 6 316 1 336 1 212 2 177 2 
238 2 258 1 366 1 376 6 229 1 377 1 5 1 56 3 379 3 117 1 177 1 
238 2 240 1 214 2 366 1 327 1 376 3 169 1 377 1 229 1 136 1 5 1 97 1 218 1 56 1 231 1 379 2 316 1 
238 5 214 2 258 2 246 1 366 3 169 1 376 10 136 1 229 2 377 2 5 2 231 1 56 5 369 1 379 5 316 1 117 1 177 2 
238 1 214 2 246 1 169 1 217 1 376 2 136 1 377 1 231 1 56 2 316 1 177 1 
238 2 214 2 258 1 366 1 246 1 169 1 217 1 376 4 136 1 377 1 139 1 231 1 56 2 379 2 316 1 212 1 177 1 
238 2 240 1 214 6 166 1 327 1 246 1 366 1 376 3 169 3 136 3 229 1 377 1 5 1 231 3 56 1 379 2 316 3 
238 12 240 2 363 1 214 10 246 1 366 7 217 3 5 3 218 1 56 16 302 3 255 4 257 1 258 5 347 1 165 1 14 1 166 1 327 1 169 5 376 34 229 3 136 5 377 5 97 1 231 5 139 3 174 1 379 18 117 2 316 5 336 1 212 3 177 5 
178 1 146 1 111 1 96 1 103 1 119 1 33 1 
49 1 122 1 146 1 178 1 96 1 33 1 330 1 99 1 211 1 111 1 103 1 119 1 
81 1 378 1 344 1 50 1 63 1 234 1 53 1 274 1 236 1 359 1 104 1 
344 1 205 1 50 1 178 1 63 1 53 1 96 2 77 1 3 1 125 1 33 2 378 1 46 1 141 1 234 1 236 1 119 1 359 1 
50 1 364 1 178 2 53 2 150 1 125 1 3 1 77 1 33 2 266 1 320 1 204 1 205 1 63 1 96 2 378 1 46 2 141 2 23 1 234 3 236 1 119 1 359 1 
50 1 364 1 178 2 53 2 150 1 3 1 77 1 33 2 266 1 320 1 204 1 205 1 63 2 279 1 96 2 378 2 46 2 141 2 23 1 234 3 236 2 119 1 359 1 338 1 
275 1 344 1 50 1 63 3 53 1 191 2 266 1 200 2 82 1 219 1 378 3 141 1 23 1 301 1 234 4 320 1 118 1 236 3 25 1 341 1 359 1 338 1 290 1 
275 1 344 1 50 1 63 3 53 1 191 2 181 1 266 1 200 2 219 1 378 3 141 1 23 1 301 1 234 4 320 1 236 3 25 1 341 1 359 1 338 1 290 1 
378 1 50 1 63 1 259 1 236 1 359 1 
344 2 50 3 93 1 63 7 53 2 259 1 244 1 375 1 182 1 269 1 378 7 19 1 20 1 57 1 141 1 234 3 235 1 321 1 236 6 253 1 359 2 
238 2 214 4 263 1 291 2 108 1 50 1 339 2 178 1 53 1 2 1 366 2 3 1 77 1 125 1 33 2 153 1 5 1 218 1 156 1 56 3 299 1 325 1 308 1 205 1 257 1 258 1 63 1 96 2 376 6 169 2 229 1 136 2 97 1 378 1 231 2 19 1 379 3 46 1 141 1 234 1 285 1 117 1 316 2 236 1 119 2 359 1 177 1 
27 1 215 1 181 1 200 3 184 1 219 1 87 2 301 1 304 1 341 1 306 1 372 1 307 1 254 2 275 1 344 1 63 1 224 1 191 3 209 2 378 1 21 1 234 2 286 2 236 1 25 2 26 1 290 1 
50 2 63 2 53 1 259 1 375 1 282 1 378 2 19 1 141 1 234 2 236 2 341 1 359 1 
344 1 50 1 63 4 53 1 378 4 19 1 110 1 234 1 236 4 274 1 104 1 359 1 338 1 
373 1 361 1 50 2 63 2 53 1 182 1 378 2 300 1 141 1 23 1 234 1 235 1 236 2 359 1 
378 1 344 1 0 1 50 1 63 1 280 1 236 1 199 1 359 1 120 1 
50 1 63 2 53 1 244 1 378 2 19 1 334 1 234 1 321 1 236 2 359 1 
344 1 50 2 63 5 53 2 244 1 378 5 19 1 57 1 23 1 110 1 234 3 274 1 236 4 104 1 359 2 253 1 
344 1 50 2 63 5 53 2 244 1 378 5 19 1 23 1 110 1 234 3 274 1 236 4 176 1 104 1 359 2 253 1 
344 1 205 1 50 1 178 1 63 1 279 1 53 1 96 2 77 1 3 1 33 2 378 1 46 1 141 1 234 1 236 1 119 1 359 1 
50 2 63 1 53 1 375 1 182 1 378 1 20 1 141 1 23 1 234 1 235 1 236 1 359 1 
247 1 102 1 32 1 119 1 167 1 
204 1 275 1 364 1 147 1 150 1 191 2 32 2 167 1 200 2 16 1 247 2 219 1 271 1 233 1 58 1 301 1 102 2 119 1 26 1 
342 1 107 1 178 1 96 1 32 1 167 1 33 1 183 1 102 1 
271 1 147 1 167 1 
220 1 145 1 249 1 293 1 129 1 284 3 24 1 47 1 135 1 221 3 15 1 
180 1 126 1 135 1 227 1 
24 1 135 1 
81 1 145 1 24 1 135 1 
145 1 249 1 284 1 24 1 135 1 221 1 15 1 
28 1 284 1 132 1 
145 1 293 1 129 2 135 1 15 1 268 1 368 1 249 1 284 3 159 1 24 1 221 3 
145 1 241 1 249 1 284 2 24 1 47 1 135 1 221 2 15 1 
293 1 131 1 280 1 135 1 199 1 15 1 227 1 249 1 284 1 221 1 203 1 
249 1 293 1 284 1 24 1 135 1 221 1 15 1 
145 1 249 1 293 1 284 1 24 2 221 1 15 1 
171 1 72 1 249 2 293 1 284 2 24 1 187 1 135 1 221 2 15 2 
145 1 293 1 135 2 15 1 227 1 312 1 220 1 249 1 284 3 24 1 126 1 47 2 221 3 
145 1 0 1 293 1 280 1 135 1 199 2 168 1 15 1 249 1 284 2 24 1 47 1 288 1 221 2 203 1 
106 1 145 1 241 1 293 1 135 2 15 2 227 1 249 2 284 4 24 1 126 1 47 2 221 4 
145 1 249 1 293 1 284 1 24 1 135 1 221 1 15 1 
145 2 129 1 180 1 135 3 268 1 15 1 227 1 368 1 249 1 284 4 24 2 126 1 47 2 221 4 
145 1 190 1 222 1 249 1 293 1 284 2 318 1 24 1 47 1 135 1 221 2 15 1 
145 1 293 1 129 2 135 1 297 1 15 1 268 2 368 1 249 1 284 3 24 1 221 3 
29 1 9 2 303 1 135 2 
86 1 249 1 293 1 284 1 221 1 15 1 
145 1 220 1 249 1 293 1 284 2 24 1 47 1 135 1 221 2 15 1 
346 1 
145 1 249 1 293 1 284 1 24 1 135 1 221 1 15 1 

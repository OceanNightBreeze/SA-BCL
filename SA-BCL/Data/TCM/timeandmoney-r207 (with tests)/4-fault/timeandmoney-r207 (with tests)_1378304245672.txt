#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 220 187 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 220 181 163 165 (319,340) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 220 166 198 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 220 166 198 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 220 166 198 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 220 166 198 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 220 166 198 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 116 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 220 285 271 108 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 220 187 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 220 181 163 264 289 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 220 187 214 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 220 181 163 165 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 220 181 163 165 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 220 187 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 220 187 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 220 188 61 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 220 188 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 220 188 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 220 188 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 220 188 61 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 220 187 214 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 80 107 18 (39,307) (39,307) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 116 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 220 285 35 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 220 285 271 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 220 285 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 220 181 163 264 289 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 220 181 160 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 80 107 18 (39,307) (39,307) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 220 181 160 122 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 220 181 163 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 220 181 163 264 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 80 107 18 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 220 285 35 4 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 80 107 18 (39,307) (39,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 220 285 35 292 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 220 181 160 (39,307) (39,307) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 2 222 1 32 1 100 1 203 3 177 2 296 1 351 2 253 1 353 9 210 1 355 1 134 6 58 2 57 1 136 2 237 1 273 1 20 1 45 2 93 1 363 2 113 9 22 5 259 1 323 1 242 1 324 4 
169 2 222 1 32 1 100 1 203 3 177 2 296 1 351 2 253 1 353 9 210 1 355 1 134 6 57 1 136 2 58 2 237 1 273 1 20 1 45 2 93 1 363 2 113 9 22 5 259 1 323 1 242 1 324 4 
169 2 222 1 32 1 100 1 203 4 177 2 296 1 351 2 253 1 353 10 210 1 355 1 134 7 57 1 136 2 58 2 237 1 273 1 20 1 45 2 93 1 363 2 113 10 22 6 259 1 323 1 242 1 324 5 
169 2 222 1 32 1 100 1 203 2 177 2 296 1 351 2 253 1 353 7 210 1 355 1 134 4 57 1 136 2 58 1 237 1 20 1 45 2 93 1 363 2 113 7 22 4 259 1 323 1 242 1 324 3 
169 1 353 4 210 1 355 1 134 3 136 1 58 2 273 1 20 1 203 1 45 1 93 1 177 1 363 1 113 4 22 3 323 1 324 2 
169 1 351 1 142 1 353 2 161 1 210 1 355 1 136 1 237 1 45 1 177 1 113 2 22 1 259 1 323 1 179 1 
169 2 351 1 353 3 210 1 355 1 134 1 100 1 203 1 177 2 113 3 22 2 323 1 324 1 
169 2 31 1 32 1 100 1 203 3 177 2 351 1 353 9 210 1 355 1 134 7 58 2 136 1 273 1 20 1 93 1 45 1 363 1 113 9 22 5 279 1 323 1 242 1 324 4 
169 2 31 1 32 1 100 1 203 3 177 2 351 1 353 9 210 1 355 1 134 7 58 2 136 1 273 1 20 1 93 1 45 1 363 1 113 9 22 5 279 1 323 1 242 1 324 4 
116 1 341 1 325 1 
312 1 325 1 156 2 
260 2 167 2 109 2 344 1 130 2 7 2 322 2 202 1 
0 1 260 3 2 1 3 2 5 2 49 1 173 1 7 2 220 1 9 1 202 1 28 1 344 1 266 1 294 1 155 1 128 1 268 1 298 2 131 1 130 2 82 1 316 1 187 1 299 1 270 1 41 1 238 1 317 1 167 3 302 1 110 1 109 2 336 1 92 1 322 2 23 1 
260 1 167 1 109 1 130 1 89 1 7 1 157 1 322 1 202 1 127 1 
1 1 260 1 341 1 325 1 333 1 244 1 247 1 265 1 167 1 274 1 138 1 88 1 157 1 322 1 
260 1 341 1 325 1 130 1 333 1 244 2 7 1 265 2 167 1 274 1 138 1 109 1 88 1 157 1 322 1 
265 1 269 1 140 1 244 1 201 1 
265 2 341 1 325 1 140 1 244 2 201 1 267 1 174 1 
265 1 244 1 201 1 
260 1 130 1 244 1 7 1 202 1 265 1 167 1 109 1 140 1 89 1 157 1 158 1 127 1 322 1 
325 1 
265 2 341 1 325 1 140 1 244 2 44 1 201 1 267 1 
341 1 143 1 325 1 244 5 235 1 201 2 335 1 86 1 223 1 265 5 301 1 43 1 194 1 175 2 140 2 101 2 275 1 267 1 215 2 
116 1 344 1 
260 2 130 1 7 1 121 1 167 2 109 1 344 2 112 1 322 2 
340 1 151 1 306 1 
260 1 0 1 3 1 298 1 5 1 49 1 316 1 299 1 28 1 167 1 110 1 344 1 266 1 294 1 155 1 159 1 
0 1 260 2 3 1 298 1 5 1 49 1 316 1 130 1 299 1 6 1 7 1 191 1 28 1 167 2 110 1 151 1 266 1 294 1 155 1 322 1 
260 3 167 3 109 1 344 1 130 3 7 3 191 1 322 3 
260 1 167 1 130 1 89 1 7 1 157 1 322 1 
260 1 167 1 109 1 130 1 7 1 121 1 112 1 157 1 322 1 
0 1 2 1 260 4 3 1 5 1 49 1 173 1 6 1 244 1 7 3 9 1 202 1 28 1 265 1 224 1 344 1 266 1 294 1 155 1 157 1 128 1 268 1 298 1 131 1 316 1 130 3 333 1 299 1 270 1 133 1 238 1 191 1 317 1 274 1 167 4 138 1 302 1 110 1 109 2 336 1 88 1 112 1 322 3 23 1 
1 1 260 2 167 2 344 1 185 1 130 1 7 1 322 2 191 1 
260 3 311 1 325 1 130 3 333 1 244 1 6 1 7 3 133 1 191 2 265 1 167 3 274 1 138 1 109 1 88 1 112 1 157 1 322 3 
260 2 340 1 130 2 7 2 191 1 167 2 109 1 151 1 112 1 322 2 
260 1 0 1 3 1 298 1 5 1 49 1 316 1 299 1 28 1 167 1 110 1 344 1 266 1 294 1 155 1 
260 1 0 1 3 1 298 1 5 1 49 1 316 1 328 1 28 1 167 1 110 1 344 1 294 1 155 1 114 1 
181 1 182 1 340 1 252 1 131 1 173 1 144 1 220 1 163 1 245 1 9 1 165 1 238 2 302 2 151 1 336 1 319 1 306 1 268 1 128 1 23 1 102 1 
260 1 167 1 192 1 130 1 333 1 7 1 157 1 322 1 
1 1 260 5 185 1 130 4 6 1 7 4 191 2 167 5 109 1 344 1 112 1 278 1 322 5 308 1 
260 2 167 2 192 1 130 2 89 1 7 2 157 1 322 2 
123 1 280 1 
123 1 280 1 
313 1 255 1 
313 1 255 1 
313 1 255 1 
329 1 123 1 280 1 
208 1 123 1 280 1 
313 1 123 2 255 1 145 1 67 1 280 2 
329 1 123 1 280 1 
329 1 123 1 280 1 
123 1 162 1 280 1 
123 1 162 1 280 1 
123 1 162 1 280 1 
170 2 325 1 231 1 244 2 54 2 8 1 40 1 149 2 213 2 265 2 139 2 78 1 123 2 111 1 291 3 90 1 67 1 69 1 280 2 
260 2 244 1 7 2 120 1 12 1 149 1 265 1 344 1 123 1 291 1 124 1 208 1 130 2 54 1 40 1 213 1 139 1 167 2 362 1 62 1 193 1 276 1 280 1 322 2 
45 1 363 1 136 1 
161 1 45 1 136 1 
30 1 161 1 99 1 45 3 363 2 321 1 
119 1 161 1 99 1 45 2 363 1 321 1 
161 1 99 1 45 2 363 1 321 2 
312 1 217 1 283 1 143 2 341 1 284 1 325 2 244 5 201 1 221 1 12 1 147 2 264 1 29 1 223 1 265 5 175 1 101 1 267 1 156 2 181 1 163 1 358 1 212 1 164 1 190 1 86 1 62 1 140 4 276 1 215 1 
312 3 217 4 283 4 143 6 341 1 284 2 325 5 144 1 262 1 244 9 327 1 201 6 221 3 264 3 223 1 265 9 175 2 101 2 295 5 267 1 156 7 249 1 102 1 181 3 269 5 83 1 163 3 358 1 212 2 86 4 360 1 194 1 140 7 276 4 215 2 197 1 
260 1 312 1 217 1 283 1 341 1 284 1 143 2 325 2 244 3 7 1 221 1 202 1 147 1 29 1 264 1 265 3 175 1 101 1 157 1 156 2 127 1 158 1 181 1 130 1 163 1 212 1 190 1 86 1 167 1 109 1 194 1 140 2 89 1 276 1 215 1 322 1 
283 2 143 4 284 1 325 3 244 4 7 1 327 1 147 2 202 1 101 1 157 1 156 4 249 1 158 1 163 2 212 1 167 1 109 1 215 1 217 2 312 2 260 1 341 1 221 2 264 2 29 1 265 4 175 1 127 1 181 2 130 1 86 1 190 1 194 1 140 3 89 1 276 2 197 1 322 1 
110 1 116 1 103 1 
96 1 110 1 
34 1 
0 1 110 1 
0 1 110 3 125 1 103 2 155 1 315 1 
0 1 110 1 155 1 
110 1 293 1 
166 1 26 1 220 1 198 1 
166 1 26 1 220 1 198 1 
166 1 26 1 220 1 154 1 198 1 
166 1 26 1 220 1 198 1 
166 1 26 1 220 1 198 1 
169 1 338 1 3 1 5 1 342 1 28 1 30 1 14 1 294 1 177 1 314 1 180 1 351 1 298 1 353 2 161 1 210 1 355 1 134 1 136 1 272 1 256 1 304 1 91 1 277 1 45 2 363 1 113 2 22 1 323 1 
169 1 338 1 3 1 5 1 342 1 28 1 30 1 14 1 294 1 177 1 314 1 230 1 351 1 298 1 353 3 161 1 210 1 356 1 55 1 134 2 136 1 272 1 256 1 304 1 277 1 45 2 363 1 113 3 22 1 323 1 
338 1 3 1 5 1 28 1 30 1 14 1 294 1 314 1 230 1 351 1 298 1 353 2 161 1 210 1 356 1 134 2 136 1 272 1 256 1 304 1 45 2 363 1 113 2 22 1 323 1 
0 1 169 1 351 2 3 1 73 1 298 1 5 1 49 1 353 1 287 1 55 1 28 1 318 1 272 2 150 1 110 1 361 1 256 2 294 1 177 1 113 1 314 2 47 1 
169 1 338 1 3 1 5 1 342 1 28 1 30 1 14 1 294 1 177 1 314 1 351 1 298 1 353 1 161 1 355 1 356 1 136 1 272 1 256 1 304 1 91 1 277 1 45 2 363 1 113 1 
42 1 
0 1 1 1 3 2 5 2 143 2 49 2 325 2 50 4 286 2 244 5 201 6 146 1 247 1 101 1 294 1 156 2 157 1 206 1 298 2 333 1 212 1 19 2 167 1 110 1 63 2 65 2 305 1 21 2 215 1 312 2 260 1 171 2 341 1 27 1 74 1 223 1 28 1 265 5 175 1 79 1 267 3 36 2 37 1 132 1 84 1 359 1 236 1 86 2 87 1 274 1 138 1 361 1 88 1 322 1 47 1 
260 1 1 1 50 2 74 1 244 3 201 2 146 1 247 1 265 3 267 1 157 1 333 1 84 1 236 1 87 1 274 1 167 1 138 1 88 1 44 1 65 1 322 1 
260 1 1 1 341 1 50 3 325 1 74 1 244 3 201 1 146 1 247 1 265 3 267 1 157 1 36 1 333 1 84 1 236 1 87 1 274 1 167 1 138 1 88 1 44 1 322 1 
260 1 1 1 341 1 50 3 325 1 74 1 244 3 201 2 146 1 247 1 265 3 267 1 157 1 36 1 333 1 84 1 236 1 87 1 274 1 167 1 138 1 88 1 44 1 65 1 21 1 322 1 
1 1 143 1 50 6 325 5 286 2 244 5 201 7 146 1 247 1 290 1 101 1 330 1 157 1 333 1 19 2 167 1 303 1 63 2 65 4 305 1 21 4 215 1 260 1 312 2 117 1 171 2 341 5 74 1 223 1 265 5 175 1 267 3 36 4 357 1 84 1 236 1 359 1 86 1 87 1 138 1 274 1 88 1 44 1 322 1 
1 1 143 1 50 4 325 2 286 2 244 4 201 4 146 1 247 1 101 1 157 1 156 2 333 1 19 2 167 1 63 2 305 1 65 2 21 2 215 1 260 1 312 2 171 2 341 1 74 1 223 1 265 4 175 1 79 1 267 2 36 2 84 1 236 1 359 1 86 1 87 1 138 1 274 1 88 1 322 1 
312 2 260 1 1 1 171 2 341 1 143 1 325 1 50 4 286 2 74 1 244 4 201 4 146 1 247 1 223 1 265 4 175 1 101 1 267 2 330 1 157 1 36 2 333 1 357 1 84 1 359 1 236 1 19 2 86 1 87 1 274 1 167 1 138 1 303 1 88 1 63 2 65 2 305 1 21 2 215 1 322 1 
312 2 260 1 1 1 171 2 341 1 143 1 325 1 50 4 286 2 74 1 244 4 201 4 146 1 247 1 223 1 265 4 175 1 101 1 267 2 330 1 157 1 36 2 333 1 357 1 84 1 359 1 236 1 19 2 86 1 87 1 274 1 167 1 138 1 303 1 88 1 63 2 65 2 305 1 21 2 215 1 322 1 
260 1 1 1 281 1 341 1 143 1 325 1 219 1 50 4 286 2 74 1 244 4 201 4 146 1 247 1 223 1 265 4 225 1 175 1 101 1 267 2 156 2 157 1 183 2 36 2 333 1 84 1 359 1 236 1 86 1 87 1 274 1 167 1 138 1 303 1 88 1 63 2 320 2 65 2 21 2 215 1 322 1 
312 2 260 1 1 1 171 2 117 1 341 1 143 1 325 1 50 5 286 2 74 1 244 4 201 5 146 1 223 1 247 1 265 4 175 1 101 1 267 2 330 1 157 1 36 3 333 1 357 1 84 1 359 1 236 1 19 2 86 1 87 1 274 1 167 1 138 1 303 1 88 1 63 2 305 1 65 3 21 3 215 1 322 1 
312 2 260 1 1 1 171 2 117 1 341 1 143 1 325 1 50 5 286 2 74 1 244 4 201 5 146 1 223 1 247 1 265 4 175 1 101 1 267 2 330 1 157 1 36 3 333 1 357 1 84 1 359 1 236 1 19 2 86 1 87 1 274 1 167 1 138 1 303 1 88 1 63 2 305 1 65 3 21 3 215 1 322 1 
1 1 143 1 50 4 325 1 286 2 244 4 201 4 146 1 247 1 101 1 157 1 156 2 333 1 167 1 63 2 65 2 21 2 215 1 260 1 341 1 219 1 74 1 223 1 265 4 175 1 79 1 267 2 183 2 36 2 84 1 236 1 359 1 86 1 87 1 138 1 274 1 88 1 320 2 322 1 
181 1 251 1 18 1 116 1 160 1 131 1 173 1 211 1 220 1 245 1 9 1 39 1 107 1 336 1 307 1 268 1 128 1 23 1 
352 1 285 1 131 1 173 1 220 1 9 1 271 1 238 1 108 1 302 1 151 1 336 1 195 1 306 1 268 1 128 1 23 1 
260 1 352 1 184 1 130 1 131 1 187 1 173 1 6 1 270 1 7 1 220 1 9 1 238 1 191 1 167 1 302 1 336 1 126 1 322 1 23 1 128 1 268 1 
0 1 2 1 260 2 340 1 3 1 5 1 218 1 49 1 173 2 6 1 7 1 220 1 9 2 246 1 264 1 289 1 28 1 151 1 266 1 294 1 155 1 268 2 128 2 181 1 352 1 298 1 316 1 131 2 130 1 233 1 299 1 270 1 163 1 191 1 238 2 167 2 110 1 302 2 336 2 94 1 306 1 322 1 23 2 
3 1 298 1 5 1 49 1 131 1 187 1 173 1 220 1 9 1 336 1 214 1 153 1 268 1 128 1 23 1 
181 1 260 1 352 1 131 1 130 1 173 1 7 1 220 1 163 1 9 1 264 1 167 1 109 1 336 1 112 1 322 1 115 1 268 1 128 1 23 1 
181 1 336 1 131 1 173 1 220 1 163 1 245 1 9 1 165 1 23 1 128 1 268 1 
251 1 340 1 252 1 131 1 173 1 144 1 211 1 245 1 9 1 238 2 302 2 151 1 336 1 306 1 268 1 128 1 23 1 102 1 
181 1 336 1 131 1 173 1 220 1 163 1 245 1 9 1 264 1 23 1 128 1 268 1 
181 1 336 1 131 1 173 1 220 1 163 1 153 1 9 1 165 1 23 1 128 1 268 1 
251 1 340 1 252 1 131 1 173 1 144 1 211 1 9 1 238 2 302 2 151 1 336 1 153 1 306 1 268 1 128 1 23 1 102 1 
181 1 336 1 131 1 173 1 220 1 163 1 153 1 9 1 264 1 23 1 128 1 268 1 
181 1 336 1 131 1 173 1 220 1 163 1 9 1 264 1 23 1 128 1 268 1 
0 1 2 1 260 1 3 1 5 1 49 1 173 1 220 1 9 1 28 1 344 1 266 1 294 1 155 1 268 1 128 1 298 1 316 1 131 1 187 1 299 1 270 1 238 1 167 1 302 1 110 1 336 1 23 1 
0 1 260 1 3 1 5 1 49 1 173 1 220 1 9 1 328 1 28 1 344 1 294 1 155 1 268 1 128 1 298 1 316 1 131 1 187 1 270 1 238 1 240 1 167 1 302 1 110 1 336 1 114 1 23 1 
181 1 336 1 352 1 131 1 173 1 220 1 163 1 9 1 264 1 23 1 128 1 268 1 
2 1 0 1 260 1 3 1 5 1 218 1 173 1 220 1 9 1 28 1 264 1 266 1 294 1 155 1 180 1 268 1 128 1 181 1 298 1 316 1 131 1 299 1 163 1 167 1 110 1 336 1 23 1 
181 1 260 1 352 1 131 1 130 1 173 1 7 1 220 1 163 1 9 1 264 1 167 1 109 1 336 1 112 1 322 1 332 1 268 1 128 1 23 1 
129 1 302 1 61 1 336 1 131 1 188 1 220 1 263 1 9 1 178 1 238 1 17 1 23 1 128 1 
129 1 302 1 61 1 336 1 131 1 188 1 220 1 263 1 9 1 178 1 238 1 17 1 23 1 128 1 
129 1 302 1 61 1 336 1 131 1 188 1 220 1 263 1 9 1 178 1 238 1 17 1 23 1 128 1 
129 1 302 1 61 1 336 1 131 1 188 1 220 1 263 1 9 1 178 1 238 1 17 1 23 1 128 1 
129 1 302 1 61 1 336 1 131 1 188 1 220 1 263 1 9 1 178 1 238 1 17 1 23 1 128 1 
139 1 123 1 90 1 54 1 8 1 67 1 68 1 280 1 213 1 149 1 
208 1 124 1 
309 1 139 1 207 1 209 1 123 1 54 1 280 1 213 1 149 1 
170 1 325 1 231 1 244 1 54 1 8 1 40 1 149 1 213 1 265 1 139 1 78 1 123 1 111 1 291 2 90 1 67 1 280 1 
170 1 325 1 231 1 244 1 54 1 8 1 40 1 149 1 213 1 265 1 139 1 78 1 123 1 111 1 291 2 90 1 67 1 280 1 
170 1 325 1 231 1 244 1 54 1 8 1 40 1 149 1 213 1 265 1 139 1 78 1 123 1 111 1 291 2 90 1 67 1 280 1 
329 1 145 1 228 1 
329 1 145 1 228 1 
345 1 162 1 
345 1 162 1 145 1 
193 1 120 1 
260 2 170 1 244 1 7 2 120 1 12 1 149 1 265 1 344 1 123 1 291 1 124 1 208 1 130 2 38 1 54 1 213 1 167 2 139 1 362 1 62 1 193 1 111 1 140 1 276 1 280 1 322 2 
329 1 228 1 
345 1 162 1 145 1 
260 2 352 1 131 1 187 1 173 1 220 1 9 1 167 2 336 1 214 1 337 1 241 1 216 1 322 2 23 1 128 1 71 1 268 1 
338 1 3 2 298 2 5 2 161 1 356 1 136 1 13 1 28 1 30 1 239 1 14 1 349 1 294 1 45 2 277 1 363 1 314 1 180 1 
338 1 3 1 298 1 5 1 161 1 356 1 136 1 13 1 148 1 28 1 30 1 14 1 294 1 45 2 277 1 363 1 314 1 
0 1 297 1 3 1 298 1 5 1 49 1 28 1 239 1 150 1 110 1 361 1 294 1 314 1 47 1 
338 1 3 1 298 1 5 1 161 1 356 1 136 1 13 1 28 1 30 1 239 1 14 1 349 1 294 1 45 2 277 1 363 1 314 1 
97 1 
116 1 341 1 143 1 43 1 325 1 335 1 86 1 
312 1 171 1 143 1 341 1 325 2 244 1 201 1 223 1 265 1 175 1 101 1 267 1 156 1 86 1 19 1 305 1 215 1 
0 1 96 3 3 1 5 1 48 2 283 5 49 1 143 7 325 5 144 1 244 5 201 5 289 2 15 2 101 3 294 2 155 1 156 9 102 1 298 1 103 2 163 2 212 2 110 6 215 3 217 5 312 4 261 2 24 1 341 1 221 2 28 1 223 3 264 2 265 5 346 1 175 3 125 1 267 3 181 2 37 1 232 2 189 1 86 6 137 2 88 2 
217 3 312 2 283 3 143 4 325 2 285 1 11 1 223 1 264 2 175 1 292 1 101 1 35 1 205 1 156 4 181 2 163 2 86 2 168 1 195 1 66 1 215 1 
260 1 143 2 144 1 199 2 244 1 7 1 221 1 202 1 223 1 265 1 122 1 175 1 101 1 157 1 158 1 127 1 181 2 18 1 160 1 130 1 357 1 86 2 107 1 167 1 109 1 89 1 215 1 322 1 
143 1 341 1 325 1 335 1 86 1 223 1 43 1 175 1 101 1 215 1 
181 1 217 1 312 1 283 1 143 2 325 1 163 1 221 1 264 1 156 2 
265 1 341 1 325 1 244 1 201 1 267 1 
0 1 3 4 172 1 5 4 49 2 143 2 27 1 244 3 201 4 28 1 223 1 265 3 248 1 175 2 16 2 101 2 294 1 267 2 298 4 37 2 132 1 85 1 212 2 86 2 110 1 361 1 194 1 215 2 47 1 
260 3 2 1 0 1 3 1 5 1 49 1 173 1 7 2 9 1 202 1 28 1 344 1 266 1 294 1 155 1 128 1 268 1 298 1 130 2 316 1 131 1 299 1 270 1 238 1 317 1 167 3 302 1 109 2 110 1 336 1 322 2 23 1 
312 1 217 1 143 1 341 1 325 2 37 1 212 1 86 1 223 1 175 1 101 1 156 2 215 1 
139 1 54 1 105 1 
139 1 152 1 120 1 54 1 8 1 
139 1 54 1 105 1 
139 1 54 1 105 1 
139 1 81 1 54 1 
139 1 81 1 54 1 
139 1 81 1 54 1 
139 1 54 1 
123 1 280 1 
251 1 18 1 131 2 211 1 9 2 39 1 107 1 77 1 336 2 80 1 307 1 128 2 23 2 
181 1 251 1 18 1 116 1 160 1 211 1 220 1 39 1 307 1 107 1 
181 1 336 1 131 1 200 1 220 1 163 1 9 1 264 1 23 1 128 1 
302 1 285 1 195 1 220 1 35 1 238 1 
302 1 285 1 195 1 220 1 271 1 238 1 
302 1 195 1 238 1 
285 1 220 1 
181 1 302 1 220 1 163 1 238 1 264 1 289 1 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
181 1 160 1 220 1 
251 1 18 1 131 1 354 1 211 1 9 1 39 1 238 1 107 1 302 1 77 1 336 1 80 1 307 1 128 1 23 1 
181 1 251 1 18 1 122 1 160 1 211 1 220 1 107 1 
181 1 336 1 131 1 220 1 163 1 9 1 178 1 23 1 128 1 
181 1 336 1 131 1 220 1 163 1 9 1 178 1 264 1 23 1 128 1 
251 1 18 1 131 2 211 1 76 1 9 2 107 1 336 2 80 1 178 1 128 2 23 2 
4 1 285 1 131 3 200 1 220 1 9 3 76 1 238 1 302 1 336 3 195 1 35 1 178 1 128 3 23 3 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
285 1 131 2 200 1 220 1 9 2 238 1 302 1 336 2 195 1 292 1 35 1 178 1 128 2 23 2 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
302 1 336 1 285 1 195 1 131 1 292 1 220 1 35 1 9 1 178 1 238 1 23 1 128 1 
285 1 131 2 200 1 220 1 9 2 238 1 302 1 336 2 195 1 292 1 35 1 178 1 128 2 23 2 
285 1 131 2 220 1 76 1 9 2 238 1 302 1 336 2 195 1 292 1 35 1 178 1 128 2 23 2 
251 1 18 1 211 1 39 1 80 1 307 1 107 1 
285 1 131 2 220 1 76 1 9 2 238 1 302 1 336 2 195 1 292 1 35 1 178 1 128 2 23 2 
260 1 1 1 167 1 344 1 185 1 104 1 322 1 
1 1 260 1 185 1 56 1 104 1 167 1 344 1 348 1 257 1 204 1 46 1 322 1 
0 1 110 1 361 1 3 1 116 1 5 1 298 1 49 1 294 1 28 1 47 1 
0 1 260 2 3 1 298 1 5 1 49 1 316 1 130 1 299 1 7 1 191 1 28 1 167 2 110 1 344 1 294 1 155 1 322 1 
0 2 260 2 3 1 298 1 5 1 316 1 130 1 333 1 299 1 7 2 191 1 28 1 138 1 167 2 110 3 344 1 16 1 293 1 294 1 227 1 155 2 157 1 322 2 
0 2 260 2 3 2 298 2 5 2 316 1 130 1 333 1 7 2 191 1 28 1 138 1 167 2 110 3 344 1 16 1 293 1 294 1 227 1 155 2 157 1 322 2 114 1 250 1 
0 1 96 1 3 3 298 3 5 3 49 1 341 1 118 1 325 1 244 2 103 1 201 1 28 1 265 2 110 4 88 1 16 1 293 1 294 1 227 1 155 1 70 1 250 1 
0 1 96 1 3 3 298 3 5 3 49 1 341 1 325 1 232 1 244 2 103 1 201 1 28 1 265 2 110 4 88 1 16 1 293 1 294 1 227 1 155 1 250 1 
3 1 5 1 298 1 226 1 294 1 28 1 
229 1 0 2 141 1 3 7 298 6 5 7 53 1 243 1 49 2 51 1 356 1 98 1 28 2 59 1 110 3 125 1 226 1 294 3 92 1 155 1 180 1 
0 1 260 2 2 1 3 1 5 1 218 1 173 2 7 1 220 1 9 2 28 1 266 1 294 1 155 1 268 2 128 2 180 1 181 1 251 1 18 1 352 1 298 1 160 1 316 1 131 2 130 1 299 1 211 1 39 1 191 1 107 1 167 2 110 1 336 2 94 1 307 1 322 1 71 1 23 2 
96 1 3 1 172 1 5 1 48 1 341 1 143 1 49 1 325 1 244 3 201 2 223 2 265 3 15 1 175 2 101 2 267 1 298 1 232 1 103 1 335 1 86 1 137 1 110 2 88 1 43 1 140 1 215 2 
0 1 3 2 24 1 298 2 5 2 103 1 28 1 110 2 125 1 226 1 294 2 155 1 180 1 
0 1 3 4 298 4 5 4 49 1 75 1 28 1 361 1 110 1 294 1 250 1 180 1 47 1 
229 1 0 1 339 1 141 1 3 2 298 2 5 2 343 1 28 1 110 1 16 1 294 2 33 1 155 1 
338 1 3 1 5 1 298 1 49 1 161 1 294 1 45 1 136 1 28 1 
0 1 3 2 298 2 5 2 25 1 53 1 356 1 28 1 110 1 294 1 180 1 
0 2 3 5 298 4 5 5 49 1 53 1 51 1 75 1 28 2 59 1 361 1 110 3 16 1 294 2 47 1 180 1 
0 2 3 5 298 4 5 5 49 1 53 1 51 1 75 1 135 1 28 2 361 1 110 3 16 1 294 2 47 1 180 1 
0 1 260 2 3 1 298 1 5 1 49 1 316 1 130 1 7 1 191 1 28 1 167 2 110 1 344 1 294 1 155 1 322 1 114 1 
229 1 0 1 141 1 3 1 298 1 5 1 98 1 28 1 110 1 16 1 125 1 294 2 155 1 
282 1 344 1 288 1 106 1 258 1 
282 2 341 1 325 1 333 1 244 2 334 1 133 1 300 1 106 2 288 2 265 2 138 1 274 1 88 1 60 1 344 1 140 1 157 1 258 1 
282 1 260 1 106 1 167 1 337 1 241 1 258 1 216 1 322 1 
334 1 300 1 258 1 
116 1 210 1 22 1 323 1 
169 1 353 1 210 1 177 1 113 1 22 1 323 1 
351 1 353 1 256 1 
169 1 72 1 186 1 353 3 355 1 210 1 237 2 176 1 177 1 113 3 22 1 323 1 
169 1 353 2 210 1 134 1 177 1 113 2 22 1 58 1 323 1 
169 1 353 1 20 1 355 1 45 1 363 1 177 1 113 1 22 1 136 1 324 1 
169 1 353 1 210 1 355 1 177 1 113 1 22 1 
169 1 353 1 210 2 355 1 177 1 113 1 323 1 
169 2 353 2 326 1 210 1 355 1 234 1 64 1 177 2 113 2 22 1 
169 1 353 3 210 1 355 1 134 2 32 1 203 1 177 1 113 3 22 2 323 1 242 1 324 1 
169 1 161 1 353 2 210 1 355 1 134 1 10 1 136 1 30 1 45 2 177 1 363 1 113 2 22 1 323 1 
169 2 353 4 210 1 355 1 134 2 58 1 273 1 203 1 177 2 113 4 22 2 323 1 324 1 
169 1 353 1 210 1 355 1 177 1 113 1 22 1 323 1 
169 1 72 1 353 4 210 2 134 2 237 1 254 1 176 1 203 1 177 1 113 4 22 3 323 2 324 1 
169 1 310 1 353 2 210 1 355 1 134 1 31 1 347 1 177 1 113 2 22 1 323 1 
169 1 72 2 353 3 355 1 210 1 237 2 176 1 177 1 113 3 22 1 364 1 323 1 
350 1 331 2 22 2 95 1 
169 1 52 1 353 1 355 1 177 1 113 1 
169 1 353 2 210 1 355 1 134 1 177 1 113 2 22 1 323 1 242 1 
196 1 
169 1 353 1 210 1 355 1 177 1 113 1 22 1 323 1 
169 1 353 3 355 1 210 1 134 1 237 1 177 1 113 3 22 1 323 1 242 1 
254 1 203 1 22 1 324 1 
210 1 22 1 

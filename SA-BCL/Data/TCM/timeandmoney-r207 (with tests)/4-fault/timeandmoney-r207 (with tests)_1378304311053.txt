#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 224 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 2 54 2 362 1 251 2 278 1 5 1 149 1 151 2 211 1 96 3 192 9 98 1 239 5 372 1 221 2 103 1 265 2 244 1 303 1 350 1 44 1 179 1 288 4 332 9 111 1 335 2 381 6 23 1 
137 2 54 2 362 1 251 2 278 1 5 1 149 1 151 2 211 1 96 3 192 9 98 1 239 5 372 1 221 2 103 1 265 2 244 1 303 1 350 1 44 1 179 1 288 4 332 9 111 1 381 6 23 1 335 2 
137 2 54 2 362 1 251 2 278 1 5 1 149 1 151 2 211 1 96 4 192 10 98 1 239 6 372 1 221 2 103 1 265 2 244 1 303 1 350 1 44 1 179 1 288 5 332 10 111 1 381 7 23 1 335 2 
137 2 54 2 362 1 251 2 278 1 5 1 151 2 211 1 96 2 192 7 98 1 239 4 372 1 221 2 103 1 265 2 244 1 303 1 350 1 44 1 179 1 288 3 332 7 111 1 381 4 23 1 335 1 
239 3 137 1 54 1 221 1 251 1 103 1 265 1 278 1 149 1 179 1 288 2 332 4 96 1 211 1 111 1 192 4 335 2 381 3 
239 1 54 1 372 1 221 1 73 1 197 1 251 1 103 1 265 1 278 1 44 1 179 1 332 2 151 1 380 1 192 2 
239 2 54 2 221 2 362 1 103 1 278 1 179 1 288 1 332 3 151 1 96 1 192 3 381 1 
137 1 54 2 362 1 251 1 209 1 278 1 149 1 151 1 96 3 211 1 192 9 238 1 239 5 221 2 103 1 265 1 350 1 179 1 288 4 332 9 111 1 381 7 23 1 335 2 
137 1 54 2 362 1 251 1 209 1 278 1 149 1 151 1 96 3 211 1 192 9 238 1 239 5 221 2 103 1 265 1 350 1 179 1 288 4 332 9 111 1 381 7 23 1 335 2 
282 1 132 1 20 1 
282 1 48 1 30 2 
184 1 185 2 154 1 300 2 147 2 120 2 296 2 160 2 
273 1 275 1 250 2 57 1 89 1 144 1 3 1 183 1 115 1 59 2 166 1 340 1 184 1 185 3 147 2 295 2 120 3 296 2 9 2 212 1 10 1 215 1 125 1 370 1 263 1 154 1 300 2 39 1 346 2 284 1 266 1 78 1 353 1 160 2 203 1 204 1 83 1 
185 1 154 1 300 1 147 1 120 1 296 1 307 1 160 1 68 1 226 1 
272 1 300 1 282 1 58 1 229 1 185 1 43 1 6 1 120 1 375 1 189 1 20 1 51 1 68 1 
272 2 300 1 282 1 58 1 229 1 185 1 43 2 147 1 296 1 120 1 375 1 160 1 20 1 51 1 68 1 
43 1 272 1 208 1 366 1 34 1 
43 2 272 2 282 1 208 1 264 1 366 1 20 1 269 1 
43 1 272 1 208 1 
272 1 154 1 300 1 185 1 43 1 147 1 119 1 296 1 120 1 307 1 160 1 366 1 68 1 226 1 
282 1 
43 2 272 2 282 1 208 1 366 1 309 1 20 1 269 1 
272 5 162 2 337 2 0 1 282 1 344 1 208 2 129 1 13 1 107 1 200 1 43 5 305 1 377 1 109 1 366 2 20 1 269 1 281 2 
184 1 132 1 
300 2 348 1 185 2 184 2 18 1 147 1 120 2 296 1 160 1 
247 1 213 1 172 1 
273 1 363 1 250 1 144 1 346 1 284 1 115 1 59 1 340 1 184 1 185 1 78 1 120 1 203 1 10 1 204 1 
300 5 141 2 198 1 88 1 348 1 185 5 184 1 108 1 147 4 296 4 120 5 331 1 160 1 189 1 
185 2 300 2 147 2 120 2 296 2 307 1 324 1 68 1 
273 1 300 1 250 1 141 1 88 1 144 1 115 1 346 1 284 1 59 1 340 1 185 2 147 1 78 1 296 1 120 2 203 1 10 1 213 1 204 1 
184 1 185 3 300 3 147 3 120 3 296 3 160 1 141 1 
185 1 300 1 147 1 120 1 296 1 307 1 68 1 
185 1 18 1 300 1 147 1 120 1 296 1 160 1 68 1 348 1 
358 1 272 1 273 1 275 1 250 1 141 1 88 1 89 1 144 1 3 1 115 1 58 1 59 1 229 1 166 1 340 1 184 1 231 1 185 4 147 3 295 1 120 4 296 3 9 2 212 1 10 1 68 1 125 1 370 1 263 1 154 1 300 3 284 1 346 1 348 1 266 1 43 1 78 1 375 1 160 2 203 1 204 1 51 1 83 1 
184 1 185 2 108 1 300 2 147 1 120 2 296 1 141 1 189 1 
205 1 358 1 272 1 300 3 282 1 141 2 88 1 58 1 229 1 348 1 185 3 43 1 147 3 375 1 296 3 120 3 160 1 68 1 51 1 
247 1 300 2 141 1 348 1 185 2 147 2 296 2 120 2 160 1 213 1 
273 1 250 1 144 1 346 1 284 1 115 1 59 1 340 1 184 1 185 1 78 1 120 1 203 1 10 1 204 1 
273 1 250 1 144 1 346 1 115 1 59 1 176 1 340 1 184 1 185 1 167 1 78 1 120 1 10 1 204 1 
215 2 247 2 125 1 263 1 371 1 86 1 275 1 323 1 228 1 89 1 14 1 3 1 253 1 222 1 166 1 285 1 295 4 95 1 122 1 9 2 212 2 270 1 213 2 172 2 
185 1 300 1 147 1 120 1 296 1 324 1 68 1 51 1 
304 1 315 1 
304 1 315 1 
37 1 339 1 
37 1 339 1 
37 1 339 1 
304 1 207 1 315 1 
304 1 207 1 315 1 
304 1 207 1 315 1 
304 1 169 1 315 1 
304 2 37 1 87 1 315 2 25 1 339 1 
304 1 315 1 80 1 
304 1 315 1 80 1 
304 1 315 1 80 1 
185 1 300 1 147 1 120 1 296 1 56 1 
272 1 56 1 114 1 338 1 315 1 185 1 232 1 147 1 119 1 365 1 120 1 296 1 65 1 68 1 154 1 155 1 300 1 128 1 283 1 302 1 327 1 43 1 304 1 329 1 307 1 160 1 226 1 
137 1 251 1 265 1 
251 1 380 1 265 1 
237 1 137 2 351 1 251 3 380 1 236 1 
237 1 137 1 351 1 251 2 79 1 380 1 
237 1 137 1 351 2 251 2 380 1 
162 1 272 5 86 1 337 1 55 1 0 3 139 1 208 1 314 2 90 1 253 1 122 1 366 4 30 3 262 2 369 2 281 1 321 1 282 2 301 1 323 1 220 1 129 2 102 1 104 1 75 1 76 1 107 1 43 5 48 1 269 1 20 1 
161 1 272 9 162 2 86 3 337 2 0 8 208 6 314 6 90 2 253 3 61 1 94 1 122 3 366 7 190 1 30 9 369 6 34 5 368 5 281 2 321 1 36 1 282 5 301 2 323 3 220 3 129 6 76 4 107 1 43 9 377 1 19 1 48 3 20 1 269 1 
162 1 272 3 86 1 55 1 337 1 0 3 314 2 90 1 253 1 366 2 122 1 30 4 262 1 281 1 369 2 282 3 301 1 323 1 220 1 102 1 129 2 76 1 43 3 377 1 48 2 20 1 
162 1 272 4 86 2 337 1 55 1 0 5 314 4 90 1 253 2 366 3 122 2 190 1 30 7 262 2 369 4 281 1 36 1 282 4 301 1 323 2 220 2 102 1 129 4 76 2 43 4 377 1 19 1 48 3 20 1 
294 1 132 1 144 1 
233 1 144 1 
22 1 
273 1 144 1 10 1 
316 1 144 1 
144 1 10 1 
294 2 273 1 144 3 10 1 293 1 50 1 
215 4 371 3 323 1 228 2 345 2 277 1 253 1 116 1 91 1 373 1 295 7 268 1 133 1 298 1 289 1 212 3 32 1 
215 4 371 3 323 1 228 2 345 2 277 1 253 1 116 1 91 1 373 1 295 7 268 1 133 1 298 1 289 1 212 3 32 1 
359 1 215 4 371 3 323 1 228 2 345 2 277 1 253 1 116 1 91 1 373 1 295 7 268 1 133 1 298 1 289 1 212 3 32 1 
248 4 86 3 275 1 228 5 277 1 3 1 116 2 253 4 91 2 166 1 62 1 295 31 121 1 122 3 298 2 8 1 9 2 212 15 32 2 215 16 125 1 371 10 220 3 323 4 326 3 345 3 347 1 105 1 373 1 158 1 268 1 133 1 49 1 289 5 
275 2 228 3 3 2 277 1 253 1 116 1 91 1 166 2 295 9 298 1 9 4 212 4 32 1 215 5 125 2 371 4 323 1 345 2 347 1 373 1 286 1 133 1 289 1 355 1 
137 1 54 1 250 1 251 2 115 1 252 1 59 1 340 1 278 1 257 1 187 1 170 1 151 1 150 1 192 2 236 1 239 1 100 1 38 1 221 1 40 1 346 1 103 1 265 1 130 1 306 1 179 1 332 2 380 1 381 1 
137 1 54 1 250 1 251 2 115 1 252 1 59 1 340 1 278 1 187 1 151 1 150 1 192 3 171 1 236 1 239 1 100 1 38 1 221 1 40 1 346 1 265 1 130 1 245 1 306 1 179 1 332 3 380 1 180 1 381 2 
239 1 137 1 38 1 100 1 250 1 251 2 115 1 346 1 265 1 59 1 252 1 340 1 130 1 278 1 245 1 306 1 187 1 179 1 332 2 151 1 380 1 180 1 192 2 236 1 381 2 
134 1 54 1 250 1 142 1 143 1 144 1 115 1 252 2 59 1 340 1 210 1 151 2 10 1 192 1 171 1 221 1 346 1 130 2 78 1 77 1 306 2 332 1 246 1 
137 1 54 1 250 1 251 2 115 1 252 1 59 1 340 1 257 1 187 1 151 1 150 1 192 1 236 1 100 1 38 1 221 1 40 1 346 1 103 1 265 1 130 1 245 1 306 1 332 1 380 1 
145 1 
162 1 337 1 0 2 163 1 1 4 208 6 250 2 292 1 115 1 58 1 59 2 4 1 340 1 6 1 120 1 10 1 124 1 68 1 173 2 11 2 300 1 129 2 74 1 346 2 223 1 78 2 352 1 20 1 269 3 272 5 276 1 143 1 144 1 90 1 229 1 185 1 27 1 234 2 189 1 30 2 235 1 97 2 319 2 281 1 194 1 282 2 196 1 107 1 43 5 375 1 159 2 48 2 333 2 246 1 51 1 
272 3 300 1 1 2 163 1 276 1 208 2 58 1 4 1 229 1 223 1 185 1 43 3 6 1 375 1 120 1 352 1 189 1 309 1 269 1 97 1 68 1 51 1 
272 3 300 1 282 1 1 3 163 1 276 1 208 1 58 1 4 1 229 1 223 1 185 1 43 3 6 1 375 1 120 1 352 1 189 1 309 1 333 1 269 1 20 1 68 1 51 1 
272 3 276 1 163 1 1 3 208 2 58 1 229 1 4 1 185 1 6 1 120 1 189 1 68 1 319 1 97 1 300 1 282 1 223 1 43 3 375 1 352 1 309 1 333 1 269 1 20 1 51 1 
112 1 162 1 337 1 0 1 1 5 163 1 208 7 58 1 4 1 6 1 119 1 7 1 296 1 120 2 68 2 173 2 11 2 300 2 129 1 223 1 307 1 352 1 309 1 20 1 269 3 226 1 272 5 274 1 276 1 229 1 185 2 27 1 147 1 234 2 189 1 97 4 319 4 281 1 154 1 282 1 196 1 328 1 107 1 43 5 374 1 375 1 159 2 160 1 48 2 333 3 51 1 
162 1 337 1 0 1 1 4 163 1 208 4 58 1 4 1 6 1 120 1 124 1 68 1 173 2 11 2 300 1 129 1 223 1 352 1 269 2 20 1 272 4 276 1 229 1 185 1 27 1 234 2 189 1 30 2 319 2 97 2 281 1 282 2 196 1 107 1 43 4 375 1 159 2 48 2 333 2 51 1 
112 1 272 4 162 1 274 1 337 1 0 1 276 1 163 1 1 4 208 4 58 1 229 1 4 1 185 1 27 1 6 1 7 1 120 1 234 2 189 1 97 2 319 2 68 1 281 1 173 2 11 2 300 1 282 1 196 1 129 1 223 1 107 1 43 4 375 1 159 2 352 1 48 2 333 2 20 1 269 2 51 1 
112 1 272 4 162 1 274 1 337 1 0 1 276 1 163 1 1 4 208 4 58 1 229 1 4 1 185 1 27 1 6 1 7 1 120 1 234 2 189 1 97 2 319 2 68 1 281 1 173 2 11 2 300 1 282 1 196 1 129 1 223 1 107 1 43 4 375 1 159 2 352 1 48 2 333 2 20 1 269 2 51 1 
272 2 300 1 1 2 163 1 276 1 58 1 4 1 229 1 223 1 185 1 43 2 6 1 375 1 120 1 352 1 224 1 189 1 68 1 51 1 
112 1 162 1 272 4 337 1 274 1 0 1 276 1 163 1 1 5 208 5 58 1 229 1 4 1 185 1 27 1 6 1 7 1 120 1 234 2 189 1 68 1 319 3 97 3 281 1 173 2 11 2 300 1 282 1 196 1 129 1 223 1 107 1 43 4 374 1 375 1 159 2 352 1 48 2 333 3 20 1 269 2 51 1 
112 1 162 1 272 4 337 1 274 1 0 1 276 1 163 1 1 5 208 5 58 1 229 1 4 1 185 1 27 1 6 1 7 1 120 1 234 2 189 1 68 1 319 3 97 3 281 1 173 2 11 2 300 1 282 1 196 1 129 1 223 1 107 1 43 4 374 1 375 1 159 2 352 1 48 2 333 3 20 1 269 2 51 1 
162 1 272 4 337 1 0 1 276 1 163 1 1 4 208 4 58 1 4 1 229 1 185 1 6 1 120 1 234 2 189 1 30 2 124 1 97 2 319 2 68 1 281 1 11 2 300 1 282 1 219 2 196 1 129 1 199 2 223 1 107 1 43 4 375 1 352 1 333 2 20 1 269 2 310 1 51 1 
247 1 275 1 228 2 89 1 277 1 3 1 116 1 253 1 91 1 166 1 184 2 295 6 9 2 212 3 213 1 172 1 215 3 125 1 263 1 371 2 323 1 345 1 222 1 373 1 132 1 133 1 
135 1 247 4 248 3 86 1 275 2 228 1 89 2 3 2 253 2 166 2 62 1 184 1 295 14 121 1 122 2 9 4 212 6 213 11 320 1 172 11 215 8 125 2 263 1 371 2 220 2 323 1 41 1 326 3 177 1 178 1 266 1 353 1 289 1 
135 1 247 1 273 1 275 1 250 1 363 1 141 1 88 1 144 1 89 1 115 1 3 1 59 1 340 1 166 1 184 1 185 2 147 1 120 2 296 1 295 2 9 2 10 1 212 1 215 1 125 1 263 1 218 1 300 1 284 1 346 1 175 1 266 1 78 1 353 1 354 1 203 1 204 1 
247 7 250 3 3 3 115 2 116 1 59 3 253 3 166 3 340 2 118 2 255 2 64 1 296 1 120 3 295 20 122 2 9 6 212 10 10 2 213 7 172 7 70 2 215 10 125 3 263 3 300 1 174 1 220 2 345 1 346 3 266 1 78 1 353 1 133 1 311 1 83 2 135 1 273 2 86 2 275 3 228 4 141 1 88 1 89 3 144 2 277 1 91 1 184 2 185 3 147 1 371 8 323 3 241 2 284 2 373 1 245 1 203 2 289 4 204 2 
275 2 250 8 141 1 144 3 89 2 143 1 115 2 3 2 183 2 59 8 230 1 340 2 166 2 185 1 147 1 120 1 296 1 295 2 170 1 260 1 9 4 212 1 10 2 367 1 215 1 125 2 263 2 300 1 195 1 325 1 346 7 15 1 222 1 17 1 266 1 245 1 78 2 353 1 246 1 
135 1 247 1 86 1 275 1 228 1 89 1 3 1 253 1 166 1 185 1 147 1 296 1 120 1 295 3 122 1 9 2 212 2 213 1 172 1 215 1 125 1 263 1 371 1 300 1 220 1 323 1 348 1 160 1 110 1 
215 2 247 1 125 1 263 1 371 1 275 1 89 1 3 1 253 1 222 1 166 1 295 2 122 1 289 1 9 2 213 1 270 1 172 1 
247 1 125 1 263 1 371 1 86 1 275 1 323 1 228 1 89 1 3 1 222 1 166 1 285 1 295 2 9 2 212 2 213 1 172 1 
247 2 86 1 275 1 228 1 89 1 3 1 253 1 166 1 295 4 122 1 9 2 212 2 213 2 172 2 215 2 125 1 263 1 371 2 220 1 323 1 222 1 289 1 
215 2 247 1 125 1 263 1 371 1 275 1 195 1 89 1 3 1 253 1 166 1 295 2 122 1 289 1 9 2 213 1 270 1 172 1 
247 1 125 1 263 1 371 1 86 1 275 1 323 1 195 1 228 1 89 1 3 1 166 1 285 1 295 2 9 2 212 2 213 1 172 1 
247 2 86 1 275 1 228 1 89 1 3 1 253 1 166 1 295 4 122 1 9 2 212 2 213 2 172 2 215 2 125 1 263 1 371 2 220 1 323 1 195 1 289 1 
247 2 86 1 275 1 228 1 89 1 3 1 253 1 166 1 295 4 122 1 9 2 212 2 213 2 172 2 215 2 125 1 263 1 371 2 220 1 323 1 289 1 
273 1 275 1 250 1 144 1 89 1 115 1 3 1 59 1 340 1 166 1 184 1 185 1 295 2 120 1 9 2 10 1 212 1 215 1 125 1 263 1 284 1 346 1 266 1 78 1 353 1 203 1 204 1 83 1 
273 1 275 1 250 1 144 1 89 1 115 1 3 1 59 1 340 1 166 1 184 1 185 1 167 1 295 2 120 1 9 2 10 1 212 1 215 1 125 1 263 1 126 1 346 1 176 1 266 1 78 1 353 1 204 1 
135 1 247 2 86 1 275 1 228 1 89 1 3 1 253 1 166 1 295 4 122 1 9 2 212 2 213 2 172 2 215 2 125 1 263 1 371 2 220 1 323 1 289 1 
247 2 273 1 86 1 275 1 250 1 228 1 144 1 89 1 115 1 3 1 253 1 59 1 340 1 166 1 185 1 255 1 295 4 120 1 122 1 170 1 9 2 212 2 10 1 213 2 172 2 215 2 125 1 263 1 371 2 323 1 220 1 284 1 346 1 203 1 289 1 204 1 83 1 
135 1 247 1 86 1 275 1 361 1 89 1 3 1 253 1 166 1 185 1 147 1 296 1 120 1 295 3 122 1 9 2 212 1 213 1 172 1 215 2 125 1 263 1 371 1 300 1 323 1 220 1 348 1 160 1 289 1 
248 2 86 3 275 2 228 3 3 2 253 3 166 2 62 1 93 1 295 19 188 1 121 1 122 3 191 2 9 4 279 1 212 10 342 1 215 9 343 2 125 2 371 6 127 1 220 3 323 3 326 1 349 1 286 1 289 3 82 1 
227 1 248 2 86 2 138 1 275 3 228 2 3 3 253 3 60 1 166 3 93 2 62 2 295 26 29 1 122 3 191 4 9 6 212 12 279 1 342 1 33 1 215 14 343 1 125 3 153 1 371 4 323 2 127 1 220 3 326 2 347 2 286 1 289 2 82 2 
227 1 248 4 86 4 138 1 275 3 228 4 277 1 3 3 116 1 253 5 60 1 91 1 166 3 62 3 93 1 295 41 29 1 121 1 122 4 191 4 9 6 279 1 212 21 342 1 33 1 215 20 343 1 125 3 153 1 371 8 127 1 220 4 323 5 345 1 326 3 347 1 373 1 42 1 349 1 286 1 133 1 289 4 82 2 
227 1 248 4 86 3 138 1 275 4 228 4 277 1 3 4 116 1 253 5 60 1 91 1 166 4 62 3 93 1 295 38 29 1 121 1 122 4 191 4 9 8 279 1 212 18 342 1 33 1 215 20 343 1 125 4 153 1 371 7 127 1 220 4 323 4 345 1 326 3 347 2 373 1 42 1 349 1 286 1 133 1 289 3 82 2 
227 1 248 4 86 7 138 1 275 2 228 7 277 1 3 2 116 1 253 8 60 1 91 1 166 2 62 2 93 1 295 52 29 1 121 2 122 7 191 4 9 4 279 1 212 25 342 1 33 1 320 2 215 27 343 1 125 2 153 1 371 14 127 1 220 7 323 8 345 1 326 4 347 1 373 1 286 1 133 1 289 7 82 1 
92 1 304 1 155 1 87 1 283 1 114 1 66 1 302 1 315 1 299 1 
169 1 31 1 
304 1 155 1 249 1 283 1 114 1 182 1 302 1 315 1 69 1 
207 1 308 1 
85 1 25 1 80 1 
154 1 300 1 56 1 128 1 338 1 327 1 185 1 232 1 329 1 147 1 119 1 365 1 120 1 296 1 307 1 65 1 160 1 68 1 226 1 
154 1 300 1 56 1 128 1 338 1 327 1 185 1 232 1 329 1 147 1 119 1 365 1 120 1 296 1 307 1 65 1 160 1 68 1 226 1 
154 1 300 1 56 1 128 1 338 1 327 1 185 1 232 1 329 1 147 1 119 1 365 1 120 1 296 1 307 1 65 1 160 1 68 1 226 1 
207 1 308 1 25 1 
207 1 308 1 25 1 
85 1 80 1 
85 1 25 1 80 1 
186 1 72 1 
206 1 272 1 114 1 315 1 184 1 185 2 232 1 186 1 147 2 120 2 169 1 296 2 297 1 65 1 366 1 31 1 155 1 300 2 72 1 128 1 283 1 302 1 76 1 104 1 75 1 43 1 304 1 
135 1 313 1 275 1 250 2 144 1 89 1 115 1 3 1 183 2 59 2 340 1 166 1 185 2 120 2 295 2 9 2 10 1 212 1 367 1 215 1 125 1 263 1 35 1 300 2 325 1 242 1 346 2 157 1 266 1 46 1 353 1 
137 1 38 1 250 2 40 1 251 2 115 1 346 2 265 1 59 2 340 1 130 1 245 1 148 1 376 1 187 1 170 1 380 1 21 1 236 1 
137 1 38 1 250 1 40 1 251 2 24 1 346 1 115 1 265 1 59 1 130 1 340 1 245 1 187 1 380 1 21 1 236 1 
2 1 250 1 144 1 143 1 115 1 346 1 59 1 340 1 130 1 78 1 77 1 148 1 10 1 246 1 
137 1 38 1 250 1 40 1 251 2 346 1 115 1 265 1 59 1 340 1 130 1 245 1 148 1 376 1 187 1 380 1 21 1 236 1 
28 1 
0 1 282 1 344 1 132 1 109 1 129 1 20 1 
162 1 272 1 337 1 0 1 208 1 27 1 30 1 281 1 173 1 282 2 129 1 107 1 43 1 159 1 48 1 269 1 20 1 
113 1 162 4 337 4 0 9 250 3 208 5 115 3 59 3 253 2 117 1 340 4 118 2 294 2 256 2 170 1 122 2 10 3 214 2 344 1 220 2 74 1 129 8 346 3 78 1 20 2 269 3 357 1 312 2 272 5 273 3 86 2 140 2 144 10 314 6 90 2 317 2 233 3 316 2 30 12 281 4 369 6 193 2 282 8 323 2 107 4 201 2 43 5 202 2 47 1 375 2 109 1 48 6 290 1 50 1 
272 1 162 2 248 1 337 2 86 2 138 1 0 8 208 1 314 5 90 1 253 2 364 1 60 1 62 1 317 2 29 1 122 2 30 6 369 5 281 2 33 1 153 1 282 5 220 2 323 2 74 1 129 5 326 1 107 2 201 1 43 1 48 3 379 1 269 1 20 2 
162 1 272 1 337 1 274 1 0 2 116 1 253 2 91 1 185 1 147 1 317 2 119 1 120 1 296 1 68 1 281 1 154 1 300 1 323 1 129 2 107 1 201 1 43 1 45 1 307 1 160 1 133 1 226 1 
162 1 337 1 344 1 282 1 0 1 129 1 107 1 109 1 20 1 281 1 
86 2 282 5 0 5 220 2 323 2 129 5 314 5 253 2 118 1 201 1 317 2 122 2 30 10 48 5 369 5 
43 1 272 1 282 1 208 1 20 1 269 1 
113 1 162 2 272 3 337 2 0 2 250 4 208 4 144 1 143 1 115 1 90 2 59 4 117 2 340 1 10 1 235 1 281 2 194 1 240 1 74 2 129 2 346 4 107 1 43 3 78 2 377 1 269 2 246 1 334 1 
273 1 275 1 250 1 144 1 89 1 3 1 115 1 59 1 340 1 166 1 184 1 185 3 147 2 295 1 120 3 296 2 9 2 212 1 10 1 125 1 370 1 154 1 263 1 300 2 346 1 284 1 266 1 78 1 160 2 203 1 204 1 83 1 
162 1 337 1 0 1 282 4 314 2 129 2 74 1 345 1 90 1 107 1 48 2 30 4 20 2 369 2 281 1 
155 1 156 1 114 1 
155 1 156 1 114 1 
155 1 156 1 114 1 
92 1 336 1 155 1 72 1 114 1 
155 1 287 1 114 1 
155 1 287 1 114 1 
155 1 287 1 114 1 
155 1 114 1 
304 1 315 1 
215 4 125 2 371 3 275 2 323 1 228 2 345 1 3 2 277 1 253 1 347 1 116 1 91 1 166 2 373 1 295 8 133 1 289 1 9 4 212 4 
215 3 371 2 323 1 228 2 345 1 277 1 116 1 253 1 91 1 373 1 132 1 295 6 133 1 212 3 
215 2 125 1 86 1 371 2 275 1 323 1 220 1 228 1 3 1 253 1 166 1 295 4 122 1 9 2 289 1 212 2 152 1 
215 3 248 2 86 1 371 2 323 1 220 1 228 1 326 1 253 1 62 1 295 7 121 1 122 1 289 1 212 4 
248 2 86 2 275 2 228 5 277 1 3 2 116 2 253 3 91 2 166 2 295 23 121 1 122 2 9 4 212 12 320 1 215 11 125 2 371 9 99 1 220 2 323 3 345 1 326 2 347 2 373 1 177 1 133 1 289 4 
248 1 295 1 212 1 
215 1 295 1 326 1 
215 3 125 1 371 3 86 1 275 1 220 1 323 1 228 2 3 1 253 1 166 1 118 1 295 6 122 1 9 2 289 1 152 1 212 3 
248 1 86 2 275 1 138 1 228 1 3 1 253 2 60 1 166 1 62 1 295 12 29 1 122 2 9 2 212 6 33 1 215 6 125 1 153 1 371 2 220 2 323 2 326 1 286 1 289 1 
215 3 371 2 323 1 228 1 253 1 116 1 91 1 295 6 133 1 289 1 212 3 
215 1 125 1 371 2 99 1 275 1 228 1 3 1 277 1 116 1 347 1 91 1 373 1 166 1 295 3 289 1 9 2 212 2 
215 5 125 1 371 5 275 1 323 2 228 3 3 1 116 2 253 2 91 2 166 1 45 1 286 1 295 10 133 1 9 2 289 2 212 5 
215 2 125 1 371 1 275 1 3 1 253 1 166 1 286 1 295 2 122 1 9 2 289 1 
215 2 125 1 86 1 371 2 275 1 323 1 220 1 228 1 3 1 253 1 166 1 286 1 295 4 122 1 9 2 289 1 212 2 
215 1 125 3 99 1 371 2 275 3 228 1 3 3 347 1 116 1 91 1 166 3 349 1 286 1 295 3 9 6 289 1 212 2 
248 4 86 3 275 5 228 7 277 1 3 5 116 3 253 5 91 3 166 5 62 1 295 34 121 1 122 3 8 1 9 10 212 18 152 1 215 16 125 5 99 1 371 12 220 3 323 5 345 1 326 3 347 2 105 1 373 1 349 1 158 1 286 1 133 2 289 5 
248 1 275 1 228 2 3 1 277 1 253 1 116 1 91 1 166 1 62 1 295 8 29 1 9 2 212 4 215 4 125 1 371 2 323 1 345 1 326 1 373 1 286 1 133 1 
248 2 275 2 228 2 277 1 3 2 116 1 253 2 91 1 166 2 62 1 295 11 29 1 121 1 122 1 9 4 212 5 152 1 215 6 125 2 371 3 323 1 220 1 345 1 326 1 373 1 286 1 133 1 289 1 
248 1 86 2 275 3 138 1 228 3 277 1 3 3 116 1 253 3 60 1 91 1 166 3 62 1 295 19 29 1 122 2 9 6 152 1 212 10 33 1 215 9 125 3 153 1 371 4 220 2 323 3 345 1 326 1 347 1 373 1 286 1 133 1 289 1 
248 1 86 1 275 3 138 1 228 3 277 1 3 3 116 1 253 3 60 1 91 1 166 3 62 1 295 17 29 1 122 2 9 6 152 1 212 7 33 1 215 10 125 3 153 1 371 5 220 2 323 2 345 1 326 1 347 1 373 1 286 1 133 1 289 2 
248 1 275 1 228 2 3 1 277 1 253 1 116 1 91 1 166 1 62 1 295 8 29 1 9 2 212 4 215 4 125 1 371 2 323 1 345 1 326 1 373 1 286 1 133 1 
248 1 86 2 275 1 138 1 228 1 3 1 253 2 60 1 166 1 62 1 295 12 29 1 122 2 9 2 212 6 33 1 215 6 125 1 153 1 371 2 220 2 323 2 326 1 286 1 289 1 
248 1 86 1 138 1 275 4 228 3 277 1 3 4 116 1 253 3 60 1 91 1 166 4 62 1 295 18 29 1 122 2 9 8 212 8 152 1 33 1 215 10 125 4 153 1 371 5 220 2 323 2 345 1 326 1 347 2 373 1 286 1 133 1 289 2 
248 1 86 2 138 1 275 4 228 3 3 4 253 3 60 1 166 4 62 1 295 16 29 1 122 3 9 8 212 7 33 1 215 9 125 4 153 1 371 6 220 3 323 2 326 1 347 2 349 1 286 1 289 3 
215 3 371 6 323 1 228 3 277 1 116 3 253 1 91 3 373 2 295 7 133 1 289 3 212 4 
248 1 86 1 138 1 275 4 228 3 277 1 3 4 116 1 253 3 60 1 91 1 166 4 62 1 295 18 29 1 122 2 9 8 212 8 33 1 215 10 125 4 153 1 371 4 220 2 323 2 345 1 326 1 347 2 373 1 349 1 286 1 133 1 289 1 
184 1 185 1 300 1 108 1 120 1 189 1 291 1 
300 1 164 1 16 1 184 1 185 1 108 1 120 1 318 1 189 1 123 1 291 1 271 1 
78 1 132 1 250 1 144 1 143 1 115 1 346 1 10 1 246 1 59 1 340 1 
273 1 300 1 250 1 141 1 144 1 346 1 115 1 59 1 340 1 184 1 185 2 147 1 78 1 296 1 120 2 203 1 10 1 204 1 
273 2 250 1 141 1 144 3 115 1 58 1 59 1 117 1 340 1 184 1 185 2 147 1 316 1 120 2 296 2 10 2 68 1 300 2 346 1 202 1 203 1 204 1 51 1 
273 2 250 2 141 1 144 3 115 1 58 1 59 2 117 1 340 1 184 1 185 2 167 1 147 1 316 1 120 2 296 2 10 2 68 1 217 1 300 2 346 2 202 1 204 1 51 1 
272 2 273 1 208 1 250 3 144 4 115 1 59 3 26 1 117 1 340 1 294 1 233 1 316 1 10 1 217 1 282 1 101 1 346 3 43 2 202 1 78 1 375 1 20 1 
217 1 272 2 273 1 282 1 250 3 208 1 144 4 346 3 115 1 59 3 117 1 340 1 202 1 43 2 294 1 78 1 316 1 233 1 375 1 20 1 10 1 214 1 
250 1 260 1 115 1 346 1 59 1 340 1 
360 1 273 1 250 7 144 3 183 1 346 6 115 2 15 1 59 7 230 1 340 3 17 1 245 1 78 2 267 1 170 1 260 1 261 1 10 2 367 1 50 1 
135 1 247 1 273 1 313 1 275 2 250 1 228 2 141 1 144 1 89 2 277 1 115 1 3 2 253 1 116 1 59 1 91 1 340 1 166 2 184 2 185 2 255 1 147 1 295 6 120 2 296 1 170 1 9 4 212 3 10 1 213 1 172 1 215 3 70 1 125 2 263 2 371 2 300 1 323 1 345 1 346 1 284 1 373 1 133 1 203 1 204 1 83 1 
113 1 312 1 162 2 272 3 337 2 0 1 250 1 208 2 140 1 144 2 59 1 294 1 256 1 233 1 366 1 214 1 281 2 282 1 344 1 129 1 346 1 107 2 43 3 78 1 375 1 109 1 20 1 269 1 
273 1 250 2 144 2 346 2 115 1 59 2 340 2 294 1 170 1 260 1 10 1 357 1 50 1 
217 1 250 4 143 1 144 1 346 4 115 1 59 4 340 1 78 1 225 1 170 1 246 1 10 1 
216 1 360 1 273 1 174 1 250 2 144 1 346 2 115 1 59 2 117 1 340 2 146 1 261 1 10 1 
78 1 187 1 250 1 251 1 380 1 115 1 346 1 265 1 59 1 340 1 
250 2 144 1 346 2 115 1 59 2 340 1 157 1 245 1 170 1 10 1 367 1 
250 5 143 1 144 3 346 4 115 2 59 5 15 1 117 1 230 1 340 2 78 1 225 1 170 1 246 1 10 2 367 1 
181 1 250 5 143 1 144 3 346 4 115 2 59 5 15 1 117 1 340 2 78 1 225 1 170 1 246 1 10 2 367 1 
273 1 300 1 250 1 141 1 144 1 346 1 115 1 59 1 340 1 184 1 185 2 167 1 147 1 78 1 296 1 120 2 10 1 204 1 
360 1 273 1 250 1 144 1 346 1 115 1 59 1 117 1 340 2 267 1 261 1 10 1 50 1 
184 1 52 1 322 1 258 1 12 1 
52 2 358 1 272 2 282 1 322 2 12 1 58 1 229 1 106 1 184 1 43 2 375 1 258 2 366 1 20 1 67 1 356 1 68 1 51 1 
35 1 300 1 322 1 12 1 242 1 185 1 46 1 120 1 258 1 
12 1 67 1 106 1 
278 1 239 1 132 1 179 1 
278 1 239 1 54 1 221 1 179 1 332 1 192 1 
306 1 151 1 332 1 
239 1 54 1 372 2 221 1 103 1 254 1 278 1 168 1 179 1 332 3 378 1 192 3 
278 1 239 1 54 1 221 1 179 1 332 2 192 2 381 1 335 1 
239 1 137 1 54 1 221 1 251 1 103 1 265 1 288 1 332 1 211 1 192 1 
239 1 54 1 221 1 179 1 332 1 103 1 192 1 
278 1 54 1 221 1 179 2 332 1 103 1 192 1 
53 1 239 1 63 1 54 2 221 2 179 1 332 2 103 1 280 1 192 2 
239 2 54 1 221 1 103 1 278 1 350 1 179 1 288 1 332 3 96 1 192 3 23 1 381 2 
239 1 137 1 54 1 221 1 251 2 103 1 265 1 243 1 278 1 179 1 332 2 380 1 192 2 236 1 381 1 
239 2 54 2 221 2 103 1 278 1 149 1 179 1 288 1 332 4 96 1 192 4 335 1 381 2 
278 1 239 1 54 1 221 1 179 1 332 1 103 1 192 1 
239 3 54 1 372 1 221 1 254 1 278 2 179 2 288 1 378 1 332 4 96 1 81 1 192 4 381 2 
239 1 71 1 54 1 221 1 103 1 209 1 278 1 330 1 179 1 332 2 192 2 381 1 
239 1 54 1 372 2 221 1 103 1 254 1 278 1 259 1 179 1 332 3 378 2 192 3 
136 2 239 2 341 1 165 1 
84 1 54 1 221 1 332 1 103 1 192 1 
278 1 350 1 239 1 54 1 221 1 179 1 332 2 103 1 192 2 381 1 
131 1 
278 1 239 1 54 1 221 1 179 1 332 1 103 1 192 1 
278 1 350 1 239 1 54 1 372 1 221 1 179 1 332 3 103 1 192 3 381 1 
239 1 288 1 96 1 81 1 
239 1 179 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 1 15 1 163 2 111 2 356 1 68 1 168 5 193 1 337 1 240 4 320 6 262 1 199 2 146 2 200 9 149 2 224 3 225 1 302 2 344 1 75 1 271 9 227 1 76 2 30 1 212 1 160 1 233 1 
162 1 15 1 163 2 111 2 356 1 68 1 168 5 193 1 337 1 240 4 320 6 262 1 199 2 146 2 200 9 149 2 224 3 225 1 302 2 344 1 75 1 271 9 227 1 76 2 30 1 212 1 160 1 233 1 
162 1 15 1 163 2 111 2 356 1 68 1 168 6 193 1 337 1 240 5 320 7 262 1 199 2 146 2 200 10 149 2 224 4 225 1 302 2 344 1 75 1 271 10 227 1 76 2 30 1 212 1 160 1 233 1 
162 1 15 1 163 2 111 2 356 1 68 1 168 4 337 1 240 3 320 4 262 1 199 2 146 2 200 7 149 2 224 2 225 1 302 2 344 1 75 1 271 7 227 1 76 1 30 1 212 1 160 1 233 1 
224 1 15 1 162 1 111 1 163 1 356 1 75 1 271 4 168 3 76 2 193 1 240 2 320 3 146 1 199 1 200 4 160 1 149 1 
15 1 111 1 163 1 302 1 356 1 189 1 68 1 75 1 271 2 168 1 262 1 199 1 146 1 200 2 24 1 148 1 
15 1 224 1 111 2 163 2 302 1 356 1 75 1 271 3 168 2 240 1 320 1 200 3 233 1 
162 1 15 1 224 3 111 2 163 2 302 1 356 1 75 1 271 9 168 5 227 1 76 2 193 1 240 4 320 7 210 1 146 1 199 1 212 1 160 1 200 9 187 1 149 1 233 1 
162 1 15 1 224 3 111 2 163 2 302 1 356 1 75 1 271 9 168 5 227 1 76 2 193 1 240 4 320 7 210 1 146 1 199 1 212 1 160 1 200 9 187 1 149 1 233 1 
308 1 122 1 61 1 
122 1 188 2 313 1 
71 1 73 2 369 2 263 2 191 2 47 2 345 2 5 1 
109 1 165 1 38 1 191 2 112 2 285 1 39 1 4 1 115 1 5 1 170 1 70 1 290 1 340 2 6 1 71 1 21 1 263 2 47 2 343 2 73 3 369 2 270 1 345 3 347 1 228 1 9 1 157 1 249 2 99 1 183 1 352 1 105 1 12 1 378 2 310 1 236 1 
71 1 73 1 369 1 263 1 191 1 47 1 345 1 90 1 329 1 351 1 
312 1 66 1 191 1 192 1 71 1 122 1 263 2 47 1 90 1 301 1 326 1 73 2 205 1 369 1 345 2 179 1 178 1 329 1 351 2 61 1 281 1 
312 2 66 1 191 2 192 1 71 1 122 1 263 2 47 2 90 1 301 1 326 2 73 2 205 1 369 2 345 2 179 1 329 1 351 2 61 1 
326 1 35 1 312 1 327 1 348 1 
326 2 122 1 312 2 360 1 61 1 243 1 327 1 348 1 
326 1 312 1 327 1 
326 1 73 1 205 1 312 1 369 1 191 1 345 1 329 1 348 1 351 1 71 1 47 1 263 1 90 1 
122 1 
120 1 326 2 122 1 312 2 61 1 243 1 327 1 348 1 
326 5 253 2 312 5 8 1 370 1 327 2 348 2 209 1 117 1 306 1 42 1 20 1 260 2 122 1 33 1 173 1 61 1 243 1 161 2 
308 1 5 1 
73 2 369 1 191 1 345 2 5 2 45 1 263 2 47 1 134 1 
323 1 346 1 248 1 
73 1 165 1 270 1 285 1 345 1 347 1 249 1 5 1 340 1 70 1 99 1 352 1 105 1 216 1 12 1 378 1 
153 1 73 2 165 1 369 1 191 1 270 1 285 1 345 2 347 1 248 1 249 1 70 1 340 1 99 1 263 1 352 1 105 1 12 1 378 1 127 1 
73 3 369 3 47 1 263 3 191 3 345 3 5 1 127 1 
73 1 369 1 263 1 191 1 345 1 329 1 351 1 
73 1 45 1 369 1 263 1 191 1 47 1 345 1 134 1 351 1 
191 3 285 1 39 1 192 1 4 1 340 1 5 1 6 1 45 1 47 2 343 2 301 1 153 1 345 4 347 1 249 1 9 1 351 2 99 1 105 1 352 1 12 1 353 1 310 1 109 1 312 1 165 1 66 1 112 1 113 1 115 1 70 1 170 1 71 1 21 1 263 3 127 1 326 1 73 4 369 3 270 1 179 1 378 1 135 1 236 1 
73 2 369 1 263 2 191 1 345 2 178 1 180 1 5 1 127 1 
153 1 326 1 73 3 312 1 369 3 191 3 66 1 192 1 345 3 179 1 351 1 45 1 122 1 47 1 263 3 353 1 204 1 127 2 301 1 
73 2 369 2 191 2 345 2 346 1 248 1 45 1 47 1 263 2 127 1 
73 1 165 1 270 1 285 1 345 1 347 1 249 1 5 1 340 1 70 1 99 1 105 1 352 1 12 1 378 1 
84 1 73 1 368 1 270 1 285 1 345 1 347 1 249 1 5 1 340 1 70 1 99 1 352 1 12 1 378 1 
109 1 138 1 218 1 112 2 3 1 346 1 328 1 4 1 248 1 170 1 6 1 21 2 172 1 104 1 323 1 343 2 299 1 310 1 236 1 
73 1 369 1 263 1 191 1 345 1 91 1 351 1 301 1 
153 1 45 1 73 5 369 4 47 1 263 5 191 4 345 5 178 1 180 1 256 1 324 1 5 1 127 2 
73 2 369 2 263 2 191 2 345 2 329 1 91 1 351 1 
284 1 247 1 
284 1 247 1 
357 1 31 1 
357 1 31 1 
357 1 31 1 
291 1 284 1 247 1 
291 1 284 1 247 1 
284 1 247 1 60 1 
53 1 284 2 357 1 247 2 130 1 31 1 
291 1 284 1 247 1 
284 1 208 1 247 1 
284 1 208 1 247 1 
284 1 208 1 247 1 
137 1 53 1 326 2 154 2 284 2 312 2 67 1 28 1 247 2 166 2 114 1 116 2 289 1 342 1 122 1 159 2 201 2 363 3 361 1 
284 1 312 1 191 2 67 1 219 1 286 1 166 1 116 1 5 1 338 1 263 2 363 1 201 1 93 1 326 1 154 1 73 2 369 2 247 1 345 2 77 1 60 1 107 1 82 1 
146 1 199 1 149 1 
146 1 199 1 24 1 
250 1 309 1 199 3 24 1 150 1 149 2 
250 1 199 2 24 1 95 1 150 1 149 1 
250 2 199 2 24 1 149 1 150 1 
253 1 65 1 188 3 312 5 218 1 313 1 238 1 143 2 117 2 338 1 260 1 122 2 243 1 126 1 299 1 93 1 366 1 326 5 245 1 370 1 327 1 29 1 348 4 79 1 185 1 33 3 232 2 214 1 61 1 379 2 82 1 161 1 
253 2 65 3 35 5 188 9 312 9 190 1 218 3 333 1 313 3 88 1 238 1 316 1 143 6 117 6 239 1 260 2 122 5 243 1 299 3 326 9 267 1 245 3 370 1 327 6 181 5 348 7 306 1 79 2 185 3 33 8 214 2 61 1 379 6 82 4 161 2 
253 1 65 1 312 3 188 4 218 1 313 2 117 2 143 2 260 1 122 3 126 1 299 1 326 3 245 1 348 2 29 1 306 1 79 1 33 3 185 1 214 1 232 1 61 1 82 1 379 2 161 1 
253 1 65 2 188 7 312 4 218 2 333 1 313 3 316 1 143 4 117 4 239 1 260 1 122 4 126 1 299 2 326 4 245 2 29 1 348 3 306 1 79 1 33 5 185 2 214 1 232 2 61 1 379 4 82 2 161 1 
308 1 23 1 352 1 
352 1 223 1 
322 1 
99 1 352 1 
99 1 261 1 23 2 155 1 352 3 70 1 
99 1 352 1 70 1 
292 1 352 1 
65 1 38 4 74 1 112 7 3 3 275 1 372 1 373 2 198 1 196 1 21 3 104 2 264 1 295 1 174 1 299 1 151 1 
65 1 38 4 74 1 112 7 3 3 275 1 372 1 373 2 198 1 196 1 21 3 104 2 264 1 295 1 174 1 299 1 151 1 
65 1 38 4 74 1 112 7 3 3 275 1 372 1 373 2 349 1 198 1 196 1 21 3 104 2 264 1 295 1 174 1 299 1 151 1 
109 1 65 4 38 16 218 3 112 31 3 10 170 1 6 1 198 1 196 1 21 15 46 1 295 1 264 2 174 2 343 2 299 4 151 2 152 1 128 4 129 1 245 3 74 5 177 1 372 1 275 2 373 3 182 3 78 1 185 3 186 1 104 5 62 1 310 1 
109 2 65 1 38 5 112 9 3 4 170 2 6 2 197 1 196 1 198 1 21 4 46 1 264 1 295 1 174 1 299 1 343 4 151 1 266 1 74 1 275 1 373 2 104 3 310 2 
15 1 163 1 111 1 85 1 64 1 356 1 168 1 340 1 320 1 171 1 72 1 146 1 199 2 200 2 24 1 265 1 149 1 92 1 207 1 302 1 75 1 271 2 347 1 249 1 10 1 350 1 309 1 32 1 12 1 378 1 
163 1 111 1 85 1 64 1 36 1 356 1 168 1 340 1 320 2 171 1 72 1 146 1 199 2 200 3 24 1 265 1 202 1 149 1 302 1 75 1 304 1 271 3 347 1 249 1 10 1 350 1 309 1 32 1 12 1 378 1 
85 1 64 1 36 1 356 1 168 1 340 1 320 2 171 1 72 1 199 2 146 1 200 2 24 1 265 1 149 1 302 1 75 1 304 1 271 2 347 1 249 1 350 1 309 1 12 1 378 1 
111 1 163 1 64 2 354 1 302 2 285 1 271 1 347 1 336 1 169 1 156 1 249 1 43 1 340 1 99 1 72 2 200 1 352 1 25 1 202 1 265 2 12 1 378 1 
15 1 163 1 111 1 85 1 64 1 36 1 340 1 171 1 72 1 146 1 199 2 200 1 24 1 265 1 149 1 92 1 302 1 271 1 347 1 249 1 10 1 350 1 309 1 32 1 12 1 378 1 
26 1 
188 2 0 1 285 2 237 1 192 1 339 2 43 1 340 2 44 1 242 1 147 2 243 3 301 1 94 2 345 1 347 1 96 1 57 1 249 2 351 1 100 1 99 1 101 1 103 2 214 1 352 1 61 2 12 1 161 1 253 1 164 1 312 5 66 1 313 2 169 1 18 1 117 2 257 1 317 2 260 1 122 3 222 2 263 1 365 1 326 5 73 1 370 1 327 6 178 1 179 1 229 2 33 2 281 1 378 2 133 4 
164 1 312 3 66 1 192 1 18 1 257 1 242 1 120 1 122 2 263 1 243 1 301 1 326 3 73 1 345 1 327 2 178 1 96 1 179 1 351 1 103 1 61 2 281 1 133 2 
326 2 164 1 73 1 312 2 66 1 192 1 345 1 179 1 96 1 178 1 18 1 257 1 351 1 242 1 122 2 222 1 263 1 61 2 281 1 133 3 301 1 
164 1 312 3 66 1 192 1 18 1 257 1 317 1 242 1 120 1 122 3 263 1 222 1 243 1 301 1 326 3 73 1 345 1 327 2 178 1 96 1 179 1 351 1 103 1 61 3 281 1 133 3 
191 1 237 1 192 1 339 2 242 1 341 1 47 1 147 2 243 3 90 1 301 1 205 1 303 1 94 2 345 2 96 1 57 1 351 2 58 1 103 4 61 4 161 1 164 1 253 1 312 5 66 1 313 2 18 1 117 1 257 1 317 4 71 1 120 1 260 1 122 4 263 2 222 3 326 5 73 2 268 1 369 1 370 1 327 7 179 1 178 1 329 1 229 2 33 1 279 1 281 1 133 5 
188 2 237 1 192 1 339 2 242 1 147 2 243 2 301 1 94 2 345 1 96 1 57 1 351 1 100 1 103 2 61 3 161 1 253 1 164 1 312 4 66 1 313 2 18 1 117 1 257 1 317 2 260 1 122 4 263 1 222 2 326 4 73 1 370 1 327 4 179 1 178 1 229 2 33 1 281 1 133 4 
253 1 164 1 312 4 66 1 237 1 192 1 313 2 18 1 117 1 257 1 317 2 339 2 242 1 341 1 260 1 122 3 222 2 263 1 147 2 243 2 301 1 326 4 73 1 268 1 94 2 345 1 370 1 327 4 178 1 96 1 179 1 57 1 229 2 351 1 58 1 33 1 103 2 61 3 281 1 133 4 161 1 
253 1 164 1 312 4 66 1 237 1 192 1 313 2 18 1 117 1 257 1 317 2 339 2 242 1 341 1 260 1 122 3 222 2 263 1 147 2 243 2 301 1 326 4 73 1 268 1 94 2 345 1 370 1 327 4 178 1 96 1 179 1 57 1 229 2 351 1 58 1 33 1 103 2 61 3 281 1 133 4 161 1 
253 1 164 1 188 2 312 4 66 1 254 1 192 1 40 2 18 1 117 1 257 1 258 1 317 2 339 2 319 1 242 1 260 1 122 3 222 2 263 1 147 2 243 2 49 2 301 1 326 4 73 1 345 1 370 1 327 4 178 1 96 1 179 1 57 1 351 1 58 1 33 1 103 2 61 3 281 1 133 4 161 1 
253 1 164 1 312 4 66 1 237 1 192 1 313 2 18 1 117 1 257 1 339 2 317 3 341 1 242 1 260 1 122 3 222 3 263 1 147 2 243 2 301 1 326 4 73 1 268 1 94 2 303 1 370 1 345 1 327 5 178 1 96 1 179 1 57 1 229 2 351 1 58 1 33 1 103 3 61 3 281 1 133 5 161 1 
253 1 164 1 312 4 66 1 237 1 192 1 313 2 18 1 117 1 257 1 339 2 317 3 341 1 242 1 260 1 122 3 222 3 263 1 147 2 243 2 301 1 326 4 73 1 268 1 94 2 303 1 370 1 345 1 327 5 178 1 96 1 179 1 57 1 229 2 351 1 58 1 33 1 103 3 61 3 281 1 133 5 161 1 
164 1 253 1 188 2 312 4 66 1 192 1 40 2 18 1 117 1 257 1 317 2 339 2 319 1 242 1 260 1 122 3 222 2 263 1 147 2 243 2 49 2 301 1 326 4 73 1 370 1 345 1 327 4 96 1 178 1 179 1 57 1 351 1 100 1 33 1 103 2 61 3 281 1 133 4 161 1 
109 1 65 1 38 3 112 6 3 2 4 1 170 1 5 2 6 1 196 1 198 1 21 3 295 1 323 1 343 2 299 1 151 1 346 1 328 1 248 1 275 1 373 1 308 1 104 2 310 1 236 1 
109 2 65 3 38 10 112 15 3 2 4 1 221 1 5 1 170 2 6 2 21 5 125 1 323 12 343 4 152 2 128 4 245 3 54 1 74 2 346 3 248 12 228 1 9 1 182 3 158 1 185 3 215 1 62 1 310 2 236 2 
109 1 16 1 165 1 191 1 38 1 285 1 112 2 4 1 5 1 70 1 340 1 170 1 6 1 21 1 263 1 343 2 127 1 153 1 73 2 369 1 270 1 345 2 347 1 346 1 228 1 249 1 9 1 158 1 278 1 99 1 352 1 105 1 12 1 216 1 378 1 310 1 236 1 34 1 
191 1 38 3 285 1 39 1 3 3 4 2 340 1 6 2 343 4 153 1 245 1 345 2 347 1 346 2 248 2 9 1 249 1 158 1 99 1 213 1 104 1 105 1 352 1 12 1 310 2 109 2 65 1 355 1 165 1 112 5 220 1 170 2 70 1 21 2 263 1 323 2 127 1 73 2 369 1 270 1 74 2 272 1 185 1 378 1 332 1 236 2 
109 2 17 1 191 1 38 1 285 2 112 2 4 2 169 1 69 1 70 1 340 7 170 2 290 2 43 1 144 1 6 2 21 1 263 1 343 4 127 1 325 1 73 1 207 1 369 1 176 1 226 1 56 1 345 1 347 4 328 1 273 1 228 1 249 6 9 1 99 3 80 1 352 4 12 3 378 7 132 1 235 1 310 2 236 2 
109 1 65 1 191 1 38 1 218 1 112 3 3 1 4 1 170 1 241 1 6 1 45 1 21 2 47 1 263 1 323 1 343 2 299 1 73 1 369 1 245 1 345 1 346 1 248 1 158 1 185 1 104 1 310 1 236 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 346 1 167 1 328 1 4 1 248 1 170 1 6 1 323 1 343 2 310 1 236 1 
109 1 218 1 112 2 3 1 346 1 328 1 4 1 248 1 170 1 6 1 21 2 172 1 104 1 323 1 343 2 299 1 310 1 236 1 
109 1 65 1 38 2 218 1 112 4 3 2 4 1 170 1 6 1 21 2 323 2 343 2 299 1 245 1 74 1 346 2 328 1 248 2 185 1 104 1 310 1 236 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 346 1 167 1 4 1 248 1 170 1 6 1 80 1 323 1 343 2 310 1 236 1 
109 1 218 1 112 2 3 1 346 1 4 1 248 1 170 1 6 1 21 2 80 1 172 1 104 1 323 1 343 2 299 1 310 1 236 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 346 1 4 1 248 1 170 1 6 1 80 1 185 1 323 1 343 2 310 1 236 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 346 1 4 1 248 1 170 1 6 1 185 1 323 1 343 2 310 1 236 1 
109 1 165 1 38 1 112 2 39 1 285 1 4 1 5 1 70 1 340 1 170 1 6 1 21 1 343 2 73 1 270 1 345 1 347 1 228 1 249 1 9 1 99 1 105 1 352 1 12 1 378 1 310 1 236 1 
84 1 109 1 38 1 112 2 285 1 4 1 5 1 70 1 340 1 170 1 6 1 21 1 343 2 51 1 73 1 368 1 270 1 345 1 347 1 228 1 249 1 9 1 99 1 352 1 12 1 378 1 310 1 236 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 346 1 4 1 248 1 170 1 6 1 158 1 185 1 323 1 343 2 310 1 236 1 
109 1 65 1 355 1 165 1 38 2 112 2 39 1 3 1 4 1 70 1 340 1 170 1 6 1 323 1 343 2 73 1 207 1 245 1 74 1 270 1 345 1 346 1 347 1 248 1 249 1 99 1 185 1 105 1 352 1 12 1 378 1 310 1 236 1 
109 1 65 1 191 1 38 2 112 2 3 1 4 1 170 1 6 1 45 1 47 1 263 1 323 1 343 2 73 1 369 1 245 1 74 1 345 1 346 1 248 1 158 1 185 1 252 1 310 1 236 1 
283 1 109 2 65 3 38 9 218 3 112 19 334 2 3 6 315 1 194 1 170 2 195 1 6 2 197 1 21 10 343 4 299 3 27 1 152 1 52 1 128 2 246 2 245 3 74 3 182 1 185 3 104 3 62 1 14 1 310 2 
283 2 109 3 86 1 65 3 87 1 38 14 218 2 140 1 112 26 334 1 3 4 315 1 194 1 170 3 6 3 197 1 21 12 46 2 299 2 343 6 52 2 128 2 246 4 245 3 74 2 305 1 182 2 277 1 185 3 104 2 62 2 251 1 14 1 310 3 
283 1 109 3 86 1 65 5 87 1 38 20 218 4 140 1 112 41 334 1 3 8 315 1 118 1 194 1 170 3 195 1 6 3 198 1 196 1 197 1 21 21 46 1 295 1 343 6 299 5 151 1 152 1 52 2 128 4 246 4 245 4 74 4 275 1 305 1 373 1 277 1 182 3 185 4 104 4 251 1 62 3 14 1 310 3 
283 1 109 4 86 1 65 5 87 1 38 20 218 3 140 1 112 38 334 1 3 7 315 1 118 1 194 1 170 4 195 1 6 4 198 1 196 1 197 1 21 18 46 2 295 1 343 8 299 4 151 1 152 1 52 2 128 4 246 4 245 4 74 3 275 1 305 1 373 1 277 1 182 3 185 4 104 4 251 1 62 3 14 1 310 4 
283 1 109 2 86 1 65 8 87 1 38 27 218 7 140 1 112 52 334 1 3 14 315 1 194 1 170 2 6 2 198 1 196 1 197 1 21 25 46 1 295 1 343 4 299 8 151 1 152 2 52 1 128 4 246 4 245 7 74 7 275 1 305 1 373 1 277 1 182 4 185 7 104 7 215 2 251 1 62 2 14 1 310 2 
53 1 154 1 284 1 28 1 247 1 201 1 314 1 166 1 116 1 289 1 
77 1 60 1 
154 1 244 1 284 1 247 1 201 1 166 1 116 1 175 1 318 1 
137 1 53 1 326 1 154 1 312 1 284 1 67 1 28 1 247 1 166 1 116 1 289 1 342 1 122 1 159 1 201 1 363 2 361 1 
137 1 53 1 326 1 154 1 312 1 284 1 67 1 28 1 247 1 166 1 116 1 289 1 342 1 122 1 159 1 201 1 363 2 361 1 
137 1 53 1 326 1 154 1 312 1 284 1 67 1 28 1 247 1 166 1 116 1 289 1 342 1 122 1 159 1 201 1 363 2 361 1 
291 1 293 1 130 1 
291 1 293 1 130 1 
358 1 208 1 
358 1 208 1 130 1 
286 1 107 1 
136 1 312 1 284 1 191 2 219 1 286 1 166 1 116 1 5 1 338 1 263 2 361 1 201 1 363 1 93 1 326 1 73 2 154 1 369 2 247 1 345 2 348 1 77 1 159 1 60 1 107 1 82 1 
291 1 293 1 
358 1 208 1 130 1 
109 1 38 1 112 2 4 1 142 1 340 2 170 1 290 2 6 1 145 1 21 1 263 2 294 1 362 1 343 2 73 2 269 1 56 1 345 2 347 1 228 1 9 1 249 2 158 1 99 1 352 1 12 1 378 2 132 1 310 1 236 1 
36 1 207 1 37 1 347 1 249 2 340 2 350 1 309 1 171 1 72 1 32 1 146 1 199 2 359 1 24 1 376 1 12 1 149 1 378 2 
36 1 347 1 249 1 340 1 350 1 309 1 171 1 72 1 32 1 146 1 199 2 359 1 24 1 12 1 106 1 149 1 378 1 
285 1 141 1 347 1 169 1 156 1 249 1 340 1 43 1 99 1 72 1 376 1 352 1 12 1 378 1 
36 1 37 1 347 1 249 1 340 1 350 1 309 1 171 1 72 1 32 1 146 1 199 2 359 1 24 1 376 1 12 1 149 1 378 1 
287 1 
308 1 122 1 33 1 8 1 173 1 61 1 117 1 
326 1 253 1 312 1 188 1 94 1 237 1 370 1 327 1 313 1 229 1 117 1 260 1 122 2 33 1 61 1 243 1 161 1 
188 6 285 1 192 1 143 3 340 1 243 1 299 1 245 1 347 2 97 1 249 1 98 1 99 1 214 1 352 4 12 1 161 2 253 2 65 1 311 1 312 2 218 1 313 3 117 3 70 1 260 2 261 1 121 1 122 3 22 1 23 1 124 1 223 2 326 2 370 2 327 2 375 1 230 1 33 4 185 1 378 1 379 3 332 1 
63 1 253 2 86 1 65 2 312 1 188 6 218 2 140 1 313 3 143 5 117 5 44 1 260 2 122 5 7 1 243 1 299 2 326 1 128 1 245 2 370 2 327 1 97 2 305 1 182 1 277 1 33 8 185 2 214 1 61 2 280 1 62 1 251 1 379 5 161 2 
253 1 65 2 312 1 191 1 117 2 341 1 259 1 71 1 260 1 198 1 47 1 263 1 90 1 299 1 151 1 326 1 73 1 205 1 369 1 345 1 370 1 97 2 329 1 275 1 351 1 33 2 280 1 161 1 
253 1 8 1 370 1 117 1 260 1 122 1 33 1 173 1 61 1 161 1 
65 2 245 2 188 10 218 2 313 5 97 2 117 5 143 5 122 5 185 2 33 5 280 1 379 5 299 2 332 1 
326 1 122 1 312 1 61 1 243 1 327 1 
253 2 312 3 0 1 285 2 169 1 117 2 340 4 43 1 44 2 260 2 243 2 365 1 326 3 370 1 347 1 327 4 371 1 306 1 249 4 99 1 211 2 184 1 33 2 214 2 352 1 12 1 330 1 378 4 161 2 
109 1 165 1 191 2 112 1 285 1 39 1 4 1 115 1 5 1 170 1 340 1 70 1 6 1 71 1 21 1 263 2 47 2 343 2 73 3 369 2 270 1 345 3 347 1 9 1 249 1 99 1 105 1 352 1 12 1 378 1 310 1 236 1 
253 1 188 4 370 1 313 2 143 2 117 2 373 1 44 1 260 1 122 4 33 1 214 1 61 2 379 2 161 1 
154 1 206 1 116 1 
154 1 206 1 116 1 
154 1 28 1 107 1 116 1 83 1 
154 1 206 1 116 1 
154 1 116 1 119 1 
154 1 116 1 119 1 
154 1 116 1 119 1 
154 1 116 1 
284 1 247 1 
109 2 65 1 38 4 74 1 112 8 3 3 275 1 373 1 170 2 6 2 198 1 196 1 21 4 46 1 104 2 295 1 299 1 343 4 151 1 310 2 
308 1 65 1 198 1 196 1 21 3 38 3 112 6 104 2 295 1 3 2 299 1 275 1 151 1 373 1 
109 1 65 1 245 1 38 2 218 1 74 1 112 4 3 2 170 1 6 1 21 2 185 1 104 1 299 1 343 2 234 1 310 1 
128 2 65 1 245 1 38 3 218 1 74 1 112 7 3 2 182 1 21 4 185 1 104 1 62 1 299 1 152 1 
109 2 65 3 38 11 218 2 112 23 3 9 221 1 170 2 6 2 198 1 196 1 21 12 46 2 295 1 299 3 343 4 151 2 152 1 128 2 245 2 74 4 274 1 275 2 373 1 182 2 185 2 104 5 215 1 310 2 
128 1 21 1 112 1 
182 1 38 1 112 1 
109 1 65 1 245 1 38 3 74 1 218 1 112 6 3 3 170 1 6 1 21 3 185 1 104 2 343 2 299 1 234 1 310 1 332 1 
109 1 65 2 86 1 38 6 218 2 112 12 140 1 3 2 170 1 6 1 197 1 21 6 343 2 299 2 128 1 245 2 74 1 305 1 182 1 277 1 185 2 104 1 62 1 251 1 310 1 
65 1 38 3 74 1 112 6 3 2 275 1 198 1 21 3 104 1 299 1 151 1 
109 1 38 1 74 1 112 3 3 2 274 1 275 1 170 1 6 1 196 1 21 2 46 1 104 1 295 1 343 2 151 1 310 1 
109 1 65 2 38 5 74 2 112 10 3 5 275 2 170 1 6 1 259 1 197 1 198 1 21 5 104 3 343 2 299 2 151 2 310 1 
109 1 65 1 245 1 38 2 74 1 112 2 3 1 170 1 6 1 197 1 343 2 310 1 
109 1 65 1 245 1 38 2 218 1 74 1 112 4 3 2 170 1 6 1 197 1 21 2 185 1 104 1 299 1 343 2 310 1 
109 3 38 1 74 1 112 3 3 2 274 1 275 1 170 3 195 1 6 3 197 1 21 2 46 1 104 1 343 6 151 1 310 3 
109 5 65 5 38 16 218 3 112 34 3 12 170 5 195 1 6 5 198 2 196 1 197 1 21 18 46 2 295 1 343 10 299 5 151 3 152 1 128 4 129 1 245 3 74 5 177 1 274 1 275 3 373 1 182 3 78 1 185 3 104 7 62 1 234 1 310 5 
109 1 65 1 38 4 112 8 3 2 170 1 6 1 197 1 196 1 198 1 21 4 295 1 299 1 343 2 151 1 128 1 275 1 373 1 182 1 104 2 62 1 251 1 310 1 
109 2 65 2 38 6 112 11 3 3 170 2 6 2 198 1 196 1 197 1 21 5 295 1 299 1 343 4 151 1 152 1 128 2 245 1 74 1 275 1 373 1 182 1 185 1 104 2 62 1 251 1 234 1 310 2 
109 3 86 1 65 3 38 9 218 2 112 19 140 1 3 4 170 3 6 3 198 1 196 1 197 1 21 10 46 1 295 1 343 6 299 3 151 1 128 1 245 2 74 1 275 1 305 1 373 1 182 1 277 1 185 2 104 3 62 1 251 1 234 1 310 3 
109 3 65 3 86 1 38 10 218 1 112 17 140 1 3 5 170 3 6 3 198 1 196 1 197 1 21 7 46 1 295 1 343 6 299 2 151 1 128 1 245 2 74 2 275 1 305 1 373 1 182 1 277 1 185 2 104 3 62 1 251 1 234 1 310 3 
109 1 65 1 38 4 112 8 3 2 170 1 6 1 197 1 196 1 198 1 21 4 295 1 299 1 343 2 151 1 128 1 275 1 373 1 182 1 104 2 62 1 251 1 310 1 
109 1 65 2 86 1 38 6 218 2 112 12 140 1 3 2 170 1 6 1 197 1 21 6 343 2 299 2 128 1 245 2 74 1 305 1 182 1 277 1 185 2 104 1 62 1 251 1 310 1 
109 4 86 1 65 3 38 10 218 1 140 1 112 18 3 5 170 4 6 4 198 1 196 1 197 1 21 8 46 2 295 1 343 8 299 2 151 1 128 1 245 2 74 2 275 1 305 1 373 1 182 1 277 1 185 2 104 3 62 1 251 1 234 1 310 4 
109 4 86 1 65 3 38 9 218 2 140 1 112 16 3 6 170 4 6 4 195 1 197 1 21 7 46 2 343 8 299 2 128 1 245 3 74 3 305 1 182 1 277 1 185 3 104 3 62 1 251 1 310 4 
65 1 38 3 74 3 112 7 3 6 275 3 196 2 198 1 21 4 295 1 104 3 299 1 151 3 
109 4 86 1 65 3 38 10 218 1 140 1 112 18 3 4 170 4 6 4 195 1 198 1 196 1 197 1 21 8 46 2 295 1 343 8 299 2 151 1 128 1 245 2 74 1 275 1 305 1 373 1 182 1 277 1 185 2 104 3 62 1 251 1 310 4 
73 1 263 1 345 1 178 1 180 1 300 1 5 1 
73 1 345 1 255 1 178 1 180 1 5 1 263 1 81 1 331 1 48 1 282 1 300 1 
308 1 99 1 285 1 352 1 347 1 12 1 169 1 378 1 249 1 43 1 340 1 
73 2 369 1 165 1 191 1 270 1 285 1 345 2 347 1 249 1 5 1 70 1 340 1 99 1 263 1 352 1 12 1 378 1 127 1 
165 1 191 1 5 1 340 1 70 2 292 1 263 2 297 1 127 1 301 1 73 2 369 2 270 1 345 2 347 1 179 1 249 1 351 1 99 2 211 1 352 3 12 1 378 1 
191 1 5 1 340 2 70 2 292 1 263 2 297 1 127 1 301 1 73 2 368 1 369 2 270 1 345 2 347 1 179 1 249 2 11 1 351 1 99 2 211 1 352 3 12 1 378 2 
312 2 191 1 192 1 41 1 19 1 340 1 70 1 71 1 292 1 122 1 263 1 47 1 23 1 90 1 297 1 223 1 326 2 73 1 205 1 369 1 345 1 327 1 347 1 329 1 249 1 351 1 99 1 211 1 352 4 61 1 12 1 378 1 
312 2 191 1 192 1 340 1 70 1 71 1 121 1 292 1 122 1 263 1 47 1 23 1 90 1 297 1 223 1 326 2 73 1 205 1 369 1 345 1 327 1 347 1 329 1 249 1 351 1 99 1 211 1 352 4 61 1 12 1 378 1 
347 1 12 1 378 1 235 1 249 1 340 1 
17 1 1 1 285 2 69 1 290 1 70 1 340 6 261 1 325 1 207 1 176 1 56 1 347 3 273 1 249 5 99 2 352 3 12 2 378 6 235 1 
191 1 38 3 39 1 3 2 4 2 340 1 5 2 6 2 145 1 196 1 198 1 295 1 343 4 299 1 151 1 207 1 345 2 346 1 347 1 248 1 249 1 158 1 99 1 213 1 104 2 105 1 352 1 12 1 310 2 109 2 65 1 355 1 165 1 112 6 170 2 70 1 21 3 263 1 323 1 127 1 73 2 369 1 270 1 275 1 373 1 378 1 236 2 
191 1 285 1 192 1 340 1 198 1 47 1 243 1 90 1 299 2 151 1 205 1 8 1 345 1 97 2 348 1 98 1 249 1 351 1 352 2 61 2 161 2 253 2 65 2 312 3 117 5 259 1 71 1 260 2 121 1 122 2 23 1 22 1 263 1 173 1 223 1 326 3 73 1 369 1 370 2 327 2 329 1 275 1 375 1 33 4 280 1 330 1 378 1 
207 1 347 2 249 2 340 2 70 1 261 1 99 1 230 1 23 1 352 2 12 1 378 2 235 1 
110 1 207 1 285 1 347 1 169 1 249 4 11 1 340 4 43 1 99 1 352 1 12 1 378 4 
325 1 176 1 226 1 347 2 249 2 89 1 340 2 70 1 144 1 99 1 211 1 352 1 12 1 378 2 
171 1 146 1 199 1 24 1 285 1 347 1 12 1 378 1 249 1 340 1 
99 1 36 1 207 1 269 1 352 1 56 1 347 1 12 1 378 2 249 2 340 2 
110 1 207 1 17 1 285 1 56 1 347 2 169 1 273 1 249 4 43 1 340 5 99 2 211 1 352 3 12 2 378 5 
110 1 207 1 17 1 285 1 56 1 347 2 169 1 249 4 43 1 340 5 276 1 99 2 211 1 352 3 12 2 378 5 
73 2 369 1 368 1 191 1 270 1 285 1 345 2 347 1 249 1 5 1 70 1 340 1 99 1 263 1 352 1 12 1 378 1 127 1 
325 1 1 1 176 1 347 2 249 1 340 1 70 1 261 1 99 1 211 1 352 1 12 1 378 1 
59 1 102 1 108 1 298 1 5 1 
312 2 191 1 66 1 192 1 71 1 122 1 263 1 47 1 364 1 90 1 298 1 301 1 326 2 73 1 205 1 369 1 345 1 179 1 329 1 348 1 307 1 351 2 59 1 102 1 61 1 377 1 353 1 108 1 
73 1 263 1 294 1 362 1 102 1 345 1 108 1 298 1 142 1 
102 1 364 1 377 1 
308 1 356 1 75 1 168 1 
163 1 111 1 356 1 200 1 75 1 271 1 168 1 
302 1 200 1 265 1 
15 1 163 1 111 1 356 1 123 1 68 2 200 3 75 1 271 3 168 1 50 1 374 1 
320 1 163 1 111 1 356 1 200 2 75 1 271 2 168 1 76 1 
15 1 162 1 111 1 163 1 271 1 168 1 240 1 199 1 146 1 200 1 149 1 
15 1 163 1 111 1 356 1 200 1 271 1 168 1 
15 1 163 1 111 1 356 2 200 1 75 1 271 1 
15 1 111 2 163 2 356 1 217 1 271 2 168 1 288 1 200 2 203 1 
15 1 224 1 111 1 163 1 356 1 75 1 271 3 168 2 227 1 240 1 320 2 212 1 200 3 
15 1 111 1 163 1 356 1 75 1 271 2 2 1 168 1 309 1 320 1 199 2 146 1 24 1 200 2 149 1 
15 1 224 1 111 2 163 2 356 1 75 1 271 4 168 2 76 1 193 1 240 1 320 2 200 4 
15 1 163 1 111 1 356 1 200 1 75 1 271 1 168 1 
224 1 111 1 163 1 356 2 68 1 75 2 271 4 168 3 240 1 131 1 320 2 123 1 200 4 50 1 
15 1 111 1 163 1 139 1 356 1 75 1 271 2 335 1 168 1 320 1 200 2 187 1 
15 1 163 1 111 1 356 1 123 2 231 1 68 2 200 3 75 1 271 3 168 1 50 1 
367 2 321 1 55 1 168 2 
15 1 163 1 111 1 200 1 271 1 13 1 
15 1 320 1 163 1 111 1 356 1 212 1 200 2 75 1 271 2 168 1 
296 1 
15 1 163 1 111 1 356 1 200 1 75 1 271 1 168 1 
15 1 111 1 163 1 356 1 68 1 75 1 271 3 168 1 320 1 212 1 200 3 
224 1 131 1 168 1 240 1 
356 1 168 1 

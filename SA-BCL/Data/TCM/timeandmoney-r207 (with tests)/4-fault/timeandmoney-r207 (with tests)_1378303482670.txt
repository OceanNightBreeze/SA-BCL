#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 33 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 262 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (8,168) (8,168) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 220 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 278 230 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) (85,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (85,195) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) (85,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (53,101,252,264) (53,101,252,264) (53,101,252,264) 178 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 188 119 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 242 224 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 58 41 117 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 58 41 117 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 58 41 6 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 242 224 227 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 242 224 227 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 182 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 182 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 182 215 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 182 112 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 182 215 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (8,168) (8,168) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (8,168) (8,168) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (8,168) (8,168) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 198 126 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 33 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 132 (125,221) 66 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 175 92 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (40,210) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (218,263) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (32,74) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 178 1 264 1 
33 1 
244 1 261 1 116 1 153 1 62 1 97 1 98 1 25 1 217 1 197 1 45 1 241 1 
261 1 116 1 79 1 96 1 62 1 97 2 98 1 25 1 123 1 217 2 197 1 45 1 241 1 
217 1 97 1 121 1 
217 1 97 1 121 1 
217 1 97 1 
217 1 97 1 121 1 
217 1 97 1 121 1 
65 1 217 2 37 1 172 1 247 1 97 2 121 1 
243 1 33 1 
261 2 243 2 133 1 79 1 96 1 62 2 123 1 241 2 240 1 
102 1 7 1 150 1 
243 1 261 1 56 1 74 1 204 1 134 2 207 2 42 1 159 1 63 1 99 1 26 1 161 1 12 1 163 1 146 2 46 1 128 1 241 1 
56 1 74 1 261 2 134 1 207 1 96 1 42 1 62 1 283 1 63 1 99 1 161 1 272 1 12 1 123 1 163 1 146 1 46 1 241 2 150 1 
243 1 261 3 123 3 79 1 96 3 62 3 283 1 241 3 
261 1 123 1 197 1 96 1 62 1 241 1 214 1 
261 1 123 1 133 1 197 1 96 1 79 1 62 1 241 1 240 1 
261 2 116 1 262 1 96 2 79 1 97 1 62 2 283 1 98 1 25 1 272 1 123 2 217 1 197 1 45 1 241 2 240 1 257 1 
231 1 243 1 244 1 261 2 123 1 96 1 62 2 283 1 241 2 
261 1 116 1 96 1 97 1 62 1 283 1 98 1 25 1 272 1 123 1 217 1 197 1 45 1 69 1 241 1 257 1 
261 2 79 1 96 2 62 2 283 1 102 1 123 2 240 1 241 2 150 1 
243 1 261 1 74 1 56 1 134 1 207 1 42 1 63 1 99 1 161 1 12 1 163 1 146 1 46 1 241 1 
243 1 261 1 56 1 134 1 207 1 42 1 63 1 99 1 193 1 12 1 163 1 218 1 146 1 46 1 241 1 
152 1 3 1 184 1 265 1 7 2 191 1 196 1 13 1 124 4 14 2 167 1 239 1 55 1 281 1 59 1 139 1 141 1 250 2 102 2 179 1 253 1 108 2 113 1 150 2 
192 1 25 1 261 1 123 1 197 1 96 1 62 1 241 1 
244 1 261 5 243 1 5 1 96 4 79 1 62 5 283 2 231 1 272 1 123 4 237 1 241 5 240 1 
192 1 261 2 123 2 197 1 96 2 62 2 241 2 214 1 
248 1 258 1 
248 1 258 1 
78 1 81 1 
78 1 81 1 
78 1 81 1 
205 1 248 1 258 1 
277 1 248 1 258 1 
78 1 81 1 120 1 248 2 177 1 258 2 
205 1 248 1 258 1 
205 1 248 1 258 1 
248 1 21 1 258 1 
248 1 21 1 258 1 
248 1 21 1 258 1 
93 1 1 2 248 2 97 2 8 1 64 2 217 2 181 2 28 1 127 2 70 2 71 1 168 1 258 2 
1 1 261 1 96 1 248 1 62 1 97 1 64 1 123 1 217 1 28 1 181 1 198 1 127 1 70 1 241 1 258 1 
142 1 236 1 201 1 
234 1 236 1 201 1 
142 2 234 1 155 1 266 1 255 1 236 3 
142 1 234 1 155 1 266 1 30 1 236 2 
142 1 234 1 155 2 266 1 236 2 
217 1 97 1 220 1 121 1 
217 2 29 1 97 2 121 2 176 1 9 1 
37 1 172 1 247 1 97 2 23 1 121 1 65 1 216 1 287 1 217 2 145 1 278 1 
37 1 172 1 247 1 97 1 23 1 230 1 216 1 65 1 287 1 217 1 145 1 278 1 
56 1 47 1 33 1 
56 1 52 1 
49 1 
56 1 163 1 
223 1 44 1 56 3 163 1 47 2 42 1 
56 1 163 1 42 1 
56 1 89 1 
152 2 281 1 245 1 39 1 246 1 174 1 137 1 158 1 139 3 250 3 162 1 124 7 67 1 235 2 14 4 239 1 149 1 
152 2 281 1 245 1 39 1 246 1 174 1 137 1 158 1 139 3 250 3 162 1 124 7 67 1 235 2 14 4 239 1 149 1 
152 2 281 1 245 1 39 1 246 1 173 1 174 1 137 1 158 1 139 3 250 3 162 1 67 1 124 7 235 2 14 4 239 1 149 1 
152 5 3 1 77 4 38 1 118 1 39 5 158 1 190 1 191 3 196 1 162 2 124 31 13 3 235 3 14 16 50 1 239 4 95 3 206 3 281 4 245 2 246 2 174 1 175 1 137 1 59 1 139 10 141 1 250 15 103 1 67 1 108 2 31 1 149 2 
152 3 3 2 39 1 158 1 190 1 196 2 162 1 124 9 235 2 14 5 276 1 239 1 281 1 245 1 246 1 137 1 59 2 139 4 141 2 250 4 67 1 108 4 111 1 149 1 
280 1 101 1 252 1 178 1 264 1 
280 1 101 1 252 1 264 1 85 1 
280 1 101 1 195 1 53 1 
280 1 101 1 252 1 264 1 85 1 
280 1 101 1 252 1 178 1 264 1 
213 1 
65 1 287 1 217 1 207 1 134 1 37 1 146 1 119 1 172 1 188 1 289 1 97 1 23 1 63 1 
242 1 244 1 261 1 116 1 169 1 153 1 97 2 43 1 62 1 98 1 25 1 217 2 219 1 197 1 45 1 254 1 34 1 241 1 
244 1 261 1 116 1 169 1 153 1 97 2 43 1 62 1 98 1 25 1 217 2 219 1 197 1 45 1 254 1 34 1 241 1 279 1 
242 1 224 1 244 1 261 1 116 1 169 1 153 1 97 2 43 1 62 1 98 1 25 1 217 2 219 1 197 1 45 1 254 1 34 1 241 1 
217 1 97 1 
261 1 116 1 153 1 37 1 43 1 197 1 275 1 45 1 241 1 244 1 169 1 172 1 58 1 61 1 97 2 62 1 98 1 23 1 65 1 25 1 217 2 105 1 219 1 106 1 254 1 256 1 289 1 34 1 
261 1 116 1 153 1 117 1 37 1 41 1 43 1 197 1 275 1 45 1 200 1 241 1 244 1 169 1 172 1 58 1 61 1 62 1 97 2 23 1 98 1 25 1 65 1 217 2 105 1 219 1 106 1 254 1 256 1 289 1 34 1 
261 1 116 1 153 1 117 1 37 1 41 1 43 1 197 1 275 1 45 1 200 1 241 1 244 1 169 1 172 1 58 1 61 1 62 1 97 2 23 1 98 1 25 1 65 1 217 2 105 1 219 1 106 1 254 1 256 1 289 1 34 1 
261 1 116 1 153 1 37 1 41 1 6 1 43 1 233 1 84 1 164 1 197 1 275 1 45 1 241 1 244 1 169 1 172 1 58 1 61 1 62 1 97 2 23 1 98 1 25 1 65 1 217 2 219 1 106 1 254 1 289 1 34 1 
242 1 224 1 244 1 261 1 116 1 169 1 153 1 227 1 97 2 43 1 62 1 98 1 25 1 217 2 219 1 197 1 45 1 254 1 34 1 241 1 
242 1 224 1 244 1 261 1 116 1 169 1 153 1 227 1 97 2 43 1 62 1 98 1 25 1 217 2 219 1 197 1 45 1 254 1 34 1 241 1 
261 1 116 1 153 1 37 1 43 1 84 1 164 1 197 1 275 1 45 1 241 1 244 1 169 1 172 1 58 1 61 1 97 2 62 1 23 1 98 1 65 1 25 1 217 2 219 1 106 1 254 1 289 1 34 1 
152 2 55 1 184 1 3 1 243 2 281 1 246 1 137 1 59 1 158 1 7 1 139 2 141 1 250 3 102 1 196 1 124 6 253 1 67 1 235 1 14 3 108 2 239 1 33 1 149 1 150 1 
152 1 3 2 184 2 77 3 39 1 82 1 7 11 191 2 196 2 274 1 124 14 13 1 14 8 50 1 202 1 239 1 55 1 243 1 95 3 206 2 281 2 175 1 59 2 22 1 139 2 141 2 250 6 102 4 183 1 108 4 109 1 290 1 150 11 
184 1 3 1 74 1 261 2 186 1 42 1 189 1 159 1 161 1 272 1 12 1 196 1 123 1 163 1 124 2 14 1 46 1 51 1 202 1 241 2 55 1 243 1 56 1 207 1 134 1 96 1 59 1 62 1 283 1 63 1 99 1 141 1 250 1 102 1 146 1 183 1 108 2 109 1 
152 4 3 3 74 2 158 1 7 7 10 2 161 2 12 2 163 2 13 2 235 1 14 10 165 1 15 2 239 3 241 3 243 2 246 1 96 1 99 2 250 10 251 1 102 7 104 2 183 1 107 2 108 6 109 1 184 3 261 3 39 4 42 2 269 1 191 2 272 1 123 1 196 3 124 20 46 2 202 1 55 3 56 2 206 2 207 3 134 3 281 3 137 1 59 3 62 1 283 1 139 8 63 1 141 3 67 1 146 3 148 1 149 1 221 2 150 7 
114 1 3 2 184 2 261 1 115 1 225 1 269 1 270 1 229 1 123 1 12 2 196 2 163 2 124 2 14 1 202 1 241 1 203 1 54 1 55 2 56 3 18 1 207 8 134 7 96 1 59 2 62 1 283 1 63 2 99 2 141 2 250 1 26 2 27 1 253 1 146 8 108 4 109 1 291 1 
152 1 3 1 184 1 261 1 79 1 80 1 7 1 191 1 196 1 123 1 124 3 13 1 14 1 240 1 241 1 239 1 55 1 206 1 281 1 96 1 59 1 62 1 139 1 141 1 250 2 102 1 183 1 108 2 150 1 
55 1 184 1 3 1 281 1 39 1 59 1 7 1 139 1 191 1 141 1 102 1 196 1 124 2 253 1 108 2 14 2 167 1 150 1 
152 1 55 1 184 1 3 1 59 1 7 1 139 1 141 1 250 2 102 1 196 1 124 2 253 1 13 1 108 2 113 1 239 1 150 1 
152 1 3 1 184 1 39 1 7 2 191 1 196 1 124 4 13 1 14 2 239 1 55 1 206 1 281 1 59 1 139 2 141 1 250 2 102 2 253 1 108 2 150 2 
55 1 184 1 3 1 281 1 39 1 59 1 7 1 139 1 191 1 141 1 102 1 27 1 196 1 124 2 108 2 14 2 167 1 150 1 
152 1 55 1 184 1 3 1 59 1 7 1 139 1 141 1 250 2 102 1 27 1 196 1 124 2 13 1 108 2 113 1 239 1 150 1 
152 1 3 1 184 1 39 1 7 2 191 1 196 1 124 4 13 1 14 2 239 1 55 1 206 1 281 1 59 1 139 2 141 1 250 2 27 1 102 2 108 2 150 2 
152 1 3 1 184 1 39 1 7 2 191 1 196 1 124 4 13 1 14 2 239 1 55 1 206 1 281 1 59 1 139 2 141 1 250 2 102 2 108 2 150 2 
184 1 3 1 74 1 261 1 42 1 161 1 12 1 196 1 163 1 124 2 14 1 46 1 202 1 241 1 55 1 243 1 56 1 207 1 134 1 59 1 63 1 99 1 141 1 250 1 107 1 146 1 108 2 109 1 
184 1 3 1 261 1 42 1 193 1 12 1 196 1 163 1 124 2 14 1 46 1 202 1 241 1 55 1 243 1 56 1 207 1 134 1 59 1 63 1 99 1 141 1 286 1 250 1 218 1 146 1 108 2 109 1 
152 1 3 1 184 1 39 1 7 2 191 1 196 1 124 4 13 1 14 2 239 1 55 1 206 1 281 1 59 1 139 2 141 1 250 2 102 2 183 1 108 2 150 2 
152 1 184 1 3 1 74 1 261 1 39 1 42 1 7 2 191 1 161 1 12 1 196 1 163 1 13 1 124 4 14 2 46 1 239 1 241 1 203 1 55 1 56 1 206 1 281 1 207 1 134 1 59 1 139 2 99 1 141 1 250 2 102 2 104 1 107 1 146 1 108 2 150 2 
3 1 184 1 2 1 261 1 39 1 79 1 7 1 191 1 196 1 123 1 13 1 124 3 14 2 239 1 240 1 241 1 55 1 206 1 281 1 96 1 59 1 62 1 139 1 141 1 250 1 102 1 183 1 108 2 150 1 
152 1 4 1 3 2 77 2 154 1 39 1 157 1 191 1 196 2 124 9 13 1 14 4 50 1 239 1 91 1 95 1 206 1 281 1 175 1 59 2 60 1 139 2 141 2 215 1 250 5 182 1 108 4 111 1 288 1 
152 1 4 1 3 2 77 2 154 1 39 1 157 1 191 1 196 2 124 9 13 1 14 4 50 1 239 1 91 1 95 1 206 1 281 1 175 1 59 2 60 1 139 2 141 2 215 1 250 5 182 1 108 4 111 1 288 1 
152 6 4 1 3 2 77 4 154 1 39 6 267 1 187 1 158 1 190 1 191 6 232 1 194 1 196 2 124 46 13 6 235 1 14 24 50 2 239 7 92 1 91 3 94 1 95 4 206 6 281 7 246 1 175 2 137 1 59 2 22 2 60 1 139 12 141 2 215 1 250 22 67 1 182 1 108 4 111 1 288 1 149 1 
152 1 3 2 4 1 206 1 95 1 154 1 77 2 281 1 39 1 157 1 175 1 59 2 60 1 139 2 191 1 141 2 250 5 196 2 13 1 124 9 182 1 14 4 108 4 288 1 111 1 50 1 112 1 239 1 91 1 
152 1 4 1 3 3 154 2 77 2 39 1 187 1 267 1 190 2 191 2 232 1 194 1 196 3 124 20 13 1 14 11 239 1 91 3 92 1 94 1 95 2 206 2 281 2 175 2 59 3 60 2 139 2 141 3 215 1 250 9 182 1 108 6 111 1 288 1 
64 1 1 1 17 1 273 1 181 1 68 1 120 1 248 1 70 1 258 1 
277 1 20 1 
64 1 1 1 260 1 181 1 248 1 70 1 282 1 140 1 258 1 
93 1 1 1 248 1 97 1 8 1 64 1 217 1 28 1 181 1 127 2 70 1 71 1 168 1 258 1 
93 1 1 1 248 1 97 1 8 1 64 1 217 1 28 1 181 1 127 2 70 1 71 1 168 1 258 1 
93 1 1 1 248 1 97 1 8 1 64 1 217 1 28 1 181 1 127 2 70 1 71 1 168 1 258 1 
205 1 180 1 177 1 
205 1 180 1 177 1 
21 1 130 1 
21 1 130 1 177 1 
144 1 72 1 
93 1 1 1 248 1 97 1 121 1 64 1 217 1 181 1 126 1 198 1 127 1 70 1 71 1 258 1 
205 1 180 1 
21 1 130 1 177 1 
184 1 3 1 261 2 225 1 156 1 12 1 196 1 163 1 124 2 14 1 238 1 202 1 241 2 55 1 56 1 18 1 207 2 134 2 209 1 57 1 59 1 62 2 99 1 141 1 250 1 26 2 146 2 183 1 108 2 109 1 222 1 
203 1 134 2 207 2 171 1 212 1 269 1 99 1 142 1 143 1 12 1 234 1 146 2 147 1 255 1 48 1 86 1 236 2 201 1 73 1 
134 1 207 1 171 1 269 1 11 1 99 1 142 1 12 1 234 1 146 1 147 1 255 1 48 1 86 1 236 2 201 1 73 1 
54 1 114 1 56 1 134 1 207 1 211 1 212 1 63 1 99 1 12 1 163 1 146 1 48 1 90 1 
134 1 207 1 171 1 212 1 269 1 99 1 142 1 143 1 12 1 234 1 146 1 147 1 255 1 48 1 86 1 236 2 201 1 73 1 
24 1 
106 1 40 1 210 1 33 1 
65 1 105 1 37 1 106 1 172 1 256 1 289 1 23 1 
223 1 132 1 56 2 37 1 134 1 207 1 136 1 172 1 42 1 23 1 63 1 99 1 65 1 287 1 12 2 66 1 163 1 125 1 146 1 289 1 52 1 
65 1 95 1 77 1 37 1 106 1 172 1 175 1 289 1 23 1 92 1 
16 1 76 2 281 2 37 1 172 1 246 1 137 1 97 1 23 1 65 1 217 1 106 2 200 1 199 1 289 1 239 1 149 1 
65 1 37 1 106 1 172 1 210 1 289 1 
206 1 13 1 281 1 106 1 23 1 239 1 191 1 
207 1 134 1 146 1 63 1 
65 1 287 1 37 1 106 1 172 1 138 1 289 1 23 1 
64 1 122 1 1 1 
64 1 1 1 144 1 68 1 151 1 
64 1 122 1 1 1 
64 1 122 1 1 1 
64 1 1 1 208 1 
64 1 1 1 208 1 
64 1 1 1 208 1 
64 1 1 1 
248 1 258 1 
152 2 3 1 77 1 158 1 196 1 124 8 235 1 14 4 239 1 92 1 95 1 281 1 246 1 175 1 137 1 59 1 139 2 141 1 250 4 67 1 108 2 111 1 149 1 
152 2 3 2 77 2 39 1 158 1 191 1 196 2 124 11 235 1 14 6 50 1 88 1 239 1 92 1 95 1 206 1 281 2 246 1 175 1 137 1 59 2 139 3 141 2 250 5 67 1 108 4 111 1 149 1 
152 3 3 3 77 1 39 1 187 1 267 1 158 1 190 1 191 2 194 1 196 3 124 19 13 2 235 1 14 9 88 1 239 3 92 1 94 1 95 1 206 2 281 3 246 1 175 1 137 1 59 3 139 4 141 3 250 10 67 1 108 6 111 1 149 1 
152 3 3 3 77 1 39 2 187 1 267 1 158 1 190 1 191 2 194 1 196 3 124 17 13 1 235 1 14 10 88 1 239 2 92 1 94 1 95 1 206 2 281 3 246 1 175 1 137 1 59 3 139 5 141 3 250 7 67 1 108 6 111 1 149 1 
152 2 3 1 77 1 158 1 196 1 124 8 235 1 14 4 239 1 92 1 95 1 281 1 246 1 175 1 137 1 59 1 139 2 141 1 250 4 67 1 108 2 111 1 149 1 
152 1 94 1 3 1 206 2 77 1 95 1 281 2 39 1 267 1 187 1 175 1 59 1 139 2 191 2 141 1 250 6 194 1 196 1 13 2 124 12 14 6 108 2 111 1 239 2 92 1 
152 3 3 4 77 1 39 2 187 1 267 1 158 1 190 2 191 2 194 1 196 4 124 18 13 1 235 1 14 10 88 1 239 2 92 1 94 1 95 1 206 2 281 3 246 1 175 1 137 1 59 4 139 5 141 4 250 8 67 1 108 8 111 1 149 1 
152 3 3 4 77 1 39 3 157 1 187 1 267 1 190 2 191 3 194 1 196 4 124 16 13 2 14 9 239 2 92 1 94 1 95 1 206 3 281 3 175 1 59 4 139 6 141 4 250 7 108 8 111 1 
152 3 281 1 246 3 39 3 137 1 158 1 139 6 250 4 124 7 67 2 14 3 239 1 149 3 
152 3 3 4 77 1 39 1 157 1 187 1 267 1 158 1 190 2 191 2 194 1 196 4 124 18 13 1 235 1 14 10 239 2 92 1 94 1 95 1 206 2 281 3 246 1 175 1 137 1 59 4 139 4 141 4 250 8 67 1 108 8 111 1 149 1 
152 2 3 2 281 1 39 1 246 1 137 1 59 2 158 1 139 3 190 1 141 2 250 4 196 2 124 8 67 1 235 1 14 4 108 4 239 1 149 1 
152 2 250 3 124 6 281 1 67 1 235 1 14 3 246 1 137 1 158 1 139 2 239 1 149 1 33 1 
152 1 3 1 206 1 281 1 39 1 59 1 139 2 191 1 141 1 250 2 196 1 13 1 124 4 108 2 14 2 88 1 239 1 
152 1 77 2 95 1 206 1 281 1 39 1 175 1 139 2 191 1 250 4 13 1 124 7 14 3 50 1 239 1 
152 5 3 2 77 2 39 4 158 1 83 1 190 2 191 2 196 2 124 23 13 2 235 1 14 11 50 1 239 3 206 2 95 2 281 3 246 2 137 1 59 2 22 1 139 9 141 2 250 12 67 1 108 4 290 1 149 2 
250 1 77 1 124 1 
95 1 124 1 14 1 
152 2 3 1 206 1 281 1 39 1 59 1 139 3 10 1 191 1 141 1 250 3 196 1 124 6 13 1 108 2 14 3 88 1 239 1 
152 1 94 1 3 1 206 2 77 1 95 1 281 2 39 1 267 1 187 1 175 1 59 1 139 2 191 2 141 1 250 6 194 1 196 1 13 2 124 12 14 6 108 2 111 1 239 2 92 1 
152 1 281 1 246 1 39 1 137 1 139 2 250 3 124 6 14 3 239 1 149 1 
152 1 3 1 39 1 246 1 59 1 158 1 139 2 83 1 190 1 141 1 250 2 196 1 67 1 124 3 14 1 108 2 149 1 
152 3 3 1 281 2 246 2 39 2 137 1 59 1 139 5 141 1 250 5 196 1 124 10 108 2 14 5 111 1 199 1 149 2 239 2 
3 1 281 1 39 1 59 1 139 1 191 1 141 1 196 1 124 2 108 2 14 2 111 1 
152 1 3 1 206 1 281 1 39 1 59 1 139 2 191 1 141 1 250 2 196 1 13 1 124 4 108 2 14 2 111 1 239 1 
152 1 3 3 246 1 39 1 157 1 59 3 83 1 139 2 190 1 141 3 250 2 196 3 124 3 108 6 14 1 111 1 149 1 
152 7 3 5 77 4 118 1 38 1 39 5 157 1 158 1 83 1 190 2 191 3 196 5 124 34 13 3 235 1 14 16 50 1 88 1 239 5 95 3 206 3 281 5 246 3 175 1 137 2 59 5 139 12 141 5 250 18 67 1 108 10 31 1 111 1 149 3 
231 1 243 1 261 1 244 1 110 1 62 1 241 1 
243 1 244 1 261 1 62 1 271 1 285 1 160 1 284 1 231 1 110 1 241 1 35 1 
114 1 54 1 56 1 12 1 163 1 207 1 134 1 146 1 33 1 63 1 99 1 
243 1 56 1 261 2 74 1 134 1 207 1 96 1 42 1 62 1 283 1 63 1 99 1 12 1 123 1 163 1 146 1 46 1 241 2 
74 1 261 2 116 1 42 2 268 1 123 2 12 1 163 2 197 1 46 1 166 1 241 2 89 1 243 1 56 3 207 1 134 1 96 1 62 2 283 1 99 1 25 1 146 1 
261 2 116 1 42 2 268 1 123 2 12 1 163 2 197 1 46 1 166 1 241 2 89 1 243 1 56 3 207 2 134 2 96 1 19 1 62 2 283 1 99 1 25 1 218 1 146 2 
56 1 263 1 217 1 207 1 134 1 146 1 166 1 52 1 97 1 
56 1 217 1 207 1 134 1 146 1 166 1 52 1 97 1 32 1 
12 1 115 1 207 1 134 1 146 1 99 1 
203 1 223 1 56 3 115 1 18 1 170 1 134 6 207 7 42 1 269 1 270 1 229 1 63 2 99 2 26 1 12 3 163 2 146 7 87 1 291 1 131 1 
152 2 184 2 3 2 261 2 74 1 42 1 158 1 7 1 161 1 12 1 196 2 123 1 163 1 124 6 235 1 14 3 46 1 238 1 239 1 241 2 203 1 55 2 243 2 56 1 281 1 134 1 207 1 246 1 96 1 137 1 59 2 62 1 139 2 283 1 99 1 141 2 250 3 102 1 104 1 67 1 183 1 146 1 107 1 108 4 149 1 221 1 150 1 
217 1 97 1 121 1 
203 1 223 1 56 2 115 1 134 2 207 2 136 1 42 1 99 1 12 2 163 1 146 2 47 1 
203 1 54 1 114 1 56 1 134 4 207 4 185 1 19 1 63 1 99 1 12 1 163 1 146 4 
56 1 170 1 226 1 134 2 207 2 42 1 99 1 100 1 12 2 163 1 146 2 165 1 166 1 131 1 
12 1 234 1 207 1 134 1 146 1 236 1 201 1 73 1 63 1 99 1 
203 1 56 1 18 1 134 2 207 2 269 1 99 1 12 1 163 1 146 2 222 1 
114 1 54 1 203 1 56 3 18 1 134 4 207 5 185 1 63 1 270 1 99 2 12 2 163 2 146 5 166 1 291 1 
114 1 54 1 203 1 56 3 36 1 18 1 134 4 207 5 185 1 63 1 270 1 99 2 12 2 163 2 146 5 166 1 
243 1 56 1 261 2 134 1 207 1 96 1 42 1 62 1 283 1 63 1 99 1 12 1 123 1 163 1 218 1 146 1 46 1 241 2 
223 1 56 1 170 1 134 1 207 1 42 1 99 1 12 2 163 1 146 1 166 1 87 1 131 1 
0 1 243 1 129 1 228 1 259 1 
0 2 243 1 75 1 116 1 135 1 249 1 97 2 228 1 98 1 121 1 25 1 217 2 197 1 45 1 129 2 257 1 259 2 
0 1 261 1 156 1 57 1 209 1 62 1 228 1 129 1 241 1 
75 1 135 1 228 1 

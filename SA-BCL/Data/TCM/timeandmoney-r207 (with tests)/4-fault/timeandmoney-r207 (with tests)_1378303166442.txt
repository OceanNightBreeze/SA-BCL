#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 109 114 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 1 179 9 251 2 6 9 62 1 120 1 188 1 75 1 314 2 46 1 194 2 125 6 197 3 240 2 53 2 26 1 54 1 102 1 370 5 298 1 299 2 344 1 246 2 245 1 287 1 158 4 319 1 378 1 
351 1 251 2 179 9 6 9 62 1 120 1 188 1 75 1 314 2 46 1 194 2 125 6 197 3 240 2 53 2 26 1 54 1 102 1 370 5 298 1 299 2 344 1 245 1 246 2 287 1 158 4 319 1 378 1 
351 1 251 2 179 10 6 10 62 1 120 1 188 1 75 1 314 2 46 1 194 2 125 7 197 4 240 2 53 2 26 1 54 1 102 1 370 6 298 1 299 2 344 1 245 1 246 2 287 1 158 5 319 1 378 1 
351 1 251 2 179 7 6 7 62 1 188 1 75 1 314 2 46 1 194 2 125 4 197 2 240 2 53 2 26 1 54 1 102 1 370 4 298 1 299 2 344 1 245 1 246 1 287 1 158 3 319 1 378 1 
351 1 314 1 194 1 179 4 125 3 251 1 197 1 6 4 26 1 53 1 102 1 370 3 299 1 120 1 246 2 344 1 158 2 319 1 
268 1 351 1 314 1 194 1 179 2 363 1 6 2 240 1 26 1 53 1 27 1 370 1 299 1 188 1 319 1 378 1 
351 1 194 2 179 3 125 1 197 1 6 3 240 1 26 1 53 2 370 2 287 1 158 1 319 1 
351 1 179 9 251 1 3 1 6 9 120 1 314 1 46 1 125 7 194 2 197 3 240 1 53 2 26 1 102 1 370 5 299 1 245 1 246 2 344 1 108 1 287 1 158 4 319 1 
351 1 179 9 251 1 3 1 6 9 120 1 314 1 46 1 125 7 194 2 197 3 240 1 53 2 26 1 102 1 370 5 299 1 245 1 246 2 344 1 108 1 287 1 158 4 319 1 
28 1 44 1 39 1 
89 2 39 1 115 1 
337 2 124 2 211 2 2 2 216 2 52 2 131 1 25 1 
266 1 322 1 136 1 2 3 90 1 180 1 34 1 7 1 117 2 118 1 10 1 274 1 312 1 38 1 277 1 362 2 124 3 211 2 96 2 238 1 98 1 216 2 366 2 52 2 25 1 336 2 337 2 339 1 83 1 105 1 342 1 107 1 347 1 264 1 289 1 131 1 132 1 
337 1 124 1 211 1 2 1 216 1 275 1 359 1 52 1 131 1 123 1 
124 1 44 1 60 1 2 1 260 1 239 1 52 1 81 1 141 1 373 1 106 1 39 1 294 1 123 1 
211 1 124 1 44 1 2 1 216 1 260 2 239 1 52 1 337 1 81 1 141 2 373 1 106 1 39 1 123 1 
141 1 330 1 122 1 260 1 129 1 
204 1 44 1 141 2 122 1 39 1 260 2 184 1 129 1 
141 1 122 1 260 1 
211 1 124 1 2 1 216 1 260 1 332 1 52 1 129 1 337 1 141 1 275 1 359 1 131 1 123 1 
39 1 
204 1 225 1 44 1 141 2 122 1 39 1 260 2 129 1 
0 1 32 2 58 1 44 1 237 1 353 1 182 2 260 5 272 1 129 2 101 1 230 1 204 1 141 5 166 2 122 2 39 1 234 1 375 1 
134 1 211 1 124 2 2 2 238 1 98 1 180 1 366 1 52 1 336 1 337 1 339 1 231 1 117 1 10 1 342 1 274 1 263 1 38 1 277 1 
28 1 25 1 
124 2 211 1 2 2 216 1 33 1 52 2 25 2 337 1 92 1 
70 1 134 1 379 1 
124 1 2 1 238 1 98 1 180 1 366 1 25 1 336 1 339 1 244 1 117 1 10 1 342 1 274 1 277 1 38 1 
337 3 124 3 211 3 263 1 2 3 216 1 52 3 25 1 
337 1 124 1 211 1 2 1 359 1 52 1 123 1 
337 1 124 1 211 1 92 1 2 1 216 1 33 1 52 1 123 1 
136 1 2 4 90 1 180 1 34 1 7 1 231 1 117 1 118 1 141 1 10 1 92 1 274 1 312 1 38 1 277 1 123 1 41 1 362 1 124 4 211 3 96 2 98 1 238 1 216 2 366 1 260 1 239 1 80 1 52 3 25 1 336 1 81 1 337 3 339 1 373 1 105 1 342 1 263 1 106 1 107 1 264 1 289 1 131 1 
337 1 124 2 211 1 263 1 2 2 294 1 368 1 52 2 25 1 
211 3 124 3 2 3 216 1 260 1 239 1 52 3 80 1 337 3 81 1 231 1 141 1 92 1 373 1 263 2 106 1 208 1 39 1 123 1 
70 1 134 1 211 2 124 2 2 2 216 1 52 2 337 2 92 1 263 1 
124 1 2 1 238 1 98 1 180 1 366 1 25 1 336 1 339 1 117 1 10 1 274 1 342 1 277 1 38 1 
320 1 124 1 2 1 238 1 97 1 180 1 366 1 25 1 336 1 339 1 117 1 274 1 342 1 277 1 38 1 
134 2 136 2 90 1 34 1 356 1 7 1 233 1 312 1 190 1 191 1 192 1 362 4 70 2 212 1 77 1 96 2 219 1 83 2 105 1 264 1 300 1 288 1 379 2 305 1 
337 1 124 1 211 1 106 1 2 1 308 1 52 1 123 1 
210 1 211 4 124 5 2 5 216 1 368 1 52 5 25 1 229 1 337 4 231 1 92 1 263 2 294 1 
337 2 124 2 211 2 2 2 359 1 308 1 52 2 123 1 
74 1 84 1 
74 1 84 1 
17 1 57 1 
17 1 57 1 
17 1 57 1 
74 1 84 1 161 1 
74 1 84 1 78 1 
74 2 84 2 357 1 313 1 17 1 57 1 
74 1 84 1 161 1 
74 1 84 1 161 1 
185 1 74 1 84 1 
185 1 74 1 84 1 
185 1 74 1 84 1 
248 1 74 2 267 2 290 1 112 1 259 2 171 2 260 2 307 1 79 1 271 1 292 1 82 2 141 2 84 2 357 1 187 2 39 1 67 3 
69 1 124 2 74 1 211 2 160 1 267 1 259 1 78 1 2 2 365 1 171 1 198 1 260 1 52 2 79 1 25 1 337 2 61 1 141 1 222 1 84 1 187 1 30 1 67 1 
314 1 299 1 251 1 
27 1 314 1 299 1 
340 1 27 1 299 3 318 1 251 2 301 1 
27 1 369 1 299 2 318 1 251 1 301 1 
27 1 299 2 251 1 318 2 301 1 
0 1 32 1 89 3 1 1 113 1 182 1 115 1 204 1 230 3 356 1 325 2 141 5 166 1 36 1 122 1 234 2 39 2 68 1 69 1 73 2 212 1 44 1 365 1 215 2 49 1 260 5 173 1 316 1 129 4 30 1 288 1 305 1 
133 1 0 1 32 2 89 9 182 2 115 3 204 1 230 8 35 1 356 3 325 6 141 9 257 5 166 2 36 2 121 1 122 6 234 6 39 5 68 1 360 1 73 6 212 3 237 1 44 1 330 5 260 9 173 2 316 3 129 7 220 1 30 4 86 1 288 3 305 3 
32 1 1 1 89 4 113 1 182 1 115 2 230 3 356 1 141 3 325 2 166 1 36 1 39 3 234 2 73 2 212 1 44 1 237 1 215 1 260 3 173 1 129 2 316 1 30 1 288 1 305 1 
133 1 32 1 89 7 1 1 113 1 182 1 115 3 230 5 35 1 356 2 325 4 141 4 166 1 36 1 39 4 234 4 73 4 212 2 44 1 237 1 215 2 260 4 173 1 129 3 316 2 30 2 86 1 288 2 305 2 
28 1 342 1 181 1 
342 1 253 1 
149 1 
342 1 38 1 
342 3 228 1 180 1 181 2 38 1 164 1 
342 1 180 1 38 1 
342 1 343 1 
71 1 362 1 193 1 137 1 354 1 241 1 338 1 83 1 242 1 233 2 300 1 93 1 377 1 
71 1 362 1 193 1 137 1 354 1 241 1 338 1 83 1 242 1 233 2 300 1 93 1 377 1 
71 1 362 1 178 1 193 1 137 1 354 1 241 1 338 1 83 1 242 1 233 2 300 1 93 1 377 1 
136 12 227 1 137 1 138 1 354 2 34 1 254 1 356 3 7 1 233 9 63 1 312 1 93 2 40 3 71 2 146 1 362 25 212 3 193 2 96 2 334 1 241 1 316 3 338 5 242 1 83 13 284 1 341 4 105 1 300 4 377 2 288 3 305 3 
71 1 362 3 193 1 226 1 136 1 137 1 96 4 252 1 138 1 354 1 241 1 34 2 338 1 7 2 83 2 105 2 233 3 300 2 312 2 93 1 377 1 
351 1 111 1 135 1 269 1 251 1 179 2 140 1 163 1 6 2 117 1 274 1 37 1 207 1 314 1 125 1 214 1 194 1 366 1 23 1 240 1 336 1 53 1 26 1 339 1 27 1 340 1 370 1 299 2 302 1 319 1 
351 1 111 1 135 1 269 1 251 1 179 3 5 1 140 1 163 1 6 3 117 1 142 1 274 1 37 1 207 1 314 1 194 1 125 2 366 1 23 1 240 1 336 1 53 1 340 1 339 1 27 1 370 1 299 2 157 1 319 1 
351 1 111 1 269 1 179 2 251 1 5 1 140 1 6 2 117 1 142 1 274 1 37 1 207 1 314 1 125 2 366 1 23 1 240 1 336 1 339 1 27 1 340 1 370 1 299 2 319 1 
59 1 111 2 194 1 179 1 238 1 366 1 217 1 140 2 240 2 6 1 53 1 336 1 339 1 255 1 117 1 153 1 274 1 342 1 207 2 189 1 38 1 157 1 14 1 
111 1 135 1 269 1 251 1 179 1 5 1 140 1 163 1 6 1 117 1 274 1 37 1 207 1 314 1 194 1 366 1 23 1 240 1 336 1 53 1 26 1 339 1 27 1 340 1 299 2 302 1 
91 1 
0 1 60 1 291 1 2 1 115 2 204 3 255 1 117 2 166 1 206 1 11 1 122 6 209 1 294 1 123 1 258 1 124 1 328 2 21 1 173 1 260 5 218 1 336 2 81 1 339 1 262 4 342 1 348 2 224 1 176 2 349 2 32 1 89 2 182 1 230 2 141 5 274 1 189 1 39 2 38 1 234 2 147 2 44 1 315 2 238 2 366 2 239 1 199 2 282 1 52 1 243 1 373 1 55 1 106 1 56 1 
124 1 225 1 147 1 60 1 291 1 2 1 260 3 239 1 282 1 52 1 204 1 81 1 262 2 141 3 373 1 106 1 55 1 122 2 209 1 294 1 56 1 123 1 
124 1 225 1 44 1 315 1 60 1 291 1 2 1 260 3 239 1 282 1 52 1 204 1 81 1 262 3 141 3 373 1 106 1 55 1 122 1 39 1 209 1 294 1 56 1 123 1 
225 1 60 1 291 1 2 1 204 1 141 3 122 2 209 1 39 1 294 1 123 1 124 1 147 1 315 1 44 1 260 3 239 1 52 1 282 1 199 1 81 1 262 3 373 1 55 1 106 1 56 1 
225 1 60 1 291 1 2 2 204 1 141 3 275 1 122 2 359 1 39 1 209 1 294 1 123 2 211 1 124 2 147 1 44 1 216 1 332 1 260 3 239 1 52 2 282 1 199 1 337 1 81 1 262 2 373 1 55 1 106 1 223 1 56 1 131 1 
0 1 32 1 60 1 291 1 89 2 2 1 182 1 115 2 204 2 230 1 141 4 166 1 11 1 122 4 39 2 234 1 209 1 294 1 123 1 258 1 124 1 147 2 44 1 315 2 328 2 260 4 218 1 239 1 199 2 282 1 52 1 81 1 262 4 373 1 55 1 106 1 348 2 176 2 56 1 349 2 
0 1 32 1 60 1 291 1 2 1 182 1 115 2 204 2 230 1 141 4 166 1 11 1 122 4 39 1 234 1 209 1 294 1 258 1 123 1 19 1 124 1 147 2 44 1 315 2 328 2 296 1 260 4 239 1 199 2 52 1 282 1 335 1 81 1 262 4 373 1 55 1 106 1 348 2 176 2 56 1 349 2 
0 1 32 1 60 1 291 1 2 1 182 1 115 2 204 2 230 1 141 4 166 1 11 1 122 4 39 1 234 1 209 1 294 1 258 1 123 1 19 1 124 1 147 2 44 1 315 2 328 2 296 1 260 4 239 1 199 2 52 1 282 1 335 1 81 1 262 4 373 1 55 1 106 1 348 2 176 2 56 1 349 2 
0 1 32 1 60 1 291 1 89 2 2 1 182 1 355 1 204 2 230 1 141 4 166 1 11 1 122 4 39 1 234 1 209 1 294 1 123 1 145 2 19 1 124 1 147 2 44 1 315 2 24 2 260 4 239 1 199 2 52 1 282 1 81 1 262 4 373 1 55 1 106 1 374 1 348 2 56 1 87 1 349 2 
0 1 32 1 60 1 291 1 2 1 182 1 115 2 204 2 230 1 141 4 166 1 11 1 122 5 39 1 234 1 209 1 294 1 258 1 123 1 19 1 124 1 147 3 44 1 328 2 315 3 296 1 260 4 239 1 333 1 335 1 52 1 282 1 199 3 81 1 262 5 373 1 55 1 106 1 348 2 176 2 56 1 349 2 
0 1 32 1 60 1 291 1 2 1 182 1 115 2 204 2 230 1 141 4 166 1 11 1 122 5 39 1 234 1 209 1 294 1 258 1 123 1 19 1 124 1 147 3 44 1 328 2 315 3 296 1 260 4 239 1 333 1 335 1 52 1 282 1 199 3 81 1 262 5 373 1 55 1 106 1 348 2 176 2 56 1 349 2 
0 1 32 1 60 1 291 1 89 2 2 1 182 1 204 2 230 1 141 4 166 1 11 1 122 4 39 1 234 1 209 1 294 1 123 1 145 2 124 1 147 2 44 1 315 2 24 2 260 4 218 1 239 1 199 2 282 1 52 1 81 1 262 4 373 1 55 1 106 1 374 1 348 2 56 1 349 2 
71 1 96 2 137 1 90 1 354 1 34 1 241 1 7 1 28 1 105 1 233 1 300 1 264 1 312 1 192 1 
134 11 136 6 90 1 34 2 7 2 356 1 205 1 233 2 312 2 235 1 40 3 295 1 362 14 146 1 70 4 212 2 96 4 364 1 334 1 151 1 25 1 316 2 338 1 83 8 341 3 105 2 347 1 300 1 264 2 288 1 289 1 379 11 305 2 
249 1 136 1 2 2 180 1 90 1 34 1 7 1 231 1 117 1 205 1 10 1 274 1 312 1 38 1 277 1 167 1 70 1 362 2 124 2 211 1 96 2 98 1 238 1 366 1 52 1 25 1 336 1 337 1 339 1 244 1 83 1 342 1 263 1 105 1 286 1 264 1 347 1 289 1 
247 2 2 3 5 1 7 3 117 3 205 1 118 2 10 2 15 1 71 1 70 6 211 1 124 3 212 2 20 2 172 2 336 3 337 1 338 4 339 2 83 7 263 1 342 2 347 1 300 3 264 3 305 2 134 6 136 7 137 1 90 3 180 2 354 1 34 3 356 2 231 1 186 1 274 2 233 7 312 3 277 2 38 2 362 14 96 6 238 1 98 2 366 3 52 1 241 1 316 2 154 1 105 3 376 2 288 2 289 1 379 6 
136 1 2 1 90 2 5 1 203 1 34 2 7 2 255 1 117 8 274 2 312 2 189 1 66 1 38 2 192 1 18 1 362 2 124 1 211 1 236 1 280 1 48 1 96 4 214 1 238 2 366 7 52 1 336 8 337 1 339 2 372 1 83 1 263 1 342 3 105 2 264 2 347 1 289 1 132 2 
134 1 136 2 2 1 90 1 34 1 7 1 356 1 205 1 92 1 233 1 312 1 16 1 70 1 362 3 211 1 124 1 212 1 96 2 216 1 52 1 316 1 337 1 83 1 105 1 300 1 264 1 288 1 379 1 305 1 
70 1 134 1 362 2 212 1 96 2 90 1 34 1 338 1 7 1 83 2 105 1 233 1 264 1 312 1 191 1 379 1 192 1 305 1 
70 1 134 1 362 2 136 2 96 2 90 1 219 1 34 1 7 1 356 1 105 1 233 1 300 1 264 1 312 1 288 1 379 1 192 1 
134 2 136 2 90 1 34 1 7 1 356 1 233 2 312 1 192 1 362 4 70 2 212 1 96 2 316 1 338 1 83 2 105 1 264 1 300 1 288 1 305 1 379 2 
18 1 70 1 134 1 362 2 212 1 96 2 90 1 34 1 338 1 7 1 83 2 105 1 233 1 264 1 312 1 191 1 379 1 305 1 
18 1 70 1 134 1 362 2 136 2 96 2 90 1 219 1 34 1 7 1 356 1 105 1 233 1 300 1 264 1 312 1 288 1 379 1 
134 2 136 2 90 1 34 1 7 1 356 1 233 2 312 1 18 1 362 4 70 2 212 1 96 2 316 1 338 1 83 2 105 1 264 1 300 1 288 1 305 1 379 2 
134 2 136 2 90 1 34 1 7 1 356 1 233 2 312 1 362 4 70 2 212 1 96 2 316 1 338 1 83 2 105 1 264 1 300 1 288 1 305 1 379 2 
136 1 2 1 180 1 90 1 34 1 7 1 117 1 118 1 10 1 274 1 312 1 38 1 277 1 362 2 124 1 96 2 98 1 238 1 366 1 25 1 336 1 339 1 83 1 342 1 105 1 347 1 264 1 289 1 
320 1 136 1 2 1 180 1 90 1 34 1 7 1 117 1 274 1 312 1 38 1 277 1 13 1 362 2 124 1 96 2 97 1 238 1 366 1 25 1 336 1 339 1 83 1 342 1 105 1 347 1 264 1 289 1 
134 2 136 2 90 1 34 1 7 1 356 1 205 1 233 2 312 1 362 4 70 2 212 1 96 2 316 1 338 1 83 2 105 1 264 1 300 1 288 1 305 1 379 2 
134 2 136 2 2 1 180 1 90 1 34 1 356 1 7 1 117 1 118 1 10 1 274 1 233 2 312 1 277 1 38 1 70 2 362 4 124 1 212 1 96 2 98 1 214 1 366 1 336 1 316 1 338 1 339 1 83 2 342 1 105 1 300 1 264 1 376 1 288 1 379 2 305 1 
134 1 136 1 2 1 90 1 34 1 356 1 7 1 205 1 92 1 233 1 312 1 362 3 70 1 211 1 124 1 212 1 96 2 216 1 52 1 316 1 338 1 337 1 83 2 105 1 264 1 288 1 303 1 305 1 379 1 
136 17 252 1 324 1 138 1 114 1 34 3 7 3 356 4 9 1 232 1 119 2 309 1 233 5 326 1 312 3 293 1 40 3 361 1 362 32 146 1 212 4 213 3 96 6 334 3 367 1 283 1 316 4 338 3 83 15 104 1 341 4 105 3 300 2 109 1 288 4 202 1 305 4 
136 16 252 1 324 1 138 2 114 1 34 4 7 4 356 3 9 1 232 1 119 2 309 1 233 6 326 1 312 4 293 1 40 3 361 1 362 33 146 1 212 4 213 4 96 8 334 3 367 1 283 1 316 4 338 3 83 17 104 1 341 4 105 4 300 3 109 1 288 3 202 1 305 4 
136 20 137 1 252 1 324 1 138 1 114 1 354 1 34 2 7 2 356 6 9 1 232 1 119 1 309 1 233 12 326 1 312 2 40 4 295 2 71 1 362 41 146 2 212 6 213 3 96 4 334 2 367 1 283 1 241 1 316 6 338 6 83 21 104 1 341 4 105 2 300 6 109 1 288 6 202 1 305 6 
136 10 252 1 324 1 114 1 34 2 7 2 356 3 119 1 233 6 312 2 40 1 278 1 361 1 362 19 146 1 212 3 213 2 96 4 334 1 283 1 316 3 338 3 83 9 104 1 341 2 105 2 300 3 109 2 288 3 305 3 
136 11 252 1 324 2 138 2 114 1 34 3 7 3 356 2 9 1 232 1 119 2 309 1 233 2 326 1 312 3 40 2 362 24 212 3 213 3 96 6 334 2 367 1 283 1 316 3 338 1 83 13 104 1 341 2 105 3 300 1 109 1 288 2 202 1 305 3 
248 1 321 1 74 1 267 1 259 1 84 1 357 1 187 1 171 1 271 1 
78 1 198 1 
74 1 152 1 267 1 47 1 306 1 259 1 84 1 187 1 171 1 
248 1 74 1 267 1 290 1 259 1 171 1 260 1 307 1 79 1 271 1 292 1 82 1 141 1 84 1 357 1 187 1 39 1 67 2 
248 1 74 1 267 1 290 1 259 1 171 1 260 1 307 1 79 1 271 1 292 1 82 1 141 1 84 1 357 1 187 1 39 1 67 2 
248 1 74 1 267 1 290 1 259 1 171 1 260 1 307 1 79 1 271 1 292 1 82 1 141 1 84 1 357 1 187 1 39 1 67 2 
161 1 265 1 313 1 
161 1 265 1 313 1 
185 1 313 1 116 1 
185 1 116 1 
61 1 222 1 
290 1 267 1 160 1 2 2 61 1 141 1 310 1 187 1 67 1 69 1 124 2 74 1 211 2 259 1 78 1 365 1 171 1 198 1 260 1 52 2 25 1 129 1 337 2 82 1 222 1 84 1 30 1 
161 1 265 1 
185 1 116 1 
136 1 2 2 90 1 139 1 34 1 7 1 117 2 205 1 274 1 312 1 38 1 144 1 362 2 124 2 236 1 48 1 96 2 169 1 366 2 52 2 336 2 339 1 200 1 83 1 342 1 105 1 175 1 264 1 347 1 289 1 132 2 
314 1 111 1 135 1 269 1 251 1 214 1 170 1 366 2 5 1 183 1 128 1 336 2 340 1 27 1 339 1 117 2 299 2 274 1 37 1 
314 1 111 1 135 1 269 1 251 1 170 1 366 1 5 1 174 1 336 1 340 1 27 1 339 1 117 1 299 2 274 1 37 1 
111 1 238 1 366 1 128 1 336 1 339 1 371 1 255 1 117 1 153 1 274 1 342 1 189 1 38 1 
314 1 111 1 135 1 269 1 251 1 170 1 366 1 5 1 183 1 128 1 336 1 340 1 27 1 339 1 117 1 299 2 274 1 37 1 
285 1 
230 1 28 1 44 1 353 1 39 1 234 1 272 1 
0 1 32 1 44 1 328 1 89 1 182 1 260 1 115 1 204 1 230 1 141 1 166 1 122 1 39 2 234 1 176 1 258 1 
0 4 164 1 253 3 115 6 204 3 8 2 117 3 325 6 166 4 122 5 73 6 212 2 329 2 214 1 172 2 173 2 260 5 336 3 130 2 339 4 29 1 342 10 343 2 85 2 304 2 305 2 32 4 89 12 180 3 181 2 353 1 182 4 352 2 270 1 272 1 230 9 356 2 141 5 274 3 38 3 39 8 234 8 95 2 45 1 44 2 238 1 366 3 148 1 316 2 243 1 373 2 201 1 288 2 380 2 
0 2 32 2 89 6 182 2 115 3 204 1 230 7 356 2 141 1 325 5 232 1 166 2 309 1 326 1 122 1 39 4 234 4 40 1 73 5 212 2 44 1 260 1 100 1 334 1 367 1 316 2 341 1 288 2 304 1 202 1 305 2 
0 1 32 1 250 1 2 1 182 1 354 1 230 2 141 1 166 1 275 1 359 1 234 2 123 1 71 1 124 1 211 1 212 2 196 1 216 1 260 1 332 1 335 1 52 1 130 1 337 1 288 1 131 1 304 2 
0 1 32 1 44 1 353 1 182 1 272 1 230 1 166 1 234 1 39 1 
73 5 212 2 89 10 172 1 316 2 115 5 130 1 230 5 356 2 325 5 234 5 39 5 288 2 304 2 305 2 
204 1 44 1 141 1 122 1 39 1 260 1 
0 1 32 2 182 2 230 2 204 2 255 1 117 4 141 3 166 2 274 1 122 4 189 1 38 1 234 2 237 1 45 1 281 1 238 2 126 1 21 1 366 4 148 2 173 2 260 3 336 4 339 1 243 2 342 1 224 1 
136 1 2 3 180 1 90 1 34 1 7 1 117 1 118 1 10 1 274 1 312 1 277 1 38 1 362 1 124 3 211 2 96 2 238 1 98 1 366 1 216 2 52 2 25 1 336 1 337 2 339 1 105 1 342 1 107 1 264 1 289 1 131 1 
0 1 73 2 32 1 193 1 44 2 89 4 182 1 173 1 115 2 230 1 243 1 325 2 166 1 234 2 39 4 
267 1 259 1 22 1 
248 1 267 1 222 1 259 1 51 1 
267 1 259 1 22 1 
267 1 259 1 22 1 
267 1 259 1 350 1 
267 1 259 1 350 1 
267 1 259 1 350 1 
267 1 259 1 
74 1 84 1 
71 1 362 2 136 1 137 1 96 2 252 1 334 1 354 1 241 1 34 1 7 1 83 1 232 1 341 1 105 1 233 1 300 1 312 1 40 1 
136 2 137 1 252 1 354 1 34 2 7 2 232 1 233 2 312 2 40 1 71 1 362 5 146 1 212 1 96 4 334 1 241 1 316 1 338 1 83 3 341 2 105 2 300 1 155 1 305 1 
136 7 252 1 138 1 34 3 7 3 356 2 232 1 309 1 233 2 326 1 312 3 40 1 362 13 212 2 96 6 334 1 367 1 316 2 338 1 83 6 341 1 105 3 300 1 155 1 288 2 202 1 305 2 
136 4 252 1 138 1 34 3 7 3 356 1 232 1 233 2 309 1 326 1 312 3 40 1 362 11 212 2 96 6 334 1 367 1 316 2 338 1 83 7 341 1 105 3 300 1 155 1 288 1 202 1 305 2 
71 1 362 2 136 1 137 1 96 2 252 1 334 1 354 1 241 1 34 1 7 1 83 1 232 1 341 1 105 1 233 1 300 1 312 1 40 1 
136 6 252 1 34 1 7 1 356 2 232 1 233 2 309 1 326 1 312 1 40 1 362 12 212 2 96 2 334 1 367 1 316 2 338 1 83 6 341 1 105 1 300 1 288 2 202 1 305 2 
136 5 252 1 138 2 34 4 7 4 356 1 232 1 309 1 233 2 326 1 312 4 40 1 362 12 212 2 96 8 334 1 367 1 316 2 338 1 83 7 341 1 105 4 300 1 155 1 288 1 202 1 305 2 
136 5 252 1 138 2 34 4 7 4 356 1 232 1 309 1 233 4 326 1 312 4 40 1 362 12 361 1 212 2 96 8 334 1 367 1 316 2 338 2 83 7 341 1 105 4 300 2 288 1 202 1 305 2 
71 2 362 2 136 1 137 1 354 2 241 2 338 2 83 1 233 4 300 2 
136 5 252 1 138 2 34 4 7 4 356 1 232 1 309 1 233 2 326 1 312 4 40 1 362 12 361 1 212 2 96 8 334 1 367 1 316 2 338 1 83 7 341 1 105 4 300 1 288 1 202 1 305 2 
362 2 71 1 136 1 96 4 137 1 138 1 354 1 34 2 241 1 338 1 7 2 83 1 105 2 233 2 300 1 312 2 
71 1 28 1 137 1 233 1 300 1 354 1 241 1 
362 4 212 1 136 2 96 2 34 1 316 1 338 1 356 1 7 1 83 2 105 1 233 2 300 1 312 1 155 1 288 1 305 1 
362 7 146 1 212 1 136 4 334 1 316 1 338 1 356 1 83 3 341 2 233 2 300 1 288 1 40 1 305 1 
250 1 136 14 137 1 138 2 354 4 34 2 356 2 7 2 233 11 312 2 40 2 235 1 295 1 71 4 146 1 362 27 212 3 193 1 96 4 196 1 241 1 316 2 338 5 83 13 341 2 105 2 345 1 300 6 288 3 305 2 
362 1 136 1 341 1 
362 1 83 1 40 1 
362 6 212 1 136 3 96 2 172 1 34 1 316 1 338 1 7 1 356 1 83 3 105 1 233 3 312 1 300 2 155 1 288 1 305 1 
136 6 252 1 34 1 7 1 356 2 232 1 233 2 309 1 326 1 312 1 40 1 362 12 212 2 96 2 334 1 367 1 316 2 338 1 83 6 341 1 105 1 300 1 288 2 202 1 305 2 
362 6 71 1 250 1 212 1 136 3 354 1 338 1 83 3 233 2 300 1 288 1 
250 1 136 6 137 1 138 1 354 3 34 1 7 1 233 6 312 1 362 12 71 3 212 1 193 1 96 2 196 1 241 1 338 3 83 6 105 1 345 1 300 3 288 1 
71 2 362 10 250 1 212 2 136 5 96 2 252 1 196 1 354 2 34 1 338 2 7 1 83 5 105 1 233 5 312 1 300 3 288 2 
362 2 212 1 96 2 252 1 34 1 338 1 7 1 83 2 105 1 233 1 312 1 305 1 
362 4 212 1 136 2 96 2 252 1 34 1 316 1 338 1 356 1 7 1 83 2 105 1 233 2 300 1 312 1 288 1 305 1 
361 1 362 3 71 1 136 2 96 6 252 1 138 1 354 1 34 3 338 1 7 3 83 1 105 3 345 1 233 2 312 3 300 1 
250 1 136 15 137 1 252 1 138 2 354 3 254 1 34 5 7 5 356 3 233 11 63 1 312 5 40 3 71 3 361 1 362 28 146 1 212 4 96 10 334 1 241 1 316 3 338 5 284 1 83 13 341 4 105 5 345 1 300 6 155 1 288 4 305 3 
124 1 279 1 2 1 294 1 52 1 368 1 25 1 
72 1 31 1 279 1 124 1 2 1 368 1 52 1 25 1 273 1 103 1 143 1 294 1 
339 1 28 1 255 1 117 1 274 1 342 1 238 1 366 1 189 1 38 1 336 1 
211 1 124 2 2 2 238 1 180 1 366 1 52 1 25 1 336 1 337 1 339 1 117 1 10 1 342 1 263 1 274 1 38 1 277 1 
2 2 180 2 117 1 10 1 274 1 277 1 38 2 123 1 124 2 211 1 366 1 148 1 239 1 52 2 25 1 336 1 337 2 339 1 263 1 342 3 106 1 343 1 380 1 
2 2 180 2 117 2 274 1 311 1 277 1 38 2 123 1 124 2 211 1 97 1 366 2 148 1 239 1 52 2 25 1 336 2 337 2 339 1 263 1 342 3 106 1 343 1 380 1 
44 1 88 1 323 1 238 1 180 1 366 3 181 1 260 2 148 1 336 3 253 1 339 1 117 3 141 2 373 1 342 4 274 1 343 1 311 1 122 1 39 1 38 1 380 1 
44 1 238 1 180 1 366 3 181 1 352 1 260 2 148 1 336 3 253 1 339 1 117 3 141 2 373 1 342 4 274 1 343 1 311 1 122 1 39 1 38 1 380 1 
339 1 117 1 274 1 280 1 366 1 336 1 
280 1 48 1 214 1 238 2 180 1 366 6 5 1 203 1 164 1 336 7 339 3 372 1 117 7 256 1 342 3 274 2 65 1 66 1 38 2 156 1 132 1 
137 1 2 2 180 1 90 2 354 1 34 2 7 2 117 1 205 1 118 1 10 1 274 1 233 1 312 2 38 1 277 1 71 1 124 2 211 1 20 1 96 4 214 1 98 1 169 1 366 1 52 1 241 1 336 1 337 1 339 1 342 1 263 1 105 2 300 1 264 2 376 1 
0 2 32 2 181 1 353 1 182 2 352 1 272 1 253 1 230 1 204 1 8 1 117 1 141 3 166 2 122 2 39 1 234 1 95 1 44 1 45 1 329 1 238 1 366 1 260 3 336 1 129 1 373 1 342 2 
280 1 214 1 180 1 181 1 366 2 164 1 336 2 339 2 117 2 342 2 274 1 201 1 38 1 
238 1 214 1 366 4 336 4 339 1 297 1 255 1 117 4 342 1 274 1 311 1 189 1 38 1 
94 1 180 1 366 2 127 1 148 1 336 2 339 2 186 1 117 2 256 1 342 1 274 1 38 1 156 1 
27 1 339 1 117 1 314 1 299 1 274 1 238 1 37 1 366 1 336 1 
144 1 339 1 117 2 274 1 342 1 48 1 214 1 366 2 5 1 38 1 336 2 
48 1 238 1 214 1 366 4 148 1 336 5 339 2 297 1 255 1 372 1 117 5 342 3 274 2 189 1 66 1 38 2 
48 1 238 1 214 1 366 4 148 1 336 5 317 1 339 2 297 1 255 1 372 1 117 5 342 3 274 2 189 1 38 2 
211 1 124 2 2 2 238 1 97 1 180 1 366 1 52 1 25 1 336 1 337 1 339 1 117 1 342 1 263 1 274 1 38 1 277 1 
180 1 366 1 148 1 164 1 336 1 339 2 117 1 256 1 342 1 274 1 65 1 38 1 156 1 
42 1 195 1 276 1 4 1 25 1 
110 1 327 1 42 2 44 1 195 1 50 1 4 2 260 2 239 1 80 1 25 1 129 1 81 1 141 2 373 1 106 1 276 2 39 1 123 1 
124 1 42 1 2 1 195 1 4 1 139 1 52 1 200 1 175 1 
110 1 327 1 195 1 
28 1 370 1 351 1 319 1 
370 1 351 1 179 1 194 1 6 1 319 1 53 1 
179 1 140 1 240 1 
351 1 76 1 194 1 179 3 6 3 26 1 53 1 370 1 221 1 346 1 188 2 319 1 
370 1 351 1 125 1 246 1 179 2 194 1 6 2 319 1 53 1 
370 1 314 1 299 1 251 1 344 1 179 1 194 1 158 1 6 1 53 1 26 1 
370 1 179 1 194 1 6 1 319 1 53 1 26 1 
351 1 179 1 194 1 6 1 319 2 53 1 26 1 
159 1 43 1 194 2 179 2 150 1 6 2 26 1 53 2 370 1 319 1 
351 1 46 1 194 1 179 3 125 2 197 1 6 3 26 1 53 1 370 2 245 1 158 1 319 1 
351 1 314 1 194 1 179 2 251 1 125 1 6 2 26 1 53 1 27 1 340 1 370 1 299 2 319 1 177 1 
351 1 194 2 179 4 125 2 197 1 6 4 26 1 53 2 370 2 120 1 246 1 158 1 319 1 
370 1 351 1 179 1 194 1 6 1 319 1 53 1 26 1 
351 2 76 1 125 2 179 4 194 1 197 1 261 1 6 4 53 1 370 3 221 1 188 1 158 1 319 2 
351 1 194 1 179 2 125 1 3 1 162 1 6 2 26 1 53 1 370 1 165 1 319 1 
370 1 221 2 351 1 76 1 179 3 194 1 188 2 64 1 6 3 319 1 53 1 26 1 
370 2 168 2 99 1 12 1 
179 1 194 1 331 1 6 1 53 1 26 1 
370 1 351 1 46 1 125 1 179 2 194 1 6 2 319 1 53 1 26 1 
358 1 
370 1 351 1 179 1 194 1 6 1 319 1 53 1 26 1 
351 1 46 1 125 1 194 1 179 3 6 3 26 1 53 1 370 1 188 1 319 1 
370 1 197 1 261 1 158 1 
370 1 319 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 134 197 (53,287) (53,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 134 197 (53,287) (53,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 134 197 130 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 134 197 130 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (81,324) (81,324) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (170,212) 135 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (81,324) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 327 (159,241,251) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (159,241,251) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 74 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 327 162 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 327 162 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 327 (159,241,251) 83 337 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 74 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 167 258 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (170,212) (170,212) (9,290) 270 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (170,212) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (170,212) (170,212) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (81,324) (81,324) 208 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (170,212) 135 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 327 162 204 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 327 162 204 6 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 111 (123,288) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 111 (123,288) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 111 (89,339) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 111 (89,339) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 1 323 1 304 1 57 1 100 3 58 1 268 2 63 2 144 3 66 1 37 2 228 1 340 1 
134 2 53 1 174 1 100 7 57 1 58 2 143 1 268 2 219 1 63 2 218 1 144 7 66 1 229 1 228 2 281 1 323 4 22 1 186 2 187 2 287 1 127 1 197 1 37 3 340 3 
134 2 53 1 174 1 100 7 57 1 58 2 143 1 268 2 219 1 63 2 218 1 144 7 66 1 229 1 228 2 281 1 323 4 22 1 186 2 187 2 287 1 127 1 197 1 37 3 340 3 
132 1 134 2 304 1 53 1 56 1 174 1 100 9 57 1 58 3 143 2 268 2 219 1 63 2 218 1 144 9 66 1 229 1 228 2 112 1 281 1 323 6 22 1 186 2 187 2 287 1 127 1 197 1 37 5 340 4 
132 1 134 2 304 1 53 1 174 1 100 7 57 1 58 2 143 1 268 2 219 1 63 2 218 1 144 7 66 1 229 1 228 2 281 1 323 4 22 1 186 2 187 2 287 1 127 1 197 1 37 4 340 3 
132 1 134 1 304 1 56 1 143 2 100 4 57 1 58 1 268 1 63 1 144 4 229 1 112 1 323 3 186 1 187 1 197 1 37 3 340 2 
132 1 22 1 134 1 187 1 304 1 57 1 100 2 268 1 63 1 242 1 219 1 144 2 198 1 37 1 228 1 131 1 
281 1 323 5 134 1 186 1 187 1 261 1 143 1 57 1 100 7 58 2 268 2 218 1 63 2 197 1 144 7 37 3 66 1 229 1 228 1 340 3 130 1 
281 1 323 5 134 1 186 1 187 1 261 1 143 1 57 1 100 7 58 2 268 2 218 1 63 2 197 1 144 7 37 3 66 1 229 1 228 1 340 3 130 1 
300 1 215 1 178 1 324 1 312 1 295 1 24 1 209 1 81 1 246 1 289 1 159 1 
334 1 
45 1 215 1 334 1 277 1 278 1 55 1 289 2 159 2 
0 1 45 2 94 1 303 1 119 1 77 1 137 2 55 1 159 5 289 5 194 1 215 2 223 1 108 2 334 1 277 1 39 1 164 2 16 1 
74 1 334 1 277 1 
120 1 334 1 257 2 
300 1 178 2 312 2 295 2 24 2 209 2 246 2 
20 2 300 1 135 1 24 1 209 1 52 2 259 2 212 1 31 1 267 1 32 1 178 1 13 1 295 1 312 1 246 1 
300 1 178 1 312 1 295 1 24 1 209 1 81 1 246 1 
241 1 327 1 
251 1 178 1 312 1 295 1 24 1 209 1 246 1 
72 1 45 1 215 1 289 1 159 1 
45 1 215 1 334 1 277 1 146 1 55 1 289 2 159 2 
45 1 289 1 159 1 
20 1 32 1 312 1 295 1 24 1 209 1 147 1 52 1 17 1 259 1 246 1 
116 1 178 1 312 2 295 2 24 1 209 1 122 1 246 2 
74 1 
178 1 312 3 295 3 24 3 209 3 17 1 246 3 
312 1 295 1 24 1 209 1 246 1 
116 1 178 1 312 1 295 1 24 1 209 1 122 1 246 1 
178 1 312 2 295 2 24 2 122 1 209 2 147 1 17 1 246 2 
162 1 312 1 295 1 24 1 327 1 209 1 17 1 246 1 
312 1 295 1 24 1 209 1 147 1 17 1 246 1 
178 1 312 1 295 1 24 1 209 1 122 1 246 1 
20 1 32 1 52 1 259 1 
20 1 32 1 52 1 259 1 
7 1 10 2 11 1 154 1 243 1 26 1 171 1 90 1 
312 1 295 1 24 1 209 1 190 1 246 1 
24 4 327 1 209 4 122 1 51 1 162 1 178 1 295 4 312 4 36 1 147 1 17 2 246 4 
312 1 295 1 24 1 209 1 246 1 
117 1 225 1 245 1 
234 1 95 1 117 2 225 2 320 1 71 1 
117 1 225 1 
117 1 225 1 
234 1 95 1 
234 1 95 1 
234 1 95 1 
292 1 117 1 225 1 
292 1 117 1 225 1 
292 1 117 1 225 1 
117 1 225 1 201 1 
117 1 225 1 201 1 
117 1 225 1 201 1 
232 1 168 1 115 3 117 2 236 2 96 1 78 1 27 1 159 2 289 2 291 2 265 2 126 2 225 2 331 1 334 1 336 2 202 1 71 1 
235 1 115 1 117 1 236 1 286 1 24 2 121 1 27 1 209 2 5 1 159 1 289 1 265 1 176 1 126 1 311 1 312 2 295 2 225 1 67 1 245 1 336 1 246 2 
186 1 198 1 49 1 187 2 18 2 
134 1 186 1 187 1 
134 1 198 1 187 1 
329 1 186 2 198 1 49 1 187 3 18 1 
186 1 198 1 49 1 187 2 18 1 68 1 
298 1 45 1 94 2 253 1 137 1 257 3 5 1 54 1 55 1 101 1 269 1 215 4 64 1 108 1 277 1 67 1 15 1 284 1 120 1 286 1 289 5 159 5 160 2 124 1 194 3 38 1 39 1 334 2 164 1 338 1 42 2 249 2 
298 3 45 6 94 6 169 1 303 1 256 1 137 2 257 9 54 3 55 1 101 2 269 3 215 7 108 2 67 4 277 1 317 5 231 1 72 5 233 1 284 2 120 3 285 1 289 9 159 9 28 1 124 3 194 8 38 3 334 5 39 1 164 2 338 1 42 6 249 6 
298 1 253 1 94 2 303 1 137 1 257 4 54 1 101 1 215 2 269 1 64 1 108 1 277 1 67 1 284 1 120 2 289 3 159 3 160 1 194 3 124 1 38 1 334 3 164 1 42 2 249 2 
298 2 253 1 94 4 169 1 303 1 256 1 137 1 257 7 54 2 101 1 215 3 269 2 64 1 108 1 277 1 67 2 233 1 284 1 120 3 289 4 159 4 160 2 194 5 124 2 38 2 334 4 164 1 42 4 249 4 
294 1 
74 1 76 1 196 1 
76 1 206 1 
76 1 293 1 
216 1 76 3 293 1 196 2 275 1 279 1 
76 1 293 1 279 1 
308 1 76 1 
298 1 237 1 138 1 50 1 99 1 309 2 272 1 221 4 330 1 107 2 38 1 182 1 163 3 183 3 110 7 314 1 319 1 184 1 
298 4 1 1 252 1 2 4 138 5 50 2 99 1 54 3 173 1 7 1 309 5 269 3 10 2 272 2 11 1 310 3 221 16 107 3 182 1 109 1 314 1 183 15 110 31 319 2 237 1 26 1 189 1 161 1 124 3 330 2 243 1 38 4 163 10 297 1 
298 1 138 1 50 1 7 2 266 1 309 3 10 4 11 2 272 1 221 5 107 2 182 1 110 9 183 4 314 1 319 1 114 1 237 1 26 2 161 1 330 1 243 2 38 1 163 4 
298 1 237 1 138 1 50 1 99 1 309 2 272 1 221 4 330 1 107 2 38 1 182 1 163 3 183 3 110 7 314 1 319 1 
298 1 237 1 138 1 50 1 99 1 309 2 272 1 221 4 330 1 107 2 38 1 182 1 163 3 183 3 110 7 314 1 319 1 
92 1 149 2 20 1 185 1 76 1 302 1 156 1 98 2 172 2 82 1 52 1 259 1 211 1 100 1 268 1 63 1 293 1 32 1 104 1 144 1 315 1 228 2 91 1 
20 1 149 1 185 1 134 1 153 1 186 1 187 2 136 1 139 1 98 1 172 1 4 1 52 1 259 1 57 1 100 1 125 1 268 1 63 1 329 1 195 1 144 1 198 1 226 1 228 1 91 1 
132 1 134 1 136 1 304 1 139 1 172 1 98 1 52 1 4 1 259 1 100 2 57 1 268 1 63 1 144 2 316 1 228 1 149 1 20 1 323 1 185 1 153 1 186 1 187 2 125 1 329 1 195 1 198 1 37 1 91 1 
132 1 134 1 136 1 304 1 139 1 172 1 98 1 52 1 4 1 259 1 100 3 268 1 63 1 144 3 226 1 228 1 149 1 20 1 323 2 185 1 153 1 186 1 187 2 82 1 329 1 35 1 195 1 198 1 37 1 91 1 
132 1 134 1 136 1 304 1 172 1 98 1 52 1 259 1 100 2 144 2 226 1 228 1 149 1 20 1 323 2 185 1 153 1 186 1 187 2 35 1 329 1 195 1 198 1 37 1 91 1 
192 1 
133 1 45 2 94 1 302 1 137 1 97 1 52 2 259 2 55 1 101 1 108 1 19 1 20 2 185 1 76 1 156 1 327 1 289 2 159 2 83 1 240 1 241 1 194 1 32 2 293 1 86 1 39 1 164 1 337 1 91 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 45 1 97 1 278 1 327 1 337 1 55 1 289 2 159 2 
137 1 97 1 327 1 159 1 289 1 83 1 240 1 241 1 108 1 39 1 164 1 337 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
83 1 240 1 241 1 97 1 327 1 337 1 289 1 159 1 
137 1 97 1 327 1 159 1 289 1 83 1 240 1 241 1 108 1 39 1 164 1 337 1 
20 1 79 1 171 1 26 1 52 1 259 1 191 1 7 1 175 1 10 2 11 1 32 1 221 1 243 1 110 1 90 1 
298 1 171 1 209 1 141 1 54 1 7 1 269 1 10 2 11 1 178 1 221 1 312 1 110 2 183 1 24 1 326 1 122 1 26 1 124 1 295 1 243 1 38 1 90 1 246 1 
74 1 154 1 237 1 50 1 171 1 26 1 7 1 309 1 10 2 11 1 272 1 221 2 107 1 243 1 38 1 182 1 163 1 110 2 314 1 90 1 
2 1 171 1 26 1 258 1 141 1 7 1 10 2 11 1 221 1 310 1 243 1 110 2 183 1 90 1 167 1 
21 1 24 1 188 1 26 1 209 1 171 1 141 1 191 1 7 1 10 2 11 1 221 1 87 1 295 1 312 1 243 1 110 2 183 1 147 1 17 1 246 1 90 1 
170 1 171 1 209 1 52 1 259 1 141 1 212 1 7 1 10 2 270 1 11 1 312 1 110 1 147 1 183 1 17 1 20 1 24 1 26 1 290 1 32 1 295 1 87 1 243 1 90 1 246 1 
154 1 171 1 26 1 7 1 124 1 10 2 11 1 221 1 243 1 38 1 110 1 90 1 318 1 
298 1 154 1 171 1 26 1 307 1 54 1 7 1 10 2 11 1 243 1 110 1 183 1 90 1 
298 1 154 1 171 1 26 1 54 1 7 1 124 1 269 1 10 2 11 1 221 1 243 1 38 1 183 1 110 2 90 1 
171 1 26 1 7 1 175 1 124 1 10 2 11 1 221 1 243 1 38 1 110 1 90 1 318 1 
298 1 171 1 26 1 307 1 54 1 7 1 175 1 10 2 11 1 243 1 110 1 183 1 90 1 
298 1 171 1 26 1 54 1 7 1 175 1 124 1 269 1 10 2 11 1 221 1 243 1 38 1 183 1 110 2 90 1 
298 1 171 1 26 1 54 1 7 1 124 1 269 1 10 2 11 1 221 1 243 1 38 1 183 1 110 2 90 1 
212 1 20 1 32 1 52 1 259 1 
20 1 32 1 200 1 52 1 259 1 
298 1 171 1 26 1 54 1 141 1 7 1 124 1 269 1 10 2 11 1 221 1 243 1 38 1 183 1 110 2 90 1 
212 1 20 1 170 1 52 1 316 1 259 1 
298 1 171 1 306 1 209 1 141 1 54 1 7 1 269 1 10 2 11 1 178 1 221 1 312 1 110 2 183 1 24 1 122 1 26 1 124 1 295 1 243 1 38 1 90 1 246 1 
298 2 47 1 138 2 54 2 262 1 7 2 309 2 266 1 269 2 10 4 11 2 177 1 221 6 183 6 110 12 148 1 70 2 155 1 325 1 26 2 124 2 243 2 38 2 163 4 165 1 41 2 
298 1 54 1 262 1 7 1 266 1 269 1 10 2 11 1 177 2 221 4 183 4 110 8 148 1 70 1 155 1 26 1 124 1 243 1 38 1 165 2 41 2 
298 1 138 1 54 1 262 1 7 2 266 1 269 1 10 4 11 2 177 1 221 4 183 4 110 8 148 1 70 1 155 1 325 1 26 2 158 1 124 1 243 2 38 1 163 1 165 2 41 2 
298 1 138 1 54 1 262 1 7 2 309 1 266 1 269 1 10 4 11 2 177 1 221 4 183 4 110 8 148 1 70 1 155 1 325 1 26 2 158 1 124 1 243 2 38 1 163 2 165 2 41 2 
298 3 138 1 50 2 54 1 262 1 7 1 266 1 309 3 269 1 10 2 11 1 272 2 177 1 221 10 107 2 182 2 183 8 110 18 314 2 70 1 148 1 237 2 155 1 26 1 124 1 243 1 38 3 163 4 165 1 41 2 
232 1 168 1 265 1 126 1 236 1 117 1 224 1 225 1 336 1 71 1 
311 1 245 1 
265 1 126 1 236 1 117 1 65 1 225 1 244 1 336 1 296 1 
232 1 168 1 115 2 117 1 236 1 78 1 27 1 159 1 289 1 291 1 265 1 126 1 225 1 331 1 334 1 336 1 202 1 71 1 
232 1 168 1 115 2 117 1 236 1 78 1 27 1 159 1 289 1 291 1 265 1 126 1 225 1 331 1 334 1 336 1 202 1 71 1 
232 1 168 1 115 2 117 1 236 1 78 1 27 1 159 1 289 1 291 1 265 1 126 1 225 1 331 1 334 1 336 1 202 1 71 1 
292 1 230 1 320 1 
292 1 230 1 320 1 
201 1 263 1 
201 1 320 1 263 1 
235 1 176 1 
209 2 5 1 265 1 215 1 176 1 311 1 312 2 225 1 67 1 321 1 115 1 235 1 236 1 117 1 78 1 286 1 24 2 121 1 289 1 159 1 291 1 126 1 295 2 336 1 245 1 246 2 
292 1 230 1 
201 1 320 1 263 1 
239 1 301 1 312 2 295 2 305 1 246 2 
20 1 149 1 185 1 76 1 302 1 156 1 52 1 259 1 211 1 293 1 32 1 34 1 91 1 203 1 
20 1 149 1 185 1 134 1 153 1 186 1 187 2 136 1 25 1 52 1 4 1 259 1 329 1 198 1 226 1 91 1 203 1 248 1 
20 2 149 1 185 1 134 1 153 1 186 1 187 2 136 1 25 1 52 2 4 1 259 2 329 1 198 1 226 1 316 1 91 1 203 1 248 1 
20 1 149 1 185 1 134 1 153 1 186 1 187 2 136 1 25 1 210 1 52 1 4 1 259 1 329 1 198 1 226 1 91 1 
254 1 
0 1 94 1 137 1 194 1 223 1 108 1 39 1 277 1 334 1 164 1 
298 2 94 5 151 1 120 5 257 10 54 2 124 2 194 5 269 2 62 2 106 1 38 2 334 5 42 5 249 5 
45 1 334 1 277 1 289 1 159 1 55 1 
133 2 45 4 94 2 302 1 255 1 303 1 137 2 52 4 259 4 55 2 101 2 220 1 108 2 69 1 19 1 20 4 185 1 76 1 156 1 159 3 289 3 194 2 128 2 293 1 32 2 86 1 39 1 164 2 91 1 
0 1 194 1 94 1 74 1 223 1 334 1 277 1 
45 1 94 1 152 1 120 1 137 1 257 1 289 1 159 1 55 1 194 1 85 1 108 1 277 1 334 2 39 1 164 1 247 1 
0 1 94 8 257 12 259 3 101 2 269 2 9 2 12 2 105 2 106 2 108 4 277 2 14 1 279 3 20 3 185 3 120 6 288 2 289 5 29 2 194 9 124 2 128 1 293 3 32 1 196 2 38 2 39 4 42 6 43 2 206 3 298 2 133 1 45 5 137 4 52 3 55 3 54 2 308 2 216 1 62 2 220 1 223 1 227 2 316 1 73 1 76 10 151 2 328 1 159 5 334 8 164 4 91 4 249 6 
298 2 133 1 45 1 1 1 93 1 94 5 2 1 137 2 257 6 55 1 54 2 101 1 269 2 271 1 62 2 103 1 222 1 310 1 108 2 277 2 151 1 120 3 157 1 289 1 159 1 194 8 124 2 33 1 38 2 335 1 39 2 334 5 164 2 42 5 249 5 
299 1 298 1 300 1 94 1 208 1 137 1 50 1 209 1 62 2 272 1 178 1 312 1 108 1 182 1 324 1 24 1 81 1 289 1 159 1 194 2 295 1 38 1 39 1 164 1 246 1 
300 1 20 1 135 1 24 1 209 1 52 1 259 1 212 1 32 1 178 1 295 1 312 1 246 1 
133 1 94 2 120 2 137 1 257 4 101 1 194 1 107 1 108 1 39 1 277 2 334 4 164 1 42 2 249 2 
168 1 235 1 236 1 276 1 336 1 
236 1 199 1 336 1 
236 1 199 1 336 1 
236 1 199 1 336 1 
213 1 236 1 336 1 
213 1 236 1 336 1 
213 1 236 1 336 1 
236 1 336 1 
117 1 225 1 
298 2 208 1 138 2 50 2 26 1 7 1 266 1 309 3 10 2 11 1 272 2 221 5 243 1 182 1 38 2 163 5 110 10 183 5 
138 1 26 1 7 1 266 1 124 1 10 2 11 1 221 2 243 1 38 1 163 1 110 2 
298 1 138 1 26 1 54 1 7 1 309 1 266 1 124 1 269 1 10 2 11 1 221 2 243 1 38 1 163 2 183 2 110 4 
138 1 325 1 50 1 26 3 161 1 7 3 266 1 309 1 10 6 11 3 272 1 221 1 243 3 163 2 183 2 110 3 322 1 
298 5 1 1 252 1 2 4 138 5 50 3 54 3 173 1 7 5 266 1 309 7 214 1 269 3 10 10 272 3 11 5 310 3 221 16 107 1 182 2 109 1 314 1 183 18 110 34 322 1 237 1 325 1 189 1 26 5 161 2 124 3 243 5 38 5 163 12 
298 1 1 1 2 1 50 1 7 1 266 1 309 2 10 2 11 1 272 1 310 1 222 1 221 4 107 1 182 1 110 8 183 4 314 1 237 1 26 1 243 1 38 1 163 2 
298 1 1 1 252 1 2 2 138 1 50 1 7 2 309 2 266 1 214 1 269 1 10 4 272 1 11 2 222 1 310 1 221 6 107 1 182 1 314 1 110 11 183 5 237 1 26 2 124 1 243 2 38 2 163 3 
298 3 1 1 93 1 2 1 138 1 50 1 54 2 7 3 266 1 309 3 214 1 269 2 10 6 103 1 271 1 272 1 11 3 310 1 222 1 221 9 107 1 182 1 314 1 110 19 183 10 237 1 26 3 161 1 124 2 33 1 243 3 38 3 163 4 
298 2 1 1 93 1 2 1 138 2 50 1 54 1 7 3 266 1 309 3 214 1 269 2 10 6 103 1 271 1 272 1 11 3 310 1 222 1 221 10 107 1 182 1 314 1 110 17 183 7 237 1 26 3 161 1 124 2 33 1 243 3 38 3 163 5 
298 1 1 1 2 1 50 1 7 1 266 1 309 2 10 2 11 1 272 1 310 1 222 1 221 4 107 1 182 1 110 8 183 4 314 1 237 1 26 1 243 1 38 1 163 2 
298 2 1 1 93 1 2 1 138 1 54 2 7 1 266 1 309 1 269 2 10 2 103 1 271 1 11 1 310 1 222 1 221 6 110 12 183 6 26 1 124 2 33 1 243 1 38 2 163 2 
298 2 1 1 93 1 2 1 138 2 50 1 54 1 7 4 266 1 309 3 214 1 269 2 271 1 10 8 103 1 272 1 11 4 222 1 310 1 221 10 107 1 182 1 314 1 110 18 183 8 237 1 26 4 161 2 124 2 33 1 243 4 38 3 163 5 
298 2 1 1 93 1 2 1 138 3 54 2 7 4 266 1 309 3 269 3 271 1 10 8 103 1 11 4 222 1 310 1 221 9 110 16 183 7 325 1 26 4 161 2 124 3 33 1 243 4 38 3 163 6 
298 1 237 2 138 3 50 3 309 3 272 3 221 3 182 1 38 1 163 6 183 4 110 7 314 1 
298 2 1 1 93 1 2 1 138 1 50 1 54 1 7 4 266 1 309 3 269 2 271 1 10 8 103 1 272 1 11 4 222 1 310 1 221 10 107 1 182 1 314 1 110 18 183 8 237 1 325 1 26 4 161 2 124 2 33 1 243 4 38 3 163 4 
298 1 237 1 138 1 50 1 26 2 161 1 7 2 309 2 10 4 11 2 272 1 221 4 107 1 243 2 38 1 182 1 163 3 183 4 110 8 314 1 
298 1 74 1 237 1 50 1 309 2 272 1 221 3 107 1 182 1 38 1 163 2 183 3 314 1 110 6 
298 1 138 1 26 1 54 1 7 1 309 1 124 1 214 1 269 1 10 2 11 1 221 2 243 1 38 1 163 2 183 2 110 4 
298 1 1 1 252 1 2 2 138 1 54 1 309 1 124 1 269 1 310 1 221 3 38 1 163 2 183 4 110 7 
298 3 252 1 2 2 138 4 50 2 54 2 7 2 309 5 269 2 10 4 272 2 11 2 221 11 310 2 107 1 182 1 314 1 110 23 183 12 322 1 75 1 237 1 26 2 161 2 124 2 243 2 38 3 163 9 167 1 
2 1 110 1 183 1 
221 1 310 1 110 1 
298 1 138 1 26 1 54 1 7 1 124 1 309 2 214 1 269 1 10 2 11 1 221 3 106 1 243 1 38 1 163 3 183 3 110 6 
298 2 1 1 93 1 2 1 138 1 54 2 7 1 266 1 309 1 269 2 10 2 103 1 271 1 11 1 310 1 222 1 221 6 110 12 183 6 26 1 124 2 33 1 243 1 38 2 163 2 
298 1 138 1 50 1 309 1 272 1 221 3 182 1 38 1 163 2 110 6 183 3 
237 1 138 1 50 1 26 1 161 1 7 1 309 1 10 2 272 1 11 1 221 1 243 1 163 2 183 2 110 3 314 1 322 1 
162 1 327 1 204 1 
6 1 162 1 61 1 145 1 88 1 327 1 80 1 204 1 
20 4 185 1 76 1 293 1 302 1 32 1 156 1 332 1 40 1 316 1 52 4 259 4 91 1 
20 2 185 1 76 1 23 1 52 2 259 2 238 1 30 1 128 1 293 1 333 1 313 1 279 1 91 2 
20 1 185 1 134 1 32 1 153 1 198 1 187 1 52 1 259 1 91 1 
193 1 20 2 185 1 283 1 76 1 293 1 226 1 52 2 316 1 259 2 91 1 
20 5 283 1 185 2 302 1 76 3 156 1 52 5 259 4 128 1 32 1 293 2 274 1 40 1 316 1 91 2 113 1 
20 5 283 1 185 2 302 1 76 3 156 1 52 5 259 4 60 1 128 1 32 1 293 2 274 1 40 1 316 1 91 2 
20 1 185 1 74 1 76 1 293 1 302 1 32 1 156 1 52 1 259 1 91 1 
20 1 185 1 76 1 24 1 209 1 52 1 123 1 259 1 293 1 32 1 295 1 312 1 279 1 111 1 17 1 246 1 91 1 
20 1 185 1 76 1 24 1 209 1 52 1 123 1 259 1 293 1 128 1 295 1 312 1 279 1 111 1 17 1 246 1 91 1 
20 1 185 1 76 1 24 1 209 1 52 1 259 1 293 1 128 1 295 1 312 1 279 1 111 1 17 1 246 1 339 1 91 1 
20 3 250 1 45 1 185 1 76 4 52 3 259 3 159 2 289 2 29 1 308 1 32 1 293 1 12 1 128 1 196 1 332 1 334 1 277 1 279 1 89 1 91 1 206 1 
20 3 45 1 185 1 76 4 52 3 259 3 288 1 159 2 289 2 29 1 308 1 32 1 293 1 12 1 128 1 196 1 332 1 334 1 277 1 279 1 91 1 206 1 
20 1 185 1 52 1 259 1 91 1 44 1 
20 7 283 1 185 2 46 1 76 3 23 1 52 7 259 6 30 1 267 1 216 1 32 2 293 2 273 1 274 1 226 1 279 1 316 1 44 1 91 3 113 1 
312 1 295 1 24 1 209 1 17 1 246 1 
0 1 45 2 94 1 137 2 52 1 259 1 55 1 215 1 9 1 220 1 223 1 105 1 108 2 227 1 277 1 20 1 76 2 288 1 289 3 159 3 29 1 194 1 32 1 196 1 334 1 39 2 164 2 206 1 
20 2 73 1 185 1 76 2 52 2 259 2 216 1 293 1 196 1 279 1 316 1 44 1 91 2 
20 1 185 1 76 1 24 1 209 1 52 1 259 1 293 1 32 1 295 1 312 1 279 1 111 1 17 1 246 1 339 1 91 1 
20 1 185 1 76 1 23 1 52 1 259 1 30 1 216 1 128 1 293 1 273 1 279 1 91 2 
217 1 48 1 129 1 280 1 
207 1 8 1 217 1 215 1 48 1 3 1 129 1 280 1 289 1 159 1 
301 1 48 1 305 1 239 1 217 1 295 1 312 1 129 1 246 1 
207 1 48 1 3 1 
132 1 100 1 57 1 268 1 63 1 144 1 37 1 304 1 
132 2 323 2 22 1 304 2 84 1 100 4 58 1 268 1 63 1 144 4 37 3 166 1 340 1 112 1 
132 1 323 1 100 2 57 1 150 1 268 1 63 1 144 2 37 1 304 1 261 1 142 1 
132 1 84 2 100 3 57 1 59 1 268 1 63 1 22 2 144 3 37 1 304 1 166 1 
282 1 179 2 37 2 181 1 
100 1 57 1 268 1 63 1 144 1 260 1 
281 1 132 1 323 1 100 2 57 1 268 1 63 1 144 2 37 1 304 1 
102 1 
132 1 100 1 57 1 268 1 63 1 144 1 37 1 304 1 
132 1 74 1 37 1 304 1 
132 1 100 1 268 1 63 1 144 1 37 1 304 1 
100 1 172 1 228 1 
132 1 84 1 100 3 57 1 268 1 63 1 22 2 144 3 37 1 304 1 166 1 205 1 
323 1 132 1 304 1 100 2 143 1 268 1 63 1 144 2 37 1 112 1 
134 1 186 1 187 1 57 1 100 1 268 1 63 1 144 1 37 1 229 1 340 1 
100 1 57 1 268 1 63 1 144 1 37 1 304 1 
132 1 100 1 57 1 268 1 63 1 144 1 304 2 
304 1 140 1 57 1 100 2 264 1 268 2 63 2 180 1 144 2 37 1 
281 1 132 1 323 2 304 1 57 1 100 3 58 1 268 1 63 1 218 1 144 3 37 2 340 1 
132 1 323 1 118 1 134 1 186 1 187 2 304 1 57 1 100 2 268 1 63 1 329 1 144 2 198 1 37 1 
132 1 323 2 304 1 56 1 57 1 100 3 143 1 58 1 268 1 63 1 144 3 37 2 340 1 112 1 
281 1 323 1 132 1 22 1 304 1 57 1 100 3 268 1 63 1 144 3 37 1 
58 1 37 1 340 1 112 1 
37 1 304 1 

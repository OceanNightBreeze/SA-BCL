#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
224 1 134 1 0 1 177 1 359 1 339 1 22 2 340 9 365 1 66 1 90 4 318 2 91 2 345 2 323 1 299 1 324 9 168 1 169 5 350 1 351 3 34 1 78 2 277 1 250 6 280 2 148 1 58 2 
224 1 134 1 0 1 177 1 359 1 339 1 22 2 340 9 365 1 66 1 90 4 318 2 91 2 345 2 323 1 299 1 324 9 168 1 169 5 350 1 351 3 34 1 78 2 277 1 250 6 280 2 148 1 58 2 
224 1 134 1 0 1 177 1 359 1 339 1 22 2 340 10 365 1 66 1 90 5 318 2 91 2 345 2 323 1 299 1 324 10 168 1 169 6 350 1 351 4 34 1 78 2 277 1 250 7 280 2 148 1 58 2 
224 1 134 1 0 1 177 1 359 1 339 1 22 2 340 7 365 1 66 1 90 3 318 2 91 2 345 2 323 1 299 1 324 7 168 1 169 4 350 1 351 2 78 1 277 1 250 4 280 2 148 1 58 2 
224 1 134 1 324 4 169 3 350 1 351 1 340 4 34 1 78 2 66 1 365 1 90 2 318 1 250 3 91 1 280 1 345 1 58 1 
224 1 134 1 199 1 112 1 177 1 324 2 169 1 350 1 22 1 340 2 277 1 116 1 318 1 91 1 345 1 58 1 
224 1 134 1 324 3 169 2 350 1 22 1 340 3 351 1 90 1 318 2 250 1 148 1 58 2 
224 1 134 1 287 1 359 1 339 1 22 1 340 9 66 1 365 1 90 4 318 2 91 1 319 1 345 1 324 9 169 5 350 1 351 3 34 1 78 2 250 7 280 1 148 1 58 2 
224 1 134 1 287 1 359 1 339 1 22 1 340 9 66 1 365 1 90 4 318 2 91 1 319 1 345 1 324 9 169 5 350 1 351 3 34 1 78 2 250 7 280 1 148 1 58 2 
243 1 147 1 138 1 
241 2 243 1 244 1 
346 2 283 2 6 2 294 2 28 2 114 1 107 2 315 1 
310 1 254 2 60 1 283 2 110 1 61 1 136 2 20 1 3 1 260 1 259 1 114 1 362 1 315 1 7 1 6 3 294 3 28 2 238 1 206 1 161 1 298 1 346 2 31 1 72 1 300 1 271 1 209 2 123 1 77 1 274 2 327 1 56 1 217 1 41 1 107 2 59 2 
93 1 346 1 154 1 283 1 6 1 2 1 294 1 28 1 107 1 315 1 
93 1 243 1 226 1 1 1 138 1 102 1 215 1 316 1 6 1 173 1 294 1 107 1 92 1 51 1 
346 1 93 1 243 1 283 1 1 1 138 1 215 1 316 2 173 2 6 1 294 1 28 1 107 1 92 1 51 1 
316 1 173 1 378 1 219 1 170 1 
301 1 243 1 316 2 276 1 173 2 378 1 219 1 138 1 
316 1 173 1 378 1 
93 1 346 1 282 1 283 1 2 1 315 1 154 1 316 1 173 1 6 1 294 1 219 1 28 1 107 1 
243 1 
243 1 316 2 276 1 173 2 378 1 219 1 138 1 374 1 
149 1 243 1 18 1 285 1 145 2 33 2 138 1 213 1 100 1 101 2 103 1 316 5 57 1 276 1 173 5 117 1 219 2 378 2 43 1 
147 1 114 1 
346 1 283 1 114 2 261 1 105 1 6 2 294 2 28 1 107 2 
306 1 202 1 185 1 
298 1 254 1 347 1 271 1 209 1 136 1 20 1 3 1 259 1 114 1 6 1 217 1 294 1 41 1 206 1 238 1 
346 3 283 1 6 3 331 1 294 3 28 3 114 1 107 3 
93 1 346 1 154 1 6 1 294 1 28 1 107 1 
93 1 346 1 283 1 105 1 6 1 294 1 28 1 107 1 261 1 
310 1 109 1 254 1 283 2 111 1 110 1 61 1 20 1 136 1 1 1 3 1 260 1 259 1 114 1 261 1 315 1 141 1 316 1 7 1 6 4 294 4 28 3 238 1 206 1 92 1 51 1 298 1 346 3 93 1 72 1 271 1 209 1 123 1 77 1 274 2 327 1 215 1 56 1 217 1 173 1 41 1 331 1 107 3 59 1 
329 1 346 1 6 2 226 1 294 2 331 1 28 1 114 1 107 2 
93 1 346 3 121 1 109 1 283 1 243 1 111 1 1 1 261 1 215 1 316 1 173 1 6 3 331 2 294 3 28 3 107 3 92 1 51 1 
346 2 283 1 185 1 261 1 306 1 6 2 331 1 294 2 28 2 107 2 
298 1 254 1 209 1 136 1 20 1 271 1 3 1 259 1 114 1 6 1 217 1 294 1 41 1 206 1 238 1 
298 1 254 1 150 1 209 1 136 1 135 1 271 1 3 1 259 1 114 1 6 1 294 1 41 1 206 1 238 1 
310 1 44 1 61 1 4 1 260 1 291 1 202 2 7 1 372 1 297 1 322 1 31 2 72 1 122 1 185 2 274 2 327 1 36 1 56 2 306 2 171 1 222 1 132 1 59 4 
93 1 346 1 6 1 294 1 186 1 28 1 107 1 51 1 
298 1 346 1 254 1 111 1 271 1 209 1 136 1 20 1 3 1 185 1 259 1 217 1 6 2 41 1 331 1 294 2 28 1 238 1 206 1 107 1 
346 4 283 1 111 1 226 1 229 1 114 1 261 1 329 1 6 5 265 1 331 2 294 5 28 4 107 5 
93 1 346 2 154 1 6 2 186 1 294 2 28 2 107 2 
65 1 293 1 
65 1 293 1 
289 1 338 1 
289 1 338 1 
289 1 338 1 
65 1 286 1 293 1 
65 1 26 1 293 1 
289 1 65 2 208 1 293 2 338 1 373 1 
65 1 286 1 293 1 
65 1 286 1 293 1 
65 1 293 1 321 1 
65 1 293 1 321 1 
65 1 293 1 321 1 
371 2 284 1 243 1 348 2 360 2 46 1 373 1 35 2 263 1 65 2 316 2 173 2 13 1 293 2 357 1 333 2 131 1 181 3 223 1 
21 1 360 1 114 1 65 1 316 1 26 1 6 2 293 1 294 2 343 1 366 1 295 1 28 2 181 1 367 1 346 2 348 1 35 1 216 1 173 1 333 1 131 1 107 2 252 1 
91 1 280 1 345 1 
199 1 91 1 345 1 
94 1 133 1 162 1 199 1 280 2 345 3 
94 1 162 1 199 1 81 1 280 1 345 2 
94 2 162 1 199 1 280 1 345 2 
44 1 198 1 21 1 86 1 288 1 138 1 64 2 5 1 316 5 8 1 343 1 117 2 372 1 241 3 243 2 244 1 145 1 165 2 212 1 33 1 213 1 101 1 276 1 173 5 193 2 376 1 378 1 219 4 43 3 252 1 132 1 222 1 
197 1 44 3 198 2 256 1 86 2 361 1 138 1 288 1 64 6 316 9 117 6 159 5 372 3 241 9 32 1 243 5 163 1 244 3 145 2 212 3 33 2 213 1 101 2 170 5 57 1 192 1 173 9 276 1 193 6 378 6 219 7 252 4 43 8 132 3 222 3 
44 1 198 1 86 1 138 1 64 2 316 3 8 1 117 2 372 1 241 4 243 3 244 2 145 1 165 1 33 1 212 1 101 1 57 1 173 3 376 1 193 2 219 2 43 3 252 1 132 1 222 1 
197 1 44 2 198 1 256 1 86 1 138 1 64 4 316 4 8 1 117 4 372 2 241 7 243 4 163 1 244 3 145 1 165 2 33 1 212 2 101 1 57 1 173 4 193 4 376 1 219 3 43 5 252 2 132 2 222 2 
271 1 147 1 245 1 
271 1 342 1 
326 1 
298 1 271 1 
298 1 364 1 271 3 245 2 75 1 238 1 
298 1 271 1 238 1 
271 1 175 1 
372 1 31 4 95 2 349 1 4 3 137 1 363 1 233 1 291 2 56 3 307 1 39 1 344 1 222 1 196 1 59 7 379 1 
372 1 31 4 95 2 349 1 4 3 137 1 363 1 233 1 291 2 56 3 307 1 39 1 344 1 222 1 196 1 59 7 379 1 
372 1 31 4 95 2 272 1 349 1 4 3 137 1 363 1 233 1 291 2 56 3 307 1 39 1 344 1 222 1 196 1 59 7 379 1 
310 1 44 3 61 1 313 1 137 2 4 10 260 1 363 1 233 2 291 5 7 1 344 2 240 3 372 4 31 16 95 3 164 1 349 1 187 1 212 3 99 1 214 1 274 2 127 4 56 15 80 1 307 2 39 1 42 1 379 1 59 31 222 4 196 5 132 3 
310 2 61 2 4 4 137 1 260 2 233 1 363 1 291 3 7 2 155 1 344 1 372 1 31 5 95 2 349 1 187 1 274 4 56 4 146 1 307 1 39 1 222 1 59 9 196 1 
224 1 133 1 134 1 254 1 151 1 199 1 136 1 22 1 230 1 340 2 259 1 139 1 318 1 91 1 368 1 320 1 345 2 268 1 74 1 209 1 324 2 169 1 273 1 350 1 247 1 375 1 250 1 41 1 280 1 58 1 
224 1 133 1 254 1 151 1 199 1 136 1 22 1 230 1 340 3 259 1 27 1 318 1 91 1 368 1 345 2 268 1 74 1 209 1 324 3 169 1 273 1 350 1 11 1 247 1 375 1 250 2 41 1 220 1 280 1 58 1 
224 1 133 1 254 1 199 1 136 1 22 1 230 1 340 2 259 1 27 1 91 1 368 1 345 2 74 1 209 1 324 2 169 1 273 1 350 1 11 1 247 1 375 1 250 2 41 1 280 1 
254 1 312 1 136 1 3 1 22 2 259 1 340 1 290 1 292 1 318 1 368 2 298 1 209 1 271 1 324 1 273 2 76 1 375 2 330 1 41 1 220 1 251 1 58 1 
133 1 134 1 254 1 151 1 199 1 136 1 22 1 230 1 340 1 259 1 318 1 91 1 368 1 320 1 345 2 268 1 74 1 209 1 324 1 273 1 11 1 247 1 375 1 41 1 280 1 58 1 
218 1 
136 2 3 2 226 1 1 1 138 1 290 1 6 1 180 1 237 1 294 1 92 1 51 1 298 1 93 1 144 4 241 2 243 2 244 2 145 1 101 1 102 1 194 2 107 1 309 2 254 2 198 1 311 1 19 1 259 1 264 1 316 5 203 1 117 2 205 1 29 1 160 2 207 2 73 1 209 2 271 1 76 1 33 1 213 1 126 2 215 1 276 3 173 5 129 2 41 1 278 1 377 1 378 6 332 1 221 2 43 2 
19 1 226 1 1 1 264 1 203 1 316 3 6 1 294 1 237 1 92 1 51 1 93 1 144 2 207 1 102 1 374 1 215 1 173 3 276 1 332 1 378 2 107 1 
19 1 226 1 1 1 138 1 264 1 203 1 316 3 6 1 294 1 237 1 92 1 51 1 160 1 93 1 144 3 243 1 102 1 374 1 215 1 173 3 276 1 378 1 332 1 107 1 
309 1 19 1 226 1 1 1 138 1 264 1 203 1 316 3 6 1 294 1 237 1 92 1 51 1 160 1 93 1 144 3 207 1 243 1 374 1 102 1 215 1 276 1 173 3 332 1 378 2 107 1 
1 1 226 1 138 5 6 1 294 1 237 1 92 1 51 1 144 6 93 1 243 5 145 1 244 2 184 1 101 1 102 1 12 1 104 1 107 1 194 2 309 4 19 1 264 1 316 5 203 1 117 1 29 1 160 4 207 4 30 1 33 1 213 1 374 1 126 2 215 1 173 5 276 3 129 2 378 7 332 1 278 1 221 2 43 1 336 1 
1 1 226 1 138 1 6 1 180 1 294 1 237 1 92 1 51 1 144 4 93 1 241 2 243 2 145 1 244 2 101 1 102 1 107 1 194 2 309 2 19 1 264 1 316 4 203 1 117 1 29 1 160 2 207 2 33 1 213 1 126 2 215 1 173 4 276 2 129 2 332 1 278 1 378 4 221 2 43 1 
309 2 19 1 226 1 1 1 138 1 264 1 203 1 316 4 6 1 117 1 294 1 237 1 29 1 92 1 160 2 51 1 93 1 144 4 207 2 30 1 243 1 244 2 145 1 184 1 33 1 213 1 101 1 102 1 126 2 215 1 12 1 276 2 173 4 129 2 378 4 278 1 332 1 221 2 194 2 107 1 43 1 
309 2 19 1 226 1 1 1 138 1 264 1 203 1 316 4 6 1 117 1 294 1 237 1 29 1 92 1 160 2 51 1 93 1 144 4 207 2 30 1 243 1 244 2 145 1 184 1 33 1 213 1 101 1 102 1 126 2 215 1 12 1 276 2 173 4 129 2 378 4 278 1 332 1 221 2 194 2 107 1 43 1 
309 2 19 1 226 1 1 1 138 1 262 1 23 2 264 1 203 1 316 4 6 1 117 1 294 1 237 1 92 1 160 2 51 1 239 1 93 1 144 4 207 2 241 2 243 1 145 1 184 1 246 2 124 1 33 1 213 1 101 1 102 1 215 1 276 2 173 4 129 2 378 4 278 1 332 1 194 2 107 1 43 1 
309 3 19 1 226 1 1 1 138 1 264 1 203 1 316 4 6 1 117 1 294 1 237 1 29 1 92 1 51 1 160 3 93 1 144 5 207 3 30 1 243 1 244 2 145 1 184 1 33 1 213 1 101 1 102 1 126 2 215 1 12 1 276 2 173 4 129 2 278 1 332 1 378 5 221 2 194 2 107 1 43 1 336 1 
309 3 19 1 226 1 1 1 138 1 264 1 203 1 316 4 6 1 117 1 294 1 237 1 29 1 92 1 51 1 160 3 93 1 144 5 207 3 30 1 243 1 244 2 145 1 184 1 33 1 213 1 101 1 102 1 126 2 215 1 12 1 276 2 173 4 129 2 278 1 332 1 378 5 221 2 194 2 107 1 43 1 336 1 
1 1 226 1 138 1 6 1 180 1 294 1 237 1 92 1 51 1 239 1 144 4 93 1 241 2 243 1 145 1 246 2 101 1 102 1 107 1 194 2 309 2 19 1 23 2 264 1 316 4 203 1 117 1 160 2 207 2 33 1 213 1 215 1 173 4 276 2 129 2 332 1 278 1 378 4 43 1 
310 1 61 1 137 1 4 2 260 1 114 2 363 1 291 2 202 1 7 1 344 1 297 1 372 1 72 1 31 3 95 1 349 1 185 1 274 2 327 1 306 1 56 3 39 1 147 1 222 1 59 6 
310 2 44 2 61 2 63 1 4 2 260 2 114 1 47 1 291 1 202 11 7 2 67 1 240 3 372 1 72 2 31 8 300 1 185 11 212 2 99 1 77 1 214 1 127 3 274 4 327 1 37 1 56 6 306 4 40 1 196 1 59 14 222 2 132 1 
84 1 310 1 254 1 111 1 20 1 136 1 61 1 3 1 259 1 260 1 114 1 7 1 6 2 294 2 28 1 238 1 206 1 298 1 346 1 347 1 72 1 31 1 300 1 271 1 209 1 77 1 327 1 274 2 128 1 306 1 56 1 217 1 40 1 41 1 331 1 279 1 107 1 59 2 
44 2 136 3 3 1 137 1 4 8 291 4 6 3 7 3 294 3 344 1 142 1 238 2 346 1 298 2 300 1 95 1 349 1 96 2 185 7 11 1 56 10 306 7 107 1 59 20 196 4 310 3 254 3 111 1 200 1 61 3 20 2 314 1 260 3 259 2 114 2 363 1 202 7 28 1 206 2 372 3 71 2 72 3 31 10 269 2 209 3 271 2 123 2 212 2 77 1 274 6 327 3 328 2 217 2 39 1 40 1 331 1 41 2 222 3 132 2 
310 2 254 8 136 8 61 2 227 1 3 2 259 2 260 2 139 1 362 2 341 1 290 1 6 1 7 2 294 1 28 1 9 1 297 1 346 1 52 1 298 2 72 2 31 1 300 1 271 3 209 7 76 1 11 1 97 1 77 1 274 4 327 2 353 1 56 1 331 1 41 2 335 1 107 1 59 2 
310 1 44 1 283 1 61 1 45 1 4 1 260 1 261 1 291 1 202 1 7 1 6 1 294 1 28 1 346 1 372 1 72 1 31 1 185 1 212 1 274 2 327 1 306 1 56 2 40 1 107 1 222 1 59 3 132 1 
297 1 310 1 44 1 72 1 31 2 61 1 122 1 185 1 4 1 260 1 327 1 274 2 306 1 202 1 7 1 196 1 59 2 222 1 
297 1 372 1 310 1 72 1 61 1 185 1 4 1 260 1 327 1 274 2 291 1 306 1 202 1 56 2 171 1 7 1 59 2 132 1 
310 1 44 1 61 1 4 2 260 1 291 1 202 2 7 1 297 1 372 1 31 2 72 1 185 2 212 1 274 2 327 1 306 2 56 2 222 1 59 4 196 1 132 1 
310 1 44 1 72 1 31 2 61 1 122 1 185 1 4 1 97 1 260 1 327 1 274 2 306 1 202 1 7 1 196 1 59 2 222 1 
372 1 310 1 72 1 61 1 185 1 4 1 97 1 260 1 327 1 274 2 291 1 306 1 202 1 56 2 171 1 7 1 59 2 132 1 
310 1 44 1 61 1 4 2 260 1 291 1 202 2 7 1 372 1 31 2 72 1 185 2 212 1 97 1 274 2 327 1 306 2 56 2 222 1 59 4 196 1 132 1 
372 1 310 1 44 1 72 1 31 2 61 1 185 2 4 2 212 1 260 1 327 1 274 2 291 1 56 2 306 2 202 2 7 1 132 1 196 1 222 1 59 4 
310 1 254 1 20 1 136 1 61 1 3 1 259 1 260 1 114 1 6 1 7 1 294 1 238 1 206 1 298 1 31 1 72 1 300 1 209 1 271 1 123 1 77 1 327 1 274 2 56 1 217 1 41 1 59 2 
310 1 254 1 150 1 135 1 136 1 61 1 3 1 259 1 260 1 114 1 6 1 7 1 294 1 238 1 206 1 298 1 31 1 183 1 72 1 300 1 209 1 271 1 77 1 327 1 274 2 56 1 41 1 59 2 
310 1 44 1 61 1 4 2 260 1 291 1 202 2 7 1 372 1 31 2 72 1 185 2 212 1 274 2 327 1 306 2 56 2 40 1 222 1 59 4 196 1 132 1 
310 1 44 1 254 1 20 1 136 1 61 1 4 2 259 1 260 1 139 1 291 1 202 2 6 1 7 1 294 1 238 1 206 1 372 1 298 1 31 2 72 1 269 1 209 1 271 1 185 2 123 1 212 1 327 1 274 2 56 2 306 2 217 1 41 1 132 1 196 1 59 4 222 1 
310 1 44 1 283 1 61 1 4 1 260 1 261 1 202 1 7 1 6 1 294 1 28 1 372 1 346 1 72 1 31 2 185 1 212 1 274 2 327 1 56 1 306 1 40 1 107 1 132 1 196 1 358 1 222 1 59 3 
310 2 44 2 61 2 4 2 260 2 48 1 291 1 7 2 155 1 157 1 68 2 49 1 240 1 372 1 31 7 212 2 188 1 99 1 214 1 127 2 125 1 274 4 54 1 275 1 56 6 59 13 222 2 196 1 132 1 
310 2 44 2 61 2 4 2 260 2 48 1 291 1 7 2 155 1 157 1 68 2 49 1 240 1 372 1 31 7 212 2 188 1 99 1 214 1 127 2 125 1 274 4 54 1 275 1 56 6 59 13 222 2 196 1 132 1 
310 2 44 7 61 2 228 1 137 1 4 12 260 2 363 1 152 1 48 1 291 6 7 2 155 1 67 2 68 4 49 1 344 1 143 1 240 4 372 8 31 27 95 1 349 1 187 1 212 7 188 1 99 2 214 2 127 4 125 1 274 4 54 1 190 1 275 1 56 25 191 1 39 1 253 1 59 52 222 8 196 6 132 7 
310 2 44 2 61 2 4 2 260 2 291 1 7 2 155 1 157 1 68 1 49 1 240 1 372 2 31 6 270 1 212 2 188 1 99 1 214 1 127 2 125 1 274 4 54 1 275 1 56 7 59 13 222 2 196 1 132 2 
310 3 44 3 61 3 228 1 4 3 260 3 152 1 48 1 291 1 7 3 155 1 68 4 49 2 143 1 372 2 240 2 31 14 187 2 212 3 188 1 99 2 125 1 274 6 127 2 54 2 190 1 275 1 56 12 191 1 253 1 196 2 59 26 222 3 132 2 
65 1 284 1 348 1 293 1 360 1 357 1 373 1 333 1 182 1 35 1 
26 1 295 1 
225 1 65 1 348 1 293 1 266 1 360 1 333 1 119 1 35 1 
371 1 284 1 243 1 348 1 360 1 373 1 35 1 263 1 65 1 316 1 173 1 13 1 293 1 357 1 131 1 333 1 181 2 223 1 
371 1 284 1 243 1 348 1 360 1 373 1 35 1 263 1 65 1 316 1 173 1 13 1 293 1 357 1 131 1 333 1 181 2 223 1 
371 1 284 1 243 1 348 1 360 1 373 1 35 1 263 1 65 1 316 1 173 1 13 1 293 1 357 1 131 1 333 1 181 2 223 1 
208 1 286 1 156 1 
208 1 286 1 156 1 
79 1 321 1 
79 1 208 1 321 1 
216 1 367 1 
21 1 360 1 114 1 88 1 65 1 316 1 26 1 6 2 293 1 294 2 343 1 366 1 295 1 181 1 367 1 28 2 371 1 346 2 348 1 35 1 216 1 173 1 13 1 219 1 333 1 107 2 252 1 
286 1 156 1 
79 1 208 1 321 1 
310 1 254 2 136 2 61 1 227 1 259 1 260 1 362 2 7 1 6 2 294 2 70 1 118 1 298 1 52 1 72 1 31 1 300 1 303 1 271 1 209 2 77 1 327 1 274 2 352 1 354 1 56 1 40 1 41 1 107 2 59 2 
133 1 268 1 254 2 199 1 74 1 209 2 136 2 273 1 11 1 230 1 259 1 139 1 41 1 15 1 91 1 174 1 280 1 334 1 345 2 
133 1 268 1 254 1 199 1 74 1 209 1 136 1 273 1 11 1 230 1 259 1 317 1 15 1 41 1 91 1 280 1 345 2 
298 1 254 1 312 1 271 1 209 1 136 1 3 1 273 1 76 1 259 1 235 1 290 1 41 1 334 1 
133 1 268 1 254 1 199 1 74 1 209 1 136 1 273 1 11 1 230 1 259 1 15 1 41 1 91 1 174 1 280 1 334 1 345 2 
258 1 
149 1 243 1 285 1 147 1 117 1 138 1 43 1 
138 1 316 1 117 1 29 1 241 1 243 2 244 1 145 1 33 1 213 1 101 1 126 1 276 1 173 1 378 1 221 1 43 1 
44 1 254 1 198 1 136 1 62 1 3 1 259 2 115 1 64 3 24 1 316 2 204 1 117 3 342 2 238 1 372 1 298 1 241 6 243 3 244 3 209 1 145 2 271 4 245 1 10 1 75 1 212 1 33 2 213 2 101 2 328 1 215 1 82 1 276 1 173 2 193 3 41 1 378 2 43 4 132 1 222 1 108 1 
44 2 198 1 16 1 228 1 138 2 140 1 64 5 316 1 117 5 296 1 143 1 240 1 372 2 241 6 243 5 145 2 244 3 210 2 33 2 212 2 99 1 213 2 101 2 127 1 190 1 191 1 173 1 276 1 193 5 377 1 378 1 253 1 43 8 222 2 132 2 
16 1 282 1 283 1 2 1 137 1 315 1 89 1 154 1 316 1 6 1 117 1 294 1 344 1 28 1 93 1 372 1 346 1 145 1 210 2 33 1 213 1 101 1 12 1 173 1 107 1 43 2 222 1 
149 1 243 1 285 1 145 1 33 1 213 1 138 1 101 1 117 1 43 1 
372 1 241 4 44 1 243 2 244 2 212 1 64 2 193 2 117 2 43 2 222 1 132 1 
243 1 316 1 173 1 276 1 378 1 138 1 
254 4 311 1 198 2 136 4 3 2 231 2 259 1 179 1 290 1 316 3 117 2 205 1 298 1 271 1 145 2 209 4 76 1 33 2 213 1 101 2 53 1 57 1 276 2 173 3 41 1 378 4 377 2 195 1 43 2 
310 1 254 1 283 2 110 1 61 1 136 1 20 1 3 1 260 1 259 1 114 1 315 1 6 3 7 1 294 3 28 2 206 1 238 1 346 2 298 1 72 1 209 1 271 1 123 1 77 1 274 2 327 1 56 1 217 1 41 1 107 2 59 1 
241 2 198 1 243 2 244 1 145 1 33 1 213 1 138 1 101 1 64 1 117 1 377 1 43 1 
302 1 348 1 35 1 
267 1 284 1 348 1 367 1 35 1 
302 1 348 1 35 1 
302 1 348 1 35 1 
176 1 348 1 35 1 
176 1 348 1 35 1 
176 1 348 1 35 1 
348 1 35 1 
65 1 293 1 
310 1 61 1 228 1 137 1 4 2 260 1 363 1 291 2 7 1 155 1 344 1 372 1 240 1 31 4 95 1 349 1 99 1 127 1 274 2 56 4 39 1 222 1 59 8 
310 2 44 1 61 2 228 1 137 1 4 3 260 2 363 1 236 1 291 2 7 2 155 1 344 1 372 1 240 1 31 6 95 1 349 1 212 1 99 1 214 1 127 2 274 4 56 5 39 1 59 11 222 2 196 1 
310 3 44 2 61 3 228 1 137 1 4 4 260 3 363 1 236 1 291 3 7 3 155 1 344 1 143 1 240 1 372 3 31 9 95 1 349 1 187 1 212 2 99 1 127 1 274 6 190 1 56 10 191 1 39 1 253 1 196 1 59 19 222 3 132 2 
310 3 44 2 61 3 228 1 137 1 4 5 260 3 363 1 236 1 291 3 7 3 155 1 344 1 143 1 240 1 372 2 31 10 95 1 349 1 187 1 212 2 99 1 127 1 274 6 190 1 56 7 191 1 39 1 253 1 196 2 59 17 222 3 132 1 
310 1 61 1 228 1 137 1 4 2 260 1 363 1 291 2 7 1 155 1 344 1 372 1 240 1 31 4 95 1 349 1 99 1 127 1 274 2 56 4 39 1 222 1 59 8 
310 1 44 2 61 1 228 1 4 2 260 1 291 1 7 1 155 1 143 1 240 1 372 2 31 6 212 2 99 1 127 1 274 2 190 1 56 6 191 1 253 1 196 1 59 12 222 2 132 2 
310 4 44 2 61 4 228 1 137 1 4 5 260 4 363 1 236 1 291 3 7 4 155 1 344 1 143 1 240 1 372 2 31 10 95 1 349 1 187 2 212 2 99 1 127 1 274 8 190 1 56 8 191 1 39 1 253 1 196 2 59 18 222 3 132 1 
310 4 44 3 61 4 228 1 4 6 260 4 291 3 7 4 155 1 157 1 143 1 240 1 372 2 31 9 187 2 212 3 99 1 127 1 274 8 190 1 56 7 191 1 253 1 196 3 59 16 222 3 132 2 
372 1 31 3 349 2 137 3 4 6 363 1 291 3 56 4 39 1 344 3 59 7 196 3 222 1 
310 4 44 2 61 4 228 1 137 1 4 4 260 4 363 1 291 3 7 4 155 1 157 1 344 1 143 1 240 1 372 2 31 10 95 1 349 1 187 2 212 2 99 1 127 1 274 8 190 1 56 8 191 1 39 1 253 1 196 1 59 18 222 3 132 1 
372 1 310 2 31 4 95 1 61 2 349 1 187 1 4 3 137 1 260 2 363 1 274 4 291 2 56 4 7 2 39 1 344 1 222 1 59 8 196 1 
372 1 31 3 291 2 56 3 95 1 39 1 147 1 349 1 4 2 344 1 137 1 363 1 59 6 222 1 
372 1 310 1 44 1 31 2 61 1 4 2 212 1 260 1 274 2 236 1 291 1 56 2 7 1 132 1 222 1 59 4 196 1 
372 1 240 1 44 1 31 3 212 1 4 2 99 1 214 1 127 2 291 1 56 4 132 1 59 7 222 1 196 1 
310 2 44 2 337 1 61 2 137 2 4 9 260 2 47 1 363 1 291 5 7 2 67 1 344 2 240 2 372 3 31 11 95 1 349 1 187 2 212 2 214 1 127 2 274 4 56 12 39 1 196 4 222 3 59 23 132 2 
56 1 59 1 127 1 
240 1 31 1 59 1 
372 1 310 1 44 1 31 3 61 1 212 1 4 3 260 1 274 2 328 1 236 1 291 2 56 3 7 1 59 6 222 1 196 1 132 1 
310 1 44 2 61 1 228 1 4 2 260 1 291 1 7 1 155 1 143 1 240 1 372 2 31 6 212 2 99 1 127 1 274 2 190 1 56 6 191 1 253 1 196 1 59 12 222 2 132 2 
372 1 31 3 137 1 4 2 363 1 291 1 56 3 344 1 222 1 59 6 196 1 
310 1 337 1 31 1 61 1 349 1 187 1 4 2 137 1 260 1 274 2 291 1 56 2 7 1 39 1 344 1 196 1 59 3 
372 1 310 1 31 3 61 1 137 1 4 4 260 1 274 2 89 1 291 2 56 3 7 1 155 1 344 1 196 2 59 6 222 1 
310 1 44 1 31 2 61 1 4 1 260 1 274 2 7 1 155 1 222 1 59 2 196 1 
372 1 310 1 44 1 31 2 61 1 4 2 212 1 260 1 274 2 291 1 56 2 7 1 155 1 132 1 222 1 59 4 196 1 
310 3 337 1 31 1 61 3 187 1 137 1 4 2 260 3 274 6 291 1 56 2 7 3 155 1 157 1 344 1 59 3 196 1 
310 5 337 1 44 3 61 5 137 3 4 12 260 5 363 2 236 1 291 7 7 5 155 1 157 1 344 3 240 3 372 5 31 16 95 1 164 1 349 1 187 2 212 3 99 1 214 1 127 4 274 10 56 18 80 1 39 1 42 1 59 34 222 5 196 5 132 3 
329 1 355 1 6 1 226 1 294 1 114 1 107 1 
242 1 226 1 98 1 114 1 329 1 355 1 25 1 6 1 158 1 294 1 130 1 107 1 
298 1 290 1 254 1 271 1 136 1 209 1 147 1 3 1 41 1 76 1 259 1 
298 1 346 1 254 1 271 1 209 1 136 1 3 1 259 1 114 1 6 2 217 1 331 1 294 2 41 1 28 1 238 1 206 1 107 1 
93 1 298 2 346 1 254 1 271 3 209 1 136 1 1 1 259 1 231 1 114 1 55 1 6 2 217 1 331 1 294 2 41 1 28 2 238 2 206 1 107 2 175 1 51 1 
93 1 298 2 346 1 254 2 150 1 271 3 209 2 136 2 1 1 259 1 231 1 114 1 55 1 6 2 106 1 331 1 294 2 41 1 28 2 238 2 206 1 107 2 175 1 51 1 
298 1 254 3 243 1 209 3 136 3 271 4 3 1 245 1 138 1 87 1 259 1 231 1 215 1 55 1 248 1 316 2 173 2 106 1 342 1 41 1 378 1 238 1 175 1 
298 1 254 3 243 1 209 3 136 3 271 4 3 1 245 1 138 1 259 1 231 1 215 1 55 1 316 2 82 1 173 2 106 1 342 1 41 1 378 1 238 1 175 1 
254 1 136 1 209 1 41 1 259 1 335 1 
298 2 254 7 209 6 136 7 271 3 227 1 166 1 3 2 75 1 11 1 259 3 362 1 139 1 341 1 353 1 38 1 50 1 41 2 335 1 238 1 9 1 
136 1 137 1 4 2 139 1 291 2 6 2 7 2 294 2 344 1 238 1 346 1 298 1 95 1 349 1 185 1 306 1 56 3 107 1 59 6 310 2 254 1 20 1 61 2 260 2 259 1 114 2 363 1 202 1 28 1 70 1 206 1 71 1 372 1 72 2 31 3 269 1 209 1 271 1 123 1 274 4 327 2 217 1 39 1 40 1 331 1 41 1 222 1 
149 1 254 1 285 1 136 1 3 1 138 1 24 1 316 3 204 1 117 1 342 1 243 1 209 1 145 2 271 2 10 1 245 1 33 2 213 2 101 2 53 1 215 1 82 1 173 3 276 1 219 1 378 2 43 1 
298 1 254 2 209 2 136 2 271 2 245 1 75 1 259 2 139 1 115 1 41 1 335 1 238 1 
298 1 254 4 17 1 209 4 136 4 271 1 3 1 76 1 259 1 139 1 290 1 106 1 41 1 
298 1 254 2 200 1 209 2 136 2 271 1 166 1 231 1 259 2 232 1 201 1 38 1 41 1 238 1 
254 1 199 1 74 1 136 1 209 1 3 1 41 1 91 1 259 1 345 1 
298 1 254 2 209 2 136 2 271 1 227 1 11 1 259 1 139 1 352 1 41 1 
298 2 254 5 17 1 209 4 136 5 271 3 3 1 227 1 76 1 231 1 259 2 139 1 353 1 290 1 41 2 9 1 
298 2 254 5 255 1 17 1 209 4 136 5 271 3 3 1 227 1 76 1 231 1 259 2 139 1 290 1 41 2 9 1 
298 1 346 1 254 1 150 1 271 1 209 1 136 1 3 1 259 1 114 1 6 2 331 1 294 2 41 1 28 1 238 1 206 1 107 1 
298 1 254 1 209 1 136 1 271 1 166 1 75 1 231 1 259 2 38 1 50 1 41 1 238 1 
281 1 249 1 304 1 114 1 189 1 
93 1 281 2 109 1 243 1 1 1 138 1 178 1 304 2 114 1 189 2 215 1 316 2 173 2 172 1 249 1 356 1 219 1 92 1 51 1 
303 1 304 1 189 1 354 1 6 1 249 1 294 1 118 1 107 1 
172 1 249 1 178 1 
224 1 147 1 169 1 350 1 
224 1 324 1 318 1 169 1 350 1 340 1 58 1 
324 1 22 1 375 1 
224 1 134 1 85 1 277 2 324 3 318 1 169 1 350 1 340 3 58 1 369 1 370 1 
224 1 78 1 324 2 318 1 169 1 250 1 350 1 340 2 58 1 
134 1 324 1 169 1 340 1 365 1 90 1 318 1 91 1 280 1 345 1 58 1 
224 1 134 1 324 1 318 1 169 1 340 1 58 1 
224 2 134 1 324 1 318 1 350 1 340 1 58 1 
224 1 134 1 324 2 113 1 325 1 169 1 340 2 318 2 69 1 58 2 
224 1 134 1 324 3 359 1 339 1 169 2 350 1 340 3 351 1 90 1 318 1 250 2 58 1 
224 1 133 1 134 1 199 1 324 2 169 1 350 1 340 2 318 1 250 1 91 1 280 1 345 2 58 1 120 1 
224 1 134 1 324 4 169 2 350 1 340 4 351 1 34 1 78 1 90 1 318 2 250 2 58 2 
224 1 134 1 324 1 318 1 169 1 350 1 340 1 58 1 
224 2 324 4 169 3 350 2 340 4 351 1 305 1 277 1 90 1 318 1 250 2 58 1 369 1 370 1 
224 1 134 1 324 2 167 1 287 1 169 1 350 1 340 2 318 1 250 1 308 1 58 1 
224 1 134 1 324 3 169 1 350 1 340 3 153 1 277 2 318 1 58 1 370 1 369 2 
257 1 169 2 211 2 234 1 
83 1 134 1 324 1 318 1 340 1 58 1 
224 1 134 1 359 1 324 2 318 1 169 1 250 1 350 1 340 2 58 1 
14 1 
224 1 134 1 324 1 318 1 169 1 350 1 340 1 58 1 
224 1 134 1 324 3 359 1 169 1 350 1 340 3 277 1 318 1 250 1 58 1 
90 1 169 1 351 1 305 1 
224 1 169 1 

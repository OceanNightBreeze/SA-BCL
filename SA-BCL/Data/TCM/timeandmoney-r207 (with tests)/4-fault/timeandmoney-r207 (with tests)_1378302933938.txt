#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 5 212 1 93 1 171 9 120 1 173 2 177 2 262 2 263 3 76 7 54 1 220 1 107 1 354 1 207 1 111 9 270 1 294 1 325 1 162 4 135 1 276 1 88 1 19 1 
188 5 212 1 93 1 171 9 120 1 173 2 177 2 262 2 263 3 76 7 54 1 220 1 107 1 354 1 207 1 111 9 270 1 294 1 325 1 162 4 135 1 276 1 88 1 19 1 
359 1 188 5 212 1 93 1 338 1 120 2 171 9 23 1 26 1 173 2 177 2 262 2 263 3 76 6 29 1 220 1 107 1 203 1 354 2 111 9 270 1 294 1 325 1 162 4 135 1 276 2 88 2 19 1 
359 1 188 5 212 1 93 1 338 1 120 2 171 9 23 1 26 1 173 2 177 2 262 2 263 3 76 6 29 1 220 1 107 1 203 1 354 2 111 9 270 1 294 1 325 1 162 4 135 1 276 2 88 2 19 1 
359 1 188 6 212 1 93 1 338 1 120 2 171 10 23 1 26 1 173 2 177 2 262 2 263 4 76 7 29 1 220 1 107 1 203 1 354 2 111 10 270 1 294 1 325 1 162 5 135 1 276 2 88 2 19 1 
359 1 188 4 212 1 93 1 338 1 120 2 171 7 23 1 26 1 173 2 177 2 262 1 263 2 76 4 29 1 220 1 107 1 203 1 354 2 111 7 270 1 294 1 162 3 135 1 276 2 88 2 19 1 
188 3 171 4 120 1 111 4 270 1 294 1 325 1 173 1 177 1 262 2 162 2 263 1 76 3 135 1 88 1 276 1 19 1 220 1 
188 1 231 1 203 1 354 1 171 2 23 1 111 2 356 1 173 1 177 1 135 1 364 1 276 1 88 1 19 1 220 1 
188 2 93 1 354 1 171 3 111 3 173 2 177 2 162 1 263 1 76 1 135 1 19 1 220 1 
14 1 147 1 319 1 
371 2 78 1 147 1 
266 2 190 1 62 2 288 1 181 2 290 2 233 2 20 2 
251 1 67 1 190 1 167 2 95 1 362 1 122 1 233 3 311 2 5 1 6 1 197 1 53 1 174 1 56 1 146 2 366 1 34 1 348 1 59 1 320 1 266 2 126 1 288 1 181 3 159 1 109 1 290 2 292 1 132 2 328 1 62 2 87 2 330 1 358 1 187 1 20 2 
266 1 190 1 128 1 181 1 216 1 290 1 233 1 62 1 8 1 20 1 
190 1 168 1 216 1 233 2 238 1 8 2 124 1 9 1 147 1 266 1 128 1 223 1 181 2 14 1 224 1 290 1 43 1 62 1 329 1 332 1 20 2 
266 2 190 1 128 1 223 1 181 2 14 1 216 1 224 1 290 2 233 2 43 1 62 2 238 2 329 1 8 2 124 2 147 1 332 1 20 2 
321 1 232 1 238 1 89 1 124 1 
48 1 321 1 115 1 232 1 238 2 14 1 124 2 147 1 
232 1 238 1 124 1 
321 1 266 1 190 1 128 1 181 1 216 1 290 1 233 1 43 1 62 1 238 1 8 1 124 1 20 1 
147 1 
321 1 115 1 232 1 238 2 14 1 355 1 124 2 147 1 
321 2 127 1 158 1 213 1 267 2 191 2 361 1 232 2 14 1 108 1 51 1 258 2 112 1 100 1 115 1 238 5 124 5 147 1 227 1 
251 1 252 1 126 1 167 1 181 2 159 1 290 1 233 2 311 1 6 1 327 1 132 1 62 1 56 1 366 1 330 1 379 1 348 1 187 1 20 1 
288 1 319 1 
266 1 181 2 288 1 290 1 233 2 217 1 62 1 8 1 32 1 165 1 20 2 
379 1 24 1 
251 1 126 1 167 1 288 1 181 1 159 1 233 1 311 1 363 1 6 1 132 1 56 1 366 1 330 1 348 1 187 1 
252 2 266 1 168 1 181 5 288 1 161 1 85 1 290 4 233 5 123 1 217 1 327 1 62 4 8 1 165 1 20 5 
128 1 62 1 181 1 8 1 290 1 233 1 20 1 
252 1 266 1 62 3 288 1 181 3 290 3 233 3 20 3 
128 1 62 1 181 1 8 1 290 1 233 1 20 1 
266 1 181 1 290 1 233 1 62 1 8 1 165 1 32 1 20 1 
251 1 252 1 190 1 167 1 70 1 362 1 122 1 233 4 311 1 5 1 6 1 174 1 56 1 218 1 146 1 238 1 366 1 8 1 124 1 348 1 34 1 59 1 320 1 126 1 266 2 223 1 288 1 181 4 159 1 224 1 290 3 292 1 327 1 132 1 328 1 62 3 329 1 87 2 330 1 165 1 358 1 332 1 187 1 20 3 
252 1 168 1 181 2 288 1 290 1 85 1 233 2 217 1 62 1 8 1 20 2 
252 2 266 1 223 1 181 3 323 1 224 1 290 3 233 3 327 1 62 3 218 1 238 1 329 1 8 1 165 1 124 1 147 1 332 1 20 3 
252 1 266 1 62 2 181 2 165 1 379 1 201 1 290 2 233 2 20 2 
251 1 126 1 167 1 288 1 181 1 159 1 233 1 311 1 6 1 132 1 56 1 330 1 366 1 348 1 187 1 
251 1 126 1 167 1 288 1 181 1 159 1 215 1 233 1 311 1 132 1 144 1 56 1 330 1 366 1 187 1 
282 1 95 2 195 1 4 1 122 1 24 2 310 1 5 2 146 4 200 1 201 2 59 1 320 1 245 1 40 1 130 1 293 1 292 1 131 1 374 1 328 1 87 2 379 2 358 1 
181 1 289 1 290 1 233 1 62 1 8 1 332 1 20 1 
99 1 382 1 
99 1 382 1 
343 1 193 1 
343 1 193 1 
343 1 193 1 
99 1 284 1 382 1 
99 1 284 1 382 1 
99 1 249 1 382 1 
99 2 343 1 57 1 193 1 116 1 382 2 
99 1 284 1 382 1 
99 1 208 1 382 1 
99 1 208 1 382 1 
99 1 208 1 382 1 
166 1 336 1 96 1 233 2 99 1 314 1 238 1 124 1 239 1 105 1 11 1 155 1 204 1 288 1 181 2 290 2 62 2 357 1 249 1 275 1 64 1 382 1 281 1 20 2 
157 1 204 1 283 1 96 2 336 2 25 1 99 2 326 1 248 1 57 1 238 2 275 2 124 2 316 1 147 1 105 3 381 2 382 2 281 2 
88 1 276 1 120 1 
364 1 88 1 276 1 
156 1 364 1 84 1 276 3 120 2 303 1 
156 1 140 1 364 1 276 2 120 1 303 1 
156 1 364 1 276 2 120 1 303 2 
282 1 191 1 142 1 361 3 51 1 194 1 258 1 176 1 314 1 238 4 124 4 103 1 239 1 33 1 147 1 321 4 369 1 158 1 202 1 267 1 371 1 372 1 245 1 14 1 293 1 131 1 42 2 163 1 64 1 
46 1 282 3 213 1 191 2 142 6 361 8 232 5 51 6 258 2 176 3 260 1 178 1 78 3 238 8 124 8 103 2 239 4 147 5 321 7 202 1 158 1 267 2 371 9 372 6 243 1 245 3 14 1 225 5 293 3 131 3 375 1 163 2 89 5 279 1 
282 1 213 1 191 1 361 3 142 2 194 1 51 2 258 1 176 1 78 2 238 3 124 3 103 1 239 1 147 3 321 2 369 1 267 1 372 2 371 4 14 1 245 1 293 1 131 1 42 1 163 1 
282 2 213 1 191 1 142 4 361 5 194 1 51 4 258 1 176 2 78 3 178 1 238 4 124 4 103 1 239 2 147 4 321 3 369 1 267 1 371 7 372 4 14 1 245 2 293 2 131 2 42 2 375 1 163 1 279 1 
366 1 90 1 319 1 
268 1 366 1 
152 1 
251 1 366 1 159 1 
366 1 74 1 
366 1 159 1 
251 1 335 1 366 3 159 1 90 2 41 1 
50 1 169 1 337 1 95 4 245 1 40 2 293 1 5 3 374 3 376 1 377 1 344 1 44 1 164 2 146 7 380 1 149 1 
50 1 169 1 337 1 95 4 245 1 40 2 293 1 5 3 374 3 376 1 377 1 344 1 44 1 164 2 146 7 380 1 149 1 
50 1 169 1 337 1 95 4 245 1 40 2 293 1 5 3 374 3 376 1 377 1 344 1 44 1 164 2 146 7 380 1 149 1 92 1 
282 3 50 5 141 1 169 1 337 2 1 1 95 16 172 1 122 1 5 15 176 3 344 1 146 31 30 1 149 1 151 1 13 1 245 4 40 5 292 1 131 3 293 4 374 10 328 1 296 4 376 2 377 1 164 3 44 2 87 2 117 3 380 2 358 1 185 1 
21 1 50 1 141 1 95 5 337 1 122 2 5 4 344 1 146 9 365 1 149 1 245 1 40 3 293 1 292 2 374 4 328 2 376 1 377 1 164 2 44 1 87 4 380 1 358 2 
188 1 94 1 167 1 120 1 171 2 143 1 311 1 173 1 177 1 198 1 7 1 76 1 56 1 364 1 317 1 31 1 368 1 220 1 241 1 153 1 354 1 84 1 111 2 132 1 135 1 183 1 330 1 88 1 276 2 19 1 
188 1 94 1 167 1 120 1 171 3 143 1 311 1 285 1 173 1 177 1 198 1 7 1 76 2 56 1 364 1 31 1 220 1 58 1 241 1 153 1 84 1 354 1 111 3 110 1 132 1 135 1 183 1 330 1 88 1 276 2 
188 1 94 1 167 1 171 2 120 1 143 1 311 1 7 1 76 2 56 1 364 1 31 1 220 1 58 1 153 1 354 1 84 1 111 2 110 1 132 1 135 1 183 1 330 1 276 2 88 1 
139 1 94 2 167 1 69 1 171 1 72 1 311 1 285 1 173 1 177 1 7 2 56 1 366 1 349 1 153 2 12 1 354 2 159 1 111 1 132 1 297 1 330 1 187 1 
94 1 167 1 120 1 171 1 143 1 311 1 173 1 177 1 198 1 7 1 56 1 364 1 317 1 31 1 58 1 241 1 153 1 354 1 84 1 111 1 132 1 183 1 330 1 88 1 276 2 19 1 
351 1 
305 1 360 2 22 2 49 1 307 1 191 1 168 1 361 1 232 5 51 1 308 2 258 1 233 1 28 1 78 2 55 3 238 4 8 1 9 1 124 4 147 1 180 1 265 1 287 2 222 1 158 1 267 1 223 1 181 1 322 3 14 1 224 1 295 1 134 1 274 1 298 1 115 2 329 1 301 3 332 1 136 5 20 1 
305 1 360 2 22 2 49 1 307 1 191 1 168 1 361 1 232 5 51 1 308 2 258 1 233 1 28 1 78 2 55 3 238 4 8 1 9 1 124 4 147 1 180 1 265 1 287 2 222 1 158 1 267 1 223 1 181 1 322 3 14 1 224 1 295 1 134 1 274 1 298 1 115 2 329 1 301 3 332 1 136 5 20 1 
191 1 232 4 51 1 233 1 235 2 55 2 238 4 8 1 9 1 147 1 350 1 287 2 158 1 14 1 295 1 298 1 115 2 301 2 20 1 168 1 361 1 258 1 308 2 124 4 318 1 79 2 265 1 222 1 267 1 223 1 371 2 181 1 322 2 224 1 134 1 274 1 329 1 332 1 136 4 
0 1 191 1 232 6 51 2 233 1 55 2 56 1 238 5 8 1 103 1 9 1 147 2 350 1 287 2 158 1 14 1 159 1 295 1 297 1 298 1 115 3 301 2 304 1 20 1 360 2 22 2 167 2 168 1 307 1 361 2 255 1 308 2 72 1 258 1 73 1 311 2 78 2 366 1 124 5 265 1 222 1 267 1 371 2 223 1 322 2 181 1 224 1 132 2 134 1 274 1 329 1 330 1 332 1 187 2 136 4 
168 1 232 2 233 1 238 3 8 1 9 1 124 3 265 1 222 1 223 1 181 1 355 1 224 1 134 1 274 1 298 1 115 1 329 1 301 1 332 1 136 2 20 1 
265 1 222 1 168 1 223 1 322 1 181 1 224 1 233 1 134 1 298 1 274 1 329 1 238 2 8 1 124 2 9 1 332 1 136 3 20 1 
168 1 232 2 233 1 55 1 238 3 8 1 9 1 124 3 265 1 222 1 223 1 181 1 322 1 355 1 224 1 134 1 274 1 298 1 115 1 329 1 301 1 332 1 136 3 20 1 
49 1 190 1 191 1 232 7 51 1 233 2 55 4 238 5 8 2 9 1 147 2 287 2 158 1 14 2 355 1 290 1 295 1 62 1 298 1 115 3 301 4 20 2 305 1 22 2 360 2 168 1 307 1 361 1 258 1 308 2 216 1 28 1 78 2 124 5 221 1 180 1 266 1 265 1 222 1 128 1 267 1 223 1 181 2 322 3 224 1 43 1 134 1 274 1 329 1 332 1 136 5 
191 1 232 4 51 1 233 1 55 2 238 4 8 1 9 1 147 2 350 1 287 2 158 1 14 1 295 1 298 1 115 2 301 2 20 1 22 2 360 2 307 1 168 1 361 1 258 1 308 2 78 2 124 4 265 1 222 1 267 1 223 1 371 2 181 1 322 2 224 1 134 1 274 1 329 1 332 1 136 4 
360 2 22 2 49 1 307 1 191 1 168 1 361 1 232 4 51 1 308 2 258 1 233 1 28 1 55 2 78 2 238 4 8 1 9 1 124 4 147 1 180 1 265 1 287 2 222 1 158 1 267 1 223 1 322 2 181 1 14 1 224 1 295 1 134 1 274 1 298 1 115 2 329 1 301 2 332 1 136 4 20 1 
360 2 22 2 49 1 307 1 191 1 168 1 361 1 232 4 51 1 308 2 258 1 233 1 28 1 55 2 78 2 238 4 8 1 9 1 124 4 147 1 180 1 265 1 287 2 222 1 158 1 267 1 223 1 322 2 181 1 14 1 224 1 295 1 134 1 274 1 298 1 115 2 329 1 301 2 332 1 136 4 20 1 
191 1 168 1 361 1 232 4 51 1 308 2 258 1 233 1 235 2 55 2 238 4 8 1 9 1 124 4 147 1 318 1 79 2 180 1 154 1 265 1 287 2 222 1 38 1 158 1 267 1 371 2 223 1 322 2 181 1 14 1 224 1 295 1 134 1 274 1 298 1 115 2 329 1 301 2 332 1 136 4 20 1 
337 1 95 3 195 1 122 1 24 1 5 3 344 1 146 6 201 1 319 1 59 1 149 1 320 1 288 2 245 1 40 2 292 1 293 1 374 2 328 1 377 1 164 1 87 2 379 1 380 1 358 1 
282 1 50 1 95 6 2 1 362 1 52 1 122 2 24 8 5 5 217 1 176 2 146 11 8 1 286 1 201 3 59 1 320 2 288 1 13 1 353 1 245 2 40 1 292 2 131 2 293 1 374 2 86 1 328 2 296 2 87 4 117 2 379 8 358 2 
251 1 252 1 67 1 167 1 95 1 2 1 362 1 257 1 122 1 311 1 233 2 5 1 6 1 363 1 101 1 56 1 146 2 366 1 348 1 201 1 59 1 126 1 320 1 288 1 181 2 159 1 290 1 292 1 132 1 327 1 328 1 62 1 330 1 87 2 65 1 358 1 187 1 20 1 
282 2 138 2 50 2 337 1 95 10 2 1 233 3 5 10 6 2 344 1 56 2 146 20 348 2 201 7 149 1 59 3 288 2 245 3 159 2 290 1 293 3 292 3 62 1 164 1 358 3 66 2 20 1 252 1 251 2 67 1 167 1 362 1 122 3 24 7 311 1 174 2 176 2 366 2 35 1 320 3 126 2 181 3 40 4 131 2 132 1 327 1 133 2 374 6 328 3 377 1 87 6 330 2 45 1 380 1 331 2 379 7 187 1 
252 1 67 1 167 8 192 1 95 1 339 1 195 1 362 1 72 1 122 2 233 1 311 8 5 1 234 1 56 2 146 2 366 3 368 1 347 1 58 1 59 2 83 1 320 2 181 1 205 1 159 2 109 2 290 1 292 2 132 7 328 2 62 1 297 1 300 1 330 2 87 4 358 2 187 2 20 1 
282 1 95 1 2 1 24 1 122 1 233 1 5 2 176 1 146 3 201 1 59 1 266 1 320 1 352 1 181 1 245 1 40 1 290 1 292 1 131 1 293 1 374 1 328 1 62 1 87 2 165 1 379 1 358 1 20 1 
320 1 50 1 95 2 245 1 195 1 24 1 122 1 292 1 310 1 131 1 374 1 328 1 146 2 87 2 379 1 201 1 358 1 59 1 
320 1 282 1 40 1 195 1 24 1 122 1 4 1 292 1 293 1 5 2 374 1 328 1 146 2 87 2 379 1 201 1 358 1 59 1 
282 1 50 1 95 2 195 1 122 1 24 2 5 2 176 1 146 4 201 2 59 1 320 1 245 1 40 1 131 1 292 1 293 1 374 2 328 1 87 2 379 2 358 1 
320 1 50 1 95 2 245 1 24 1 122 1 292 1 310 1 131 1 374 1 328 1 146 2 87 2 379 1 201 1 347 1 358 1 59 1 
320 1 282 1 40 1 24 1 122 1 4 1 292 1 293 1 5 2 374 1 328 1 146 2 87 2 379 1 201 1 347 1 358 1 59 1 
282 1 95 2 122 1 24 2 5 2 176 1 146 4 347 1 201 2 59 1 320 1 245 1 40 1 131 1 292 1 293 1 374 1 328 1 87 2 379 2 358 1 
282 1 50 1 95 2 122 1 24 2 5 2 176 1 146 4 201 2 59 1 320 1 245 1 40 1 131 1 292 1 293 1 374 2 328 1 87 2 379 2 358 1 
251 1 67 1 167 1 95 1 362 1 122 1 311 1 233 1 5 1 6 1 174 1 56 1 146 2 366 1 348 1 59 1 126 1 320 1 288 1 181 1 159 1 292 1 132 1 328 1 330 1 87 2 358 1 187 1 
251 1 67 1 167 1 95 1 215 1 362 1 122 1 311 1 233 1 5 1 144 1 56 1 146 2 366 1 59 1 126 1 320 1 288 1 181 1 159 1 292 1 132 1 328 1 330 1 87 2 358 1 187 1 211 1 
282 1 50 1 95 2 2 1 122 1 24 2 5 2 176 1 146 4 201 2 59 1 320 1 245 1 40 1 131 1 292 1 293 1 374 2 328 1 87 2 379 2 358 1 
251 1 282 1 167 1 50 1 95 2 24 2 122 1 311 1 233 1 5 2 6 1 174 1 176 1 56 1 146 4 366 1 201 2 348 1 368 1 59 1 126 1 320 1 181 1 245 1 159 1 40 1 293 1 131 1 292 1 374 2 133 1 132 1 328 1 330 1 87 2 379 2 358 1 
282 1 50 1 95 2 2 1 122 1 24 1 233 1 5 1 176 1 146 3 201 1 59 1 266 1 320 1 181 1 245 1 290 1 293 1 292 1 131 1 374 1 328 1 62 1 87 2 165 1 278 1 379 1 358 1 20 1 
282 3 214 1 50 3 1 1 119 1 95 9 121 1 122 2 5 10 176 3 313 1 146 19 365 1 82 1 13 1 245 3 40 3 15 2 292 2 131 3 293 3 182 2 374 6 328 2 296 2 378 1 87 4 117 1 277 1 358 2 
229 1 282 2 118 1 50 2 141 2 170 1 119 2 95 14 1 2 121 1 122 3 5 12 176 3 313 1 146 26 365 1 179 1 82 1 245 3 129 1 40 2 15 1 293 2 292 3 131 3 182 4 374 4 328 3 296 2 87 6 117 2 277 2 210 1 358 3 
229 1 282 4 118 1 214 1 141 1 50 4 337 1 170 1 1 3 119 2 95 20 121 1 122 3 5 21 176 4 313 1 344 1 146 41 365 1 179 1 149 1 82 1 13 1 245 5 129 1 40 4 15 1 292 3 131 4 293 5 182 4 374 8 328 3 296 4 377 1 164 1 87 6 117 3 210 1 277 1 380 1 186 1 358 3 
229 1 282 3 118 1 214 1 141 2 50 3 337 1 170 1 1 3 119 2 95 20 121 1 122 4 5 18 176 4 313 1 344 1 146 38 365 1 179 1 149 1 82 1 13 1 245 5 129 1 40 4 15 1 292 4 131 4 293 4 182 4 374 7 328 4 296 4 377 1 164 1 87 8 117 3 210 1 277 1 380 1 186 1 358 4 
229 1 282 7 118 1 141 1 50 7 337 1 170 1 1 2 119 1 95 27 121 1 122 2 5 25 176 7 313 1 344 1 146 52 365 1 179 1 149 1 82 1 13 2 353 2 245 8 129 1 40 7 15 1 292 2 131 7 293 8 182 4 374 14 328 2 296 4 377 1 164 1 87 4 117 4 210 1 277 1 380 1 358 2 
99 1 283 1 57 1 250 1 336 1 96 1 275 1 382 1 25 1 281 1 
11 1 249 1 
99 1 336 1 96 1 275 1 199 1 71 1 382 1 150 1 281 1 
175 1 284 1 
68 1 116 1 208 1 
204 1 283 1 96 1 336 1 25 1 99 1 326 1 248 1 57 1 238 1 275 1 124 1 316 1 147 1 105 2 381 1 382 1 281 1 
204 1 283 1 96 1 336 1 25 1 99 1 326 1 248 1 57 1 238 1 275 1 124 1 316 1 147 1 105 2 381 1 382 1 281 1 
204 1 283 1 96 1 336 1 25 1 99 1 326 1 248 1 57 1 238 1 275 1 124 1 316 1 147 1 105 2 381 1 382 1 281 1 
175 1 116 1 284 1 
175 1 116 1 284 1 
68 1 208 1 
68 1 116 1 208 1 
155 1 166 1 
166 1 336 1 96 1 233 2 99 1 314 1 238 1 316 1 124 1 239 1 105 1 11 1 155 1 321 1 288 1 181 2 290 2 62 2 357 1 249 1 275 1 63 1 64 1 381 1 382 1 281 1 20 2 
67 1 167 2 192 1 95 1 2 1 362 1 122 1 340 1 311 2 233 2 5 1 56 1 146 2 366 1 104 1 59 1 83 1 320 1 181 2 159 1 269 1 109 2 292 1 132 2 328 1 299 1 330 1 87 2 358 1 333 1 20 2 
47 1 230 1 167 2 84 1 120 1 143 1 311 2 132 2 198 1 56 1 364 1 330 1 88 1 276 2 31 1 368 1 58 1 148 1 153 1 
167 1 84 1 120 1 143 1 311 1 132 1 198 1 56 1 364 1 330 1 88 1 276 2 31 1 240 1 58 1 148 1 153 1 
47 1 139 1 167 1 159 1 72 1 311 1 132 1 297 1 56 1 330 1 366 1 187 1 125 1 153 1 
47 1 230 1 167 1 84 1 120 1 143 1 311 1 132 1 198 1 56 1 364 1 330 1 88 1 276 2 31 1 58 1 148 1 153 1 
264 1 
251 1 190 1 167 1 362 1 122 1 311 1 233 3 5 1 6 1 174 1 56 1 146 1 366 1 34 1 348 1 59 1 266 2 126 1 320 1 288 1 181 3 159 1 290 2 292 1 132 1 328 1 62 2 87 2 330 1 358 1 187 1 20 2 
158 1 267 1 191 1 372 2 371 4 142 2 361 1 14 2 51 2 258 1 78 2 164 1 103 1 147 4 304 1 
127 1 361 1 14 1 51 1 147 1 227 1 319 1 
22 1 360 1 307 1 191 1 361 1 232 1 51 1 258 1 78 1 238 1 124 1 147 2 158 1 267 1 371 1 14 1 115 1 
282 2 191 4 142 6 232 5 51 8 196 2 145 1 56 3 238 5 103 2 346 2 147 8 106 1 10 2 158 4 60 2 14 2 206 1 245 2 159 3 291 1 293 2 17 2 115 3 304 1 66 2 251 3 167 3 361 9 258 4 311 3 74 2 259 2 75 2 176 2 78 6 366 10 124 5 368 1 127 1 267 4 372 6 371 12 268 3 271 1 41 1 131 2 132 3 329 2 330 4 90 2 227 1 187 1 91 2 
229 1 282 2 118 1 191 2 142 5 361 8 170 1 232 1 1 1 51 5 258 2 196 1 176 2 78 3 238 1 103 1 124 1 147 5 158 2 267 2 371 6 372 5 245 2 14 2 129 1 324 1 131 2 293 2 61 1 296 1 115 1 117 1 210 1 304 1 91 2 
190 1 191 1 361 2 337 1 51 2 258 1 216 1 196 1 233 1 341 1 28 1 238 1 8 1 124 1 149 1 266 1 128 1 158 1 267 1 181 1 245 2 290 1 293 1 43 1 62 1 380 1 91 2 20 1 
127 1 158 1 267 1 191 1 361 1 14 1 51 1 258 1 147 1 227 1 
282 2 372 5 142 5 371 10 361 5 245 2 51 5 196 1 131 2 293 2 176 2 78 5 147 5 66 1 91 2 
115 1 238 1 232 1 14 1 124 1 147 1 
0 1 213 1 191 2 167 4 361 2 255 1 232 4 51 2 258 2 72 1 311 4 261 1 56 1 238 3 366 1 103 2 124 3 80 1 106 2 158 1 267 2 159 1 291 1 132 4 297 1 115 2 330 1 187 2 304 2 
272 1 336 1 275 1 
272 1 336 1 275 1 
166 1 114 1 283 1 336 1 275 1 
272 1 336 1 275 1 
336 1 275 1 256 1 
336 1 275 1 256 1 
336 1 275 1 256 1 
336 1 275 1 
99 1 382 1 
50 1 141 1 95 4 337 1 245 1 40 2 122 2 293 1 292 2 5 4 374 3 328 2 377 1 344 1 164 1 146 8 87 4 380 1 358 2 149 1 
337 1 95 3 245 1 40 2 293 1 5 3 374 2 377 1 344 1 164 1 146 6 380 1 319 1 149 1 
282 1 189 1 50 1 95 2 245 1 40 1 122 1 293 1 292 1 131 1 5 2 176 1 374 2 328 1 146 4 87 2 358 1 
282 1 50 1 1 1 95 3 13 1 245 1 40 1 293 1 131 1 5 4 176 1 374 2 296 2 146 7 117 1 
282 2 50 4 141 2 337 2 95 11 52 1 122 2 5 12 176 2 344 1 146 23 219 1 149 1 13 1 245 3 353 1 40 5 131 2 293 3 292 2 374 9 328 2 296 2 377 1 164 1 117 2 87 4 380 2 358 2 
5 1 296 1 146 1 
146 1 95 1 117 1 
282 1 189 1 50 1 95 3 245 1 40 2 122 1 292 1 131 1 293 1 5 3 176 1 374 3 328 1 146 6 87 2 358 1 66 1 
229 1 282 2 118 1 50 1 1 1 95 6 170 1 122 1 5 6 176 2 146 12 365 1 245 2 129 1 40 1 292 1 131 2 293 2 374 2 328 1 296 1 117 1 87 2 210 1 358 1 
50 1 95 3 337 1 245 1 40 1 293 1 5 3 374 2 146 6 380 1 149 1 
50 1 141 1 95 1 337 1 40 1 122 1 292 1 5 2 374 2 328 1 377 1 344 1 146 3 219 1 87 2 380 1 358 1 
50 2 337 2 95 5 245 2 40 3 122 1 292 1 293 2 341 1 5 5 374 5 328 1 146 10 87 2 365 1 380 2 358 1 149 1 
50 1 95 2 245 1 122 1 292 1 131 1 374 1 328 1 146 2 365 1 87 2 358 1 
282 1 50 1 95 2 245 1 40 1 122 1 293 1 292 1 131 1 5 2 176 1 374 2 328 1 146 4 365 1 87 2 358 1 
141 1 214 1 50 1 337 1 95 1 40 1 122 3 292 3 5 2 374 2 328 3 146 3 219 1 365 1 87 6 380 1 358 3 
282 3 189 1 141 2 214 1 50 5 337 3 1 1 95 16 172 1 122 5 5 18 176 3 344 1 146 34 219 1 365 1 149 2 151 1 13 1 245 5 40 7 292 5 131 3 293 5 374 12 328 5 296 4 377 1 164 1 87 10 117 3 380 3 185 1 358 5 
229 1 1 1 95 4 337 1 122 1 5 4 344 1 146 8 365 1 149 1 245 1 40 2 293 1 292 1 374 2 328 1 296 1 377 1 164 1 117 1 87 2 380 1 358 1 
229 1 189 1 50 1 337 1 1 1 95 6 122 2 5 5 176 1 344 1 146 11 365 1 149 1 13 1 245 2 40 2 293 1 292 2 131 1 374 3 328 2 296 2 377 1 164 1 87 4 117 1 380 1 358 2 
229 1 282 2 189 1 118 1 50 1 141 1 337 1 170 1 1 1 95 9 122 3 5 10 176 2 344 1 146 19 365 1 149 1 245 3 129 1 40 3 292 3 131 2 293 3 374 4 328 3 296 1 377 1 164 1 117 1 87 6 210 1 380 1 358 3 
229 1 282 1 189 1 118 1 141 1 50 2 337 1 1 1 95 10 170 1 122 3 5 7 176 2 344 1 146 17 365 1 149 1 245 3 129 1 40 3 292 3 131 2 293 2 374 5 328 3 296 1 377 1 164 1 117 1 87 6 210 1 380 1 358 3 
229 1 1 1 95 4 337 1 122 1 5 4 344 1 146 8 365 1 149 1 245 1 40 2 293 1 292 1 374 2 328 1 296 1 377 1 164 1 117 1 87 2 380 1 358 1 
229 1 282 2 118 1 50 1 1 1 95 6 170 1 122 1 5 6 176 2 146 12 365 1 245 2 129 1 40 1 292 1 131 2 293 2 374 2 328 1 296 1 117 1 87 2 210 1 358 1 
229 1 282 1 189 1 118 1 50 2 141 2 337 1 170 1 1 1 95 10 122 4 5 8 176 2 344 1 146 18 365 1 149 1 245 3 129 1 40 3 292 4 131 2 293 2 374 5 328 4 296 1 377 1 164 1 87 8 117 1 210 1 380 1 358 4 
229 1 282 2 118 1 50 3 214 1 141 2 170 1 1 1 95 9 122 4 5 7 176 3 146 16 365 1 245 3 129 1 40 3 292 4 131 3 293 2 374 6 328 4 296 1 87 8 117 1 210 1 358 4 
50 3 337 3 95 3 245 1 40 3 293 1 5 4 374 6 377 2 344 1 146 7 380 3 149 1 
229 1 282 1 118 1 50 1 214 1 141 2 337 1 170 1 1 1 95 10 122 4 5 8 176 2 344 1 146 18 365 1 149 1 245 3 129 1 40 3 292 4 131 2 293 2 374 4 328 4 296 1 377 1 164 1 87 8 117 1 210 1 380 1 358 4 
168 1 181 1 288 1 85 1 233 1 236 1 217 1 8 1 20 1 
168 1 288 1 181 1 98 1 85 1 233 1 217 1 236 1 312 1 184 1 8 1 345 1 367 1 20 1 
132 1 297 1 167 1 56 1 330 1 366 1 159 1 72 1 187 1 319 1 311 1 
251 1 252 1 126 1 167 1 288 1 181 2 159 1 290 1 233 2 311 1 6 1 132 1 62 1 56 1 366 1 330 1 187 1 20 1 
252 1 251 2 167 1 311 1 233 2 74 1 6 1 217 1 56 1 366 3 8 2 106 1 126 1 288 1 181 2 60 1 159 2 224 1 290 1 132 1 62 2 330 1 332 1 20 2 
252 1 251 2 167 1 311 1 233 2 74 1 217 1 144 1 56 1 366 3 8 2 106 1 126 1 288 1 181 2 60 1 159 2 224 1 290 1 132 1 62 2 330 1 332 1 20 2 
251 1 36 1 167 3 268 1 60 1 232 1 14 1 159 1 309 1 74 1 311 3 132 3 77 1 56 1 329 1 238 2 330 1 366 4 124 2 147 1 106 1 90 1 187 1 
251 1 167 3 268 1 60 1 232 1 14 1 159 1 309 1 74 1 311 3 132 3 56 1 329 1 238 2 330 1 366 4 124 2 346 1 147 1 106 1 90 1 187 1 
132 1 167 1 56 1 300 1 330 1 311 1 
251 1 254 1 167 7 192 1 205 1 339 1 159 2 109 1 311 7 41 1 234 1 132 6 56 2 300 1 315 1 209 1 366 3 330 3 368 1 58 1 187 2 
138 1 337 1 95 3 2 1 233 2 5 3 6 1 56 1 344 1 146 6 201 1 348 1 59 2 149 1 288 2 245 1 159 1 290 1 292 2 293 1 62 1 164 1 358 2 20 1 252 1 251 1 167 1 122 2 24 1 311 1 174 1 366 1 368 1 320 2 126 1 181 2 269 1 40 2 133 1 132 1 374 2 328 2 377 1 87 4 330 1 380 1 379 1 
191 2 167 1 361 1 232 2 51 1 258 2 311 1 259 1 75 1 238 3 366 2 124 3 346 1 147 1 10 1 321 1 127 1 158 2 267 2 268 1 14 1 291 1 132 1 115 1 329 1 90 1 227 1 187 1 
251 1 167 2 159 1 311 2 271 1 41 1 132 2 56 1 300 1 366 2 330 2 368 1 90 1 
167 4 159 1 309 1 72 1 311 4 132 4 297 1 56 1 330 1 366 1 368 1 137 1 187 1 
251 1 370 1 167 2 97 1 159 1 311 2 132 2 56 1 315 1 209 1 366 1 330 2 106 1 81 1 
132 1 167 1 56 1 364 1 330 1 88 1 276 1 143 1 187 1 311 1 
132 2 167 2 56 1 192 1 330 1 366 1 159 1 368 1 58 1 333 1 311 2 
167 5 192 1 205 1 159 2 72 1 311 5 234 1 132 4 297 1 56 2 366 3 330 2 106 1 368 1 137 1 187 1 
167 5 192 1 205 1 159 2 72 1 311 5 132 4 297 1 273 1 56 2 366 3 330 2 106 1 368 1 137 1 187 1 
251 1 252 1 126 1 167 1 288 1 181 2 159 1 290 1 233 2 311 1 132 1 144 1 62 1 56 1 366 1 330 1 187 1 20 1 
251 1 254 1 167 1 159 1 311 1 41 1 132 1 56 1 315 1 209 1 366 1 330 2 106 1 
342 1 39 1 334 1 288 1 3 1 
190 1 334 1 3 1 216 1 233 1 342 1 218 1 238 2 8 2 102 1 124 2 147 1 266 1 321 1 128 1 39 1 223 1 181 1 14 1 224 1 290 1 43 1 62 1 226 1 329 1 302 1 332 1 20 1 
39 1 299 1 334 1 181 1 3 1 104 1 340 1 233 1 20 1 
226 1 3 1 102 1 
188 1 173 1 212 1 177 1 76 1 135 1 171 3 19 1 23 1 111 3 220 1 
188 1 253 1 162 1 263 1 
188 1 220 1 
188 1 135 1 220 1 319 1 
188 1 173 1 177 1 135 1 171 1 111 1 220 1 
7 1 354 1 111 1 
188 1 306 1 246 1 171 3 111 3 23 2 173 1 177 1 18 1 135 1 19 1 220 1 
188 1 173 1 262 1 177 1 76 1 135 1 171 2 111 2 220 1 
188 1 171 1 120 1 111 1 294 1 173 1 177 1 162 1 276 1 88 1 19 1 
188 1 173 1 177 1 171 1 19 1 111 1 220 1 
173 1 177 1 135 1 171 1 19 1 111 1 220 2 
242 1 188 1 171 2 111 2 16 1 247 1 173 2 177 2 19 1 220 1 
107 1 188 2 212 1 171 3 111 3 173 1 177 1 162 1 76 2 263 1 135 1 19 1 220 1 
188 1 84 1 171 2 160 1 120 1 111 2 173 1 177 1 76 1 135 1 364 1 276 2 88 1 19 1 220 1 
188 2 171 4 111 4 325 1 173 2 177 2 262 1 162 1 76 2 263 1 135 1 19 1 220 1 
188 1 173 1 177 1 135 1 171 1 19 1 111 1 220 1 
188 3 253 1 306 1 246 1 171 4 23 1 111 4 173 1 177 1 162 1 76 2 263 1 135 2 220 2 
188 1 244 1 171 2 111 2 173 1 177 1 113 1 76 1 54 1 135 1 19 1 220 1 
188 1 306 1 246 2 171 3 111 3 23 2 173 1 177 1 237 1 135 1 19 1 220 1 
188 2 27 2 373 1 280 1 
173 1 177 1 171 1 19 1 111 1 228 1 
188 1 173 1 212 1 177 1 76 1 135 1 171 2 19 1 111 2 220 1 
37 1 
188 1 173 1 177 1 135 1 171 1 19 1 111 1 220 1 

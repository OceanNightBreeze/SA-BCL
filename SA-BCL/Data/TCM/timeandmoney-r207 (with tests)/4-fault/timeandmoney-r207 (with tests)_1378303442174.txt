#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 122 125 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 6 158 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 6 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 6 158 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 6 158 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 174 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 1 0 1 192 1 264 1 346 1 242 1 334 1 203 2 223 2 59 3 325 3 300 1 21 2 
39 1 0 4 241 2 192 1 264 3 242 1 334 1 223 5 224 2 7 1 99 1 229 1 346 6 369 1 278 1 203 2 320 1 296 1 130 2 59 9 61 2 87 1 376 1 325 9 327 1 300 2 304 1 21 2 
39 1 0 4 241 2 192 1 264 3 242 1 334 1 223 5 224 2 7 1 99 1 229 1 346 6 369 1 278 1 203 2 320 1 296 1 130 2 59 9 61 2 87 1 376 1 325 9 327 1 300 2 304 1 21 2 
39 1 0 5 241 2 192 1 264 4 242 1 334 1 223 6 224 2 7 1 99 1 229 1 346 7 369 1 278 1 203 2 320 1 296 1 130 2 59 10 61 2 87 1 376 1 325 10 327 1 300 2 304 1 21 2 
39 1 0 3 241 2 192 1 264 2 242 1 334 1 223 4 224 2 7 1 99 1 229 1 346 4 278 1 203 2 320 1 296 1 130 2 59 7 61 1 87 1 376 1 325 7 327 1 300 2 304 1 21 2 
229 1 0 2 264 1 192 1 241 1 346 3 242 1 369 1 203 1 223 3 130 1 224 1 59 4 61 2 87 1 99 1 325 4 21 1 
229 1 39 1 192 1 242 1 333 1 203 1 223 1 130 1 296 1 224 1 59 2 173 1 375 1 325 2 300 1 21 1 
0 4 264 3 192 1 241 1 242 1 334 1 124 1 223 5 224 1 7 1 99 1 229 1 346 7 369 1 203 2 320 1 130 1 59 9 61 2 87 1 325 9 300 1 114 1 21 2 
0 4 264 3 192 1 241 1 242 1 334 1 124 1 223 5 224 1 7 1 99 1 229 1 346 7 369 1 203 2 320 1 130 1 59 9 61 2 87 1 325 9 300 1 114 1 21 2 
40 1 231 1 25 1 218 1 277 1 54 1 105 1 56 1 204 1 340 1 134 1 188 1 144 1 262 1 
81 1 
101 1 285 1 236 1 277 1 238 1 81 1 144 2 204 2 
40 1 216 1 191 2 285 1 355 2 25 1 218 1 221 1 308 1 340 1 49 1 366 1 144 5 101 1 102 1 231 1 312 2 277 2 256 1 316 1 54 1 56 1 105 1 81 1 318 1 204 5 32 4 372 1 324 1 134 1 188 1 91 4 238 2 166 1 112 1 262 1 
101 1 81 1 174 1 
276 2 243 1 81 1 
40 2 231 2 248 1 25 2 134 1 188 2 54 2 262 2 
64 1 40 3 189 1 25 2 67 1 43 1 336 1 309 1 26 1 363 1 248 1 71 1 364 1 197 1 227 1 200 2 343 1 291 1 176 1 231 3 151 2 313 1 103 2 54 2 279 2 259 1 321 1 295 2 207 1 108 1 88 1 134 1 211 1 188 2 262 2 136 1 20 1 
40 1 340 1 231 1 25 1 218 1 134 1 188 1 54 1 56 1 262 1 
40 1 101 1 65 1 231 1 177 1 23 1 170 1 54 1 287 1 81 1 204 1 297 1 340 1 144 1 
40 1 101 1 231 1 25 1 177 1 23 1 54 1 287 1 81 1 204 2 297 1 340 1 188 1 144 2 262 1 
345 1 277 1 238 1 144 1 204 1 
101 1 285 1 277 1 162 1 238 1 81 1 144 2 204 2 
238 1 144 1 204 1 
40 2 137 1 231 2 25 1 54 2 98 1 248 2 188 1 262 1 
332 1 356 1 351 1 
40 1 343 1 291 1 231 1 67 1 103 1 279 1 321 1 26 1 363 1 108 1 248 1 197 1 88 1 250 1 200 1 
248 1 174 1 
40 3 206 1 231 3 248 1 25 3 188 3 54 3 262 1 
40 1 340 1 231 1 25 1 218 1 188 1 54 1 
40 1 340 1 137 1 98 1 231 1 25 1 188 1 54 1 262 1 
64 1 40 4 189 1 25 3 23 1 67 1 43 1 287 1 309 1 26 1 340 1 363 1 98 1 248 1 71 1 271 1 197 1 364 1 227 1 144 1 200 1 343 1 291 1 127 1 231 4 151 1 177 1 313 1 103 1 54 3 279 1 321 1 204 1 295 2 206 1 297 1 108 1 88 1 134 1 211 1 188 3 326 1 262 2 20 1 
40 2 206 1 231 2 248 1 25 1 170 1 188 1 54 2 79 1 
40 3 231 3 25 3 177 1 23 1 78 1 54 3 287 1 81 1 204 1 297 1 206 2 340 1 98 1 271 1 188 3 326 1 262 1 144 1 
40 2 231 2 25 2 332 1 54 2 206 1 98 1 188 2 351 1 262 1 
40 1 343 1 291 1 231 1 67 1 103 1 279 1 321 1 26 1 108 1 363 1 248 1 197 1 88 1 200 1 
40 1 343 1 291 1 231 1 67 1 103 1 279 1 321 1 209 1 108 1 363 1 248 1 88 1 165 1 200 1 
64 1 189 1 191 1 355 1 332 2 356 2 43 1 335 1 245 1 309 2 342 1 151 4 313 1 317 1 319 1 183 1 295 2 260 1 322 1 133 1 211 1 351 2 136 2 20 1 
40 1 340 1 69 1 231 1 25 1 188 1 54 1 287 1 
343 1 40 2 291 1 231 2 332 1 25 1 67 1 103 1 54 1 279 1 321 1 206 1 26 1 363 1 108 1 88 1 197 1 188 1 326 1 200 1 
40 5 231 5 25 4 170 1 54 5 79 1 359 1 206 2 17 1 98 1 248 1 188 4 326 1 262 1 
40 2 340 1 69 1 231 2 25 2 218 1 188 2 54 2 
232 1 195 1 288 1 
205 1 47 1 261 1 232 2 135 1 288 2 
232 1 288 1 
232 1 288 1 
47 1 135 1 
47 1 135 1 
47 1 135 1 
232 1 74 1 288 1 
232 1 74 1 288 1 
232 1 74 1 288 1 
310 1 232 1 288 1 
310 1 232 1 288 1 
310 1 232 1 288 1 
38 2 275 2 120 1 154 2 315 1 232 2 157 1 182 1 81 1 244 1 280 2 288 2 204 2 205 1 58 3 282 1 167 2 144 2 303 1 
38 1 40 2 42 1 25 2 195 1 288 1 361 1 248 1 199 1 144 1 275 1 231 2 232 1 54 2 82 1 280 1 204 1 58 1 132 1 161 1 34 1 188 2 167 1 303 1 
130 2 241 1 375 1 187 1 126 2 
130 1 224 1 241 1 
130 1 224 1 375 1 
130 3 241 2 375 1 126 1 187 1 292 1 
130 2 241 1 140 1 375 1 126 1 187 1 
216 1 191 1 285 1 217 1 355 1 122 1 243 1 366 1 144 5 368 1 102 1 101 1 276 3 277 4 13 1 318 1 81 2 82 1 184 2 204 5 32 2 159 1 260 1 131 2 132 1 322 1 161 1 111 1 35 1 238 1 91 3 168 2 
40 1 193 1 25 1 218 1 340 1 144 2 101 1 345 1 231 1 150 1 277 2 257 1 54 1 81 1 105 1 56 1 204 2 134 1 188 1 238 1 262 1 
277 1 111 1 122 1 256 1 13 1 144 2 204 2 
111 1 122 1 256 1 13 1 125 1 144 1 204 1 
240 1 
363 1 155 1 174 1 
363 1 253 1 
363 1 108 1 
239 1 363 3 108 1 95 1 155 2 88 1 
363 1 108 1 88 1 
363 1 272 1 
118 1 191 1 355 1 151 7 3 1 316 1 221 1 245 2 294 2 46 1 309 3 362 1 225 1 49 1 365 1 36 1 342 3 136 4 
328 4 189 1 118 2 191 4 217 3 355 4 3 1 221 2 245 5 309 15 172 1 362 1 225 1 269 1 70 1 49 1 72 3 365 5 342 10 10 1 290 1 151 31 11 1 313 1 316 2 294 3 295 2 260 3 322 3 323 1 36 2 211 1 20 1 136 16 
263 1 118 1 189 2 191 1 355 1 151 9 313 2 316 1 221 1 245 3 294 2 295 4 309 4 362 1 225 1 49 1 323 1 365 1 36 1 211 2 342 4 113 1 136 5 20 2 
118 1 191 1 355 1 151 7 3 1 316 1 221 1 245 2 294 2 309 3 225 1 362 1 49 1 365 1 36 1 342 3 136 4 
118 1 191 1 355 1 151 7 3 1 316 1 221 1 245 2 294 2 309 3 225 1 362 1 49 1 365 1 36 1 342 3 136 4 
254 1 291 1 175 1 67 1 30 1 103 1 203 1 279 1 97 2 321 1 57 2 59 1 348 1 363 1 108 1 210 2 373 1 325 1 8 1 300 2 200 1 75 1 21 1 
116 1 2 1 241 1 192 1 357 1 97 1 224 1 200 1 291 1 152 1 103 1 203 1 279 1 80 1 292 1 321 1 57 1 130 2 59 1 210 1 375 1 325 1 213 1 19 1 300 1 21 1 
116 1 2 1 241 1 192 1 242 1 357 1 97 1 223 1 360 1 224 1 200 1 229 1 291 1 346 1 103 1 203 1 279 1 80 1 292 1 321 1 57 1 130 2 59 2 210 1 375 1 325 2 213 1 19 1 300 1 21 1 
116 1 2 1 241 1 242 1 357 1 97 1 223 1 224 1 247 1 200 1 75 1 229 1 291 1 346 2 152 1 103 1 203 1 279 1 292 1 321 1 57 1 130 2 59 3 210 1 375 1 325 3 213 1 19 1 300 1 21 1 
116 1 241 1 242 1 357 1 97 1 223 1 247 1 224 1 200 1 229 1 291 1 346 2 152 1 103 1 279 1 292 1 321 1 57 1 130 2 59 2 210 1 375 1 325 2 19 1 300 1 
265 1 
40 1 285 3 190 1 331 1 243 2 287 1 44 2 340 1 341 1 8 1 144 5 200 2 254 1 101 1 102 1 291 1 103 2 156 1 54 1 55 2 204 5 297 1 14 2 159 1 108 1 109 1 299 2 301 1 216 1 117 1 353 4 66 1 65 1 305 1 354 1 23 1 67 2 307 2 170 1 123 2 171 1 363 1 366 1 28 1 231 1 177 1 276 2 279 2 81 2 318 1 321 1 32 2 374 2 238 6 91 2 
40 1 117 1 353 2 331 1 285 1 65 1 23 1 307 1 170 1 287 1 340 1 144 3 28 1 231 1 177 1 54 1 156 1 204 3 297 1 236 1 109 1 238 2 
40 1 117 1 353 3 331 1 285 1 65 1 23 1 170 1 287 1 340 1 144 3 28 1 101 1 231 1 177 1 54 1 156 1 81 1 204 3 297 1 236 1 109 1 374 1 238 1 
40 1 117 1 353 3 285 1 331 1 65 1 23 1 307 1 170 1 287 1 44 1 340 1 144 3 28 1 101 1 231 1 177 1 54 1 156 1 81 1 204 3 297 1 236 1 109 1 374 1 238 2 
40 1 117 1 353 2 331 1 285 1 330 1 65 1 23 1 307 2 170 1 287 1 44 2 6 1 340 1 144 3 28 1 231 1 177 1 158 1 54 1 156 1 204 3 297 1 236 1 109 1 238 3 
40 1 331 1 285 2 243 2 287 1 44 2 340 1 144 4 102 1 101 1 54 1 156 1 55 2 204 4 297 1 14 2 109 1 299 2 117 1 216 1 353 4 65 1 66 1 354 1 23 1 307 2 170 1 123 2 171 1 366 1 28 1 231 1 177 1 276 2 318 1 81 2 32 1 374 2 91 1 238 4 
117 1 40 1 353 2 28 1 331 1 65 1 231 1 23 1 177 1 170 1 156 1 54 1 287 1 6 1 204 2 297 1 340 1 109 1 144 2 
117 1 40 1 353 2 28 1 331 1 65 1 231 1 23 1 177 1 170 1 156 1 54 1 287 1 6 1 204 2 297 1 340 1 109 1 144 2 
40 1 117 1 216 1 353 4 285 2 331 1 65 1 23 1 24 1 307 2 170 1 287 1 44 2 171 1 340 1 366 1 144 4 101 1 102 1 28 1 311 2 231 1 177 1 276 2 54 1 156 1 81 1 318 1 204 4 32 1 84 1 297 1 14 2 109 1 374 2 299 2 160 1 89 2 238 4 91 1 62 1 
117 1 40 1 353 3 28 1 331 1 65 1 231 1 23 1 177 1 307 1 170 1 158 1 156 1 54 1 287 1 44 1 6 1 204 2 297 1 340 1 109 1 374 1 238 1 144 2 
117 1 40 1 353 3 28 1 331 1 65 1 231 1 23 1 177 1 307 1 170 1 158 1 156 1 54 1 287 1 44 1 6 1 204 2 297 1 340 1 109 1 374 1 238 1 144 2 
40 1 331 1 285 2 287 1 44 2 340 1 144 4 102 1 101 1 54 1 156 1 204 4 297 1 14 2 109 1 299 2 117 1 216 1 353 4 65 1 66 1 23 1 307 2 170 1 171 1 366 1 28 1 311 2 231 1 177 1 276 2 318 1 81 1 84 1 32 1 374 2 89 2 91 1 238 4 
40 1 64 2 189 2 25 1 67 2 43 2 360 1 339 1 309 1 363 3 71 1 226 1 8 1 200 8 50 1 100 1 254 1 291 2 344 1 231 1 176 1 151 2 152 1 103 7 313 2 54 1 279 8 259 2 183 1 321 2 129 1 295 4 206 1 108 2 188 1 211 2 302 1 20 2 136 1 
64 1 40 1 189 1 191 1 217 1 355 1 332 1 25 1 356 1 43 1 245 1 309 2 98 1 342 1 52 1 231 1 151 3 313 1 54 1 295 2 260 1 322 1 188 1 211 1 351 1 63 1 262 1 20 1 136 1 
64 1 189 1 191 1 355 1 332 1 356 1 43 1 221 1 245 2 309 3 362 1 225 1 49 1 248 2 342 2 174 1 151 6 313 1 316 1 183 1 294 1 295 2 211 1 351 1 20 1 136 3 
328 3 64 2 169 1 189 2 191 1 217 2 355 2 332 11 356 11 43 1 245 1 45 1 309 6 269 1 248 1 71 1 72 3 365 1 342 2 290 1 176 1 151 14 313 2 106 1 295 4 260 1 60 1 322 2 211 2 351 4 63 1 20 2 136 8 
64 1 40 2 189 1 25 1 67 1 43 1 309 1 26 1 363 1 248 1 141 1 71 1 197 1 250 1 200 1 343 1 291 1 230 1 231 2 176 1 151 2 103 1 233 1 313 1 279 1 54 1 321 1 295 2 206 1 108 1 88 1 211 1 188 1 351 1 326 1 63 1 20 1 136 1 
40 3 189 3 93 2 191 3 332 7 43 3 4 2 245 4 48 2 139 1 196 1 248 2 49 1 197 2 342 8 200 3 343 2 291 2 151 20 152 1 103 3 54 1 294 1 295 6 206 1 260 2 108 2 211 3 351 7 63 1 20 3 64 3 217 2 306 1 355 3 25 1 67 1 356 7 221 1 358 2 309 10 362 1 225 1 26 2 363 2 71 1 364 2 365 4 176 1 231 3 313 3 316 1 279 3 321 2 322 2 88 2 188 1 326 1 136 10 
64 1 189 1 355 1 332 1 151 2 356 1 43 1 313 1 317 1 183 1 295 2 322 1 365 1 211 1 351 1 342 1 20 1 136 2 
64 1 189 1 191 1 332 1 151 2 356 1 43 1 313 1 245 1 183 1 295 2 309 2 260 1 133 1 211 1 351 1 342 1 20 1 
64 1 189 1 191 1 217 1 355 1 332 2 356 2 43 1 245 1 309 2 365 1 342 2 151 4 313 1 183 1 295 2 260 1 322 1 211 1 351 2 136 2 20 1 
64 1 189 1 355 1 332 1 151 2 356 1 43 1 313 1 317 1 295 2 322 1 365 1 211 1 351 1 342 1 100 1 20 1 136 2 
64 1 189 1 191 1 332 1 151 2 356 1 43 1 313 1 245 1 295 2 309 2 260 1 133 1 211 1 351 1 342 1 100 1 20 1 
64 1 189 1 191 1 217 1 355 1 332 2 356 2 43 1 245 1 309 2 365 1 342 2 100 1 151 4 313 1 295 2 260 1 322 1 211 1 351 2 136 2 20 1 
64 1 189 1 191 1 217 1 355 1 332 2 151 4 356 2 43 1 313 1 245 1 295 2 309 2 260 1 322 1 365 1 211 1 351 2 342 2 20 1 136 2 
40 1 64 1 189 1 67 1 43 1 309 1 26 1 363 1 248 1 71 1 197 1 364 1 200 1 343 1 291 1 176 1 231 1 151 2 103 1 313 1 279 1 321 1 295 2 108 1 88 1 211 1 136 1 20 1 
40 1 64 1 189 1 67 1 43 1 309 1 363 1 248 1 71 1 200 1 343 1 291 1 176 1 231 1 151 2 103 1 313 1 179 1 279 1 321 1 295 2 108 1 209 1 88 1 211 1 165 1 136 1 20 1 
64 1 189 1 191 1 217 1 355 1 332 2 356 2 43 1 245 1 309 2 365 1 342 2 151 4 313 1 295 2 260 1 322 1 211 1 351 2 63 1 136 2 20 1 
40 1 64 1 189 1 191 1 217 1 355 1 332 2 356 2 43 1 4 1 245 1 360 1 309 2 26 1 363 1 197 1 364 1 365 1 342 2 200 1 343 1 291 1 231 1 151 4 103 1 313 1 279 1 321 1 295 2 260 1 108 1 322 1 88 1 211 1 351 2 136 2 20 1 
64 1 40 1 189 1 191 1 217 1 355 1 25 1 332 1 356 1 43 1 309 1 98 1 365 1 342 1 148 1 231 1 151 3 313 1 54 1 295 2 260 1 322 1 188 1 211 1 351 1 63 1 262 1 20 1 136 2 
328 2 263 1 329 1 189 2 191 3 217 3 355 3 245 3 309 10 269 1 270 1 72 1 73 2 143 1 365 3 342 6 290 1 151 19 313 2 295 4 85 1 208 1 260 3 281 2 322 3 163 1 211 2 215 1 20 2 136 9 
263 1 328 2 329 1 189 3 191 2 217 3 355 3 245 2 309 12 269 2 72 2 73 1 365 2 143 2 342 4 367 1 151 26 313 3 31 1 104 1 295 6 235 1 16 1 208 1 260 2 323 2 281 4 322 3 163 2 211 3 215 1 20 3 136 14 92 1 
284 1 328 4 263 1 329 1 189 3 191 5 217 4 355 5 221 1 245 4 309 21 362 1 225 1 269 3 49 1 72 3 73 1 143 1 365 4 342 8 367 1 290 1 151 41 313 3 316 1 31 1 104 1 294 1 295 6 235 1 85 1 16 1 208 1 260 4 323 1 281 4 322 4 163 2 211 3 215 1 92 1 20 3 136 20 
284 1 328 4 263 1 329 1 189 4 191 4 217 4 355 5 221 1 245 4 309 18 362 1 225 1 269 3 49 1 72 3 73 1 143 1 365 3 342 7 367 1 290 1 151 38 313 4 316 1 31 1 104 1 294 1 295 8 235 1 85 1 16 1 208 1 260 3 323 2 281 4 322 4 163 2 211 4 215 1 92 1 20 4 136 20 
328 4 263 1 329 1 189 2 191 8 217 7 355 8 221 1 245 7 309 25 362 1 225 1 269 2 49 1 72 4 73 1 143 1 365 7 342 14 367 1 290 2 151 52 313 2 316 1 31 1 104 1 294 1 106 2 295 4 235 1 16 1 208 1 260 7 323 1 281 4 322 7 163 1 211 2 215 1 92 1 20 2 136 27 
205 1 38 1 275 1 120 1 232 1 157 1 167 1 337 1 288 1 280 1 
42 1 195 1 
38 1 275 1 149 1 232 1 198 1 350 1 167 1 288 1 280 1 
38 1 275 1 120 1 154 1 232 1 157 1 182 1 81 1 244 1 204 1 280 1 288 1 205 1 58 2 282 1 167 1 144 1 303 1 
38 1 275 1 120 1 154 1 232 1 157 1 182 1 81 1 244 1 204 1 280 1 288 1 205 1 58 2 282 1 167 1 144 1 303 1 
38 1 275 1 120 1 154 1 232 1 157 1 182 1 81 1 244 1 204 1 280 1 288 1 205 1 58 2 282 1 167 1 144 1 303 1 
261 1 74 1 180 1 
261 1 74 1 180 1 
310 1 252 1 
261 1 310 1 252 1 
361 1 34 1 
40 2 38 1 42 1 25 2 220 1 195 1 288 1 361 1 248 1 199 1 144 1 275 1 231 2 154 1 277 1 232 1 54 2 82 1 204 1 280 1 58 1 132 1 282 1 161 1 34 1 188 2 167 1 
74 1 180 1 
261 1 310 1 252 1 
64 1 40 2 189 1 43 1 309 1 363 1 71 1 200 2 50 1 273 1 291 1 344 1 231 2 176 1 151 2 178 1 128 1 12 1 313 1 103 2 279 2 54 2 259 2 321 1 295 2 108 1 186 1 211 1 63 1 20 1 136 1 
254 1 291 1 194 1 67 1 103 1 202 1 279 1 97 1 321 1 363 1 108 1 373 1 8 1 200 1 
116 1 291 1 241 1 194 1 152 1 103 1 279 1 97 1 292 1 321 1 293 1 130 2 224 1 138 1 375 1 213 1 19 1 200 1 
116 1 291 1 241 1 194 1 152 1 103 2 279 2 97 1 292 1 321 1 293 1 130 2 360 1 224 1 138 1 375 1 213 1 19 1 200 2 
116 1 291 1 241 1 147 1 152 1 103 1 279 1 97 1 292 1 321 1 293 1 130 2 224 1 375 1 213 1 19 1 200 1 
255 1 
216 1 102 1 366 1 318 1 
101 1 285 1 238 1 81 1 144 1 204 1 
216 1 190 1 285 1 67 2 363 1 341 1 8 1 366 1 200 2 144 2 254 1 102 1 291 1 103 2 256 1 279 2 318 1 321 1 204 2 32 1 159 1 108 1 349 1 91 1 238 2 301 1 
174 1 
216 1 101 1 102 1 285 1 354 1 276 1 243 1 55 1 81 2 318 1 123 1 204 1 32 1 238 1 91 1 366 1 144 1 
190 1 285 3 191 2 95 1 243 6 246 1 253 3 200 3 289 2 144 5 101 2 102 4 291 3 201 1 153 2 155 2 103 3 204 5 297 2 159 2 260 2 108 3 349 1 164 2 115 1 216 4 217 2 355 2 22 2 121 1 67 1 358 2 308 2 360 1 363 10 366 4 272 2 274 2 312 2 276 12 314 2 279 3 318 4 81 8 321 4 184 6 32 8 131 6 185 1 322 2 88 3 37 1 91 9 238 5 
328 1 216 2 190 1 285 1 191 2 217 2 355 2 243 3 222 1 308 1 269 1 72 1 366 2 144 1 102 2 101 2 312 2 276 6 31 1 104 1 181 1 318 2 81 5 204 1 184 5 32 5 235 1 159 1 16 1 131 5 260 2 322 2 238 1 91 8 92 1 
40 1 216 1 191 1 355 2 25 1 218 1 221 1 308 1 340 1 49 1 366 1 144 1 102 1 231 1 312 2 316 1 54 1 318 1 105 1 56 1 204 1 32 2 372 1 18 1 134 1 188 1 91 2 262 1 
40 3 64 1 189 1 25 2 67 1 43 1 309 1 26 1 363 1 248 1 71 1 364 1 197 1 227 1 200 1 343 1 291 1 231 3 151 1 313 1 103 1 279 1 54 2 321 1 295 2 108 1 134 1 88 1 188 2 211 1 262 2 20 1 
216 1 102 1 101 2 190 1 276 4 243 2 318 1 81 4 294 1 184 2 32 2 159 1 131 2 91 1 366 1 
38 1 120 1 249 1 34 1 167 1 
38 1 370 1 167 1 
38 1 370 1 167 1 
38 1 370 1 167 1 
38 1 267 1 167 1 
38 1 267 1 167 1 
38 1 267 1 167 1 
38 1 167 1 
232 1 288 1 
263 1 189 1 191 2 355 2 151 10 313 1 316 2 221 2 245 3 295 2 372 1 309 5 49 1 365 2 211 1 342 5 20 1 136 5 
263 1 189 1 355 1 151 2 313 1 295 2 322 1 365 1 211 1 342 1 20 1 136 2 
263 1 189 1 191 1 217 1 355 1 151 4 313 1 245 1 295 2 309 2 260 1 322 1 365 1 211 1 342 2 20 1 136 2 
263 1 189 3 76 1 151 3 313 3 316 1 221 1 245 1 295 6 309 2 85 1 323 1 365 1 211 3 342 2 20 3 136 1 
328 4 263 1 189 5 191 5 217 3 355 5 221 3 245 7 309 18 172 1 362 1 225 1 269 1 49 2 72 3 365 5 342 12 145 1 10 1 290 1 76 1 151 34 11 1 313 5 316 3 294 1 295 10 85 1 260 3 323 2 322 3 211 5 20 5 136 16 
328 1 263 1 189 1 191 1 355 1 221 1 245 2 309 4 225 1 362 1 269 1 49 1 72 1 342 2 151 8 313 1 316 1 294 1 295 2 211 1 92 1 20 1 136 4 
328 2 263 1 189 2 191 1 217 1 355 2 221 1 245 2 309 5 362 1 225 1 269 1 49 1 72 1 365 1 342 3 145 1 290 1 151 11 313 2 316 1 294 1 295 4 322 1 211 2 92 1 20 2 136 6 
328 1 263 1 189 3 191 3 217 2 355 3 221 1 245 3 309 10 362 1 225 1 269 1 49 1 72 1 365 1 342 4 145 1 151 19 313 3 316 1 31 1 104 1 294 1 295 6 235 1 16 1 260 2 322 2 323 1 211 3 92 1 20 3 136 9 
328 1 263 1 189 3 191 2 217 2 355 3 221 1 245 3 309 7 362 1 225 1 269 1 49 1 72 1 365 2 342 5 145 1 151 17 313 3 316 1 31 1 104 1 294 1 295 6 235 1 260 1 16 1 323 1 322 2 211 3 92 1 20 3 136 10 
328 1 263 1 189 1 191 1 355 1 221 1 245 2 309 4 225 1 362 1 269 1 49 1 72 1 342 2 151 8 313 1 316 1 294 1 295 2 211 1 92 1 20 1 136 4 
328 1 263 1 189 1 191 2 217 2 355 2 245 1 309 6 269 1 72 1 365 1 342 2 151 12 313 1 31 1 104 1 295 2 235 1 260 2 16 1 322 2 211 1 92 1 20 1 136 6 
328 1 263 1 189 4 191 2 217 2 355 3 221 1 245 3 309 8 362 1 225 1 269 1 49 1 72 1 365 2 342 5 145 1 151 18 313 4 316 1 31 1 104 1 294 1 295 8 235 1 16 1 260 1 322 2 323 2 211 4 92 1 20 4 136 10 
328 1 263 1 189 4 191 2 217 3 355 3 245 3 309 7 269 1 72 1 365 3 342 6 151 16 313 4 31 1 104 1 295 8 235 1 16 1 85 1 260 2 322 3 323 2 211 4 92 1 20 4 136 9 
191 1 355 1 151 7 316 3 221 3 245 3 309 4 225 1 362 2 49 1 365 3 342 6 136 3 
328 1 263 1 189 4 191 2 217 2 355 3 221 1 245 3 309 8 362 1 225 1 269 1 49 1 72 1 365 1 342 4 151 18 313 4 316 1 31 1 104 1 294 1 295 8 235 1 16 1 85 1 260 1 322 2 323 2 211 4 92 1 20 4 136 10 
189 2 191 1 355 1 151 8 313 2 316 1 221 1 245 2 294 1 295 4 309 4 225 1 362 1 49 1 323 1 365 1 211 2 342 3 136 4 20 2 
191 1 355 1 151 6 316 1 221 1 245 2 294 1 309 3 225 1 362 1 49 1 342 2 174 1 136 3 
189 1 191 1 217 1 355 1 151 4 313 1 245 1 295 2 309 2 260 1 322 1 365 1 211 1 342 2 145 1 20 1 136 2 
328 2 290 1 191 1 217 1 355 1 151 7 245 1 309 4 260 1 269 1 322 1 72 1 365 1 342 2 136 3 
328 2 169 1 189 2 191 3 217 2 355 3 221 2 245 5 309 12 362 1 225 1 49 1 72 2 365 4 342 9 290 1 76 1 151 23 313 2 316 2 294 1 106 1 295 4 260 2 322 2 323 2 211 2 136 11 20 2 
328 1 309 1 151 1 
151 1 72 1 136 1 
189 1 191 1 217 1 355 1 151 6 313 1 358 1 245 2 295 2 309 3 260 1 322 1 365 1 211 1 342 3 20 1 145 1 136 3 
328 1 263 1 189 1 191 2 217 2 355 2 245 1 309 6 269 1 72 1 365 1 342 2 151 12 313 1 31 1 104 1 295 2 235 1 260 2 16 1 322 2 211 1 92 1 20 1 136 6 
191 1 355 1 151 6 316 1 221 1 245 1 309 3 49 1 365 1 342 2 136 3 
189 1 76 1 151 3 313 1 316 1 221 1 245 1 295 2 309 2 362 1 225 1 323 1 365 1 211 1 342 2 136 1 20 1 
40 1 33 1 231 1 248 1 170 1 54 1 79 1 
40 1 119 1 231 1 29 1 170 1 54 1 79 1 268 1 33 1 248 1 142 1 283 1 
254 1 291 1 67 1 103 4 279 4 321 1 360 1 298 1 108 1 363 1 8 1 214 1 200 4 
291 1 51 1 103 2 279 2 321 2 246 1 237 1 108 1 363 1 139 1 86 1 88 1 200 2 27 1 
130 1 224 1 291 1 375 1 67 1 103 1 19 1 279 1 321 1 200 1 
291 1 344 1 152 1 128 1 103 2 279 2 321 1 360 1 108 1 363 1 200 2 
254 1 291 2 344 1 67 1 103 4 279 5 321 2 246 1 360 1 339 1 108 2 363 3 8 1 214 1 302 1 200 5 
254 1 291 2 344 1 67 1 103 4 279 5 321 2 246 1 83 1 360 1 108 2 363 3 8 1 214 1 302 1 200 5 
254 1 291 1 363 1 108 1 67 1 103 1 279 1 8 1 321 1 200 1 174 1 
343 1 40 2 291 1 231 2 25 1 67 1 103 1 54 1 279 1 321 1 206 1 363 1 108 1 248 1 88 1 197 1 188 1 200 1 
343 1 40 2 291 1 231 2 23 1 25 2 314 1 103 1 54 2 279 1 287 1 321 1 246 1 206 1 340 1 363 3 108 2 248 1 88 2 197 1 188 1 272 1 200 1 
40 2 25 2 23 1 287 1 246 1 340 1 363 3 248 1 272 1 200 2 343 1 291 1 231 2 103 2 314 1 279 2 54 2 321 1 206 1 298 1 209 1 108 2 88 2 188 1 
67 1 246 1 363 4 253 1 272 1 200 3 144 2 101 1 291 1 155 1 77 1 103 3 314 1 279 3 81 1 321 1 347 1 204 2 297 1 298 1 108 1 88 1 238 1 
101 1 291 1 67 1 153 1 155 1 314 1 103 3 279 3 81 1 321 1 204 2 246 1 297 1 298 1 108 1 363 4 88 1 238 1 272 1 253 1 144 2 200 3 
291 1 103 1 279 1 321 1 200 1 129 1 
9 1 291 2 344 1 51 1 95 1 152 1 67 2 103 6 279 7 259 1 321 3 129 1 360 1 339 1 237 1 108 2 363 3 226 1 88 1 302 1 200 7 
64 2 40 2 189 2 191 1 355 1 332 1 25 1 356 1 43 2 221 1 4 1 245 2 360 1 309 3 362 1 225 1 48 1 26 1 363 1 248 2 49 1 364 1 197 1 342 2 200 1 343 1 291 1 231 2 151 6 178 1 313 2 103 1 316 1 54 1 279 1 321 1 294 1 295 4 206 1 108 1 88 1 211 2 188 1 351 1 63 1 136 3 20 2 
216 2 285 1 22 1 67 1 363 2 366 2 253 1 144 3 200 1 289 1 101 1 102 2 201 1 277 1 153 1 155 1 103 1 279 1 81 1 318 2 204 3 32 1 297 1 185 1 349 1 91 1 164 1 238 2 
291 1 95 1 155 1 103 2 279 2 321 2 129 1 360 1 108 1 363 2 88 1 37 1 200 2 
343 1 40 2 291 1 231 2 25 1 67 1 103 1 54 1 279 1 321 1 206 1 363 1 108 1 209 1 248 1 88 1 188 1 200 1 
9 1 291 1 51 1 95 1 103 1 279 1 321 2 246 1 237 1 108 1 363 1 88 1 200 1 
41 1 1 1 248 1 228 1 68 1 
101 1 1 2 41 2 23 1 177 1 277 1 96 1 287 1 68 2 81 1 5 1 204 2 297 1 340 1 248 1 271 1 228 1 212 1 144 2 
273 1 40 1 1 1 231 1 12 1 54 1 68 1 186 1 228 1 
212 1 228 1 5 1 
229 1 59 1 192 1 242 1 325 1 203 1 223 1 21 1 
39 1 229 2 0 1 264 1 94 1 346 2 242 2 203 1 338 1 223 3 59 4 325 4 352 1 21 1 
229 1 192 1 346 1 242 1 203 1 53 1 223 1 59 2 110 1 325 2 114 1 21 1 
229 1 39 2 59 3 192 1 94 2 242 1 90 1 325 3 203 1 352 1 223 1 21 1 
266 2 15 1 219 1 223 2 
146 1 59 1 192 1 325 1 203 1 21 1 
229 1 59 2 192 1 346 1 242 1 325 2 203 1 320 1 223 1 21 1 
258 1 
229 1 59 1 192 1 242 1 325 1 203 1 223 1 21 1 
229 1 242 1 223 1 174 1 
229 1 59 1 242 1 325 1 203 1 223 1 21 1 
59 1 210 1 300 1 
229 1 39 2 59 3 192 1 286 1 94 1 242 1 325 3 203 1 352 1 223 1 21 1 
229 1 59 2 346 1 242 1 61 1 325 2 203 1 223 1 21 1 
0 1 192 1 241 1 203 1 223 1 130 1 224 1 59 1 99 1 325 1 21 1 
59 1 192 1 242 1 325 1 203 1 223 1 21 1 
229 1 59 1 192 1 242 2 325 1 203 1 21 1 
107 1 59 2 192 1 242 1 325 2 203 2 251 1 223 1 21 2 234 1 
229 1 0 1 192 1 264 1 346 2 242 1 203 1 320 1 223 2 59 3 7 1 325 3 21 1 
229 1 192 1 241 1 346 1 242 1 203 1 292 1 223 1 371 1 130 2 224 1 59 2 375 1 325 2 21 1 
229 1 0 1 192 1 264 1 346 2 242 1 369 1 203 2 223 2 59 4 61 1 325 4 21 2 
229 1 39 1 59 3 192 1 346 1 242 1 325 3 203 1 320 1 223 1 21 1 
0 1 264 1 338 1 223 1 
242 1 223 1 

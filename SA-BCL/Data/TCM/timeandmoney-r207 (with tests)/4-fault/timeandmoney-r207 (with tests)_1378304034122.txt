#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
18 1 0 1 193 1 170 1 245 5 177 1 127 2 128 2 293 2 28 1 183 1 203 1 227 1 11 1 35 4 280 9 342 1 83 3 367 1 65 2 159 2 258 2 113 2 69 1 163 1 284 9 190 6 191 1 
18 1 0 1 193 1 170 1 245 5 177 1 127 2 128 2 293 2 28 1 183 1 203 1 227 1 11 1 35 4 280 9 342 1 83 3 367 1 65 2 159 2 258 2 113 2 69 1 163 1 284 9 190 6 191 1 
18 1 0 1 193 1 170 1 245 6 177 1 127 2 128 2 293 2 28 1 183 1 203 1 227 1 11 1 35 5 280 10 342 1 83 4 367 1 65 2 159 2 258 2 113 2 69 1 163 1 284 10 190 7 191 1 
18 1 0 1 193 1 170 1 245 4 177 1 127 2 128 2 293 2 28 1 183 1 203 1 227 1 11 1 35 3 280 7 342 1 83 2 367 1 65 2 159 2 258 2 113 1 163 1 284 7 190 4 191 1 
18 1 227 1 193 1 11 1 35 2 280 4 245 3 83 1 65 1 258 1 113 2 127 1 69 1 128 1 293 1 284 4 190 3 191 1 
193 1 170 1 11 1 140 1 280 2 288 1 245 1 342 1 65 1 143 1 159 1 258 1 128 1 284 2 293 1 191 1 
193 1 11 1 35 1 280 3 245 2 83 1 367 1 65 2 159 1 258 2 284 3 190 1 191 1 
18 1 203 1 227 1 193 1 11 1 35 4 280 9 195 1 287 1 245 5 83 3 367 1 65 2 159 1 258 2 177 1 127 1 113 2 69 1 128 1 293 1 284 9 190 7 191 1 
18 1 203 1 227 1 193 1 11 1 35 4 280 9 195 1 287 1 245 5 83 3 367 1 65 2 159 1 258 2 177 1 127 1 113 2 69 1 128 1 293 1 284 9 190 7 191 1 
45 1 312 1 255 1 
186 1 366 2 45 1 
212 2 102 2 184 2 3 1 228 2 340 2 122 2 368 1 
212 3 89 1 242 1 49 1 119 1 268 2 121 1 246 1 122 2 274 1 3 1 55 1 276 1 291 2 25 1 24 1 223 1 179 1 149 2 102 2 184 2 226 1 228 2 340 3 37 1 341 1 63 1 230 1 368 1 84 1 349 1 208 1 322 1 68 2 262 1 70 1 236 2 
212 1 102 1 184 1 3 1 80 1 228 1 257 1 340 1 122 1 347 1 
212 1 79 1 9 1 228 1 90 1 340 1 118 1 312 1 231 1 247 1 51 1 347 1 45 1 26 1 
102 1 212 1 184 1 79 1 228 1 90 1 118 2 340 1 312 1 231 2 51 1 122 1 347 1 45 1 26 1 
53 1 103 1 118 1 36 1 231 1 
54 1 198 1 103 1 118 2 36 1 45 1 312 1 231 2 
103 1 118 1 231 1 
102 1 212 1 184 1 80 1 228 1 265 1 36 1 118 1 340 1 231 1 122 1 347 1 3 1 257 1 
45 1 
264 1 198 1 103 1 118 2 36 1 45 1 312 1 231 2 
8 1 103 2 330 1 36 2 118 5 339 1 105 2 312 1 94 1 231 5 345 1 145 1 198 1 307 1 114 1 45 1 251 1 134 2 167 2 
102 1 212 2 226 1 89 1 228 1 340 2 268 1 341 1 246 1 122 1 274 1 68 1 249 1 24 1 25 1 262 1 70 1 149 1 286 1 353 1 
255 1 368 1 
212 2 102 1 184 1 228 2 340 2 122 1 358 1 368 2 305 1 
359 1 286 1 108 1 
212 1 226 1 89 1 340 1 268 1 341 1 246 1 368 1 52 1 274 1 68 1 25 1 24 1 262 1 70 1 149 1 
212 3 102 3 184 1 228 3 340 3 122 3 368 1 353 1 
212 1 102 1 228 1 257 1 340 1 122 1 347 1 
212 1 102 1 184 1 305 1 228 1 340 1 122 1 347 1 358 1 
212 4 89 1 90 1 118 1 49 1 119 1 268 1 246 1 51 1 122 3 274 1 3 1 55 1 276 1 291 1 249 1 24 1 25 1 26 1 223 1 179 1 149 1 102 3 226 1 225 1 184 2 79 1 228 3 340 4 37 1 341 1 38 1 63 1 231 1 368 1 349 1 347 1 322 1 305 1 68 1 262 1 70 1 236 2 353 1 
212 2 102 1 228 2 19 1 340 2 247 1 122 1 368 1 353 1 
102 3 212 3 184 1 79 1 228 3 104 1 90 1 118 1 340 3 38 1 231 1 51 1 122 3 347 1 305 1 249 1 45 1 26 1 353 2 
102 2 212 2 184 1 228 2 340 2 122 2 305 1 359 1 353 1 286 1 
212 1 226 1 89 1 340 1 268 1 341 1 246 1 368 1 274 1 68 1 25 1 24 1 70 1 262 1 149 1 
212 1 226 1 89 1 340 1 268 1 246 1 368 1 274 1 68 1 133 1 222 1 24 1 70 1 262 1 149 1 
327 1 310 1 169 1 119 1 49 2 97 1 276 1 146 1 359 2 291 4 179 1 201 1 7 1 60 1 37 1 63 1 108 2 208 2 322 1 161 1 67 1 85 1 236 2 286 2 
212 1 102 1 338 1 228 1 340 1 51 1 122 1 347 1 
102 4 212 5 184 1 185 1 228 5 19 1 71 1 340 5 247 1 122 4 368 1 305 1 249 1 353 2 
338 1 212 2 102 2 228 2 257 1 340 2 122 2 347 1 
129 1 237 1 
129 1 237 1 
172 1 
172 1 
172 1 
364 1 129 1 237 1 
364 1 129 1 237 1 
205 1 61 1 172 1 129 1 237 1 
243 1 129 1 237 1 
364 1 129 1 237 1 
308 1 129 1 237 1 
308 1 129 1 237 1 
308 1 129 1 237 1 
294 2 187 1 168 2 118 2 300 1 188 1 231 2 348 1 131 3 218 2 132 1 370 1 162 1 45 1 76 1 360 2 129 2 181 2 237 2 
212 2 294 1 102 2 228 2 243 1 340 2 118 1 266 1 299 1 229 1 206 1 231 1 122 2 368 1 131 1 218 1 370 1 360 1 129 1 309 1 181 1 237 1 263 1 166 1 
127 1 128 1 293 1 
140 1 128 1 293 1 
209 1 140 1 127 2 128 3 115 1 271 1 
209 1 140 1 127 1 259 1 128 2 115 1 
209 1 140 1 127 1 128 2 115 2 
117 1 169 1 139 1 194 2 118 5 20 1 330 3 94 1 312 1 198 1 125 1 97 1 251 2 362 1 101 2 186 1 60 1 103 1 366 3 105 1 36 4 229 1 231 5 85 1 234 1 350 2 134 1 45 2 309 1 326 1 166 1 167 1 
138 1 169 3 139 3 141 1 118 9 20 2 330 8 93 1 312 1 94 1 53 5 198 1 97 3 251 6 221 1 224 5 362 2 101 6 186 3 60 3 103 6 366 9 339 1 36 7 105 2 231 9 323 1 85 3 350 6 45 5 134 2 309 4 16 1 326 1 167 2 
117 1 139 1 169 1 194 1 118 3 20 1 330 3 312 1 97 1 251 2 362 1 101 2 186 2 60 1 366 4 36 2 105 1 339 1 231 3 234 1 85 1 350 2 45 3 134 1 309 1 167 1 
138 1 117 1 139 2 169 2 194 2 118 4 20 1 330 5 312 1 93 1 97 2 251 4 362 1 101 4 186 3 60 2 366 7 105 1 339 1 36 3 231 4 323 1 234 1 85 2 350 4 45 4 134 1 309 2 167 1 
262 1 255 1 150 1 
192 1 262 1 
269 1 
262 1 70 1 
77 1 274 1 78 1 262 3 70 1 150 2 
274 1 262 1 70 1 
235 1 262 1 
169 1 49 3 311 1 66 1 208 4 304 1 160 2 161 2 97 1 67 3 335 1 111 1 291 7 87 1 59 1 210 1 29 1 
169 1 49 3 311 1 66 1 208 4 304 1 160 2 161 2 97 1 67 3 335 1 111 1 291 7 87 1 59 1 210 1 29 1 
169 1 49 3 311 1 66 1 208 4 304 1 160 2 161 2 97 1 67 3 335 1 111 1 325 1 291 7 87 1 59 1 210 1 29 1 
139 3 169 4 49 15 311 2 97 4 335 2 276 1 200 1 176 1 291 31 59 5 179 1 363 1 316 1 29 1 151 1 319 1 81 3 60 3 37 1 63 1 66 2 208 16 160 3 304 2 161 5 67 10 85 3 111 1 44 1 87 1 210 1 211 4 236 2 
169 1 311 1 49 4 97 1 276 2 335 1 291 9 59 1 179 2 316 1 29 1 130 1 37 2 63 2 66 1 208 5 160 2 304 1 161 3 67 4 87 1 261 1 210 1 236 4 
215 1 193 1 89 1 140 1 268 1 332 1 245 1 173 1 271 1 4 1 127 1 337 1 128 2 293 1 149 1 318 1 226 1 11 1 280 2 207 1 157 1 65 1 159 1 39 1 68 1 258 1 190 1 284 2 14 1 191 1 
215 1 89 1 140 1 268 1 332 1 245 1 173 1 271 1 4 1 290 1 127 1 337 1 128 2 293 1 149 1 318 1 32 1 226 1 11 1 280 3 65 1 159 1 39 1 68 1 258 1 189 1 284 3 190 2 14 1 191 1 
215 1 89 1 140 1 268 1 332 1 245 1 173 1 271 1 4 1 290 1 127 1 337 1 128 2 293 1 149 1 32 1 226 1 11 1 280 2 159 1 68 1 284 2 190 2 14 1 191 1 
116 1 226 1 89 1 215 2 268 1 280 1 156 1 332 2 246 1 65 1 159 2 4 2 68 1 258 1 23 1 189 1 351 1 315 1 262 1 70 1 284 1 149 1 100 1 
215 1 193 1 89 1 140 1 268 1 332 1 173 1 271 1 4 1 127 1 337 1 128 2 293 1 149 1 318 1 32 1 226 1 280 1 157 1 65 1 159 1 39 1 68 1 258 1 284 1 14 1 
123 1 
89 1 90 1 330 2 94 1 246 2 247 1 51 1 333 4 198 3 5 1 251 2 149 2 100 1 9 1 103 6 10 1 105 1 106 1 340 1 155 1 156 1 301 1 303 1 347 1 346 1 109 2 68 2 306 2 70 1 262 1 167 1 212 1 20 1 118 5 268 2 267 1 312 1 72 2 73 2 357 1 313 2 277 2 178 2 126 1 26 1 226 1 186 2 79 1 228 1 366 2 231 5 45 2 134 1 135 1 238 1 
212 1 264 1 90 1 118 3 267 1 247 1 51 1 333 2 198 1 178 1 26 1 79 1 228 1 9 1 103 2 340 1 106 1 155 1 301 1 231 3 347 1 135 1 
212 1 264 1 90 1 118 3 267 1 312 1 247 1 51 1 333 3 198 1 277 1 26 1 79 1 228 1 9 1 103 1 340 1 106 1 155 1 301 1 231 3 347 1 135 1 45 1 
264 1 212 1 90 1 118 3 267 1 312 1 247 1 51 1 333 3 198 1 178 1 277 1 26 1 79 1 228 1 9 1 103 2 340 1 106 1 155 1 301 1 231 3 347 1 306 1 135 1 45 1 
264 1 212 1 90 1 330 1 118 5 267 1 94 1 312 5 95 1 247 1 51 1 333 6 72 2 73 2 357 1 313 2 198 3 277 4 178 4 251 1 6 1 26 1 180 1 182 1 186 2 79 1 228 1 9 1 103 7 105 1 106 1 340 1 155 1 301 1 231 5 346 1 347 1 109 2 306 4 134 1 45 5 135 1 283 1 167 1 
90 1 330 1 94 1 333 4 51 1 247 1 198 2 251 1 9 1 103 4 340 1 105 1 106 1 155 1 301 1 346 1 347 1 109 2 306 2 167 1 212 1 118 4 267 1 312 1 73 2 72 2 357 1 313 2 178 2 277 2 26 1 186 2 79 1 228 1 366 2 231 4 135 1 134 1 45 2 238 1 
212 1 90 1 330 1 118 4 267 1 312 1 94 1 95 1 247 1 51 1 333 4 72 2 73 2 357 1 313 2 198 2 277 2 178 2 251 1 6 1 26 1 180 1 186 2 79 1 228 1 9 1 103 4 340 1 106 1 105 1 155 1 301 1 231 4 346 1 347 1 109 2 306 2 45 1 134 1 135 1 167 1 
212 1 90 1 330 1 118 4 267 1 312 1 94 1 95 1 247 1 51 1 333 4 72 2 73 2 357 1 313 2 198 2 277 2 178 2 251 1 6 1 26 1 180 1 186 2 79 1 228 1 9 1 103 4 340 1 106 1 105 1 155 1 301 1 231 4 346 1 347 1 109 2 306 2 45 1 134 1 135 1 167 1 
212 1 354 2 90 1 330 1 118 4 267 1 312 1 94 1 95 1 247 1 51 1 333 4 73 2 357 1 313 2 198 2 277 2 178 2 251 1 26 1 202 2 79 1 228 1 9 1 103 4 366 2 340 1 106 1 105 1 107 1 12 1 155 1 301 1 231 4 347 1 306 2 45 1 134 1 135 1 260 1 167 1 
212 1 90 1 330 1 118 4 267 1 312 1 94 1 95 1 247 1 51 1 333 5 72 2 73 2 357 1 313 2 198 2 178 3 277 3 251 1 6 1 26 1 180 1 182 1 186 2 79 1 228 1 9 1 103 5 105 1 340 1 106 1 155 1 301 1 231 4 346 1 347 1 109 2 306 3 45 1 134 1 135 1 167 1 
212 1 90 1 330 1 118 4 267 1 312 1 94 1 95 1 247 1 51 1 333 5 72 2 73 2 357 1 313 2 198 2 178 3 277 3 251 1 6 1 26 1 180 1 182 1 186 2 79 1 228 1 9 1 103 5 105 1 340 1 106 1 155 1 301 1 231 4 346 1 347 1 109 2 306 3 45 1 134 1 135 1 167 1 
90 1 330 1 94 1 333 4 51 1 247 1 198 2 251 1 202 2 9 1 103 4 340 1 105 1 106 1 12 1 155 1 301 1 347 1 306 2 167 1 212 1 354 2 118 4 267 1 312 1 73 2 357 1 313 2 178 2 277 2 26 1 79 1 228 1 366 2 231 4 135 1 134 1 45 1 238 1 
169 1 49 3 119 1 37 1 63 1 255 1 66 1 108 1 368 2 208 3 160 1 322 1 161 2 97 1 67 2 335 1 276 1 359 1 291 6 87 1 179 1 210 1 7 1 29 1 236 2 286 1 
322 1 88 1 276 1 329 1 119 1 37 1 63 1 179 1 236 2 
212 2 88 1 89 1 242 1 268 1 119 1 49 1 246 1 122 1 2 1 52 1 274 1 276 1 55 1 359 1 291 2 58 1 249 1 24 1 25 1 179 1 149 1 102 1 226 1 228 1 340 2 37 1 341 1 63 1 368 1 208 1 322 1 68 1 282 1 262 1 70 1 236 2 353 1 
328 1 88 1 89 2 139 2 242 1 49 10 246 1 97 3 335 1 55 1 57 1 291 20 249 1 59 4 252 2 149 3 102 1 60 2 340 3 298 2 341 2 63 3 66 1 349 2 108 7 208 10 160 1 161 4 68 3 67 8 70 2 262 2 210 1 353 1 212 3 213 2 169 3 171 1 268 3 119 3 122 1 274 2 276 3 359 7 25 2 24 2 179 3 29 1 32 1 226 2 228 1 37 3 368 2 322 3 85 2 43 2 87 1 236 6 286 7 
212 1 89 2 242 1 268 7 119 2 49 1 356 1 246 2 122 1 276 2 55 1 291 2 27 1 179 2 7 1 149 8 100 1 102 1 32 1 226 2 204 1 228 1 152 1 365 1 320 1 340 1 37 2 156 1 63 2 230 2 207 1 344 1 208 1 322 2 68 8 262 3 70 2 236 4 353 1 
212 1 88 1 139 1 169 1 119 1 49 2 122 1 273 1 97 1 276 1 359 1 291 3 179 1 102 1 184 1 228 1 60 1 340 1 37 1 63 1 108 1 208 1 322 1 161 1 305 1 67 1 85 1 236 2 286 1 
327 1 169 1 119 1 37 1 63 1 108 1 208 2 322 1 67 1 276 1 85 1 359 1 291 2 59 1 179 1 7 1 236 2 286 1 
60 1 119 1 49 2 37 1 63 1 108 1 322 1 161 1 67 1 97 1 276 1 359 1 291 2 179 1 201 1 7 1 236 2 286 1 
169 1 139 1 119 1 49 2 97 1 276 1 359 2 291 4 59 1 179 1 7 1 60 1 37 1 63 1 108 2 208 2 322 1 161 1 67 2 85 1 236 2 286 2 
327 1 169 1 119 1 37 1 63 1 344 1 108 1 208 2 322 1 67 1 276 1 85 1 359 1 291 2 59 1 179 1 236 2 286 1 
60 1 119 1 49 2 37 1 63 1 344 1 108 1 322 1 161 1 67 1 97 1 276 1 359 1 291 2 179 1 201 1 236 2 286 1 
169 1 139 1 119 1 49 2 97 1 276 1 359 2 291 4 59 1 179 1 60 1 37 1 63 1 344 1 108 2 208 2 322 1 161 1 67 2 85 1 236 2 286 2 
169 1 139 1 119 1 49 2 97 1 276 1 359 2 291 4 59 1 179 1 60 1 37 1 63 1 108 2 208 2 322 1 161 1 67 2 85 1 236 2 286 2 
212 1 89 1 242 1 268 1 119 1 49 1 246 1 274 1 276 1 55 1 291 2 24 1 25 1 179 1 149 1 226 1 340 1 37 1 341 1 63 1 368 1 349 1 208 1 322 1 68 1 70 1 262 1 236 2 
212 1 89 1 242 1 268 1 119 1 49 1 246 1 274 1 276 1 55 1 291 2 24 1 222 1 179 1 149 1 226 1 340 1 37 1 63 1 368 1 208 1 322 1 68 1 133 1 371 1 70 1 262 1 236 2 
88 1 169 1 139 1 119 1 49 2 97 1 276 1 359 2 291 4 59 1 179 1 60 1 37 1 63 1 108 2 208 2 322 1 161 1 67 2 85 1 236 2 286 2 
212 1 169 1 89 1 139 1 49 2 268 1 119 1 274 1 97 1 276 1 359 2 291 4 59 1 24 1 25 1 252 1 179 1 149 1 226 1 60 1 340 1 37 1 341 1 63 1 207 1 108 2 349 1 208 2 322 1 161 1 67 2 68 1 85 1 70 1 262 1 236 2 286 2 
212 1 88 1 139 1 169 1 49 1 119 1 122 1 96 1 97 1 276 1 359 1 291 3 59 1 179 1 102 1 184 1 60 1 228 1 340 1 37 1 63 1 108 1 208 2 322 1 305 1 67 1 85 1 236 2 286 1 
139 3 169 3 92 1 49 10 120 1 124 1 97 3 276 2 200 1 291 19 59 3 99 2 179 2 319 1 81 1 60 3 82 2 253 1 37 2 63 2 208 9 161 3 67 6 85 3 136 1 261 1 47 1 211 2 137 1 236 4 
139 3 169 3 355 1 49 12 120 2 124 1 314 1 97 2 74 1 276 3 291 26 200 2 59 2 99 4 179 3 316 2 279 1 81 2 60 2 82 1 253 1 37 3 63 3 302 1 208 14 161 2 67 4 85 3 112 1 261 1 47 1 211 2 137 2 236 6 
139 5 49 22 92 1 97 5 335 1 98 1 291 44 200 3 59 4 99 4 60 4 253 1 63 3 302 1 66 1 208 22 160 1 161 4 67 8 112 1 261 1 210 1 211 5 169 6 355 1 120 2 124 1 314 1 276 3 74 1 179 3 316 1 29 1 319 2 81 3 279 1 82 1 37 3 85 5 87 1 47 1 236 6 137 1 
139 5 169 6 355 1 92 1 49 21 120 2 124 1 314 1 97 5 98 1 335 1 74 1 276 4 200 3 291 43 59 3 99 4 179 4 316 2 29 1 319 2 279 1 81 3 60 4 82 1 253 1 37 4 63 4 66 1 302 1 208 22 160 1 161 5 67 8 85 5 112 1 87 1 261 1 47 1 210 1 211 5 137 1 236 8 
139 7 169 8 355 1 49 25 120 1 124 1 314 1 97 8 335 1 74 1 276 2 200 2 291 52 250 2 59 7 99 4 179 2 316 1 29 1 319 2 279 1 81 4 60 7 82 1 253 1 37 2 63 2 66 1 302 1 208 27 160 1 161 7 67 14 85 7 112 1 87 1 261 1 47 1 210 1 211 4 137 1 236 4 
212 2 88 1 89 1 242 1 119 1 49 1 268 2 331 1 219 1 276 1 55 1 291 2 336 1 179 1 149 2 226 1 204 1 228 2 365 1 340 2 37 1 63 1 230 2 208 1 322 1 68 2 46 1 262 1 70 1 285 1 236 2 
226 1 32 1 241 1 89 1 215 1 140 1 268 2 173 1 207 1 271 1 144 1 289 1 39 1 68 2 127 1 337 1 128 2 293 1 149 2 
32 1 226 1 241 1 215 1 89 1 140 1 268 1 173 1 271 1 39 1 68 1 127 1 337 1 128 2 293 1 164 1 149 1 
226 1 89 1 215 1 268 1 156 1 246 1 144 1 68 1 42 1 351 1 262 1 70 1 149 1 100 1 
226 1 32 1 241 1 215 1 89 1 140 1 268 1 173 1 271 1 144 1 289 1 39 1 68 1 127 1 337 1 128 2 293 1 149 1 
75 1 
145 1 307 1 330 1 45 1 312 1 251 1 255 1 
330 1 118 1 94 1 312 1 72 1 198 1 251 1 186 1 103 1 366 1 105 1 231 1 346 1 109 1 134 1 45 2 167 1 
48 2 192 3 89 3 139 2 330 9 142 1 94 4 197 1 246 1 145 1 334 2 198 3 97 2 199 1 251 8 149 3 150 2 101 6 60 2 103 5 105 4 154 2 207 1 68 3 307 1 350 6 13 1 262 10 70 3 167 4 352 2 169 2 20 2 118 5 268 3 312 2 274 3 126 1 278 2 30 2 226 4 31 1 78 1 186 6 79 2 366 12 231 5 324 2 85 2 235 2 43 2 372 2 134 4 45 8 
48 1 139 2 169 2 20 1 118 1 330 8 355 1 94 2 312 2 1 1 198 1 97 2 74 1 200 1 126 1 251 5 101 5 186 3 279 1 81 1 60 2 103 1 366 6 105 2 231 1 158 1 302 1 85 2 350 5 112 1 372 2 134 2 45 5 211 1 167 2 
212 1 48 1 169 2 265 1 118 1 330 2 94 1 122 1 3 1 97 1 335 1 251 2 180 1 102 1 184 1 80 1 228 1 340 1 105 1 153 1 231 1 66 1 347 1 257 1 372 2 87 1 134 1 167 1 
105 1 330 1 94 1 312 1 145 1 307 1 134 1 251 1 45 1 167 1 
48 1 186 5 139 2 169 2 60 2 366 10 330 5 97 2 85 2 43 1 350 5 372 2 251 5 45 5 101 5 
198 1 103 1 118 1 45 1 312 1 231 1 
89 1 20 2 330 2 118 3 268 4 94 1 197 2 246 2 198 2 199 1 5 1 126 2 251 2 317 1 149 4 100 1 226 1 103 4 339 1 105 2 156 1 231 3 303 1 369 1 68 4 134 2 262 1 70 1 167 2 
212 3 89 1 49 1 268 1 119 1 246 1 122 2 3 1 274 1 55 1 276 1 291 1 25 1 24 1 223 1 179 1 149 1 102 2 184 2 226 1 228 2 340 3 37 1 341 1 63 1 368 1 349 1 322 1 68 1 70 1 262 1 236 2 
186 2 366 4 105 1 20 1 330 1 94 1 312 2 160 1 350 2 126 1 251 2 134 1 45 4 101 2 167 1 
218 1 373 1 181 1 
218 1 373 1 181 1 
275 1 218 1 300 1 299 1 181 1 
218 1 373 1 181 1 
40 1 218 1 181 1 
40 1 218 1 181 1 
40 1 218 1 181 1 
218 1 181 1 
129 1 237 1 
169 1 49 4 37 2 63 2 66 1 208 4 160 1 161 2 97 1 67 3 276 2 335 1 291 8 87 1 59 1 179 2 316 1 210 1 29 1 236 4 
169 1 49 3 255 1 66 1 208 3 160 1 161 2 67 2 97 1 335 1 291 6 87 1 210 1 29 1 
60 1 139 1 169 1 244 1 49 2 37 1 63 1 208 2 161 1 97 1 67 2 276 1 85 1 291 4 59 1 179 1 236 2 
319 1 60 1 81 1 139 1 169 1 49 4 208 3 161 1 97 1 67 2 85 1 200 1 291 7 59 1 211 2 
169 3 139 2 49 12 97 3 335 2 276 2 291 23 250 1 59 4 179 2 316 2 29 1 319 1 81 2 60 2 37 2 63 2 66 2 208 11 160 1 233 1 161 5 67 9 85 2 87 1 165 1 210 1 211 2 236 4 
291 1 49 1 211 1 
208 1 81 1 291 1 
139 1 169 1 60 1 244 1 49 3 37 1 63 1 208 3 161 2 67 3 97 1 276 1 85 1 43 1 291 6 59 1 179 1 236 2 
139 2 169 2 355 1 49 6 97 2 276 1 74 1 291 12 200 1 59 1 179 1 81 1 60 2 279 1 37 1 63 1 302 1 208 6 161 1 67 2 85 2 112 1 261 1 211 1 236 2 
169 1 49 3 66 1 208 3 161 1 97 1 67 2 335 1 291 6 87 1 59 1 
49 2 37 1 63 1 66 1 208 1 233 1 161 1 67 2 335 1 276 1 291 3 59 1 179 1 316 1 210 1 29 1 236 2 
169 2 153 1 49 5 37 1 63 1 66 2 208 5 161 3 67 5 97 2 276 1 335 2 291 10 87 1 59 2 261 1 179 1 236 2 
169 1 37 1 63 1 208 2 67 1 276 1 85 1 291 2 59 1 261 1 179 1 236 2 
60 1 139 1 169 1 49 2 37 1 63 1 208 2 161 1 97 1 67 2 276 1 85 1 291 4 59 1 261 1 179 1 236 2 
92 1 49 2 37 3 63 3 66 1 208 1 233 1 161 1 67 2 276 3 335 1 291 3 59 1 261 1 179 3 316 1 236 6 
139 3 169 5 244 1 49 18 92 1 97 5 335 3 276 5 200 1 291 34 59 5 179 5 316 2 363 1 29 1 151 1 319 1 81 3 60 3 37 5 63 5 66 3 208 16 160 1 233 1 161 7 67 12 85 3 44 1 87 2 261 1 210 1 211 4 236 10 
139 1 169 2 49 5 97 1 335 1 276 1 291 11 200 1 179 1 29 1 319 1 81 1 37 1 63 1 302 1 66 1 208 6 160 1 161 2 67 2 85 1 87 1 261 1 210 1 211 2 236 2 
139 1 169 2 244 1 49 5 97 1 335 1 276 2 291 11 200 1 59 1 179 2 29 1 319 1 81 1 37 2 63 2 66 1 302 1 208 6 160 1 161 2 67 3 85 1 87 1 261 1 210 1 211 2 236 4 
139 2 169 3 244 1 355 1 49 10 97 3 335 1 276 3 74 1 291 19 200 1 59 1 179 3 316 1 29 1 279 1 81 1 60 2 37 3 63 3 66 1 302 1 208 9 160 1 161 3 67 4 85 2 112 1 87 1 261 1 210 1 211 1 236 6 
139 2 169 3 244 1 355 1 49 7 97 2 335 1 276 3 74 1 291 17 200 1 59 2 179 3 316 1 29 1 81 1 60 1 279 1 37 3 63 3 66 1 302 1 208 10 160 1 161 3 67 5 85 2 112 1 87 1 261 1 210 1 211 1 236 6 
139 1 169 2 49 5 97 1 335 1 276 1 291 11 200 1 179 1 29 1 319 1 81 1 37 1 63 1 302 1 66 1 208 6 160 1 161 2 67 2 85 1 87 1 261 1 210 1 211 2 236 2 
139 2 169 2 355 1 49 6 97 2 276 1 74 1 291 12 200 1 59 1 179 1 81 1 60 2 279 1 37 1 63 1 302 1 208 6 161 1 67 2 85 2 112 1 261 1 211 1 236 2 
139 2 169 3 244 1 355 1 49 8 97 2 335 1 74 1 276 4 291 18 200 1 59 2 179 4 316 2 29 1 279 1 81 1 60 1 37 4 63 4 66 1 302 1 208 10 160 1 161 3 67 5 85 2 112 1 87 1 261 1 210 1 211 1 236 8 
139 3 169 3 355 1 49 7 92 1 97 2 74 1 276 4 291 16 200 1 59 3 179 4 316 2 279 1 81 1 60 2 37 4 63 4 302 1 208 9 161 3 67 6 85 3 112 1 261 1 211 1 236 8 
169 1 49 4 66 3 208 3 161 3 97 1 67 6 335 3 291 7 87 1 59 3 210 1 29 2 
139 2 169 3 355 1 49 8 92 1 97 2 335 1 74 1 276 4 291 18 200 1 59 1 179 4 316 2 29 1 279 1 81 1 60 1 37 4 63 4 66 1 302 1 208 10 160 1 161 3 67 4 85 2 112 1 87 1 261 1 210 1 211 1 236 8 
212 1 228 1 340 1 19 1 361 1 247 1 368 1 
239 1 212 1 296 1 228 1 19 1 340 1 247 1 281 1 368 1 110 1 361 1 147 1 
226 1 68 1 89 1 268 1 156 1 262 1 70 1 246 1 255 1 149 1 100 1 
102 1 212 2 226 1 228 1 89 1 340 2 268 1 341 1 246 1 122 1 368 1 274 1 68 1 24 1 262 1 70 1 149 1 353 1 
212 2 89 1 90 1 268 1 197 1 51 1 122 1 274 2 24 1 149 1 102 2 226 1 228 2 340 2 154 1 341 1 368 1 347 1 68 1 235 1 70 2 262 3 353 1 
212 2 89 1 90 1 268 2 197 1 51 1 122 1 274 2 222 1 24 1 149 2 102 2 226 1 228 2 34 1 340 2 154 1 368 1 347 1 68 2 235 1 70 2 262 3 353 1 
192 1 89 1 118 2 268 3 312 1 270 1 197 1 246 1 274 1 149 3 150 1 226 1 295 1 79 1 34 1 103 1 154 1 231 2 68 3 235 1 45 1 262 4 70 1 
226 1 79 1 192 1 89 1 34 1 103 1 118 2 268 3 312 1 154 1 246 1 231 2 197 1 274 1 68 3 235 1 45 1 70 1 262 4 149 3 352 1 150 1 
226 1 68 1 89 1 268 1 27 1 149 1 
32 1 78 1 226 3 204 1 89 2 152 1 320 1 91 1 268 6 356 1 230 1 246 2 207 1 272 1 274 1 68 7 220 1 27 1 70 2 262 3 149 7 
212 2 88 1 169 1 89 1 49 3 119 2 268 1 122 1 274 1 97 1 335 1 276 2 359 1 291 6 336 1 24 1 25 1 179 2 252 1 29 1 149 1 102 1 226 1 228 1 340 2 298 1 37 2 341 1 63 2 207 1 66 1 108 1 368 2 349 1 208 3 160 1 322 2 161 2 67 2 68 1 87 1 262 1 70 1 210 1 236 4 286 1 353 1 
192 1 330 1 118 3 268 1 312 1 94 2 246 1 145 1 334 1 198 1 199 1 278 1 251 1 149 1 150 1 79 1 103 2 105 2 36 1 231 3 68 1 324 1 307 1 45 1 134 2 262 2 167 2 352 1 
226 2 274 1 78 1 68 2 89 1 268 2 13 1 27 1 262 2 70 1 207 1 149 2 150 1 
226 1 89 1 34 1 268 4 156 1 246 1 207 1 68 4 86 1 70 1 262 1 149 4 100 1 
226 2 89 1 91 1 268 2 216 1 197 1 174 1 274 1 68 2 57 1 220 1 70 1 262 1 149 2 
226 1 68 1 89 1 140 1 268 1 128 1 293 1 173 1 246 1 149 1 
32 1 226 1 204 1 89 1 268 2 207 1 68 2 70 1 262 1 285 1 149 2 
226 2 204 1 89 2 152 1 268 4 156 1 356 1 197 1 246 1 207 1 68 5 86 1 70 2 262 3 149 5 100 1 
226 2 204 1 89 2 152 1 268 4 62 1 156 1 197 1 246 1 207 1 68 5 86 1 70 2 262 3 149 5 100 1 
102 1 212 2 226 1 228 1 89 1 340 2 268 1 246 1 122 1 368 1 274 1 68 1 24 1 222 1 262 1 70 1 149 1 353 1 
78 1 226 2 89 1 91 1 268 1 197 1 272 1 274 1 68 1 220 1 70 1 262 1 149 1 
217 1 22 1 254 1 232 1 368 1 
79 1 33 1 90 1 36 1 118 2 312 1 254 1 38 1 231 2 51 1 232 2 368 1 347 1 22 2 217 2 175 1 292 1 45 1 26 1 
212 1 228 1 340 1 254 1 331 1 232 1 22 1 219 1 46 1 
33 1 292 1 254 1 
11 1 245 1 191 1 255 1 
258 1 11 1 280 1 245 1 284 1 191 1 65 1 
280 1 332 1 159 1 
193 1 11 1 280 3 21 1 245 1 196 1 342 2 65 1 258 1 41 1 284 3 191 1 
258 1 11 1 113 1 280 2 245 1 190 1 284 2 191 1 65 1 
227 1 193 1 258 1 35 1 127 1 280 1 128 1 293 1 245 1 284 1 65 1 
193 1 258 1 280 1 245 1 284 1 191 1 65 1 
193 1 258 1 11 1 280 1 284 1 191 2 65 1 
240 1 193 1 297 1 280 2 245 1 65 2 248 1 258 2 284 2 191 1 
203 1 193 1 11 1 35 1 280 3 245 2 83 1 65 1 258 1 177 1 284 3 190 2 191 1 
193 1 11 1 140 1 280 2 245 1 65 1 271 1 258 1 127 1 128 2 284 2 293 1 190 1 191 1 148 1 
193 1 11 1 35 1 280 4 245 2 83 1 65 2 258 2 113 1 69 1 284 4 190 2 191 1 
193 1 258 1 11 1 280 1 245 1 284 1 191 1 65 1 
11 2 35 1 280 4 196 1 245 3 342 1 83 1 65 1 256 1 41 1 258 1 190 2 284 4 191 2 
193 1 11 1 280 2 287 1 245 1 50 1 65 1 321 1 258 1 284 2 190 1 191 1 
193 1 11 1 280 3 196 1 245 1 342 2 343 1 65 1 258 1 41 2 284 3 191 1 
214 2 56 1 245 2 64 1 
193 1 258 1 280 1 284 1 15 1 65 1 
203 1 193 1 258 1 11 1 280 2 245 1 190 1 284 2 191 1 65 1 
17 1 
193 1 258 1 11 1 280 1 245 1 284 1 191 1 65 1 
203 1 193 1 11 1 280 3 245 1 342 1 65 1 258 1 190 1 284 3 191 1 
256 1 35 1 245 1 83 1 
245 1 191 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 1 228 1 348 1 28 1 213 1 232 3 124 2 215 9 152 1 155 9 267 2 239 1 133 1 38 2 15 2 138 1 196 4 87 5 62 2 140 1 170 1 66 1 116 2 301 2 274 6 202 1 303 1 363 1 
208 1 228 1 348 1 28 1 213 1 232 3 124 2 215 9 152 1 155 9 267 2 239 1 133 1 15 2 38 2 138 1 196 4 87 5 62 2 140 1 170 1 66 1 301 2 274 6 116 2 202 1 303 1 363 1 
208 1 228 1 348 1 28 1 213 1 232 4 124 2 215 10 152 1 155 10 267 2 239 1 133 1 15 2 38 2 138 1 196 5 87 6 62 2 140 1 170 1 66 1 301 2 274 7 116 2 202 1 303 1 363 1 
208 1 228 1 348 1 28 1 213 1 232 2 124 2 215 7 152 1 155 7 267 2 239 1 133 1 15 2 38 2 138 1 196 3 87 4 62 2 140 1 170 1 66 1 301 2 274 4 116 1 202 1 303 1 
228 1 28 1 15 1 232 1 138 1 124 1 196 2 87 3 62 1 215 4 140 1 66 1 301 1 116 2 274 3 267 1 155 4 363 1 
226 1 28 1 38 1 138 1 213 1 233 1 148 1 87 1 124 1 62 1 215 2 140 1 152 1 301 1 267 1 155 2 
28 1 38 1 138 1 232 1 196 1 87 2 62 2 215 3 140 1 274 1 267 2 155 3 303 1 
228 1 133 1 28 1 15 1 38 1 138 1 232 3 124 1 87 5 196 4 62 2 215 9 140 1 66 1 301 1 116 2 274 7 202 1 289 1 217 1 267 2 155 9 303 1 363 1 
228 1 133 1 28 1 15 1 38 1 138 1 232 3 124 1 87 5 196 4 62 2 215 9 140 1 66 1 301 1 116 2 274 7 202 1 289 1 217 1 267 2 155 9 303 1 363 1 
379 1 339 1 68 1 
379 1 190 1 147 2 
294 2 13 2 309 2 315 2 173 2 22 1 77 1 258 2 
210 1 308 1 309 2 102 1 180 1 212 1 329 1 77 1 258 2 126 1 127 1 315 2 354 1 10 1 187 1 265 1 370 2 130 1 294 3 13 3 240 1 242 2 113 1 61 1 272 1 248 1 88 2 168 1 299 2 343 2 172 1 173 2 22 1 94 1 225 1 72 1 46 1 
331 1 294 1 13 1 309 1 315 1 84 1 173 1 275 1 22 1 258 1 
1 1 309 2 103 1 258 1 331 1 315 1 108 1 294 2 13 2 84 1 296 1 339 1 16 1 139 1 18 1 379 1 90 1 173 1 275 2 22 1 121 1 
294 2 13 2 309 2 1 1 84 1 296 2 339 1 103 1 16 1 258 2 331 1 139 2 315 2 90 1 379 1 173 2 275 2 108 1 22 1 
139 1 296 1 302 1 49 1 231 1 
139 2 371 1 296 2 379 1 255 1 339 1 49 1 231 1 
139 1 296 1 231 1 
294 1 13 1 309 1 84 1 296 1 49 1 258 1 139 1 331 1 315 1 90 1 173 1 275 1 22 1 
379 1 
139 2 296 2 379 1 255 1 339 1 49 1 231 1 284 1 
227 1 237 1 192 1 178 2 365 2 296 5 255 1 339 1 162 1 49 2 231 2 214 1 321 2 139 5 186 1 379 1 12 1 191 1 95 1 
68 1 77 1 
294 2 13 2 336 1 309 2 77 2 258 1 315 1 106 1 173 1 
253 1 327 1 311 1 
294 1 13 1 85 1 77 1 272 1 88 1 127 1 168 1 299 1 343 1 354 1 10 1 265 1 72 1 130 1 46 1 
294 2 13 2 253 1 252 1 309 1 330 1 258 1 272 1 88 1 168 1 127 1 299 1 343 1 354 1 10 1 265 1 173 1 46 1 130 1 72 1 
294 3 13 3 252 1 315 1 309 3 173 3 77 1 258 3 
294 1 13 1 309 1 84 1 173 1 275 1 258 1 
294 1 13 1 336 1 309 1 315 1 106 1 173 1 275 1 258 1 
252 1 1 1 309 3 308 1 256 1 103 1 212 1 258 3 315 2 354 1 10 1 265 1 108 1 356 1 13 4 16 1 113 1 61 1 272 1 168 1 173 3 275 2 22 1 72 1 180 1 329 1 330 1 77 1 126 1 127 1 187 1 370 2 130 1 294 4 336 1 240 1 296 1 242 1 139 1 88 1 299 1 343 1 45 1 94 1 46 1 
294 2 13 2 18 1 252 1 309 2 173 1 77 1 24 1 258 1 
294 3 251 1 336 1 13 3 252 2 309 3 1 1 296 1 256 1 103 1 330 1 16 1 258 3 139 1 315 1 379 1 173 3 275 1 108 1 
294 2 336 1 13 2 252 1 253 1 309 2 327 1 258 2 315 1 173 2 
294 1 13 1 77 1 272 1 88 1 127 1 168 1 299 1 343 1 354 1 10 1 265 1 72 1 130 1 46 1 
294 1 13 1 122 1 77 1 272 1 88 1 127 1 168 1 299 1 343 1 52 1 354 1 10 1 265 1 46 1 
25 1 253 2 308 1 180 1 327 2 212 1 311 2 351 1 8 1 234 1 109 1 370 2 240 1 135 1 242 4 113 1 195 1 61 2 221 1 197 1 172 2 118 1 93 1 94 1 
294 1 13 1 1 1 309 1 369 1 173 1 275 1 258 1 
294 5 13 5 336 1 252 2 309 5 77 1 330 1 60 1 374 1 258 4 18 1 315 1 173 4 24 1 
294 2 13 2 369 1 309 2 84 1 173 2 275 1 258 2 
166 1 367 1 
166 1 367 1 
83 1 189 1 
83 1 189 1 
83 1 189 1 
165 1 166 1 367 1 
165 1 166 1 367 1 
166 1 367 1 320 1 
166 2 83 1 101 1 27 1 189 1 367 2 
165 1 166 1 367 1 
166 1 355 1 367 1 
166 1 355 1 367 1 
166 1 355 1 367 1 
357 2 143 1 47 2 296 2 101 1 160 1 104 1 367 2 86 2 139 2 166 2 223 1 249 2 235 1 379 1 201 3 317 1 361 2 119 1 
294 2 357 1 13 2 309 2 47 1 296 1 257 1 367 1 146 1 77 1 358 1 320 1 86 1 258 2 139 1 166 1 249 1 235 1 263 1 250 1 201 1 173 2 67 1 206 1 
301 1 15 1 124 1 
226 1 301 1 124 1 
226 1 98 1 193 1 216 1 301 3 15 2 
226 1 193 1 216 1 301 2 15 1 55 1 
226 1 193 1 216 2 301 2 15 1 
207 1 227 1 74 1 178 1 365 1 255 1 3 1 49 4 147 3 231 1 263 1 81 2 190 1 291 1 129 1 237 3 296 5 135 1 339 1 162 2 321 1 221 1 139 5 197 1 377 1 376 1 250 1 379 2 118 1 362 2 23 2 206 1 
207 1 227 1 178 2 365 2 2 5 255 1 3 2 211 1 49 7 147 9 231 6 214 1 263 4 81 6 190 3 292 1 129 3 237 8 296 9 135 3 339 1 161 1 162 6 321 2 221 3 139 9 197 3 359 1 376 2 379 5 118 3 302 5 23 6 304 1 364 1 
178 1 365 1 3 1 49 2 147 4 214 1 263 1 81 2 190 2 291 1 129 1 237 3 296 3 135 1 339 1 162 2 321 1 139 3 221 1 197 1 377 1 376 1 379 3 118 1 362 1 23 2 
178 1 365 1 3 1 211 1 49 3 147 7 214 1 263 2 81 4 190 3 291 1 129 2 237 5 296 4 135 2 339 1 161 1 162 4 321 1 139 4 221 2 197 2 377 1 376 1 379 4 118 2 362 2 23 4 304 1 
97 1 10 1 68 1 
322 1 10 1 
73 1 
168 1 10 1 
272 1 97 2 260 1 132 1 168 1 10 3 
272 1 168 1 10 1 
10 1 340 1 
268 1 157 1 75 2 135 1 242 7 194 1 351 3 61 3 125 1 234 2 262 1 32 1 115 1 118 1 172 4 266 1 276 1 
268 1 157 1 75 2 135 1 242 7 194 1 351 3 61 3 125 1 234 2 262 1 32 1 115 1 118 1 172 4 266 1 276 1 
268 1 157 1 48 1 75 2 135 1 242 7 194 1 351 3 61 3 125 1 234 2 262 1 32 1 115 1 118 1 172 4 266 1 276 1 
349 1 75 3 212 1 123 3 351 10 6 1 125 2 259 1 234 5 185 1 50 4 262 1 79 1 32 2 266 2 370 2 129 3 268 1 157 1 240 1 135 4 242 31 194 2 113 1 373 1 61 15 221 3 197 3 65 1 115 5 172 16 118 4 276 1 94 1 
75 2 212 2 351 4 125 1 234 3 32 1 266 1 370 4 268 1 157 1 240 2 135 1 242 9 194 1 113 2 373 1 61 4 115 1 118 1 172 5 20 1 276 1 70 1 94 2 
226 1 98 1 28 1 181 1 124 1 215 2 286 1 127 1 155 2 267 1 270 1 37 1 15 1 38 1 138 1 87 1 246 1 247 1 62 1 88 1 140 1 298 1 299 1 343 1 274 1 301 2 203 1 324 1 92 1 46 1 
226 1 98 1 28 1 181 1 124 1 215 3 127 1 154 1 155 3 267 1 270 1 15 1 38 1 87 1 246 1 247 1 62 1 88 1 375 1 140 1 298 1 299 1 343 1 274 2 301 2 323 1 203 1 324 1 92 1 46 1 
226 1 98 1 28 1 124 1 215 2 127 1 155 2 270 1 38 1 15 1 87 1 246 1 88 1 375 1 140 1 298 1 299 1 343 1 274 2 301 2 323 1 203 1 324 1 92 1 46 1 
209 1 352 1 215 1 127 1 10 1 265 1 154 1 155 1 267 1 218 1 38 2 244 1 246 2 62 1 88 1 168 1 299 1 298 2 343 1 44 1 120 1 92 2 46 1 
226 1 98 1 181 1 124 1 215 1 286 1 127 1 155 1 267 1 270 1 15 1 38 1 138 1 246 1 247 1 62 1 88 1 298 1 299 1 343 1 301 2 323 1 203 1 324 1 92 1 46 1 
107 1 
305 1 309 1 1 1 350 2 255 3 145 2 103 1 147 2 352 1 51 1 10 1 265 2 108 1 156 1 13 1 162 2 16 1 164 1 321 1 17 2 168 1 18 1 275 1 120 1 121 1 326 1 227 1 281 2 177 1 178 1 282 1 365 1 230 2 231 6 183 1 30 1 127 1 34 1 190 2 237 2 294 1 296 5 134 4 338 1 339 2 139 5 88 2 43 2 376 1 299 2 343 2 199 2 379 3 204 1 46 1 
305 1 282 1 309 1 1 1 255 1 230 1 103 1 231 2 284 1 34 1 108 1 294 1 13 1 296 3 134 2 338 1 339 2 16 1 139 3 18 1 379 2 204 1 275 1 121 1 
305 1 294 1 13 1 281 1 282 1 1 1 309 1 134 3 296 2 338 1 339 2 103 1 16 1 139 2 18 1 379 2 34 1 275 1 204 1 108 1 121 1 
305 1 281 1 282 1 309 1 1 1 255 1 230 1 103 1 231 2 284 1 34 1 108 1 294 1 13 1 296 3 134 3 338 1 339 2 16 1 139 3 18 1 199 1 379 2 204 1 275 1 121 1 
305 1 1 1 309 2 255 3 350 2 103 1 145 2 258 1 315 1 108 1 57 1 13 2 162 1 16 1 321 1 17 2 18 1 171 1 173 1 275 2 22 1 121 1 326 1 227 1 281 3 282 1 178 1 365 1 230 4 231 7 284 1 331 1 30 1 34 1 190 2 294 2 237 1 84 1 134 5 296 5 338 1 339 4 372 1 139 5 43 2 199 4 90 1 379 4 204 1 346 1 142 1 
305 1 1 1 309 1 350 2 255 2 103 1 145 2 147 2 51 1 108 1 13 1 162 1 16 1 321 1 17 2 18 1 275 1 121 1 326 1 227 1 281 2 178 1 282 1 365 1 230 2 231 4 30 1 34 1 190 2 294 1 237 1 134 4 296 4 338 1 339 3 139 4 43 2 199 2 379 4 204 1 
326 1 305 1 227 1 281 2 282 1 178 1 365 1 309 1 1 1 230 2 255 2 350 2 145 2 103 1 231 4 30 1 34 1 108 1 190 2 57 1 237 1 294 1 13 1 296 4 134 4 338 1 339 3 162 1 16 1 321 1 17 2 139 4 43 2 18 1 199 2 379 3 171 1 204 1 275 1 121 1 142 1 
326 1 305 1 227 1 281 2 282 1 178 1 365 1 309 1 1 1 230 2 255 2 350 2 145 2 103 1 231 4 30 1 34 1 108 1 190 2 57 1 237 1 294 1 13 1 296 4 134 4 338 1 339 3 162 1 16 1 321 1 17 2 139 4 43 2 18 1 199 2 379 3 171 1 204 1 275 1 121 1 142 1 
305 1 294 1 13 1 282 1 1 1 309 1 134 2 296 2 338 1 339 2 103 1 16 1 139 2 18 1 33 1 379 2 34 1 275 1 204 1 108 1 121 1 
326 1 227 1 305 1 281 3 178 1 282 1 365 1 309 1 1 1 255 2 350 2 230 3 145 2 103 1 231 5 30 1 34 1 108 1 190 2 57 1 237 1 294 1 13 1 296 4 134 5 338 1 339 3 162 1 16 1 321 1 17 2 139 4 43 2 18 1 199 3 171 1 379 3 204 1 275 1 346 1 121 1 142 1 
326 1 227 1 305 1 281 3 178 1 282 1 365 1 309 1 1 1 255 2 350 2 230 3 145 2 103 1 231 5 30 1 34 1 108 1 190 2 57 1 237 1 294 1 13 1 296 4 134 5 338 1 339 3 162 1 16 1 321 1 17 2 139 4 43 2 18 1 199 3 171 1 379 3 204 1 275 1 346 1 121 1 142 1 
305 1 1 1 309 1 255 2 103 1 145 2 147 2 51 1 108 1 13 1 162 1 16 1 321 1 18 1 275 1 121 1 278 2 326 1 227 1 281 2 178 1 282 1 365 1 230 2 231 4 34 1 294 1 237 1 134 4 296 4 338 1 339 3 139 4 342 1 43 2 200 2 199 2 379 3 204 1 
25 1 253 1 308 1 75 1 180 1 327 1 212 1 311 1 351 2 77 2 234 2 32 1 266 1 370 2 268 1 157 1 240 1 135 1 242 6 113 1 61 3 118 1 172 3 68 1 276 1 94 1 
280 1 253 11 349 1 308 1 283 1 102 1 180 2 327 4 212 2 311 11 123 3 351 2 77 1 368 1 234 1 332 1 50 3 79 1 187 1 370 4 129 2 240 2 135 1 242 14 113 2 61 6 221 2 41 1 197 1 115 1 172 8 118 2 94 2 
252 1 308 1 309 1 283 1 180 1 102 1 327 1 212 1 77 1 330 1 258 1 150 1 127 1 354 1 10 1 265 1 187 1 128 1 188 1 370 2 130 1 294 2 13 2 240 1 242 2 85 1 113 1 61 1 272 1 88 1 168 1 299 1 343 1 173 1 172 1 94 1 46 1 72 1 
96 2 252 1 253 7 309 1 308 3 102 1 212 3 311 7 351 8 258 1 354 2 10 2 265 1 264 2 266 1 268 1 157 1 13 3 59 1 112 2 159 2 113 3 61 10 272 2 221 2 168 2 115 4 323 1 173 1 118 3 172 10 276 1 279 1 72 2 75 1 283 1 180 3 327 7 329 2 77 2 330 1 234 4 127 2 32 1 187 1 370 6 130 2 129 2 294 3 240 3 135 3 242 20 137 1 88 3 197 2 299 3 343 3 94 3 46 2 
25 1 100 1 252 1 144 1 309 1 308 2 180 2 102 1 212 2 258 1 352 1 353 1 127 2 10 3 265 2 187 1 370 4 293 1 294 1 13 1 240 2 37 1 242 2 113 2 39 1 61 1 88 8 248 2 168 2 299 8 343 7 323 1 173 1 224 1 172 1 120 1 175 1 94 2 46 2 
253 1 308 1 309 1 283 1 180 1 327 1 311 1 212 1 351 1 258 1 234 1 315 1 370 2 129 1 294 1 336 1 337 1 13 1 240 1 135 1 242 3 113 1 61 2 221 1 197 1 173 1 118 1 172 1 94 1 
25 1 240 1 253 1 308 1 180 1 327 1 242 2 311 1 212 1 351 1 113 1 195 1 221 1 115 1 118 1 172 2 370 2 94 1 
25 1 240 1 253 1 308 1 180 1 135 1 327 1 242 2 311 1 212 1 351 1 113 1 61 2 8 1 234 1 197 1 370 2 94 1 
25 1 253 2 308 1 180 1 327 2 212 1 311 2 351 2 234 1 370 2 129 1 240 1 135 1 242 4 113 1 61 2 221 1 197 1 115 1 172 2 118 1 94 1 
240 1 253 1 144 1 308 1 180 1 327 1 242 2 311 1 212 1 351 1 113 1 195 1 221 1 115 1 118 1 172 2 370 2 94 1 
240 1 253 1 144 1 308 1 180 1 135 1 327 1 242 2 311 1 212 1 351 1 113 1 61 2 8 1 234 1 197 1 370 2 94 1 
144 1 253 2 308 1 180 1 327 2 212 1 311 2 351 2 234 1 370 2 129 1 240 1 135 1 242 4 113 1 61 2 221 1 197 1 115 1 172 2 118 1 94 1 
253 2 308 1 180 1 327 2 212 1 311 2 351 2 234 1 370 2 129 1 240 1 135 1 242 4 113 1 61 2 221 1 197 1 115 1 172 2 118 1 94 1 
308 1 102 1 180 1 212 1 329 1 77 1 127 1 354 1 10 1 265 1 187 1 370 2 130 1 294 1 13 1 240 1 242 2 113 1 61 1 272 1 88 1 168 1 299 1 343 1 172 1 94 1 46 1 72 1 
122 1 308 1 102 1 180 1 212 1 77 1 127 1 52 1 354 1 10 1 265 1 187 1 370 2 294 1 13 1 240 1 242 2 113 1 61 1 272 1 42 1 88 1 168 1 299 1 343 1 172 1 94 1 46 1 
253 2 308 1 283 1 180 1 327 2 212 1 311 2 351 2 234 1 370 2 129 1 240 1 135 1 242 4 113 1 61 2 221 1 197 1 115 1 172 2 118 1 94 1 
253 2 308 1 180 1 327 2 311 2 212 1 351 2 329 1 234 1 127 1 354 1 10 1 264 1 370 2 130 1 129 1 294 1 13 1 240 1 135 1 242 4 37 1 113 1 61 2 221 1 272 1 197 1 88 1 168 1 299 1 343 1 115 1 172 2 118 1 94 1 46 1 72 1 
253 1 308 1 309 1 283 1 180 1 327 1 212 1 311 1 351 1 258 1 315 1 370 2 129 1 294 1 336 1 13 1 240 1 135 1 242 3 113 1 61 1 221 1 197 1 344 1 115 1 173 1 118 1 172 2 94 1 
99 1 75 1 349 3 212 3 123 3 351 8 7 1 5 1 184 1 9 1 234 4 50 4 151 1 79 1 32 1 266 1 370 6 129 4 268 1 157 1 58 1 238 1 295 1 240 3 158 1 135 5 242 41 113 3 373 1 61 21 221 4 197 4 300 4 169 2 63 1 273 1 115 4 172 20 118 5 20 1 91 1 276 1 94 3 
99 1 75 1 349 3 212 4 123 3 351 7 7 1 5 1 184 1 9 1 234 4 50 4 151 1 79 1 32 1 266 1 370 8 129 4 268 1 157 1 58 1 238 1 295 1 240 4 158 1 135 4 242 38 113 4 373 2 61 18 221 4 197 3 300 4 169 2 63 1 273 1 115 3 172 20 118 5 20 1 91 1 276 1 94 4 
99 1 280 2 75 1 349 2 212 2 123 4 351 14 7 1 5 1 184 1 9 1 234 7 50 4 151 1 79 2 32 1 266 1 370 4 129 7 268 1 157 1 58 1 295 1 240 2 135 8 242 52 113 2 373 1 61 25 221 7 197 7 300 4 169 1 63 1 273 1 115 7 172 27 118 8 20 1 91 1 276 1 94 2 
99 1 349 1 328 1 212 2 123 1 351 6 5 1 9 1 234 3 50 2 151 1 79 1 370 4 129 3 238 1 240 2 135 3 242 19 113 2 61 10 221 3 197 3 300 2 169 1 115 3 172 9 118 3 20 1 91 2 94 2 
99 1 349 2 212 3 123 2 351 4 5 1 7 1 184 1 9 1 234 2 151 2 50 2 370 6 129 3 58 1 295 1 240 3 135 2 242 26 113 3 373 2 61 12 221 3 197 2 300 4 169 2 63 1 273 1 115 2 172 14 118 3 20 1 91 1 94 3 
114 1 166 1 357 1 223 1 249 1 47 1 101 1 160 1 367 1 86 1 
67 1 320 1 
166 1 357 1 249 1 47 1 316 1 243 1 367 1 318 1 86 1 
357 1 47 1 296 1 101 1 160 1 104 1 367 1 86 1 139 1 166 1 223 1 249 1 235 1 379 1 201 2 317 1 361 1 119 1 
357 1 47 1 296 1 101 1 160 1 104 1 367 1 86 1 139 1 166 1 223 1 249 1 235 1 379 1 201 2 317 1 361 1 119 1 
357 1 47 1 296 1 101 1 160 1 104 1 367 1 86 1 139 1 166 1 223 1 249 1 235 1 379 1 201 2 317 1 361 1 119 1 
165 1 27 1 117 1 
165 1 27 1 117 1 
355 1 105 1 
355 1 27 1 105 1 
146 1 358 1 
47 1 309 2 257 1 49 1 367 1 146 1 77 1 258 2 263 1 317 1 294 2 357 1 13 2 296 1 86 1 320 1 358 1 139 1 166 1 249 1 250 1 201 1 361 1 345 1 173 2 67 1 206 1 
165 1 117 1 
355 1 27 1 105 1 
229 1 100 1 307 1 308 1 309 2 283 1 180 1 102 1 212 1 127 1 333 1 10 1 187 1 370 2 131 1 294 2 13 2 240 1 242 2 113 1 61 1 88 2 248 2 168 1 299 2 343 2 378 1 224 1 172 1 94 1 46 1 
226 1 98 1 270 1 37 1 29 1 181 1 15 1 124 1 88 2 261 1 127 1 299 2 298 1 343 2 287 1 301 2 323 1 324 1 46 1 
226 1 98 1 270 1 220 1 181 1 15 1 124 1 88 1 261 1 127 1 299 1 298 1 343 1 301 2 323 1 324 1 46 1 
335 1 352 1 88 1 127 1 168 1 299 1 298 1 343 1 287 1 10 1 265 1 120 1 218 1 46 1 
226 1 98 1 270 1 29 1 181 1 15 1 124 1 88 1 261 1 127 1 299 1 298 1 343 1 287 1 301 2 323 1 324 1 46 1 
141 1 
237 1 186 1 379 1 339 1 68 1 162 1 95 1 
227 1 178 1 365 1 350 1 255 1 147 1 231 1 30 1 190 1 237 1 296 1 339 1 162 1 321 1 17 1 139 1 379 2 
97 1 255 1 312 1 147 6 10 4 53 1 265 1 108 1 111 1 112 1 162 3 321 2 272 1 221 1 322 2 168 1 118 1 21 1 23 3 277 1 227 2 178 2 365 2 231 2 78 1 127 2 236 1 81 3 190 3 129 1 237 4 132 1 36 1 296 2 135 1 139 2 88 1 197 1 376 1 299 1 343 1 379 3 46 1 
227 2 178 2 349 1 365 2 26 1 255 1 123 1 231 1 147 6 7 1 50 1 236 2 81 5 190 3 156 1 129 2 35 1 237 8 58 1 295 1 296 1 135 2 339 2 162 5 271 1 321 2 139 1 221 2 197 2 376 1 63 1 273 1 379 5 118 2 23 5 
227 1 178 1 365 1 309 1 26 1 258 1 331 1 32 1 315 1 236 2 266 1 268 1 294 1 319 1 237 2 13 1 84 1 296 1 135 1 162 2 321 1 139 1 171 1 90 1 118 2 173 1 275 1 22 1 
227 1 237 1 178 1 365 1 339 1 162 1 321 1 186 1 379 1 95 1 
237 5 112 1 26 1 135 2 162 5 147 10 221 2 197 2 379 5 118 2 236 2 81 5 23 5 190 5 129 2 
139 1 296 1 379 1 255 1 339 1 231 1 
227 1 177 1 178 2 179 1 365 2 255 2 231 4 214 1 352 1 127 1 10 1 265 2 56 1 82 1 156 2 237 2 296 3 162 2 164 1 321 2 139 3 88 4 198 2 168 1 299 4 376 2 343 4 120 1 46 1 
309 2 308 1 180 1 212 1 329 1 77 1 258 2 126 1 127 1 315 2 354 1 10 1 187 1 265 1 370 2 130 1 294 3 13 3 240 1 242 1 113 1 61 1 272 1 88 1 168 1 299 1 343 1 173 2 22 1 94 1 72 1 46 1 
227 1 237 1 178 1 75 1 365 1 339 2 162 2 147 4 321 1 376 1 379 4 81 2 23 2 190 2 156 1 
89 1 249 1 47 1 
89 1 249 1 47 1 
223 1 249 1 31 1 47 1 146 1 
89 1 249 1 47 1 
249 1 47 1 254 1 
249 1 47 1 254 1 
249 1 47 1 254 1 
249 1 47 1 
166 1 367 1 
75 1 349 1 123 1 212 1 351 2 7 1 234 2 50 1 32 1 266 1 370 2 268 1 157 1 240 1 135 1 242 8 113 1 61 4 118 1 172 4 20 1 276 1 94 1 
75 1 349 1 212 2 123 1 351 3 7 1 234 2 50 2 79 1 32 1 266 1 370 4 129 1 268 1 157 1 240 2 135 1 242 11 113 2 61 5 221 1 115 1 172 6 118 2 20 1 276 1 94 2 325 1 
75 1 349 1 123 1 212 3 351 4 7 1 234 3 50 1 32 1 266 1 370 6 129 2 268 1 157 1 58 1 295 1 240 3 135 3 242 19 113 3 373 1 61 10 221 2 197 2 63 1 273 1 115 1 172 9 118 3 20 1 276 1 325 1 94 3 
75 1 349 1 123 1 212 3 351 5 7 1 234 3 50 1 32 1 266 1 370 6 129 2 268 1 157 1 58 1 240 3 295 1 135 2 242 17 113 3 373 1 61 7 221 2 197 1 63 1 273 1 115 2 172 10 118 3 20 1 276 1 325 1 94 3 
75 1 349 1 123 1 212 1 351 2 7 1 234 2 50 1 32 1 266 1 370 2 268 1 157 1 240 1 135 1 242 8 113 1 61 4 118 1 172 4 20 1 276 1 94 1 
349 1 123 1 212 1 351 2 7 1 234 1 50 1 370 2 129 2 58 1 240 1 295 1 135 2 242 12 113 1 61 6 221 2 197 2 63 1 273 1 115 1 172 6 118 2 20 1 94 1 
75 1 349 1 212 4 123 1 351 5 7 1 234 3 50 1 32 1 266 1 370 8 129 2 268 1 157 1 58 1 295 1 240 4 135 2 242 18 113 4 373 2 61 8 221 2 197 1 63 1 273 1 115 2 172 10 118 3 20 1 276 1 325 1 94 4 
349 1 212 4 123 1 351 6 7 1 234 3 50 1 370 8 129 3 58 1 295 1 240 4 238 1 135 2 242 16 113 4 373 2 61 7 221 3 197 2 63 1 273 1 115 3 172 9 118 3 20 1 94 4 
268 1 157 1 135 1 242 7 351 6 61 4 234 3 32 3 115 3 118 1 172 3 276 2 266 3 
75 1 349 1 212 4 123 1 351 4 7 1 234 3 50 1 32 1 266 1 370 8 129 2 268 1 157 1 58 1 295 1 240 4 238 1 135 2 242 18 113 4 373 2 61 8 221 2 197 1 63 1 273 1 115 1 172 10 118 3 20 1 276 1 94 4 
268 1 157 1 240 2 75 1 135 1 242 8 212 2 351 3 113 2 373 1 61 4 234 2 32 1 115 1 118 1 172 4 276 1 266 1 370 4 94 2 
268 1 157 1 75 1 135 1 242 6 351 2 61 3 234 2 32 1 118 1 172 3 68 1 276 1 266 1 
240 1 135 1 242 4 212 1 351 2 113 1 61 2 221 1 234 1 197 1 115 1 118 1 172 2 370 2 325 1 94 1 129 1 
349 1 135 1 242 7 123 1 351 2 61 4 221 1 234 1 197 1 50 2 79 1 115 1 172 3 118 1 129 1 
306 1 280 1 75 1 123 2 212 2 351 9 332 1 234 5 50 2 79 1 32 2 266 2 370 4 129 2 268 1 157 1 240 2 135 3 242 23 113 2 373 2 61 12 221 2 197 2 115 4 118 3 172 11 276 1 94 2 
50 1 242 1 61 1 
242 1 172 1 123 1 
240 1 112 1 135 1 242 6 212 1 351 3 113 1 61 3 221 1 234 2 197 1 115 1 118 1 172 3 370 2 94 1 325 1 129 1 
349 1 123 1 212 1 351 2 7 1 234 1 50 1 370 2 129 2 58 1 240 1 295 1 135 2 242 12 113 1 61 6 221 2 197 2 63 1 273 1 115 1 172 6 118 2 20 1 94 1 
268 1 135 1 242 6 351 2 61 3 234 1 32 1 115 1 118 1 172 3 266 1 
306 1 157 1 240 1 242 3 212 1 351 2 113 1 373 1 61 2 234 1 32 1 115 1 172 1 266 1 276 1 370 2 94 1 
268 1 319 1 240 1 135 2 242 10 212 1 351 5 113 1 61 5 234 3 32 2 115 2 172 5 118 2 20 1 266 2 370 2 94 1 
240 1 242 2 212 1 351 1 113 1 221 1 115 1 118 1 172 2 20 1 370 2 94 1 
240 1 135 1 242 4 212 1 351 2 113 1 61 2 221 1 234 1 197 1 115 1 118 1 172 2 20 1 370 2 94 1 129 1 
306 1 238 1 240 3 242 3 212 3 351 2 113 3 373 1 61 2 234 1 32 1 115 1 172 1 20 1 266 1 370 6 94 3 
306 1 75 1 349 1 212 5 123 3 351 12 6 1 185 1 234 7 50 4 79 1 32 3 266 3 370 10 129 3 268 2 157 1 238 1 240 5 135 5 242 34 113 5 373 2 61 18 221 3 197 3 65 1 115 5 172 16 118 5 20 1 276 1 325 1 94 5 
294 1 13 1 309 1 77 1 341 1 18 1 275 1 45 1 24 1 
294 1 13 1 309 1 77 1 167 1 341 1 18 1 288 1 275 1 54 1 290 1 45 1 347 1 24 1 
88 1 127 1 168 1 299 1 343 1 10 1 265 1 68 1 120 1 46 1 352 1 
294 2 13 2 252 1 309 1 77 1 258 1 272 1 88 1 168 1 127 1 299 1 343 1 354 1 10 1 265 1 173 1 130 1 46 1 
294 2 13 2 252 1 1 1 309 2 103 1 77 1 340 1 258 1 272 2 40 1 88 1 168 2 127 1 198 1 299 1 343 1 354 1 10 3 173 2 275 1 130 1 46 1 
122 1 252 1 309 2 1 1 103 1 77 1 258 1 127 1 354 1 10 3 294 2 13 2 340 1 272 2 40 1 88 2 198 1 168 2 299 2 343 2 173 2 275 1 176 1 46 1 
97 1 309 1 231 1 313 1 258 1 331 1 127 1 315 1 10 4 11 1 108 1 294 1 13 1 84 1 296 2 339 1 340 1 139 2 272 1 40 1 88 1 322 1 198 1 168 1 299 1 343 1 90 1 379 1 173 1 275 1 22 1 46 1 
97 1 309 1 231 1 78 1 258 1 331 1 127 1 315 1 10 4 108 1 294 1 13 1 84 1 296 2 339 1 340 1 139 2 272 1 40 1 88 1 322 1 198 1 168 1 299 1 343 1 90 1 379 1 173 1 275 1 22 1 46 1 
88 1 127 1 299 1 343 1 46 1 39 1 
110 1 293 1 132 1 100 1 37 1 39 1 314 1 272 1 248 1 353 1 88 7 168 2 127 3 299 7 343 6 153 1 10 3 265 2 323 1 175 1 46 2 
253 1 252 1 75 1 308 2 309 1 283 1 180 2 327 1 311 1 212 2 351 2 329 1 77 2 258 1 234 2 127 1 32 1 354 1 333 1 10 1 264 1 266 1 370 4 130 1 268 1 294 2 157 1 13 2 240 2 135 1 159 1 242 6 37 1 113 2 61 3 272 1 88 1 168 1 299 1 343 1 172 3 118 1 173 1 276 1 94 2 46 1 72 1 
97 1 309 1 255 1 49 1 312 1 258 1 315 1 10 2 53 1 265 1 108 1 266 1 268 1 319 1 13 1 162 5 321 2 322 1 118 2 173 1 275 1 21 1 22 1 227 2 178 2 365 2 26 1 231 2 78 1 331 1 186 1 32 1 236 2 82 1 294 1 237 4 84 1 296 3 135 2 339 2 139 3 88 1 299 1 343 1 379 2 90 1 95 1 
272 1 97 1 132 1 111 1 88 2 127 2 168 1 299 2 343 2 10 2 37 1 46 1 39 1 
14 1 37 1 352 1 88 4 127 1 168 1 299 4 343 4 10 1 265 1 120 1 176 1 46 1 
110 1 241 1 149 1 314 1 272 1 88 2 198 1 168 1 127 2 299 2 343 2 10 1 279 1 46 1 
226 1 270 1 88 1 127 1 299 1 343 1 301 1 265 1 124 1 46 1 
88 2 127 1 168 1 299 2 100 1 307 1 343 2 10 1 323 1 37 1 46 1 
293 1 100 1 14 1 37 1 352 1 88 5 353 1 198 1 168 2 127 2 299 5 343 4 10 3 265 1 120 1 46 2 
293 1 100 1 136 1 14 1 37 1 352 1 88 5 198 1 168 2 127 2 299 5 343 4 10 3 265 1 120 1 46 2 
294 2 13 2 122 1 252 1 309 1 77 1 258 1 272 1 88 1 168 1 127 1 299 1 343 1 354 1 10 1 265 1 173 1 46 1 
110 1 132 1 314 1 272 1 88 1 198 1 168 1 127 2 299 1 343 1 153 1 10 1 46 1 
297 1 182 1 69 1 77 1 163 1 
309 1 1 1 256 1 310 1 103 1 182 1 49 1 258 1 331 1 315 1 108 1 294 1 269 1 13 1 84 1 296 2 297 1 339 1 16 1 163 1 139 2 64 1 379 1 90 1 173 1 275 2 69 1 22 1 
294 1 229 1 13 1 309 1 378 1 297 1 69 1 163 1 131 1 
64 1 310 1 69 1 
140 1 28 1 68 1 87 1 
215 1 62 1 140 1 28 1 155 1 267 1 87 1 
215 1 38 1 246 1 
28 1 366 1 138 1 245 1 87 1 62 1 215 3 360 1 140 1 152 2 267 1 155 3 
215 2 62 1 140 1 28 1 274 1 116 1 155 2 267 1 87 1 
215 1 62 1 228 1 301 1 15 1 155 1 267 1 138 1 124 1 87 1 196 1 
215 1 62 1 140 1 155 1 267 1 138 1 87 1 
215 1 62 1 140 2 28 1 155 1 267 1 138 1 
0 1 138 1 87 1 62 2 215 2 140 1 19 1 174 1 267 2 155 2 
133 1 28 1 138 1 232 1 196 1 87 2 62 1 215 3 140 1 274 2 202 1 267 1 155 3 
226 1 98 1 28 1 15 1 138 1 87 1 124 1 62 1 215 2 140 1 301 2 274 1 334 1 267 1 155 2 
28 1 138 1 232 1 196 1 87 2 62 2 215 4 140 1 116 1 274 2 267 2 155 4 363 1 
215 1 62 1 140 1 28 1 155 1 267 1 138 1 87 1 
28 2 76 1 232 1 245 1 196 1 87 3 215 4 62 1 360 1 140 2 152 1 274 2 155 4 267 1 
28 1 138 1 87 1 285 1 62 1 215 2 140 1 80 1 274 1 289 1 267 1 155 2 
215 3 62 1 140 1 360 2 152 2 28 1 205 1 155 3 267 1 138 1 245 1 87 1 
222 2 71 1 219 1 87 2 
215 1 62 1 4 1 155 1 267 1 138 1 
215 2 62 1 140 1 28 1 274 1 202 1 155 2 267 1 138 1 87 1 
380 1 
215 1 62 1 140 1 28 1 155 1 267 1 138 1 87 1 
28 1 138 1 87 1 62 1 215 3 140 1 152 1 274 1 202 1 267 1 155 3 
76 1 232 1 87 1 196 1 
140 1 87 1 

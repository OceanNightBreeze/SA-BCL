#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (345,380) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 4 189 2 288 1 308 2 123 2 327 2 311 1 125 1 130 9 34 1 93 1 159 1 249 5 161 1 251 2 198 1 199 1 98 1 105 1 73 1 109 2 110 6 356 1 257 2 208 3 75 1 335 9 48 1 
151 4 189 2 288 1 308 2 123 2 327 2 311 1 125 1 130 9 34 1 93 1 159 1 249 5 161 1 198 1 251 2 199 1 98 1 105 1 73 1 109 2 110 6 356 1 257 2 208 3 75 1 335 9 48 1 
151 5 189 2 288 1 308 2 123 2 327 2 311 1 125 1 130 10 34 1 93 1 159 1 249 6 161 1 198 1 251 2 199 1 98 1 105 1 73 1 109 2 110 7 356 1 257 2 208 4 75 1 335 10 48 1 
151 3 189 2 288 1 308 2 123 2 327 2 125 1 130 7 34 1 93 1 159 1 249 4 161 1 198 1 251 1 199 1 98 1 105 1 73 1 109 2 110 4 356 1 257 2 208 2 75 1 335 7 48 1 
151 2 249 3 189 1 198 1 251 2 161 1 308 1 123 1 73 1 327 1 311 1 109 1 110 3 125 1 356 1 208 1 130 4 335 4 
249 1 198 1 98 1 308 1 123 1 105 1 327 1 109 1 125 1 356 1 257 1 130 2 117 1 335 2 185 1 336 1 
151 1 249 2 198 1 308 2 123 2 110 1 125 1 356 1 257 1 130 3 208 1 335 3 48 1 
151 4 189 1 287 1 288 1 308 2 123 2 327 1 311 1 125 1 130 9 34 1 92 1 249 5 198 1 251 2 161 1 73 1 110 7 109 1 356 1 257 1 208 3 48 1 335 9 
151 4 189 1 287 1 288 1 308 2 123 2 327 1 311 1 125 1 130 9 34 1 92 1 249 5 198 1 251 2 161 1 73 1 110 7 109 1 356 1 257 1 208 3 48 1 335 9 
152 1 
256 1 54 1 15 2 
355 2 179 2 200 2 316 2 350 2 197 1 64 2 218 1 
212 2 78 1 265 1 361 1 235 1 3 1 270 1 218 1 310 1 30 2 60 1 5 2 368 1 197 1 64 3 344 1 10 2 179 2 200 2 136 1 316 2 350 2 225 1 224 1 204 1 377 1 104 1 318 1 355 3 44 1 255 1 167 1 321 1 260 1 210 2 261 1 306 1 
355 1 179 1 200 1 223 1 316 1 172 1 350 1 6 1 197 1 64 1 
25 1 179 1 180 1 172 1 103 1 355 1 16 1 58 1 256 1 259 1 313 1 229 1 64 1 132 1 
25 1 179 1 180 2 200 1 316 1 350 1 172 1 355 1 16 1 58 1 256 1 259 1 313 1 64 1 132 2 
174 1 364 1 180 1 147 1 132 1 
174 1 180 2 256 1 292 1 32 1 147 1 313 1 132 2 
180 1 147 1 132 1 
180 1 179 1 223 1 200 1 316 1 172 1 337 1 350 1 174 1 355 1 6 1 197 1 64 1 132 1 
256 1 
174 1 180 2 256 1 292 1 147 1 191 1 313 1 132 2 
331 1 346 1 278 1 180 5 1 1 55 1 141 2 173 1 174 2 113 1 46 1 303 2 256 1 292 1 147 2 209 1 313 1 275 2 132 5 
212 1 10 1 265 1 179 1 200 1 350 1 224 1 296 1 377 1 270 1 240 1 355 2 30 1 44 1 255 1 167 1 260 1 64 2 261 1 186 1 
152 1 
179 2 13 1 200 1 316 1 350 1 218 2 355 2 21 1 64 2 
345 1 296 1 276 1 
271 1 250 1 172 1 218 1 
355 3 179 3 200 3 316 1 350 3 64 3 218 1 186 1 
355 1 179 1 200 1 172 1 350 1 6 1 64 1 
355 1 179 1 200 1 13 1 21 1 316 1 172 1 350 1 64 1 
212 1 25 1 265 1 361 1 215 1 235 1 172 1 3 1 270 1 218 1 240 1 310 1 58 1 30 1 5 1 368 1 197 1 64 4 344 1 132 1 10 1 179 3 180 1 13 1 200 3 136 1 316 2 350 3 224 1 377 1 104 1 318 1 43 1 355 4 16 1 44 1 255 1 167 1 259 1 321 1 260 1 210 2 261 1 186 1 
355 2 179 2 200 1 350 1 85 1 103 1 64 2 218 1 186 1 
25 1 180 1 179 3 13 1 200 3 316 1 172 1 350 3 240 1 192 1 16 1 355 3 43 1 58 1 256 1 259 1 64 3 186 2 132 1 
355 2 345 1 179 2 200 2 13 1 316 1 350 2 296 1 64 2 186 1 
212 1 10 1 265 1 224 1 270 1 377 1 218 1 355 1 30 1 44 1 255 1 167 1 260 1 64 1 261 1 
212 1 10 1 81 1 224 1 270 1 377 1 218 1 355 1 30 1 255 1 167 1 322 1 260 1 64 1 261 1 
361 1 170 1 235 2 3 1 4 1 155 1 5 4 367 1 368 1 7 1 276 2 344 1 345 2 136 1 351 1 40 1 204 2 296 2 254 1 380 1 321 1 359 1 210 2 360 1 
25 1 355 1 179 1 200 1 172 1 350 1 64 1 50 1 
179 5 200 4 13 1 316 1 350 4 85 1 103 1 218 1 240 1 146 1 355 5 64 5 150 1 186 2 
355 2 179 2 200 2 172 1 350 2 6 1 64 2 50 1 
373 1 187 1 
373 1 187 1 
246 1 358 1 
246 1 358 1 
246 1 358 1 
373 1 80 1 187 1 
373 1 80 1 187 1 
373 1 312 1 187 1 
11 1 373 2 246 1 358 1 315 1 187 2 
373 1 80 1 187 1 
373 1 317 1 187 1 
373 1 317 1 187 1 
373 1 317 1 187 1 
11 1 234 1 373 2 134 1 180 2 266 2 79 2 39 2 202 1 269 1 217 1 300 2 341 1 31 3 256 1 158 2 22 1 187 2 132 2 
373 1 179 2 180 1 163 1 324 1 266 1 79 1 200 2 39 1 350 2 290 1 217 1 218 1 56 1 145 1 300 1 355 2 59 1 31 1 312 1 8 1 64 2 187 1 132 1 
109 1 189 1 327 1 
109 1 327 1 336 1 
189 2 330 1 369 1 164 1 327 3 336 1 
189 1 330 1 182 1 164 1 327 2 336 1 
189 1 330 2 164 1 327 2 336 1 
119 2 324 1 54 1 290 1 195 1 174 4 4 1 243 1 292 1 313 1 7 1 275 1 132 5 346 1 180 5 252 1 14 1 280 2 351 1 100 1 141 1 297 1 15 3 145 1 46 2 303 1 256 2 147 1 209 3 382 2 284 1 360 1 
54 3 195 1 174 7 242 1 4 3 124 1 243 2 364 5 292 1 313 1 247 1 7 3 275 2 132 9 278 1 346 1 69 1 180 9 280 6 351 3 141 2 297 2 281 5 15 9 145 4 46 6 303 2 381 1 256 5 147 6 209 8 382 6 284 3 188 1 360 3 
119 1 54 2 174 2 4 1 243 1 313 1 7 1 275 1 132 3 278 1 180 3 14 1 280 2 100 1 351 1 141 1 297 1 145 1 15 4 303 1 46 2 256 3 209 3 284 1 382 2 360 1 
119 2 54 3 174 3 4 2 243 1 313 1 247 1 7 2 275 1 132 4 278 1 180 4 14 1 280 4 100 1 351 2 141 1 297 1 15 7 145 2 303 1 46 4 256 4 381 1 209 5 382 4 284 2 188 1 360 2 
152 1 
255 1 101 1 
45 1 
255 1 377 1 
255 3 377 1 261 1 49 2 169 1 262 1 
255 1 377 1 261 1 
255 1 283 1 
135 1 235 3 2 1 351 1 40 2 254 3 204 4 352 1 353 1 241 1 298 2 18 1 17 1 111 1 126 1 5 7 360 1 
135 1 235 3 2 1 351 1 40 2 254 3 204 4 352 1 353 1 241 1 298 2 18 1 17 1 111 1 126 1 5 7 360 1 
51 1 135 1 235 3 2 1 351 1 40 2 254 3 204 4 352 1 353 1 241 1 298 2 18 1 17 1 111 1 126 1 5 7 360 1 
361 1 82 3 235 15 2 2 3 1 241 1 86 4 194 1 4 3 329 1 244 1 126 2 5 31 368 1 7 3 63 1 344 1 135 1 351 4 70 1 40 5 204 16 254 10 352 2 353 2 298 3 18 1 111 1 17 5 284 3 183 1 210 2 184 1 360 4 
361 2 26 1 2 1 235 4 3 2 329 1 126 1 5 9 91 1 368 2 344 2 135 1 351 1 40 3 204 5 254 4 352 1 353 1 298 2 17 1 111 1 18 1 210 4 360 1 
212 1 189 1 286 1 307 1 308 1 123 1 154 1 327 2 125 1 30 1 127 1 130 2 365 1 221 1 369 1 249 1 370 1 10 1 95 1 198 1 332 1 224 1 110 1 109 1 356 1 257 1 335 2 260 1 285 1 336 1 
212 1 189 1 286 1 190 1 308 1 123 1 154 1 327 2 125 1 30 1 127 1 130 3 365 1 221 1 369 1 249 1 370 1 10 1 95 1 332 1 224 1 72 1 378 1 109 1 110 2 356 1 257 1 335 3 260 1 336 1 
212 1 286 1 189 1 190 1 154 1 327 2 125 1 30 1 127 1 130 2 221 1 369 1 249 1 10 1 95 1 332 1 224 1 72 1 110 2 109 1 356 1 257 1 335 2 260 1 336 1 
212 1 10 1 286 2 95 2 325 1 289 1 308 1 123 1 270 1 143 1 154 2 378 1 30 1 47 1 257 2 130 1 335 1 
212 1 189 1 286 1 190 1 308 1 123 1 154 1 327 2 30 1 127 1 130 1 365 1 221 1 369 1 370 1 10 1 95 1 198 1 332 1 224 1 109 1 257 1 335 1 260 1 285 1 336 1 
371 1 
212 2 213 2 54 2 172 1 309 2 270 2 57 1 58 1 61 2 128 4 313 1 177 1 275 1 64 1 132 5 10 2 346 1 180 5 179 1 139 1 226 1 227 1 224 1 141 1 15 2 228 1 355 1 16 1 147 6 229 1 232 1 25 1 27 1 83 1 156 2 30 2 292 3 366 1 96 2 162 1 377 1 297 1 41 1 103 1 107 2 112 2 205 1 46 2 303 1 255 1 256 2 209 2 259 1 116 1 260 1 
25 1 27 1 191 1 172 1 57 1 58 1 128 2 61 1 292 1 64 1 132 3 162 1 179 1 180 3 103 1 41 1 228 1 355 1 16 1 147 2 259 1 229 1 
25 1 27 1 191 1 172 1 57 1 58 1 128 3 292 1 313 1 64 1 132 3 162 1 179 1 180 3 103 1 41 1 228 1 355 1 16 1 112 1 256 1 147 1 259 1 229 1 
25 1 27 1 191 1 172 1 57 1 58 1 292 1 128 3 61 1 313 1 64 1 132 3 162 1 179 1 180 3 103 1 41 1 107 1 228 1 355 1 16 1 112 1 256 1 147 2 259 1 229 1 
213 2 25 1 27 1 191 1 54 2 172 1 309 2 57 1 156 2 58 1 292 3 128 6 61 4 220 1 274 1 313 5 275 1 64 1 132 5 277 1 96 2 346 1 67 1 162 1 179 1 180 5 139 1 141 1 103 1 41 1 107 4 228 1 355 1 16 1 112 4 205 1 46 1 303 1 256 5 319 1 147 7 209 1 259 1 229 1 
213 2 172 1 54 2 309 2 57 1 58 1 128 4 61 2 313 1 275 1 64 1 132 4 346 1 179 1 180 4 139 1 141 1 15 2 228 1 16 1 355 1 147 4 229 1 232 1 25 1 27 1 156 2 292 2 162 1 96 2 103 1 41 1 107 2 112 2 205 1 303 1 46 1 256 2 209 1 259 1 
213 2 25 1 27 1 54 2 172 1 309 2 57 1 156 2 58 1 61 2 292 2 128 4 274 1 313 1 275 1 64 1 132 4 277 1 96 2 162 1 346 1 179 1 180 4 139 1 103 1 41 1 141 1 107 2 228 1 355 1 16 1 112 2 205 1 46 1 303 1 256 1 147 4 319 1 209 1 259 1 229 1 
213 2 25 1 27 1 54 2 172 1 309 2 57 1 156 2 58 1 61 2 292 2 128 4 274 1 313 1 275 1 64 1 132 4 277 1 96 2 162 1 346 1 179 1 180 4 139 1 103 1 41 1 141 1 107 2 228 1 355 1 16 1 112 2 205 1 46 1 303 1 256 1 147 4 319 1 209 1 259 1 229 1 
213 2 25 1 52 1 27 1 172 1 57 1 328 2 156 2 58 1 61 2 292 2 128 4 313 1 275 1 64 1 314 2 132 4 277 1 66 1 162 1 346 1 179 1 180 4 139 1 103 1 41 1 141 1 107 2 15 2 228 1 355 1 16 1 112 2 46 1 303 1 256 1 147 4 209 1 320 1 259 1 229 1 
213 2 25 1 27 1 54 2 172 1 309 2 57 1 156 2 58 1 292 2 128 5 61 3 274 1 313 1 275 1 64 1 132 4 277 1 96 2 346 1 162 1 67 1 179 1 180 4 139 1 141 1 103 1 41 1 107 3 228 1 355 1 16 1 112 3 205 1 46 1 303 1 256 1 319 1 147 5 209 1 259 1 229 1 
213 2 25 1 27 1 54 2 172 1 309 2 57 1 156 2 58 1 292 2 128 5 61 3 274 1 313 1 275 1 64 1 132 4 277 1 96 2 346 1 162 1 67 1 179 1 180 4 139 1 141 1 103 1 41 1 107 3 228 1 355 1 16 1 112 3 205 1 46 1 303 1 256 1 319 1 147 5 209 1 259 1 229 1 
213 2 172 1 57 1 58 1 128 4 61 2 313 1 275 1 64 1 314 2 132 4 346 1 179 1 180 4 139 1 141 1 15 2 228 1 16 1 355 1 147 4 320 1 229 1 232 1 25 1 27 1 328 2 156 2 292 2 162 1 103 1 41 1 107 2 112 2 303 1 46 1 256 1 209 1 259 1 
361 1 152 1 136 1 368 1 3 1 321 1 359 1 210 2 344 1 
361 2 53 1 235 6 82 3 3 2 218 1 338 1 86 3 310 1 4 1 244 1 60 1 5 14 62 1 368 2 7 2 63 1 276 11 344 2 345 4 253 1 136 2 351 2 40 1 254 2 296 11 204 8 17 1 114 1 321 1 284 2 210 4 360 1 
361 1 235 1 84 1 3 1 218 1 240 1 310 1 60 1 5 2 368 1 64 1 94 1 344 1 250 1 345 1 179 1 200 1 136 1 350 1 204 1 299 1 355 1 114 1 321 1 210 2 186 1 
212 3 263 2 265 2 216 2 3 3 270 1 218 2 310 1 4 2 126 1 60 1 5 20 7 2 64 3 276 7 344 3 10 3 345 7 179 1 135 1 136 3 350 1 351 3 224 2 352 1 318 2 18 1 355 3 17 4 74 2 321 3 284 2 230 2 360 3 186 1 77 1 361 3 190 1 235 10 240 1 30 3 368 3 294 1 200 1 37 1 40 4 377 2 296 7 204 10 254 8 298 1 111 1 44 2 255 2 114 1 167 2 260 2 210 6 261 2 
212 7 78 2 307 1 361 2 267 1 190 1 235 1 28 1 3 2 270 2 310 1 340 1 30 8 60 1 5 2 368 2 64 1 344 2 10 8 133 1 179 1 200 1 136 2 350 1 224 2 226 1 102 1 204 1 377 2 142 1 355 1 255 3 321 2 116 1 359 1 260 2 210 4 211 1 186 1 
355 1 179 1 200 1 13 1 316 1 350 1 64 1 9 1 
345 1 361 1 170 1 136 1 351 1 3 1 254 1 296 1 204 2 17 1 5 2 321 1 368 1 7 1 359 1 210 2 276 1 344 1 
345 1 361 1 136 1 235 2 40 1 3 1 254 1 296 1 4 1 5 2 367 1 321 1 368 1 359 1 210 2 276 1 344 1 360 1 
345 2 361 1 136 1 235 2 351 1 40 1 3 1 254 2 296 2 204 2 4 1 17 1 5 4 321 1 368 1 284 1 7 1 359 1 210 2 276 2 360 1 344 1 
133 1 345 1 361 1 170 1 136 1 351 1 3 1 254 1 296 1 204 2 17 1 5 2 321 1 368 1 7 1 210 2 276 1 344 1 
133 1 345 1 361 1 136 1 235 2 40 1 3 1 254 1 296 1 4 1 5 2 367 1 321 1 368 1 210 2 276 1 344 1 360 1 
133 1 345 2 361 1 136 1 235 2 351 1 40 1 3 1 254 2 296 2 204 2 4 1 17 1 5 4 321 1 368 1 284 1 7 1 210 2 276 2 360 1 344 1 
345 2 361 1 136 1 235 2 351 1 40 1 3 1 254 2 296 2 204 2 4 1 17 1 5 4 321 1 368 1 284 1 7 1 210 2 276 2 360 1 344 1 
212 1 265 1 361 1 235 1 3 1 270 1 218 1 310 1 30 1 60 1 5 2 368 1 64 1 344 1 10 1 136 1 224 1 204 1 377 1 318 1 355 1 44 1 255 1 167 1 321 1 260 1 210 2 261 1 
212 1 361 1 0 1 81 1 235 1 3 1 270 1 218 1 310 1 30 1 60 1 5 2 368 1 64 1 344 1 10 1 136 1 224 1 204 1 377 1 355 1 255 1 167 1 321 1 260 1 322 1 210 2 261 1 
345 2 361 1 136 1 235 2 351 1 40 1 3 1 254 2 296 2 204 2 4 1 17 1 5 4 114 1 321 1 368 1 284 1 7 1 210 2 276 2 360 1 344 1 
263 1 212 1 265 1 307 1 361 1 235 2 3 1 4 1 30 1 5 4 7 1 368 1 64 1 276 2 344 1 10 1 345 2 136 1 351 1 40 1 224 1 254 2 296 2 204 2 377 1 318 1 17 1 355 1 44 1 255 1 167 1 321 1 284 1 260 1 210 2 261 1 360 1 
361 1 235 1 3 1 4 1 5 3 368 1 7 1 64 1 276 1 344 1 345 1 179 1 13 1 200 1 136 1 316 1 350 1 351 1 254 1 181 1 204 2 296 1 17 1 355 1 114 1 321 1 284 1 210 2 360 1 
24 1 264 1 323 1 361 3 26 1 268 1 235 21 82 3 153 1 3 3 29 1 86 4 329 1 4 4 244 3 126 1 5 41 368 3 7 4 63 1 344 3 347 1 135 1 279 1 137 4 351 5 40 4 204 20 254 8 352 1 298 1 165 1 333 1 18 1 111 1 17 4 334 1 207 2 284 4 210 6 76 1 23 1 360 5 
24 1 264 1 323 1 361 4 26 1 268 1 235 18 82 3 153 1 3 4 29 1 86 4 329 2 4 3 244 3 126 1 5 38 368 4 7 4 63 1 344 4 347 1 135 1 279 1 137 4 351 5 40 4 204 20 254 7 352 1 298 1 165 1 333 1 18 1 111 1 17 3 334 1 207 2 284 4 210 8 76 1 23 1 360 4 
24 1 264 1 323 1 361 2 26 1 268 1 235 25 82 4 153 1 3 2 338 2 29 1 86 4 329 1 4 7 244 2 126 1 5 52 368 2 7 7 63 2 344 2 347 1 135 1 279 1 137 4 351 8 40 7 204 27 254 14 352 1 298 1 333 1 18 1 111 1 17 7 334 1 207 1 284 7 210 4 76 1 360 8 
264 1 323 2 361 2 26 1 268 1 235 10 82 1 362 1 153 1 3 2 86 2 4 3 244 1 5 19 368 2 7 3 63 1 344 2 137 2 351 3 40 3 204 9 254 6 17 3 207 1 284 3 210 4 76 1 23 1 360 3 
264 1 24 1 323 1 361 3 26 1 268 1 235 12 82 2 153 2 3 3 29 1 86 2 329 2 4 2 244 2 5 26 368 3 7 3 344 3 347 1 279 1 137 4 351 3 40 2 254 4 204 14 333 1 17 2 334 1 207 2 284 3 210 6 76 1 360 2 
300 1 11 1 374 1 373 1 79 1 266 1 39 1 269 1 22 1 187 1 
312 1 8 1 
300 1 19 1 373 1 79 1 266 1 39 1 376 1 187 1 354 1 
11 1 234 1 373 1 180 1 266 1 79 1 39 1 202 1 269 1 217 1 300 1 341 1 31 2 256 1 158 1 22 1 187 1 132 1 
11 1 234 1 373 1 180 1 266 1 79 1 39 1 202 1 269 1 217 1 300 1 341 1 31 2 256 1 158 1 22 1 187 1 132 1 
11 1 234 1 373 1 180 1 266 1 79 1 39 1 202 1 269 1 217 1 300 1 341 1 31 2 256 1 158 1 22 1 187 1 132 1 
80 1 231 1 315 1 
80 1 231 1 315 1 
245 1 317 1 
245 1 317 1 315 1 
163 1 56 1 
79 1 266 1 324 1 236 1 290 1 218 1 56 1 174 1 59 1 31 1 312 1 158 1 8 1 64 2 132 1 373 1 180 1 179 2 163 1 200 2 202 1 39 1 350 2 145 1 300 1 355 2 187 1 
80 1 231 1 
245 1 317 1 315 1 
212 2 78 2 361 1 235 1 28 1 3 1 193 1 310 1 340 1 30 2 60 1 219 1 5 2 368 1 64 2 344 1 222 1 10 2 97 1 179 2 136 1 224 1 377 1 204 1 355 2 255 1 114 1 321 1 305 1 260 1 210 2 
212 2 189 1 10 2 332 1 307 1 293 1 190 1 349 1 224 1 121 1 327 2 154 1 109 1 30 2 127 1 365 1 369 1 260 1 336 1 
212 1 189 1 10 1 332 1 190 1 349 1 203 1 224 1 327 2 154 1 109 1 30 1 127 1 365 1 369 1 260 1 336 1 
212 1 10 1 30 1 325 1 121 1 270 1 131 1 154 1 
212 1 189 1 10 1 332 1 293 1 190 1 349 1 224 1 121 1 327 2 154 1 109 1 30 1 127 1 365 1 369 1 260 1 336 1 
239 1 
152 1 
54 1 309 1 292 1 313 1 275 1 132 1 346 1 96 1 180 1 141 1 15 1 205 1 46 1 303 1 256 2 147 1 209 1 
212 3 307 1 216 2 54 6 55 1 122 2 270 1 4 2 273 1 313 2 7 2 275 4 132 5 10 3 346 4 180 5 280 6 351 2 224 4 141 4 15 12 16 2 147 5 283 2 284 2 149 2 360 2 233 1 291 2 326 2 30 3 292 3 366 1 248 2 201 1 375 2 101 3 99 2 297 2 377 3 301 1 113 1 255 10 303 4 46 8 256 8 209 9 304 2 168 1 382 6 260 3 261 3 169 1 49 2 
24 1 82 1 54 3 339 1 291 2 86 1 4 2 244 1 196 1 292 1 366 1 313 2 7 2 275 2 132 1 346 2 347 1 180 1 375 1 279 1 280 5 351 2 297 1 141 2 15 6 333 1 334 1 303 2 46 5 256 5 147 1 209 8 382 5 284 2 360 2 
172 1 337 1 291 2 126 1 6 1 275 1 197 1 64 1 132 1 346 1 180 1 179 1 223 1 200 1 375 1 316 1 351 2 350 1 141 1 352 1 355 1 18 1 303 1 46 2 20 1 319 1 209 2 360 1 
346 1 55 1 141 1 113 1 303 1 46 1 256 1 209 1 313 1 275 1 
216 1 375 1 280 5 351 2 54 5 291 2 15 10 4 2 46 5 256 5 209 5 284 2 7 2 382 5 360 2 
180 1 256 1 292 1 147 1 313 1 132 1 
212 4 83 1 270 2 30 4 292 2 129 1 366 2 275 2 132 3 10 4 278 1 346 1 180 3 224 1 227 1 226 1 140 1 377 1 141 2 297 2 301 1 255 1 303 2 46 2 147 4 209 2 116 1 260 1 233 2 
212 1 265 1 361 1 235 1 3 1 270 1 218 1 310 1 30 1 5 1 368 1 197 1 64 3 344 1 10 1 179 2 200 2 136 1 316 2 350 2 224 1 377 1 104 1 318 1 355 3 44 1 255 1 167 1 321 1 260 1 210 2 261 1 
346 1 280 2 54 2 141 1 297 1 298 1 15 4 46 2 303 1 256 4 209 1 366 1 313 2 382 2 275 1 
214 1 79 1 266 1 
214 1 79 1 266 1 
79 1 266 1 269 1 178 1 56 1 
214 1 79 1 266 1 
79 1 266 1 106 1 
79 1 266 1 106 1 
79 1 266 1 106 1 
79 1 266 1 
373 1 187 1 
361 1 26 1 82 1 235 4 3 1 86 1 244 1 126 1 5 8 368 1 344 1 135 1 351 1 40 2 204 4 254 2 352 1 298 1 333 1 111 1 18 1 210 2 360 1 
361 2 26 1 235 5 82 1 3 2 86 2 244 1 126 1 5 11 368 2 7 1 63 1 344 2 135 1 351 2 40 2 204 6 254 3 352 1 298 1 333 1 18 1 111 1 17 1 206 1 284 1 210 4 360 1 
24 1 361 3 26 1 82 1 235 10 3 3 86 1 4 2 329 1 244 1 126 1 5 19 368 3 7 2 344 3 347 1 135 1 279 1 351 3 40 3 204 9 254 4 352 1 298 1 333 1 18 1 111 1 17 1 334 1 206 1 284 2 210 6 360 3 
24 1 361 3 26 1 82 1 235 7 3 3 86 1 329 1 4 1 244 1 126 1 5 17 368 3 7 2 344 3 347 1 135 1 279 1 351 3 40 3 204 10 254 5 352 1 298 1 333 1 18 1 111 1 17 2 334 1 206 1 284 2 210 6 360 2 
361 1 26 1 82 1 235 4 3 1 86 1 244 1 126 1 5 8 368 1 344 1 135 1 351 1 40 2 204 4 254 2 352 1 298 1 333 1 111 1 18 1 210 2 360 1 
24 1 361 1 26 1 82 1 235 6 3 1 86 1 4 2 244 1 5 12 368 1 7 2 344 1 347 1 279 1 351 2 40 1 204 6 254 2 333 1 17 1 334 1 284 2 210 2 360 2 
24 1 361 4 26 1 235 8 82 1 3 4 86 1 4 1 329 2 244 1 126 1 5 18 368 4 7 2 344 4 347 1 135 1 279 1 351 3 40 3 204 10 254 5 352 1 298 1 333 1 18 1 111 1 17 2 334 1 206 1 284 2 210 8 360 2 
24 1 361 4 26 1 235 7 82 1 3 4 86 1 4 2 329 2 244 1 5 16 368 4 7 3 344 4 347 1 279 1 351 3 40 3 204 9 254 6 333 1 17 3 334 1 284 3 210 8 23 1 360 2 
135 1 235 4 351 1 40 3 254 6 204 3 352 3 111 2 17 3 18 1 126 3 5 7 360 1 
24 1 361 4 26 1 235 8 82 1 3 4 86 1 4 1 329 2 244 1 126 1 5 18 368 4 7 2 344 4 347 1 135 1 279 1 351 3 40 3 204 10 254 4 352 1 298 1 333 1 18 1 111 1 17 1 334 1 284 2 210 8 23 1 360 2 
361 2 135 1 235 4 351 1 40 2 3 2 204 4 254 3 352 1 298 1 18 1 17 1 329 1 111 1 126 1 5 8 368 2 210 4 360 1 344 2 
152 1 
361 1 235 2 351 1 40 1 3 1 254 2 204 2 4 1 17 1 206 1 5 4 368 1 284 1 7 1 210 2 360 1 344 1 
235 4 82 1 351 1 40 1 204 3 254 2 86 2 4 1 17 1 244 1 5 7 284 1 7 1 63 1 360 1 
361 2 82 2 235 12 3 2 338 1 86 2 4 2 329 2 126 2 5 23 7 2 368 2 63 1 344 2 135 1 253 1 351 3 40 5 254 9 204 11 352 2 298 1 18 1 111 1 17 4 302 1 284 2 210 4 360 3 
5 1 235 1 86 1 
5 1 82 1 204 1 
361 1 216 1 235 3 351 1 3 1 40 2 204 3 254 3 17 1 4 1 206 1 5 6 368 1 284 1 7 1 210 2 344 1 360 1 
24 1 361 1 26 1 82 1 235 6 3 1 86 1 4 2 244 1 5 12 368 1 7 2 344 1 347 1 279 1 351 2 40 1 204 6 254 2 333 1 17 1 334 1 284 2 210 2 360 2 
235 3 351 1 40 1 204 3 254 2 352 1 18 1 17 1 126 1 5 6 360 1 
361 1 135 1 235 2 40 1 3 1 204 1 254 2 352 1 17 1 111 1 329 1 126 1 302 1 5 3 368 1 210 2 344 1 
361 1 26 1 235 5 351 2 3 1 40 3 254 5 204 5 352 2 17 2 18 1 126 2 5 10 20 1 368 1 210 2 344 1 360 2 
361 1 26 1 351 1 3 1 204 2 254 1 17 1 5 2 368 1 7 1 210 2 344 1 
361 1 26 1 235 2 351 1 40 1 3 1 254 2 204 2 4 1 17 1 5 4 368 1 284 1 7 1 210 2 360 1 344 1 
361 3 26 1 235 2 3 3 40 1 254 2 204 1 352 1 329 1 17 1 126 1 302 1 5 3 368 3 210 6 23 1 344 3 
361 5 26 1 235 18 82 3 3 5 86 4 329 2 4 3 244 1 126 3 5 34 368 5 7 3 63 1 344 5 135 1 70 1 351 5 40 7 204 16 254 12 352 3 298 1 18 2 111 1 17 5 302 1 206 1 284 3 183 1 184 1 210 10 23 1 360 5 
355 1 179 1 115 1 85 1 64 1 103 1 218 1 
160 1 355 1 179 1 115 1 157 1 33 1 295 1 85 1 64 1 103 1 238 1 218 1 
212 1 10 1 30 1 152 1 270 1 
212 1 10 1 265 1 179 1 200 1 350 1 224 1 377 1 270 1 218 1 355 2 30 1 255 1 167 1 260 1 64 2 261 1 186 1 
212 1 25 1 10 1 265 1 179 2 200 2 172 1 350 1 224 1 377 2 218 1 355 2 30 1 255 3 167 1 259 1 283 1 149 1 260 1 64 2 261 2 186 1 233 1 
212 2 25 1 10 2 179 2 200 2 171 1 172 1 350 1 224 1 377 2 218 1 355 2 30 2 255 3 167 1 259 1 283 1 149 1 322 1 260 1 64 2 261 2 186 1 233 1 
212 3 10 3 348 1 180 2 171 1 101 1 224 1 270 1 377 1 16 1 30 3 255 4 256 1 282 1 147 1 313 1 283 1 149 1 260 1 261 1 49 1 132 2 233 1 
212 3 10 3 180 2 171 1 101 1 224 1 270 1 377 1 326 1 16 1 30 3 255 4 256 1 147 1 313 1 283 1 149 1 260 1 261 1 49 1 132 2 233 1 
212 1 10 1 30 1 267 1 224 1 260 1 
212 6 10 7 78 1 307 1 267 1 190 1 28 1 138 1 237 1 224 3 102 1 270 2 377 2 142 1 343 1 30 7 255 3 260 2 211 1 261 1 169 1 
212 1 263 1 265 1 361 2 307 1 235 3 3 2 218 2 126 1 30 1 5 6 368 2 64 2 276 1 344 2 10 1 345 1 179 1 200 1 135 1 136 2 351 1 350 1 40 2 224 1 296 1 204 3 254 2 377 1 352 1 318 1 298 1 18 1 111 1 355 2 44 1 255 1 114 1 167 1 321 2 305 1 260 1 210 4 261 1 230 1 360 1 186 1 
212 1 55 1 270 1 122 1 326 1 174 1 30 1 292 1 313 1 275 2 248 1 132 3 10 1 346 2 180 3 101 1 141 2 301 1 16 1 113 1 46 1 303 2 255 2 256 1 147 2 209 1 304 1 49 1 
212 2 10 2 307 1 267 1 201 1 224 2 377 1 30 2 255 2 260 1 261 1 49 1 169 1 
212 4 10 4 307 1 171 1 224 1 226 1 270 1 377 1 30 4 255 1 116 1 260 1 65 1 
77 1 212 2 10 2 372 1 237 1 224 2 377 1 343 1 30 2 255 1 258 1 260 1 261 1 233 1 
212 1 109 1 10 1 332 1 30 1 224 1 260 1 270 1 327 1 336 1 
212 2 10 2 307 1 97 1 190 1 28 1 224 1 377 1 30 2 255 1 260 1 
212 4 10 5 307 1 28 1 226 1 224 2 270 1 377 2 142 1 30 5 255 3 116 1 260 2 211 1 65 1 233 1 
212 4 10 5 307 1 28 1 226 1 224 2 270 1 377 2 42 1 30 5 255 3 116 1 260 2 211 1 65 1 233 1 
212 1 10 1 179 1 200 1 350 1 224 1 377 1 270 1 218 1 355 2 30 1 255 1 167 1 322 1 260 1 64 2 261 1 186 1 
212 1 10 1 138 1 237 1 224 2 377 1 343 1 30 1 255 1 260 1 261 1 169 1 233 1 
108 1 272 1 90 1 71 1 218 1 
25 1 180 2 120 1 172 1 71 1 218 1 174 1 108 2 16 1 43 1 87 1 58 1 272 2 256 1 175 1 259 1 90 2 313 1 132 2 
179 1 71 1 193 1 108 1 355 1 272 1 219 1 64 1 222 1 
87 1 175 1 71 1 
152 1 
249 1 125 1 356 1 130 1 308 1 335 1 123 1 
95 1 257 1 130 1 
249 1 125 1 198 1 356 1 38 1 130 3 308 1 335 3 123 1 105 2 144 1 118 1 
249 1 110 1 125 1 251 1 356 1 130 2 308 1 335 2 123 1 
249 1 151 1 109 1 189 1 161 1 198 1 130 1 308 1 335 1 123 1 327 1 
249 1 198 1 356 1 130 1 308 1 335 1 123 1 
125 1 198 1 356 2 130 1 308 1 335 1 123 1 
249 1 198 1 342 1 356 1 130 2 363 1 308 2 335 2 123 2 35 1 
151 1 249 2 198 1 288 1 308 1 123 1 110 2 125 1 356 1 130 3 208 1 34 1 335 3 
249 1 189 1 198 1 308 1 123 1 327 2 109 1 110 1 125 1 356 1 357 1 130 2 369 1 335 2 336 1 
151 1 249 2 198 1 251 1 308 2 123 2 311 1 110 2 125 1 356 1 130 4 208 1 335 4 
249 1 125 1 198 1 356 1 130 1 308 1 335 1 123 1 
151 1 249 3 38 1 308 1 123 1 105 1 110 2 125 2 166 1 356 2 130 4 208 1 335 4 118 1 
249 1 110 1 36 1 125 1 198 1 356 1 287 1 89 1 130 2 308 1 335 2 123 1 
249 1 198 1 38 1 308 1 123 1 105 2 125 1 88 1 356 1 130 3 335 3 118 2 
249 2 68 2 12 1 148 1 
379 1 198 1 130 1 308 1 335 1 123 1 
249 1 110 1 125 1 198 1 356 1 288 1 130 2 308 1 335 2 123 1 
176 1 
249 1 125 1 198 1 356 1 130 1 308 1 335 1 123 1 
249 1 110 1 125 1 198 1 356 1 288 1 130 3 308 1 335 3 123 1 105 1 
249 1 151 1 166 1 208 1 
249 1 356 1 

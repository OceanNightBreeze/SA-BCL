#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 113 168 204 94 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 295 2 148 9 366 9 99 1 59 3 208 2 151 2 101 1 77 1 11 1 42 1 79 1 233 1 212 1 214 2 238 1 133 1 83 1 44 1 353 4 310 2 51 1 117 2 381 5 163 1 139 2 253 6 
200 1 295 2 148 9 366 9 99 1 59 3 208 2 151 2 101 1 77 1 11 1 42 1 79 1 233 1 212 1 238 1 214 2 133 1 83 1 44 1 353 4 310 2 51 1 117 2 381 5 163 1 139 2 253 6 
200 1 295 2 148 10 366 10 99 1 59 4 208 2 151 2 101 1 77 1 11 1 42 1 79 1 233 1 212 1 238 1 214 2 133 1 83 1 44 1 353 5 310 2 51 1 117 2 381 6 163 1 139 2 253 7 
200 1 295 2 148 7 366 7 99 1 59 2 208 2 151 2 101 1 77 1 42 1 79 1 233 1 212 1 238 1 214 1 133 1 83 1 44 1 353 3 310 2 51 1 117 2 381 4 163 1 139 2 253 4 
79 1 212 1 295 1 238 1 214 2 148 4 353 2 366 4 59 1 208 1 151 1 77 1 51 1 381 3 117 1 11 1 139 1 253 3 
79 1 212 1 167 1 295 1 148 2 310 1 366 2 99 1 208 1 101 1 151 1 51 1 381 1 139 1 39 1 164 1 
79 1 212 1 83 1 148 3 353 1 310 1 366 3 59 1 151 2 51 1 381 2 139 2 253 1 
295 1 319 1 207 1 148 9 366 9 59 3 208 1 151 2 77 1 11 1 79 1 233 1 212 1 238 1 214 2 83 1 44 1 353 4 310 1 51 1 381 5 117 1 139 2 253 7 
295 1 319 1 207 1 148 9 366 9 59 3 208 1 151 2 77 1 11 1 79 1 233 1 212 1 238 1 214 2 83 1 44 1 353 4 310 1 51 1 381 5 117 1 139 2 253 7 
345 1 97 1 263 1 
345 1 31 1 221 2 
149 2 259 1 236 2 266 1 206 2 33 2 140 2 134 2 
359 1 341 1 28 2 93 1 169 1 168 2 204 1 145 1 206 2 364 1 33 2 301 1 149 3 259 1 369 1 333 1 41 1 40 1 211 1 155 1 156 2 236 3 105 1 239 1 306 1 266 1 134 2 20 1 88 2 289 1 113 2 313 1 24 1 25 1 138 1 198 1 140 2 
149 1 213 1 236 1 325 1 271 1 266 1 206 1 33 1 140 1 134 1 
127 1 103 1 213 1 236 2 271 2 266 1 244 1 206 2 257 1 33 1 134 1 345 1 149 2 325 1 328 1 263 1 292 1 140 1 
103 1 213 1 236 2 271 2 266 1 244 1 206 2 257 1 33 2 134 2 173 1 345 1 149 2 325 1 281 1 263 1 292 1 140 2 
368 1 23 1 64 1 281 1 173 1 
345 1 367 1 368 1 186 1 23 1 281 2 263 1 173 2 
368 1 281 1 173 1 
213 1 236 1 271 1 266 1 244 1 206 1 33 1 173 1 134 1 149 1 325 1 23 1 281 1 140 1 
345 1 
345 1 53 1 368 1 186 1 23 1 281 2 263 1 173 2 
16 1 186 1 240 2 43 1 82 2 85 1 173 5 108 1 345 1 122 2 23 2 279 1 368 2 281 5 232 1 263 1 283 1 337 1 78 1 
259 1 97 1 
236 2 206 2 33 1 134 1 269 1 149 2 259 2 314 1 140 1 
258 1 201 1 335 1 
155 1 28 1 236 1 93 1 168 1 239 1 145 1 66 1 301 1 149 1 259 1 113 1 24 1 198 1 333 1 40 1 
155 1 28 1 93 1 236 2 201 1 15 1 168 1 239 1 145 1 206 1 228 1 134 1 301 1 149 2 113 1 24 1 198 1 333 1 40 1 140 1 
149 3 259 1 236 3 206 3 33 1 228 1 140 3 134 3 
149 1 236 1 325 1 271 1 206 1 140 1 134 1 
269 1 149 1 236 1 271 1 314 1 206 1 33 1 140 1 134 1 
103 1 236 2 271 1 15 1 257 1 206 2 33 1 228 1 134 2 57 1 149 2 249 1 314 1 292 1 140 2 
175 1 149 2 259 1 236 2 328 1 206 2 140 1 134 1 228 1 
103 1 236 1 271 1 15 1 206 1 257 1 56 1 228 1 134 1 149 1 249 1 292 1 140 1 
236 2 201 1 206 2 33 1 228 1 134 2 258 1 149 2 314 1 140 2 
155 1 28 1 236 1 93 1 168 1 239 1 145 1 301 1 149 1 259 1 113 1 24 1 333 1 198 1 40 1 
155 1 28 1 236 1 30 1 93 1 168 1 145 1 309 1 301 1 149 1 259 1 113 1 24 1 333 1 198 1 
359 2 166 1 340 1 341 1 201 2 146 1 32 1 344 1 3 1 258 2 369 1 41 1 13 1 156 2 306 1 335 2 20 1 356 1 220 1 88 4 313 2 138 1 68 1 315 1 
119 1 149 1 236 1 271 1 257 1 206 1 140 1 134 1 
236 5 15 1 374 1 98 1 206 5 33 1 228 2 134 4 175 1 149 5 259 1 328 1 314 1 140 4 
119 1 149 2 236 2 325 1 271 1 206 2 140 2 134 2 
142 1 318 1 
142 1 318 1 
121 1 250 1 
121 1 250 1 
121 1 250 1 
130 1 142 1 318 1 
130 1 142 1 318 1 
142 1 318 1 65 1 
121 1 360 1 250 1 142 2 318 2 231 1 
130 1 142 1 318 1 
372 1 142 1 318 1 
372 1 142 1 318 1 
372 1 142 1 318 1 
12 2 294 2 29 1 318 2 142 2 362 1 375 2 159 1 173 2 268 1 345 1 336 3 136 1 231 1 280 1 90 2 281 2 380 1 197 2 
12 1 80 1 128 1 52 1 294 1 334 1 236 2 318 1 142 1 375 1 206 2 65 1 173 1 134 2 355 1 336 1 149 2 379 1 259 1 102 1 280 1 281 1 90 1 140 2 
295 1 208 1 117 1 
167 1 295 1 208 1 
14 1 167 1 295 3 262 1 195 1 117 2 
323 1 14 1 167 1 295 2 262 1 117 1 
14 1 167 1 295 2 262 2 117 1 
166 1 340 1 31 1 144 1 343 1 32 1 173 5 3 1 345 2 122 1 7 2 368 1 8 1 281 5 263 1 80 1 126 1 349 1 334 1 240 1 186 1 43 1 82 1 19 1 85 3 47 2 355 1 311 2 221 3 290 1 23 4 337 2 
166 2 0 1 340 2 31 2 32 2 72 1 173 8 274 1 3 2 345 4 76 4 122 2 7 4 368 5 8 1 232 1 281 8 152 1 263 1 264 1 349 2 334 4 81 1 186 1 240 2 43 1 64 4 82 2 19 2 85 6 47 4 221 6 290 2 23 6 337 4 
166 1 340 1 31 2 343 1 32 1 173 3 3 1 345 3 122 1 7 2 281 3 232 1 263 1 126 1 349 1 334 1 240 1 82 1 19 1 85 3 47 2 311 1 290 1 221 4 23 2 337 2 
166 1 340 1 0 1 31 2 343 1 32 1 173 3 274 1 3 1 345 2 122 1 7 2 281 3 232 1 126 1 349 1 334 2 81 1 240 1 82 1 19 1 85 3 47 2 311 1 221 4 290 1 23 2 337 2 
361 1 97 1 198 1 
49 1 198 1 
111 1 
93 1 198 1 
361 2 93 1 24 1 297 1 26 1 198 3 
93 1 24 1 198 1 
48 1 198 1 
359 3 226 1 202 1 185 1 132 2 188 1 32 1 344 3 322 1 299 1 219 1 3 1 109 1 4 1 88 7 313 4 68 2 
359 3 226 1 202 1 185 1 132 2 188 1 32 1 344 3 322 1 299 1 219 1 3 1 109 1 4 1 88 7 313 4 68 2 
359 3 226 1 202 1 185 1 132 2 188 1 32 1 344 3 322 1 299 1 219 1 3 1 74 1 109 1 4 1 88 7 313 4 68 2 
359 12 316 1 226 1 166 3 141 1 92 1 340 3 341 2 32 3 344 6 322 1 299 1 3 3 277 1 41 2 349 3 156 4 350 2 373 1 132 1 185 4 351 1 306 2 267 4 190 1 219 2 109 1 20 2 88 23 270 3 313 11 68 2 
226 1 359 4 341 2 202 1 32 1 170 1 344 4 322 1 299 1 3 1 4 1 41 2 156 4 350 1 132 2 185 1 241 1 306 2 188 1 219 1 20 2 88 9 313 5 68 3 
225 1 167 1 28 1 295 2 168 1 145 1 148 2 366 2 150 1 208 1 179 1 36 1 151 1 60 1 284 1 153 1 79 1 155 1 212 1 189 1 288 1 310 1 113 1 194 1 51 1 195 1 381 1 117 1 139 1 253 1 
225 1 167 1 28 1 295 2 296 1 168 1 145 1 205 1 148 3 366 3 150 1 208 1 36 1 151 1 60 1 282 1 153 1 79 1 155 1 212 1 189 1 288 1 310 1 113 1 194 1 195 1 381 1 117 1 139 1 253 2 
225 1 167 1 28 1 295 2 296 1 168 1 145 1 205 1 148 2 366 2 36 1 208 1 153 1 79 1 155 1 212 1 189 1 288 1 310 1 113 1 194 1 195 1 381 1 117 1 253 2 
225 2 28 1 93 1 95 1 168 1 145 1 148 1 301 1 366 1 151 1 282 1 331 1 155 1 307 1 218 1 288 2 246 1 310 2 113 1 194 2 291 1 198 1 139 1 
225 1 167 1 28 1 295 2 168 1 145 1 205 1 148 1 366 1 150 1 208 1 36 1 151 1 60 1 284 1 153 1 155 1 189 1 288 1 310 1 113 1 194 1 51 1 195 1 117 1 139 1 
63 1 
93 1 55 2 145 1 206 1 257 1 300 2 345 1 301 2 149 1 155 1 103 1 216 2 17 2 106 2 218 1 158 1 110 2 112 1 113 2 221 2 223 2 28 2 31 2 168 2 271 1 173 4 176 1 177 1 229 2 122 1 276 1 123 1 368 6 281 4 328 1 183 1 285 1 127 1 286 1 236 1 186 3 240 1 43 1 82 1 242 1 246 1 85 2 135 1 290 1 196 1 292 1 337 2 198 1 
285 1 127 1 286 1 53 1 103 1 236 1 271 1 186 1 17 1 257 1 206 1 173 2 176 1 149 1 112 1 368 2 281 2 328 1 196 1 292 1 
285 1 127 1 286 1 103 1 236 1 271 1 216 1 257 1 206 1 173 1 176 1 229 1 149 1 112 1 281 1 328 1 196 1 292 1 
53 1 271 1 206 1 257 1 173 2 176 1 229 1 149 1 368 2 328 1 281 2 127 1 285 1 286 1 103 1 236 1 186 1 17 1 216 1 110 1 112 1 196 1 292 1 
53 1 55 2 257 1 206 2 300 2 345 2 149 2 302 1 263 2 103 1 213 1 266 1 216 3 17 4 106 2 160 1 110 4 112 1 223 2 358 1 271 2 31 2 33 1 173 4 176 1 177 1 229 3 122 1 325 1 180 1 368 7 281 4 328 1 183 1 285 1 127 1 286 1 236 2 186 3 240 1 43 1 82 1 244 1 85 1 134 1 137 1 196 1 292 1 337 1 140 1 
55 2 257 1 206 1 300 2 345 2 149 1 263 1 103 1 106 2 17 2 216 2 110 2 112 1 221 2 223 2 271 1 31 2 173 3 176 1 177 1 122 1 229 2 368 4 328 1 281 3 183 1 285 1 127 1 286 1 236 1 240 1 186 2 43 1 82 1 85 1 135 1 196 1 292 1 337 1 
31 2 271 1 55 2 206 1 257 1 173 3 300 2 345 1 177 1 176 1 229 2 122 1 149 1 368 4 328 1 281 3 263 1 183 1 127 1 285 1 286 1 103 1 236 1 186 2 240 1 216 2 17 2 106 2 43 1 82 1 85 1 160 1 110 2 112 1 223 2 137 1 196 1 358 1 292 1 337 1 
31 2 271 1 55 2 206 1 257 1 173 3 300 2 345 1 177 1 176 1 229 2 122 1 149 1 368 4 328 1 281 3 263 1 183 1 127 1 285 1 286 1 103 1 236 1 186 2 240 1 216 2 17 2 106 2 43 1 82 1 85 1 160 1 110 2 112 1 223 2 137 1 196 1 358 1 292 1 337 1 
271 1 206 1 257 1 173 3 345 1 177 1 176 1 229 2 122 1 149 1 368 4 328 1 281 3 263 1 304 2 154 1 127 1 285 1 286 1 103 1 236 1 186 2 240 1 216 2 17 2 106 2 43 1 82 1 45 1 18 2 85 1 160 1 247 1 110 2 112 1 221 2 223 2 196 1 292 1 337 1 
31 2 271 1 55 2 206 1 257 1 173 3 300 2 345 1 177 1 176 1 122 1 229 3 149 1 302 1 368 5 328 1 281 3 263 1 183 1 127 1 285 1 286 1 103 1 236 1 186 2 240 1 106 2 43 1 17 3 216 3 82 1 85 1 160 1 110 3 112 1 223 2 137 1 196 1 358 1 292 1 337 1 
31 2 271 1 55 2 206 1 257 1 173 3 300 2 345 1 177 1 176 1 122 1 229 3 149 1 302 1 368 5 328 1 281 3 263 1 183 1 127 1 285 1 286 1 103 1 236 1 186 2 240 1 106 2 43 1 17 3 216 3 82 1 85 1 160 1 110 3 112 1 223 2 137 1 196 1 358 1 292 1 337 1 
271 1 206 1 257 1 173 3 345 1 177 1 176 1 229 2 122 1 149 1 368 4 281 3 328 1 263 1 304 2 127 1 285 1 286 1 103 1 236 1 186 2 240 1 216 2 17 2 106 2 43 1 82 1 45 1 18 2 85 1 135 1 110 2 112 1 221 2 223 2 196 1 292 1 337 1 
359 3 341 1 201 1 202 1 97 1 344 2 32 1 322 1 299 1 3 1 4 1 258 1 259 2 369 1 41 1 156 2 132 1 188 1 306 1 335 1 20 1 220 1 88 6 313 3 138 1 68 2 
359 9 166 4 92 2 340 2 341 2 201 16 169 1 203 2 256 1 344 4 32 4 3 2 258 6 259 1 369 1 125 1 41 2 211 1 349 4 156 4 184 1 185 2 306 2 267 4 335 16 190 1 20 2 88 22 270 4 313 13 162 1 68 2 138 2 
359 1 28 1 317 1 341 1 93 1 168 1 169 1 145 1 206 1 228 1 301 1 258 1 149 2 259 1 369 1 329 1 333 1 40 1 41 1 155 1 211 1 156 2 184 1 236 2 239 1 15 1 306 1 66 1 134 1 20 1 88 2 113 1 161 1 313 1 24 1 198 1 138 1 140 1 
254 2 340 2 341 3 93 2 201 7 202 1 145 2 205 1 206 1 344 8 299 1 3 3 4 1 301 1 149 3 5 2 258 7 259 2 211 1 155 2 349 2 156 6 61 2 15 1 306 3 20 3 113 3 313 10 24 2 68 4 359 10 166 2 28 3 169 1 168 3 272 2 32 3 322 1 228 1 369 3 333 2 41 3 40 2 184 1 236 3 131 1 132 1 239 2 185 4 188 1 376 1 335 7 134 1 88 20 289 2 193 1 138 3 198 2 140 1 
359 1 28 8 341 2 93 2 94 1 168 7 169 1 145 2 204 2 205 1 206 1 228 1 301 2 149 1 179 1 369 2 41 2 303 1 155 2 211 1 156 4 236 1 215 1 306 2 217 1 218 1 46 1 246 1 134 1 86 1 20 2 220 1 88 2 113 8 89 1 313 1 198 3 138 2 140 1 
166 1 359 2 340 1 341 1 201 1 344 1 206 1 32 1 33 1 3 1 75 1 258 1 149 1 369 1 41 1 349 1 156 2 184 1 236 1 306 1 335 1 134 1 20 1 88 3 313 1 314 1 68 1 138 1 140 1 
166 1 156 2 341 1 201 1 185 1 306 1 344 1 335 1 32 1 258 1 20 1 356 1 88 2 220 1 313 2 369 1 138 1 41 1 
13 1 359 2 156 2 340 1 341 1 201 1 306 1 344 1 335 1 3 1 258 1 20 1 88 2 220 1 369 1 68 1 138 1 41 1 
166 1 359 2 340 1 341 1 201 2 32 1 344 2 3 1 258 2 369 1 41 1 349 1 156 2 185 1 306 1 335 2 20 1 220 1 88 4 313 2 138 1 68 1 
166 1 156 2 341 1 201 1 185 1 306 1 344 1 335 1 32 1 258 1 20 1 356 1 88 2 89 1 313 2 369 1 138 1 41 1 
13 1 359 2 156 2 340 1 341 1 201 1 306 1 344 1 335 1 3 1 258 1 20 1 88 2 89 1 369 1 68 1 138 1 41 1 
166 1 359 2 340 1 341 1 201 2 32 1 344 2 3 1 258 2 369 1 41 1 349 1 156 2 185 1 306 1 335 2 20 1 88 4 89 1 313 2 138 1 68 1 
166 1 359 2 340 1 341 1 201 2 32 1 344 2 3 1 258 2 369 1 41 1 349 1 156 2 185 1 306 1 335 2 20 1 88 4 313 2 138 1 68 1 
359 1 28 1 341 1 93 1 168 1 169 1 145 1 301 1 149 1 259 1 369 1 333 1 40 1 41 1 211 1 155 1 156 2 236 1 239 1 306 1 20 1 88 2 289 1 113 1 313 1 24 1 198 1 138 1 
359 1 28 1 341 1 93 1 30 1 168 1 169 1 145 1 301 1 149 1 259 1 369 1 333 1 41 1 211 1 155 1 156 2 236 1 306 1 309 1 20 1 88 2 113 1 313 1 114 1 24 1 198 1 138 1 
166 1 359 2 340 1 341 1 201 2 32 1 344 2 3 1 258 2 369 1 41 1 349 1 156 2 184 1 185 1 306 1 335 2 20 1 88 4 313 2 138 1 68 1 
359 2 166 1 340 1 28 1 341 1 93 1 201 2 168 1 272 1 145 1 344 2 32 1 3 1 258 2 149 1 179 1 369 1 333 1 40 1 41 1 155 1 349 1 156 2 236 1 185 1 239 1 306 1 335 2 20 1 88 4 289 1 113 1 313 2 24 1 68 1 198 1 138 1 
359 1 166 1 340 1 341 1 201 1 273 1 344 1 206 1 32 1 33 1 3 1 149 1 258 1 369 1 41 1 349 1 156 2 184 1 236 1 185 1 306 1 335 1 134 1 20 1 88 3 313 2 314 1 138 1 140 1 
359 21 166 7 92 2 340 5 341 4 203 2 320 1 170 1 32 7 344 10 35 1 120 1 3 5 6 4 326 1 41 4 305 1 349 7 129 1 156 8 350 2 104 1 185 6 187 1 306 4 267 5 245 1 190 3 20 4 378 2 88 46 270 5 313 25 252 1 91 1 339 1 68 4 199 1 
359 17 166 4 92 1 340 4 341 4 320 1 170 1 32 4 344 5 35 1 120 1 3 4 6 4 326 1 41 4 305 1 349 4 129 1 156 8 350 2 104 1 185 3 187 1 306 4 267 3 245 1 190 2 20 4 378 1 88 33 270 2 313 16 91 1 339 1 68 2 199 1 
359 27 166 7 92 2 340 7 341 3 202 1 203 2 170 1 32 8 344 14 322 1 299 1 35 1 120 1 3 8 4 1 6 4 326 1 41 3 305 1 349 7 129 1 156 6 350 2 104 1 132 1 185 6 187 1 188 1 306 3 267 4 245 1 190 2 20 3 378 1 88 54 270 4 313 27 91 1 339 1 68 8 199 1 
359 16 166 4 92 1 340 4 341 4 320 1 170 1 32 4 344 6 35 1 120 1 3 4 6 3 38 1 41 4 305 1 349 4 129 1 156 8 350 2 104 1 185 3 187 1 306 4 267 3 245 1 190 2 20 4 378 1 88 31 270 2 313 15 91 1 339 1 68 3 199 1 
359 22 166 7 92 2 340 6 341 3 203 2 344 8 170 1 32 7 35 1 120 1 3 6 6 4 326 1 41 3 305 1 349 7 129 1 156 6 350 2 104 1 185 4 187 1 306 3 267 4 245 1 190 2 20 3 378 2 88 46 313 24 270 4 91 1 339 1 68 4 199 2 
268 1 12 1 294 1 142 1 318 1 362 1 231 1 357 1 375 1 90 1 
102 1 65 1 
12 1 294 1 58 1 342 1 142 1 318 1 375 1 90 1 69 1 
12 1 294 1 29 1 318 1 142 1 362 1 375 1 159 1 173 1 268 1 345 1 336 2 231 1 280 1 281 1 90 1 380 1 197 1 
12 1 294 1 29 1 318 1 142 1 362 1 375 1 159 1 173 1 268 1 345 1 336 2 231 1 280 1 281 1 90 1 380 1 197 1 
12 1 294 1 29 1 318 1 142 1 362 1 375 1 159 1 173 1 268 1 345 1 336 2 231 1 280 1 281 1 90 1 380 1 197 1 
360 1 130 1 312 1 
360 1 130 1 312 1 
372 1 67 1 
360 1 372 1 67 1 
52 1 379 1 
294 1 52 1 29 1 142 1 318 1 206 2 173 1 149 2 259 1 100 1 102 1 281 1 12 1 128 1 80 1 334 1 236 2 375 1 65 1 134 2 355 1 336 1 379 1 23 1 90 1 197 1 140 2 
130 1 312 1 
360 1 372 1 67 1 
359 1 28 1 341 1 94 1 169 1 168 1 204 1 171 1 206 2 34 1 149 2 369 1 41 1 370 1 211 1 156 2 184 1 236 2 306 1 84 1 20 1 88 2 113 1 313 1 138 1 
155 1 167 1 54 1 28 2 295 2 168 2 145 1 205 1 308 1 113 2 208 1 179 1 36 1 60 1 194 1 261 1 195 1 117 1 153 1 
155 1 167 1 54 1 28 1 295 2 168 1 265 1 145 1 205 1 113 1 208 1 36 1 60 1 194 1 195 1 117 1 153 1 
155 1 28 1 93 1 168 1 157 1 145 1 218 1 308 1 246 1 301 1 113 1 194 1 291 1 198 1 
155 1 167 1 54 1 28 1 295 2 168 1 145 1 205 1 308 1 113 1 208 1 36 1 60 1 194 1 261 1 195 1 117 1 153 1 
251 1 
345 1 16 1 97 1 263 1 283 1 337 1 85 1 
31 1 55 1 173 1 300 1 345 2 122 1 368 1 281 1 263 1 183 1 240 1 186 1 43 1 82 1 85 1 221 1 337 1 
340 2 93 3 96 1 145 4 147 1 345 8 3 2 301 1 7 6 263 2 209 2 155 3 349 2 61 2 16 1 107 2 22 1 113 3 221 12 222 2 24 3 26 1 166 2 28 3 361 2 168 3 31 6 363 2 32 2 173 5 122 4 179 1 327 2 368 5 124 2 281 5 330 2 283 1 371 2 240 4 186 3 43 4 82 4 242 1 85 9 47 6 48 2 49 3 192 1 290 2 338 1 198 10 337 8 293 2 
166 4 92 1 340 4 31 5 203 1 32 4 1 1 173 1 345 7 3 4 122 2 7 8 368 1 281 1 10 1 124 3 330 1 263 2 349 4 129 1 104 1 186 1 187 1 240 2 43 2 82 2 242 1 267 2 85 13 190 1 47 8 290 1 221 10 270 2 91 1 339 1 337 8 
271 1 202 1 32 2 206 1 322 1 299 1 33 1 173 1 3 1 122 1 149 1 325 1 124 2 281 1 330 1 213 1 236 1 240 1 43 1 266 1 82 1 244 1 85 2 134 1 21 1 137 1 337 2 140 1 
16 1 240 1 43 1 82 1 85 1 345 1 122 1 263 1 283 1 337 1 
349 2 166 2 340 2 61 1 31 5 32 2 85 5 47 5 345 5 3 2 7 5 221 10 124 2 330 1 337 5 
345 1 368 1 186 1 281 1 263 1 173 1 
28 4 93 1 168 4 145 1 173 3 122 2 301 2 276 1 368 4 232 1 281 3 155 1 234 1 240 2 186 2 43 1 82 2 242 2 218 1 377 1 85 2 246 1 158 1 22 1 113 4 290 2 338 2 198 1 337 2 
359 1 341 1 28 1 93 1 169 1 168 1 145 1 206 2 364 1 33 2 301 1 149 3 259 1 369 1 333 1 40 1 41 1 155 1 156 2 236 3 239 1 306 1 266 1 134 2 20 1 88 1 289 1 113 1 24 1 198 1 138 1 140 2 
132 1 31 2 240 1 43 1 82 1 242 1 85 1 47 2 345 4 122 1 7 2 221 4 290 1 263 2 337 2 
12 1 287 1 375 1 
12 1 287 1 375 1 
268 1 12 1 52 1 181 1 375 1 
12 1 287 1 375 1 
12 1 375 1 116 1 
12 1 375 1 116 1 
12 1 375 1 116 1 
12 1 375 1 
142 1 318 1 
359 10 166 2 340 1 341 2 202 2 170 1 32 5 344 9 322 2 299 2 3 4 4 1 41 2 349 2 156 4 129 1 350 1 104 1 132 1 185 4 187 1 188 1 306 2 267 1 190 1 20 2 88 24 21 1 270 1 313 14 91 1 68 5 339 1 
359 5 166 1 92 1 341 2 202 1 170 1 32 2 344 3 322 1 299 1 3 1 4 1 41 2 349 1 156 4 132 1 185 1 187 1 188 1 306 2 267 2 190 1 20 2 88 11 50 1 270 1 313 6 68 2 
359 15 166 4 92 1 340 4 341 3 202 1 203 1 170 1 32 5 344 6 322 1 299 1 3 5 4 1 41 3 349 4 129 1 156 6 350 1 104 1 132 1 185 2 187 1 188 1 306 3 267 2 190 1 20 3 88 29 50 1 270 2 313 14 91 1 339 1 68 4 
359 12 166 4 92 1 340 3 341 3 202 1 203 1 170 1 32 5 344 7 322 1 299 1 3 4 4 1 41 3 349 4 129 1 156 6 350 1 104 1 132 1 185 3 187 1 188 1 306 3 267 2 190 1 20 3 88 27 50 1 270 2 313 15 91 1 339 1 68 4 
359 10 166 2 340 1 341 2 202 2 170 1 32 5 344 9 322 2 299 2 3 4 4 1 41 2 349 2 156 4 129 1 350 1 104 1 132 1 185 4 187 1 188 1 306 2 267 1 190 1 20 2 88 24 21 1 270 1 313 14 91 1 68 5 339 1 
359 11 166 4 92 1 340 4 341 1 203 1 170 1 32 4 344 4 3 4 41 1 349 4 129 1 156 2 104 1 185 2 187 1 306 1 267 2 190 1 20 1 88 22 270 2 313 11 91 1 339 1 68 2 
359 13 166 4 92 1 340 3 341 4 202 1 203 1 170 1 32 5 344 7 322 1 299 1 3 4 4 1 41 4 349 4 129 1 156 8 350 2 104 1 132 1 185 3 187 1 188 1 306 4 267 2 190 1 20 4 88 28 50 1 270 2 313 15 91 1 339 1 68 4 
359 4 166 1 92 1 340 1 341 2 320 1 170 1 32 1 344 1 3 1 41 2 349 1 156 4 187 1 306 2 267 2 190 1 20 2 88 7 270 1 313 3 68 1 
359 4 185 3 202 1 188 1 344 6 32 1 322 3 299 3 3 1 4 2 88 7 313 3 68 3 
359 4 166 1 92 1 340 1 341 2 320 1 170 1 32 1 344 1 3 1 41 2 349 1 156 4 187 1 306 2 267 2 190 1 20 2 88 7 270 1 313 3 68 1 
359 4 156 4 341 2 350 1 132 1 202 1 185 1 306 2 188 1 32 1 344 3 322 1 299 1 3 1 4 1 20 2 88 8 313 4 68 2 41 2 
359 3 132 1 202 1 97 1 188 1 344 2 32 1 322 1 299 1 3 1 4 1 88 6 313 3 68 2 
359 2 349 1 166 1 340 1 156 2 341 1 185 1 306 1 344 2 32 1 3 1 20 1 88 4 50 1 313 2 68 1 41 1 
359 6 349 2 166 2 92 1 340 2 185 1 203 1 267 2 344 2 32 2 190 1 3 2 88 12 270 2 313 6 68 1 
166 2 359 12 92 1 340 2 341 2 202 1 203 1 344 9 32 3 322 2 299 2 3 3 4 1 277 1 125 1 41 2 349 2 156 4 350 2 132 1 185 4 188 1 306 2 267 2 20 2 88 23 313 11 270 2 68 5 
359 1 88 1 267 1 
88 1 313 1 270 1 
359 3 349 1 166 1 156 2 340 1 341 1 61 1 185 1 306 1 32 1 344 3 3 1 20 1 88 6 50 1 313 3 68 2 41 1 
359 11 166 4 92 1 340 4 341 1 203 1 170 1 32 4 344 4 3 4 41 1 349 4 129 1 156 2 104 1 185 2 187 1 306 1 267 2 190 1 20 1 88 22 270 2 313 11 91 1 339 1 68 2 
359 3 202 1 185 1 32 1 344 2 322 1 299 1 3 1 88 6 313 3 68 1 
359 2 156 2 350 1 341 1 185 1 306 1 188 1 344 2 322 1 299 1 4 1 20 1 88 3 313 1 277 1 68 1 41 1 
359 5 156 2 341 1 185 2 202 1 306 1 170 1 344 5 32 2 322 2 299 2 3 2 20 1 88 10 21 1 313 5 68 3 41 1 
166 1 156 2 341 1 185 1 306 1 170 1 32 1 344 1 20 1 88 2 313 2 41 1 
359 2 349 1 166 1 340 1 156 2 341 1 185 1 306 1 344 2 170 1 32 1 3 1 20 1 88 4 313 2 68 1 41 1 
359 2 156 6 350 1 341 3 185 1 306 3 320 1 170 1 344 2 322 1 299 1 20 3 88 3 277 1 313 1 68 1 41 3 
359 8 316 1 341 4 202 1 320 1 32 2 344 6 170 1 322 2 299 2 3 2 4 1 277 1 41 4 156 8 350 1 185 3 306 4 188 1 267 1 190 1 20 4 88 15 21 1 50 1 270 1 313 7 68 3 
175 1 149 1 259 1 236 1 182 1 328 1 206 1 
237 1 236 1 206 1 2 1 175 1 178 1 149 1 259 1 324 1 230 1 182 1 328 1 
155 1 301 1 28 1 93 1 113 1 168 1 97 1 145 1 218 1 198 1 246 1 
155 1 28 1 93 1 236 2 168 1 145 1 206 1 228 1 134 1 301 1 149 2 259 1 113 1 24 1 198 1 333 1 40 1 140 1 
28 1 93 2 168 1 271 1 145 1 206 2 257 1 228 1 149 2 259 1 333 1 40 1 155 1 371 1 236 2 134 1 48 1 113 1 24 2 292 1 338 1 198 3 140 2 
28 2 30 1 93 2 168 2 271 1 145 1 206 2 257 1 228 1 149 2 259 1 332 1 333 1 155 1 371 1 236 2 134 1 48 1 113 2 24 2 292 1 338 1 198 3 140 2 
155 1 371 1 28 3 361 1 93 1 168 3 145 1 107 1 173 2 345 1 301 1 48 1 275 1 113 3 49 1 368 1 24 1 281 2 263 1 332 1 338 1 198 4 347 1 
155 1 371 1 28 3 361 1 93 1 168 3 145 1 107 1 173 2 345 1 301 1 48 1 113 3 49 1 327 1 368 1 24 1 281 2 263 1 332 1 338 1 198 4 
155 1 28 1 113 1 168 1 145 1 46 1 
155 2 28 7 93 2 215 1 168 6 204 1 145 3 217 1 205 1 46 1 354 1 86 1 301 2 113 7 179 1 278 1 24 1 26 1 198 3 27 1 303 1 
254 1 341 2 93 1 201 1 202 1 145 1 206 1 344 2 299 1 3 1 4 1 258 1 149 2 259 2 155 1 156 4 306 2 20 2 113 1 313 3 24 1 68 2 359 3 28 1 168 1 272 1 32 1 322 1 228 1 179 1 369 2 333 1 40 1 41 2 370 1 184 1 236 2 239 1 132 1 188 1 335 1 134 1 289 1 88 6 138 2 198 1 140 1 
28 1 361 1 168 1 363 1 173 3 345 1 301 1 122 2 327 1 368 2 281 3 263 1 283 1 209 1 16 1 240 2 186 1 43 2 82 2 107 1 85 1 22 1 113 1 49 1 23 1 337 1 198 2 293 1 
155 1 361 1 28 2 93 1 168 2 145 2 46 1 113 2 179 1 192 1 24 1 26 1 198 2 
155 1 301 1 28 4 93 1 113 4 179 1 168 4 145 1 218 1 332 1 198 1 246 1 71 1 
155 1 28 2 93 1 168 2 145 2 352 1 354 1 113 2 37 1 193 1 24 1 338 1 198 1 27 1 
155 1 301 1 167 1 28 1 295 1 113 1 208 1 36 1 168 1 145 1 
155 1 86 1 28 2 93 1 113 2 179 1 255 1 168 2 145 1 205 1 198 1 
155 2 28 5 93 2 168 4 145 2 218 1 217 1 246 1 86 1 301 1 113 5 179 1 338 1 198 3 71 1 303 1 
155 2 28 5 235 1 93 2 168 4 145 2 218 1 246 1 86 1 301 1 113 5 179 1 338 1 198 3 71 1 303 1 
155 1 28 1 93 1 236 2 30 1 168 1 145 1 206 1 228 1 134 1 301 1 149 2 259 1 113 1 24 1 198 1 333 1 140 1 
155 1 28 1 93 1 168 1 145 2 354 1 113 1 278 1 24 1 26 1 338 1 198 1 27 1 
236 1 84 1 171 1 206 1 34 1 172 1 149 1 224 1 70 1 
165 1 115 1 172 1 
259 1 143 1 224 1 70 1 172 1 
165 1 271 2 143 1 206 1 257 1 33 1 173 1 172 1 345 1 149 1 325 1 9 1 281 1 263 1 103 1 213 1 236 1 266 1 244 1 134 1 249 1 115 1 23 1 224 1 292 1 140 1 70 1 
79 1 212 1 97 1 381 1 
79 1 212 1 366 1 151 1 381 1 139 1 148 1 
225 1 310 1 148 1 
79 1 212 1 148 3 365 1 366 3 346 1 151 1 101 2 51 1 381 1 139 1 210 1 
79 1 212 1 366 2 214 1 151 1 381 1 139 1 253 1 148 2 
353 1 366 1 295 1 208 1 151 1 77 1 51 1 117 1 381 1 139 1 148 1 
212 1 366 1 151 1 51 1 381 1 139 1 148 1 
79 1 212 2 366 1 151 1 51 1 139 1 148 1 
212 1 62 1 298 1 227 1 148 2 366 2 151 2 51 1 381 1 139 2 
79 1 233 1 212 1 44 1 148 3 353 1 366 3 59 1 151 1 51 1 381 2 139 1 253 2 
79 1 212 1 167 1 295 2 148 2 87 1 366 2 208 1 151 1 51 1 195 1 381 1 117 1 139 1 253 1 
79 1 212 1 214 1 148 4 353 1 366 4 59 1 151 2 51 1 381 2 139 2 11 1 253 2 
79 1 212 1 366 1 151 1 51 1 381 1 139 1 148 1 
79 2 212 2 148 4 353 1 366 4 346 1 59 1 101 1 260 1 151 1 381 3 210 1 139 1 253 2 
79 1 212 1 73 1 207 1 148 2 191 1 366 2 151 1 51 1 381 1 139 1 253 1 
79 1 348 1 212 1 366 3 346 1 101 2 151 1 51 1 381 1 210 2 139 1 148 3 
174 2 381 2 321 1 118 1 
366 1 151 1 243 1 51 1 139 1 148 1 
79 1 212 1 366 2 151 1 51 1 381 1 44 1 139 1 253 1 148 2 
248 1 
79 1 212 1 366 1 151 1 51 1 381 1 139 1 148 1 
79 1 212 1 44 1 148 3 366 3 151 1 101 1 51 1 381 1 139 1 253 1 
353 1 59 1 260 1 381 1 
212 1 381 1 

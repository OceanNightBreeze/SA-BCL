#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 184 44 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 184 44 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 68 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 4 (128,136) (128,136) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 23 1 1 9 2 1 357 3 160 1 222 1 103 4 136 1 244 2 274 9 4 4 6 1 109 1 36 2 367 2 170 2 326 1 343 1 84 1 328 2 120 1 13 6 87 1 378 2 128 1 65 1 197 2 
22 1 23 1 1 9 2 1 357 3 160 1 222 1 103 4 136 1 244 2 274 9 4 4 6 1 109 1 36 2 367 2 170 2 326 1 343 1 84 1 328 2 120 1 13 6 87 1 378 2 128 1 65 1 197 2 
22 1 23 1 1 10 2 1 357 4 160 1 222 1 103 5 136 1 244 2 274 10 4 5 6 1 109 1 36 2 367 2 170 2 326 1 343 1 84 1 328 2 120 1 13 7 87 1 378 2 128 1 65 1 197 2 
22 1 23 1 1 7 2 1 357 2 160 1 222 1 103 3 136 1 244 2 274 7 4 3 6 1 109 1 36 2 367 2 170 2 326 1 343 1 328 1 120 1 13 4 87 1 378 2 128 1 65 1 197 2 
36 1 367 1 326 1 170 1 1 4 343 1 84 1 357 1 328 2 103 2 13 3 136 1 274 4 378 1 4 2 128 1 197 1 65 1 
109 1 367 1 326 1 170 1 353 1 1 2 356 1 2 1 101 1 136 1 274 2 244 1 378 1 128 1 197 1 
326 1 170 2 23 1 1 3 357 1 103 1 13 1 136 1 274 3 244 1 4 1 128 1 197 2 
21 1 23 1 1 9 357 3 221 1 222 1 103 4 136 1 244 1 274 9 4 4 6 1 36 1 367 1 170 2 326 1 343 1 84 1 328 2 13 7 378 1 128 1 197 2 65 1 
21 1 23 1 1 9 357 3 221 1 222 1 103 4 136 1 244 1 274 9 4 4 6 1 36 1 367 1 170 2 326 1 343 1 84 1 328 2 13 7 378 1 128 1 197 2 65 1 
8 1 68 1 28 1 
150 1 39 2 28 1 
207 2 300 2 277 2 96 2 15 1 312 2 78 1 61 2 
130 1 20 1 260 2 96 2 157 1 201 1 241 1 102 1 266 1 223 1 29 2 243 1 322 1 138 1 229 1 75 1 77 1 339 1 78 1 363 2 33 1 207 2 300 2 80 1 277 3 327 1 191 1 60 1 233 2 61 2 123 2 310 1 15 1 312 3 329 1 195 1 350 1 
207 1 300 1 277 1 96 1 15 1 312 1 185 1 61 1 246 1 141 1 
110 1 8 1 277 1 341 1 280 1 28 1 61 1 85 1 267 1 181 1 312 1 185 1 216 1 45 1 
207 1 110 1 8 1 300 1 96 1 277 1 341 1 280 2 28 1 61 1 85 1 267 1 312 1 185 1 216 2 
218 1 213 1 280 1 27 1 216 1 
8 1 359 1 213 1 280 2 27 1 175 1 28 1 216 2 
280 1 27 1 216 1 
207 1 300 1 96 1 277 1 280 1 61 1 213 1 15 1 312 1 185 1 314 1 216 1 246 1 141 1 
28 1 
258 1 8 1 359 1 213 1 280 2 27 1 28 1 216 2 
8 1 66 1 232 1 280 5 113 2 27 2 345 2 28 1 115 1 253 1 12 2 224 1 271 1 359 1 213 2 236 1 216 5 245 1 18 1 
68 1 78 1 
207 1 35 1 300 1 277 2 96 1 61 2 312 2 78 2 143 1 
325 1 54 1 264 1 
260 1 80 1 277 1 157 1 327 1 60 1 266 1 29 1 234 1 123 1 243 1 312 1 75 1 350 1 339 1 78 1 
7 1 207 3 300 1 277 3 96 3 312 3 78 1 61 3 
207 1 277 1 96 1 312 1 185 1 61 1 246 1 
207 1 300 1 35 1 277 1 96 1 312 1 185 1 61 1 143 1 
154 1 20 1 260 1 157 1 96 3 241 1 102 1 266 1 29 1 267 1 243 1 138 1 185 1 75 1 229 1 339 1 78 1 363 2 362 1 33 1 207 3 7 1 110 1 300 2 35 1 80 1 277 4 341 1 327 1 280 1 191 1 60 1 233 1 61 3 85 1 123 1 310 1 15 1 312 4 43 1 329 1 195 1 350 1 216 1 
207 1 7 1 121 1 181 1 277 2 96 1 312 2 78 1 61 2 
110 1 7 2 207 3 300 1 35 1 96 3 277 3 341 1 280 1 28 1 61 3 10 1 85 1 267 1 312 3 185 1 43 1 216 1 362 1 
7 1 207 2 35 1 300 1 325 1 96 2 277 2 61 2 54 1 312 2 
260 1 80 1 277 1 157 1 327 1 60 1 266 1 29 1 123 1 243 1 312 1 75 1 350 1 339 1 78 1 
260 1 80 1 277 1 327 1 60 1 266 1 29 1 336 1 123 1 42 1 243 1 312 1 75 1 350 1 78 1 
93 1 20 1 335 1 317 1 179 1 263 1 241 1 25 1 264 2 102 1 54 2 77 2 340 1 363 2 59 1 33 1 325 2 305 1 233 4 62 1 310 2 173 1 329 1 195 1 
207 1 267 1 277 1 96 1 312 1 185 1 61 1 347 1 
7 1 207 1 325 1 80 1 260 1 96 1 277 2 157 1 327 1 60 1 266 1 61 1 29 1 123 1 243 1 312 2 43 1 75 1 339 1 350 1 
7 2 207 4 35 1 300 1 96 4 277 5 209 1 242 1 61 5 121 1 181 1 312 5 43 1 78 1 
207 2 277 2 96 2 312 2 185 1 347 1 61 2 246 1 
203 1 71 1 
203 1 71 1 
63 1 37 1 
63 1 37 1 
63 1 37 1 
203 1 30 1 71 1 
203 1 30 1 71 1 
203 1 71 1 285 1 
203 2 63 1 37 1 330 1 284 1 71 2 
203 1 30 1 71 1 
169 1 203 1 71 1 
169 1 203 1 71 1 
169 1 203 1 71 1 
188 2 230 1 156 1 280 2 219 3 370 2 28 1 71 2 163 2 203 2 122 1 135 1 375 1 186 1 332 2 238 2 284 1 216 2 217 1 
96 2 261 1 219 1 71 1 203 1 53 1 226 1 74 1 291 1 78 1 207 2 188 1 277 2 280 1 251 1 370 1 61 2 41 1 122 1 312 2 238 1 332 1 216 1 285 1 
36 1 367 1 378 1 
367 1 353 1 378 1 
316 1 36 2 367 3 199 1 353 1 374 1 
36 1 367 2 199 1 353 1 374 1 193 1 
36 1 367 2 199 1 353 1 374 2 
19 1 66 3 179 1 263 1 27 1 220 1 28 2 204 1 359 1 137 1 291 1 294 1 245 1 8 1 303 1 280 5 112 2 251 1 113 1 39 3 305 1 345 1 118 1 253 2 41 1 150 1 12 1 348 2 255 2 213 4 173 1 216 5 
67 5 19 2 66 8 218 5 179 3 263 3 26 1 27 6 28 5 204 1 271 1 359 1 137 3 291 4 294 2 323 1 5 1 245 1 208 1 8 1 280 9 113 2 39 9 305 3 345 2 253 6 150 3 12 2 348 6 255 6 213 7 173 3 153 1 16 1 216 9 
19 1 66 3 179 1 263 1 220 1 28 3 271 1 291 1 137 1 294 1 8 1 303 1 280 3 112 1 113 1 39 4 305 1 345 1 253 2 150 2 12 1 348 2 213 2 255 2 173 1 216 3 
19 1 66 5 179 2 263 2 220 1 28 4 271 1 291 2 137 2 294 1 5 1 208 1 8 1 280 4 303 1 112 2 113 1 39 7 305 2 345 1 253 4 150 3 12 1 348 4 255 4 213 3 173 2 153 1 216 4 
68 1 46 1 
119 1 266 1 
248 1 
327 1 266 1 
80 1 327 1 190 1 292 1 266 3 46 2 
80 1 327 1 266 1 
147 1 266 1 
155 1 335 3 278 1 317 2 263 1 344 1 149 1 265 2 233 7 252 1 287 1 133 1 52 1 269 1 310 3 173 1 77 4 
155 1 335 3 278 1 317 2 263 1 344 1 149 1 265 2 233 7 252 1 287 1 133 1 52 1 269 1 310 3 173 1 77 4 
155 1 335 3 278 1 317 2 263 1 344 1 149 1 265 2 233 7 252 1 287 1 133 1 52 1 269 1 310 3 173 1 293 1 77 4 
176 1 155 1 20 1 335 10 333 1 179 3 317 5 241 1 263 4 265 3 287 2 132 1 133 2 52 1 269 1 270 1 106 3 137 3 275 1 77 16 363 2 33 1 278 2 38 1 344 5 149 2 305 3 252 1 233 31 310 15 173 4 313 1 329 1 196 4 
155 1 20 2 335 4 317 3 263 1 241 2 265 2 287 1 133 1 269 1 52 1 358 1 77 5 363 4 140 1 33 2 278 1 344 1 149 1 233 9 310 4 173 1 313 1 329 2 
316 1 260 1 353 1 1 2 319 1 29 1 134 1 136 1 32 1 274 2 244 1 75 1 36 1 301 1 367 2 170 1 326 1 60 1 369 1 116 1 307 1 13 1 123 1 214 1 378 1 128 1 331 1 197 1 379 1 
316 1 260 1 353 1 1 3 319 1 29 1 51 1 134 1 136 1 32 1 274 3 244 1 75 1 167 1 36 1 367 2 170 1 60 1 116 1 307 1 13 2 123 1 214 1 378 1 237 1 128 1 331 1 197 1 379 1 
316 1 260 1 353 1 1 2 319 1 29 1 134 1 136 1 244 1 32 1 274 2 75 1 167 1 36 1 367 2 60 1 307 1 13 2 123 1 237 1 378 1 128 1 331 1 379 1 
260 1 1 1 318 1 266 1 29 1 51 1 319 2 50 1 73 1 32 2 274 1 244 2 75 1 276 1 170 1 327 1 60 1 171 1 123 1 127 1 331 2 350 1 197 1 
316 1 260 1 353 1 1 1 319 1 29 1 134 1 32 1 274 1 244 1 75 1 167 1 36 1 367 2 170 1 326 1 60 1 369 1 116 1 307 1 123 1 214 1 378 1 331 1 197 1 379 1 
145 1 
158 1 161 1 50 1 290 1 56 2 338 2 55 1 294 1 245 1 297 2 110 1 8 1 341 1 302 1 113 1 60 1 345 1 61 1 253 2 254 1 12 1 308 4 123 2 312 1 127 1 350 2 216 5 177 1 66 2 260 2 131 2 355 2 27 6 28 2 266 1 29 2 267 1 181 1 359 3 139 1 185 1 75 1 142 2 144 1 79 1 365 1 277 1 327 1 280 5 83 1 39 2 150 2 85 1 88 2 45 1 
258 1 158 1 27 2 267 1 181 1 359 1 290 1 139 1 185 1 142 1 110 1 144 1 79 1 277 1 341 1 280 3 61 1 85 1 308 2 312 1 216 3 45 1 
258 1 110 1 8 1 144 1 79 1 158 1 277 1 341 1 280 3 27 1 28 1 61 1 85 1 308 3 267 1 181 1 359 1 290 1 56 1 312 1 185 1 139 1 216 3 45 1 
258 1 158 1 27 2 28 1 267 1 181 1 359 1 290 1 56 1 139 1 185 1 142 1 110 1 297 1 144 1 8 1 79 1 277 1 341 1 280 3 61 1 85 1 308 3 312 1 216 3 45 1 
158 1 161 1 3 1 290 1 337 1 56 4 55 1 338 2 245 1 297 4 110 1 8 5 341 1 113 1 345 1 61 1 253 1 12 1 308 6 172 1 312 1 216 5 258 1 66 1 131 2 355 2 27 7 28 5 267 1 181 1 225 1 359 3 185 1 139 1 142 4 144 1 79 1 277 1 280 5 85 1 282 1 150 2 88 2 45 1 
158 1 161 1 290 1 55 1 338 2 56 2 245 1 110 1 297 2 8 1 341 1 302 1 113 1 345 1 61 1 253 1 12 1 308 4 312 1 216 4 66 1 131 2 355 2 27 4 28 2 267 1 181 1 359 2 185 1 139 1 142 2 144 1 79 1 277 1 280 4 39 2 85 1 150 2 88 2 45 1 
66 1 158 1 131 2 355 2 27 4 28 1 161 1 267 1 181 1 225 1 359 2 337 1 290 1 56 2 338 2 55 1 139 1 185 1 142 2 245 1 297 2 110 1 8 1 144 1 79 1 277 1 341 1 280 4 113 1 345 1 61 1 253 1 150 2 85 1 282 1 12 1 308 4 88 2 312 1 216 4 45 1 
66 1 158 1 131 2 355 2 27 4 28 1 161 1 267 1 181 1 225 1 359 2 337 1 290 1 56 2 338 2 55 1 139 1 185 1 142 2 245 1 297 2 110 1 8 1 144 1 79 1 277 1 341 1 280 4 113 1 345 1 61 1 253 1 150 2 85 1 282 1 12 1 308 4 88 2 312 1 216 4 45 1 
66 1 158 1 131 2 24 1 27 4 47 1 28 1 70 2 161 1 267 1 181 1 359 2 337 1 290 1 56 2 338 2 139 1 185 1 295 2 142 2 245 1 297 2 110 1 8 1 144 1 79 1 277 1 341 1 280 4 113 1 39 2 345 1 61 1 253 1 85 1 12 1 308 4 312 1 215 1 216 4 45 1 
66 1 158 1 131 2 355 2 27 5 28 1 161 1 267 1 181 1 225 1 359 2 337 1 290 1 338 2 55 1 56 3 139 1 185 1 245 1 142 3 110 1 297 3 8 1 144 1 79 1 277 1 341 1 280 4 113 1 345 1 61 1 253 1 150 2 12 1 282 1 85 1 308 5 172 1 88 2 312 1 216 4 45 1 
66 1 158 1 131 2 355 2 27 5 28 1 161 1 267 1 181 1 225 1 359 2 337 1 290 1 338 2 55 1 56 3 139 1 185 1 245 1 142 3 110 1 297 3 8 1 144 1 79 1 277 1 341 1 280 4 113 1 345 1 61 1 253 1 150 2 12 1 282 1 85 1 308 5 172 1 88 2 312 1 216 4 45 1 
158 1 47 1 161 1 290 1 338 2 56 2 295 2 245 1 110 1 297 2 8 1 341 1 302 1 113 1 345 1 61 1 253 1 12 1 308 4 312 1 216 4 66 1 131 2 27 4 70 2 28 1 267 1 181 1 359 2 185 1 139 1 142 2 144 1 79 1 277 1 280 4 39 2 85 1 45 1 
33 1 155 1 269 1 20 1 241 1 25 1 68 1 329 1 102 1 195 1 363 2 
176 1 130 1 259 1 20 2 335 2 317 1 240 1 179 2 241 2 263 1 264 11 102 2 106 3 137 2 54 4 138 1 77 8 78 1 363 4 33 2 364 1 325 11 38 1 344 1 305 1 233 14 310 6 173 2 125 1 14 1 329 2 196 3 195 1 
130 1 259 1 260 1 20 1 0 1 157 1 96 1 262 1 241 1 102 1 266 1 29 1 243 1 54 1 138 1 75 1 77 1 339 1 78 1 363 2 207 1 7 1 33 1 80 1 277 2 327 1 60 1 61 1 233 2 234 1 86 1 123 1 310 1 312 2 43 1 329 1 350 1 195 1 
33 1 7 1 207 1 259 1 260 1 20 1 96 1 277 1 210 1 241 1 102 1 61 1 29 1 123 1 312 1 43 1 329 1 350 1 195 1 363 2 
130 1 95 1 260 7 20 2 96 1 25 1 241 2 180 1 102 2 266 3 29 8 50 1 322 2 184 1 138 1 75 2 167 1 77 1 363 4 207 1 7 1 33 2 34 1 301 1 277 1 327 2 82 1 60 2 346 1 61 1 233 2 123 8 310 1 64 1 312 1 329 2 127 1 350 2 195 2 
259 1 20 1 335 1 96 1 198 1 317 1 179 1 241 1 263 1 264 1 102 1 137 1 54 1 77 1 363 2 33 1 207 1 300 1 35 1 325 1 277 1 305 1 61 1 233 3 310 2 173 1 312 1 329 1 195 1 
33 1 325 1 20 1 335 1 179 1 25 1 241 1 264 1 344 1 102 1 233 2 173 1 54 1 329 1 77 2 195 1 363 2 59 1 
33 1 325 1 20 1 335 1 317 1 25 1 241 1 263 1 264 1 102 1 305 1 233 2 310 2 54 1 329 1 195 1 363 2 340 1 
20 1 335 2 179 1 317 1 241 1 25 1 263 1 264 2 102 1 137 1 54 2 77 2 363 2 33 1 325 2 344 1 305 1 233 4 310 2 173 1 329 1 195 1 
33 1 325 1 20 1 335 1 82 1 179 1 241 1 264 1 344 1 102 1 233 2 173 1 54 1 329 1 77 2 195 1 363 2 59 1 
33 1 325 1 20 1 335 1 317 1 82 1 241 1 263 1 264 1 102 1 305 1 233 2 310 2 54 1 329 1 195 1 363 2 340 1 
20 1 335 2 179 1 317 1 241 1 263 1 264 2 102 1 137 1 54 2 77 2 363 2 33 1 325 2 82 1 344 1 305 1 233 4 310 2 173 1 329 1 195 1 
20 1 335 2 179 1 317 1 241 1 263 1 264 2 102 1 137 1 54 2 77 2 363 2 33 1 325 2 344 1 305 1 233 4 310 2 173 1 329 1 195 1 
130 1 260 1 20 1 157 1 241 1 102 1 266 1 29 1 243 1 138 1 75 1 229 1 77 1 339 1 78 1 363 2 33 1 80 1 277 1 327 1 60 1 233 2 123 1 310 1 312 1 329 1 350 1 195 1 
130 1 260 1 20 1 241 1 102 1 266 1 320 1 29 1 336 1 243 1 138 1 75 1 77 1 78 1 363 2 33 1 80 1 277 1 327 1 60 1 233 2 123 1 42 1 310 1 312 1 329 1 350 1 195 1 
259 1 20 1 335 2 179 1 317 1 241 1 263 1 264 2 102 1 137 1 54 2 77 2 363 2 33 1 325 2 344 1 305 1 233 4 310 2 173 1 329 1 195 1 
260 1 20 1 335 2 157 1 317 1 179 1 263 1 241 1 264 2 102 1 266 1 29 1 243 1 31 1 137 1 54 2 75 1 229 1 77 2 339 1 363 2 33 1 325 2 80 1 301 1 277 1 327 1 60 1 344 1 305 1 233 4 123 1 310 2 173 1 312 1 329 1 195 1 
259 1 20 1 335 1 96 1 179 1 263 1 241 1 264 1 102 1 268 1 137 1 54 1 77 2 363 2 33 1 207 1 300 1 35 1 325 1 277 1 344 1 305 1 61 1 233 3 310 1 173 1 312 1 329 1 195 1 
176 1 20 2 335 6 317 3 179 3 98 1 241 2 263 3 48 2 288 1 106 1 137 3 76 1 77 9 58 1 363 4 140 1 247 1 187 1 33 2 368 1 38 1 344 3 305 3 233 19 310 10 173 3 329 2 17 2 196 2 
176 2 20 3 335 4 317 2 179 3 98 1 263 2 241 3 48 4 288 1 106 2 137 3 107 1 76 1 77 14 58 2 363 6 140 1 187 2 33 3 81 1 342 1 344 2 148 1 305 2 371 1 233 26 310 12 311 1 173 3 313 2 329 3 17 1 196 2 
176 3 155 1 20 3 335 8 317 4 179 4 98 1 241 3 263 5 265 1 48 4 288 1 52 1 269 1 106 3 137 4 107 1 76 1 77 20 58 1 363 6 140 1 247 1 187 2 33 3 81 1 278 1 342 1 38 1 148 1 344 4 149 1 305 4 371 1 233 41 310 21 311 1 173 5 313 1 329 3 377 1 17 1 196 4 
176 3 155 1 20 4 335 7 317 4 179 4 98 1 241 4 263 4 265 1 48 4 288 1 52 1 269 1 106 3 137 4 107 1 76 1 77 20 58 1 363 8 140 1 247 1 187 2 33 4 81 1 278 1 342 1 38 1 148 1 344 3 149 1 305 3 371 1 233 38 310 18 311 1 173 5 313 2 329 4 377 1 17 1 196 4 
176 2 155 1 20 2 335 14 317 7 179 7 98 1 241 2 263 8 265 1 48 4 288 1 52 1 269 1 106 4 137 7 107 1 76 1 77 27 58 1 363 4 140 1 187 1 33 2 81 1 278 1 342 1 38 2 148 1 344 7 149 1 305 7 371 1 233 52 310 25 311 1 173 8 125 2 313 1 329 2 17 1 196 4 
203 1 188 1 135 1 250 1 370 1 238 1 332 1 284 1 71 1 217 1 
74 1 285 1 
235 1 203 1 188 1 104 1 105 1 370 1 238 1 332 1 71 1 
188 1 230 1 156 1 280 1 219 2 370 1 28 1 71 1 163 1 203 1 122 1 135 1 375 1 332 1 238 1 284 1 216 1 217 1 
188 1 230 1 156 1 280 1 219 2 370 1 28 1 71 1 163 1 203 1 122 1 135 1 375 1 332 1 238 1 284 1 216 1 217 1 
188 1 230 1 156 1 280 1 219 2 370 1 28 1 71 1 163 1 203 1 122 1 135 1 375 1 332 1 238 1 284 1 216 1 217 1 
30 1 330 1 168 1 
30 1 330 1 168 1 
169 1 299 1 
169 1 299 1 330 1 
226 1 53 1 
261 1 96 2 99 1 219 1 71 1 163 1 203 1 53 1 226 1 74 1 291 1 78 1 207 2 188 1 230 1 277 2 280 1 251 1 370 1 61 2 41 1 213 1 312 2 238 1 332 1 216 1 285 1 
30 1 168 1 
169 1 299 1 330 1 
315 1 130 1 259 1 20 1 260 2 200 1 241 1 102 1 29 2 322 2 184 1 138 1 77 1 363 2 33 1 298 1 231 1 277 2 346 1 61 2 233 2 123 2 310 1 312 2 329 1 44 1 195 1 
316 1 36 1 260 2 301 1 367 2 353 1 60 1 211 1 116 1 29 2 319 1 307 1 123 2 165 1 152 1 75 1 378 1 167 1 379 1 
316 1 129 1 36 1 260 1 367 2 353 1 60 1 116 1 29 1 319 1 307 1 123 1 152 1 75 1 378 1 167 1 379 1 
276 1 260 1 327 1 60 1 100 1 266 1 29 1 319 1 50 1 123 1 165 1 75 1 127 1 350 1 
316 1 36 1 260 1 367 2 353 1 60 1 211 1 116 1 29 1 319 1 307 1 123 1 165 1 152 1 75 1 378 1 167 1 379 1 
159 1 
224 1 68 1 236 1 
66 1 355 1 27 1 28 2 359 1 55 1 245 1 8 1 280 1 113 1 39 1 345 1 253 1 150 1 12 1 88 1 216 1 
202 1 162 2 289 2 166 2 294 2 245 4 110 2 8 2 301 1 111 2 60 4 113 4 345 4 305 2 254 1 253 8 119 3 11 2 12 4 348 6 309 1 123 3 212 2 255 6 173 2 256 1 350 1 216 5 66 9 260 3 179 2 263 2 27 5 266 10 28 8 29 3 224 1 359 3 183 1 137 2 75 3 80 3 366 2 189 2 327 3 190 1 146 2 280 5 147 2 39 12 150 6 90 1 236 1 46 2 
176 1 66 8 179 2 263 2 27 1 28 5 162 2 359 1 106 1 137 2 107 1 294 1 296 1 245 2 8 2 366 1 81 1 342 1 280 1 113 2 39 6 148 1 345 2 305 2 306 1 254 1 253 5 12 2 150 3 348 5 255 5 311 1 173 2 196 1 216 1 
66 2 96 1 97 1 263 1 162 2 52 1 185 1 246 1 245 1 141 1 207 1 300 1 366 1 277 1 278 1 280 1 113 1 149 1 345 1 61 1 253 2 12 1 282 1 173 2 15 1 312 1 314 1 216 1 
8 1 66 1 113 1 345 1 28 1 253 1 12 1 224 1 236 1 245 1 
66 5 366 1 179 2 263 2 39 10 305 2 28 5 162 2 253 5 150 5 348 5 212 1 255 5 173 2 137 2 
8 1 359 1 280 1 27 1 28 1 216 1 
177 1 66 2 260 4 27 4 266 1 29 4 50 1 271 1 359 2 205 1 75 1 294 2 245 1 327 1 83 1 280 3 60 1 113 2 345 2 254 2 253 2 12 2 283 1 123 4 90 2 256 1 127 1 350 2 216 3 
260 1 20 1 96 2 157 1 241 1 102 1 266 1 29 1 243 1 138 1 229 1 75 1 339 1 78 1 363 2 33 1 207 2 300 2 80 1 277 3 327 1 191 1 60 1 233 1 61 2 123 1 310 1 15 1 312 3 329 1 350 1 195 1 
8 2 66 1 113 1 39 4 265 1 345 1 28 4 253 2 254 1 150 2 12 1 348 2 255 2 294 1 245 1 
334 1 370 1 238 1 
334 1 370 1 238 1 
226 1 273 1 370 1 238 1 217 1 
334 1 370 1 238 1 
370 1 108 1 238 1 
370 1 108 1 238 1 
370 1 108 1 238 1 
370 1 238 1 
203 1 71 1 
33 2 155 1 20 2 335 3 278 1 317 2 263 1 241 2 344 1 265 1 149 1 233 8 52 1 269 1 310 4 173 1 313 1 329 2 77 4 363 4 
155 1 269 1 68 1 
33 1 20 1 335 2 317 1 179 1 263 1 241 1 344 1 305 1 233 4 164 1 310 2 173 1 137 1 329 1 77 2 363 2 
176 1 335 2 317 1 179 1 263 1 38 1 344 1 305 1 233 7 310 4 173 1 106 1 137 1 77 3 196 2 
155 1 20 2 335 9 179 2 240 1 317 5 263 3 241 2 265 1 52 1 269 1 137 2 106 2 77 11 363 4 33 2 278 2 38 1 344 4 149 2 305 2 233 23 124 1 310 12 173 3 125 1 313 2 329 2 196 2 
310 1 196 1 233 1 
106 1 77 1 233 1 
33 1 20 1 335 3 179 1 317 2 241 1 263 1 344 1 305 1 233 6 164 1 212 1 310 3 173 1 137 1 329 1 77 3 363 2 
176 1 20 1 335 2 179 2 317 1 241 1 263 2 106 1 137 2 107 1 77 6 363 2 140 1 33 1 81 1 342 1 344 1 148 1 305 2 233 12 310 6 173 2 311 1 329 1 196 1 
335 2 278 1 317 1 263 1 344 1 149 1 233 6 52 1 310 3 173 1 77 3 
33 1 155 1 20 1 335 2 278 1 317 1 241 1 344 1 149 1 233 3 269 1 124 1 310 2 313 1 329 1 77 1 363 2 
33 1 20 1 335 5 97 1 278 2 317 3 241 1 263 2 344 2 149 2 233 10 52 1 310 5 173 2 329 1 77 5 363 2 140 1 
33 1 20 1 335 1 179 1 241 1 344 1 233 2 173 1 329 1 77 2 140 1 363 2 
33 1 20 1 335 2 317 1 179 1 263 1 241 1 344 1 305 1 233 4 310 2 173 1 137 1 329 1 77 2 140 1 363 2 
247 1 33 3 20 3 335 2 278 1 317 1 241 3 344 1 149 1 233 3 124 1 310 2 313 1 329 3 77 1 140 1 363 6 
176 1 155 1 20 5 333 1 335 12 179 3 317 7 241 5 263 5 265 1 164 1 52 2 269 1 270 1 106 3 137 3 275 1 77 16 363 10 140 1 247 1 33 5 278 3 38 1 344 5 149 3 305 3 233 34 124 1 310 18 173 5 313 2 329 5 196 4 
176 1 155 1 20 1 335 2 317 2 263 1 241 1 265 1 269 1 52 1 106 1 77 4 363 2 140 1 33 1 81 1 278 1 149 1 233 8 310 4 173 1 329 1 196 1 
176 1 155 1 20 2 335 3 317 2 179 1 263 1 241 2 265 1 164 1 52 1 269 1 106 1 137 1 77 6 140 1 363 4 33 2 81 1 278 1 38 1 344 1 149 1 233 11 310 5 173 2 329 2 196 2 
176 1 155 1 20 3 335 4 179 2 317 3 241 3 263 3 265 1 164 1 52 1 269 1 106 1 137 2 107 1 77 9 363 6 140 1 33 3 81 1 278 1 342 1 344 1 148 1 149 1 305 2 233 19 310 10 173 3 311 1 313 1 329 3 196 1 
176 1 155 1 20 3 335 5 179 2 317 3 241 3 263 2 265 1 164 1 52 1 269 1 106 1 137 2 107 1 77 10 363 6 140 1 33 3 81 1 278 1 342 1 344 2 148 1 149 1 305 1 233 17 310 7 173 3 311 1 313 1 329 3 196 1 
176 1 155 1 20 1 335 2 317 2 263 1 241 1 265 1 269 1 52 1 106 1 77 4 363 2 140 1 33 1 81 1 278 1 149 1 233 8 310 4 173 1 329 1 196 1 
176 1 20 1 335 2 179 2 317 1 241 1 263 2 106 1 137 2 107 1 77 6 363 2 140 1 33 1 81 1 342 1 344 1 148 1 305 2 233 12 310 6 173 2 311 1 329 1 196 1 
176 1 155 1 20 4 335 5 179 2 317 3 241 4 263 2 265 1 164 1 52 1 269 1 106 1 137 2 107 1 77 10 363 8 140 1 33 4 81 1 278 1 342 1 344 2 148 1 149 1 305 1 233 18 310 8 311 1 173 3 313 2 329 4 196 1 
176 1 20 4 335 6 179 3 317 3 241 4 263 2 106 1 137 3 107 1 77 9 140 1 363 8 33 4 247 1 81 1 342 1 344 3 148 1 305 2 233 16 310 7 311 1 173 3 313 2 329 4 196 1 
155 2 335 6 278 3 317 3 263 1 344 3 149 3 233 7 269 1 52 1 310 4 173 1 77 3 
176 1 155 1 20 4 335 4 179 2 317 3 241 4 263 2 265 1 52 1 269 1 106 1 137 2 107 1 77 10 140 1 363 8 33 4 247 1 81 1 278 1 342 1 344 1 148 1 149 1 305 1 233 18 310 8 311 1 173 3 313 2 329 4 196 1 
121 1 277 1 181 1 312 1 78 1 61 1 372 1 
324 1 92 1 277 1 372 1 61 1 121 1 181 1 174 1 57 1 312 1 257 1 78 1 
260 1 123 1 68 1 350 1 50 1 29 1 
7 1 207 1 80 1 260 1 96 1 277 2 327 1 60 1 266 1 61 1 29 1 123 1 243 1 312 2 75 1 350 1 339 1 78 1 
7 1 207 2 80 2 260 1 96 1 277 2 341 1 327 2 146 1 147 1 60 1 266 3 61 2 29 1 267 1 123 1 243 1 312 2 185 1 90 1 75 1 339 1 78 1 
260 2 96 1 266 3 29 2 267 1 272 1 243 1 185 1 75 1 78 1 207 2 7 1 80 2 277 2 341 1 327 2 146 1 60 1 147 1 61 2 123 2 42 1 312 2 90 1 
260 3 239 1 27 1 266 4 28 1 29 3 272 1 75 1 110 1 8 1 80 1 327 1 146 1 280 2 60 1 147 1 119 1 123 3 90 1 350 1 216 2 351 1 46 1 
110 1 8 1 80 1 260 3 111 1 327 1 146 1 280 2 147 1 60 1 27 1 28 1 266 4 29 3 119 1 123 3 272 1 90 1 75 1 350 1 216 2 46 1 
260 1 123 1 64 1 60 1 75 1 29 1 
34 1 95 1 301 1 260 6 80 1 327 2 190 1 180 1 192 1 60 3 266 3 72 1 29 7 123 7 322 1 64 1 184 1 349 1 75 2 167 1 350 2 
155 1 259 1 20 2 260 1 335 2 96 1 157 1 200 1 317 2 263 1 241 2 264 1 265 1 102 2 266 1 29 1 52 1 269 1 243 1 31 1 54 1 75 1 229 1 77 3 361 1 339 1 78 2 363 4 207 1 7 1 33 2 325 1 80 1 301 1 277 2 278 1 327 1 60 1 149 1 233 6 61 1 123 1 310 3 173 1 312 2 329 2 195 2 
66 1 260 1 27 2 28 1 266 2 29 1 224 1 359 1 289 1 166 1 245 2 110 1 8 1 189 1 111 1 280 3 113 2 345 2 253 1 119 1 12 2 123 1 213 1 256 1 236 1 350 1 216 3 46 1 
301 1 260 2 80 1 327 1 190 1 60 2 266 2 29 2 309 1 123 2 64 1 75 1 46 1 
260 4 301 1 327 1 60 1 266 1 29 4 50 1 123 4 272 1 194 1 75 1 127 1 350 1 
260 2 80 1 327 1 9 1 192 1 60 2 266 1 72 1 29 2 321 1 123 2 227 1 90 1 75 1 
260 1 367 1 123 1 353 1 60 1 75 1 378 1 350 1 379 1 29 1 
260 2 301 1 123 2 184 1 44 1 167 1 29 2 
34 1 260 4 301 1 95 1 327 2 60 2 266 3 50 1 29 5 123 5 184 1 194 1 90 1 75 2 127 1 350 1 
260 4 301 1 95 1 327 2 60 2 266 3 50 1 29 5 123 5 228 1 184 1 194 1 90 1 75 2 127 1 350 1 
7 1 207 1 80 1 260 1 96 1 277 2 327 1 60 1 266 1 61 1 29 1 123 1 42 1 243 1 312 2 75 1 350 1 78 1 
260 1 80 1 327 1 190 1 192 1 60 2 266 1 72 1 29 1 123 1 349 1 90 1 75 1 
315 1 298 1 94 1 231 1 277 1 354 1 114 1 61 1 312 1 
279 1 354 1 352 1 
94 1 354 1 304 1 114 1 78 1 
110 1 8 1 94 2 341 1 279 1 354 1 280 2 304 2 28 1 114 2 85 1 267 1 182 1 213 1 185 1 78 1 216 2 362 1 352 1 
136 1 68 1 4 1 128 1 
136 1 170 1 1 1 274 1 128 1 197 1 
244 1 32 1 274 1 
109 2 326 1 170 1 1 3 117 1 136 1 373 1 274 3 89 1 197 1 128 1 
13 1 136 1 170 1 1 2 274 2 328 1 128 1 197 1 
36 1 367 1 326 1 170 1 1 1 103 1 274 1 4 1 378 1 197 1 65 1 
136 1 170 1 326 1 1 1 274 1 197 1 
136 1 170 1 326 1 1 1 274 1 4 1 128 1 197 1 
91 1 326 1 170 2 249 1 1 2 281 1 136 1 274 2 197 2 
326 1 170 1 1 3 357 1 222 1 103 1 13 2 136 1 274 3 4 1 128 1 197 1 6 1 
316 1 36 1 367 2 326 1 170 1 353 1 1 2 13 1 136 1 360 1 274 2 378 1 128 1 197 1 
326 1 170 2 1 4 84 1 357 1 328 1 103 1 13 2 136 1 274 4 4 1 128 1 197 2 
136 1 170 1 326 1 1 1 274 1 128 1 197 1 
109 1 170 1 1 4 357 1 117 1 103 1 13 2 136 2 89 1 274 4 4 1 128 2 206 1 197 1 
21 1 326 1 170 1 1 2 69 1 13 1 136 1 274 2 126 1 197 1 128 1 
109 2 136 1 170 1 326 1 1 3 89 2 376 1 274 3 128 1 197 1 117 1 
151 1 178 2 4 2 40 1 
286 1 170 1 326 1 1 1 274 1 197 1 
13 1 136 1 170 1 326 1 1 2 274 2 128 1 197 1 222 1 
49 1 
136 1 170 1 326 1 1 1 274 1 128 1 197 1 
109 1 13 1 136 1 170 1 326 1 1 3 274 3 128 1 197 1 222 1 
357 1 4 1 206 1 103 1 
136 1 

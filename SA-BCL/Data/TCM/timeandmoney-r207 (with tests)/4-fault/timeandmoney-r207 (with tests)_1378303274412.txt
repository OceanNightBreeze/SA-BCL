#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 125 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 125 217 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 3 190 2 309 1 3 1 58 1 49 1 102 1 15 1 157 1 54 2 226 3 241 2 345 1 
147 2 47 1 309 2 329 2 3 6 75 1 181 1 49 1 102 1 157 1 82 1 54 5 226 9 362 1 189 9 37 1 190 2 58 1 285 1 136 1 192 2 15 3 138 1 287 1 142 2 288 1 241 2 345 4 
147 2 47 1 309 2 329 2 3 6 75 1 181 1 49 1 102 1 157 1 82 1 54 5 226 9 362 1 189 9 37 1 190 2 58 1 285 1 136 1 192 2 15 3 138 1 287 1 142 2 288 1 241 2 345 4 
147 2 47 1 309 2 329 2 3 7 75 1 181 1 49 1 102 1 157 1 82 1 54 6 226 10 362 1 189 10 37 1 190 2 58 1 285 1 136 1 192 2 15 4 138 1 287 1 142 2 288 1 241 2 345 5 
147 2 47 1 309 2 329 2 3 4 75 1 181 1 49 1 102 1 157 1 82 1 54 4 226 7 362 1 189 7 37 1 190 2 58 1 285 1 136 1 192 1 15 2 138 1 142 2 288 1 241 2 345 3 
147 1 189 4 37 1 190 1 3 3 329 1 49 1 102 1 285 1 192 2 15 1 157 1 287 1 54 3 142 1 226 4 241 1 345 2 
147 1 1 1 189 2 190 1 309 1 250 1 49 1 102 1 136 1 157 1 54 1 226 2 142 1 159 1 241 1 362 1 
147 1 309 1 3 7 329 1 75 1 49 1 102 1 157 1 223 1 54 5 226 9 189 9 37 1 190 2 58 1 285 1 192 2 15 3 138 1 287 1 142 1 241 2 345 4 247 1 
147 1 309 1 3 7 329 1 75 1 49 1 102 1 157 1 223 1 54 5 226 9 189 9 37 1 190 2 58 1 285 1 192 2 15 3 138 1 287 1 142 1 241 2 345 4 247 1 
73 1 319 1 350 1 202 1 5 1 268 1 42 1 205 1 338 1 313 1 173 1 242 1 
358 1 
307 1 42 1 8 1 199 1 319 2 358 1 202 2 252 1 
89 1 307 1 199 1 71 1 349 2 319 5 202 5 179 1 40 2 252 2 215 1 42 2 339 1 356 1 373 1 358 1 196 2 86 1 11 1 
199 1 358 1 342 1 
48 2 358 1 130 1 
205 2 313 2 173 2 73 2 259 1 268 2 5 1 242 2 
121 1 326 2 148 1 200 1 73 2 76 1 5 1 180 2 50 1 151 1 278 2 153 1 205 3 313 2 257 1 259 1 34 2 261 1 10 1 334 2 364 1 112 1 268 2 302 1 269 1 92 1 235 1 115 1 237 1 304 1 173 2 194 1 305 1 242 3 116 1 290 1 376 1 
205 1 313 1 173 1 73 1 350 1 268 1 5 1 242 1 
100 1 199 1 319 1 232 1 268 1 202 1 39 1 205 1 27 1 171 1 358 1 242 1 67 1 229 1 
100 1 199 1 73 1 319 2 202 2 268 1 205 1 313 1 27 1 171 1 173 1 358 1 242 1 67 1 229 1 
42 1 319 1 4 1 202 1 252 1 
307 1 42 1 199 1 301 1 319 2 358 1 202 2 252 1 
319 1 202 1 252 1 
73 1 351 1 268 2 152 1 205 2 313 1 173 1 259 2 242 2 
162 1 90 1 218 1 
121 1 326 1 112 1 180 1 151 1 153 1 205 1 354 1 304 1 257 1 259 1 34 1 242 1 290 1 376 1 10 1 
259 1 342 1 
205 3 219 1 313 3 173 1 73 3 259 1 268 3 242 3 
156 1 205 1 27 1 313 1 73 1 268 1 242 1 
205 1 27 1 313 1 173 1 73 1 351 1 268 1 242 1 152 1 
0 1 121 1 100 1 219 1 326 1 148 1 200 1 73 3 202 1 5 1 180 1 50 1 151 1 152 1 278 1 153 1 205 4 313 3 27 1 257 1 259 1 34 1 261 1 107 1 10 1 229 1 334 2 364 1 112 1 319 1 268 3 302 1 269 1 171 1 237 1 304 1 173 2 194 1 305 1 242 4 67 1 290 1 177 1 376 1 
205 2 313 1 219 1 322 1 73 1 259 1 268 2 242 2 39 1 
0 1 219 2 100 1 73 3 319 1 202 1 268 3 152 1 205 3 104 1 27 1 313 3 171 1 173 1 358 1 67 1 242 3 107 1 229 1 
219 1 162 1 73 2 268 2 152 1 205 2 313 2 173 1 242 2 218 1 
121 1 326 1 112 1 180 1 151 1 153 1 205 1 304 1 257 1 259 1 34 1 242 1 290 1 376 1 10 1 
121 1 326 1 112 1 180 1 151 1 277 1 153 1 205 1 304 1 256 1 257 1 259 1 34 1 242 1 376 1 
162 1 90 1 334 2 148 1 200 1 364 1 149 1 269 1 50 2 278 2 95 1 337 1 139 1 237 1 341 1 66 1 261 1 68 1 218 1 
205 1 27 1 313 1 171 1 73 1 14 1 268 1 242 1 
0 1 121 1 219 1 162 1 326 1 112 1 73 1 268 1 180 1 151 1 153 1 205 2 313 1 304 1 257 1 34 1 242 2 290 1 376 1 10 1 
0 1 219 2 291 1 73 4 268 5 152 1 39 1 205 5 313 4 322 1 173 1 259 1 242 5 289 1 
156 1 205 2 27 1 313 2 14 1 73 2 268 2 242 2 
271 1 175 1 243 1 
271 2 81 1 327 1 175 2 367 1 234 1 
271 1 175 1 
271 1 175 1 
81 1 327 1 
81 1 327 1 
81 1 327 1 
271 1 175 1 360 1 
271 1 175 1 360 1 
271 1 175 1 360 1 
271 1 225 1 175 1 
271 1 225 1 175 1 
271 1 225 1 175 1 
230 1 120 2 36 1 23 2 319 2 202 2 163 1 129 1 234 1 331 2 368 2 271 2 280 1 172 1 281 1 358 1 175 2 244 2 245 3 
120 1 198 1 292 1 73 2 319 1 283 1 268 2 202 1 331 1 286 1 205 2 368 1 271 1 80 1 280 1 313 2 140 1 259 1 175 1 344 1 243 1 242 2 244 1 245 1 
274 2 147 2 329 1 250 1 51 1 
147 1 329 1 142 1 
147 1 142 1 250 1 
274 1 147 3 329 2 250 1 221 1 51 1 
274 1 147 2 329 1 185 1 250 1 51 1 
307 1 199 1 198 1 349 1 48 3 202 5 130 1 6 1 252 1 80 1 208 1 258 1 358 2 133 1 55 1 188 2 11 1 89 2 267 1 319 5 91 1 40 1 286 1 337 1 236 1 42 4 373 3 196 1 66 1 144 2 46 1 145 2 
307 1 198 4 199 1 71 1 349 2 48 9 4 5 202 9 130 3 6 2 252 6 253 5 208 3 358 5 55 3 188 6 11 1 89 6 214 1 319 9 91 1 40 2 337 3 236 3 42 7 63 1 323 1 373 8 195 1 196 2 66 3 46 2 145 6 246 1 377 1 
199 1 198 1 349 1 71 1 48 4 202 3 130 2 6 1 208 1 258 1 358 3 55 1 188 2 89 2 267 1 319 3 40 1 337 1 42 2 236 1 373 3 196 1 66 1 46 1 144 1 145 2 
199 1 198 2 349 1 71 1 48 7 202 4 130 3 6 1 208 2 258 1 358 4 55 2 188 4 89 4 214 1 267 1 319 4 40 1 337 2 42 3 236 2 373 5 195 1 196 1 66 2 46 1 144 2 145 4 246 1 
298 1 
160 1 257 1 342 1 
257 1 74 1 
121 1 257 1 
160 2 121 1 70 1 304 1 32 1 257 3 
121 1 304 1 257 1 
257 1 103 1 
135 1 220 1 328 1 149 2 50 3 191 1 278 7 337 1 254 1 62 1 139 3 206 2 44 1 20 1 375 1 55 1 263 1 116 4 
220 1 308 1 148 1 328 2 200 1 149 5 50 15 154 4 278 31 254 1 355 3 206 3 296 1 208 3 224 1 55 4 263 2 161 1 334 2 364 1 269 1 320 1 191 2 236 3 337 4 62 5 139 10 43 1 44 1 374 1 20 2 375 1 66 3 116 16 
148 2 200 2 328 1 149 3 50 4 278 9 254 1 206 2 55 1 263 1 161 1 334 4 364 2 269 2 191 1 337 1 62 1 139 4 44 1 20 1 375 1 143 1 22 1 116 5 
220 1 328 1 149 2 50 3 191 1 278 7 337 1 254 1 62 1 139 3 206 2 44 1 20 1 375 1 55 1 263 1 116 4 
220 1 328 1 149 2 50 3 191 1 278 7 337 1 254 1 62 1 139 3 206 2 44 1 20 1 375 1 55 1 263 1 116 4 
121 1 326 1 363 1 189 1 112 1 309 2 190 1 180 1 164 1 151 1 153 1 155 1 53 2 370 2 17 1 193 1 257 1 226 1 97 1 186 2 241 1 34 1 176 1 
147 2 326 1 309 1 329 1 250 1 180 1 49 1 221 1 151 1 53 1 31 1 226 1 186 1 34 1 13 1 189 1 38 1 190 1 109 1 112 1 303 1 370 1 142 1 241 1 197 1 306 1 
147 2 326 1 293 1 309 1 3 1 329 1 250 1 180 1 49 1 221 1 151 1 102 1 53 1 157 1 54 1 31 1 226 2 186 1 34 1 189 2 38 1 190 1 109 1 112 1 303 1 370 1 142 1 241 1 197 1 306 1 
147 2 326 1 309 1 329 1 3 2 250 1 180 1 221 1 151 1 102 1 53 1 157 1 54 1 31 1 226 3 186 1 34 1 13 1 189 3 38 1 190 1 112 1 303 1 370 1 17 1 142 1 240 1 241 1 197 1 306 1 
147 2 326 1 189 2 13 1 38 1 112 1 309 1 329 1 3 2 250 1 180 1 221 1 151 1 102 1 53 1 370 1 157 1 54 1 31 1 142 1 240 1 226 2 186 1 34 1 197 1 
365 1 
2 1 100 1 326 2 199 1 48 2 202 5 151 1 6 1 252 6 153 2 205 1 105 1 257 1 108 1 11 1 212 1 112 1 268 1 167 2 171 1 67 1 119 1 307 3 121 1 178 2 349 1 180 2 127 1 25 2 79 1 130 2 353 2 312 1 183 2 27 1 132 1 33 1 358 2 34 2 187 1 134 2 88 4 229 1 89 2 363 1 231 2 319 5 232 1 39 1 40 1 193 1 373 2 196 1 242 1 99 1 
307 1 100 1 2 1 202 3 127 1 252 2 205 1 27 1 8 1 33 1 134 1 88 2 229 1 319 3 268 1 232 1 39 1 171 1 242 1 67 1 99 1 119 1 
307 1 100 1 2 1 178 1 199 1 202 3 127 1 252 1 205 1 27 1 8 1 33 1 358 1 88 3 229 1 319 3 268 1 232 1 39 1 171 1 242 1 67 1 99 1 119 1 
307 1 100 1 2 1 178 1 199 1 202 3 127 1 25 1 252 2 205 1 8 1 27 1 33 1 358 1 134 1 88 3 229 1 319 3 268 1 232 1 39 1 171 1 242 1 67 1 99 1 119 1 
100 1 2 1 199 5 101 1 202 5 252 7 205 1 8 1 295 1 105 1 11 1 212 1 268 1 167 2 171 1 64 1 67 1 119 1 307 3 347 1 178 4 349 1 127 1 25 4 130 2 353 2 27 1 183 2 33 1 84 1 358 5 134 4 88 6 229 1 89 1 231 2 319 5 232 1 39 1 40 1 373 1 196 1 242 1 99 1 
100 1 2 1 199 1 48 2 202 4 252 4 205 1 105 1 11 1 108 1 212 1 268 1 167 2 171 1 67 1 119 1 307 2 178 2 349 1 127 1 25 2 130 2 353 2 27 1 183 2 33 1 358 2 134 2 88 4 229 1 89 1 231 2 319 4 232 1 39 1 40 1 373 1 196 1 242 1 99 1 
307 2 100 1 2 1 347 1 199 1 178 2 349 1 202 4 127 1 25 2 130 2 252 4 353 2 205 1 183 2 27 1 105 1 295 1 33 1 84 1 358 1 134 2 88 4 229 1 11 1 212 1 89 1 231 2 319 4 268 1 232 1 39 1 40 1 167 2 171 1 373 1 196 1 242 1 67 1 99 1 119 1 
307 2 100 1 2 1 347 1 199 1 178 2 349 1 202 4 127 1 25 2 130 2 252 4 353 2 205 1 183 2 27 1 105 1 295 1 33 1 84 1 358 1 134 2 88 4 229 1 11 1 212 1 89 1 231 2 319 4 268 1 232 1 39 1 40 1 167 2 171 1 373 1 196 1 242 1 67 1 99 1 119 1 
307 2 100 1 2 1 347 1 199 1 178 2 349 1 48 2 202 4 127 1 25 2 252 4 353 2 205 1 27 1 33 1 358 1 134 2 88 4 229 1 11 1 212 1 89 1 300 1 335 2 319 4 318 1 268 1 232 1 39 1 40 1 167 2 171 1 373 1 196 1 242 1 67 1 117 2 99 1 273 1 119 1 
307 2 100 1 2 1 347 1 199 1 178 3 349 1 202 4 127 1 25 3 130 2 252 5 353 2 205 1 183 2 27 1 105 1 295 1 33 1 84 1 358 1 134 3 88 5 11 1 229 1 212 1 89 1 231 2 319 4 268 1 232 1 39 1 40 1 167 2 171 1 64 1 373 1 196 1 242 1 67 1 99 1 119 1 
307 2 100 1 2 1 347 1 199 1 178 3 349 1 202 4 127 1 25 3 130 2 252 5 353 2 205 1 183 2 27 1 105 1 295 1 33 1 84 1 358 1 134 3 88 5 11 1 229 1 212 1 89 1 231 2 319 4 268 1 232 1 39 1 40 1 167 2 171 1 64 1 373 1 196 1 242 1 67 1 99 1 119 1 
307 2 2 1 100 1 199 1 178 2 349 1 48 2 202 4 127 1 25 2 252 4 353 2 205 1 27 1 33 1 358 1 134 2 88 4 108 1 11 1 229 1 212 1 89 1 300 1 335 2 319 4 232 1 268 1 39 1 40 1 167 2 171 1 373 1 196 1 242 1 67 1 117 2 99 1 119 1 
219 1 121 2 326 7 293 1 148 2 73 1 200 2 180 8 50 1 151 2 294 1 153 2 278 2 205 1 313 1 28 1 29 1 257 3 34 8 359 1 261 2 13 1 334 4 363 1 111 1 112 2 364 2 268 1 269 2 92 1 95 1 115 2 237 2 193 1 216 1 194 1 239 1 242 1 116 1 
148 1 200 1 73 1 149 1 50 2 152 1 278 3 205 1 313 1 208 1 261 1 55 1 162 1 12 1 90 1 334 2 364 1 268 1 269 1 236 1 337 1 139 1 173 1 237 1 242 1 66 1 116 1 218 1 346 1 
162 1 90 1 334 2 148 1 328 1 200 1 364 1 149 2 269 1 50 3 278 6 95 1 337 1 254 1 206 1 139 2 237 1 44 1 259 2 342 1 375 1 55 1 261 1 116 3 263 1 218 1 
148 2 200 2 275 1 50 5 154 4 278 15 355 3 208 3 224 1 259 1 261 1 55 3 12 1 162 12 334 4 90 12 364 2 269 2 92 1 93 1 59 1 236 3 168 1 62 2 237 2 139 2 194 1 374 2 116 10 218 3 
0 1 121 1 219 1 326 1 148 1 249 1 200 1 73 1 180 1 50 1 151 1 153 1 278 2 205 2 313 1 354 1 257 1 259 1 34 1 261 1 10 1 12 1 334 2 112 1 364 1 268 1 269 1 92 1 166 1 304 1 237 1 371 1 194 1 242 2 290 1 116 1 376 1 218 1 
0 1 326 1 148 2 200 2 149 1 50 2 151 1 7 1 153 1 204 1 205 2 208 1 257 1 261 2 55 1 10 1 12 1 162 2 334 4 112 1 268 1 269 2 62 2 304 1 18 1 305 1 116 3 218 2 219 1 121 1 73 1 180 1 276 1 278 5 313 1 34 1 361 1 90 2 364 2 236 1 237 2 139 3 194 1 242 2 290 1 376 1 
162 1 90 1 334 2 148 1 200 1 364 1 269 1 94 1 278 2 95 1 62 1 139 1 237 1 208 1 261 1 55 1 116 2 218 1 
162 1 90 1 334 2 148 1 200 1 364 1 149 1 269 1 50 2 278 2 95 1 337 1 139 1 237 1 341 1 66 1 261 1 218 1 
148 1 200 1 149 1 50 2 278 4 208 1 55 1 261 1 162 2 334 2 90 2 364 1 269 1 95 1 236 1 337 1 62 1 237 1 139 2 66 1 116 2 218 2 
162 1 90 1 334 2 148 1 200 1 364 1 269 1 94 1 278 2 62 1 139 1 237 1 29 1 208 1 261 1 55 1 116 2 218 1 
162 1 90 1 334 2 148 1 200 1 364 1 149 1 269 1 50 2 278 2 337 1 139 1 237 1 29 1 341 1 66 1 261 1 218 1 
162 1 90 1 334 2 148 1 200 1 364 1 269 1 278 2 236 1 62 1 139 1 237 1 29 1 208 1 261 1 55 1 116 2 218 1 
162 1 90 1 334 2 148 1 200 1 364 1 269 1 278 2 236 1 62 1 139 1 237 1 208 1 261 1 55 1 116 2 218 1 
121 1 326 1 148 1 200 1 180 1 50 1 151 1 278 2 153 1 205 1 257 1 259 1 34 1 261 1 10 1 334 2 112 1 364 1 269 1 92 1 304 1 237 1 194 1 305 1 242 1 116 1 290 1 376 1 
121 1 326 1 148 1 200 1 180 1 50 1 151 1 277 1 278 2 153 1 205 1 256 1 257 1 259 1 34 1 261 1 334 2 112 1 364 1 269 1 92 1 233 1 304 1 237 1 194 1 242 1 116 1 376 1 
162 1 12 1 90 1 334 2 148 1 200 1 364 1 269 1 278 2 236 1 62 1 139 1 237 1 208 1 261 1 55 1 116 2 218 1 
121 1 326 1 293 1 148 1 200 1 180 1 151 1 278 2 204 1 205 1 208 1 257 1 34 1 55 1 261 1 10 1 162 1 90 1 334 2 112 1 364 1 269 1 236 1 62 1 139 1 304 1 237 1 305 1 242 1 116 2 290 1 376 1 218 1 
148 1 200 1 73 1 152 1 278 2 205 1 313 1 208 1 261 1 55 1 12 1 162 1 334 2 90 1 364 1 268 1 269 1 61 1 236 1 62 1 139 1 173 1 237 1 242 1 116 2 218 1 
148 2 200 2 149 3 126 1 50 10 154 2 278 19 355 1 208 3 224 1 262 1 55 3 35 1 334 4 266 1 364 2 269 2 41 1 236 3 337 3 170 1 62 3 139 6 372 2 19 1 174 2 374 1 66 3 22 1 116 9 
122 1 148 2 200 2 149 1 126 2 50 12 278 22 154 2 355 2 158 1 208 2 224 2 85 1 262 1 55 2 35 1 161 1 334 4 266 2 364 2 269 2 337 2 236 2 62 1 139 2 238 1 372 1 19 1 174 4 66 2 22 1 116 10 
122 1 148 3 328 1 200 3 149 4 126 2 128 1 50 19 154 4 278 36 254 1 206 1 355 3 158 1 208 3 224 3 85 1 262 1 55 4 263 1 35 1 161 1 334 6 266 1 364 3 269 3 41 1 236 3 337 4 62 3 139 7 238 1 372 1 19 1 44 1 174 4 374 1 375 1 66 3 22 1 116 17 
122 1 148 3 328 1 200 3 149 4 126 2 128 1 50 18 154 4 278 34 254 1 206 1 355 3 158 1 208 3 224 3 85 1 262 1 55 4 263 1 35 1 161 1 334 6 266 1 364 3 269 3 41 1 236 3 337 4 62 2 139 6 238 1 372 1 19 1 44 1 174 4 374 1 375 1 66 3 22 1 116 16 
122 1 148 1 328 1 200 1 149 7 126 1 50 22 154 4 278 44 254 1 206 1 355 4 158 1 208 6 224 2 85 1 262 1 55 7 263 1 35 1 334 2 266 1 364 1 269 1 59 2 236 6 337 7 62 5 139 12 238 1 372 1 19 1 44 1 174 3 374 2 375 1 66 6 22 1 116 22 
271 1 368 1 120 1 281 1 315 1 163 1 175 1 244 1 234 1 331 1 
283 1 243 1 
271 1 368 1 120 1 265 1 282 1 175 1 244 1 325 1 331 1 
120 1 36 1 23 1 319 1 202 1 163 1 129 1 234 1 331 1 368 1 271 1 280 1 172 1 281 1 358 1 175 1 244 1 245 2 
120 1 36 1 23 1 319 1 202 1 163 1 129 1 234 1 331 1 368 1 271 1 280 1 172 1 281 1 358 1 175 1 244 1 245 2 
120 1 36 1 23 1 319 1 202 1 163 1 129 1 234 1 331 1 368 1 271 1 280 1 172 1 281 1 358 1 175 1 244 1 245 2 
169 1 360 1 367 1 
169 1 360 1 367 1 
225 1 260 1 
225 1 260 1 367 1 
140 1 344 1 
120 1 23 1 198 1 292 1 73 2 202 1 129 1 331 1 205 2 80 1 313 2 259 1 213 1 319 1 283 1 268 2 286 1 42 1 271 1 368 1 140 1 175 1 242 2 244 1 243 1 344 1 245 1 
169 1 360 1 
225 1 260 1 367 1 
121 1 326 2 148 1 200 1 180 2 24 1 50 1 151 1 278 2 205 2 30 1 257 1 34 2 359 1 261 1 12 1 334 2 112 1 364 1 268 2 269 1 92 1 115 2 237 1 194 1 239 1 65 1 242 2 324 1 116 1 69 1 
121 1 326 1 363 1 112 1 72 1 180 1 151 1 153 1 370 1 193 1 257 1 34 1 176 1 210 1 
147 2 326 1 13 1 38 1 112 1 329 1 250 1 180 1 221 1 151 1 150 1 303 1 370 1 142 1 34 1 210 1 197 1 228 1 
147 2 326 2 13 1 293 1 38 1 112 1 329 1 250 1 180 2 221 1 151 1 150 1 303 1 370 1 142 1 34 2 210 1 197 1 228 1 
147 2 326 1 13 1 38 1 112 1 329 1 250 1 180 1 221 1 150 1 303 1 151 1 370 1 142 1 96 1 34 1 197 1 
264 1 
89 1 199 1 349 1 40 1 339 1 373 1 196 1 358 1 86 1 11 1 
89 5 48 10 130 5 7 1 236 2 337 2 208 2 272 2 373 5 358 5 209 1 66 2 55 2 188 5 145 5 
307 1 199 1 319 1 358 1 202 1 252 1 
307 2 121 1 326 4 71 1 349 2 248 1 180 4 202 3 151 1 79 2 6 2 252 4 312 1 153 2 132 1 257 1 314 1 34 4 11 1 89 2 363 1 112 1 319 3 40 2 193 1 373 2 196 2 45 1 98 2 
89 1 339 1 199 1 373 1 358 1 342 1 86 1 
307 1 89 1 199 1 349 1 231 1 319 1 48 1 202 1 130 1 252 1 40 1 183 1 105 1 373 1 358 2 196 1 11 1 
326 3 199 2 293 1 248 1 201 2 48 12 202 5 151 4 6 2 7 2 252 5 153 1 103 2 255 2 208 2 257 10 106 2 209 2 55 2 11 4 160 2 112 3 337 2 339 1 304 3 272 2 67 2 66 2 118 1 307 3 121 3 349 4 74 3 180 3 79 1 131 2 130 6 279 1 32 1 83 2 227 1 358 8 34 3 86 1 188 6 89 8 319 5 40 4 137 2 236 2 373 9 196 4 98 1 145 6 
307 1 122 1 199 2 349 2 48 6 202 1 79 1 130 3 6 1 252 1 154 1 355 1 158 1 208 1 184 1 224 1 297 1 358 5 209 1 85 1 55 1 188 4 11 2 89 3 319 1 40 2 236 1 337 1 272 2 373 6 196 2 66 1 145 4 
349 1 328 1 73 1 350 1 202 1 5 1 205 1 254 1 313 1 84 1 209 1 55 2 263 1 11 1 89 2 319 1 268 1 40 1 337 1 338 1 173 1 272 2 373 2 196 1 242 1 146 1 
121 1 326 1 148 1 200 1 73 2 180 1 5 1 50 1 151 1 278 1 153 1 205 3 313 2 257 1 259 1 34 1 261 1 10 1 334 2 364 1 112 1 268 2 302 1 269 1 173 2 304 1 237 1 194 1 305 1 242 3 290 1 376 1 
89 2 199 2 349 1 48 4 79 1 130 2 6 1 40 1 206 1 373 1 196 1 358 4 188 2 145 2 11 1 
120 1 140 1 110 1 163 1 331 1 
120 1 348 1 331 1 
120 1 348 1 331 1 
120 1 348 1 331 1 
120 1 77 1 331 1 
120 1 77 1 331 1 
120 1 77 1 331 1 
120 1 331 1 
271 1 175 1 
334 2 148 1 364 1 200 1 328 2 149 3 269 1 50 5 278 10 337 2 62 2 254 1 139 5 22 1 55 2 263 2 116 5 146 1 
334 2 148 1 200 1 364 1 269 1 278 2 62 1 139 1 208 1 22 1 55 1 116 2 
334 2 148 1 200 1 364 1 149 1 269 1 50 2 278 4 337 1 236 1 62 1 139 2 208 1 66 1 22 1 55 1 116 2 
161 1 334 6 148 3 200 3 364 3 328 1 149 1 269 3 284 1 50 2 41 1 278 3 62 1 139 2 22 1 263 1 116 1 
308 1 148 5 328 3 123 1 200 5 149 7 50 18 154 4 278 34 254 2 206 1 355 3 296 1 208 3 224 1 55 5 263 3 161 2 334 10 364 5 269 5 284 1 320 1 41 1 236 3 337 5 62 5 139 12 44 1 374 1 375 1 66 3 22 1 116 16 
148 1 200 1 328 1 149 2 50 4 278 8 154 1 254 1 206 1 355 1 224 1 85 1 55 1 263 1 334 2 364 1 269 1 337 1 139 2 44 1 375 1 22 1 116 4 
148 2 328 1 200 2 123 1 149 2 50 5 278 11 154 2 254 1 206 1 355 1 208 1 224 1 85 1 55 2 263 1 334 4 364 2 269 2 337 1 236 1 62 1 139 3 44 1 374 1 375 1 22 1 116 6 
122 1 148 3 328 1 200 3 123 1 149 3 50 8 278 14 154 1 254 1 206 1 355 1 158 1 208 1 224 1 85 1 55 2 263 1 161 1 334 6 364 3 269 3 236 1 337 2 139 3 44 1 375 1 66 1 22 1 116 6 
122 1 148 2 200 2 123 1 149 1 50 4 278 7 154 1 355 1 158 1 208 1 224 1 85 1 55 1 334 4 364 2 269 2 236 1 337 1 139 1 66 1 22 1 116 3 
148 1 200 1 328 1 149 2 50 4 278 8 154 1 254 1 206 1 355 1 224 1 85 1 55 1 263 1 334 2 364 1 269 1 337 1 139 2 44 1 375 1 22 1 116 4 
122 1 148 1 200 1 149 1 50 4 278 7 154 1 355 1 158 1 208 1 224 1 85 1 55 1 334 2 364 1 269 1 236 1 337 1 139 1 66 1 22 1 116 3 
122 1 148 3 123 1 200 3 149 1 50 5 278 8 154 1 355 1 158 1 208 1 224 1 85 1 55 1 161 1 334 6 364 3 269 3 236 1 337 1 139 1 66 1 22 1 116 3 
122 1 148 3 200 3 149 2 50 5 278 8 154 1 355 1 158 1 208 1 224 1 85 1 55 1 161 1 334 6 364 3 269 3 41 1 236 1 337 1 139 2 66 1 22 1 116 3 
328 3 149 3 50 4 278 7 337 1 62 3 254 1 139 6 44 2 375 1 55 1 263 3 116 3 
122 1 148 3 200 3 149 1 50 5 278 8 154 1 355 1 158 1 208 1 224 1 85 1 55 1 161 1 334 6 364 3 269 3 41 1 236 1 337 1 139 1 66 1 22 1 116 3 
161 1 334 4 148 2 200 2 364 2 328 1 149 2 269 2 50 4 278 8 337 1 254 1 62 1 206 1 139 3 44 1 375 1 55 1 116 4 263 1 
328 1 149 2 50 3 278 6 337 1 254 1 206 1 139 2 44 1 342 1 375 1 55 1 263 1 116 3 
334 2 148 1 123 1 200 1 364 1 149 1 269 1 50 2 278 4 337 1 236 1 62 1 139 2 208 1 66 1 55 1 116 2 
149 1 50 4 154 2 278 7 337 1 236 1 62 1 355 1 139 2 208 1 224 1 374 1 66 1 55 1 116 3 
148 2 328 2 200 2 149 5 50 12 278 23 154 2 254 1 206 1 355 2 208 2 55 3 263 2 161 2 334 4 364 2 269 2 284 1 59 1 236 2 337 3 62 4 168 1 139 9 44 1 374 1 375 1 66 2 116 11 
50 1 278 1 154 1 
355 1 116 1 278 1 
334 2 148 1 364 1 200 1 123 1 149 2 269 1 50 3 7 1 278 6 236 1 337 1 62 1 139 3 208 1 66 1 55 1 116 3 
122 1 148 1 200 1 149 1 50 4 278 7 154 1 355 1 158 1 208 1 224 1 85 1 55 1 334 2 364 1 269 1 236 1 337 1 139 1 66 1 22 1 116 3 
328 1 149 1 50 3 278 6 337 1 254 1 62 1 139 2 55 1 116 3 263 1 
161 1 334 2 148 1 328 1 200 1 364 1 149 1 269 1 284 1 50 2 278 3 62 1 139 2 44 1 375 1 116 1 263 1 
125 1 
217 1 125 1 21 1 352 1 251 1 330 1 
56 1 121 1 326 4 363 1 57 1 293 1 112 1 180 4 151 1 153 1 193 1 257 1 34 4 
121 1 326 2 112 1 124 1 180 2 151 2 52 1 182 1 369 1 304 1 257 1 34 2 98 1 9 1 
147 1 326 1 38 1 112 1 142 1 250 1 180 1 34 1 151 1 153 1 
121 1 326 2 13 1 293 1 112 1 180 2 151 1 65 1 239 1 257 1 34 2 
121 2 326 4 363 1 57 1 293 1 111 1 112 2 180 5 151 2 153 1 28 1 193 1 239 1 257 3 34 5 98 1 
121 2 326 4 363 1 57 1 293 1 112 2 180 5 78 1 151 2 153 1 28 1 193 1 239 1 257 3 34 5 98 1 
121 1 326 1 363 1 193 1 112 1 257 1 342 1 180 1 34 1 151 1 153 1 
121 1 219 1 326 1 73 1 112 1 268 1 180 1 151 1 153 1 205 2 313 1 304 1 257 1 259 1 34 1 242 2 290 1 376 1 
121 2 219 1 326 1 73 2 112 1 268 2 180 1 151 1 131 1 103 1 205 2 27 1 313 1 171 1 304 2 257 3 259 1 34 1 242 2 98 1 290 1 376 1 229 1 
56 1 121 2 219 1 326 2 73 2 112 1 268 2 180 2 151 1 131 1 103 1 205 2 27 1 313 1 171 1 304 2 256 1 257 3 259 1 34 2 242 2 98 1 376 1 229 1 
56 1 121 1 160 1 326 3 199 1 112 1 319 2 74 1 202 2 180 3 151 1 131 1 26 1 252 1 153 1 103 1 16 1 304 1 257 4 358 1 34 3 67 1 98 1 
56 1 121 1 160 1 326 3 199 1 112 1 319 2 74 1 202 2 180 3 151 1 131 1 137 1 252 1 153 1 103 1 304 1 257 4 358 1 34 3 67 1 98 1 
326 1 112 1 216 1 180 1 34 1 151 1 
121 2 326 6 13 1 293 1 111 1 112 2 180 7 151 3 52 1 294 1 153 2 115 1 28 1 304 1 216 1 32 1 239 1 257 3 34 7 9 1 87 1 
121 1 219 1 326 1 148 2 293 1 328 1 200 2 73 1 149 2 24 1 180 1 50 3 151 1 278 6 204 1 205 2 254 1 313 1 206 1 257 1 259 2 34 1 55 1 261 2 263 1 10 1 162 1 12 1 90 1 334 4 112 1 364 2 268 1 269 2 337 1 139 2 304 1 237 2 18 1 44 1 305 1 375 1 242 2 116 3 290 1 376 1 218 1 
307 1 326 1 199 1 349 2 248 1 201 1 74 1 202 3 180 1 252 2 153 1 255 1 257 2 358 1 106 1 34 1 86 1 11 2 89 1 160 1 319 3 40 2 137 1 42 1 339 1 373 1 196 2 67 1 
160 1 121 1 326 2 293 1 112 1 180 2 151 2 279 1 304 1 216 1 32 1 257 2 34 2 
121 1 219 1 326 1 73 1 112 1 268 1 180 1 151 1 153 1 205 2 313 1 304 1 256 1 257 1 259 1 34 1 242 2 376 1 
121 1 326 1 112 1 180 1 151 2 52 1 304 1 32 1 257 1 34 1 98 1 9 1 87 1 
333 1 310 1 268 1 205 1 30 1 357 1 242 1 324 1 69 1 
114 1 333 1 165 1 
333 1 357 1 259 1 332 1 310 1 
333 1 100 1 199 1 319 2 202 2 310 2 165 1 42 1 27 1 114 1 171 1 141 1 357 2 259 1 358 1 332 2 67 1 107 1 229 1 
157 1 189 1 54 1 190 1 226 1 241 1 49 1 102 1 
189 4 190 1 3 2 366 1 311 1 136 1 102 2 15 1 157 2 54 3 226 4 241 1 345 1 211 1 
189 2 190 1 3 1 49 1 102 1 60 1 157 1 54 1 207 1 226 2 241 1 247 1 
299 1 157 1 189 3 54 1 190 1 226 3 366 1 241 1 49 1 311 2 102 1 136 2 
54 2 336 2 316 1 113 1 
189 1 190 1 226 1 241 1 49 1 321 1 
157 1 189 2 54 1 190 1 3 1 75 1 226 2 241 1 49 1 102 1 
270 1 
157 1 189 1 54 1 190 1 226 1 241 1 49 1 102 1 
157 1 54 1 342 1 102 1 
157 1 189 1 54 1 190 1 226 1 241 1 102 1 
53 1 189 1 309 1 
157 1 189 3 54 1 190 1 226 3 366 1 241 1 49 1 311 1 203 1 102 1 136 2 
157 1 189 2 54 1 190 1 3 1 226 2 241 1 102 1 192 1 
147 1 189 1 190 1 329 1 49 1 285 1 54 1 226 1 142 1 241 1 345 1 
189 1 54 1 190 1 226 1 241 1 49 1 102 1 
157 1 189 1 190 1 226 1 241 1 49 1 102 2 
189 2 190 2 49 1 102 1 222 1 54 1 340 1 226 2 343 1 241 2 
189 3 190 1 3 2 75 1 49 1 102 1 15 1 138 1 157 1 54 2 226 3 241 1 345 1 
147 2 189 2 190 1 329 1 3 1 250 1 49 1 221 1 102 1 157 1 54 1 226 2 142 1 241 1 317 1 
189 4 190 2 3 2 49 1 102 1 192 1 15 1 157 1 287 1 54 2 226 4 241 2 345 1 
157 1 189 3 54 1 190 1 3 1 75 1 226 3 241 1 49 1 102 1 136 1 
15 1 54 1 345 1 211 1 
54 1 102 1 

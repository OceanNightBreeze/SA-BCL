#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) (48,285) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (48,285) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) (48,285) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (163,198,248,289) (163,198,248,289) (163,198,248,289) 187 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 82 328 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
288 1 310 1 262 1 
257 1 288 1 55 2 
294 2 228 1 81 2 104 2 230 2 245 2 95 2 166 1 
81 3 172 1 173 1 245 3 43 2 8 1 296 1 294 2 49 1 182 1 221 1 15 1 95 2 305 1 227 1 228 1 104 2 150 1 193 1 230 2 195 1 109 2 67 1 158 1 200 1 203 1 202 2 320 1 160 2 115 1 207 1 120 1 270 1 210 2 166 1 37 1 278 1 
294 1 81 1 104 1 230 1 132 1 245 1 3 1 95 1 166 1 199 1 
78 1 81 1 191 1 245 1 288 1 3 1 64 1 65 1 10 1 14 1 51 1 95 1 99 1 262 1 
78 2 81 1 104 1 191 1 230 1 245 1 288 1 3 1 64 1 65 1 294 1 14 1 95 1 99 2 262 1 
78 1 113 1 103 1 133 1 99 1 
78 2 113 1 133 1 288 1 142 1 99 2 262 1 178 1 
78 1 113 1 99 1 
78 1 81 1 104 1 230 1 132 1 133 1 245 1 3 1 199 1 294 1 95 1 166 1 99 1 128 1 
288 1 
78 2 113 1 133 1 288 1 142 1 99 2 317 1 262 1 
78 5 283 1 133 2 288 1 25 1 135 1 113 2 161 1 118 1 122 1 273 1 142 1 126 1 99 5 212 2 262 1 330 2 281 1 311 2 
228 1 310 1 
81 2 228 2 104 1 230 1 245 2 290 1 294 1 298 1 95 2 
61 1 174 1 223 1 
228 1 81 1 150 1 195 1 245 1 109 1 43 1 30 1 8 1 296 1 202 1 115 1 221 1 270 1 37 1 278 1 
294 1 228 1 81 3 104 3 230 3 33 1 245 3 95 3 
81 1 104 1 230 1 245 1 3 1 95 1 199 1 
294 1 81 1 104 1 230 1 298 1 245 1 3 1 95 1 290 1 
78 1 81 4 245 4 3 1 43 1 217 1 8 1 296 1 294 2 49 1 221 1 298 1 14 1 15 1 95 3 305 1 19 1 99 1 227 1 228 1 150 1 104 3 191 1 193 1 230 3 195 1 64 1 109 1 65 1 67 1 203 1 320 1 202 1 160 1 115 1 207 1 120 1 33 1 270 1 238 1 210 2 166 1 278 1 37 1 
228 1 81 2 104 1 230 1 33 1 51 1 302 1 245 2 95 2 
78 1 81 3 191 1 104 3 230 3 245 3 288 1 3 1 64 1 65 1 217 1 294 1 9 1 298 1 33 2 14 1 238 1 95 3 99 1 
81 2 104 2 230 2 174 1 245 2 294 1 298 1 33 1 95 2 223 1 
228 1 81 1 150 1 195 1 245 1 109 1 43 1 8 1 296 1 202 1 115 1 221 1 270 1 37 1 278 1 
228 1 81 1 190 1 150 1 245 1 109 1 43 1 8 1 296 1 202 1 221 1 184 1 270 1 37 1 278 1 
174 2 46 1 7 1 182 2 305 1 223 2 227 1 193 1 62 1 61 2 233 1 312 1 154 1 67 1 203 1 266 1 160 4 207 2 120 1 164 1 210 2 276 1 
81 1 104 1 230 1 245 1 3 1 95 1 65 1 35 1 
81 2 150 1 104 1 230 1 195 1 245 2 109 1 43 1 217 1 8 1 296 1 202 1 115 1 221 1 33 1 270 1 95 1 223 1 278 1 37 1 
81 5 228 1 104 4 230 4 151 1 1 1 245 5 217 1 294 1 298 1 33 2 51 1 302 1 95 5 
81 2 104 2 230 2 245 2 3 1 95 2 35 1 199 1 
86 1 125 1 
86 1 125 1 
152 1 127 1 
152 1 127 1 
152 1 127 1 
189 1 86 1 125 1 
208 1 86 1 125 1 
77 1 215 1 152 1 86 2 125 2 127 1 
189 1 86 1 125 1 
189 1 86 1 125 1 
86 1 125 1 58 1 
86 1 125 1 58 1 
86 1 125 1 58 1 
77 1 78 2 287 1 288 1 108 2 26 1 111 1 86 2 265 3 114 1 117 2 53 2 304 2 259 1 125 2 99 2 277 1 56 2 145 1 
78 1 81 2 245 2 86 1 254 1 92 1 304 1 53 1 259 1 95 2 99 1 228 1 104 2 230 2 108 1 265 1 159 1 117 1 206 1 208 1 119 1 272 1 209 1 125 1 
284 1 71 1 307 1 
284 1 307 1 5 1 
71 2 140 1 307 3 5 1 309 1 22 1 
71 1 0 1 140 1 307 2 5 1 309 1 
71 1 140 2 307 2 5 1 309 1 
78 5 133 4 288 2 85 1 88 2 46 1 45 1 6 2 257 1 142 1 55 3 99 5 262 1 311 1 147 2 233 1 197 1 113 1 206 1 161 2 205 1 162 1 119 1 34 1 122 3 164 1 324 1 209 1 126 1 276 1 212 1 330 1 
78 9 170 1 133 7 288 5 85 2 88 6 46 3 45 1 6 6 257 3 142 1 54 1 55 9 99 9 262 1 311 2 103 5 192 1 233 3 25 1 196 1 113 6 268 1 161 6 34 3 122 8 164 3 209 4 324 2 126 1 276 3 167 1 327 5 212 2 330 2 
78 3 133 2 288 3 85 1 88 2 46 1 6 2 257 2 99 3 55 4 262 1 311 1 147 1 233 1 25 1 197 1 205 1 161 2 122 3 34 1 164 1 324 1 209 1 276 1 212 1 330 1 
78 4 170 1 133 3 288 4 85 1 88 4 46 2 6 4 257 3 54 1 55 7 99 4 262 1 311 1 147 2 233 2 25 1 197 1 205 1 161 4 122 5 34 2 164 2 324 1 209 2 276 2 167 1 212 1 330 1 
270 1 310 1 280 1 
82 1 270 1 
218 1 
270 1 8 1 
296 1 83 1 270 3 261 1 280 2 8 1 
296 1 270 1 8 1 
270 1 73 1 
226 2 188 1 130 1 291 1 112 1 69 1 220 1 160 7 116 1 182 4 204 2 207 3 93 1 164 1 141 3 20 1 276 1 
226 2 188 1 130 1 291 1 112 1 69 1 220 1 160 7 116 1 182 4 204 2 207 3 93 1 164 1 141 3 20 1 276 1 
226 2 188 1 130 1 249 1 291 1 112 1 69 1 220 1 160 7 116 1 182 4 204 2 207 3 93 1 164 1 141 3 20 1 276 1 
241 4 213 1 130 2 46 4 291 5 11 1 136 2 220 2 182 19 93 1 137 1 260 1 141 8 20 2 305 2 226 3 188 1 227 2 193 2 233 4 314 1 156 1 112 1 69 1 160 37 116 2 204 3 32 1 207 18 120 2 121 4 34 4 164 5 210 4 276 5 282 1 
226 3 188 1 227 2 130 1 193 2 232 1 291 1 69 1 136 1 220 1 160 9 116 1 182 5 204 2 31 1 93 1 207 4 120 2 164 1 141 4 20 1 305 2 210 4 276 1 
187 1 231 1 163 1 248 1 289 1 
285 1 231 1 163 1 248 1 289 1 
48 1 231 1 163 1 198 1 
285 1 231 1 163 1 248 1 289 1 
187 1 231 1 163 1 248 1 289 1 
4 1 
78 5 81 1 84 2 243 2 245 1 3 1 250 2 8 1 90 1 10 1 14 1 257 2 258 1 95 1 21 1 99 5 262 1 101 1 186 2 191 1 109 2 201 1 113 6 202 2 269 1 123 2 122 2 270 1 274 1 126 1 212 1 279 2 37 2 278 1 134 1 288 2 43 2 292 1 221 1 51 1 138 1 142 3 55 2 143 1 311 1 60 4 149 1 64 1 65 1 68 1 161 2 72 1 239 2 324 1 330 1 
186 1 78 3 60 2 81 1 149 1 191 1 245 1 3 1 64 1 65 1 317 1 68 1 90 1 113 2 10 1 14 1 51 1 258 1 95 1 142 1 99 3 143 1 
78 3 81 1 245 1 3 1 288 1 90 1 10 1 14 1 51 1 258 1 95 1 142 1 99 3 143 1 262 1 60 3 191 1 149 1 64 1 65 1 317 1 68 1 113 1 123 1 
186 1 78 3 60 3 81 1 149 1 191 1 84 1 245 1 288 1 3 1 64 1 65 1 317 1 68 1 90 1 113 2 10 1 14 1 123 1 51 1 258 1 95 1 142 1 99 3 143 1 262 1 
78 5 79 1 81 1 84 4 243 2 245 1 3 1 246 1 250 2 90 1 10 1 13 1 14 1 257 2 258 1 95 1 99 5 262 5 186 4 191 1 113 7 201 1 123 4 122 1 275 1 126 1 212 1 279 2 288 5 292 1 51 1 142 3 143 1 311 1 60 6 149 1 64 1 66 1 65 1 317 1 68 1 161 1 239 2 330 1 
78 4 81 1 84 2 243 2 245 1 288 2 3 1 250 2 292 1 90 1 10 1 14 1 257 2 51 1 258 1 95 1 142 2 55 2 99 4 143 1 262 1 101 1 311 1 186 2 60 4 191 1 149 1 64 1 65 1 68 1 113 4 201 1 161 1 123 2 122 1 239 2 126 1 212 1 279 2 330 1 
78 4 81 1 84 2 243 2 245 1 288 1 3 1 246 1 250 2 292 1 90 1 10 1 13 1 14 1 257 2 51 1 258 1 95 1 142 2 99 4 143 1 262 1 311 1 186 2 60 4 191 1 149 1 64 1 65 1 68 1 113 4 201 1 161 1 123 2 122 1 239 2 275 1 126 1 212 1 279 2 330 1 
78 4 81 1 84 2 243 2 245 1 288 1 3 1 246 1 250 2 292 1 90 1 10 1 13 1 14 1 257 2 51 1 258 1 95 1 142 2 99 4 143 1 262 1 311 1 186 2 60 4 191 1 149 1 64 1 65 1 68 1 113 4 201 1 161 1 123 2 122 1 239 2 275 1 126 1 212 1 279 2 330 1 
78 4 81 1 84 2 243 2 2 1 245 1 288 1 3 1 90 1 10 1 13 1 14 1 51 1 258 1 95 1 142 2 55 2 99 4 143 1 262 1 311 1 186 2 60 4 191 1 149 1 153 2 64 1 65 1 68 1 113 4 201 1 161 1 123 2 122 1 239 2 165 1 325 1 126 1 212 1 331 2 330 1 
78 4 79 1 81 1 84 3 243 2 245 1 288 1 3 1 246 1 250 2 292 1 90 1 10 1 13 1 14 1 257 2 51 1 258 1 95 1 142 2 99 4 143 1 262 1 311 1 186 3 60 5 191 1 149 1 64 1 65 1 68 1 201 1 113 5 161 1 122 1 123 3 239 2 126 1 275 1 212 1 279 2 330 1 
78 4 79 1 81 1 84 3 243 2 245 1 288 1 3 1 246 1 250 2 292 1 90 1 10 1 13 1 14 1 257 2 51 1 258 1 95 1 142 2 99 4 143 1 262 1 311 1 186 3 60 5 191 1 149 1 64 1 65 1 68 1 201 1 113 5 161 1 122 1 123 3 239 2 126 1 275 1 212 1 279 2 330 1 
78 4 81 1 84 2 243 2 245 1 2 1 288 1 3 1 90 1 10 1 14 1 51 1 258 1 95 1 142 2 55 2 99 4 143 1 262 1 101 1 311 1 186 2 60 4 191 1 149 1 153 2 64 1 65 1 68 1 113 4 201 1 161 1 123 2 122 1 239 2 126 1 212 1 331 2 330 1 
130 1 174 1 182 3 93 1 141 2 223 1 20 1 305 1 310 1 226 2 188 1 227 1 228 2 193 1 61 1 67 1 69 1 203 1 266 1 160 6 204 1 207 3 120 1 164 1 210 2 276 1 
241 3 173 1 174 4 291 1 46 2 252 1 49 1 182 8 50 1 141 1 260 1 305 2 223 11 227 2 228 1 193 2 61 11 233 1 314 1 67 1 157 1 203 2 160 14 207 6 120 2 121 3 34 2 164 2 210 4 276 1 38 1 282 1 
81 2 173 1 174 1 245 2 43 1 217 1 8 1 296 1 49 1 183 1 182 1 221 1 95 1 305 1 57 1 227 1 228 1 150 1 104 1 230 1 193 1 195 1 109 1 67 1 30 1 157 1 202 1 203 1 115 1 160 2 207 1 33 1 120 1 270 1 210 2 326 1 278 1 37 1 
80 1 81 3 173 1 245 3 174 7 8 2 182 10 93 1 95 1 20 1 188 1 104 1 193 3 195 2 109 3 202 3 203 3 115 2 204 1 207 10 120 3 33 1 270 2 34 2 210 6 276 3 37 1 278 2 130 1 131 1 43 3 217 1 46 2 291 4 296 2 49 1 299 2 221 2 141 6 305 3 306 2 223 7 224 2 308 2 226 2 146 1 227 3 228 2 150 2 230 1 61 7 233 2 67 3 157 1 69 1 320 2 160 20 164 3 76 1 
80 1 81 1 173 1 244 1 245 1 43 8 87 1 8 2 253 1 49 1 182 1 221 2 256 1 52 1 138 1 95 1 305 2 100 1 227 2 104 1 230 1 193 2 63 1 109 7 28 1 67 2 158 2 266 1 202 8 203 2 160 2 207 1 33 1 120 2 270 3 210 4 274 1 278 2 37 2 
81 1 174 1 245 1 46 1 294 1 182 1 298 1 95 1 223 1 305 1 227 1 148 1 104 1 230 1 193 1 61 1 233 1 67 1 157 1 203 1 160 3 207 2 120 1 34 1 164 1 210 2 276 1 
227 1 193 1 61 1 174 1 291 1 46 1 67 1 7 1 266 1 203 1 160 2 182 2 120 1 164 1 141 1 223 1 305 1 210 2 
227 1 193 1 61 1 62 1 233 1 174 1 67 1 266 1 203 1 160 2 207 2 120 1 223 1 305 1 210 2 276 1 
174 2 46 1 291 1 182 2 141 1 305 1 223 2 227 1 193 1 61 2 233 1 67 1 203 1 266 1 160 4 207 2 120 1 34 1 164 1 210 2 276 1 
227 1 193 1 61 1 174 1 291 1 46 1 67 1 7 1 203 1 160 2 253 1 182 2 120 1 164 1 141 1 223 1 305 1 210 2 
227 1 193 1 61 1 62 1 233 1 174 1 67 1 203 1 160 2 253 1 207 2 120 1 223 1 305 1 210 2 276 1 
227 1 193 1 61 2 233 1 174 2 46 1 67 1 203 1 160 4 253 1 182 2 207 2 120 1 34 1 164 1 223 2 305 1 210 2 276 1 
227 1 193 1 61 2 233 1 174 2 291 1 46 1 67 1 203 1 160 4 182 2 207 2 120 1 34 1 164 1 141 1 223 2 305 1 210 2 276 1 
81 1 173 1 245 1 43 1 8 1 296 1 49 1 182 1 221 1 305 1 227 1 228 1 150 1 193 1 195 1 109 1 67 1 320 1 202 1 203 1 160 2 115 1 207 1 120 1 270 1 210 2 278 1 37 1 
169 1 81 1 173 1 245 1 43 1 8 1 296 1 49 1 182 1 221 1 184 1 305 1 227 1 228 1 150 1 190 1 193 1 109 1 67 1 202 1 203 1 160 2 207 1 120 1 270 1 210 2 278 1 37 1 
174 2 46 1 291 1 182 2 141 1 305 1 223 2 227 1 193 1 61 2 233 1 67 1 157 1 203 1 160 4 207 2 120 1 34 1 164 1 210 2 276 1 
81 1 174 2 245 1 43 1 291 1 46 1 8 1 296 1 182 2 221 1 256 1 141 1 223 2 305 1 224 1 227 1 150 1 193 1 61 2 233 1 195 1 109 1 67 1 320 1 202 1 203 1 160 4 115 1 207 2 120 1 270 1 34 1 164 1 210 2 276 1 278 1 
81 1 245 1 174 1 291 1 46 1 294 1 182 2 298 1 303 1 141 1 95 1 305 1 223 1 227 1 104 1 230 1 193 1 61 1 233 1 67 1 157 1 203 1 160 3 207 1 120 1 34 1 164 1 210 2 276 1 
241 4 242 1 247 1 180 1 182 30 93 1 260 2 94 1 20 1 263 4 188 1 193 4 264 1 27 1 31 1 204 1 207 27 120 4 34 8 121 4 210 8 276 8 211 1 282 2 130 1 291 9 46 8 136 2 139 1 222 1 141 11 305 4 226 2 227 4 233 7 314 2 316 2 69 1 160 57 70 1 322 1 164 9 75 1 332 1 
241 2 242 1 291 2 46 3 180 1 136 2 182 14 222 1 139 2 94 1 141 3 305 3 226 1 263 4 227 3 193 3 233 2 264 1 316 1 27 1 160 26 31 1 207 12 70 1 120 3 121 2 322 1 34 3 164 3 75 2 210 6 276 2 211 1 282 2 
241 5 242 1 180 1 182 33 93 2 260 2 94 1 20 2 263 4 188 2 193 4 264 1 27 1 31 1 204 2 207 31 120 4 34 7 121 5 210 8 276 9 211 1 282 3 130 2 291 9 46 7 219 1 136 2 139 1 222 1 141 12 305 4 226 3 227 4 233 7 314 2 316 1 69 2 160 64 70 1 322 1 164 9 75 2 332 1 
241 4 130 1 242 1 46 7 291 7 180 1 136 2 182 28 93 1 222 1 139 1 94 1 260 2 141 9 20 1 305 4 226 2 188 1 263 4 227 4 193 4 233 6 314 2 264 1 316 1 27 1 69 1 160 53 204 1 31 1 70 1 207 25 120 4 322 1 121 4 34 7 164 8 75 1 210 8 211 1 276 7 332 1 282 2 
241 4 130 1 242 1 46 7 291 7 180 1 136 1 182 27 93 1 222 1 139 1 94 1 260 2 141 8 20 1 305 2 226 1 188 1 263 4 227 2 193 2 233 7 314 2 264 1 316 1 27 1 69 1 160 52 204 1 31 1 70 1 207 25 120 2 322 1 121 4 34 7 164 8 75 1 210 4 211 1 276 8 282 2 
77 1 117 1 287 1 40 1 108 1 304 1 53 1 111 1 86 1 125 1 
208 1 272 1 
286 1 117 1 300 1 108 1 304 1 53 1 86 1 125 1 179 1 
77 1 78 1 287 1 288 1 108 1 26 1 111 1 86 1 265 2 114 1 117 1 259 1 53 1 304 1 125 1 99 1 277 1 56 1 
77 1 78 1 287 1 288 1 108 1 26 1 111 1 86 1 265 2 114 1 117 1 259 1 53 1 304 1 125 1 99 1 277 1 56 1 
77 1 78 1 287 1 288 1 108 1 26 1 111 1 86 1 265 2 114 1 117 1 259 1 53 1 304 1 125 1 99 1 277 1 56 1 
189 1 215 1 47 1 
189 1 215 1 47 1 
107 1 58 1 
215 1 107 1 58 1 
159 1 254 1 
78 1 81 2 245 2 133 1 86 1 254 1 92 1 304 1 53 1 95 2 99 1 56 1 228 1 104 2 230 2 108 1 265 1 159 1 114 1 117 1 206 1 321 1 208 1 119 1 272 1 209 1 125 1 
189 1 47 1 
215 1 107 1 58 1 
81 2 173 1 245 2 41 1 43 2 8 1 49 1 297 1 182 1 221 1 52 1 95 2 305 1 225 1 185 1 100 1 23 1 227 1 193 1 109 2 67 1 157 1 158 2 202 2 203 1 160 2 207 1 120 1 270 1 210 2 278 1 
284 1 80 1 109 2 43 2 175 1 5 1 251 1 293 1 202 2 319 1 181 1 221 1 71 1 237 1 256 1 17 1 307 2 278 1 22 1 
171 1 284 1 80 1 109 1 43 1 175 1 5 1 251 1 293 1 202 1 221 1 71 1 237 1 17 1 307 2 278 1 22 1 
109 1 43 1 175 1 8 1 202 1 319 1 221 1 255 1 270 1 138 1 274 1 278 1 37 1 168 1 
284 1 80 1 109 1 43 1 175 1 5 1 251 1 293 1 202 1 319 1 181 1 221 1 71 1 237 1 17 1 307 2 278 1 22 1 
318 1 
161 1 122 1 288 1 273 1 310 1 262 1 281 1 
78 1 288 2 250 1 292 1 257 1 142 1 55 1 99 1 262 1 311 1 113 1 161 1 122 1 126 1 212 1 279 1 330 1 
82 1 109 1 43 1 8 1 296 1 202 1 221 2 91 1 270 1 126 1 261 1 212 1 328 1 278 1 330 1 37 1 311 1 
78 1 241 1 288 5 176 1 88 5 46 2 6 5 257 3 18 1 94 1 142 1 21 1 99 1 55 6 144 1 262 2 311 2 233 2 27 1 113 1 267 2 161 5 70 1 122 8 121 1 322 1 34 2 164 2 324 1 126 2 211 1 276 2 212 2 330 2 282 1 
78 1 81 1 130 1 132 1 245 1 3 1 176 1 294 1 93 1 95 1 20 1 99 1 311 1 104 1 230 1 194 1 199 1 267 2 161 2 122 2 164 2 126 1 275 1 166 1 276 1 212 1 330 1 128 1 
288 1 161 1 122 1 273 1 126 1 212 1 330 1 262 1 311 1 281 1 
233 2 288 5 176 1 88 5 46 2 6 5 161 5 34 2 257 5 122 5 164 2 306 1 55 10 276 2 
78 1 113 1 288 1 142 1 99 1 262 1 
78 3 43 4 8 1 221 1 138 1 96 1 142 2 21 2 99 3 311 2 25 1 109 4 235 2 202 4 113 4 161 2 269 1 72 1 270 1 122 2 271 1 323 1 324 2 126 1 274 1 212 2 278 1 330 2 37 2 
81 3 245 3 43 1 8 1 294 2 296 1 49 1 221 1 15 1 95 2 305 1 227 1 228 1 104 2 150 1 193 1 230 2 195 1 109 1 67 1 202 1 320 1 203 1 160 1 115 1 207 1 120 1 270 1 210 2 166 1 37 1 278 1 
288 4 88 2 6 2 204 1 161 2 257 2 122 1 324 1 126 1 55 4 21 1 212 1 330 1 262 2 311 1 
301 1 304 1 53 1 
159 1 287 1 304 1 53 1 39 1 
301 1 304 1 53 1 
301 1 304 1 53 1 
304 1 53 1 59 1 
304 1 53 1 59 1 
304 1 53 1 59 1 
304 1 53 1 
86 1 125 1 
226 2 227 2 188 1 130 1 193 2 291 1 69 1 136 1 160 8 182 4 204 1 93 1 207 4 120 2 164 1 141 3 305 2 20 1 210 4 276 1 
226 2 188 1 130 1 69 1 160 6 182 3 204 1 207 3 93 1 164 1 141 2 20 1 276 1 310 1 
227 1 193 1 105 1 233 1 46 1 160 4 182 2 207 2 120 1 34 1 164 1 305 1 210 2 276 1 
241 2 233 2 314 1 46 2 291 2 160 12 182 6 207 6 121 2 34 2 164 2 260 1 141 2 276 2 282 1 
241 2 213 1 130 4 291 5 46 2 252 1 136 2 182 14 93 2 141 10 260 1 20 4 305 2 226 5 188 1 227 2 193 2 194 1 233 2 314 1 69 1 160 30 204 1 207 16 120 2 34 2 121 2 164 4 210 4 276 4 
160 1 207 1 121 1 
160 1 241 1 182 1 
227 1 193 1 105 1 233 1 46 1 291 1 160 6 182 3 207 3 120 1 34 1 164 1 141 1 305 1 306 1 210 2 276 1 
241 1 46 2 291 1 182 6 94 1 141 1 305 1 227 1 193 1 233 2 27 1 160 12 31 1 207 6 70 1 120 1 121 1 322 1 34 2 164 2 210 2 211 1 276 2 282 1 
226 1 130 1 291 1 160 6 182 3 93 1 207 3 164 1 141 2 20 1 276 1 
226 1 227 1 188 1 213 1 130 1 193 1 291 1 69 1 136 1 160 3 182 1 207 2 120 1 141 2 20 1 305 1 210 2 
226 3 227 1 130 2 193 1 194 1 291 2 160 10 182 5 31 1 207 5 93 1 120 1 164 2 141 5 305 1 20 2 210 2 276 2 
227 1 193 1 46 1 291 1 160 2 182 2 31 1 120 1 164 1 141 1 305 1 210 2 
227 1 193 1 233 1 46 1 291 1 160 4 182 2 31 1 207 2 120 1 34 1 164 1 141 1 305 1 210 2 276 1 
226 1 227 3 213 1 130 1 193 3 291 1 136 1 160 3 182 1 31 1 207 2 120 3 141 2 305 3 20 1 210 6 332 1 
213 1 241 4 130 3 46 4 291 7 136 2 182 20 93 2 137 1 260 1 141 11 20 3 305 5 226 4 188 1 227 5 193 5 105 1 233 4 314 1 156 1 69 1 160 41 204 1 31 1 32 1 207 21 120 5 121 4 34 4 164 6 210 10 276 6 282 1 332 1 
241 1 130 1 182 4 93 1 141 2 305 1 20 1 226 2 227 1 188 1 193 1 69 1 160 8 204 1 31 1 207 4 120 1 121 1 164 1 210 2 276 1 211 1 282 1 
241 1 130 1 46 1 291 1 182 6 93 1 260 1 141 3 20 1 305 2 226 2 188 1 227 2 193 2 105 1 69 1 160 11 204 1 31 1 207 5 120 2 121 2 34 1 164 2 210 4 276 1 211 1 282 1 
241 1 130 1 291 1 46 2 136 1 182 9 93 1 141 4 94 1 20 1 305 3 226 3 188 1 227 3 193 3 105 1 233 2 27 1 69 1 160 19 204 1 31 1 207 10 70 1 120 3 121 1 322 1 34 2 164 3 210 6 211 1 276 3 282 1 
241 1 130 1 46 2 291 2 136 1 182 10 93 1 94 1 141 4 20 1 305 3 226 2 188 1 227 3 193 3 105 1 233 1 27 1 69 1 160 17 204 1 31 1 207 7 70 1 120 3 121 1 322 1 34 2 164 3 210 6 211 1 276 2 282 1 
241 1 130 1 182 4 93 1 141 2 305 1 20 1 226 2 227 1 188 1 193 1 69 1 160 8 204 1 31 1 207 4 120 1 121 1 164 1 210 2 276 1 211 1 282 1 
241 1 46 2 291 1 182 6 94 1 141 1 305 1 227 1 193 1 233 2 27 1 160 12 31 1 207 6 70 1 120 1 121 1 322 1 34 2 164 2 210 2 211 1 276 2 282 1 
241 1 130 1 291 2 46 2 136 2 182 10 93 1 94 1 141 5 20 1 305 4 226 3 188 1 227 4 193 4 105 1 233 1 27 1 69 1 160 18 204 1 31 1 207 8 70 1 120 4 121 1 322 1 34 2 164 3 210 8 211 1 276 2 282 1 
241 1 46 2 291 2 136 1 182 7 141 2 94 1 305 3 227 3 193 3 233 1 27 1 160 11 31 1 207 4 70 1 120 3 121 1 322 1 34 2 164 2 210 6 211 1 276 1 282 1 332 1 
226 3 188 1 130 3 291 3 69 2 160 7 182 3 207 4 93 1 164 1 141 6 20 3 276 1 
241 1 130 1 291 1 46 2 136 2 182 10 93 1 94 1 141 4 20 1 305 4 226 3 188 1 227 4 193 4 233 1 27 1 69 1 160 18 204 1 31 1 207 8 70 1 120 4 121 1 322 1 34 2 164 3 210 8 211 1 276 2 282 1 332 1 
129 1 228 1 81 1 245 1 51 1 302 1 95 1 
129 1 24 1 228 1 81 1 229 1 245 1 177 1 12 1 302 1 51 1 95 1 97 1 
202 1 221 1 270 1 138 1 43 1 109 1 274 1 310 1 278 1 37 1 8 1 
228 1 81 2 150 1 104 1 230 1 245 2 109 1 43 1 8 1 296 1 202 1 115 1 221 1 33 1 270 1 95 1 37 1 278 1 
81 2 245 2 3 1 43 1 8 2 296 2 221 1 95 2 228 1 104 2 150 1 230 1 106 1 109 1 64 1 235 1 65 1 202 1 115 1 33 1 270 3 73 1 278 1 
81 2 245 2 3 1 43 2 8 2 296 2 221 1 95 2 228 1 190 1 104 2 150 1 230 1 106 1 234 1 109 2 64 1 235 1 65 1 202 2 33 1 270 3 73 1 278 1 
78 2 82 1 214 1 288 1 43 3 8 1 296 1 221 1 98 1 99 2 262 1 191 1 106 1 234 1 109 3 235 1 113 1 202 3 270 4 73 1 278 1 280 1 37 1 
78 2 82 1 191 1 106 1 216 1 288 1 234 1 109 3 43 3 235 1 8 1 296 1 202 3 113 1 221 1 73 1 270 4 99 2 37 1 262 1 280 1 278 1 
202 1 221 1 244 1 43 1 109 1 278 1 
80 1 244 1 63 1 109 6 43 7 87 1 28 1 89 1 8 2 158 1 295 1 296 1 202 7 221 3 256 1 270 3 52 1 261 1 36 1 37 2 278 2 
81 2 174 1 245 2 8 1 182 3 93 1 256 1 95 1 20 1 188 1 104 1 193 2 195 1 109 1 202 1 203 2 115 1 204 1 207 3 120 2 33 1 270 1 210 4 276 1 278 1 130 1 41 1 43 1 296 1 299 1 221 1 141 2 305 2 223 1 224 1 226 2 227 2 228 2 150 1 230 1 61 1 67 2 157 1 69 1 320 1 160 6 164 1 
78 3 82 1 133 1 216 1 288 1 43 1 96 1 142 1 99 3 262 1 311 2 191 1 109 1 155 1 202 1 113 2 161 1 122 1 270 2 74 1 273 1 126 2 212 2 37 1 330 2 329 1 280 1 281 1 
244 1 109 1 43 1 218 1 8 1 296 1 202 1 91 1 221 2 270 1 261 1 280 1 278 1 
234 1 109 4 43 4 315 1 8 1 202 4 221 1 256 1 270 1 138 1 274 1 37 1 278 1 
146 1 109 2 43 2 235 1 29 1 8 1 295 1 296 1 202 2 221 2 270 1 16 1 36 1 278 1 
202 1 284 1 221 1 43 1 109 1 307 1 5 1 278 1 37 1 251 1 
23 1 80 1 109 2 43 2 8 1 202 2 221 1 256 1 270 1 52 1 278 1 
63 1 109 4 43 5 235 1 87 1 315 1 8 2 202 5 221 2 256 1 270 3 138 1 52 1 274 1 37 1 278 2 
63 1 313 1 109 4 43 5 235 1 315 1 8 2 202 5 221 2 256 1 270 3 138 1 52 1 274 1 37 1 278 2 
228 1 81 2 150 1 104 1 190 1 230 1 245 2 109 1 43 1 8 1 296 1 202 1 221 1 33 1 270 1 95 1 37 1 278 1 
109 1 43 1 235 1 89 1 8 1 295 1 296 1 202 1 221 2 270 1 261 1 36 1 278 1 
81 1 245 1 42 1 110 1 44 1 297 1 95 1 225 1 185 1 
102 1 124 1 110 1 
228 1 42 1 110 1 236 1 44 1 
78 2 102 1 228 1 191 1 133 1 288 1 3 1 64 1 110 1 42 2 65 1 236 2 44 2 14 1 124 1 238 1 240 1 99 2 262 1 

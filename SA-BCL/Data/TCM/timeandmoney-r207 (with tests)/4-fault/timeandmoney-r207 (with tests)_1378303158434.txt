#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (42,115) 17 136 (12,224) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (42,115) 17 136 (12,224) (12,224) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (42,115) 17 136 (12,224) (12,224) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (42,115) 17 136 (12,224) (12,224) 271 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
28 1 56 2 191 1 193 1 194 4 220 1 334 9 221 2 152 2 13 1 319 1 344 1 345 1 106 1 159 2 132 3 231 1 230 1 108 2 45 2 371 6 51 5 114 1 214 1 140 9 373 2 325 1 142 1 
28 1 56 2 191 1 193 1 194 4 220 1 334 9 221 2 152 2 13 1 319 1 344 1 345 1 106 1 159 2 132 3 231 1 230 1 108 2 45 2 371 6 51 5 114 1 214 1 140 9 373 2 325 1 142 1 
28 1 56 2 191 1 193 1 194 5 220 1 334 10 221 2 152 2 13 1 319 1 344 1 345 1 106 1 159 2 132 4 231 1 230 1 108 2 45 2 371 7 51 6 114 1 214 1 140 10 373 2 325 1 142 1 
56 2 191 1 193 1 194 3 220 1 334 7 221 1 152 2 13 1 319 1 344 1 345 1 106 1 159 2 132 2 231 1 230 1 108 2 45 2 371 4 51 4 114 1 214 1 140 7 373 2 325 1 142 1 
132 1 159 1 28 1 56 1 191 1 108 1 194 2 220 1 334 4 221 2 371 3 51 3 152 1 114 1 373 1 140 4 214 1 13 1 
345 1 159 1 56 1 191 1 108 1 45 1 220 1 334 2 336 1 280 1 51 1 114 1 140 2 373 1 11 1 319 1 
159 2 132 1 230 1 191 1 108 2 45 1 194 1 220 1 334 3 371 1 51 2 114 1 140 3 
28 1 56 1 191 1 193 1 194 4 220 1 334 9 221 2 152 1 13 1 132 3 159 2 230 1 108 2 45 1 181 1 371 7 51 5 114 1 140 9 325 1 214 1 373 1 275 1 
28 1 56 1 191 1 193 1 194 4 220 1 334 9 221 2 152 1 13 1 132 3 159 2 230 1 108 2 45 1 181 1 371 7 51 5 114 1 140 9 325 1 214 1 373 1 275 1 
263 1 337 1 317 1 
329 1 337 1 35 2 
17 2 260 2 274 1 155 2 115 2 258 2 251 2 136 1 
74 1 75 1 260 3 239 2 332 1 31 1 32 1 195 1 358 1 357 2 311 1 312 1 223 1 197 1 283 1 155 2 154 1 61 1 316 1 202 1 65 2 17 2 249 1 250 1 251 2 136 1 348 2 182 1 20 2 299 1 274 1 115 2 236 1 258 3 257 1 352 1 277 1 
17 1 115 1 12 1 136 1 
131 1 260 1 217 1 310 1 111 1 251 1 263 1 337 1 37 1 284 1 256 1 258 1 265 1 166 1 
17 1 131 1 260 1 310 2 111 1 251 1 263 1 337 1 37 2 155 1 115 1 256 1 258 1 265 1 166 1 
272 1 37 1 150 1 310 1 303 1 
263 1 227 1 337 1 0 1 272 1 37 2 310 2 303 1 
37 1 310 1 303 1 
272 1 17 1 37 1 224 1 115 1 310 1 12 1 136 1 
337 1 
263 1 227 1 335 1 337 1 272 1 37 2 310 2 303 1 
227 1 330 2 245 1 84 2 98 2 322 1 310 5 263 1 337 1 272 2 209 1 37 5 296 1 222 1 22 1 153 1 141 1 116 1 303 2 
274 1 317 1 
17 1 366 1 260 2 251 2 323 1 274 2 155 1 115 1 258 2 
50 1 285 1 118 1 
175 1 260 1 239 1 32 1 195 1 357 1 348 1 312 1 182 1 299 1 223 1 274 1 236 1 258 1 257 1 352 1 
260 2 239 1 32 1 110 1 195 1 251 1 357 1 348 1 182 1 312 1 298 1 299 1 223 1 155 1 115 1 236 1 258 2 257 1 352 1 118 1 
17 1 260 5 167 1 69 1 217 1 110 2 251 5 323 1 7 1 298 1 274 1 155 4 115 4 258 5 
131 1 42 1 260 2 155 2 115 2 258 2 39 1 251 2 
17 1 260 3 274 1 155 3 115 3 110 1 258 3 251 3 
131 1 260 1 155 1 115 1 258 1 39 1 251 1 
323 1 131 1 17 1 366 1 260 1 155 1 115 1 258 1 251 1 
75 1 260 4 239 1 332 1 31 1 32 1 310 1 195 1 358 1 357 1 311 1 312 1 100 1 37 1 223 1 197 1 360 1 283 1 155 3 154 1 202 1 265 1 65 1 17 2 131 1 249 1 110 1 111 1 251 3 136 1 348 1 182 1 323 1 20 2 298 1 299 1 274 1 115 3 236 1 256 1 257 1 258 4 352 1 166 1 
260 2 274 1 155 1 115 1 167 1 217 1 258 2 110 1 251 2 
17 1 131 1 246 1 260 3 310 1 110 2 111 1 251 3 323 1 337 1 100 1 37 1 298 1 155 3 115 3 256 1 258 3 265 1 166 1 
17 1 260 2 110 1 251 2 323 1 50 1 155 2 115 2 258 2 118 1 
260 1 239 1 32 1 195 1 357 1 348 1 312 1 182 1 223 1 299 1 274 1 236 1 258 1 257 1 352 1 
260 1 239 1 195 1 357 1 348 1 312 1 182 1 349 1 21 1 223 1 299 1 274 1 236 1 258 1 352 1 
353 1 304 1 305 1 306 1 332 1 31 1 279 1 311 1 197 1 283 1 61 2 285 2 201 1 202 2 16 1 65 4 66 1 249 1 20 2 50 2 300 1 276 1 55 1 118 2 
131 1 260 1 42 1 155 1 115 1 258 1 111 1 251 1 
33 1 34 1 
33 1 34 1 
267 1 117 1 
267 1 117 1 
267 1 117 1 
8 1 33 1 34 1 
8 1 33 1 34 1 
367 1 33 1 34 1 
267 1 350 1 117 1 233 1 33 2 34 2 
8 1 33 1 34 1 
288 1 33 1 34 1 
288 1 33 1 34 1 
288 1 33 1 34 1 
121 1 260 2 96 1 310 1 33 1 34 1 170 1 6 1 37 1 338 1 155 2 130 1 286 1 364 1 368 1 367 1 43 1 251 2 212 1 274 1 115 2 187 1 258 2 374 1 
121 2 64 1 346 1 368 1 310 2 33 2 170 2 34 2 171 1 6 2 337 1 37 2 162 2 211 1 350 1 164 1 130 3 63 1 286 2 
152 1 56 1 373 1 
336 1 56 1 373 1 
40 1 336 1 59 1 152 2 347 1 56 3 
40 1 336 1 248 1 152 1 347 1 56 2 
40 1 336 1 152 1 347 2 56 2 
329 1 330 1 305 1 356 2 76 2 146 1 98 1 310 5 35 3 263 1 337 2 37 5 151 1 222 2 201 1 16 1 227 1 266 1 84 1 245 3 43 1 272 4 183 2 297 1 210 1 187 1 141 1 326 1 374 1 303 1 72 1 55 1 
329 3 330 2 305 3 356 6 192 1 262 5 98 2 310 9 35 9 263 1 337 5 37 9 101 1 150 5 222 6 9 1 201 3 16 3 227 1 266 2 84 2 245 8 365 1 87 1 272 7 183 6 297 3 210 2 255 1 187 4 141 1 116 1 326 1 303 6 55 3 
329 2 330 1 305 1 76 1 356 2 146 1 98 1 310 3 35 4 263 1 337 3 37 3 222 2 201 1 16 1 266 1 84 1 245 3 272 2 297 1 183 2 210 1 187 1 116 1 72 1 55 1 
329 3 330 1 305 2 356 4 76 2 146 1 192 1 98 1 310 4 35 7 263 1 337 4 37 4 222 4 201 2 16 2 266 1 84 1 245 5 365 1 272 3 183 4 297 2 210 1 255 1 187 2 116 1 72 1 55 2 
25 1 299 1 317 1 
359 1 299 1 
331 1 
299 1 236 1 195 1 
299 1 302 1 
299 1 195 1 
25 2 299 3 200 1 236 1 218 1 195 1 
16 1 122 1 158 2 65 7 355 1 85 1 247 1 306 2 270 1 36 1 113 1 102 1 61 4 202 3 201 1 104 1 276 3 
16 1 122 1 158 2 65 7 355 1 85 1 247 1 306 2 270 1 36 1 113 1 102 1 61 4 202 3 201 1 104 1 276 3 
16 1 122 1 158 2 65 7 355 1 247 1 85 1 306 2 270 1 293 1 36 1 113 1 102 1 61 4 202 3 201 1 104 1 276 3 
237 1 122 1 355 2 305 3 306 5 332 1 31 1 99 1 36 1 148 1 127 1 102 2 197 1 129 1 61 16 199 1 104 1 202 15 201 4 16 4 229 3 65 31 158 3 247 1 85 2 249 1 232 1 270 5 113 2 20 2 297 3 254 4 276 10 55 3 
122 1 355 1 306 3 332 2 31 2 99 1 102 1 38 1 197 2 61 5 201 1 202 4 104 1 15 1 16 1 65 9 158 2 85 1 247 1 249 2 270 1 20 4 113 1 276 4 
95 1 239 1 26 1 56 2 191 1 219 1 357 1 220 1 334 2 312 1 336 1 223 1 59 1 103 1 152 1 243 1 159 1 178 1 108 1 45 1 348 1 112 1 371 1 51 1 185 1 114 1 373 1 140 2 165 1 73 1 
95 1 239 1 26 1 123 1 56 2 191 1 357 1 77 1 220 1 334 3 312 1 336 1 58 1 59 1 223 1 103 1 152 1 243 1 159 1 178 1 108 1 45 1 348 1 112 1 371 2 51 1 185 1 373 1 140 3 73 1 
95 1 239 1 56 2 191 1 357 1 77 1 220 1 334 2 312 1 336 1 58 1 223 1 59 1 152 1 243 1 178 1 45 1 348 1 112 1 371 2 51 1 185 1 140 2 373 1 73 1 
239 1 95 2 123 1 124 1 195 1 357 1 312 1 334 1 223 1 243 2 159 1 207 1 108 1 180 1 45 2 348 1 112 2 299 1 213 1 53 1 140 1 215 1 352 1 
95 1 239 1 26 1 56 2 357 1 334 1 312 1 336 1 58 1 223 1 59 1 103 1 152 1 243 1 159 1 178 1 108 1 45 1 348 1 112 1 185 1 114 1 373 1 140 1 165 1 73 1 
168 1 
329 2 330 1 239 2 189 2 98 1 195 1 337 2 284 1 343 1 203 1 204 1 245 2 67 2 290 1 207 1 160 1 111 1 294 2 251 1 348 2 210 1 299 1 23 1 256 1 258 1 303 6 352 2 166 1 354 1 260 1 261 2 308 2 30 1 217 1 310 5 35 2 357 2 263 1 312 1 37 5 222 2 223 1 314 2 265 1 227 3 363 1 131 1 41 2 84 1 83 1 135 1 89 1 48 4 53 1 141 1 
227 1 131 1 260 1 67 1 30 1 217 1 310 3 111 1 251 1 89 1 335 1 48 2 37 3 284 1 23 1 256 1 258 1 303 2 343 1 265 1 166 1 203 1 
260 1 217 1 30 1 310 3 263 1 335 1 337 1 37 3 314 1 284 1 265 1 343 1 203 1 227 1 131 1 111 1 251 1 89 1 48 3 23 1 256 1 258 1 303 1 166 1 
260 1 217 1 30 1 308 1 310 3 335 1 263 1 337 1 37 3 314 1 284 1 265 1 343 1 203 1 227 1 131 1 67 1 111 1 251 1 89 1 48 3 23 1 256 1 258 1 303 2 166 1 
3 1 260 1 217 1 30 1 308 2 310 3 263 1 335 1 337 1 37 3 224 1 284 1 12 1 343 1 265 1 203 1 227 1 228 1 17 1 131 1 67 2 111 1 136 1 251 1 89 1 48 2 115 1 23 1 256 1 258 1 303 3 166 1 
329 2 330 1 260 1 189 2 261 2 308 2 30 1 98 1 217 1 310 4 35 2 263 1 337 2 37 4 222 1 314 2 284 1 343 1 265 1 203 1 227 2 131 1 41 2 245 1 84 1 83 1 67 2 290 1 111 1 135 1 294 2 251 1 89 1 48 4 141 1 23 1 256 1 258 1 303 4 166 1 
329 2 330 1 24 1 260 1 189 2 261 2 308 2 217 1 30 1 98 1 310 4 263 1 337 1 37 4 222 1 314 2 284 1 265 1 343 1 203 1 227 2 131 1 41 2 245 1 83 1 84 1 67 2 290 1 111 1 294 2 251 1 89 1 48 4 90 1 23 1 141 1 256 1 258 1 303 4 351 1 166 1 
329 2 330 1 24 1 260 1 189 2 261 2 308 2 217 1 30 1 98 1 310 4 263 1 337 1 37 4 222 1 314 2 284 1 265 1 343 1 203 1 227 2 131 1 41 2 245 1 83 1 84 1 67 2 290 1 111 1 294 2 251 1 89 1 48 4 90 1 23 1 141 1 256 1 258 1 303 4 351 1 166 1 
330 1 260 1 29 1 261 2 308 2 217 1 30 1 98 1 310 4 241 1 35 2 263 1 337 1 37 4 222 1 314 2 284 1 264 2 265 1 343 1 203 1 227 2 131 1 41 2 245 1 84 1 67 2 290 1 19 1 111 1 251 1 89 1 48 4 138 2 23 1 141 1 256 1 258 1 303 4 351 1 166 1 
329 2 330 1 24 1 260 1 189 2 261 2 98 1 217 1 30 1 308 3 310 4 263 1 337 1 37 4 222 1 314 3 284 1 265 1 343 1 203 1 227 2 228 1 131 1 41 2 245 1 83 1 84 1 290 1 67 3 111 1 294 2 251 1 89 1 48 5 90 1 141 1 23 1 256 1 258 1 303 5 351 1 166 1 
329 2 330 1 24 1 260 1 189 2 261 2 98 1 217 1 30 1 308 3 310 4 263 1 337 1 37 4 222 1 314 3 284 1 265 1 343 1 203 1 227 2 228 1 131 1 41 2 245 1 83 1 84 1 290 1 67 3 111 1 294 2 251 1 89 1 48 5 90 1 141 1 23 1 256 1 258 1 303 5 351 1 166 1 
330 1 260 1 261 2 308 2 30 1 98 1 217 1 310 4 35 2 263 1 337 1 37 4 222 1 314 2 284 1 264 2 343 1 265 1 203 1 227 2 131 1 41 2 245 1 84 1 67 2 290 1 19 1 111 1 135 1 251 1 89 1 48 4 138 2 141 1 23 1 256 1 258 1 303 4 166 1 
122 1 306 2 332 1 31 1 279 1 311 1 102 1 197 1 283 1 61 3 285 1 317 1 104 1 201 1 202 3 16 1 65 6 158 1 247 1 249 1 20 2 113 1 50 1 274 2 276 2 118 1 
237 1 119 1 305 2 306 1 332 2 307 1 31 2 333 1 358 1 311 2 148 1 197 2 283 1 61 8 285 11 316 1 342 1 202 6 201 2 16 1 229 3 65 14 249 2 270 1 137 1 20 4 297 2 50 4 254 3 274 1 276 2 118 11 55 1 
239 1 260 2 97 1 332 1 32 1 31 1 195 1 357 1 358 1 312 1 311 1 223 1 197 1 283 1 155 1 61 1 156 1 342 1 316 1 202 1 65 2 175 1 249 1 110 1 134 1 251 1 348 1 182 1 20 2 50 1 298 1 299 1 274 1 115 1 236 1 257 1 258 2 352 1 
239 3 332 3 195 2 58 1 102 1 197 3 283 3 155 1 61 10 285 7 342 1 104 1 202 10 201 3 16 3 158 1 65 20 247 1 249 3 68 2 110 1 251 1 348 3 113 1 20 6 297 2 298 1 253 1 299 2 115 1 301 2 258 3 257 2 352 1 118 7 122 1 75 2 260 3 305 2 306 4 31 3 32 2 358 1 357 3 311 3 312 2 223 2 361 2 173 1 316 1 174 1 270 4 182 2 50 7 274 2 236 2 276 8 143 2 55 2 
238 1 74 2 260 1 239 7 332 2 31 2 219 1 279 1 195 2 169 1 357 8 358 1 313 1 312 2 311 2 58 1 223 2 197 2 283 2 155 1 61 1 316 1 202 1 320 1 242 1 65 2 249 2 207 1 269 1 109 1 110 1 251 1 348 8 20 4 299 3 53 1 115 1 258 1 352 2 
260 1 305 1 306 1 216 1 332 1 31 1 311 1 197 1 283 1 155 1 61 1 285 1 342 1 201 1 202 2 16 1 17 1 65 3 249 1 251 1 323 1 20 2 297 1 50 1 115 1 258 1 276 1 118 1 55 1 
65 2 249 1 305 1 332 1 31 1 270 1 279 1 311 1 20 2 50 1 197 1 300 1 283 1 61 2 285 1 276 1 201 1 118 1 
16 1 65 2 66 1 249 1 306 1 332 1 31 1 279 1 311 1 20 2 50 1 197 1 283 1 285 1 276 1 202 2 118 1 55 1 
16 1 65 4 249 1 305 1 306 1 332 1 31 1 270 1 279 1 311 1 20 2 297 1 50 2 197 1 283 1 61 2 285 2 202 2 276 2 201 1 55 1 118 2 
65 2 249 1 305 1 332 1 31 1 270 1 311 1 20 2 50 1 197 1 300 1 283 1 61 2 285 1 276 1 201 1 118 1 242 1 
16 1 65 2 66 1 249 1 306 1 332 1 31 1 311 1 20 2 50 1 197 1 283 1 285 1 276 1 202 2 118 1 242 1 55 1 
16 1 65 4 249 1 305 1 306 1 332 1 31 1 270 1 311 1 20 2 297 1 50 2 197 1 283 1 61 2 285 2 202 2 276 2 201 1 55 1 118 2 242 1 
16 1 65 4 249 1 305 1 306 1 332 1 31 1 270 1 311 1 20 2 297 1 50 2 197 1 283 1 61 2 285 2 202 2 276 2 201 1 55 1 118 2 
75 1 239 1 260 1 332 1 32 1 31 1 195 1 357 1 358 1 312 1 311 1 223 1 197 1 283 1 61 1 316 1 202 1 65 2 249 1 348 1 182 1 20 2 299 1 274 1 236 1 257 1 258 1 352 1 
239 1 260 1 332 1 31 1 195 1 125 1 357 1 358 1 312 1 311 1 223 1 197 1 283 1 61 1 316 1 202 1 65 2 249 1 348 1 182 1 349 1 20 2 21 1 299 1 274 1 236 1 258 1 352 1 
16 1 65 4 249 1 305 1 306 1 332 1 31 1 270 1 311 1 20 2 297 1 50 2 197 1 283 1 61 2 285 2 342 1 202 2 276 2 201 1 55 1 118 2 
75 1 239 1 260 1 305 1 306 1 332 1 32 1 31 1 219 1 195 1 357 1 312 1 311 1 223 1 197 1 283 1 61 2 285 2 202 2 201 1 16 1 65 4 249 1 270 1 348 1 182 1 20 2 297 1 50 2 299 1 301 1 236 1 257 1 258 1 276 2 55 1 118 2 
144 1 260 1 305 1 332 1 31 1 311 1 197 1 283 1 155 1 61 2 285 1 342 1 202 1 201 1 16 1 17 1 65 3 249 1 270 1 251 1 323 1 20 2 297 1 50 1 115 1 258 1 276 1 55 1 118 1 
237 1 328 1 1 1 2 1 305 3 306 3 332 2 31 2 126 1 148 1 38 1 197 2 198 2 61 9 225 2 202 10 201 3 16 3 229 1 65 19 249 2 270 3 20 4 297 3 324 1 254 2 163 1 276 6 259 1 55 3 
328 2 237 2 2 1 145 1 305 3 306 2 332 3 31 3 99 2 126 2 5 1 38 1 282 1 197 3 198 1 61 14 202 12 225 4 201 3 321 1 16 2 229 2 65 26 249 3 270 2 46 1 161 1 20 6 297 3 324 1 254 2 276 4 259 1 55 2 
237 3 328 1 1 1 122 1 2 1 145 1 305 4 306 4 332 3 31 3 99 1 5 1 126 2 148 1 102 1 38 1 282 1 197 3 198 1 61 20 104 1 225 4 202 21 201 5 226 1 321 1 16 5 229 3 158 1 65 41 247 1 249 3 46 1 270 4 161 1 113 1 20 6 297 4 324 1 254 4 276 8 259 1 55 4 
237 3 328 1 1 1 122 1 2 1 145 1 305 4 306 4 332 4 31 4 99 2 5 1 126 2 148 1 102 1 38 1 282 1 197 4 198 1 61 20 104 1 225 4 202 18 201 5 226 1 321 1 16 4 229 3 158 1 65 38 247 1 249 4 46 1 270 3 161 1 113 1 20 8 297 4 324 1 254 4 276 7 259 1 55 3 
237 2 328 1 122 1 2 1 145 1 305 7 306 7 332 2 31 2 99 1 5 1 126 1 148 2 102 1 38 1 282 1 197 2 198 1 61 27 104 1 225 4 202 25 201 8 321 1 16 8 229 4 158 1 65 52 247 1 249 2 46 1 270 7 161 1 137 2 113 1 20 4 297 7 324 1 254 4 276 14 259 1 55 7 
238 1 74 2 260 2 239 2 332 1 31 1 195 1 357 2 358 1 312 1 311 1 223 1 197 1 283 1 61 1 342 1 316 1 202 1 244 1 65 2 249 1 269 1 133 1 251 2 348 2 49 1 273 1 20 2 299 1 186 1 258 2 
239 2 95 1 56 2 309 1 88 1 219 1 357 2 348 2 336 1 312 1 58 1 59 1 223 1 103 1 185 1 152 1 339 1 373 1 73 1 
239 1 95 1 56 2 57 1 309 1 357 1 348 1 336 1 312 1 58 1 59 1 223 1 103 1 185 1 152 1 373 1 73 1 
239 1 95 1 207 1 195 1 88 1 357 1 348 1 312 1 172 1 223 1 299 1 53 1 215 1 352 1 
239 1 95 1 56 2 309 1 88 1 357 1 348 1 336 1 312 1 58 1 59 1 223 1 103 1 185 1 152 1 339 1 373 1 73 1 
252 1 
263 1 337 1 245 1 222 1 22 1 153 1 317 1 
227 1 329 1 330 1 84 1 83 1 245 1 189 1 98 1 310 1 294 1 35 1 263 1 337 2 37 1 222 1 141 1 303 1 
329 6 93 1 330 4 94 2 239 3 4 1 98 4 195 3 196 2 337 8 153 1 201 2 14 2 16 2 204 1 245 9 291 2 348 3 297 2 210 2 299 10 22 1 256 2 302 2 303 5 352 1 25 2 27 1 305 2 356 6 310 5 218 1 219 1 357 3 35 12 263 2 312 4 359 3 37 5 223 3 128 1 222 8 78 2 80 2 227 3 84 4 234 2 139 2 183 6 141 4 236 3 327 1 143 2 55 2 
237 1 329 3 330 2 145 1 305 2 356 5 98 2 310 1 35 6 5 1 263 2 281 1 337 5 37 1 222 5 282 1 201 2 14 1 80 2 227 1 16 2 229 1 204 1 245 8 84 2 289 1 46 1 161 1 183 5 297 2 210 1 254 1 141 2 303 1 55 2 
16 1 17 1 24 1 330 1 245 2 84 1 98 1 310 1 136 1 271 1 37 1 113 1 102 1 222 1 224 1 115 1 141 1 12 1 201 1 104 1 80 2 
330 1 84 1 245 1 98 1 263 1 337 1 222 1 22 1 153 1 141 1 
329 5 16 2 245 5 305 2 356 5 35 10 337 5 297 2 183 5 222 5 201 2 14 1 143 1 80 2 55 2 
263 1 227 1 337 1 37 1 310 1 303 1 
330 2 93 1 239 4 98 2 310 3 195 1 357 4 312 1 37 3 223 1 222 2 318 1 363 1 227 2 204 2 84 2 245 2 207 1 160 1 348 4 370 1 210 2 299 1 53 1 141 1 116 1 327 2 303 4 352 2 
75 1 239 1 260 3 332 1 31 1 32 1 195 1 358 1 357 1 312 1 311 1 223 1 197 1 283 1 155 2 154 1 202 1 65 1 17 2 249 1 251 2 136 1 348 1 182 1 20 2 299 1 274 1 115 2 236 1 258 3 257 1 352 1 
329 2 158 1 330 1 204 1 84 1 245 1 356 2 98 1 35 4 263 2 337 4 183 2 210 1 222 2 141 1 
6 1 54 1 286 1 
6 1 54 1 286 1 
171 1 6 1 96 1 157 1 286 1 
6 1 54 1 286 1 
6 1 177 1 286 1 
6 1 177 1 286 1 
6 1 177 1 286 1 
6 1 286 1 
33 1 34 1 
16 1 122 1 158 1 65 8 247 1 249 2 306 2 332 2 31 2 270 1 99 1 20 4 113 1 102 1 197 2 61 4 201 1 104 1 202 4 276 3 
16 1 122 1 158 1 65 6 247 1 306 2 113 1 102 1 61 3 202 3 317 1 276 2 104 1 201 1 
16 1 65 4 249 1 305 1 306 1 332 1 44 1 31 1 270 1 20 2 297 1 197 1 61 2 202 2 276 2 201 1 55 1 
16 1 237 1 229 1 65 7 305 1 306 1 270 1 148 1 297 1 254 2 61 3 202 4 201 1 276 2 55 1 
122 1 305 2 306 5 332 2 31 2 333 1 99 2 148 1 102 2 197 2 61 11 104 1 201 3 202 12 16 3 229 2 158 1 65 23 247 1 249 2 270 4 137 1 113 2 297 2 20 4 254 2 276 9 188 1 55 2 
65 1 254 1 202 1 
229 1 65 1 61 1 
16 1 65 6 249 1 305 1 306 2 332 1 31 1 44 1 270 1 20 2 297 1 197 1 61 3 202 3 201 1 276 3 143 1 55 1 
237 1 145 1 305 2 306 1 332 1 31 1 5 1 38 1 197 1 282 1 61 6 202 6 201 2 16 2 229 1 65 12 249 1 270 1 46 1 161 1 20 2 297 2 254 1 276 2 55 2 
16 1 65 6 306 1 270 1 113 1 102 1 61 3 104 1 201 1 202 3 276 2 
122 1 65 3 247 1 249 1 306 1 332 1 31 1 270 1 99 1 113 1 20 2 102 1 197 1 61 1 276 2 202 2 188 1 
16 2 65 10 249 1 306 3 332 1 31 1 270 2 271 1 20 2 113 2 102 2 38 1 197 1 61 5 276 5 202 5 104 1 201 2 
65 2 249 1 305 1 332 1 31 1 270 1 20 2 38 1 197 1 61 2 201 1 276 1 
16 1 65 4 249 1 305 1 306 1 332 1 31 1 270 1 20 2 297 1 38 1 197 1 61 2 202 2 276 2 201 1 55 1 
1 1 65 3 249 3 306 1 332 3 31 3 99 1 270 1 20 6 113 1 102 1 38 1 197 3 61 1 202 2 276 2 188 1 
237 1 122 1 1 1 305 3 306 7 332 5 31 5 99 2 127 1 148 1 102 3 38 1 197 5 199 1 129 1 61 16 104 2 202 18 201 5 16 5 229 3 158 1 65 34 247 1 249 5 44 1 270 5 113 3 20 10 297 3 254 4 276 12 188 1 55 3 
237 1 122 1 306 2 332 1 31 1 102 1 38 1 197 1 61 4 201 1 202 4 104 1 16 1 229 1 158 1 65 8 247 1 249 1 46 1 20 2 113 1 254 1 276 2 
237 1 122 1 305 1 306 2 332 2 31 2 148 1 102 1 38 1 197 2 61 6 104 1 202 5 201 2 16 1 229 1 158 1 65 11 247 1 249 2 44 1 46 1 270 1 113 1 20 4 297 1 254 2 276 3 
237 1 122 1 145 1 305 2 306 3 332 3 31 3 99 1 5 1 102 1 38 1 282 1 197 3 61 9 104 1 202 10 201 3 16 3 229 1 158 1 65 19 247 1 249 3 44 1 270 1 46 1 161 1 113 1 20 6 297 2 254 1 276 4 55 2 
237 1 122 1 145 1 305 2 306 3 332 3 31 3 99 1 5 1 102 1 38 1 197 3 282 1 61 10 104 1 202 7 201 3 16 2 229 1 158 1 65 17 247 1 249 3 44 1 270 2 46 1 161 1 113 1 20 6 297 2 254 1 276 5 55 1 
237 1 122 1 306 2 332 1 31 1 102 1 38 1 197 1 61 4 201 1 202 4 104 1 16 1 229 1 158 1 65 8 247 1 249 1 46 1 20 2 113 1 254 1 276 2 
237 1 145 1 305 2 306 1 332 1 31 1 5 1 38 1 197 1 282 1 61 6 202 6 201 2 16 2 229 1 65 12 249 1 270 1 46 1 161 1 20 2 297 2 254 1 276 2 55 2 
237 1 122 1 145 1 305 2 306 3 332 4 31 4 99 2 5 1 102 1 38 1 282 1 197 4 61 10 104 1 202 8 201 3 16 2 229 1 158 1 65 18 247 1 249 4 44 1 270 2 46 1 161 1 113 1 20 8 297 2 254 1 276 5 55 1 
237 1 1 1 145 1 305 3 306 3 332 4 31 4 99 2 5 1 38 1 282 1 197 4 61 9 202 7 201 3 16 2 229 1 65 16 249 4 270 3 46 1 161 1 20 8 297 3 254 1 276 6 55 2 
16 1 122 1 65 7 247 2 306 3 270 3 113 3 102 3 61 3 202 4 276 6 104 1 201 1 
237 1 122 1 1 1 145 1 305 2 306 3 332 4 31 4 99 2 5 1 102 1 38 1 282 1 197 4 61 10 104 1 202 8 201 3 16 2 229 1 158 1 65 18 247 1 249 4 270 1 46 1 161 1 113 1 20 8 297 2 254 1 276 4 55 1 
260 1 274 1 167 1 217 1 258 1 79 1 251 1 
81 1 205 1 260 1 268 1 167 1 217 1 251 1 274 1 362 1 235 1 258 1 79 1 
312 1 223 1 299 1 239 1 207 1 53 1 317 1 195 1 352 1 348 1 357 1 
260 2 239 1 32 1 110 1 195 1 251 1 357 1 348 1 182 1 312 1 299 1 223 1 274 1 155 1 115 1 236 1 258 2 352 1 
131 1 260 2 239 1 32 1 110 1 111 1 195 2 251 2 357 1 348 1 182 1 312 1 139 1 299 3 223 1 274 1 155 2 115 1 236 2 302 1 258 2 327 1 166 1 
239 2 260 2 195 2 357 2 312 1 223 1 155 2 131 1 292 1 110 1 111 1 251 2 348 2 182 1 139 1 21 1 299 3 274 1 115 1 236 2 327 1 258 2 302 1 166 1 
25 1 239 3 310 2 195 1 357 3 312 1 263 1 359 1 337 1 37 2 149 1 223 1 62 1 292 1 348 3 139 1 299 4 236 1 256 1 327 1 302 1 303 1 352 1 
94 1 25 1 239 3 292 1 310 2 195 1 357 3 348 3 263 1 312 1 337 1 359 1 139 1 37 2 299 4 223 1 256 1 236 1 302 1 327 1 303 1 352 1 
312 1 223 1 239 1 348 1 357 1 320 1 
82 1 239 1 218 1 195 1 357 1 348 1 312 2 299 1 223 1 340 1 372 1 236 1 352 1 
122 1 75 1 260 2 239 1 306 2 332 2 31 2 32 1 195 1 219 1 357 1 312 1 311 2 102 1 223 1 197 2 283 2 361 1 155 1 61 3 285 1 342 1 202 3 201 1 104 1 16 1 158 1 65 6 247 1 249 2 110 1 251 1 348 1 182 1 273 1 113 1 20 4 50 1 299 1 274 2 115 1 301 1 236 1 258 2 257 1 276 2 118 1 
330 2 93 1 94 1 25 1 239 1 98 2 310 3 357 1 196 1 263 1 337 1 359 1 37 3 222 1 153 1 78 1 227 1 245 1 84 2 348 1 272 1 234 1 299 2 22 1 141 2 256 1 303 2 352 1 
25 1 239 2 27 1 218 1 219 1 195 1 357 2 348 2 312 2 299 2 223 1 236 1 320 1 
312 1 223 1 299 1 239 4 207 1 53 1 292 1 208 1 195 1 219 1 352 1 348 4 357 4 
82 1 239 1 195 1 357 1 348 1 147 1 312 2 253 1 299 1 223 1 372 1 60 1 236 1 
336 1 312 1 223 1 239 1 56 1 373 1 352 1 73 1 348 1 357 1 
238 1 239 2 219 1 195 1 357 2 348 2 312 1 49 1 58 1 299 1 223 1 
238 1 239 4 207 1 109 1 208 1 219 1 195 2 357 5 348 5 169 1 312 2 299 3 223 2 53 1 327 1 352 1 
238 1 239 4 287 1 207 1 208 1 219 1 195 2 357 5 348 5 169 1 312 2 299 3 223 2 53 1 327 1 352 1 
260 2 239 1 110 1 195 1 251 1 357 1 348 1 182 1 312 1 299 1 21 1 223 1 274 1 155 1 115 1 236 1 258 2 352 1 
82 1 239 1 218 1 195 1 357 1 348 1 312 2 299 1 223 1 340 1 372 1 236 1 327 1 
184 1 274 1 92 1 369 1 295 1 
131 1 190 1 310 2 71 1 111 1 369 2 295 2 263 1 337 1 272 1 100 1 37 2 184 1 274 1 256 1 10 1 92 2 265 1 166 1 
244 1 184 1 260 1 186 1 133 1 258 1 92 1 251 1 295 1 
184 1 190 1 71 1 
220 1 51 1 191 1 317 1 
220 1 334 1 159 1 51 1 140 1 191 1 108 1 
334 1 112 1 45 1 
220 1 334 3 159 1 51 1 206 1 18 1 114 1 140 3 191 1 108 1 319 2 278 1 
220 1 334 2 371 1 221 1 159 1 51 1 140 2 191 1 108 1 
334 1 159 1 51 1 152 1 56 1 114 1 373 1 214 1 140 1 108 1 194 1 
334 1 159 1 51 1 114 1 140 1 191 1 108 1 
220 1 334 1 159 1 114 1 140 1 191 2 108 1 
159 2 191 1 108 2 86 1 334 2 51 1 114 1 140 2 91 1 341 1 
159 1 132 1 191 1 108 1 193 1 194 1 220 1 334 3 371 2 51 2 114 1 140 3 325 1 
159 1 56 2 191 1 108 1 179 1 220 1 336 1 334 2 371 1 51 1 59 1 152 1 114 1 140 2 373 1 
159 2 132 1 28 1 191 1 108 2 194 1 220 1 334 4 221 1 371 2 51 2 114 1 140 4 
220 1 334 1 159 1 51 1 114 1 140 1 191 1 108 1 
120 1 159 1 132 1 206 1 191 2 108 1 194 1 220 2 334 4 371 2 51 3 140 4 319 1 278 1 
159 1 107 1 191 1 108 1 334 2 220 1 371 1 51 1 114 1 140 2 275 1 105 1 
220 1 334 3 159 1 51 1 206 1 114 1 140 3 191 1 108 1 315 1 319 2 278 2 
51 2 52 2 176 1 240 1 
334 1 159 1 114 1 140 1 108 1 47 1 
220 1 334 2 371 1 159 1 51 1 114 1 140 2 191 1 108 1 193 1 
70 1 
220 1 334 1 159 1 51 1 114 1 140 1 191 1 108 1 
159 1 108 1 191 1 193 1 334 3 220 1 371 1 51 1 114 1 140 3 319 1 
120 1 132 1 51 1 194 1 
51 1 191 1 

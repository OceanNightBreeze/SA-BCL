#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (207,284) (66,88) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (207,284) (66,88) (66,88) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (207,284) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (207,284) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (207,284) (66,88) (66,88) 80 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
338 2 147 1 74 1 259 2 7 5 346 1 154 1 12 1 177 1 179 2 238 2 132 1 298 1 245 2 301 3 375 1 206 1 248 1 250 1 22 2 86 1 165 9 254 1 140 2 335 9 336 1 146 6 189 4 
338 2 147 1 74 1 259 2 7 5 346 1 154 1 12 1 177 1 179 2 238 2 132 1 298 1 245 2 301 3 375 1 206 1 248 1 250 1 22 2 86 1 165 9 254 1 140 2 335 9 336 1 146 6 189 4 
338 2 147 1 74 1 259 2 7 6 346 1 154 1 12 1 177 1 179 2 238 2 132 1 298 1 245 2 301 4 375 1 206 1 248 1 250 1 22 2 86 1 165 10 254 1 140 2 335 10 336 1 146 7 189 5 
338 2 147 1 74 1 259 2 7 4 346 1 154 1 12 1 177 1 179 2 238 2 132 1 298 1 245 1 301 2 375 1 206 1 248 1 250 1 22 2 86 1 165 7 140 2 335 7 336 1 146 4 189 3 
298 1 245 2 301 1 259 1 7 3 248 1 22 1 165 4 154 1 254 1 140 1 177 1 179 1 335 4 238 1 336 1 146 3 189 2 
338 1 298 1 74 1 259 1 270 1 7 1 8 1 248 1 346 1 22 1 353 1 165 2 154 1 140 1 179 1 335 2 
338 1 298 1 301 1 7 2 248 1 165 3 154 1 140 2 12 1 179 2 335 3 146 1 189 1 
338 1 123 1 259 1 7 5 154 1 12 1 177 1 179 2 238 1 327 1 298 1 245 2 301 3 375 1 206 1 248 1 22 1 165 9 140 2 254 1 335 9 336 1 146 7 189 4 
338 1 123 1 259 1 7 5 154 1 12 1 177 1 179 2 238 1 327 1 298 1 245 2 301 3 375 1 206 1 248 1 22 1 165 9 140 2 254 1 335 9 336 1 146 7 189 4 
339 1 167 1 251 1 
203 1 58 2 167 1 
101 2 93 2 312 2 106 2 54 2 160 2 208 1 232 1 
1 1 358 1 93 3 50 2 360 1 236 1 152 1 54 2 125 1 289 1 101 3 178 1 347 1 367 1 131 1 160 2 371 2 200 1 16 1 265 1 268 1 106 2 305 1 225 2 109 1 352 1 208 1 42 1 329 2 43 1 312 2 276 1 142 2 277 1 213 1 118 1 232 1 
101 1 93 1 312 1 106 1 284 1 54 1 160 1 232 1 66 1 
263 1 93 1 281 1 95 1 126 1 172 1 251 1 99 1 101 1 310 1 78 1 380 1 160 1 167 1 
93 1 281 1 95 1 106 1 54 1 126 1 172 1 251 1 99 1 101 1 310 2 312 1 380 2 160 1 167 1 
195 1 341 1 310 1 380 1 25 1 
275 1 195 1 310 2 380 2 25 1 350 1 167 1 251 1 
310 1 380 1 25 1 
93 1 106 1 284 1 54 1 66 1 101 1 195 1 310 1 312 1 380 1 88 1 160 1 232 1 
167 1 
195 1 310 2 380 2 25 1 350 1 167 1 181 1 251 1 
162 2 300 1 108 1 150 1 350 1 28 1 365 1 251 1 195 2 176 1 310 5 380 5 25 2 36 2 231 1 81 2 117 1 167 1 61 1 
339 1 208 1 
93 2 359 1 148 1 106 1 54 1 208 2 101 2 312 1 160 2 
134 1 121 1 210 1 
265 1 93 1 358 1 268 1 236 1 225 1 109 1 352 1 208 1 20 1 329 1 101 1 142 1 131 1 277 1 213 1 
265 1 358 1 93 2 268 1 106 1 236 1 285 1 192 1 54 1 225 1 109 1 352 1 329 1 101 2 210 1 142 1 131 1 277 1 213 1 160 1 
101 3 93 3 312 1 106 3 192 1 54 3 160 3 208 1 
101 1 93 1 106 1 284 1 54 1 160 1 
101 1 93 1 359 1 312 1 148 1 106 1 54 1 160 1 172 1 
1 1 358 1 93 4 50 2 281 1 95 1 148 1 236 1 152 1 54 3 192 1 285 1 125 1 126 1 172 1 289 1 99 1 101 4 178 1 347 1 131 1 160 3 371 1 200 1 16 1 265 1 268 1 106 3 225 1 109 1 352 1 208 1 42 1 329 1 310 1 312 2 380 1 142 1 114 1 277 1 213 1 118 1 232 1 233 1 
263 1 101 2 93 2 252 1 106 1 54 1 192 1 160 2 208 1 
93 3 281 1 95 1 148 1 106 3 285 1 192 2 54 3 126 1 172 1 99 1 101 3 310 1 312 1 380 1 160 3 167 1 198 1 233 1 
93 2 121 1 148 1 106 2 192 1 54 2 101 2 312 1 210 1 160 2 
265 1 93 1 358 1 268 1 236 1 225 1 109 1 352 1 208 1 329 1 101 1 142 1 131 1 277 1 213 1 
265 1 93 1 358 1 268 1 236 1 225 1 109 1 207 1 352 1 208 1 329 1 172 1 55 1 101 1 230 1 142 1 277 1 
1 1 50 2 360 2 121 2 152 1 178 1 348 1 239 1 371 4 372 1 161 1 16 1 182 1 200 2 134 2 63 1 376 1 42 1 139 1 24 1 210 2 89 1 118 1 337 1 
101 1 93 1 281 1 106 1 54 1 328 1 160 1 172 1 
263 1 93 5 318 1 148 1 106 4 192 2 54 4 285 1 208 1 101 5 252 1 312 1 47 1 160 5 
101 1 93 1 106 1 284 1 54 1 160 1 
39 1 255 1 
39 1 255 1 
224 1 226 1 
224 1 226 1 
224 1 226 1 
0 1 39 1 255 1 
39 1 255 1 191 1 
39 2 224 1 255 2 151 1 364 1 226 1 
0 1 39 1 255 1 
0 1 39 1 255 1 
39 1 255 1 85 1 
39 1 255 1 85 1 
39 1 255 1 85 1 
39 2 190 2 267 1 205 1 235 1 149 1 151 1 377 2 288 2 76 2 11 1 174 1 310 2 255 2 380 2 145 1 167 1 15 3 38 2 
93 2 190 1 3 1 191 1 54 2 288 1 76 1 101 2 156 1 160 2 59 1 15 1 39 1 267 1 106 2 208 1 377 1 310 1 253 1 45 1 255 1 380 1 211 1 26 1 
22 1 259 1 238 1 
22 1 353 1 259 1 
22 3 379 1 353 1 221 1 158 1 238 2 
22 2 379 1 353 1 221 1 5 1 238 1 
22 2 379 1 353 1 221 2 238 1 
94 2 291 2 195 4 56 1 156 1 36 1 81 1 58 3 13 1 103 1 199 2 349 1 161 1 162 1 203 1 300 2 108 3 304 1 350 1 376 1 251 1 354 1 253 1 45 1 310 5 380 5 212 1 89 1 25 1 231 1 167 2 337 1 
341 5 120 1 218 1 291 6 195 7 176 1 293 1 156 4 36 2 81 2 58 9 13 2 199 6 349 3 161 3 162 2 299 1 203 3 300 6 108 8 304 1 350 1 376 3 247 5 64 1 65 1 251 1 354 2 310 9 380 9 89 3 25 6 231 1 167 5 337 3 
94 1 291 2 195 2 176 1 56 1 156 1 36 1 81 1 13 1 58 4 103 1 349 1 199 2 161 1 162 1 203 2 300 2 108 3 376 1 251 1 354 1 310 3 380 3 89 1 167 3 337 1 
94 2 120 1 291 4 195 3 176 1 293 1 56 1 156 2 36 1 81 1 58 7 13 1 103 1 199 4 349 2 161 2 162 1 299 1 203 3 300 4 108 5 376 2 251 1 354 1 310 4 380 4 89 2 167 4 337 2 
265 1 339 1 91 1 
265 1 209 1 
272 1 
265 1 277 1 
265 3 358 1 277 1 363 1 97 1 91 2 
265 1 358 1 277 1 
265 1 351 1 
200 3 161 1 51 2 360 2 302 1 185 1 135 1 75 1 24 3 256 1 316 1 102 1 371 5 326 1 372 4 337 1 72 1 
161 1 200 4 51 2 360 2 302 1 185 1 135 1 75 1 24 3 256 1 316 1 102 1 326 1 371 6 372 4 337 1 72 1 
200 3 161 1 51 2 360 2 342 1 302 1 185 1 135 1 75 1 24 3 256 1 316 1 102 1 371 5 326 1 372 4 337 1 72 1 
1 1 50 2 51 3 360 18 96 1 124 4 75 1 178 1 369 1 80 1 370 1 102 5 326 3 371 40 372 14 349 3 16 1 200 22 161 6 201 1 41 3 183 1 302 1 107 1 185 3 135 1 376 3 42 1 24 9 89 3 316 2 256 2 381 1 72 2 337 6 
1 2 50 4 51 2 360 3 75 1 178 2 102 1 371 8 326 1 372 5 161 1 16 2 200 5 82 1 107 1 185 1 135 1 273 1 42 2 24 4 316 1 256 1 337 1 72 1 
338 1 259 1 236 1 7 1 260 1 77 1 154 1 179 1 57 1 158 1 238 1 298 1 202 1 269 1 225 1 109 1 306 1 329 1 248 1 23 1 22 2 353 1 165 2 140 1 141 1 143 1 142 1 313 1 335 2 146 1 
338 1 122 1 259 1 236 1 7 1 260 1 77 1 154 1 35 1 179 1 158 1 238 1 202 1 269 1 225 1 109 1 329 1 248 1 23 1 22 2 353 1 165 3 140 1 141 1 143 1 142 1 313 1 335 3 146 2 49 1 
338 1 122 1 236 1 259 1 7 1 260 1 77 1 154 1 158 1 238 1 225 1 109 1 329 1 248 1 23 1 22 2 353 1 165 2 141 1 143 1 142 1 313 1 335 2 146 2 49 1 
338 2 265 1 217 1 242 1 236 1 225 1 109 1 352 1 260 2 329 1 23 2 165 1 35 1 140 1 128 1 311 1 143 2 179 1 142 1 277 1 335 1 37 1 60 1 
338 1 122 1 259 1 236 1 260 1 77 1 179 1 57 1 158 1 238 1 298 1 202 1 269 1 225 1 109 1 329 1 23 1 22 2 353 1 165 1 140 1 141 1 143 1 142 1 313 1 335 1 
220 1 
92 1 93 1 281 1 95 1 236 1 344 1 286 2 99 1 101 1 160 1 58 2 13 1 14 1 297 4 105 2 162 1 242 1 203 2 300 2 108 2 350 3 109 1 352 2 251 1 67 1 310 5 25 6 314 1 167 2 32 1 126 1 172 1 78 1 130 1 323 2 36 1 262 1 81 1 222 1 37 1 133 1 263 1 265 1 83 2 225 2 271 2 138 2 329 2 378 2 330 1 380 5 142 2 277 1 231 1 90 1 
93 1 281 1 95 1 126 1 172 1 99 1 101 1 78 1 130 1 160 1 181 1 263 1 297 2 350 1 378 1 67 1 330 1 310 3 380 3 25 2 314 1 90 1 
93 1 281 1 95 1 126 1 172 1 99 1 101 1 78 1 130 1 323 1 160 1 181 1 263 1 297 3 350 1 251 1 67 1 330 1 310 3 380 3 25 1 314 1 90 1 167 1 
93 1 281 1 95 1 126 1 172 1 99 1 101 1 78 1 130 1 323 1 160 1 181 1 263 1 297 3 350 1 271 1 378 1 251 1 67 1 330 1 310 3 380 3 25 2 314 1 90 1 167 1 
93 1 281 1 95 1 286 2 10 1 99 1 100 1 101 1 160 1 14 1 297 6 105 2 162 1 300 1 203 2 108 1 350 3 251 5 67 1 355 1 310 5 25 7 314 1 167 5 126 1 172 1 78 1 130 1 323 4 36 1 81 1 262 1 181 1 263 1 83 2 271 4 138 2 378 4 227 1 330 1 380 5 279 1 231 1 90 1 
93 1 281 1 95 1 344 1 286 2 99 1 101 1 160 1 58 2 14 1 297 4 105 2 162 1 300 1 203 2 108 1 350 2 251 1 67 1 310 4 25 4 314 1 167 2 126 1 172 1 78 1 130 1 36 1 323 2 81 1 262 1 263 1 83 2 271 2 138 2 378 2 330 1 380 4 231 1 90 1 
93 1 281 1 95 1 286 2 126 1 172 1 100 1 99 1 101 1 78 1 130 1 323 2 36 1 262 1 81 1 160 1 14 1 263 1 297 4 105 2 162 1 203 2 300 1 83 2 108 1 350 2 271 2 138 2 378 2 251 1 227 1 67 1 330 1 310 4 380 4 25 4 314 1 279 1 231 1 167 1 90 1 
93 1 281 1 95 1 286 2 126 1 172 1 100 1 99 1 101 1 78 1 130 1 323 2 36 1 262 1 81 1 160 1 14 1 263 1 297 4 105 2 162 1 203 2 300 1 83 2 108 1 350 2 271 2 138 2 378 2 251 1 227 1 67 1 330 1 310 4 380 4 25 4 314 1 279 1 231 1 167 1 90 1 
93 1 281 1 95 1 320 1 126 1 172 1 100 1 99 1 101 1 175 1 78 1 130 1 323 2 36 1 262 1 81 1 160 1 58 2 263 1 297 4 105 2 162 1 244 2 300 1 83 2 108 1 184 2 350 2 271 2 378 2 251 1 67 1 68 1 330 1 310 4 380 4 25 4 314 1 231 1 167 1 90 1 
93 1 281 1 95 1 286 2 126 1 172 1 100 1 99 1 101 1 78 1 130 1 36 1 323 3 262 1 81 1 160 1 14 1 263 1 297 5 105 2 162 1 203 2 300 1 83 2 108 1 350 2 271 3 138 2 378 3 251 1 227 1 67 1 355 1 330 1 310 4 380 4 25 5 314 1 279 1 231 1 167 1 90 1 
93 1 281 1 95 1 286 2 126 1 172 1 100 1 99 1 101 1 78 1 130 1 36 1 323 3 262 1 81 1 160 1 14 1 263 1 297 5 105 2 162 1 203 2 300 1 83 2 108 1 350 2 271 3 138 2 378 3 251 1 227 1 67 1 355 1 330 1 310 4 380 4 25 5 314 1 279 1 231 1 167 1 90 1 
93 1 281 1 95 1 344 1 126 1 172 1 99 1 101 1 175 1 78 1 130 1 323 2 36 1 262 1 81 1 160 1 58 2 263 1 297 4 105 2 162 1 244 2 300 1 83 2 108 1 184 2 350 2 271 2 378 2 251 1 67 1 330 1 310 4 380 4 25 4 314 1 231 1 167 1 90 1 
339 1 1 1 50 2 51 1 121 1 360 2 152 1 75 1 178 1 326 1 371 5 372 2 16 1 182 1 161 1 200 3 134 1 185 1 135 1 208 1 42 1 24 2 210 1 118 1 72 1 337 1 
1 2 50 4 360 10 121 4 96 1 124 4 152 1 125 1 290 1 178 2 368 1 370 2 102 1 371 17 372 2 349 3 200 7 16 2 161 3 134 13 41 3 376 3 208 1 42 2 228 1 332 1 331 1 24 1 276 1 210 13 89 1 118 2 337 1 
358 1 93 2 1 1 50 2 282 1 121 1 360 1 236 1 362 1 152 1 54 1 192 1 285 1 125 1 101 2 178 1 131 1 160 1 371 2 265 1 16 1 200 1 268 1 106 1 225 1 109 1 352 1 208 1 329 1 20 1 42 1 228 1 164 1 142 1 276 1 277 1 213 1 118 1 
1 3 93 3 51 1 50 6 236 2 285 1 192 1 54 1 152 3 289 2 101 3 196 2 102 4 160 1 349 2 200 10 16 3 161 3 204 1 106 1 109 2 352 1 208 1 309 2 24 4 210 7 213 2 118 3 119 1 72 1 358 2 122 1 121 7 360 9 75 1 125 1 178 3 131 2 326 1 371 19 372 8 265 2 134 7 268 2 185 1 135 1 225 3 376 2 137 1 329 3 42 3 228 1 229 2 276 1 142 3 89 2 277 2 337 3 188 2 
234 1 93 1 1 2 50 4 122 1 360 1 236 2 54 1 192 1 152 2 194 1 125 1 101 1 178 2 157 1 160 1 197 1 371 2 37 1 182 1 265 3 16 2 200 1 40 1 242 1 18 1 106 1 374 1 305 2 225 7 109 2 352 2 306 1 329 8 42 2 142 8 276 1 277 2 118 2 
1 1 93 1 50 2 121 1 360 1 148 1 152 1 54 1 101 1 178 1 160 1 371 3 372 1 349 1 16 1 161 1 200 2 134 1 106 1 376 1 42 1 228 1 24 1 312 1 210 1 89 1 334 1 118 1 337 1 
182 1 16 1 161 1 134 1 1 1 50 2 121 1 360 2 152 1 376 1 42 1 178 1 210 1 102 1 239 1 371 2 118 1 372 1 
182 1 16 1 200 2 134 1 1 1 50 2 121 1 63 1 152 1 42 1 178 1 24 1 210 1 89 1 371 2 118 1 372 1 337 1 
1 1 50 2 360 2 121 2 152 1 178 1 102 1 371 4 372 2 349 1 161 1 16 1 182 1 200 2 134 2 376 1 42 1 24 1 210 2 89 1 118 1 337 1 
16 1 161 1 134 1 1 1 50 2 121 1 360 2 152 1 376 1 194 1 42 1 178 1 210 1 102 1 239 1 371 2 118 1 372 1 
16 1 200 2 134 1 1 1 50 2 121 1 63 1 152 1 194 1 42 1 178 1 24 1 210 1 89 1 371 2 118 1 372 1 337 1 
1 1 50 2 360 2 121 2 152 1 194 1 178 1 102 1 371 4 372 2 349 1 161 1 16 1 200 2 134 2 376 1 42 1 24 1 210 2 89 1 118 1 337 1 
1 1 50 2 360 2 121 2 152 1 178 1 102 1 371 4 372 2 349 1 161 1 16 1 200 2 134 2 376 1 42 1 24 1 210 2 89 1 118 1 337 1 
358 1 93 1 1 1 50 2 360 1 236 1 152 1 125 1 289 1 101 1 178 1 131 1 371 2 265 1 16 1 200 1 268 1 225 1 109 1 352 1 208 1 329 1 42 1 276 1 142 1 277 1 213 1 118 1 
358 1 93 1 1 1 50 2 236 1 152 1 125 1 172 1 55 1 101 1 178 1 371 1 265 1 16 1 200 1 268 1 225 1 109 1 207 1 352 1 208 1 329 1 42 1 230 1 142 1 277 1 118 1 258 1 
1 1 50 2 360 2 121 2 152 1 178 1 102 1 371 4 372 2 349 1 161 1 16 1 200 2 134 2 376 1 42 1 228 1 24 1 210 2 89 1 118 1 337 1 
358 1 93 1 1 1 50 2 121 2 360 2 236 1 152 1 289 1 101 1 178 1 131 1 102 1 371 4 372 2 349 1 200 2 161 1 265 1 16 1 134 2 268 1 225 1 376 1 109 1 306 1 329 1 42 1 229 1 24 1 210 2 142 1 89 1 277 1 213 1 118 1 337 1 
1 1 93 1 50 2 360 2 121 1 148 1 319 1 152 1 54 1 101 1 178 1 102 1 160 1 371 3 372 1 349 1 200 1 16 1 161 1 134 1 106 1 376 1 42 1 228 1 312 1 210 1 89 1 118 1 337 1 
215 1 216 1 1 2 50 4 52 1 360 9 96 1 124 2 30 1 178 2 370 1 102 2 180 2 371 17 372 4 349 3 16 2 200 8 161 3 41 1 246 1 376 3 273 1 42 2 308 2 44 1 24 2 89 2 48 1 337 2 
215 1 216 2 1 3 50 6 52 1 360 14 96 2 124 2 30 1 31 1 153 1 178 3 102 2 180 4 371 26 372 4 349 3 200 12 16 3 161 3 41 2 107 2 246 2 186 1 376 3 273 1 42 3 21 1 308 1 24 2 89 2 357 1 337 2 317 1 
1 3 50 6 51 1 52 1 96 3 153 1 102 3 349 5 161 6 200 20 16 3 107 1 246 1 21 1 308 1 24 4 356 1 357 1 72 1 317 1 215 1 216 2 360 21 124 5 75 1 31 1 30 1 178 3 370 2 180 4 371 41 326 1 372 7 41 3 185 1 135 1 376 5 186 1 273 1 42 3 44 1 89 3 337 4 
215 1 216 2 1 4 51 1 50 8 52 1 360 21 96 3 124 5 75 1 31 1 30 1 153 1 178 4 370 2 102 2 180 4 326 1 371 43 372 8 349 5 16 4 200 22 161 6 41 3 107 2 185 1 246 1 135 1 186 1 376 5 273 1 21 1 42 4 308 1 44 1 24 6 89 4 356 1 357 1 72 1 337 5 317 1 
215 1 216 1 1 1 51 1 50 2 52 1 360 16 96 2 124 3 75 1 30 1 31 1 153 1 178 1 370 1 102 2 180 3 326 1 371 32 372 6 349 4 16 1 200 16 161 5 41 2 185 1 246 1 135 1 186 1 376 4 273 1 42 1 21 1 308 1 24 4 89 3 357 1 72 1 337 4 317 1 
39 1 190 1 255 1 205 1 151 1 171 1 145 1 377 1 288 1 76 1 
191 1 26 1 
241 1 27 1 39 1 190 1 255 1 377 1 287 1 288 1 76 1 
39 1 267 1 190 1 205 1 235 1 149 1 151 1 377 1 288 1 76 1 174 1 310 1 380 1 255 1 145 1 167 1 15 2 38 1 
39 1 267 1 190 1 205 1 235 1 149 1 151 1 377 1 288 1 76 1 174 1 310 1 380 1 255 1 145 1 167 1 15 2 38 1 
39 1 267 1 190 1 205 1 235 1 149 1 151 1 377 1 288 1 76 1 174 1 310 1 380 1 255 1 145 1 167 1 15 2 38 1 
0 1 315 1 364 1 
0 1 315 1 364 1 
237 1 85 1 
237 1 364 1 85 1 
3 1 59 1 
93 2 190 1 3 1 191 1 54 2 288 1 76 1 101 2 174 1 195 1 156 1 160 2 59 1 38 1 15 1 39 1 106 2 208 1 377 1 187 1 310 1 253 1 45 1 380 1 255 1 211 1 26 1 
0 1 315 1 
237 1 364 1 85 1 
93 2 1 1 50 2 360 1 236 1 152 1 125 1 101 2 178 1 366 1 157 1 160 2 371 2 104 1 265 1 17 1 16 1 200 1 40 1 305 2 225 2 109 1 329 2 42 1 228 1 87 1 142 2 276 1 277 1 257 1 118 1 
122 1 243 1 303 1 269 1 259 1 236 1 225 2 109 1 306 1 329 2 22 2 77 1 353 1 322 1 142 2 143 1 158 1 313 1 238 1 
169 1 122 1 269 1 259 1 236 1 225 1 109 1 329 1 22 2 77 1 353 1 322 1 142 1 143 1 158 1 313 1 238 1 
265 1 73 1 217 1 242 1 303 1 236 1 225 1 109 1 352 1 329 1 142 1 143 1 277 1 37 1 
122 1 243 1 303 1 269 1 259 1 236 1 225 1 109 1 329 1 22 2 77 1 353 1 322 1 142 1 143 1 158 1 313 1 238 1 
168 1 
339 1 300 1 108 1 365 1 167 1 251 1 61 1 
286 1 36 1 81 1 58 1 14 1 162 1 203 1 300 1 108 1 350 1 138 1 251 1 310 1 380 1 25 1 231 1 167 2 
236 3 97 1 193 2 98 1 9 1 291 6 292 2 155 2 13 2 58 12 61 1 199 6 349 2 62 2 161 2 162 4 203 6 300 8 108 9 19 1 351 2 350 3 109 4 352 1 306 1 163 2 251 2 309 2 209 3 310 5 25 5 166 1 167 8 358 3 219 2 365 1 126 2 261 2 36 4 81 4 133 1 265 10 225 3 376 2 329 3 142 3 380 5 333 2 89 2 278 1 277 3 231 4 91 2 337 2 
96 1 124 1 29 1 193 1 31 1 291 5 153 1 36 2 324 1 81 2 13 1 58 6 133 1 199 5 349 2 161 2 162 2 41 1 203 3 300 5 108 8 350 1 186 1 376 2 21 1 251 2 310 1 380 1 25 1 333 2 89 2 357 1 231 2 167 5 337 2 
93 1 284 1 54 1 101 1 36 1 80 1 81 1 160 1 326 1 161 1 162 1 300 1 108 2 106 1 185 1 66 1 227 1 310 1 312 1 380 1 333 2 88 1 231 1 232 1 72 1 337 1 
162 1 300 1 108 1 365 1 251 1 36 1 231 1 81 1 167 1 61 1 
349 2 199 5 161 2 300 5 203 5 108 5 376 2 193 1 291 5 309 1 333 2 89 2 58 10 167 5 337 2 
310 1 380 1 25 1 350 1 167 1 251 1 
4 1 236 1 32 1 98 1 176 1 79 1 36 2 222 1 81 2 13 2 37 1 133 2 265 1 162 2 242 1 300 2 108 2 19 2 225 4 350 2 109 1 352 2 329 4 310 3 142 4 380 3 25 4 277 1 231 1 
1 1 93 3 358 1 50 2 236 1 54 2 152 1 125 1 289 1 101 3 347 1 178 1 131 1 160 2 371 1 200 1 16 1 265 1 268 1 106 2 225 1 109 1 352 1 208 1 42 1 329 1 312 2 142 1 277 1 213 1 232 1 118 1 
51 1 291 2 36 1 81 1 13 1 58 4 133 1 199 2 162 1 300 1 203 2 108 2 251 1 333 1 231 1 167 3 
129 1 377 1 76 1 
340 1 3 1 205 1 377 1 76 1 
129 1 377 1 76 1 
129 1 377 1 76 1 
382 1 377 1 76 1 
382 1 377 1 76 1 
382 1 377 1 76 1 
377 1 76 1 
39 1 255 1 
161 1 200 4 16 2 1 2 51 1 50 4 360 3 107 1 185 1 135 1 75 1 42 2 178 2 24 2 102 1 371 7 326 1 372 3 337 1 72 1 
200 3 339 1 161 1 51 1 360 2 185 1 135 1 75 1 24 2 326 1 371 5 372 2 72 1 337 1 
349 1 200 2 16 1 161 1 1 1 50 2 360 2 376 1 345 1 42 1 178 1 24 1 89 1 102 1 371 4 372 2 337 1 
349 1 200 4 161 1 41 1 360 3 96 1 124 2 376 1 24 1 89 1 370 1 371 7 372 1 337 1 
1 2 51 1 50 4 2 1 360 10 124 2 75 1 178 2 368 1 370 1 102 4 326 2 371 22 372 9 349 2 161 3 200 12 16 2 41 2 107 2 185 2 135 1 376 2 42 2 332 1 24 5 89 2 72 1 337 3 
200 1 124 1 371 1 
360 1 41 1 371 1 
349 1 16 1 200 3 161 1 1 1 50 2 360 3 376 1 345 1 42 1 309 1 178 1 24 2 89 1 102 1 371 6 372 3 337 1 
1 1 50 2 360 6 96 1 124 1 31 1 153 1 178 1 102 1 371 12 372 2 349 2 200 6 16 1 161 2 41 1 376 2 186 1 273 1 21 1 42 1 24 1 89 2 357 1 337 2 
161 1 200 3 360 3 185 1 24 1 102 1 371 6 326 1 372 2 72 1 337 1 
200 2 16 1 1 1 2 1 50 2 360 1 107 1 185 1 135 1 75 1 42 1 178 1 24 1 102 1 326 1 371 3 372 2 
16 1 200 5 161 2 1 1 50 2 360 5 185 2 273 1 42 1 178 1 24 3 80 1 102 2 326 2 371 10 372 5 72 1 337 2 
16 1 161 1 1 1 50 2 360 2 376 1 273 1 42 1 178 1 102 1 371 2 372 1 
349 1 200 2 16 1 161 1 1 1 50 2 360 2 376 1 273 1 42 1 178 1 24 1 89 1 102 1 371 4 372 2 337 1 
200 2 16 3 1 3 2 1 50 6 360 1 107 1 185 1 273 1 42 3 44 1 178 3 24 1 102 1 371 3 326 1 372 2 
1 5 51 1 2 1 50 10 360 15 96 1 124 4 75 1 345 1 178 5 369 1 370 1 102 4 326 3 371 31 372 10 349 3 200 16 16 5 161 5 183 1 41 3 107 2 185 3 135 1 376 3 273 1 42 5 44 1 24 6 89 2 381 1 72 2 337 4 
1 1 51 1 50 2 360 5 96 1 124 2 75 1 178 1 370 1 326 1 371 10 372 2 349 1 200 5 16 1 161 2 41 1 185 1 135 1 376 1 273 1 21 1 42 1 24 2 337 1 72 1 
1 2 51 1 50 4 360 3 96 1 124 1 75 1 345 1 178 2 371 7 326 1 372 2 161 1 200 4 16 2 41 1 185 1 135 1 273 1 21 1 42 2 24 2 337 1 72 1 
1 3 51 1 50 6 360 8 96 1 124 1 75 1 345 1 31 1 153 1 178 3 102 1 326 1 371 18 372 4 349 2 200 10 16 3 161 3 41 1 107 1 185 1 135 1 376 2 186 1 273 1 21 1 42 3 24 3 89 2 357 1 72 1 337 3 
1 3 51 1 50 6 360 9 96 1 124 1 75 1 345 1 31 1 153 1 178 3 102 2 326 1 371 16 372 5 349 2 200 7 16 3 161 3 41 1 107 1 185 1 135 1 376 2 186 1 273 1 21 1 42 3 24 3 89 1 357 1 72 1 337 2 
1 1 51 1 50 2 360 5 96 1 124 2 75 1 178 1 370 1 326 1 371 10 372 2 349 1 200 5 16 1 161 2 41 1 185 1 135 1 376 1 273 1 21 1 42 1 24 2 337 1 72 1 
1 1 50 2 360 6 96 1 124 1 31 1 153 1 178 1 102 1 371 12 372 2 349 2 200 6 16 1 161 2 41 1 376 2 186 1 273 1 21 1 42 1 24 1 89 2 357 1 337 2 
1 4 51 1 50 8 360 9 96 1 124 1 75 1 345 1 31 1 153 1 178 4 102 2 326 1 371 17 372 5 349 2 200 8 16 4 161 3 41 1 107 2 185 1 135 1 186 1 376 2 273 1 21 1 42 4 24 3 89 1 357 1 72 1 337 2 
1 4 50 8 360 9 96 1 124 1 31 1 153 1 178 4 102 3 371 16 372 6 349 3 200 7 16 4 161 3 41 1 107 2 186 1 376 3 273 1 21 1 42 4 44 1 24 3 89 2 357 1 337 2 
200 4 161 1 360 3 185 3 135 2 75 1 24 3 102 3 371 7 326 3 372 6 337 1 72 1 
1 4 51 1 50 8 360 9 96 1 124 1 75 1 31 1 153 1 178 4 102 1 326 1 371 17 372 4 349 2 200 8 16 4 161 3 41 1 107 2 185 1 135 1 186 1 376 2 273 1 21 1 42 4 44 1 24 3 89 1 357 1 72 1 337 2 
263 1 101 1 93 1 252 1 160 1 325 1 208 1 
263 1 373 1 93 1 170 1 84 1 208 1 110 1 101 1 252 1 295 1 325 1 160 1 
265 1 339 1 242 1 142 1 236 1 277 1 225 1 109 1 352 1 37 1 329 1 
265 1 358 1 93 2 268 1 106 1 236 1 192 1 54 1 225 1 109 1 352 1 208 1 329 1 101 2 142 1 277 1 213 1 160 1 
265 3 358 2 93 2 281 1 95 1 268 1 106 1 19 1 236 1 351 1 192 1 54 2 225 1 109 1 208 1 329 1 172 1 101 2 261 1 142 1 277 2 213 1 160 2 
93 2 358 2 281 1 95 1 236 1 54 2 192 1 172 2 55 1 101 2 261 1 160 2 265 3 268 1 106 1 19 1 225 1 351 1 109 1 207 1 208 1 329 1 142 1 277 2 
280 1 265 4 358 1 19 1 236 1 351 1 225 3 109 1 352 1 126 1 329 3 251 1 113 1 127 1 209 1 310 2 261 1 380 2 142 3 25 1 277 1 167 1 91 1 
265 4 358 1 19 1 219 1 236 1 351 1 225 3 109 1 352 1 126 1 329 3 251 1 113 1 209 1 310 2 261 1 380 2 142 3 25 1 277 1 167 1 91 1 
234 1 142 1 236 1 225 1 109 1 329 1 
265 3 234 1 358 1 266 1 122 1 18 1 374 1 305 1 236 2 225 6 97 1 109 3 352 2 306 1 307 1 329 7 173 1 142 7 157 1 277 2 197 1 
1 2 93 2 50 4 51 1 236 1 192 1 54 1 152 2 289 1 101 2 160 1 16 2 161 1 200 3 106 1 109 1 306 1 208 1 24 2 210 1 213 1 257 1 118 2 72 1 358 1 121 1 360 2 75 1 178 2 131 1 326 1 371 5 372 2 265 1 134 1 268 1 185 1 225 1 135 1 329 1 42 2 228 1 229 1 142 1 277 1 188 1 337 1 
219 1 365 1 98 1 126 1 195 1 292 1 155 1 36 2 81 2 61 1 265 2 162 2 300 1 108 1 225 1 350 1 352 1 329 1 163 1 251 1 209 1 310 3 380 3 142 1 25 2 231 2 167 1 91 1 
265 2 234 1 358 1 236 1 225 2 97 1 109 2 306 1 329 2 9 1 142 2 277 1 91 1 
265 1 242 1 236 1 225 4 109 1 352 1 306 1 329 4 113 1 142 4 277 1 214 1 37 1 
265 1 358 1 266 1 19 1 236 1 225 2 109 2 307 1 329 2 142 2 277 1 70 1 119 1 240 1 
22 1 353 1 142 1 259 1 236 1 313 1 225 1 109 1 352 1 329 1 
104 1 265 1 122 1 142 2 236 1 277 1 157 1 225 2 109 1 306 1 329 2 
265 3 242 1 18 1 374 1 19 1 236 2 225 4 109 2 352 1 306 1 329 5 142 5 157 1 277 2 214 1 37 1 
265 3 242 1 374 1 19 1 236 2 225 4 109 2 352 1 306 1 329 5 46 1 142 5 157 1 277 2 214 1 37 1 
265 1 358 1 93 2 268 1 106 1 236 1 192 1 54 1 225 1 109 1 207 1 352 1 208 1 329 1 172 1 55 1 101 2 142 1 277 1 160 1 
265 1 358 1 266 1 19 1 236 1 225 1 97 1 109 2 307 1 329 1 173 1 142 1 277 1 
101 1 17 1 93 1 87 1 366 1 69 1 160 1 296 1 223 1 
264 1 274 1 223 1 
69 1 208 1 112 1 296 1 223 1 
264 1 281 1 95 1 53 1 208 1 126 1 112 2 172 1 251 1 99 1 274 1 195 1 310 2 380 2 69 2 167 1 296 2 223 1 233 1 
339 1 154 1 7 1 248 1 
165 1 154 1 140 1 179 1 335 1 7 1 248 1 
338 1 23 1 335 1 
298 1 7 1 6 1 346 2 248 1 165 3 140 1 34 1 154 1 294 1 179 1 335 3 
165 2 154 1 140 1 245 1 179 1 335 2 7 1 146 1 248 1 
298 1 259 1 7 1 22 1 165 1 140 1 179 1 335 1 238 1 336 1 189 1 
165 1 154 1 140 1 298 1 179 1 335 1 7 1 
165 1 154 2 140 1 298 1 179 1 335 1 248 1 
298 1 361 1 7 1 321 1 33 1 165 2 154 1 140 2 179 2 335 2 
298 1 301 1 375 1 206 1 7 2 248 1 165 3 154 1 140 1 179 1 335 3 146 2 189 1 
298 1 259 1 136 1 7 1 248 1 22 2 353 1 165 2 154 1 140 1 179 1 158 1 335 2 238 1 146 1 
298 1 245 1 301 1 7 2 248 1 165 4 154 1 140 2 254 1 179 2 335 4 146 2 189 1 
165 1 154 1 140 1 298 1 179 1 335 1 7 1 248 1 
301 1 6 1 7 3 346 1 248 2 165 4 34 1 154 2 140 1 179 1 335 4 144 1 146 2 189 1 
298 1 123 1 7 1 249 1 248 1 165 2 154 1 140 1 179 1 335 2 116 1 146 1 
298 1 6 1 7 1 346 2 248 1 165 3 140 1 34 2 154 1 179 1 115 1 335 3 
283 2 343 1 159 1 7 2 
165 1 140 1 298 1 179 1 335 1 71 1 
165 2 154 1 140 1 298 1 179 1 206 1 335 2 7 1 146 1 248 1 
111 1 
165 1 154 1 140 1 298 1 179 1 335 1 7 1 248 1 
165 3 154 1 140 1 298 1 179 1 206 1 335 3 7 1 146 1 248 1 346 1 
301 1 144 1 7 1 189 1 
154 1 7 1 

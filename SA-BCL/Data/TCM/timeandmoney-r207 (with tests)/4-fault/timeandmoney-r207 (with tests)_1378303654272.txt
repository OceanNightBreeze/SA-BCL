#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 (87,114) (87,114) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 51 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 203 193 166 153 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 203 193 166 153 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 203 193 166 153 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 203 193 166 153 24 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 51 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 2 119 3 207 1 33 1 0 1 220 1 277 1 138 1 333 2 49 2 9 1 177 7 10 1 112 1 31 4 191 2 87 1 113 1 233 2 336 7 366 1 104 3 114 1 296 2 78 2 
207 1 0 1 277 1 138 1 333 2 9 1 49 3 112 1 10 1 191 2 31 6 113 2 366 1 336 9 114 1 78 2 341 2 119 4 33 1 220 1 287 1 123 1 177 9 87 1 233 2 104 5 154 1 296 2 
207 1 0 1 277 1 138 1 333 2 9 1 49 4 112 1 10 1 191 2 31 7 113 2 366 1 336 10 114 1 78 2 341 2 119 5 33 1 220 1 287 1 123 1 177 10 87 1 233 2 104 6 154 1 296 2 
207 1 0 1 277 1 138 1 333 2 9 1 49 2 112 1 10 1 191 2 31 4 113 1 366 1 336 7 114 1 78 2 341 2 119 3 33 1 220 1 287 1 177 7 87 1 233 2 104 4 154 1 296 2 
341 1 119 2 0 1 287 1 123 1 138 1 49 1 177 4 112 1 191 1 31 3 113 2 233 1 336 4 104 3 154 1 296 1 78 1 
341 1 342 1 33 1 220 1 287 1 47 1 333 1 72 1 177 2 112 1 191 1 233 1 336 2 104 1 154 1 296 1 
341 2 119 1 287 1 333 1 9 1 49 1 177 3 112 1 31 1 233 2 336 3 104 2 154 1 
207 1 0 1 138 1 333 1 49 3 9 1 112 1 10 1 31 7 191 1 113 2 336 9 78 1 341 2 119 4 344 1 287 1 123 1 173 1 177 9 233 2 104 5 154 1 296 1 
207 1 0 1 138 1 333 1 49 3 9 1 112 1 10 1 31 7 191 1 113 2 336 9 78 1 341 2 119 4 344 1 287 1 123 1 173 1 177 9 233 2 104 5 154 1 296 1 
158 1 278 1 51 1 
142 1 278 1 106 2 
311 2 257 2 71 1 214 2 379 1 245 2 188 2 352 2 
65 1 156 2 274 1 301 2 3 1 240 1 186 1 188 3 359 1 360 1 243 2 211 1 244 1 110 1 256 1 257 2 71 1 8 1 214 2 245 2 52 1 117 1 311 3 35 1 16 1 222 1 56 1 83 1 58 2 175 2 200 1 229 1 19 1 379 1 230 1 62 1 352 2 
311 1 228 1 167 1 257 1 71 1 214 1 245 1 188 1 352 1 297 1 
311 1 318 1 167 1 92 1 158 1 245 1 181 1 197 1 278 1 373 1 188 1 55 1 353 1 17 1 
311 1 167 1 158 1 197 1 278 1 188 1 373 1 17 1 318 2 257 1 214 1 245 1 181 1 352 1 353 2 
109 1 318 1 295 1 365 1 353 1 
109 1 318 2 158 1 295 1 278 1 215 1 64 1 353 2 
109 1 318 1 353 1 
311 1 167 1 185 1 188 1 228 1 318 1 71 1 257 1 214 1 295 1 245 1 352 1 297 1 353 1 
278 1 
109 1 318 2 158 1 295 1 278 1 64 1 227 1 353 2 
252 1 206 1 158 1 14 1 26 1 278 1 223 2 45 1 109 2 318 5 375 2 320 2 295 2 308 1 322 1 338 1 116 1 64 1 353 5 
379 1 51 1 
311 2 312 1 188 2 257 1 214 1 379 2 245 2 280 1 352 1 
148 1 100 1 330 1 
311 1 156 1 301 1 240 1 188 1 359 1 83 1 211 1 244 1 175 1 229 1 379 1 230 1 152 1 62 1 117 1 
311 2 156 1 300 1 301 1 370 1 240 1 188 2 359 1 211 1 83 1 148 1 244 1 175 1 257 1 229 1 230 1 245 1 62 1 352 1 117 1 
311 5 300 1 370 2 188 5 92 1 257 4 214 1 379 1 245 5 280 1 321 1 310 1 352 4 40 1 
311 2 167 1 257 2 245 2 182 1 188 2 352 2 297 1 
311 3 257 3 214 1 370 1 379 1 245 3 188 3 352 3 
311 1 167 1 257 1 245 1 188 1 352 1 297 1 
311 1 167 1 257 1 214 1 312 1 245 1 280 1 188 1 352 1 
65 1 156 1 183 1 300 1 301 1 3 1 240 1 186 1 188 4 359 1 360 1 243 1 211 1 244 1 163 1 256 1 257 3 71 1 214 2 280 1 245 3 52 1 117 1 311 4 167 1 370 1 197 1 222 1 16 1 373 1 17 1 56 1 83 1 58 2 318 1 175 1 200 1 229 1 379 1 230 1 181 1 62 1 352 3 353 1 
311 2 92 1 257 1 370 1 379 1 245 2 188 2 352 1 40 1 
311 3 300 1 183 1 167 1 370 2 197 1 278 1 188 3 373 1 17 1 318 1 264 1 257 3 214 1 280 1 245 3 181 1 352 3 353 1 
311 2 370 1 330 1 188 2 148 1 257 2 214 1 280 1 245 2 352 2 
311 1 156 1 301 1 240 1 188 1 359 1 83 1 211 1 244 1 175 1 229 1 379 1 230 1 62 1 117 1 
311 1 156 1 301 1 145 1 240 1 188 1 211 1 244 1 175 1 229 1 279 1 379 1 230 1 62 1 117 1 
65 1 274 2 325 1 3 1 186 1 276 1 328 1 330 2 360 1 46 1 243 4 27 1 52 1 100 2 79 1 262 1 171 1 124 1 122 1 56 1 148 2 58 2 200 2 85 1 
311 1 167 1 257 1 245 1 181 1 182 1 188 1 352 1 
91 1 201 1 
91 1 201 1 
237 1 132 1 
237 1 132 1 
237 1 132 1 
18 1 91 1 201 1 
91 1 201 1 260 1 
237 1 265 1 91 2 286 1 201 2 132 1 
18 1 91 1 201 1 
18 1 91 1 201 1 
91 1 201 1 261 1 
91 1 201 1 261 1 
91 1 201 1 261 1 
311 2 135 1 12 1 238 1 136 1 224 1 329 1 188 2 249 1 318 1 376 1 91 1 257 2 150 1 379 1 245 2 201 1 30 1 97 1 194 1 260 1 352 2 11 1 353 1 
23 1 135 2 12 2 354 1 239 1 136 2 286 1 278 1 329 1 6 1 318 2 164 1 91 2 201 2 30 3 75 2 194 2 105 1 353 2 
191 1 296 1 78 1 
47 1 191 1 296 1 
47 1 28 1 67 1 269 1 191 3 78 2 
47 1 28 1 67 1 268 1 191 2 78 1 
47 1 28 1 67 2 191 2 78 1 
303 1 158 1 1 1 278 2 189 1 242 1 109 1 97 1 142 1 338 2 116 1 217 2 284 1 196 2 146 2 79 1 262 1 347 1 14 3 223 1 224 1 122 1 124 1 125 1 318 5 376 1 375 1 320 1 295 4 106 3 64 1 353 5 
157 1 158 1 1 2 278 5 189 3 242 1 109 6 335 1 308 1 192 1 365 5 142 3 98 5 338 6 116 1 217 6 146 6 79 3 262 3 347 2 14 8 224 4 223 2 122 3 124 3 174 1 318 9 375 2 38 1 320 2 295 7 271 1 106 9 353 9 64 1 
158 1 1 1 278 3 189 1 308 1 142 2 338 2 217 2 284 1 196 1 146 2 79 1 262 1 347 1 14 3 223 1 224 1 122 1 124 1 125 1 318 3 375 1 320 1 295 2 353 3 106 4 
158 1 1 1 278 4 189 2 335 1 308 1 192 1 142 3 338 4 217 4 284 1 196 2 146 4 79 2 262 2 347 1 14 5 223 1 224 2 122 2 124 2 125 1 318 4 375 1 320 1 295 3 271 1 106 7 353 4 
244 1 51 1 314 1 
244 1 43 1 
48 1 
244 1 229 1 62 1 
244 1 178 1 
244 1 62 1 
244 3 229 1 314 2 62 1 248 1 292 1 
274 7 285 1 122 3 124 3 290 2 304 1 90 1 46 4 70 1 243 13 128 1 200 6 27 3 319 1 111 1 131 2 96 2 281 1 
274 7 285 1 122 3 124 3 290 2 304 1 90 3 46 6 70 1 243 13 128 1 200 6 27 3 319 1 111 1 131 2 96 2 281 1 
274 7 208 1 304 1 90 1 46 4 243 13 70 1 27 3 111 1 96 2 281 1 285 1 290 2 124 3 122 3 128 1 319 1 200 6 131 2 
65 1 274 18 2 1 186 1 189 2 304 2 162 1 90 6 46 11 360 1 243 34 70 2 27 5 111 2 96 2 281 1 193 1 52 1 339 1 285 1 79 2 346 1 15 3 262 2 290 3 124 5 122 5 128 1 58 2 319 1 200 16 131 3 203 3 155 1 
65 2 274 8 186 2 241 1 304 1 360 2 46 6 90 2 243 15 70 1 27 4 111 1 96 2 281 1 52 2 285 1 122 3 124 3 290 2 58 4 128 1 200 7 351 1 131 2 155 1 
156 1 301 1 159 1 240 1 137 1 211 1 47 1 333 1 363 1 112 1 31 1 191 2 336 2 78 1 341 1 169 1 287 1 147 1 348 1 293 1 175 1 267 1 177 2 269 1 151 1 233 1 104 1 154 1 296 1 250 1 
156 1 301 1 159 1 240 1 137 1 211 1 47 1 255 1 333 1 363 1 31 2 191 2 336 3 195 1 78 1 341 1 169 1 287 1 147 1 293 1 175 1 177 3 378 1 269 1 151 1 233 1 104 1 154 1 296 1 250 1 
156 1 301 1 240 1 211 1 47 1 333 1 363 1 31 2 191 2 336 2 195 1 78 1 169 1 287 1 147 1 293 1 175 1 177 2 378 1 269 1 151 1 104 1 154 1 250 1 296 1 
156 1 205 1 341 1 301 1 99 1 240 1 263 1 356 1 293 2 211 1 244 1 255 1 175 1 333 2 177 1 309 1 151 2 233 1 336 1 62 1 250 2 273 1 117 1 
156 1 301 1 159 1 240 1 137 1 211 1 47 1 333 1 363 1 112 1 191 2 336 1 195 1 78 1 341 1 169 1 147 1 348 1 293 1 175 1 177 1 269 1 151 1 233 1 296 1 250 1 
54 1 
88 1 184 1 326 1 1 1 240 1 278 2 188 1 44 2 244 1 92 1 245 1 142 2 338 2 144 2 14 2 197 1 55 1 17 1 294 1 101 1 62 1 251 2 106 2 64 3 353 5 156 2 205 1 301 2 158 1 68 2 25 4 109 6 211 1 361 1 212 1 213 2 29 1 74 2 116 1 216 1 76 1 117 2 311 1 167 1 221 1 223 1 82 2 263 1 373 1 316 1 318 5 175 2 375 1 320 1 181 1 
25 2 188 1 44 1 109 2 92 1 29 1 245 1 76 1 216 1 311 1 167 1 197 1 221 1 373 1 55 1 17 1 227 1 294 1 318 3 181 1 353 3 64 1 
158 1 25 3 278 1 188 1 109 1 92 1 29 1 245 1 76 1 216 1 311 1 167 1 197 1 221 1 373 1 55 1 17 1 227 1 294 1 318 3 181 1 353 3 251 1 64 1 
158 1 25 3 278 1 188 1 44 1 109 2 92 1 29 1 245 1 76 1 216 1 311 1 167 1 197 1 221 1 373 1 82 1 55 1 227 1 17 1 294 1 318 3 181 1 64 1 353 3 251 1 
278 5 188 1 332 1 44 4 5 1 92 1 245 1 142 2 338 1 144 2 197 1 14 1 55 1 17 1 294 1 101 1 353 5 64 3 251 4 158 5 68 2 25 6 109 7 212 1 213 2 29 1 74 2 216 1 76 1 116 1 311 1 167 1 80 1 221 1 223 1 82 4 373 1 227 1 126 1 318 5 375 1 320 1 181 1 380 1 
184 1 278 2 188 1 44 2 92 1 245 1 142 2 338 1 144 2 197 1 14 1 55 1 17 1 294 1 101 1 353 4 106 2 64 2 251 2 158 1 68 2 25 4 109 4 212 1 213 2 29 1 74 2 116 1 216 1 76 1 311 1 167 1 221 1 223 1 373 1 82 2 318 4 375 1 320 1 181 1 
158 1 68 2 25 4 278 1 188 1 44 2 5 1 109 4 212 1 213 2 92 1 29 1 245 1 74 2 142 2 338 1 76 1 216 1 116 1 311 1 144 2 167 1 14 1 197 1 221 1 223 1 82 2 373 1 55 1 17 1 126 1 294 1 318 4 375 1 101 1 320 1 181 1 380 1 251 2 64 2 353 4 
158 1 68 2 25 4 278 1 188 1 44 2 5 1 109 4 212 1 213 2 92 1 29 1 245 1 74 2 142 2 338 1 76 1 216 1 116 1 311 1 144 2 167 1 14 1 197 1 221 1 223 1 82 2 373 1 55 1 17 1 126 1 294 1 318 4 375 1 101 1 320 1 181 1 380 1 251 2 64 2 353 4 
158 1 68 2 25 4 278 1 188 1 44 2 5 1 109 4 212 1 213 2 92 1 29 1 93 1 258 2 245 1 364 1 338 1 76 1 216 1 116 1 311 1 167 1 14 1 197 1 221 1 223 1 82 2 373 1 55 1 17 1 294 1 318 4 375 1 266 1 320 1 180 2 181 1 251 2 64 2 106 2 353 4 
158 1 68 2 25 5 278 1 188 1 44 3 5 1 109 5 212 1 213 2 92 1 29 1 245 1 74 2 142 2 338 1 116 1 76 1 216 1 311 1 144 2 167 1 80 1 14 1 197 1 221 1 223 1 373 1 82 3 55 1 17 1 126 1 294 1 318 4 375 1 101 1 320 1 181 1 380 1 64 2 353 4 251 3 
158 1 68 2 25 5 278 1 188 1 44 3 5 1 109 5 212 1 213 2 92 1 29 1 245 1 74 2 142 2 338 1 116 1 76 1 216 1 311 1 144 2 167 1 80 1 14 1 197 1 221 1 223 1 373 1 82 3 55 1 17 1 126 1 294 1 318 4 375 1 101 1 320 1 181 1 380 1 64 2 353 4 251 3 
184 1 278 1 188 1 44 2 92 1 93 1 245 1 338 1 197 1 14 1 55 1 17 1 294 1 353 4 106 2 64 2 251 2 158 1 68 2 25 4 109 4 212 1 213 2 29 1 258 2 116 1 216 1 76 1 311 1 167 1 221 1 223 1 373 1 82 2 318 4 375 1 320 1 180 2 181 1 
65 1 274 2 285 1 3 1 171 1 186 1 122 1 124 1 290 1 46 1 360 1 243 4 56 1 58 2 128 1 200 2 27 1 379 1 131 1 96 1 51 1 52 1 
65 2 274 8 3 1 186 2 89 1 330 4 189 2 90 1 46 2 360 2 243 14 110 1 256 1 27 1 140 1 73 1 193 1 52 2 259 1 100 11 79 2 15 3 262 1 124 2 122 1 349 1 56 2 148 11 58 4 200 6 379 1 232 1 203 3 
156 1 65 1 274 1 301 1 300 1 3 1 240 1 186 1 330 1 188 2 359 1 360 1 211 1 243 2 244 1 256 1 110 1 257 1 73 1 245 1 143 1 52 1 117 1 311 2 370 1 170 1 83 1 56 1 175 1 58 2 200 1 229 1 59 1 379 1 230 1 62 1 152 1 352 1 
274 13 3 3 240 2 186 3 188 3 330 6 189 2 90 1 46 6 243 26 244 2 190 2 96 2 245 1 281 1 52 3 285 1 100 6 290 2 56 3 148 6 58 6 200 13 62 2 352 1 22 1 156 1 65 3 301 1 300 1 358 1 359 2 360 3 211 2 110 1 256 1 27 5 257 1 73 1 117 1 311 3 167 1 370 1 79 2 262 2 222 2 121 2 124 5 122 5 226 1 83 2 127 2 128 1 175 1 84 2 229 2 379 2 131 2 230 2 
156 8 65 2 274 1 205 1 301 8 3 2 240 2 186 2 188 1 360 2 211 2 243 2 244 3 110 1 256 1 257 1 306 1 245 1 52 2 195 1 368 1 117 2 311 1 32 1 370 1 171 1 35 2 81 1 288 1 225 1 263 1 374 1 56 2 175 7 58 4 200 1 267 1 62 2 352 1 
65 1 274 1 3 1 186 1 330 1 355 1 188 1 189 1 46 1 360 1 243 3 27 1 257 1 214 1 280 1 73 1 245 1 52 1 311 1 100 1 79 1 262 1 124 1 122 1 56 1 148 1 58 2 200 2 352 1 
65 1 274 2 100 1 79 1 3 1 171 1 186 1 276 1 330 1 124 1 46 1 90 1 360 1 243 2 56 1 148 1 58 2 52 1 
65 1 100 1 3 1 171 1 262 1 186 1 328 1 330 1 122 1 46 1 360 1 243 2 56 1 148 1 58 2 27 1 200 2 52 1 
65 1 274 2 100 2 79 1 3 1 262 1 171 1 186 1 122 1 330 2 124 1 189 1 46 2 90 1 360 1 243 4 56 1 148 2 58 2 27 1 200 2 52 1 
65 1 274 2 100 1 79 1 3 1 186 1 276 1 330 1 124 1 46 1 90 1 360 1 243 2 56 1 148 1 58 2 306 1 52 1 
65 1 100 1 3 1 262 1 186 1 328 1 330 1 122 1 46 1 360 1 243 2 56 1 148 1 58 2 27 1 200 2 306 1 52 1 
65 1 274 2 100 2 79 1 3 1 262 1 186 1 122 1 330 2 124 1 189 1 46 2 90 1 360 1 243 4 56 1 148 2 58 2 27 1 200 2 306 1 52 1 
65 1 274 2 100 2 79 1 3 1 262 1 186 1 122 1 330 2 124 1 189 1 46 2 90 1 360 1 56 1 243 4 148 2 58 2 27 1 200 2 52 1 
156 1 65 1 274 1 301 1 3 1 240 1 186 1 188 1 359 1 360 1 243 2 211 1 244 1 110 1 256 1 52 1 117 1 311 1 222 1 83 1 56 1 175 1 58 2 200 1 229 1 379 1 230 1 62 1 
156 1 65 1 274 1 301 1 3 1 240 1 186 1 188 1 360 1 243 2 211 1 244 1 110 1 256 1 279 1 52 1 117 1 311 1 340 1 145 1 56 1 175 1 58 2 200 1 229 1 379 1 230 1 62 1 
65 1 274 2 100 2 79 1 3 1 262 1 186 1 122 1 330 2 124 1 189 1 46 2 90 1 360 1 243 4 56 1 148 2 58 2 27 1 200 2 73 1 52 1 
156 1 65 1 274 2 301 1 3 1 240 1 186 1 330 2 188 1 189 1 359 1 46 2 90 1 360 1 243 4 211 1 244 1 27 1 52 1 311 1 100 2 79 1 262 1 222 1 122 1 124 1 83 1 56 1 148 2 84 1 175 1 58 2 200 2 267 1 229 1 230 1 62 1 
65 1 274 2 3 1 186 1 188 1 330 1 189 1 46 1 90 1 360 1 243 3 257 1 214 1 280 1 73 1 245 1 52 1 311 1 100 1 313 1 79 1 262 1 122 1 124 1 56 1 148 1 58 2 200 1 352 1 
65 2 298 2 274 7 24 1 186 2 187 1 4 2 189 2 46 4 360 2 90 2 243 14 27 2 193 1 52 2 118 1 79 2 262 2 15 1 120 1 122 2 124 2 58 4 200 7 351 1 231 1 270 1 203 1 153 1 
65 1 274 2 24 1 15 1 186 1 187 2 4 1 360 1 243 5 58 2 200 3 231 1 351 1 193 2 203 2 52 1 166 1 153 2 
65 2 298 1 274 6 24 1 186 2 187 2 4 2 189 1 46 1 90 1 360 2 243 13 193 3 52 2 166 1 118 1 79 1 262 1 15 2 120 1 122 1 124 1 58 4 200 7 176 1 351 1 231 1 203 3 153 1 
65 2 298 1 274 6 24 1 186 2 187 2 4 2 189 1 46 2 90 1 360 2 243 13 27 1 193 3 52 2 166 1 118 1 79 1 262 1 15 2 120 1 122 1 124 1 58 4 200 7 176 1 351 1 231 1 203 3 153 1 
65 1 274 4 24 1 186 1 187 1 4 1 360 1 46 1 243 9 27 1 96 1 193 2 52 1 166 1 285 1 15 1 122 1 124 1 290 1 58 2 128 1 200 5 351 1 231 1 131 1 203 2 153 1 
135 1 12 1 354 1 91 1 136 1 286 1 201 1 194 1 105 1 134 1 
249 1 260 1 
317 1 135 1 12 1 91 1 136 1 201 1 141 1 234 1 194 1 
7 1 18 1 
265 1 36 1 261 1 
23 1 135 1 12 1 354 1 239 1 136 1 286 1 278 1 329 1 6 1 318 1 91 1 201 1 30 2 75 1 194 1 105 1 353 1 
23 1 135 1 12 1 354 1 239 1 136 1 286 1 278 1 329 1 6 1 318 1 91 1 201 1 30 2 75 1 194 1 105 1 353 1 
23 1 135 1 12 1 354 1 239 1 136 1 286 1 278 1 329 1 6 1 318 1 91 1 201 1 30 2 75 1 194 1 105 1 353 1 
7 1 265 1 18 1 
7 1 265 1 18 1 
36 1 261 1 
265 1 36 1 261 1 
238 1 150 1 
311 2 135 1 12 1 238 1 239 1 136 1 219 1 224 1 188 2 249 1 318 1 376 1 257 2 91 1 150 1 379 1 245 2 30 1 201 1 295 1 97 1 75 1 194 1 352 2 260 1 11 1 353 1 
156 2 65 1 274 1 301 2 3 1 240 1 186 1 331 1 188 2 210 1 360 1 211 1 243 2 244 1 362 1 110 1 256 1 73 1 245 2 337 1 52 1 311 2 35 2 288 1 225 1 56 1 58 2 175 2 200 1 20 1 62 1 
156 2 301 2 169 1 159 1 240 1 293 1 47 1 211 1 175 2 37 1 267 1 350 1 50 1 269 1 363 1 191 2 195 1 296 1 78 1 
156 1 301 1 169 1 159 1 240 1 209 1 293 1 47 1 211 1 175 1 350 1 269 1 363 1 191 2 195 1 296 1 78 1 
156 1 205 1 301 1 240 1 263 1 293 1 211 1 244 1 175 1 37 1 86 1 62 1 117 1 273 1 
156 1 301 1 169 1 159 1 240 1 293 1 47 1 211 1 175 1 37 1 350 1 50 1 269 1 363 1 191 2 195 1 296 1 78 1 
357 1 
158 1 14 1 322 1 278 1 51 1 338 1 45 1 
158 1 278 2 109 1 74 1 142 1 338 1 116 1 144 1 14 1 223 1 318 1 375 1 101 1 320 1 106 1 64 1 353 1 
1 2 240 3 278 8 43 3 189 2 45 1 244 10 334 2 190 2 142 6 247 1 338 8 343 2 146 6 14 9 248 1 17 2 199 1 62 3 353 5 64 3 106 12 156 3 301 3 302 2 158 2 161 2 211 4 109 5 361 1 307 2 116 4 77 1 117 1 217 6 79 2 34 2 262 2 223 4 314 2 124 2 122 2 175 3 318 5 375 4 267 1 377 2 229 3 130 2 178 2 320 4 322 1 133 1 235 1 
1 1 253 1 327 1 158 2 278 5 108 1 189 2 109 1 361 1 139 1 307 1 142 3 193 1 282 1 338 5 166 1 116 2 217 5 146 5 79 2 14 8 15 1 262 2 223 2 124 2 122 2 318 1 375 2 377 2 320 2 103 1 203 1 353 1 64 1 106 6 
185 1 188 1 71 1 257 1 214 1 307 1 96 1 245 1 281 1 338 2 116 1 311 1 167 1 14 2 223 1 290 1 124 2 122 1 126 1 228 1 318 1 375 1 377 2 131 1 320 1 352 1 297 1 353 1 
158 1 14 1 223 1 278 1 45 1 375 1 320 1 322 1 338 1 116 1 
217 5 146 5 79 2 262 2 14 5 278 5 124 2 122 2 189 2 377 2 307 1 190 1 142 5 338 5 106 10 
109 1 318 1 158 1 278 1 353 1 64 1 
88 1 156 4 205 1 301 4 326 1 1 2 240 1 211 1 109 4 244 1 361 2 308 1 247 1 338 2 116 1 117 2 13 1 14 2 223 2 263 1 199 2 175 4 318 3 375 2 129 1 320 2 62 1 64 2 353 3 
65 1 156 1 301 1 3 1 240 1 186 1 188 3 359 1 360 1 243 1 211 1 244 1 256 1 257 2 71 1 214 2 245 2 52 1 117 1 311 3 16 1 222 1 83 1 56 1 58 2 175 1 200 1 229 1 379 1 230 1 62 1 352 2 
217 2 146 2 1 1 158 2 14 1 223 1 278 4 304 1 361 1 375 1 320 1 142 2 338 2 116 1 106 4 
135 1 194 1 272 1 
135 1 354 1 150 1 371 1 194 1 
135 1 194 1 272 1 
135 1 194 1 272 1 
135 1 172 1 194 1 
135 1 172 1 194 1 
135 1 172 1 194 1 
135 1 194 1 
91 1 201 1 
65 2 274 8 285 1 186 2 122 3 124 3 290 2 90 3 46 6 360 2 243 16 58 4 128 1 200 8 27 3 131 2 96 2 281 1 52 2 155 1 
274 2 285 1 290 1 124 1 122 1 46 1 243 4 128 1 200 2 27 1 131 1 96 1 51 1 
65 1 274 2 79 1 262 1 198 1 186 1 122 1 124 1 189 1 46 2 360 1 90 1 243 4 58 2 27 1 200 2 52 1 
243 2 274 1 200 1 15 1 193 1 203 1 
65 1 274 12 186 1 89 1 189 2 46 6 90 2 360 1 243 24 27 4 140 1 96 2 281 1 52 1 259 1 285 1 79 2 262 2 15 2 290 2 122 5 124 5 128 1 58 2 200 12 131 2 203 2 155 1 
243 1 200 1 203 1 
243 1 274 1 15 1 
65 1 274 3 79 1 262 1 186 1 198 1 124 1 122 1 189 1 360 1 90 1 46 3 243 6 58 2 200 3 27 2 190 1 52 1 
65 1 274 6 327 1 186 1 108 1 189 2 90 1 360 1 46 2 243 12 139 1 27 1 193 1 52 1 166 1 79 2 15 1 262 2 124 2 122 2 58 2 200 6 351 1 103 1 203 1 
274 3 124 1 122 1 290 1 46 2 90 1 243 6 200 3 27 1 131 1 96 1 
65 1 274 1 285 1 186 1 290 1 90 1 46 2 360 1 243 3 58 2 128 1 27 1 200 2 131 1 60 1 52 1 155 1 
65 1 274 5 186 1 290 2 124 2 122 2 360 1 46 5 90 2 243 10 58 2 27 3 200 5 351 1 131 2 96 1 281 1 52 1 
65 1 274 2 79 1 186 1 124 1 360 1 90 1 46 1 243 2 58 2 351 1 52 1 
65 1 274 2 79 1 262 1 186 1 122 1 124 1 189 1 46 2 360 1 90 1 243 4 58 2 27 1 200 2 351 1 52 1 
65 3 274 1 120 1 186 3 290 1 360 3 46 2 90 1 243 3 58 6 200 2 27 1 351 1 131 1 60 1 52 3 155 1 
65 4 274 15 2 1 186 4 189 2 360 4 162 1 90 4 46 8 243 30 27 4 96 2 281 1 193 1 52 4 285 1 79 2 346 1 120 1 15 3 262 2 198 1 290 2 124 5 122 5 128 1 58 8 200 15 131 2 351 1 203 3 155 1 
65 1 274 7 186 1 90 1 360 1 46 4 243 14 27 3 96 2 281 1 193 1 52 1 166 1 285 1 15 1 122 3 124 3 290 2 58 2 128 1 200 7 351 1 131 2 203 1 
65 2 274 7 186 2 90 1 360 2 46 4 243 14 27 3 96 2 281 1 193 1 52 2 166 1 285 1 15 1 198 1 122 3 124 3 290 2 58 4 128 1 200 7 351 1 131 2 203 1 
65 3 274 12 327 1 186 3 108 1 189 2 90 2 360 3 46 6 243 25 139 1 27 4 96 2 281 1 193 1 52 3 166 1 285 1 79 2 15 1 262 2 198 1 290 2 124 5 122 5 128 1 58 6 200 13 131 2 351 1 103 1 203 1 155 1 
65 3 274 13 327 1 186 3 108 1 189 2 90 4 360 3 46 8 243 23 139 1 27 4 96 2 281 1 193 1 52 3 166 1 285 1 79 2 15 1 262 1 198 1 290 2 124 5 122 4 128 1 58 6 200 10 131 2 351 1 103 1 203 1 155 1 
65 1 274 7 186 1 90 1 360 1 46 4 243 14 27 3 96 2 281 1 193 1 52 1 166 1 285 1 15 1 122 3 124 3 290 2 58 2 128 1 200 7 351 1 131 2 203 1 
65 1 274 6 327 1 186 1 108 1 189 2 90 1 360 1 46 2 243 12 139 1 27 1 193 1 52 1 166 1 79 2 15 1 262 2 124 2 122 2 58 2 200 6 351 1 103 1 203 1 
65 4 274 13 327 1 186 4 108 1 189 2 90 2 360 4 46 6 243 24 139 1 27 4 96 2 281 1 193 1 52 4 166 1 285 1 79 2 15 1 262 1 198 1 290 2 124 5 122 4 128 1 58 8 200 11 131 2 351 1 103 1 203 1 155 2 
65 4 274 9 327 1 186 4 108 1 189 3 90 3 360 4 46 6 243 16 139 1 27 3 193 1 52 4 166 1 79 3 120 1 15 1 262 2 124 3 122 2 58 8 200 7 351 1 103 1 203 1 155 2 
274 3 285 2 122 1 290 3 124 1 46 6 90 3 243 7 128 1 200 4 27 3 131 3 96 1 
65 4 274 13 327 1 186 4 108 1 189 2 90 2 360 4 46 6 243 24 139 1 27 4 96 2 281 1 193 1 52 4 166 1 285 1 79 2 120 1 15 1 262 1 290 2 124 5 122 4 128 1 58 8 200 11 131 2 351 1 103 1 203 1 155 2 
311 1 92 1 379 1 107 1 245 1 188 1 40 1 
311 1 204 1 66 1 42 1 107 1 53 1 160 1 188 1 92 1 379 1 245 1 40 1 
211 1 156 1 244 1 205 1 301 1 175 1 240 1 51 1 62 1 263 1 117 1 
311 2 156 1 301 1 370 1 240 1 188 2 211 1 83 1 244 1 175 1 257 1 229 1 379 1 230 1 245 1 62 1 352 1 117 1 
156 1 301 1 240 1 188 2 211 1 244 3 257 2 334 1 245 2 311 2 167 1 370 1 373 1 83 1 199 1 175 1 229 2 178 1 379 1 230 1 181 1 62 2 352 1 
156 2 301 2 240 1 188 2 211 1 244 3 257 2 334 1 245 2 311 2 167 1 145 1 370 1 373 1 57 1 199 1 175 2 229 2 178 1 379 1 230 1 181 1 62 2 352 1 
156 3 301 3 158 1 240 1 278 1 43 1 109 1 211 1 244 4 334 1 117 1 369 1 314 1 17 1 57 1 199 1 175 3 318 2 229 1 178 1 381 1 62 1 353 2 
156 3 301 3 158 1 240 1 278 1 314 1 43 1 17 1 57 1 211 1 109 1 199 1 244 4 318 2 175 3 229 1 178 1 334 1 130 1 62 1 117 1 353 2 
211 1 156 1 301 1 175 1 240 1 81 1 
156 7 301 7 32 1 35 1 240 2 81 1 288 1 254 1 248 1 374 1 211 3 244 3 175 6 267 1 229 1 95 1 102 1 62 2 195 1 368 1 117 2 
274 6 3 2 240 1 186 2 188 2 331 1 90 1 46 4 243 12 244 1 245 1 96 2 281 1 52 2 285 1 290 2 56 2 58 4 200 6 62 1 352 1 156 1 65 2 301 1 359 1 360 2 211 1 27 3 257 1 73 1 311 2 167 1 370 1 222 1 124 3 122 3 226 1 83 1 127 1 84 1 175 1 128 1 267 1 229 1 230 1 131 2 379 2 
156 1 301 1 158 1 278 1 43 1 45 1 161 1 109 2 244 2 338 1 247 1 116 2 117 1 343 1 34 1 14 1 223 2 314 1 17 1 175 1 318 3 375 2 130 1 320 2 295 1 322 1 353 3 64 1 
156 2 301 2 240 1 81 1 314 1 248 1 211 2 244 2 175 2 267 1 229 1 62 1 235 1 
156 4 205 1 301 4 240 1 263 1 305 1 57 1 211 1 244 1 175 4 267 1 62 1 117 1 
156 2 301 2 275 1 240 1 254 1 291 1 211 2 199 1 244 1 175 2 229 1 94 1 95 1 62 1 
47 1 211 1 156 1 301 1 175 1 169 1 191 1 240 1 296 1 117 1 
156 2 301 2 240 1 288 1 211 1 244 1 175 2 362 1 267 1 62 1 195 1 
156 5 205 1 301 5 240 2 288 1 263 1 374 1 305 1 211 2 199 1 244 3 175 4 267 1 62 2 117 1 368 1 
156 5 205 1 301 5 240 2 288 1 263 1 374 1 305 1 211 2 199 1 244 3 175 4 267 1 62 2 246 1 117 1 
311 2 156 1 301 1 145 1 370 1 240 1 188 2 211 1 244 1 175 1 257 1 229 1 379 1 230 1 245 1 62 1 352 1 117 1 
156 1 301 1 240 1 254 1 248 1 211 2 199 1 244 1 175 1 229 1 95 1 102 1 62 1 
379 1 61 1 315 1 367 1 21 1 
183 1 167 1 158 1 197 1 278 1 373 1 315 2 17 1 318 2 379 1 179 1 295 1 181 1 61 1 39 1 115 1 367 2 353 2 21 2 
311 1 188 1 210 1 245 1 61 1 20 1 337 1 367 1 21 1 
179 1 61 1 115 1 
287 1 51 1 104 1 154 1 
341 1 177 1 287 1 336 1 233 1 104 1 154 1 
333 1 151 1 336 1 
341 1 33 2 287 1 289 1 177 3 112 1 233 1 336 3 104 1 236 1 283 1 154 1 
341 1 177 2 287 1 31 1 113 1 336 2 233 1 104 1 154 1 
341 1 119 1 177 1 112 1 191 1 336 1 233 1 104 1 138 1 296 1 78 1 
341 1 177 1 112 1 336 1 233 1 104 1 154 1 
341 1 177 1 112 1 287 1 336 1 233 1 154 2 
341 2 168 1 345 1 177 2 112 1 233 2 336 2 104 1 154 1 63 1 
341 1 119 1 207 1 287 1 49 1 177 3 112 1 10 1 31 2 233 1 336 3 104 2 154 1 
341 1 287 1 372 1 47 1 177 2 269 1 112 1 191 2 31 1 233 1 336 2 104 1 154 1 78 1 296 1 
341 2 119 1 287 1 123 1 49 1 177 4 112 1 31 2 113 1 233 2 336 4 104 2 154 1 
341 1 177 1 112 1 287 1 336 1 233 1 104 1 154 1 
341 1 323 1 119 1 33 1 287 2 49 1 177 4 31 2 336 4 233 1 104 3 236 1 283 1 154 2 
341 1 149 1 177 2 112 1 287 1 31 1 69 1 336 2 233 1 104 1 173 1 154 1 
341 1 218 1 33 2 287 1 177 3 112 1 233 1 336 3 104 1 236 2 283 1 154 1 
299 1 324 1 104 2 165 2 
41 1 341 1 177 1 112 1 336 1 233 1 
341 1 207 1 177 2 112 1 287 1 31 1 336 2 233 1 104 1 154 1 
202 1 
341 1 177 1 112 1 287 1 336 1 233 1 104 1 154 1 
341 1 33 1 207 1 287 1 177 3 112 1 31 1 233 1 336 3 104 1 154 1 
323 1 119 1 49 1 104 1 
104 1 154 1 

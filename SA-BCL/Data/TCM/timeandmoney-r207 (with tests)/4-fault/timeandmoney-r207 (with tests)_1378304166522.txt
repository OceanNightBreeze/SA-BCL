#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 58 (239,263) (239,263) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 58 (239,263) (239,263) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 58 (239,263) (239,263) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 58 (239,263) (239,263) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 58 (72,319) (72,319) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 98 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 71 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 285 241 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 83 (165,235) 205 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 296 99 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 1 206 1 
263 1 58 1 139 1 239 1 
263 1 58 1 139 1 239 1 
263 1 58 1 139 1 239 1 
263 1 58 1 139 1 239 1 
327 1 139 1 
319 1 353 1 58 1 139 1 72 1 229 1 
139 1 100 1 
139 1 100 1 
231 1 
161 1 
231 1 
230 1 231 1 289 1 154 1 78 1 211 1 16 1 
161 1 81 1 150 1 
161 1 316 1 318 2 
89 2 314 2 250 2 288 2 60 2 290 1 347 2 68 1 
158 1 232 1 159 1 288 3 290 1 163 1 1 1 95 2 7 1 314 3 315 1 215 2 34 2 293 1 169 1 274 1 55 1 347 2 11 1 261 1 60 2 322 1 176 1 323 1 13 1 120 2 324 1 200 1 299 1 68 1 124 2 89 2 151 1 250 2 43 1 266 1 91 1 
89 1 314 1 250 1 74 1 288 1 60 1 290 1 272 1 181 1 347 1 
161 1 288 1 74 1 321 1 12 1 289 1 224 1 281 1 250 1 314 1 140 1 154 1 331 1 81 1 
161 1 60 1 288 1 74 1 289 2 321 1 12 1 281 1 89 1 250 1 314 1 140 1 154 2 81 1 347 1 
231 1 
231 1 
289 1 243 1 154 1 
288 2 60 1 68 2 213 1 89 1 250 2 314 2 346 1 347 1 
166 1 143 1 87 1 
288 1 176 1 1 1 120 1 200 1 68 1 124 1 151 1 95 1 7 1 314 1 43 1 128 1 169 1 11 1 55 1 
150 1 68 1 
89 1 276 1 314 3 250 3 288 3 60 3 347 3 68 1 
276 1 60 1 288 2 176 1 334 1 1 1 120 1 200 1 124 1 151 1 95 1 7 1 250 1 314 2 43 1 169 1 143 1 55 1 11 1 347 1 
320 1 131 1 276 2 60 4 288 5 334 1 68 1 213 1 89 1 250 5 314 5 20 1 331 1 347 4 
313 1 314 2 250 2 74 1 288 2 60 2 272 1 347 2 
314 1 250 1 74 1 288 1 60 1 272 1 347 1 
89 1 213 1 314 1 250 1 74 1 288 1 60 1 346 1 347 1 
158 1 159 1 288 4 74 1 289 1 290 1 334 1 1 1 213 1 95 1 7 1 314 4 215 2 34 1 140 1 169 1 274 1 55 1 11 1 347 3 261 1 276 1 60 3 321 1 12 1 322 1 176 1 13 1 120 1 324 1 200 1 299 1 42 1 68 1 281 1 124 1 89 2 151 1 250 3 43 1 266 1 154 1 91 1 25 1 
314 2 250 2 276 1 288 2 60 1 20 1 331 1 347 1 68 1 
276 2 161 1 74 1 60 3 288 3 289 1 321 1 12 1 334 1 38 1 281 1 89 1 213 1 250 3 314 3 140 1 154 1 25 1 347 3 
276 1 60 2 288 2 213 1 89 1 166 1 250 2 314 2 143 1 347 2 
288 1 176 1 1 1 120 1 200 1 68 1 124 1 151 1 95 1 7 1 314 1 43 1 169 1 11 1 55 1 
288 1 162 1 176 1 1 1 120 1 200 1 68 1 124 1 151 1 95 1 314 1 43 1 169 1 344 1 55 1 
287 1 159 2 166 2 215 2 217 1 34 4 116 1 293 2 143 2 240 1 170 1 274 1 172 1 59 1 322 1 324 1 299 1 87 2 19 1 202 1 266 1 225 1 91 1 109 1 
313 1 314 1 250 1 74 1 288 1 60 1 12 1 347 1 
173 1 160 1 75 1 
173 2 160 2 93 1 145 1 199 1 273 1 
173 1 160 1 
173 1 160 1 
93 1 273 1 
93 1 273 1 
93 1 273 1 
173 1 160 1 125 1 
173 1 160 1 125 1 
173 1 160 1 125 1 
18 1 173 1 160 1 
18 1 173 1 160 1 
18 1 173 1 160 1 
173 2 47 3 160 2 161 1 289 2 310 2 198 1 336 2 135 1 199 1 67 2 88 2 179 1 21 1 284 1 330 1 154 2 142 1 80 2 
47 1 160 1 288 2 289 1 310 1 336 1 75 1 32 1 76 1 314 2 80 1 101 1 347 2 173 1 60 2 195 1 61 1 40 1 88 1 68 1 250 2 330 1 154 1 285 1 
353 1 112 2 229 2 192 1 286 1 
229 1 258 1 192 1 
353 1 229 1 258 1 
353 1 112 1 2 1 229 3 286 1 192 2 
353 1 112 1 138 1 229 2 286 1 192 1 
231 1 98 1 
231 2 340 1 71 1 267 1 
230 1 130 1 231 2 289 1 164 1 211 1 189 1 97 1 78 1 170 1 172 1 174 1 260 2 195 1 350 1 122 1 16 1 329 1 154 1 252 1 
172 1 130 1 230 1 260 2 231 1 174 1 289 1 195 1 350 1 164 1 211 1 122 1 16 1 189 1 97 1 329 1 154 1 78 1 252 1 170 1 253 1 
306 1 
69 1 200 1 150 1 
43 1 200 1 55 1 
200 1 105 1 
103 1 200 1 
200 1 55 1 
69 2 43 1 200 3 177 1 55 1 41 1 
172 1 287 3 110 1 118 1 57 1 159 3 269 1 85 1 278 1 223 1 279 1 234 1 34 7 116 1 225 2 293 4 275 1 46 2 
110 1 183 1 130 3 287 10 159 15 270 1 234 2 94 1 215 2 34 31 116 4 293 16 170 3 275 1 274 1 296 1 172 4 118 2 57 2 37 1 322 1 85 1 278 1 119 1 223 2 279 5 245 1 299 1 155 3 225 5 91 1 109 3 182 4 46 3 
287 4 159 4 234 1 215 4 34 9 116 1 293 5 274 2 275 1 295 1 172 1 57 1 118 1 322 2 37 1 278 1 85 1 223 1 279 1 299 2 225 3 91 2 107 1 46 2 
172 1 287 3 110 1 118 1 57 1 159 3 278 1 85 1 223 1 279 1 234 1 34 7 116 1 225 2 293 4 275 1 46 2 
172 1 287 3 110 1 118 1 57 1 159 3 278 1 85 1 223 1 279 1 234 1 34 7 116 1 225 2 293 4 275 1 46 2 
335 1 1 1 339 1 95 1 168 1 169 1 117 2 317 2 55 1 348 1 120 1 200 1 149 1 148 1 325 1 124 1 151 1 328 2 301 1 204 1 24 1 355 2 228 1 
95 1 255 1 139 1 328 1 120 1 124 1 
95 1 139 1 328 1 283 1 120 1 124 1 
157 1 255 1 0 1 335 1 1 1 2 1 258 1 339 1 95 1 342 1 51 1 238 1 317 1 117 1 169 1 82 1 192 1 102 1 66 1 120 1 148 3 106 2 325 3 124 1 353 1 328 1 355 1 228 1 229 2 333 1 
157 1 255 1 1 1 2 1 258 1 95 1 342 1 51 1 238 1 317 1 117 1 169 1 82 1 192 1 66 1 120 1 148 2 106 2 325 2 124 1 353 1 328 1 355 1 229 2 333 1 
341 1 
230 1 314 1 50 1 140 1 237 1 316 2 141 5 242 1 12 1 321 1 243 5 65 1 146 1 147 2 247 1 326 2 281 1 16 1 250 1 203 2 329 1 154 4 207 1 331 1 26 2 161 1 74 1 288 1 289 4 211 1 292 3 81 1 175 1 260 1 222 1 349 1 224 1 300 3 354 1 127 2 303 3 129 1 
230 1 161 1 288 1 74 1 289 4 211 1 292 3 314 1 50 1 140 1 237 1 316 2 141 5 81 1 242 1 260 1 175 1 222 1 321 1 12 1 349 1 243 5 146 1 65 1 147 2 224 1 247 1 326 2 16 1 281 1 354 1 300 3 250 1 203 2 127 2 329 1 303 3 207 1 154 4 129 1 331 1 26 2 
230 1 184 1 161 1 288 1 74 1 289 4 211 1 292 2 314 1 140 1 237 1 141 4 81 1 318 2 242 1 260 1 175 1 321 1 12 1 243 4 349 1 146 1 147 2 224 1 123 1 247 1 326 2 16 1 281 1 300 2 354 1 250 1 264 2 203 2 303 2 329 1 154 4 331 1 45 2 
230 1 1 1 3 1 95 2 314 1 189 1 140 1 237 1 316 2 141 4 318 2 55 1 242 1 321 1 12 1 243 6 146 1 200 1 147 2 247 1 326 3 16 1 281 1 151 2 250 1 203 2 329 2 154 5 24 1 331 1 26 2 332 1 161 2 288 1 74 1 289 5 211 1 115 1 292 2 169 1 81 1 260 2 175 1 348 1 349 1 120 2 224 1 178 1 123 1 124 2 300 2 354 1 127 2 303 2 129 1 
288 1 74 1 289 3 212 1 292 1 314 1 140 1 141 2 242 1 321 1 12 1 349 1 243 2 146 1 224 1 247 1 326 1 281 1 354 1 250 1 154 3 331 1 
288 1 74 1 161 1 289 3 212 1 314 1 140 1 141 3 81 1 242 1 321 1 12 1 243 1 349 1 146 1 224 1 247 1 326 1 281 1 354 1 300 1 250 1 154 3 331 1 
288 1 74 1 161 1 289 3 212 1 292 1 314 1 140 1 141 3 81 1 242 1 321 1 12 1 349 1 243 2 146 1 224 1 247 1 326 1 281 1 354 1 300 1 250 1 303 1 154 3 331 1 
230 1 161 5 288 1 74 1 289 5 211 1 212 1 292 4 314 1 50 1 140 1 237 1 316 2 141 6 190 1 81 5 242 1 260 1 175 1 222 1 321 1 12 1 349 1 243 7 65 1 146 1 147 2 224 1 247 1 326 3 16 1 281 1 300 4 354 1 250 1 203 2 127 2 329 1 303 4 207 1 154 5 129 1 331 1 26 2 
230 1 314 1 140 1 237 1 316 2 141 4 242 1 318 2 12 1 321 1 243 4 146 1 147 2 247 1 326 2 281 1 16 1 250 1 203 2 329 1 154 4 331 1 26 2 74 1 288 1 161 2 289 4 211 1 292 2 81 1 175 1 260 1 349 1 224 1 123 1 354 1 300 2 127 2 303 2 129 1 
230 1 161 1 288 1 74 1 289 4 211 1 292 2 314 1 50 1 140 1 237 1 316 2 141 4 81 1 242 1 260 1 175 1 222 1 321 1 12 1 243 4 349 1 146 1 147 2 224 1 247 1 326 2 281 1 16 1 300 2 354 1 250 1 203 2 127 2 303 2 329 1 207 1 154 4 129 1 331 1 26 2 
230 1 161 1 288 1 74 1 289 4 211 1 292 2 314 1 50 1 140 1 237 1 316 2 141 4 81 1 242 1 260 1 175 1 222 1 321 1 12 1 243 4 349 1 146 1 147 2 224 1 247 1 326 2 281 1 16 1 300 2 354 1 250 1 203 2 127 2 303 2 329 1 207 1 154 4 129 1 331 1 26 2 
230 1 184 1 161 1 288 1 74 1 289 4 211 1 292 2 314 1 140 1 237 1 141 4 81 1 318 2 242 1 260 1 175 1 321 1 12 1 297 1 243 4 349 1 146 1 147 2 224 1 247 1 326 2 281 1 201 1 16 1 300 2 354 1 250 1 264 2 203 2 303 2 329 1 207 1 154 4 331 1 45 2 
158 1 255 1 232 2 159 1 288 1 1 2 291 1 186 1 95 8 314 1 215 4 217 1 34 2 35 1 169 2 293 1 347 1 274 2 55 2 144 1 276 1 60 1 348 1 322 2 64 1 323 1 120 8 200 3 324 2 280 1 299 2 124 7 151 2 250 1 283 1 266 2 208 1 91 2 24 1 
287 1 130 1 159 2 288 1 213 1 214 1 166 1 314 1 215 2 34 3 116 1 293 1 143 1 170 1 274 1 347 1 172 1 60 1 322 1 324 1 299 1 15 1 87 1 89 1 250 1 266 1 225 1 91 1 109 1 
172 1 287 2 118 1 57 1 159 3 322 1 278 1 85 1 324 1 150 1 299 1 87 1 68 2 166 1 215 2 34 6 217 1 116 1 266 1 293 3 225 2 91 1 143 1 275 1 274 1 46 1 
158 1 287 2 130 2 159 6 166 4 216 1 215 4 34 14 116 1 293 8 143 11 170 2 274 2 221 1 296 1 172 2 322 2 323 1 324 2 279 1 245 1 299 2 15 1 87 11 68 1 17 1 266 1 225 1 155 3 91 2 109 1 268 1 182 3 
287 1 172 1 322 1 324 1 279 1 299 1 87 1 166 1 202 1 215 2 34 2 217 1 266 1 293 2 91 1 143 1 170 1 274 1 
287 1 159 2 59 1 322 1 324 1 299 1 87 1 166 1 215 2 34 2 217 1 266 1 116 1 225 1 91 1 143 1 109 1 274 1 
130 1 287 2 159 2 166 2 215 2 217 1 34 4 116 1 293 2 143 2 170 1 274 1 172 1 322 1 324 1 279 1 299 1 87 2 266 1 225 1 91 1 109 1 
287 1 172 1 322 1 324 1 279 1 299 1 87 1 186 1 166 1 202 1 215 2 34 2 266 1 293 2 91 1 143 1 170 1 274 1 
287 1 159 2 59 1 322 1 324 1 299 1 87 1 186 1 166 1 215 2 34 2 266 1 116 1 225 1 91 1 143 1 109 1 274 1 
130 1 287 2 159 2 186 1 166 2 215 2 34 4 116 1 293 2 143 2 170 1 274 1 172 1 322 1 324 1 279 1 299 1 87 2 266 1 225 1 91 1 109 1 
130 1 287 2 159 2 166 2 215 2 34 4 116 1 293 2 143 2 170 1 274 1 172 1 322 1 324 1 279 1 299 1 87 2 266 1 225 1 91 1 109 1 
158 1 159 1 288 1 1 1 95 1 7 1 314 1 215 2 34 2 293 1 169 1 55 1 11 1 274 1 261 1 176 1 322 1 323 1 120 1 200 1 324 1 299 1 68 1 124 1 151 1 43 1 266 1 91 1 
158 1 159 1 288 1 162 1 1 1 31 1 95 1 314 1 215 2 34 2 293 1 169 1 344 1 55 1 274 1 176 1 322 1 323 1 120 1 200 1 324 1 299 1 68 1 124 1 151 1 43 1 266 1 91 1 
130 1 287 2 159 2 166 2 215 2 34 4 116 1 293 2 143 2 170 1 274 1 172 1 322 1 324 1 279 1 299 1 15 1 87 2 266 1 225 1 91 1 109 1 
287 2 130 1 159 2 288 1 1 1 33 1 95 1 7 1 166 2 314 1 215 2 34 4 116 1 293 2 169 1 143 2 170 1 11 1 55 1 274 1 172 1 261 1 176 1 322 1 120 1 200 1 324 1 279 1 299 1 87 2 124 1 43 1 283 1 266 1 225 1 91 1 109 1 
287 1 130 1 159 1 288 1 28 1 213 1 314 1 166 1 215 2 34 3 116 1 293 2 143 1 170 1 274 1 347 1 172 1 60 1 322 1 324 1 279 1 299 1 15 1 87 1 89 1 250 1 266 1 91 1 109 1 
158 1 159 1 288 2 334 1 1 1 133 1 95 1 7 1 166 1 314 2 215 2 34 2 169 1 293 1 55 1 11 1 274 1 347 1 276 1 60 1 176 1 322 1 323 1 120 1 200 1 324 1 15 1 299 1 68 1 124 1 151 1 250 1 43 1 128 1 304 1 266 1 91 1 73 1 
130 2 1 2 185 1 95 3 235 2 7 2 96 2 314 3 143 7 275 1 274 3 11 2 55 2 57 1 276 1 60 1 322 3 323 1 278 1 324 3 200 2 279 4 15 1 68 2 151 1 250 1 109 2 158 1 287 8 255 1 159 10 288 3 334 1 338 1 33 2 166 7 215 6 34 20 116 3 169 2 293 10 345 2 170 2 347 1 172 3 118 1 261 2 176 2 85 1 120 3 299 3 87 7 262 1 124 3 43 2 266 3 225 4 91 3 46 1 
130 3 287 6 159 10 6 1 343 1 215 4 34 19 116 3 293 9 191 1 170 3 274 2 171 1 296 1 172 3 322 2 279 3 14 1 351 2 245 1 299 2 248 2 90 1 22 1 225 3 155 1 91 2 107 1 109 3 182 2 
287 4 130 3 159 12 6 1 8 1 52 1 215 6 34 26 116 2 293 14 99 1 191 1 170 3 274 3 171 2 296 2 172 3 37 2 322 3 84 1 39 1 279 2 351 4 299 3 248 1 90 2 22 1 44 1 225 2 155 2 91 3 107 1 109 2 182 2 
130 4 287 8 159 21 6 1 8 1 52 1 215 6 34 41 116 5 99 1 293 20 191 1 170 4 275 1 274 3 171 2 296 3 172 5 118 1 57 1 37 1 322 3 85 1 278 1 84 1 39 1 279 4 14 1 351 4 245 1 299 3 248 1 90 1 180 1 22 1 44 1 225 4 155 3 91 3 107 1 109 4 46 1 182 4 
130 4 287 7 159 18 6 1 8 1 52 1 215 8 34 38 116 4 99 1 293 20 191 1 170 4 275 1 274 4 171 2 296 3 172 5 118 1 57 1 37 2 322 4 85 1 278 1 84 1 39 1 279 3 14 1 351 4 245 1 299 4 248 1 90 1 180 1 22 1 44 1 225 4 155 3 91 4 107 1 109 3 46 1 182 4 
130 7 287 14 159 25 6 1 8 1 52 1 215 4 34 52 116 8 99 1 293 27 191 1 170 7 275 1 274 2 171 1 296 2 172 8 118 1 57 1 37 1 322 2 85 1 278 1 84 1 39 1 279 7 351 4 245 2 299 2 248 1 17 2 90 1 22 1 44 1 225 7 155 4 91 2 107 1 109 7 46 1 182 4 
173 1 126 1 160 1 284 1 310 1 336 1 135 1 199 1 80 1 88 1 
76 1 75 1 
173 1 259 1 160 1 310 1 336 1 80 1 337 1 220 1 88 1 
173 1 47 2 160 1 161 1 289 1 310 1 198 1 336 1 135 1 199 1 67 1 88 1 179 1 284 1 330 1 154 1 142 1 80 1 
173 1 47 2 160 1 161 1 289 1 310 1 198 1 336 1 135 1 199 1 67 1 88 1 179 1 284 1 330 1 154 1 142 1 80 1 
173 1 47 2 160 1 161 1 289 1 310 1 198 1 336 1 135 1 199 1 67 1 88 1 179 1 284 1 330 1 154 1 142 1 80 1 
145 1 227 1 125 1 
145 1 227 1 125 1 
18 1 134 1 
18 1 145 1 134 1 
32 1 101 1 
47 1 173 1 231 1 160 1 310 1 198 1 336 1 80 1 285 1 67 1 241 1 88 1 
227 1 125 1 
18 1 145 1 134 1 
158 1 48 1 232 2 159 1 288 2 1 1 95 2 314 2 215 2 34 2 169 1 293 1 55 1 274 1 144 1 322 1 196 1 323 1 120 2 200 1 324 1 280 1 15 1 299 1 124 2 249 1 250 2 265 1 266 1 305 1 91 1 
348 1 1 1 120 1 200 1 124 1 5 1 151 1 95 1 168 1 169 1 317 1 24 1 55 1 92 1 
255 1 102 1 311 1 1 1 2 1 120 1 258 1 124 1 5 1 95 1 353 1 342 1 238 1 169 1 317 1 54 1 229 2 192 1 
255 1 102 1 311 1 1 1 2 1 120 2 258 1 124 2 5 1 95 2 353 1 342 1 283 1 238 1 169 1 317 1 54 1 229 2 192 1 
255 1 102 1 1 1 2 1 120 1 258 1 124 1 95 1 353 1 342 1 302 1 238 1 317 1 169 1 54 1 229 2 192 1 
246 1 
230 1 175 1 260 1 161 1 211 1 16 1 271 1 81 1 
172 1 130 1 260 2 164 1 122 1 170 1 
95 1 151 1 120 1 124 1 
260 1 161 1 271 1 329 1 210 1 81 1 150 1 
230 1 260 1 175 1 189 1 329 1 211 1 3 1 16 1 
230 1 260 1 175 1 127 1 329 1 129 1 211 1 16 1 
230 1 103 1 175 1 83 1 1 1 120 1 200 2 165 1 211 1 41 1 16 1 124 1 151 1 95 1 43 1 189 1 329 1 205 1 169 2 55 1 156 1 
296 1 230 1 260 1 175 1 329 1 155 1 99 1 211 1 182 1 16 1 
230 1 74 1 288 1 132 2 289 1 290 1 256 1 211 1 314 1 50 1 272 1 116 1 219 1 275 1 347 1 172 2 118 1 57 1 175 1 260 2 60 1 352 1 16 1 89 1 250 1 329 2 154 1 181 1 
32 1 197 1 310 1 135 1 88 1 
310 1 187 1 88 1 
310 1 187 1 88 1 
310 1 187 1 88 1 
209 1 310 1 88 1 
209 1 310 1 88 1 
209 1 310 1 88 1 
310 1 88 1 
173 1 160 1 
287 5 172 2 57 2 118 2 159 5 322 1 256 1 279 2 299 1 215 2 34 10 116 2 225 3 293 5 91 1 107 1 274 1 275 1 
172 1 287 1 322 1 279 1 299 1 215 2 34 2 293 2 107 1 91 1 170 1 274 1 
287 2 130 1 172 1 159 2 322 1 279 1 299 1 215 2 34 4 116 1 225 1 293 2 107 1 91 1 109 1 170 1 274 1 
287 2 57 1 118 1 159 2 37 1 322 3 279 1 14 1 299 3 188 1 215 6 34 3 225 1 293 1 107 1 91 3 274 3 
130 3 287 12 159 18 270 1 94 1 188 1 215 10 34 34 116 5 293 16 170 3 275 2 274 5 296 1 172 5 118 3 57 3 37 2 322 5 85 1 278 1 119 1 279 5 14 1 245 1 299 5 155 3 225 7 91 5 107 1 108 1 109 3 46 1 182 4 
287 2 159 4 215 2 34 8 116 1 99 1 293 4 274 1 275 1 172 1 296 1 57 1 118 1 322 1 278 1 85 1 299 1 155 1 225 2 91 1 107 1 46 1 182 1 
130 1 287 3 159 5 215 4 34 11 116 1 99 1 293 6 170 1 275 1 274 2 296 1 172 2 118 1 57 1 322 2 85 1 278 1 279 1 245 1 299 2 225 2 155 1 107 1 91 2 108 1 46 1 182 2 
130 2 287 4 159 10 8 1 215 6 34 19 116 3 99 1 293 9 170 2 275 1 274 3 296 1 172 3 118 1 57 1 322 3 37 1 85 1 278 1 84 1 39 1 279 1 299 3 155 1 225 3 44 1 91 3 107 1 108 1 109 2 46 1 182 1 
130 2 287 5 159 7 8 1 215 6 34 17 116 2 99 1 293 10 170 2 275 1 274 3 296 1 172 3 118 1 57 1 37 1 322 3 85 1 278 1 84 1 39 1 279 2 299 3 155 1 225 3 44 1 91 3 107 1 108 1 109 1 46 1 182 1 
287 2 159 4 215 2 34 8 116 1 99 1 293 4 274 1 275 1 172 1 296 1 57 1 118 1 322 1 278 1 85 1 299 1 155 1 225 2 91 1 107 1 46 1 182 1 
130 2 287 2 159 6 8 1 215 2 34 12 116 2 99 1 293 6 170 2 274 1 296 1 172 2 322 1 84 1 39 1 279 1 299 1 155 1 225 1 44 1 91 1 107 1 109 2 182 1 
130 2 287 5 159 8 8 1 215 8 34 18 116 2 99 1 293 10 170 2 275 1 274 4 296 1 172 3 118 1 57 1 322 4 37 2 85 1 278 1 84 1 39 1 279 2 299 4 44 1 155 1 225 3 91 4 107 1 108 1 109 1 46 1 182 1 
130 3 287 6 159 7 8 1 215 8 34 16 116 2 99 1 293 9 170 3 274 4 296 1 172 3 322 4 37 2 84 1 39 1 279 3 14 1 299 4 44 1 155 1 225 3 107 1 91 4 109 2 182 1 
287 6 172 1 57 3 118 3 159 4 278 1 85 2 279 3 34 7 116 1 225 3 293 3 275 1 
130 2 287 4 159 8 8 1 215 8 34 18 116 2 99 1 293 10 170 2 275 1 274 4 296 1 172 3 118 1 57 1 322 4 37 2 85 1 278 1 84 1 39 1 279 1 14 1 299 4 44 1 155 1 225 3 107 1 91 4 109 1 46 1 182 1 
172 1 287 3 57 1 118 1 159 4 322 2 37 1 278 1 85 1 279 1 299 2 215 4 34 8 116 1 293 4 225 2 91 2 275 1 274 2 46 1 
172 1 287 2 118 1 57 1 159 3 34 6 116 1 85 1 278 1 293 3 225 2 150 1 275 1 46 1 
287 2 130 1 172 1 159 2 322 1 279 1 299 1 215 2 34 4 116 1 225 1 293 2 91 1 109 1 108 1 170 1 274 1 
296 1 130 1 172 1 287 2 159 4 279 1 245 1 34 7 116 1 225 1 155 1 293 3 109 1 170 1 182 2 
287 9 130 2 159 12 188 1 216 1 215 4 34 23 116 3 293 11 170 2 275 1 274 2 172 3 118 2 57 2 37 2 322 2 85 1 278 1 279 4 245 1 299 2 17 1 155 2 225 5 91 2 109 2 46 1 182 2 
159 1 34 1 182 1 
34 1 293 1 155 1 
130 1 172 1 287 3 159 3 322 1 279 1 299 1 215 2 34 6 116 1 293 3 225 2 91 1 345 1 108 1 170 1 109 1 274 1 
130 2 287 2 159 6 8 1 215 2 34 12 116 2 99 1 293 6 170 2 274 1 296 1 172 2 322 1 84 1 39 1 279 1 299 1 155 1 225 1 44 1 91 1 107 1 109 2 182 1 
172 1 287 2 57 1 118 1 159 3 279 1 34 6 116 1 293 3 225 1 275 1 
287 2 118 1 57 1 159 2 37 1 322 1 85 1 278 1 279 1 299 1 188 1 215 2 34 3 293 1 225 1 91 1 274 1 
314 1 250 1 288 1 49 1 20 1 331 1 68 1 
27 1 288 1 298 1 68 1 137 1 250 1 314 1 49 1 20 1 36 1 331 1 307 1 
348 1 1 1 120 4 200 1 124 4 151 1 95 4 283 1 218 1 169 1 24 1 226 1 55 1 
194 1 63 1 1 1 120 2 200 1 30 1 136 1 262 1 124 2 95 2 43 1 169 2 55 1 308 1 
95 1 151 1 353 1 1 1 238 1 120 1 169 1 229 1 258 1 124 1 
95 2 48 1 255 1 144 1 283 1 1 1 120 2 169 1 200 1 55 1 124 2 
144 1 348 1 64 1 1 2 120 5 200 3 136 1 124 4 151 1 95 5 283 1 218 1 208 1 169 2 24 1 55 2 
193 1 144 1 348 1 1 2 120 5 200 3 136 1 124 4 151 1 95 5 283 1 218 1 208 1 169 2 24 1 55 2 
95 1 151 1 348 1 1 1 120 1 169 1 200 1 24 1 150 1 55 1 124 1 
276 1 60 1 288 2 176 1 1 1 120 1 200 1 68 1 124 1 151 1 95 1 250 1 314 2 43 1 169 1 344 1 55 1 347 1 
63 1 1 1 120 1 200 1 136 1 41 1 124 1 95 1 43 1 53 1 169 2 55 1 308 1 
276 1 60 1 288 2 176 1 1 1 120 1 200 1 68 1 124 1 151 1 95 1 250 1 314 2 43 1 169 1 55 1 347 1 11 1 
111 1 288 2 74 1 1 1 136 1 95 1 314 2 140 1 169 1 11 1 347 2 55 2 276 1 60 1 12 1 176 1 120 1 200 3 105 1 68 1 124 1 250 2 43 2 
111 1 288 2 74 1 1 1 136 1 95 2 314 2 140 1 169 1 344 1 347 2 55 2 276 1 60 1 12 1 176 1 120 2 200 3 105 1 68 1 124 2 250 2 43 2 226 1 
103 1 111 1 161 1 289 2 62 1 243 1 1 1 104 1 120 3 200 4 105 1 136 1 281 1 124 3 151 1 95 3 69 1 43 1 154 2 169 1 81 1 226 1 55 1 
103 1 111 1 161 1 289 2 243 1 1 1 120 3 200 4 105 1 136 1 281 1 124 3 151 1 95 3 69 1 43 1 152 1 154 2 169 1 81 1 226 1 55 1 
95 1 1 1 120 1 169 1 291 1 124 1 
232 1 255 1 144 1 64 1 63 1 1 2 120 7 200 3 291 1 41 1 124 6 151 2 95 7 43 1 53 1 283 1 35 1 208 1 169 3 55 2 308 1 
1 1 235 1 95 1 7 1 314 2 143 1 11 1 274 2 55 1 275 1 57 1 276 1 60 1 322 2 278 1 324 2 200 1 15 1 68 2 249 1 250 1 283 1 287 2 159 3 288 2 33 1 166 1 215 4 34 6 116 1 169 1 293 3 347 1 172 1 118 1 261 1 176 1 85 1 120 1 299 2 87 1 124 1 43 1 266 2 225 2 91 2 46 1 
231 1 
1 1 120 2 200 2 291 1 41 1 124 2 95 2 69 1 43 1 283 1 169 2 55 1 156 1 
113 1 29 1 244 1 121 1 68 1 
231 1 288 1 74 2 289 1 290 1 113 1 312 1 29 1 314 1 272 1 140 1 219 1 347 1 60 1 12 1 321 1 244 1 121 1 281 1 89 1 250 1 70 1 251 1 154 1 25 1 181 1 
314 1 250 1 288 1 196 1 265 1 113 1 29 1 305 1 121 1 
70 1 251 1 29 1 
139 1 86 1 
335 1 66 3 86 1 148 4 106 2 325 4 51 2 282 1 167 1 9 1 10 1 228 1 254 1 82 2 
233 1 277 1 148 1 86 1 106 1 325 1 139 1 79 1 
148 1 86 1 325 1 139 1 153 1 10 1 254 1 
77 2 66 2 23 1 114 1 
139 1 
236 1 139 1 86 1 148 1 106 1 325 1 
294 1 
139 1 
51 1 66 1 150 1 82 1 
51 1 335 1 66 1 148 1 228 1 82 1 325 1 
117 1 355 1 148 1 
148 1 86 1 325 1 139 1 167 1 10 1 254 1 
51 1 335 1 66 1 148 2 106 1 228 1 82 1 257 1 325 2 
139 1 
139 1 
139 1 
56 1 139 1 
309 1 66 1 86 1 148 2 106 2 325 2 236 1 139 1 282 1 9 1 
353 1 139 1 229 1 
66 1 86 1 148 2 106 2 4 1 257 1 325 2 139 1 282 1 9 1 
139 1 86 1 148 1 10 1 325 1 
282 1 9 1 66 1 86 1 
66 1 82 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 82 (63,378) (63,378) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 82 (63,378) (63,378) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 82 (63,378) (63,378) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 82 (63,378) (63,378) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (64,78,325) (155,214,337) (155,214,337) (155,214,337) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 144 284 10 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 9 (72,119) (72,119) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (64,78,325) (64,78,325) (64,78,325) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 339 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 144 284 10 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 144 3 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 1 133 1 210 1 82 1 378 1 202 1 249 1 156 1 186 1 259 1 113 1 
63 1 133 1 210 1 82 1 378 1 202 1 249 1 156 1 186 1 259 1 113 1 
63 1 133 1 210 1 82 1 378 1 202 1 249 1 156 1 186 1 259 1 113 1 
63 1 133 1 210 1 82 1 378 1 202 1 249 1 156 1 186 1 259 1 113 1 
1 3 96 3 143 1 156 1 249 4 332 1 183 1 113 1 130 1 375 2 34 1 133 1 174 1 106 1 175 1 202 4 256 2 8 1 
96 1 11 1 210 1 143 1 156 1 249 2 277 1 183 1 113 1 191 1 133 1 174 1 106 1 105 1 202 2 186 1 
1 1 96 2 143 1 156 2 249 3 332 1 113 2 375 1 133 1 377 1 106 1 202 3 186 1 
1 7 327 1 96 5 143 1 332 3 174 1 336 1 106 1 175 1 8 1 53 1 249 9 156 2 183 1 113 2 130 1 375 4 133 1 34 1 164 1 377 1 202 9 186 1 256 2 
1 7 327 1 96 5 143 1 332 3 174 1 336 1 106 1 175 1 8 1 53 1 249 9 156 2 183 1 113 2 130 1 375 4 133 1 34 1 164 1 377 1 202 9 186 1 256 2 
251 1 99 1 371 1 
47 2 262 1 371 1 
7 2 228 2 100 2 55 1 335 2 361 2 370 1 279 2 
260 2 71 1 208 1 228 2 72 1 42 1 231 1 118 1 97 2 238 1 7 3 100 2 269 1 335 2 361 3 51 1 243 1 109 1 178 1 9 1 338 1 29 1 54 1 55 1 370 1 182 2 279 2 252 1 304 1 65 1 115 1 348 2 282 1 307 2 20 1 167 1 226 1 
76 1 7 1 228 1 100 1 335 1 111 1 361 1 370 1 279 1 314 1 
228 1 4 1 13 1 371 1 15 1 99 1 76 1 7 1 360 1 26 1 361 1 134 1 323 1 286 1 
228 1 4 1 13 1 371 1 279 1 15 1 99 1 76 1 100 1 7 1 360 1 335 1 361 1 323 2 286 2 
112 1 323 1 124 1 358 1 286 1 
99 1 112 1 5 1 323 2 124 1 211 1 371 1 286 2 
112 1 323 1 286 1 
228 1 111 1 124 1 370 1 172 1 279 1 76 1 100 1 7 1 335 1 361 1 323 1 314 1 286 1 
371 1 
99 1 315 1 112 1 5 1 323 2 124 1 371 1 286 2 
340 2 189 1 288 1 112 2 328 1 5 1 124 2 371 1 157 1 46 2 160 2 99 1 122 1 163 1 322 1 323 5 21 1 286 5 70 1 
251 1 55 1 
228 2 55 2 274 1 279 1 145 1 7 2 100 1 335 1 361 2 
227 1 293 1 181 1 
260 1 9 1 338 1 54 1 208 1 55 1 118 1 97 1 304 1 7 1 269 1 361 1 348 1 115 1 20 1 92 1 
338 1 79 1 260 1 9 1 54 1 208 1 228 1 118 1 97 1 304 1 100 1 7 2 269 1 293 1 376 1 335 1 115 1 361 2 348 1 20 1 
7 3 228 3 100 3 55 1 376 1 335 3 361 3 279 1 
76 1 7 1 228 1 100 1 335 1 111 1 361 1 
76 1 7 1 228 1 100 1 335 1 361 1 274 1 279 1 145 1 
0 1 260 1 71 1 208 1 72 1 228 3 42 1 118 1 4 1 43 1 97 1 76 1 238 1 7 4 100 3 360 1 269 1 335 3 361 4 243 1 178 1 338 1 9 1 79 1 29 1 54 1 55 1 274 1 13 1 370 1 182 1 279 2 15 1 252 1 304 1 376 1 115 1 348 1 323 1 282 1 307 2 20 1 167 1 286 1 
7 2 228 2 100 1 55 1 335 1 376 1 26 1 361 2 187 1 
79 1 228 3 274 1 4 1 43 1 13 1 371 1 279 1 15 1 76 1 360 1 100 3 7 3 376 2 335 3 361 3 323 1 286 1 379 1 
227 1 228 2 274 1 279 1 100 2 7 2 376 1 335 2 293 1 361 2 
260 1 9 1 338 1 54 1 208 1 55 1 118 1 97 1 304 1 7 1 269 1 361 1 348 1 115 1 20 1 
260 1 338 1 54 1 55 1 246 1 58 1 118 1 97 1 304 1 7 1 269 1 361 1 348 1 115 1 20 1 
71 1 227 2 229 1 42 1 234 1 173 1 238 1 48 1 293 2 243 1 244 1 109 2 178 2 29 1 181 2 182 4 158 1 197 1 252 1 373 1 185 1 36 1 307 2 206 1 
60 1 
79 1 228 5 55 1 274 1 279 1 100 4 7 5 376 2 335 4 26 1 361 5 199 1 349 1 187 1 
76 1 7 1 228 1 100 1 335 1 111 1 361 1 60 1 
141 1 311 1 
141 1 311 1 
310 1 356 1 
310 1 356 1 
310 1 356 1 
141 1 311 1 121 1 
141 1 311 1 121 1 
141 1 104 1 311 1 
141 2 224 1 310 1 356 1 311 2 180 1 
141 1 311 1 121 1 
141 1 89 1 311 1 
141 1 89 1 311 1 
141 1 89 1 311 1 
141 2 287 1 180 1 371 1 127 2 25 1 114 1 212 1 223 2 88 1 200 1 294 2 311 2 323 2 107 2 324 2 193 1 27 3 286 2 
228 2 209 1 141 1 264 1 100 2 7 2 335 2 361 2 104 1 311 1 107 1 27 1 176 1 30 1 216 1 55 1 316 1 127 1 114 1 223 1 321 1 323 1 324 1 286 1 
174 1 183 1 8 1 
174 1 105 1 183 1 
147 1 221 1 309 1 174 3 105 1 8 2 
221 1 281 1 309 1 174 2 105 1 8 1 
221 1 309 2 174 2 105 1 8 1 
262 1 209 1 188 2 234 1 288 1 264 1 5 1 359 2 46 1 47 3 99 1 122 2 295 1 108 1 179 1 30 1 340 1 112 1 124 4 248 1 371 2 197 1 373 1 160 1 132 2 346 1 323 5 136 1 21 3 206 1 286 5 353 1 
262 3 232 1 234 3 288 1 5 1 45 1 358 5 359 6 46 2 150 1 47 9 99 1 267 1 122 6 242 1 108 3 297 1 30 4 340 2 112 6 124 7 248 2 371 5 197 3 303 5 373 3 160 2 132 6 163 1 323 9 136 1 21 8 206 3 286 9 353 2 
262 2 188 1 234 1 46 1 359 2 99 1 47 4 122 2 295 1 108 1 30 1 340 1 124 2 248 1 371 3 197 1 160 1 373 1 132 2 346 1 163 1 323 3 21 3 206 1 286 3 353 1 
262 3 188 2 232 1 234 2 45 1 359 4 46 1 99 1 47 7 122 4 242 1 295 1 108 2 30 2 340 1 124 3 248 1 371 4 197 2 160 1 373 2 132 4 163 1 346 1 323 4 21 5 206 2 286 4 353 1 
251 1 237 1 20 1 
20 1 245 1 
41 1 
269 1 20 1 
237 2 269 1 115 1 195 1 20 3 75 1 
269 1 115 1 20 1 
20 1 266 1 
326 1 139 2 218 1 170 1 182 7 302 1 197 1 33 1 318 1 185 2 320 1 306 1 244 3 206 1 178 3 109 4 93 1 
326 1 139 2 218 1 170 1 182 7 302 1 197 1 33 1 318 1 185 2 320 1 306 1 244 3 206 1 178 3 109 4 93 1 
326 1 139 2 218 1 170 1 182 7 302 1 197 1 33 1 318 1 185 2 320 1 306 1 244 3 206 1 22 1 178 3 109 4 93 1 
71 1 326 2 139 3 42 1 234 3 263 1 329 1 170 1 331 1 238 1 108 3 244 10 178 15 109 16 153 1 247 3 342 4 218 1 182 31 302 2 197 4 33 5 345 1 252 1 373 3 318 1 319 1 185 5 320 2 347 1 306 2 307 2 206 4 93 1 
71 2 326 1 42 2 139 2 98 1 238 2 244 4 109 5 178 4 218 1 182 9 302 1 197 1 129 1 33 1 252 2 318 1 319 1 185 3 320 1 306 1 307 4 206 1 93 1 
207 1 367 1 333 1 214 1 133 1 78 1 12 1 123 1 155 1 202 1 249 1 156 1 186 1 337 1 113 1 
260 1 207 1 1 2 96 1 118 1 143 1 97 1 147 1 333 1 78 1 174 2 106 1 105 1 8 1 337 1 367 1 56 1 12 1 155 1 249 3 156 1 196 1 183 1 113 1 304 1 348 1 165 1 202 3 186 1 351 1 
260 1 1 2 96 1 118 1 143 1 97 1 147 1 333 1 78 1 174 2 106 1 105 1 8 1 367 1 56 1 12 1 155 1 249 2 196 1 183 1 304 1 348 1 165 1 202 2 186 1 
260 1 94 1 118 1 97 1 333 2 77 1 269 1 49 1 240 1 365 1 54 1 367 2 12 2 249 1 156 1 113 1 304 1 87 1 348 1 202 1 186 2 20 1 351 1 
260 1 207 1 118 1 97 1 147 1 333 1 214 1 78 1 174 2 105 1 8 1 337 1 367 1 12 1 155 1 249 1 156 1 196 1 183 1 113 1 304 1 133 1 348 1 165 1 202 1 186 1 
28 1 
40 1 228 1 288 1 4 1 5 3 97 2 46 1 99 1 47 2 7 1 49 1 50 1 152 2 54 2 340 1 112 6 59 2 13 1 248 1 15 1 160 1 304 1 17 1 348 2 255 1 21 2 20 1 260 2 354 1 262 2 261 1 116 4 118 1 120 2 265 1 76 1 122 2 360 1 269 1 77 1 26 1 361 1 271 1 312 1 177 1 32 1 125 1 126 2 371 2 85 2 134 1 323 5 91 2 39 2 286 5 
354 1 228 1 116 2 4 1 5 1 265 1 76 1 7 1 360 1 26 1 361 1 271 1 177 1 315 1 32 1 112 2 13 1 15 1 85 1 134 1 323 3 286 3 
354 1 228 1 116 3 4 1 5 1 265 1 76 1 99 1 7 1 360 1 26 1 361 1 271 1 177 1 152 1 315 1 112 1 32 1 13 1 371 1 15 1 134 1 323 3 286 3 
354 1 228 1 116 3 4 1 5 1 265 1 76 1 99 1 7 1 360 1 26 1 361 1 271 1 177 1 152 1 315 1 32 1 112 2 13 1 126 1 371 1 15 1 85 1 134 1 323 3 286 3 
228 1 288 1 4 1 5 3 6 1 46 1 99 5 7 1 152 4 194 1 340 1 112 7 13 1 59 2 343 1 15 1 160 1 17 1 21 1 354 1 261 1 262 2 116 6 120 2 265 1 76 1 360 1 122 1 26 1 361 1 271 1 177 1 315 1 81 1 32 1 126 4 371 5 220 1 85 4 134 1 323 5 91 2 39 2 286 5 
228 1 288 1 4 1 5 2 46 1 47 2 99 1 7 1 152 2 340 1 112 4 13 1 59 2 15 1 17 1 160 1 21 1 354 1 261 1 262 2 116 4 120 2 265 1 76 1 360 1 122 1 26 1 361 1 271 1 177 1 32 1 125 1 126 2 371 2 85 2 134 1 323 4 91 2 39 2 286 4 
354 1 262 2 261 1 228 1 116 4 288 1 4 1 5 2 120 2 265 1 46 1 99 1 76 1 122 1 7 1 360 1 26 1 361 1 271 1 177 1 152 2 194 1 340 1 112 4 32 1 59 2 13 1 126 2 343 1 371 1 15 1 220 1 85 2 17 1 160 1 134 1 323 4 91 2 39 2 21 1 286 4 
354 1 262 2 261 1 228 1 116 4 288 1 4 1 5 2 120 2 265 1 46 1 99 1 76 1 122 1 7 1 360 1 26 1 361 1 271 1 177 1 152 2 194 1 340 1 112 4 32 1 59 2 13 1 126 2 343 1 371 1 15 1 220 1 85 2 17 1 160 1 134 1 323 4 91 2 39 2 21 1 286 4 
354 1 261 1 228 1 230 1 116 4 288 1 4 1 5 2 169 2 265 1 46 1 236 1 99 1 47 2 76 1 122 1 7 1 360 1 26 1 361 1 271 1 177 1 152 2 340 1 112 4 32 1 59 2 13 1 126 2 343 1 371 1 275 2 15 1 85 2 160 1 134 1 323 4 67 1 39 2 21 1 286 4 
354 1 262 2 261 1 228 1 116 5 288 1 4 1 5 2 6 1 120 2 265 1 46 1 99 1 76 1 122 1 7 1 360 1 26 1 361 1 271 1 177 1 152 3 194 1 340 1 32 1 112 5 59 2 13 1 343 1 126 3 371 1 15 1 220 1 85 3 17 1 160 1 134 1 323 4 91 2 39 2 21 1 286 4 
354 1 262 2 261 1 228 1 116 5 288 1 4 1 5 2 6 1 120 2 265 1 46 1 99 1 76 1 122 1 7 1 360 1 26 1 361 1 271 1 177 1 152 3 194 1 340 1 32 1 112 5 59 2 13 1 343 1 126 3 371 1 15 1 220 1 85 3 17 1 160 1 134 1 323 4 91 2 39 2 21 1 286 4 
228 1 288 1 4 1 5 2 46 1 47 2 99 1 7 1 152 2 340 1 112 4 13 1 59 2 15 1 160 1 67 1 21 1 354 1 261 1 116 4 169 2 265 1 76 1 360 1 122 1 26 1 361 1 271 1 177 1 32 1 125 1 126 2 275 2 371 1 85 2 134 1 323 4 39 2 286 4 
71 1 227 1 42 1 139 1 238 1 293 1 243 1 244 2 109 3 178 3 29 1 55 2 218 1 181 1 182 6 197 1 251 1 252 1 318 1 185 2 320 1 36 1 306 1 307 2 206 1 93 1 
71 2 227 4 23 1 42 2 234 1 263 1 238 2 293 11 102 1 51 1 243 1 244 2 108 2 178 6 109 8 29 2 55 1 342 3 247 3 181 11 182 14 197 2 33 1 374 1 252 2 373 2 185 1 347 1 66 1 282 1 307 4 205 1 206 1 
260 1 71 1 208 1 227 1 228 1 42 1 118 1 97 1 238 1 7 2 100 1 269 1 239 1 335 1 361 2 243 1 51 1 366 1 178 1 109 1 338 1 9 1 79 1 54 1 29 1 55 1 182 2 304 1 252 1 376 1 66 1 115 1 348 1 282 1 201 1 307 2 20 1 92 1 
227 7 228 1 139 1 42 3 234 2 97 3 100 1 7 3 238 3 335 1 293 7 103 1 51 1 243 3 108 2 244 8 109 10 9 2 338 2 54 1 299 1 55 2 300 1 197 3 252 3 304 2 66 1 165 1 348 3 115 2 306 1 166 2 307 6 20 2 206 3 204 2 260 3 71 3 208 2 72 2 119 2 118 2 269 2 361 3 178 10 79 1 29 3 218 1 181 7 182 20 33 4 373 2 318 1 185 4 35 2 320 1 376 1 282 1 93 1 
260 3 71 2 228 1 42 2 118 1 144 1 97 3 7 1 100 1 238 2 77 1 269 1 335 1 361 1 49 1 123 1 243 2 51 1 109 1 178 1 54 2 29 2 10 1 182 2 84 1 304 1 252 2 376 1 65 1 348 3 36 1 282 1 307 4 20 1 284 1 352 1 
71 1 227 1 228 1 42 1 234 1 238 1 100 1 7 1 293 1 335 1 361 1 243 1 244 1 108 1 109 1 178 2 29 1 274 1 181 1 182 3 279 1 197 1 252 1 373 1 185 1 66 1 135 1 307 2 206 1 
29 1 71 1 227 1 42 1 181 1 182 2 197 1 33 1 252 1 373 1 238 1 48 1 293 1 36 1 243 1 307 2 244 1 109 2 
29 1 71 1 227 1 42 1 234 1 181 1 182 2 158 1 252 1 238 1 185 1 293 1 36 1 243 1 307 2 244 1 206 1 178 2 
71 1 227 2 42 1 234 1 238 1 293 2 243 1 108 1 244 2 109 2 178 2 29 1 181 2 182 4 197 1 33 1 373 1 252 1 185 1 36 1 307 2 206 1 
29 1 71 1 227 1 42 1 181 1 182 2 84 1 197 1 33 1 252 1 373 1 238 1 48 1 293 1 243 1 307 2 244 1 109 2 
29 1 71 1 227 1 42 1 234 1 181 1 182 2 158 1 84 1 252 1 238 1 185 1 293 1 243 1 307 2 244 1 206 1 178 2 
71 1 227 2 42 1 234 1 238 1 293 2 243 1 108 1 244 2 109 2 178 2 29 1 181 2 182 4 197 1 84 1 33 1 373 1 252 1 185 1 307 2 206 1 
71 1 227 2 42 1 234 1 238 1 293 2 243 1 108 1 244 2 109 2 178 2 29 1 181 2 182 4 197 1 33 1 373 1 252 1 185 1 307 2 206 1 
260 1 71 1 208 1 72 1 42 1 118 1 97 1 7 1 238 1 269 1 361 1 51 1 243 1 109 1 178 1 338 1 9 1 54 1 29 1 55 1 182 2 304 1 252 1 115 1 348 1 282 1 307 2 20 1 
260 1 71 1 42 1 355 1 118 1 97 1 7 1 238 1 269 1 361 1 51 1 243 1 109 1 178 1 338 1 54 1 29 1 55 1 58 1 246 1 182 2 304 1 252 1 115 1 348 1 282 1 307 2 20 1 
71 1 227 2 42 1 234 1 238 1 293 2 243 1 108 1 244 2 109 2 178 2 29 1 181 2 182 4 197 1 33 1 373 1 252 1 185 1 66 1 307 2 206 1 
9 1 72 1 119 1 123 1 
71 1 227 1 228 1 42 1 234 1 238 1 100 1 7 1 335 1 293 1 361 1 243 1 244 1 108 1 178 1 109 2 29 1 274 1 181 1 182 3 279 1 197 1 33 1 252 1 373 1 280 1 66 1 307 2 206 1 
71 2 42 2 73 2 234 3 263 1 291 1 24 1 146 2 238 2 292 1 241 1 108 3 244 6 178 10 109 9 80 1 301 1 342 2 247 1 182 19 129 1 197 3 33 3 252 2 373 3 185 3 347 1 203 1 307 4 206 3 
71 3 42 3 73 4 234 2 291 1 146 1 238 3 292 2 334 1 241 1 52 1 244 4 108 3 296 1 178 12 109 14 31 1 301 2 342 2 247 2 128 1 182 26 129 1 184 1 197 3 33 2 252 3 373 3 319 2 185 2 347 2 203 1 307 6 206 2 
42 3 139 1 234 4 291 1 146 1 238 3 292 2 334 1 241 1 244 8 108 4 52 1 296 1 109 20 298 1 301 1 247 3 342 4 197 5 252 3 347 3 306 1 307 6 203 1 206 5 71 3 73 4 263 1 24 1 178 21 31 1 218 1 128 1 182 41 129 1 184 1 33 4 373 4 318 1 319 1 185 4 320 1 93 1 
71 4 139 1 42 4 73 4 234 3 263 1 291 1 24 1 146 1 238 4 292 2 334 1 241 1 52 1 108 4 244 7 296 1 178 18 109 20 298 1 31 1 301 1 342 4 247 3 218 1 128 1 182 38 184 1 129 1 197 5 33 3 252 4 373 4 318 1 319 2 185 4 320 1 347 3 306 1 203 1 307 8 206 4 93 1 
71 2 139 1 42 2 73 4 234 7 263 2 291 1 146 1 238 2 292 1 334 1 241 1 52 1 108 7 244 14 296 1 178 25 109 27 31 1 301 1 342 4 247 4 218 1 128 1 182 52 184 1 129 1 197 8 33 7 252 2 373 7 318 1 319 1 185 7 320 1 347 2 306 1 203 1 307 4 205 2 206 8 93 1 
141 1 223 1 88 1 311 1 180 1 107 1 171 1 324 1 127 1 25 1 
104 1 176 1 
141 1 223 1 311 1 37 1 107 1 250 1 324 1 127 1 190 1 
141 1 287 1 180 1 371 1 127 1 25 1 114 1 212 1 223 1 88 1 200 1 294 1 323 1 311 1 107 1 324 1 27 2 286 1 
141 1 287 1 180 1 371 1 127 1 25 1 114 1 212 1 223 1 88 1 200 1 294 1 323 1 311 1 107 1 324 1 27 2 286 1 
141 1 287 1 180 1 371 1 127 1 25 1 114 1 212 1 223 1 88 1 200 1 294 1 323 1 311 1 107 1 324 1 27 2 286 1 
224 1 257 1 121 1 
224 1 257 1 121 1 
18 1 89 1 
18 1 89 1 224 1 
216 1 321 1 
228 2 209 1 117 1 141 1 264 1 212 1 7 2 100 2 335 2 361 2 294 1 104 1 311 1 107 1 27 1 176 1 30 1 216 1 55 1 316 1 124 1 127 1 223 1 321 1 323 1 324 1 286 1 
257 1 121 1 
18 1 89 1 224 1 
260 2 71 1 228 2 42 1 118 1 142 1 144 1 97 2 213 1 7 2 238 1 269 1 361 2 243 1 51 1 109 1 178 1 29 1 217 1 182 2 304 1 252 1 65 2 66 1 348 2 90 1 282 1 307 2 20 1 68 1 352 1 
207 1 260 1 325 1 367 1 64 1 78 1 348 1 165 1 123 1 61 1 97 1 
260 1 207 1 110 1 367 1 118 1 196 1 183 1 97 1 147 1 304 1 64 1 78 1 165 1 348 1 174 2 105 1 8 1 
260 1 54 1 367 1 118 1 61 1 372 1 97 1 304 1 269 1 87 1 77 1 348 1 49 1 20 1 
260 1 207 1 325 1 367 1 118 1 196 1 183 1 61 1 97 1 147 1 304 1 64 1 78 1 165 1 348 1 174 2 105 1 8 1 
276 1 
251 1 99 1 122 1 189 1 328 1 371 1 21 1 
262 1 288 1 5 1 120 1 46 1 47 1 99 1 122 1 340 1 112 1 371 2 17 1 160 1 323 1 91 1 21 1 286 1 
189 1 288 4 234 2 328 1 5 3 330 2 97 1 46 4 99 2 237 2 47 12 50 1 108 2 245 3 54 1 339 1 340 4 57 2 112 5 248 2 197 2 304 1 160 4 198 2 115 1 348 1 350 2 166 2 21 9 20 6 206 2 260 1 262 6 118 2 75 1 359 6 360 2 122 8 269 1 270 1 123 1 363 2 273 1 371 8 373 2 131 1 132 6 323 5 38 2 283 2 286 5 
262 3 288 2 234 2 330 1 5 1 359 5 46 2 47 6 99 2 122 5 101 1 334 1 50 1 108 2 296 1 31 1 340 2 112 1 342 1 247 1 317 1 248 1 371 5 128 1 184 1 197 2 160 2 373 2 132 5 347 1 323 1 283 2 21 8 206 2 286 1 
228 1 2 1 288 1 330 1 172 1 46 1 76 1 7 1 122 2 100 1 335 1 361 1 314 1 194 1 340 1 111 1 370 1 279 1 197 2 160 1 318 1 320 1 323 1 306 1 283 2 21 2 206 1 286 1 
340 1 189 1 288 1 328 1 371 1 46 1 160 1 99 1 122 1 21 1 
262 5 234 2 330 1 371 5 197 2 359 5 373 2 47 10 122 5 132 5 166 1 283 2 108 2 21 5 206 2 
99 1 112 1 323 1 5 1 371 1 286 1 
40 1 260 4 118 1 288 1 5 2 97 4 357 1 46 2 122 2 269 1 77 1 49 1 50 2 54 2 340 2 112 4 248 2 304 1 160 2 131 1 163 1 305 1 348 4 255 1 323 3 20 1 21 2 138 2 286 3 
260 1 71 1 208 1 228 2 72 1 42 1 118 1 97 1 238 1 7 3 100 2 269 1 335 2 361 3 243 1 178 1 9 1 338 1 54 1 29 1 55 1 370 1 182 1 279 2 252 1 304 1 348 1 115 1 282 1 307 2 20 1 167 1 
262 2 340 1 139 1 288 1 248 1 371 4 359 2 46 1 160 1 47 4 99 2 132 2 122 2 50 1 21 1 
362 1 107 1 324 1 
362 1 107 1 324 1 
216 1 88 1 107 1 324 1 62 1 
362 1 107 1 324 1 
95 1 107 1 324 1 
95 1 107 1 324 1 
95 1 107 1 324 1 
107 1 324 1 
141 1 311 1 
71 2 139 1 42 2 218 1 182 8 197 1 33 1 252 2 318 1 238 2 319 1 185 2 320 1 306 1 307 4 244 3 206 1 178 4 109 4 93 1 
139 1 218 1 182 6 197 1 251 1 318 1 185 2 320 1 306 1 244 2 206 1 178 3 109 3 93 1 
71 1 42 1 234 1 154 1 182 4 197 1 33 1 252 1 373 1 238 1 185 1 307 2 244 2 108 1 206 1 178 2 109 2 
234 1 342 2 247 1 263 1 182 7 197 1 33 1 373 1 185 1 347 1 108 1 244 2 206 1 178 4 109 3 
71 2 139 1 42 2 234 2 263 1 235 1 238 2 102 1 244 9 108 2 109 11 178 12 247 2 342 2 218 1 182 23 197 3 33 4 373 2 252 2 318 1 319 2 185 5 320 2 306 2 307 4 206 3 205 1 93 1 
342 1 182 1 178 1 
247 1 182 1 109 1 
71 1 42 1 234 1 154 1 182 6 197 1 33 1 252 1 373 1 238 1 185 2 166 1 307 2 108 1 244 3 206 1 178 3 109 3 
71 1 42 1 234 2 238 1 334 1 108 2 244 2 296 1 178 6 109 6 31 1 247 1 342 1 128 1 182 12 184 1 129 1 197 2 33 1 252 1 373 2 185 1 347 1 307 2 206 2 
318 1 185 1 320 1 306 1 244 2 182 6 206 1 178 3 109 3 197 1 33 1 
71 1 42 1 235 1 218 1 182 3 33 1 252 1 319 1 238 1 185 1 320 1 306 1 307 2 244 2 109 1 178 2 93 1 
71 1 42 1 2 1 182 10 129 1 197 2 33 2 252 1 318 1 238 1 185 3 320 2 306 2 307 2 244 5 206 2 109 5 178 5 
71 1 42 1 182 2 129 1 197 1 33 1 252 1 373 1 238 1 307 2 244 1 109 2 
71 1 42 1 234 1 182 4 129 1 197 1 33 1 252 1 373 1 238 1 185 1 307 2 244 2 108 1 206 1 178 2 109 2 
71 3 42 3 235 1 182 3 24 1 129 1 33 1 252 3 319 1 238 3 185 1 320 1 306 1 307 6 244 2 178 2 109 1 
71 5 139 1 42 5 234 3 263 1 235 1 329 1 24 1 238 5 108 3 244 12 178 18 109 16 153 1 342 4 154 1 247 3 218 1 182 34 129 1 197 5 33 5 345 1 252 5 373 3 318 2 319 2 185 7 320 3 347 1 306 3 307 10 206 5 93 1 
71 1 139 1 42 1 238 1 244 2 178 4 109 4 247 1 342 1 218 1 182 8 197 1 184 1 129 1 252 1 318 1 185 2 320 1 347 1 306 1 307 2 206 1 93 1 
71 2 139 1 42 2 263 1 238 2 108 1 244 3 178 5 109 6 342 2 154 1 247 1 218 1 182 11 184 1 129 1 197 2 33 1 252 2 373 1 318 1 185 2 320 1 347 1 306 1 307 4 206 1 93 1 
71 3 139 1 42 3 234 2 238 3 334 1 108 2 244 4 296 1 178 10 109 9 31 1 154 1 247 1 342 1 218 1 128 1 182 19 184 1 129 1 197 3 33 1 252 3 373 2 318 1 319 1 185 3 320 1 347 1 306 1 307 6 206 3 93 1 
71 3 139 1 42 3 234 1 238 3 334 1 108 2 244 5 296 1 178 7 109 10 31 1 154 1 247 1 342 1 218 1 128 1 182 17 184 1 129 1 197 3 33 2 252 3 373 2 318 1 319 1 185 3 320 1 347 1 306 1 307 6 206 2 93 1 
71 1 139 1 42 1 238 1 244 2 178 4 109 4 247 1 342 1 218 1 182 8 197 1 184 1 129 1 252 1 318 1 185 2 320 1 347 1 306 1 307 2 206 1 93 1 
71 1 42 1 234 2 238 1 334 1 108 2 244 2 296 1 178 6 109 6 31 1 247 1 342 1 128 1 182 12 184 1 129 1 197 2 33 1 252 1 373 2 185 1 347 1 307 2 206 2 
71 4 139 1 42 4 234 1 238 4 334 1 108 2 244 5 296 1 178 8 109 10 31 1 342 1 154 1 247 1 218 1 128 1 182 18 184 1 129 1 197 3 33 2 252 4 373 2 318 1 319 2 185 3 320 1 347 1 306 1 307 8 206 2 93 1 
71 4 42 4 234 2 24 1 238 4 334 1 108 3 244 6 296 1 178 7 109 9 31 1 342 1 247 1 128 1 182 16 184 1 129 1 197 3 33 3 252 4 373 3 319 2 185 3 347 1 307 8 206 2 
218 1 182 7 197 1 33 3 318 1 185 3 320 3 306 3 244 6 206 1 178 4 109 3 93 2 
71 4 139 1 42 4 234 1 24 1 238 4 334 1 108 2 244 4 296 1 178 8 109 10 31 1 342 1 247 1 218 1 128 1 182 18 184 1 129 1 197 3 33 1 252 4 373 2 318 1 319 2 185 3 320 1 347 1 306 1 307 8 206 2 93 1 
7 1 228 1 55 1 26 1 361 1 187 1 258 1 
228 1 55 1 341 1 344 1 253 1 7 1 26 1 361 1 19 1 137 1 187 1 258 1 
260 1 304 1 251 1 54 1 269 1 77 1 118 1 49 1 348 1 20 1 97 1 
338 1 260 1 54 1 208 1 228 1 55 1 118 1 97 1 304 1 100 1 7 2 269 1 376 1 335 1 115 1 361 2 348 1 20 1 
338 1 260 1 208 1 228 2 55 1 118 1 13 1 15 1 97 1 266 1 304 1 222 1 76 1 100 2 7 2 269 2 376 1 335 1 115 2 361 2 348 1 20 3 138 1 
260 2 228 2 118 1 97 2 266 1 76 1 7 2 100 2 269 2 335 1 361 2 338 1 368 1 55 1 58 1 13 1 15 1 304 1 222 1 376 1 348 2 115 2 20 3 138 1 
260 3 54 1 368 1 369 1 118 1 112 1 289 1 371 1 97 3 266 1 304 1 99 1 222 1 237 1 360 1 269 1 115 1 348 3 323 2 20 4 138 1 245 1 286 2 
260 3 54 1 368 1 118 1 112 1 371 1 97 3 266 1 304 1 99 1 222 1 237 1 360 1 269 1 115 1 348 3 323 2 38 1 20 4 138 1 245 1 286 2 
260 1 304 1 118 1 348 1 290 1 97 1 
260 2 54 2 10 1 118 2 144 1 97 2 75 1 304 1 161 1 269 1 348 2 115 1 123 1 364 1 20 1 284 1 225 1 
71 1 29 1 228 1 42 1 252 1 100 1 7 1 213 1 238 1 376 1 335 1 66 1 361 1 123 1 307 2 243 1 
260 1 189 1 288 2 328 1 5 1 97 1 46 2 99 1 237 1 122 1 360 1 363 1 245 1 54 1 340 2 112 2 124 1 371 1 160 2 131 1 198 1 348 1 323 3 350 1 21 1 38 1 20 2 286 3 
260 1 273 1 118 2 290 1 97 1 75 1 304 1 237 1 269 1 348 1 115 1 123 1 20 2 
260 1 54 1 118 2 97 1 149 1 304 1 161 1 269 1 77 1 115 1 348 1 123 1 364 1 313 1 20 1 
260 2 299 1 118 2 97 2 149 1 304 1 161 1 269 1 348 2 115 1 364 1 313 1 20 1 138 1 
260 1 304 1 54 1 118 1 348 1 174 1 105 1 196 1 183 1 97 1 
260 1 348 1 165 1 123 1 97 1 
260 1 54 1 348 1 123 1 97 1 
260 1 54 1 3 1 348 1 123 1 144 1 97 1 
338 1 260 1 54 1 228 1 55 1 58 1 118 1 97 1 304 1 100 1 7 2 269 1 376 1 335 1 115 1 361 2 348 1 20 1 
260 1 118 2 97 1 75 1 304 1 161 1 269 1 348 1 115 1 364 1 20 1 138 1 225 1 
55 1 254 1 44 1 219 1 69 1 
55 1 140 1 4 1 13 1 124 1 14 1 43 1 371 1 219 1 44 2 15 1 99 1 76 1 360 1 254 2 323 2 69 2 168 1 286 2 
228 1 142 1 217 1 219 1 7 1 254 1 361 1 68 1 69 1 
14 1 219 1 168 1 
251 1 96 1 143 1 106 1 
96 1 143 1 106 1 202 1 249 1 156 1 113 1 
12 1 202 1 186 1 
96 1 11 2 83 1 143 1 156 1 249 3 113 1 74 1 133 1 272 1 106 1 202 3 
1 1 96 1 143 1 106 1 202 2 249 2 156 1 256 1 113 1 
375 1 133 1 96 1 174 1 202 1 249 1 156 1 183 1 8 1 130 1 113 1 
133 1 96 1 143 1 202 1 249 1 156 1 113 1 
133 1 143 2 106 1 202 1 249 1 156 1 113 1 
133 1 96 1 143 1 202 2 249 2 156 2 278 1 215 1 113 2 285 1 
53 1 1 2 96 2 143 1 156 1 249 3 332 1 113 1 375 1 133 1 336 1 106 1 202 3 
1 1 96 1 143 1 156 1 249 2 183 1 113 1 147 1 16 1 133 1 174 2 106 1 105 1 202 2 8 1 
1 2 96 2 143 1 156 2 249 4 332 1 113 2 375 1 133 1 34 1 106 1 202 4 256 1 
133 1 96 1 143 1 106 1 202 1 249 1 156 1 113 1 
1 2 96 3 11 1 143 2 249 4 156 1 332 1 74 1 113 1 375 1 272 1 151 1 106 2 202 4 
1 1 96 1 143 1 156 1 249 2 113 1 133 1 268 1 164 1 192 1 106 1 202 2 
96 1 11 2 143 1 156 1 249 3 74 1 113 1 133 1 272 2 106 1 202 3 308 1 
148 1 159 2 96 2 233 1 
162 1 133 1 202 1 249 1 156 1 113 1 
53 1 1 1 133 1 96 1 143 1 106 1 202 2 249 2 156 1 113 1 
86 1 
133 1 96 1 143 1 106 1 202 1 249 1 156 1 113 1 
53 1 1 1 133 1 96 1 11 1 143 1 106 1 202 3 249 3 156 1 113 1 
375 1 96 1 151 1 332 1 
96 1 143 1 

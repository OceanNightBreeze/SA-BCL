#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (192,272) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (192,272) 129 179 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (192,272) 129 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 1 52 2 337 1 35 1 245 1 37 6 161 1 8 1 193 1 317 1 17 1 285 1 94 1 46 1 289 1 172 2 134 2 116 2 328 5 332 2 310 4 120 9 333 2 157 1 277 1 312 3 237 9 29 2 
52 2 242 1 337 1 35 1 245 1 37 6 161 1 8 1 193 1 317 1 17 1 285 1 94 1 46 1 289 1 134 2 172 2 116 2 328 5 332 2 310 4 120 9 333 2 157 1 277 1 312 3 237 9 29 2 
52 2 242 1 337 1 35 1 245 1 37 7 161 1 8 1 193 1 317 1 17 1 285 1 94 1 46 1 289 1 134 2 172 2 116 2 328 6 332 2 310 5 120 10 333 2 157 1 277 1 312 4 237 10 29 2 
52 2 242 1 337 1 35 1 245 1 37 4 161 1 193 1 317 1 17 1 285 1 94 1 46 1 289 1 134 2 172 1 116 2 328 4 332 2 310 3 120 7 333 2 157 1 277 1 312 2 237 7 29 2 
94 1 52 1 337 1 289 1 134 1 172 2 116 1 328 3 37 3 161 1 8 1 310 2 333 1 120 4 157 1 312 1 29 1 237 4 
46 1 289 1 134 1 116 1 328 1 161 1 231 1 332 1 120 2 333 1 157 1 317 1 322 1 297 1 29 1 237 2 
289 1 116 2 328 2 37 1 161 1 332 1 310 1 120 3 157 1 312 1 29 2 237 3 285 1 
52 1 337 1 245 1 37 7 161 1 8 1 193 1 12 1 285 1 94 1 253 1 289 1 172 2 134 1 116 2 328 5 332 1 310 4 120 9 333 1 157 1 312 3 237 9 29 2 
52 1 337 1 245 1 37 7 161 1 8 1 193 1 12 1 285 1 94 1 253 1 289 1 172 2 134 1 116 2 328 5 332 1 310 4 120 9 333 1 157 1 312 3 237 9 29 2 
132 1 131 1 145 1 
109 2 214 1 131 1 
147 2 121 2 141 1 281 2 260 2 351 1 182 2 18 2 
141 1 281 3 241 1 186 1 78 1 260 2 339 2 81 1 263 1 54 1 147 2 10 1 194 1 83 1 39 1 319 1 149 1 195 2 13 1 271 2 222 1 43 1 167 1 18 2 348 1 64 1 252 1 153 1 351 1 352 2 254 2 121 3 25 1 334 1 206 1 182 2 136 1 
257 1 147 1 121 1 281 1 343 1 260 1 351 1 182 1 246 1 18 1 
239 1 257 1 281 1 287 1 276 1 336 1 353 1 144 1 145 1 147 1 121 1 181 1 131 1 124 1 
257 1 281 1 287 1 260 1 336 2 276 2 353 1 144 1 145 1 147 1 121 1 181 1 182 1 131 1 18 1 
30 1 63 1 336 1 276 1 188 1 
30 1 325 1 63 1 336 2 276 2 284 1 131 1 145 1 
30 1 336 1 276 1 
257 1 281 1 63 1 260 1 276 1 336 1 351 1 20 1 246 1 147 1 121 1 343 1 182 1 18 1 
131 1 
30 1 325 1 63 1 34 1 336 2 276 2 131 1 145 1 
30 2 151 1 1 2 274 1 325 1 63 2 276 5 336 5 307 1 55 1 291 1 340 1 145 1 266 2 9 1 321 1 250 1 112 2 131 1 
281 2 241 1 186 1 153 1 252 1 260 1 352 1 254 1 303 1 147 1 98 1 25 1 121 2 194 1 205 1 149 1 319 1 182 1 271 1 222 1 
132 1 141 1 
147 2 121 2 141 2 281 2 26 1 260 1 95 1 182 1 18 1 
205 1 269 1 19 1 
141 1 281 1 252 1 153 1 186 1 241 1 352 1 254 1 121 1 25 1 194 1 319 1 149 1 271 1 222 1 91 1 
239 1 281 5 141 1 104 1 260 4 303 1 22 1 147 5 98 2 121 5 26 1 14 1 182 4 18 1 
257 1 147 2 121 2 281 2 260 2 58 1 182 2 246 1 
147 3 98 1 121 3 141 1 281 3 260 3 182 3 18 1 
257 1 147 1 121 1 281 1 260 1 182 1 246 1 
257 1 147 1 121 1 281 1 26 1 260 1 95 1 182 1 18 1 
257 1 0 1 141 1 281 4 241 1 186 1 260 3 336 1 339 1 81 1 263 1 54 1 144 1 303 1 147 3 10 1 194 1 149 1 319 1 195 2 13 1 271 1 222 1 43 1 167 1 18 2 348 1 153 1 287 1 252 1 276 1 351 1 353 1 352 1 254 1 233 1 98 1 25 1 121 4 26 1 334 1 181 1 182 3 136 1 
239 1 147 2 98 1 121 2 141 1 281 2 104 1 260 1 182 1 
257 1 281 3 287 1 260 3 336 1 276 1 353 1 144 1 303 1 147 3 233 1 98 2 121 3 26 1 181 1 182 3 28 1 131 1 18 1 
147 2 98 1 121 2 205 1 281 2 26 1 260 2 269 1 182 2 18 1 
141 1 281 1 252 1 153 1 186 1 241 1 352 1 254 1 121 1 25 1 194 1 319 1 149 1 271 1 222 1 
141 1 281 1 252 1 186 1 241 1 226 1 352 1 254 1 69 1 121 1 25 1 194 1 149 1 271 1 222 1 
76 1 187 1 339 4 81 1 263 1 54 1 304 1 342 1 83 2 195 2 269 2 249 1 13 2 59 1 61 1 165 1 43 1 19 2 119 1 178 1 293 1 205 2 334 1 136 1 
257 1 147 1 121 1 281 1 260 1 58 1 353 1 182 1 
192 1 327 1 
192 1 327 1 
2 1 272 1 
2 1 272 1 
2 1 272 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
192 1 327 1 
129 1 192 1 179 1 70 1 336 1 276 1 327 1 
129 1 192 1 70 1 327 1 
333 1 52 1 134 1 
333 1 134 1 231 1 
84 1 52 2 128 1 134 3 4 1 231 1 
84 1 52 1 128 1 134 2 82 1 231 1 
84 1 52 1 128 2 134 2 231 1 
30 1 258 1 1 1 211 1 243 1 187 1 214 1 336 5 213 1 55 3 145 1 266 1 304 1 109 3 321 1 196 1 163 2 59 1 112 1 166 1 131 2 133 1 151 2 325 1 63 4 115 1 276 5 293 1 23 1 204 2 234 2 335 1 
30 6 103 1 258 4 1 2 211 2 187 3 214 3 336 9 213 1 188 5 55 8 107 5 145 1 266 2 304 3 109 9 344 1 321 1 163 6 59 3 112 2 223 1 131 5 151 6 113 1 63 7 325 1 288 1 276 9 291 1 293 3 23 3 204 6 207 1 335 2 
258 1 1 1 211 1 187 1 214 2 336 3 55 3 145 1 266 1 304 1 109 4 163 2 59 1 112 1 166 1 131 3 151 2 63 2 115 1 276 3 291 1 293 1 23 1 204 2 234 1 335 1 
103 1 258 2 1 1 211 1 187 2 214 3 336 4 55 5 145 1 266 1 304 2 109 7 163 4 59 2 112 1 166 1 131 4 151 4 113 1 63 3 115 1 288 1 276 4 291 1 293 2 23 2 204 4 234 2 335 1 
132 1 31 1 222 1 
222 1 53 1 
86 1 
194 1 241 1 222 1 
354 1 222 1 
241 1 222 1 
31 2 194 1 170 1 241 1 222 3 203 1 
125 1 76 2 139 1 159 1 187 1 339 7 302 1 155 1 178 3 6 1 293 1 83 4 295 1 72 1 13 3 198 1 286 2 
125 1 76 2 139 1 159 1 187 1 339 7 302 1 155 1 178 3 6 1 293 1 83 4 295 1 72 1 13 3 198 1 286 2 
125 1 76 2 139 1 159 1 187 1 339 7 302 1 155 1 178 3 6 1 293 1 83 4 295 1 72 1 13 3 135 1 198 1 286 2 
280 4 139 1 125 5 76 5 159 2 187 4 339 31 81 1 215 1 263 1 302 1 106 1 6 2 304 3 83 16 195 2 13 15 111 1 16 1 59 3 198 2 286 3 62 3 273 1 93 1 155 2 178 10 23 3 293 4 295 1 72 1 334 1 73 1 136 1 
76 3 125 1 139 1 159 1 187 1 339 9 81 2 263 2 302 1 6 1 219 1 83 5 195 4 13 4 111 1 198 1 286 2 155 1 178 4 293 1 295 1 334 2 49 1 136 2 
138 1 184 1 185 1 52 1 33 1 3 1 127 1 301 1 4 1 37 1 161 1 149 1 271 1 90 1 289 1 352 1 134 2 116 1 328 1 254 1 332 1 231 1 333 1 120 2 157 1 25 1 314 1 237 2 29 1 357 1 
138 1 184 1 52 1 33 1 127 1 4 1 301 1 37 2 161 1 149 1 110 1 271 1 323 1 90 1 289 1 352 1 134 2 116 1 328 1 254 1 332 1 231 1 333 1 120 3 25 1 236 1 314 1 237 3 29 1 357 1 
184 1 52 1 33 1 127 1 301 1 4 1 37 2 161 1 149 1 110 1 271 1 323 1 90 1 289 1 352 1 134 2 328 1 254 1 332 1 231 1 120 2 333 1 25 1 314 1 237 2 
184 2 241 1 252 1 33 2 352 1 116 1 254 1 230 1 332 2 120 1 25 1 149 1 197 1 221 1 235 1 271 1 222 1 236 1 102 1 29 1 237 1 314 2 209 1 
138 1 184 1 52 1 33 1 3 1 127 1 301 1 4 1 149 1 271 1 323 1 90 1 352 1 134 2 116 1 254 1 332 1 231 1 333 1 120 1 157 1 25 1 314 1 237 1 29 1 357 1 
32 1 
239 1 1 1 281 1 241 1 55 2 144 1 145 1 147 1 247 1 109 2 149 1 321 1 197 1 112 1 324 1 151 2 325 3 252 2 287 1 114 1 66 1 21 2 254 2 25 1 121 1 123 2 255 1 335 1 74 2 124 1 30 6 257 1 214 2 336 5 262 1 217 2 266 1 40 1 87 4 345 1 271 2 222 1 130 2 131 2 169 1 350 1 276 5 352 2 353 1 228 2 175 2 181 1 235 1 279 1 358 1 
239 1 257 1 30 2 281 1 336 3 34 1 144 1 147 1 87 2 324 1 287 1 325 1 66 1 276 3 353 1 228 1 121 1 181 1 255 1 124 1 279 1 358 1 
30 1 239 1 257 1 281 1 336 3 34 1 144 1 145 1 147 1 87 3 324 1 131 1 287 1 325 1 66 1 276 3 353 1 121 1 181 1 123 1 255 1 124 1 279 1 358 1 
239 1 257 1 30 2 281 1 34 1 336 3 144 1 145 1 147 1 87 3 324 1 131 1 325 1 287 1 66 1 276 3 353 1 228 1 175 1 121 1 181 1 123 1 255 1 124 1 279 1 358 1 
239 1 315 1 281 1 1 1 144 1 55 1 145 5 147 1 321 1 324 1 112 1 151 1 287 1 325 3 114 1 66 1 21 2 121 1 123 4 255 1 74 2 124 1 257 1 30 7 336 5 34 1 214 2 266 1 217 2 162 1 218 1 306 1 87 6 130 2 131 5 169 1 276 5 353 1 228 4 175 4 181 1 101 1 358 1 279 1 
239 1 281 1 1 1 144 1 55 1 145 1 147 1 109 2 321 1 112 1 324 1 151 1 287 1 325 2 114 1 66 1 21 2 121 1 123 2 255 1 74 2 124 1 257 1 30 4 336 4 214 2 262 1 266 1 217 2 87 4 130 2 131 2 169 1 276 4 353 1 228 2 175 2 181 1 358 1 279 1 
30 4 239 1 257 1 281 1 1 1 214 2 336 4 55 1 144 1 145 1 217 2 266 1 147 1 162 1 218 1 321 1 306 1 87 4 130 2 324 1 112 1 131 1 151 1 169 1 325 2 287 1 114 1 66 1 276 4 353 1 228 2 175 2 21 2 121 1 123 2 181 1 255 1 74 2 124 1 279 1 358 1 
30 4 239 1 257 1 281 1 1 1 214 2 336 4 55 1 144 1 145 1 217 2 266 1 147 1 162 1 218 1 321 1 306 1 87 4 130 2 324 1 112 1 131 1 151 1 169 1 325 2 287 1 114 1 66 1 276 4 353 1 228 2 175 2 21 2 121 1 123 2 181 1 255 1 74 2 124 1 279 1 358 1 
30 4 239 1 257 1 281 1 1 1 336 4 55 1 144 1 145 1 217 2 266 1 147 1 109 2 321 1 220 2 306 1 87 4 324 1 112 1 131 1 151 1 325 2 287 1 114 1 66 1 276 4 353 1 228 2 175 2 330 1 309 2 232 1 121 1 123 2 181 1 255 1 74 2 124 1 279 1 358 1 256 1 
239 1 257 1 30 5 315 1 1 1 281 1 214 2 336 4 55 1 144 1 145 1 217 2 266 1 147 1 218 1 162 1 321 1 306 1 87 5 130 2 112 1 324 1 131 1 151 1 169 1 325 2 287 1 114 1 66 1 276 4 353 1 228 3 175 3 21 2 121 1 181 1 123 3 255 1 74 2 124 1 279 1 358 1 
239 1 257 1 30 5 315 1 1 1 281 1 214 2 336 4 55 1 144 1 145 1 217 2 266 1 147 1 218 1 162 1 321 1 306 1 87 5 130 2 112 1 324 1 131 1 151 1 169 1 325 2 287 1 114 1 66 1 276 4 353 1 228 3 175 3 21 2 121 1 181 1 123 3 255 1 74 2 124 1 279 1 358 1 
239 1 281 1 1 1 144 1 55 1 145 1 147 1 109 2 321 1 112 1 324 1 151 1 287 1 325 2 114 1 66 1 121 1 123 2 255 1 74 2 124 1 257 1 30 4 336 4 262 1 266 1 217 2 220 2 87 4 131 1 276 4 353 1 228 2 175 2 232 1 309 2 181 1 358 1 279 1 
139 1 76 2 141 2 159 1 187 1 339 6 81 1 263 1 54 1 302 1 6 1 83 3 195 2 269 1 249 1 13 3 43 1 286 1 132 1 19 1 178 2 293 1 205 1 295 1 334 1 136 1 
280 3 125 1 76 1 141 1 78 1 187 2 126 1 339 14 81 2 263 2 54 1 106 1 304 1 83 8 195 4 269 4 13 6 59 2 43 2 167 1 62 3 273 1 19 11 174 1 308 1 178 2 23 2 293 1 205 11 334 2 180 1 136 2 208 1 
141 1 281 2 241 1 186 1 260 1 78 1 339 2 160 1 263 1 81 1 54 1 303 1 146 1 147 1 194 1 149 1 319 1 83 1 195 2 269 1 13 1 271 1 222 1 43 1 91 1 167 1 153 1 252 1 352 1 227 1 254 1 308 1 98 1 25 1 121 2 334 1 182 1 136 1 
139 1 141 2 281 3 186 2 241 2 187 3 105 1 54 3 6 1 147 1 10 2 194 2 319 2 149 2 195 6 13 10 323 1 60 2 59 2 286 1 252 1 153 2 19 7 254 3 293 3 23 2 121 3 25 2 205 7 295 1 334 3 76 4 125 4 159 1 78 1 260 1 339 20 81 3 263 3 302 1 341 1 303 1 304 2 83 10 269 7 271 3 222 2 43 3 42 2 167 1 224 2 45 1 352 3 96 2 308 1 178 8 98 1 182 1 136 3 
185 1 281 1 241 2 260 1 78 1 339 2 81 2 263 2 54 2 147 1 191 1 149 2 83 1 283 1 195 4 197 1 249 1 13 1 271 8 323 1 222 3 43 2 167 1 199 1 252 2 225 1 352 7 254 8 98 1 121 1 25 2 27 1 334 2 278 1 206 2 182 1 235 1 136 2 238 1 
76 1 281 1 260 1 187 1 338 1 339 3 81 1 263 1 54 1 147 1 304 1 83 1 195 2 269 1 13 2 59 1 43 1 18 1 19 1 308 1 178 1 23 1 293 1 121 1 205 1 26 1 334 1 182 1 136 1 
125 1 187 1 19 1 339 2 263 1 81 1 54 1 178 1 205 1 83 2 195 2 334 1 269 1 249 1 136 1 59 1 165 1 43 1 
76 1 19 1 339 2 263 1 81 1 54 1 178 1 293 1 342 1 304 1 205 1 195 2 334 1 269 1 249 1 13 2 136 1 43 1 
125 1 76 1 187 1 339 4 81 1 263 1 54 1 304 1 83 2 195 2 269 2 249 1 13 2 59 1 43 1 19 2 178 2 23 1 293 1 205 2 334 1 136 1 
125 1 225 1 187 1 19 1 339 2 263 1 81 1 54 1 178 1 205 1 83 2 195 2 334 1 269 1 136 1 59 1 165 1 43 1 
76 1 225 1 19 1 339 2 263 1 81 1 54 1 178 1 293 1 342 1 304 1 205 1 195 2 334 1 269 1 13 2 136 1 43 1 
125 1 76 1 187 1 339 4 81 1 263 1 54 1 304 1 83 2 195 2 269 2 13 2 59 1 43 1 225 1 19 2 178 2 23 1 293 1 205 2 334 1 136 1 
125 1 76 1 187 1 339 4 81 1 263 1 54 1 304 1 83 2 195 2 269 2 13 2 59 1 43 1 19 2 178 2 23 1 293 1 205 2 334 1 136 1 
141 1 281 1 241 1 186 1 78 1 339 2 263 1 81 1 54 1 10 1 194 1 83 1 149 1 319 1 195 2 13 1 271 1 222 1 43 1 167 1 153 1 252 1 352 1 254 1 25 1 121 1 334 1 136 1 
141 1 281 1 241 1 186 1 78 1 339 2 263 1 81 1 54 1 194 1 83 1 149 1 195 2 13 1 271 1 222 1 43 1 167 1 44 1 252 1 226 1 352 1 254 1 69 1 25 1 121 1 334 1 136 1 
125 1 76 1 187 1 339 4 81 1 263 1 54 1 304 1 83 2 195 2 269 2 13 2 59 1 43 1 19 2 308 1 178 2 23 1 293 1 205 2 334 1 136 1 
76 1 125 1 185 1 281 1 186 1 241 1 187 1 339 4 263 1 81 1 54 1 304 1 10 1 194 1 83 2 149 1 319 1 195 2 269 2 13 2 271 1 222 1 59 1 42 1 43 1 153 1 19 2 352 1 254 1 178 2 293 1 23 1 25 1 121 1 205 2 334 1 136 1 
125 1 281 1 260 1 187 1 339 3 81 1 263 1 54 1 265 1 147 1 304 1 83 2 195 2 269 1 13 1 59 1 43 1 18 1 19 1 308 1 178 1 293 1 23 1 121 1 205 1 26 1 334 1 182 1 136 1 
280 2 76 1 125 1 187 2 339 13 81 2 263 2 106 1 38 1 304 2 318 1 83 6 195 4 270 1 13 7 59 2 251 1 62 1 273 1 65 1 68 1 178 2 23 2 293 2 311 1 294 1 334 2 49 1 136 2 
280 2 76 1 125 1 187 2 339 13 81 2 263 2 106 1 38 1 304 2 318 1 83 6 195 4 270 1 13 7 59 2 251 1 62 1 273 1 65 1 68 1 178 2 23 2 293 2 311 1 294 1 334 2 49 1 136 2 
280 4 139 1 76 6 125 7 159 1 187 8 126 2 261 1 339 50 81 2 263 2 302 1 106 2 38 1 6 1 304 7 83 26 195 4 111 1 270 1 13 24 59 7 89 1 251 1 286 1 62 4 273 2 65 1 117 1 229 1 68 1 47 1 178 13 23 7 293 8 311 1 99 1 294 3 295 1 334 2 49 1 136 2 
280 2 76 2 125 1 187 2 339 13 81 2 263 2 106 1 38 1 11 1 304 2 318 1 83 6 195 4 270 1 13 7 59 2 251 1 62 1 273 1 68 1 178 3 23 2 293 2 311 1 294 1 334 2 49 1 136 2 
280 2 125 1 76 1 187 3 261 1 339 24 81 3 263 3 38 1 304 2 83 13 195 6 111 2 13 11 270 1 59 3 251 2 89 1 62 2 273 2 65 1 117 1 68 2 229 1 47 1 178 2 293 2 23 3 311 1 294 3 99 1 334 3 49 1 136 3 
51 1 210 1 281 2 241 1 78 1 339 2 263 1 81 1 54 1 147 2 149 1 83 1 195 2 13 1 271 2 222 1 43 1 167 1 168 1 352 2 202 1 254 2 308 1 331 1 25 1 121 2 27 1 334 1 206 2 136 1 238 1 
138 1 185 1 77 1 52 1 33 1 134 2 352 2 127 1 4 1 301 1 254 2 231 1 333 1 25 1 149 1 305 1 57 1 271 2 323 1 
138 1 52 1 33 1 134 2 352 1 127 1 4 1 301 1 254 1 177 1 231 1 333 1 25 1 149 1 57 1 271 1 323 1 
241 1 252 1 33 1 352 1 67 1 254 1 230 1 25 1 149 1 305 1 197 1 271 1 235 1 222 1 
138 1 77 1 52 1 33 1 134 2 352 1 127 1 4 1 301 1 254 1 231 1 333 1 25 1 149 1 305 1 57 1 271 1 323 1 
316 1 
132 1 151 1 307 1 55 1 131 1 340 1 145 1 
30 1 1 1 214 1 336 1 55 1 145 1 266 1 109 1 321 1 130 1 112 1 131 2 151 1 169 1 325 1 276 1 21 1 
185 1 240 2 1 4 241 3 187 2 142 2 143 1 53 3 189 2 55 9 145 2 108 2 109 12 194 3 149 3 320 2 321 4 59 2 112 4 151 8 252 1 201 2 287 2 325 3 118 2 254 3 23 2 293 2 204 6 25 4 335 2 30 5 31 2 336 5 214 6 80 1 264 2 340 1 266 4 304 2 40 1 163 6 271 3 222 10 41 1 131 8 347 1 170 1 171 1 276 5 352 3 96 2 307 1 354 2 
30 1 280 1 1 2 187 2 79 1 261 1 336 1 142 2 214 3 55 8 145 2 266 2 304 2 109 6 321 2 40 1 163 5 59 2 89 1 112 2 131 5 62 1 273 1 151 5 325 1 349 1 276 1 117 1 118 1 229 1 23 2 293 2 204 5 99 1 335 1 
257 1 281 1 1 1 159 1 187 2 260 1 142 2 336 1 302 1 55 2 246 1 6 1 266 1 147 1 218 1 343 1 321 1 112 1 18 1 151 2 326 1 276 1 351 1 118 1 20 1 293 1 121 1 182 1 
151 1 1 1 307 1 55 1 340 1 145 1 266 1 321 1 112 1 131 1 
151 5 187 2 142 2 214 5 96 1 118 1 55 5 23 2 293 2 204 5 304 2 109 10 163 5 59 2 131 5 
30 1 325 1 336 1 276 1 131 1 145 1 
30 4 1 2 241 2 336 3 55 2 56 1 266 2 247 1 194 1 149 2 321 1 40 2 197 1 271 4 222 2 112 2 347 1 151 2 200 1 171 2 252 2 325 2 350 1 276 3 352 4 176 1 291 1 254 4 25 3 296 1 235 1 335 2 298 1 299 1 
141 1 281 3 186 1 241 1 260 2 339 1 81 1 263 1 54 1 147 2 10 1 194 1 319 1 149 1 195 2 13 1 271 1 222 1 43 1 167 1 18 2 348 1 252 1 153 1 351 1 352 1 254 1 121 3 25 1 334 1 182 2 136 1 
151 2 1 1 214 2 55 1 145 2 266 1 204 2 109 4 321 1 163 2 40 1 335 1 112 1 131 4 286 1 
216 1 15 1 7 1 
216 1 15 1 7 1 
216 1 158 1 122 1 15 1 75 1 
216 1 15 1 7 1 
216 1 173 1 15 1 
216 1 173 1 15 1 
216 1 173 1 15 1 
216 1 15 1 
192 1 327 1 
280 1 139 1 76 2 159 1 187 1 339 8 81 1 263 1 302 1 6 1 83 4 195 2 13 4 89 1 286 1 62 1 273 1 178 2 293 1 295 1 334 1 49 1 136 1 
280 2 76 2 139 1 125 1 159 1 187 2 339 11 81 2 263 2 302 1 106 1 6 1 83 6 195 4 13 5 59 1 89 1 286 1 62 1 273 1 275 1 178 3 293 1 23 1 295 1 49 1 334 2 136 2 
280 1 139 1 125 1 76 3 159 1 187 3 261 1 339 19 81 3 263 3 302 1 6 1 304 2 83 9 195 6 13 10 111 1 59 2 89 1 286 1 62 1 273 1 275 1 117 1 229 1 178 4 23 2 293 3 99 1 295 1 334 3 49 1 136 3 
280 1 139 1 125 2 76 3 159 1 187 3 261 1 339 17 81 3 263 3 302 1 6 1 304 1 83 10 195 6 111 1 13 7 59 2 89 1 286 1 62 1 273 1 275 1 117 1 229 1 178 5 23 2 293 2 99 1 295 1 334 3 49 1 136 3 
280 1 139 1 76 2 159 1 187 1 339 8 81 1 263 1 302 1 6 1 83 4 195 2 13 4 89 1 286 1 62 1 273 1 178 2 293 1 295 1 334 1 49 1 136 1 
280 1 125 1 76 1 187 2 261 1 339 12 81 1 263 1 304 2 83 6 195 2 13 6 59 2 89 1 62 1 273 1 117 1 229 1 178 2 23 2 293 2 99 1 334 1 49 1 136 1 
280 1 139 1 125 2 76 3 159 1 187 3 261 1 339 18 81 4 263 4 302 1 6 1 304 1 83 10 195 8 13 8 111 2 59 2 89 1 286 1 62 1 273 1 275 1 117 1 229 1 178 5 23 2 293 2 99 1 295 1 334 4 49 1 136 4 
280 1 125 3 76 3 187 3 261 1 339 16 81 4 263 4 304 2 318 1 83 9 195 8 13 7 111 2 59 3 89 1 62 1 273 1 117 1 229 1 178 6 23 3 293 2 99 1 49 1 334 4 136 4 
139 2 76 3 125 3 159 3 187 1 339 7 302 1 6 3 178 6 293 1 83 3 295 1 13 4 
280 1 139 1 125 1 76 3 159 1 187 3 261 1 339 18 81 4 263 4 302 1 6 1 304 1 318 1 83 10 195 8 13 8 111 2 59 2 89 1 286 1 62 1 273 1 117 1 229 1 178 4 23 2 293 2 99 1 295 1 49 1 334 4 136 4 
125 1 76 2 139 1 159 1 187 1 339 8 263 2 81 2 302 1 178 3 6 1 293 1 83 4 295 1 195 4 334 2 13 4 111 1 136 2 286 1 
132 1 139 1 76 2 159 1 187 1 339 6 302 1 6 1 178 2 293 1 83 3 295 1 13 3 286 1 
76 1 125 1 275 1 187 1 339 4 263 1 81 1 178 2 293 1 23 1 304 1 83 2 195 2 334 1 13 2 136 1 59 1 
280 2 62 1 273 1 76 1 125 1 187 1 339 7 106 1 178 2 293 1 23 1 304 1 83 3 13 4 59 1 
280 2 139 1 125 4 76 5 159 2 187 3 126 1 339 23 263 2 81 2 302 1 106 1 6 2 304 2 83 11 195 4 13 12 111 2 59 2 286 1 62 2 178 9 23 2 293 3 295 1 334 2 180 1 136 2 183 1 
280 1 13 1 339 1 
62 1 83 1 339 1 
125 1 76 2 275 1 187 1 96 1 339 6 81 1 263 1 178 3 23 1 293 1 304 1 83 3 334 1 195 2 13 3 136 1 59 1 
280 1 125 1 76 1 187 2 261 1 339 12 81 1 263 1 304 2 83 6 195 2 13 6 59 2 89 1 62 1 273 1 117 1 229 1 178 2 23 2 293 2 99 1 334 1 49 1 136 1 
76 1 125 1 159 1 187 1 339 6 302 1 6 1 178 2 293 1 83 3 13 3 
125 1 76 1 139 1 159 1 339 3 263 1 81 1 178 2 6 1 83 1 295 1 195 2 334 1 13 2 111 1 136 1 183 1 
76 3 125 2 159 2 187 2 326 1 339 10 81 1 263 1 302 1 6 2 178 5 293 2 83 5 334 1 195 2 49 1 13 5 136 1 
125 1 187 1 339 2 263 1 81 1 178 1 83 2 49 1 195 2 334 1 136 1 59 1 
76 1 125 1 187 1 339 4 263 1 81 1 178 2 293 1 23 1 304 1 83 2 49 1 195 2 334 1 13 2 136 1 59 1 
76 1 125 1 159 1 339 3 263 3 81 3 6 1 178 2 318 1 83 1 49 1 195 6 334 3 111 1 13 2 136 3 183 1 
280 4 139 1 125 5 76 7 159 3 187 5 339 34 215 1 81 5 263 5 302 2 106 1 6 3 304 3 318 1 83 16 195 10 111 2 13 18 59 3 286 1 62 3 273 1 93 1 275 1 178 12 23 3 293 5 295 1 334 5 49 1 73 1 136 5 183 1 
147 1 239 1 121 1 141 1 281 1 104 1 248 1 
239 1 141 1 281 1 104 1 154 1 5 1 97 1 147 1 121 1 48 1 248 1 164 1 
132 1 25 1 149 1 241 1 252 1 197 1 235 1 271 1 352 1 222 1 254 1 
141 1 281 2 241 1 186 1 252 1 153 1 260 1 352 1 254 1 147 1 98 1 25 1 121 2 194 1 149 1 182 1 271 1 222 1 
257 1 141 1 281 2 186 1 241 2 260 1 264 1 147 2 194 2 149 1 271 1 222 3 153 1 171 1 352 1 353 1 254 1 98 1 121 2 25 1 181 1 354 1 182 2 
257 1 141 1 281 2 186 1 241 2 260 1 264 1 147 2 148 1 194 2 149 1 271 2 222 3 171 1 352 2 353 1 254 2 69 1 98 1 121 2 25 1 181 1 354 1 182 2 
30 1 31 1 241 1 336 2 53 1 264 1 145 1 148 1 194 1 149 1 271 3 222 4 131 1 171 1 287 1 252 1 276 2 352 3 254 3 25 1 71 1 354 1 355 1 
30 1 31 1 252 1 287 1 241 1 171 1 201 1 276 2 336 2 352 3 53 1 264 1 254 3 145 1 25 1 148 1 194 1 149 1 354 1 271 3 222 4 131 1 
191 1 25 1 149 1 271 1 352 1 254 1 
170 1 252 1 241 1 352 1 176 1 254 1 36 1 25 2 194 1 149 1 296 1 271 1 222 1 
76 2 139 1 185 1 141 2 210 1 281 2 159 1 241 1 186 1 187 1 260 1 339 6 263 2 81 2 302 1 54 2 6 1 147 1 10 1 194 1 83 3 149 1 319 1 195 4 269 1 13 3 271 1 222 1 43 2 42 1 286 1 224 1 153 1 19 1 352 1 254 1 308 1 178 2 293 1 98 1 25 1 121 2 205 1 295 1 334 2 182 1 136 2 
30 2 31 1 1 2 240 1 336 3 53 1 55 1 340 1 145 1 266 2 108 1 320 1 321 2 271 1 222 2 112 2 131 1 347 1 151 1 252 1 63 1 201 1 287 1 325 1 276 3 352 1 307 1 254 1 
31 1 185 1 170 1 241 1 352 2 254 2 191 1 25 2 194 1 149 1 271 2 222 2 41 1 
185 1 252 1 241 1 352 4 329 1 254 4 25 1 148 1 149 1 197 1 271 4 235 1 222 1 
241 1 352 1 176 1 254 1 341 1 25 2 194 1 149 1 296 1 271 1 222 1 298 1 299 1 
333 1 25 1 149 1 252 1 134 1 271 1 352 1 301 1 254 1 231 1 
168 1 185 1 241 1 352 2 254 2 25 1 149 1 27 1 271 2 323 1 222 1 
185 1 171 1 252 1 241 2 352 4 329 1 254 5 25 2 149 2 283 1 27 1 197 1 278 1 235 1 271 5 222 3 
185 1 171 1 252 1 241 2 352 4 329 1 254 5 190 1 25 2 149 2 27 1 197 1 278 1 235 1 271 5 222 3 
141 1 281 2 241 1 186 1 252 1 260 1 352 1 254 1 69 1 147 1 98 1 25 1 121 2 194 1 149 1 182 1 271 1 222 1 
170 1 171 1 241 1 352 1 176 1 254 1 36 1 25 2 194 1 149 1 296 1 271 1 222 1 
141 1 85 1 244 1 313 1 292 1 
257 1 50 1 92 1 141 1 287 1 63 1 212 1 276 2 336 2 244 2 353 1 144 1 292 2 145 1 233 1 85 1 181 1 313 2 131 1 
51 1 281 1 244 1 202 1 331 1 147 1 121 1 85 1 313 1 
92 1 212 1 85 1 
132 1 289 1 328 1 161 1 
120 1 289 1 116 1 328 1 237 1 29 1 161 1 
314 1 237 1 332 1 
300 1 120 3 157 1 317 2 289 1 116 1 356 1 328 1 156 1 237 3 29 1 161 1 
120 2 289 1 172 1 116 1 328 1 37 1 237 2 29 1 161 1 
310 1 333 1 120 1 157 1 52 1 337 1 134 1 116 1 328 1 237 1 29 1 
120 1 157 1 289 1 116 1 328 1 237 1 29 1 
120 1 157 1 289 2 116 1 237 1 29 1 161 1 
140 1 289 1 116 2 328 1 120 2 157 1 267 1 268 1 29 2 237 2 
289 1 116 1 245 1 328 2 37 2 161 1 310 1 120 3 157 1 193 1 312 1 29 1 237 3 
52 1 289 1 134 2 116 1 4 1 328 1 37 1 161 1 231 1 120 2 333 1 157 1 29 1 237 2 150 1 
289 1 172 1 116 2 328 2 37 2 161 1 8 1 310 1 120 4 157 1 312 1 29 2 237 4 
120 1 157 1 289 1 116 1 328 1 237 1 29 1 161 1 
259 1 289 2 116 1 328 3 156 1 37 2 161 2 310 1 120 4 317 1 312 1 356 1 237 4 29 1 
120 2 157 1 152 1 12 1 289 1 116 1 328 1 290 1 37 1 237 2 29 1 161 1 
289 1 116 1 328 1 156 1 161 1 120 3 157 1 317 2 356 2 29 1 237 3 346 1 
24 1 282 1 328 2 137 2 
120 1 157 1 88 1 116 1 237 1 29 1 
120 2 193 1 157 1 289 1 116 1 328 1 37 1 237 2 29 1 161 1 
100 1 
120 1 157 1 289 1 116 1 328 1 237 1 29 1 161 1 
289 1 116 1 328 1 37 1 161 1 120 3 157 1 193 1 317 1 29 1 237 3 
310 1 259 1 312 1 328 1 
289 1 328 1 

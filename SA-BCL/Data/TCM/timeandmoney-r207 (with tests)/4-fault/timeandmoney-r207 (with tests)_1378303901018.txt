#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 2 137 1 139 1 76 4 3 1 125 2 296 2 192 3 4 5 6 2 277 1 302 1 214 1 234 1 175 1 253 1 369 2 311 2 370 1 288 1 238 9 219 1 68 1 260 1 35 2 203 6 38 1 159 9 
119 2 137 1 139 1 76 4 3 1 125 2 296 2 192 3 4 5 6 2 277 1 302 1 214 1 234 1 175 1 253 1 369 2 311 2 370 1 288 1 238 9 219 1 68 1 260 1 35 2 203 6 38 1 159 9 
119 2 137 1 139 1 76 5 3 1 125 2 296 2 192 4 4 6 6 2 277 1 302 1 214 1 234 1 175 1 253 1 369 2 311 2 370 1 288 1 238 10 219 1 68 1 260 1 35 2 203 7 38 1 159 10 
119 2 137 1 139 1 76 3 3 1 125 2 296 2 192 2 4 4 6 2 277 1 214 1 234 1 175 1 253 1 369 2 311 2 370 1 288 1 238 7 219 1 68 1 260 1 35 1 203 4 38 1 159 7 
119 1 302 1 137 1 139 1 214 1 76 2 311 1 369 1 238 4 296 1 192 1 4 3 35 2 203 3 6 1 38 1 277 1 159 4 
119 1 352 1 139 1 365 1 214 1 234 1 370 1 311 1 238 2 208 1 125 1 296 1 4 1 6 1 277 1 159 2 
119 2 139 1 214 1 76 1 238 3 125 1 296 2 68 1 192 1 4 2 203 1 277 1 159 3 
119 2 302 1 137 1 139 1 214 1 175 1 76 4 253 1 311 1 369 1 309 1 238 9 125 1 296 2 4 5 68 1 192 3 178 1 35 2 203 7 6 1 38 1 277 1 159 9 
119 2 302 1 137 1 139 1 214 1 175 1 76 4 253 1 311 1 369 1 309 1 238 9 125 1 296 2 4 5 68 1 192 3 178 1 35 2 203 7 6 1 38 1 277 1 159 9 
43 1 264 1 358 1 
281 2 264 1 371 1 
60 2 297 2 109 1 45 2 188 2 329 2 172 1 251 2 
353 1 1 1 45 2 188 2 206 2 245 1 207 1 323 1 121 1 190 1 122 2 81 2 297 2 274 1 329 2 5 1 146 1 330 1 231 1 55 1 172 1 251 3 151 1 60 3 173 1 339 1 109 1 91 1 285 1 94 2 95 1 290 1 96 1 317 1 318 2 136 1 350 1 
60 1 45 1 188 1 257 1 200 1 297 1 329 1 349 1 172 1 251 1 
0 1 2 1 43 1 45 1 188 2 20 1 50 1 22 1 297 1 329 1 172 1 251 2 60 2 286 1 177 1 257 1 200 2 346 1 182 1 264 1 349 1 
0 1 2 1 43 1 45 2 188 2 20 2 50 1 22 1 297 2 329 2 172 1 251 2 60 2 286 1 177 2 257 1 200 2 264 1 349 1 
160 1 9 1 177 1 287 1 20 1 
160 1 43 1 215 1 134 1 264 1 177 2 287 1 20 2 
160 1 177 1 20 1 
60 1 45 1 188 1 286 1 287 1 177 1 257 1 20 1 200 1 297 1 329 1 349 1 172 1 251 1 
264 1 
160 1 43 1 215 1 264 1 177 2 287 1 85 1 20 2 
267 1 71 1 150 1 160 2 42 1 43 1 355 2 186 1 28 1 270 1 215 1 287 2 177 5 20 5 295 1 374 1 104 2 118 2 264 1 
109 1 358 1 
60 2 109 2 45 1 188 2 297 1 329 1 221 1 333 1 251 2 
141 1 163 1 241 1 
353 1 60 1 339 1 109 1 206 1 207 1 285 1 94 1 95 1 81 1 96 1 274 1 179 1 330 1 231 1 251 1 
353 1 60 2 339 1 45 1 188 1 206 1 207 1 225 1 285 1 163 1 94 1 95 1 81 1 96 1 297 1 274 1 345 1 330 1 231 1 251 2 
60 5 109 1 45 4 188 5 225 2 256 1 297 4 345 1 169 1 329 1 346 1 333 1 58 1 251 5 
200 1 60 1 297 1 45 1 188 1 257 1 251 1 
60 3 297 3 109 1 45 3 329 1 188 3 225 1 251 3 
200 1 60 1 297 1 45 1 188 1 257 1 251 1 
60 1 45 1 188 1 200 1 297 1 329 1 221 1 333 1 251 1 
353 1 0 1 2 1 45 3 188 3 206 1 245 1 207 1 225 1 323 1 122 2 49 1 20 1 50 1 22 1 81 1 297 3 274 1 329 2 146 1 330 1 333 1 231 1 55 1 56 1 172 1 251 4 151 1 60 4 173 1 339 1 109 1 91 1 285 1 177 1 94 1 95 1 290 1 200 1 96 1 345 1 317 1 318 1 136 1 
60 2 297 1 109 1 45 1 188 2 346 1 225 1 256 1 251 2 
60 3 0 1 2 1 45 3 188 3 225 2 177 1 20 1 49 1 50 1 360 1 22 1 200 1 297 3 345 1 329 1 333 1 264 1 251 3 
60 1 297 1 45 1 188 1 329 1 333 1 163 1 251 1 
353 1 60 1 339 1 109 1 206 1 207 1 285 1 94 1 95 1 81 1 96 1 274 1 330 1 231 1 251 1 
108 1 353 1 60 1 339 1 109 1 269 1 206 1 207 1 285 1 94 1 81 1 96 1 274 1 231 1 251 1 
151 1 40 1 173 1 141 1 91 1 245 1 235 1 122 2 163 1 290 2 167 1 259 1 276 1 146 1 332 1 241 1 107 1 318 2 136 1 
60 1 45 1 188 1 10 1 22 1 200 1 297 1 251 1 
321 1 210 1 
321 1 210 1 
361 1 149 1 
361 1 149 1 
361 1 149 1 
321 1 210 1 263 1 
321 1 210 1 171 1 
361 1 154 1 321 2 210 2 37 1 149 1 
321 1 210 1 263 1 
321 1 210 1 263 1 
321 1 210 1 363 1 
321 1 210 1 363 1 
321 1 210 1 363 1 
138 1 185 1 321 1 45 2 72 1 188 2 123 1 20 1 101 1 297 2 209 1 210 1 211 1 171 1 251 2 337 1 88 1 60 2 109 1 368 1 177 1 261 1 97 1 319 1 
88 2 185 2 321 2 356 1 366 1 177 2 372 1 123 2 20 2 78 1 101 3 220 1 154 1 209 2 261 1 201 2 210 2 264 1 57 1 
311 1 369 1 6 1 
365 1 311 1 6 1 
365 1 63 1 367 1 362 1 369 2 6 3 
365 1 140 1 367 1 362 1 369 1 6 2 
365 1 367 2 362 1 369 1 6 2 
267 2 71 1 160 1 294 2 355 1 43 1 186 3 20 5 165 2 142 1 105 1 104 1 298 1 332 1 212 1 281 3 110 1 215 1 368 1 235 1 371 1 128 1 177 5 287 4 313 1 11 2 377 1 118 1 70 1 97 1 264 2 319 1 
267 6 71 1 160 6 294 6 43 1 355 2 186 8 20 9 165 6 295 1 273 1 142 2 250 5 105 3 104 2 144 1 332 3 281 9 9 5 282 1 215 1 308 1 235 3 371 3 128 3 177 9 287 7 313 2 12 1 258 1 377 3 97 4 70 1 118 2 264 5 
267 2 294 2 43 1 355 1 186 3 20 3 165 2 295 1 142 1 104 1 105 1 298 1 332 1 212 1 281 4 235 1 371 2 287 2 177 3 128 1 313 1 11 1 377 1 118 1 97 1 264 3 
267 4 294 4 43 1 355 1 186 5 20 4 165 4 295 1 142 1 104 1 105 2 144 1 298 1 332 2 212 1 281 7 308 1 235 2 371 3 177 4 287 3 128 2 313 1 11 2 12 1 377 2 118 1 97 2 264 4 
285 1 347 1 358 1 
285 1 271 1 
341 1 
353 1 207 1 285 1 
285 1 196 1 
353 1 285 1 
353 1 239 1 207 1 347 2 285 3 216 1 
27 1 39 2 40 3 64 1 255 1 290 3 229 1 259 2 377 1 117 1 16 1 126 1 36 1 332 1 5 4 240 1 318 7 
27 1 39 2 40 3 64 1 255 1 290 3 229 1 259 2 377 1 117 1 16 1 126 1 36 1 332 1 5 4 240 1 318 7 
27 1 39 2 40 3 64 1 255 1 342 1 290 3 229 1 259 2 377 1 117 1 16 1 126 1 36 1 332 1 5 4 240 1 318 7 
39 3 40 10 162 1 245 1 122 2 229 1 105 3 126 1 5 16 332 4 301 1 27 5 7 1 173 1 91 1 284 3 235 3 176 1 64 2 128 3 255 1 66 1 290 15 373 1 14 1 259 5 377 4 16 1 117 2 36 2 240 2 158 4 318 31 136 1 
39 2 40 4 162 1 245 2 122 4 164 1 229 1 126 1 332 1 5 5 27 1 173 2 91 2 64 1 32 1 255 1 290 4 259 3 377 1 117 1 36 1 240 1 318 9 136 2 
354 1 119 1 139 1 206 1 19 1 48 1 228 1 359 1 81 1 125 1 296 1 4 1 274 1 6 2 277 1 303 1 365 1 214 1 63 1 311 1 369 1 94 1 238 2 217 1 343 1 96 1 155 1 375 1 203 1 159 2 
354 1 119 1 139 1 206 1 75 1 19 1 48 1 228 1 359 1 81 1 125 1 296 1 4 1 274 1 6 2 303 1 365 1 214 1 63 1 311 1 369 1 94 1 238 3 343 1 96 1 375 1 180 1 203 2 17 1 159 3 
354 1 139 1 206 1 75 1 19 1 48 1 228 1 125 1 81 1 4 1 274 1 6 2 365 1 214 1 63 1 369 1 311 1 94 1 238 2 343 1 96 1 375 1 180 1 203 2 159 2 
354 2 119 1 353 1 206 1 226 1 228 2 327 1 81 1 125 2 296 1 82 1 274 1 84 1 231 1 26 1 285 1 312 1 94 1 238 1 96 1 375 2 17 1 159 1 
354 1 119 1 206 1 75 1 19 1 48 1 228 1 359 1 81 1 125 1 296 1 274 1 6 2 277 1 303 1 365 1 63 1 311 1 369 1 94 1 238 1 217 1 343 1 96 1 375 1 159 1 
310 1 
267 2 0 1 2 1 43 1 186 2 188 1 189 2 100 1 50 1 102 2 193 2 103 2 274 1 104 1 54 1 334 1 231 2 335 2 336 1 60 1 281 2 197 2 61 1 285 1 200 1 67 1 15 4 346 1 118 1 353 1 71 1 160 6 355 1 206 2 20 5 124 1 22 1 81 2 82 1 84 1 251 1 90 1 215 3 371 2 177 5 94 2 313 1 131 1 314 1 96 1 133 2 182 1 223 1 264 2 184 1 
160 2 0 1 2 1 43 1 188 1 100 1 20 3 50 1 22 1 85 1 251 1 60 1 215 1 177 3 314 1 200 1 67 1 15 2 133 1 346 1 182 1 223 1 264 1 184 1 
60 1 0 1 43 1 2 1 188 1 189 1 100 1 177 2 20 2 50 1 22 1 200 1 314 1 67 1 15 3 346 1 182 1 223 1 264 1 184 1 251 1 
160 2 0 1 2 1 43 1 188 1 189 1 100 1 20 3 50 1 22 1 85 1 335 1 251 1 60 1 215 1 177 3 314 1 200 1 67 1 15 3 133 1 346 1 182 1 223 1 264 1 184 1 
267 1 0 1 43 2 2 1 45 1 186 1 188 2 189 2 100 1 47 1 50 1 102 2 103 2 193 2 104 1 329 1 335 4 233 1 60 2 197 2 61 1 286 1 65 1 200 2 67 1 115 1 15 4 346 1 118 1 349 1 71 1 160 7 355 1 20 5 22 1 297 1 85 1 172 1 251 2 215 3 177 5 33 1 371 2 257 1 131 1 314 1 133 4 182 1 223 1 264 2 184 1 
267 1 71 1 160 4 0 1 355 1 2 1 43 2 186 1 188 1 189 2 100 1 20 4 50 1 22 1 102 2 193 2 103 2 104 1 335 2 336 1 251 1 60 1 281 2 197 2 61 1 215 2 371 2 177 4 131 1 314 1 200 1 67 1 15 4 133 2 346 1 182 1 118 1 223 1 264 3 184 1 
267 1 71 1 160 4 0 1 355 1 2 1 43 2 186 1 188 1 189 2 100 1 20 4 50 1 22 1 102 2 193 2 103 2 104 1 335 2 251 1 233 1 60 1 197 2 61 1 215 2 65 1 371 2 177 4 33 1 131 1 314 1 200 1 67 1 15 4 133 2 346 1 182 1 118 1 223 1 264 2 184 1 
267 1 71 1 160 4 0 1 355 1 2 1 43 2 186 1 188 1 189 2 100 1 20 4 50 1 22 1 102 2 193 2 103 2 104 1 335 2 251 1 233 1 60 1 197 2 61 1 215 2 65 1 371 2 177 4 33 1 131 1 314 1 200 1 67 1 15 4 133 2 346 1 182 1 118 1 223 1 264 2 184 1 
267 1 120 1 71 1 160 4 0 1 355 1 2 1 43 2 186 1 188 1 189 2 324 1 100 1 20 4 50 1 22 1 102 2 103 2 104 1 335 2 251 1 60 1 281 2 30 2 215 2 65 1 177 4 237 2 131 1 314 1 200 1 67 1 15 4 133 2 346 1 182 1 118 1 183 1 223 1 264 2 184 1 
267 1 0 1 43 2 2 1 45 1 186 1 188 2 189 3 100 1 50 1 102 2 103 2 193 2 104 1 329 1 335 3 233 1 60 2 197 2 61 1 286 1 65 1 200 2 67 1 115 1 15 5 346 1 118 1 349 1 71 1 160 5 355 1 20 4 22 1 297 1 172 1 251 2 215 2 177 4 33 1 371 2 257 1 131 1 314 1 133 3 182 1 223 1 264 2 184 1 
267 1 0 1 43 2 2 1 45 1 186 1 188 2 189 3 100 1 50 1 102 2 103 2 193 2 104 1 329 1 335 3 233 1 60 2 197 2 61 1 286 1 65 1 200 2 67 1 115 1 15 5 346 1 118 1 349 1 71 1 160 5 355 1 20 4 22 1 297 1 172 1 251 2 215 2 177 4 33 1 371 2 257 1 131 1 314 1 133 3 182 1 223 1 264 2 184 1 
267 1 71 1 160 4 0 1 355 1 2 1 43 2 186 1 188 1 189 2 100 1 20 4 50 1 22 1 102 2 103 2 104 1 335 2 336 1 251 1 60 1 281 2 30 2 215 2 177 4 237 2 131 1 314 1 200 1 67 1 15 4 133 2 346 1 182 1 118 1 183 1 223 1 264 2 184 1 
151 1 40 2 173 1 109 2 91 1 245 1 122 2 358 1 255 1 290 3 167 1 229 1 259 2 377 1 117 2 126 1 36 2 332 1 5 2 146 1 318 5 136 1 
40 3 141 12 245 2 121 1 122 4 191 1 163 12 326 1 105 3 146 1 5 10 55 1 27 3 151 2 173 2 109 1 91 2 29 1 284 3 128 3 66 1 290 5 13 1 14 2 377 3 291 1 241 12 158 4 318 15 136 2 
141 1 45 1 188 1 225 1 245 1 121 1 122 2 24 1 297 1 146 1 5 1 55 1 25 1 251 1 151 1 60 1 173 1 91 1 290 1 345 1 291 1 318 2 136 1 
40 3 141 2 45 1 188 1 225 1 274 1 105 1 146 2 330 1 5 3 231 1 55 1 151 2 60 2 339 1 285 1 198 1 290 2 345 1 116 1 69 1 291 1 241 2 353 1 206 1 245 2 207 1 122 4 163 2 81 1 297 1 83 1 251 2 27 2 173 2 91 2 128 1 94 1 95 1 96 1 259 1 377 1 317 1 318 5 266 1 136 2 
353 2 224 1 206 2 207 1 245 1 121 1 122 2 79 1 81 2 82 1 274 3 145 1 146 1 5 1 84 1 231 1 55 1 151 1 173 1 91 1 111 1 285 2 94 2 290 1 315 1 96 2 156 1 318 2 136 1 350 1 
40 1 141 1 45 1 188 1 245 1 122 2 163 1 297 1 105 1 329 1 146 1 5 1 332 1 333 1 251 1 151 1 60 1 173 1 91 1 235 1 128 1 290 2 259 1 262 1 377 1 291 1 241 1 318 3 136 1 
27 1 151 1 40 1 173 1 141 1 91 1 245 1 246 1 122 2 163 1 167 1 105 1 377 1 146 1 5 2 241 1 318 2 136 1 
151 1 40 1 173 1 141 1 91 1 245 1 235 1 122 2 163 1 290 2 167 1 259 1 276 1 146 1 332 1 241 1 318 2 136 1 
40 2 141 2 245 1 122 2 163 2 167 1 105 1 5 2 146 1 332 1 27 1 151 1 173 1 91 1 235 1 128 1 290 2 259 1 377 1 241 2 318 4 136 1 
27 1 151 1 40 1 173 1 141 1 91 1 245 1 246 1 122 2 163 1 156 1 105 1 377 1 146 1 5 2 241 1 318 2 136 1 
151 1 40 1 173 1 141 1 91 1 245 1 235 1 122 2 163 1 290 2 156 1 259 1 276 1 146 1 332 1 241 1 318 2 136 1 
27 1 151 1 40 1 173 1 141 1 91 1 245 1 122 2 128 1 163 1 156 1 105 1 377 1 146 1 5 2 241 1 318 2 136 1 
27 1 151 1 40 1 173 1 141 1 91 1 245 1 122 2 128 1 163 1 105 1 377 1 146 1 5 2 241 1 318 2 136 1 
353 1 206 1 207 1 245 1 121 1 122 2 81 1 274 1 5 1 330 1 146 1 231 1 55 1 251 1 151 1 60 1 339 1 173 1 109 1 91 1 285 1 94 1 95 1 290 1 96 1 317 1 318 2 136 1 
353 1 269 1 206 1 207 1 245 1 121 1 122 2 81 1 274 1 53 1 5 1 146 1 231 1 55 1 251 1 108 1 151 1 60 1 339 1 173 1 109 1 91 1 285 1 94 1 290 1 96 1 318 2 136 1 
27 1 151 1 40 1 173 1 141 1 91 1 245 1 122 2 128 1 163 1 105 1 377 1 146 1 5 2 291 1 241 1 318 2 136 1 
353 1 40 1 141 1 206 1 207 1 245 1 122 2 163 1 81 1 274 1 105 1 5 2 330 1 146 1 251 1 27 1 151 1 60 1 339 1 173 1 91 1 285 1 128 1 94 1 95 1 96 1 155 1 377 1 69 1 241 1 317 1 318 2 136 1 
40 1 141 1 45 1 188 1 245 1 122 2 163 1 297 1 105 1 329 1 146 1 5 2 333 1 251 1 27 1 151 1 60 1 173 1 91 1 31 1 128 1 377 1 291 1 241 1 318 2 136 1 
40 6 245 2 122 4 275 1 105 3 106 1 5 9 332 3 232 1 280 2 27 3 8 1 173 2 340 1 91 2 92 1 284 1 235 3 32 1 128 3 66 1 289 2 290 10 114 1 259 3 14 1 377 3 158 2 318 19 136 2 
243 1 40 4 162 2 245 3 99 1 122 6 51 1 275 1 105 3 106 1 332 2 5 14 232 1 280 1 27 2 127 1 173 3 89 1 91 3 92 2 284 2 235 2 32 1 128 3 66 2 289 4 290 12 114 2 259 2 377 3 348 1 318 26 158 2 136 3 
39 1 40 8 99 1 51 1 229 1 275 1 105 4 106 1 332 5 5 20 232 1 280 1 8 1 284 3 235 4 66 3 289 4 290 21 114 1 14 1 117 1 348 1 158 4 243 1 162 1 245 3 122 6 126 1 27 4 127 1 173 3 89 1 91 3 92 2 306 1 128 4 32 1 255 1 259 4 377 5 36 1 318 41 136 3 
243 1 39 1 40 7 162 2 245 4 99 1 122 8 51 1 229 1 275 1 105 4 106 1 126 1 5 20 332 4 232 1 280 1 27 3 127 1 8 1 173 4 89 1 91 4 306 1 92 2 284 3 235 3 32 1 128 4 255 1 66 3 289 4 290 18 114 1 259 4 14 1 377 5 117 1 36 1 348 1 158 4 318 38 136 4 
243 1 39 1 40 14 162 1 245 2 99 1 122 4 51 1 229 1 275 1 105 7 106 1 126 1 5 27 332 8 232 1 280 1 27 7 127 1 173 2 89 1 91 2 29 2 92 1 284 4 235 7 32 1 128 7 255 1 66 2 289 4 290 25 114 1 259 7 14 2 377 8 117 1 36 1 348 1 158 4 318 52 136 2 
88 1 154 1 185 1 209 1 321 1 210 1 170 1 356 1 372 1 123 1 
337 1 171 1 
23 1 88 1 185 1 209 1 321 1 143 1 210 1 123 1 265 1 
152 1 263 1 
37 1 363 1 230 1 
88 1 185 1 321 1 356 1 366 1 177 1 372 1 123 1 20 1 78 1 101 2 154 1 209 1 261 1 201 1 210 1 264 1 57 1 
88 1 185 1 321 1 356 1 366 1 177 1 372 1 123 1 20 1 78 1 101 2 154 1 209 1 261 1 201 1 210 1 264 1 57 1 
88 1 185 1 321 1 356 1 366 1 177 1 372 1 123 1 20 1 78 1 101 2 154 1 209 1 261 1 201 1 210 1 264 1 57 1 
152 1 263 1 37 1 
152 1 263 1 37 1 
363 1 230 1 
37 1 363 1 230 1 
138 1 211 1 
138 1 185 1 321 1 72 1 45 2 244 1 188 2 123 1 20 1 78 1 101 1 297 2 209 1 210 1 211 1 171 1 251 2 337 1 88 1 60 2 109 1 368 1 177 1 287 1 201 1 97 1 319 1 
353 1 46 1 206 2 188 2 227 1 245 1 121 1 122 2 79 1 166 1 81 2 274 1 146 1 5 1 55 1 251 2 151 1 60 2 304 1 173 1 91 1 285 1 112 1 94 2 290 1 96 1 291 1 318 2 242 1 136 1 350 2 
365 1 303 1 75 1 206 2 63 1 311 1 369 1 94 2 48 1 52 1 81 2 343 1 96 1 249 1 155 1 274 1 375 1 194 1 6 2 
365 1 303 1 75 1 206 1 63 1 357 1 311 1 369 1 94 1 48 1 81 1 343 1 249 1 96 1 375 1 274 1 6 2 
353 1 206 1 226 1 285 1 94 1 81 1 96 1 82 1 274 1 375 1 194 1 147 1 84 1 231 1 
365 1 303 1 75 1 206 1 63 1 311 1 369 1 94 1 48 1 52 1 81 1 343 1 249 1 96 1 274 1 375 1 194 1 6 2 
148 1 
267 1 150 1 43 1 186 1 28 1 264 1 358 1 
267 1 71 1 160 1 355 1 43 1 186 1 20 1 193 1 104 1 197 1 281 1 61 1 215 1 371 1 177 1 118 1 264 2 
267 3 186 4 271 2 50 1 328 1 274 2 104 2 105 1 332 1 231 1 278 1 281 6 285 4 235 1 236 1 118 2 347 1 353 1 71 2 160 2 294 3 355 2 206 1 205 1 207 1 20 2 165 3 81 1 87 1 364 1 305 1 215 1 216 1 177 2 371 3 128 1 94 1 313 1 96 1 316 1 377 1 264 3 266 1 
71 2 267 5 243 1 160 1 294 5 355 2 43 2 44 1 186 8 205 2 77 1 99 1 20 1 124 1 165 5 51 1 104 2 105 2 332 2 281 6 89 1 215 1 284 1 235 2 177 1 371 3 128 2 66 1 313 1 132 1 377 2 118 2 348 1 264 5 158 1 
71 1 267 2 355 1 187 1 186 2 45 1 205 2 188 1 77 1 20 1 297 1 104 1 329 1 126 1 332 1 172 1 251 1 60 1 286 1 33 1 177 1 257 1 200 1 377 2 117 1 36 1 118 1 349 1 
71 1 267 1 150 1 355 1 43 1 28 1 186 1 104 1 118 1 264 1 
267 5 294 5 281 10 186 5 205 2 77 1 235 2 128 2 371 5 165 5 105 2 377 2 332 2 264 5 266 1 
160 1 43 1 215 1 264 1 177 1 20 1 
353 1 71 1 267 2 160 4 268 2 355 2 186 2 206 4 20 3 124 2 295 1 81 4 82 1 274 1 104 2 334 1 84 1 231 2 86 1 90 1 215 2 285 1 177 3 94 4 313 2 96 1 135 1 118 2 157 1 
353 1 45 2 206 1 188 2 245 1 323 1 207 1 122 2 81 1 297 2 274 1 329 2 330 1 146 1 231 1 55 1 172 1 251 3 151 1 60 3 173 1 339 1 109 1 91 1 285 1 94 1 95 1 290 1 96 1 317 1 318 1 136 1 
267 2 71 1 39 1 281 4 294 2 355 1 43 2 186 1 371 2 313 1 165 2 124 1 104 1 118 1 264 4 
338 1 185 1 209 1 
293 1 138 1 185 1 209 1 356 1 
338 1 185 1 209 1 
338 1 185 1 209 1 
185 1 209 1 129 1 
185 1 209 1 129 1 
185 1 209 1 129 1 
185 1 209 1 
321 1 210 1 
27 1 39 1 40 3 173 2 91 2 162 1 245 2 122 4 255 1 290 4 229 1 259 2 377 1 117 1 126 1 36 1 332 1 5 4 318 8 136 2 
290 3 229 1 39 1 40 2 259 2 377 1 117 1 126 1 36 1 332 1 5 3 358 1 255 1 318 6 
27 1 40 2 173 1 91 1 245 1 235 1 122 2 128 1 290 2 259 1 105 1 377 1 202 1 332 1 5 2 318 4 136 1 
27 1 40 2 284 1 235 1 128 1 66 1 290 4 259 1 14 1 105 1 377 1 332 1 5 3 158 2 318 7 
39 1 40 9 162 2 245 2 122 4 248 1 229 1 105 2 126 1 5 11 332 3 27 4 173 2 91 2 29 1 284 2 235 2 128 2 255 1 290 12 13 1 14 1 259 5 377 3 117 2 36 2 318 23 158 2 136 2 
290 1 318 1 158 1 
5 1 284 1 318 1 
27 1 40 3 173 1 91 1 245 1 235 1 122 2 128 1 290 3 259 2 105 1 377 1 202 1 5 3 332 1 266 1 318 6 136 1 
243 1 40 2 245 1 99 1 122 2 51 1 105 2 5 6 332 2 27 1 173 1 89 1 91 1 284 1 235 2 32 1 128 2 66 1 290 6 259 1 377 2 348 1 318 12 158 1 136 1 
27 1 40 2 290 3 259 1 377 1 117 1 126 1 36 1 5 3 332 1 318 6 
27 1 40 2 173 1 162 1 91 1 245 1 122 2 255 1 248 1 290 2 229 1 259 1 117 1 36 1 5 1 318 3 136 1 
27 2 40 5 173 1 91 1 187 1 245 1 122 2 32 1 290 5 259 3 377 2 117 2 36 2 126 1 5 5 332 2 318 10 136 1 
27 1 40 1 173 1 91 1 245 1 122 2 32 1 105 1 377 1 5 2 318 2 136 1 
27 1 40 2 173 1 91 1 245 1 235 1 122 2 32 1 128 1 290 2 259 1 105 1 377 1 332 1 5 2 318 4 136 1 
27 1 40 2 8 1 173 3 162 1 91 3 245 3 122 6 32 1 248 1 290 2 259 1 117 1 36 1 5 1 318 3 136 3 
39 1 40 12 162 2 245 5 122 10 248 1 229 1 105 3 126 2 5 16 332 5 27 5 7 1 8 1 173 5 91 5 284 3 235 3 176 1 32 1 128 3 255 1 66 1 373 1 290 18 14 1 259 7 377 5 117 3 36 3 202 1 158 4 318 34 136 5 
39 1 40 2 245 1 122 2 229 1 126 1 332 1 5 4 173 1 91 1 284 1 32 1 66 1 255 1 290 4 259 2 377 1 117 1 36 1 348 1 318 8 158 1 136 1 
39 1 40 3 245 2 122 4 229 1 105 1 126 1 332 1 5 6 27 1 173 2 91 2 284 1 32 1 128 1 255 1 66 1 290 5 259 2 14 1 377 2 117 1 36 1 202 1 348 1 318 11 158 2 136 2 
243 1 39 1 40 4 162 1 245 3 99 1 122 6 51 1 229 1 105 2 126 1 5 9 332 3 27 1 173 3 89 1 91 3 284 1 235 2 32 1 128 2 255 1 66 1 290 10 259 3 377 3 117 1 36 1 202 1 348 1 318 19 158 1 136 3 
243 1 39 1 40 5 162 1 245 3 99 1 122 6 51 1 229 1 105 2 126 1 5 10 332 2 27 2 173 3 89 1 91 3 284 1 235 1 32 1 128 2 255 1 66 1 290 7 259 3 377 3 117 1 36 1 202 1 348 1 318 17 158 1 136 3 
39 1 40 2 245 1 122 2 229 1 126 1 332 1 5 4 173 1 91 1 284 1 32 1 66 1 255 1 290 4 259 2 377 1 117 1 36 1 348 1 318 8 158 1 136 1 
243 1 40 2 245 1 99 1 122 2 51 1 105 2 5 6 332 2 27 1 173 1 89 1 91 1 284 1 235 2 32 1 128 2 66 1 290 6 259 1 377 2 348 1 318 12 158 1 136 1 
243 1 39 1 40 5 162 2 245 4 99 1 122 8 51 1 229 1 105 2 126 1 5 10 332 2 27 2 173 4 89 1 91 4 284 1 235 1 32 1 128 2 255 1 66 1 290 8 259 3 377 3 117 1 36 1 202 1 348 1 318 18 158 1 136 4 
243 1 40 6 162 2 245 4 99 1 122 8 51 1 105 3 5 9 332 2 27 3 173 4 8 1 89 1 91 4 284 1 235 2 32 1 128 3 66 1 290 7 259 3 377 3 348 1 318 16 158 1 136 4 
27 3 40 6 255 2 290 4 229 1 259 3 377 1 117 3 36 3 126 1 332 1 5 3 318 7 
243 1 39 1 40 4 162 2 245 4 99 1 122 8 51 1 229 1 105 2 126 1 5 10 332 2 27 1 173 4 8 1 89 1 91 4 284 1 235 1 32 1 128 2 255 1 66 1 290 8 259 3 377 3 117 1 36 1 348 1 318 18 158 1 136 4 
218 1 60 1 109 1 188 1 346 1 256 1 251 1 
204 1 41 1 60 1 109 1 188 1 256 1 80 1 218 1 346 1 299 1 320 1 251 1 
353 1 81 1 96 1 82 1 274 1 206 1 285 1 84 1 358 1 231 1 94 1 
353 1 60 2 339 1 109 1 45 1 188 1 206 1 207 1 225 1 285 1 94 1 95 1 81 1 96 1 297 1 274 1 231 1 251 2 
353 2 60 2 268 1 0 1 339 1 109 1 45 1 188 2 206 1 207 2 225 1 285 3 94 1 95 1 199 1 22 1 81 1 200 1 96 1 297 2 274 1 196 1 251 2 
353 2 268 1 0 1 45 1 206 2 188 2 225 1 207 2 325 1 22 1 81 2 297 2 274 1 196 1 251 2 108 1 60 2 339 1 109 1 285 3 94 2 199 1 200 1 96 1 
353 1 160 1 268 1 43 1 45 1 188 1 206 1 207 1 271 1 20 2 50 1 81 1 297 1 274 1 329 1 196 1 172 1 251 1 60 1 252 1 285 4 307 1 286 1 177 2 257 1 94 1 199 1 200 1 96 1 347 1 264 1 349 1 
353 1 160 1 268 1 43 1 45 1 188 1 206 1 207 1 271 1 20 2 50 1 81 1 297 1 274 1 329 1 196 1 172 1 251 1 87 1 60 1 285 4 286 1 177 2 257 1 94 1 199 1 200 1 96 1 347 1 264 1 349 1 
81 1 96 1 274 1 322 1 206 1 94 1 
353 2 161 1 322 1 46 1 75 1 206 6 207 1 285 3 113 1 254 1 216 1 94 5 81 6 315 1 96 2 274 3 145 1 181 1 231 2 350 1 
353 1 40 2 45 1 188 1 206 1 207 1 225 1 245 2 122 4 166 1 229 1 81 1 297 1 274 1 83 1 126 1 332 1 5 2 146 2 330 1 251 2 151 2 60 2 339 1 173 2 109 2 91 2 285 1 255 1 94 1 95 1 290 3 96 1 155 1 259 2 377 1 117 2 69 1 36 2 291 1 317 1 318 5 136 2 
267 5 43 2 187 1 186 4 45 1 188 1 271 1 50 1 104 2 329 1 332 2 231 1 278 1 150 1 60 1 285 2 286 1 287 1 200 1 117 1 347 1 118 2 157 1 349 1 71 2 160 2 355 2 206 1 205 2 77 1 20 3 81 1 297 1 126 1 172 1 87 1 251 1 364 1 305 1 28 1 215 1 177 3 257 1 94 1 377 2 36 1 264 2 
353 1 322 1 206 2 207 1 285 2 216 1 94 2 236 1 81 2 96 1 155 1 274 2 347 1 
353 1 206 4 285 1 325 1 94 4 81 4 344 1 82 1 96 1 155 1 274 1 84 1 231 1 
59 1 353 1 224 1 268 1 206 2 111 1 207 1 285 1 94 2 81 2 315 1 96 1 274 2 145 1 
81 1 365 1 96 1 274 1 206 1 311 1 6 1 231 1 48 1 94 1 
353 1 81 2 96 1 304 1 155 1 274 1 46 1 75 1 206 2 285 1 94 2 
353 2 268 1 206 5 46 1 285 3 113 1 94 4 81 5 344 1 82 1 96 2 155 1 274 2 181 1 84 1 231 1 
353 2 268 1 206 5 46 1 285 3 113 1 94 4 21 1 81 5 344 1 82 1 96 2 155 1 274 2 84 1 231 1 
353 1 108 1 60 2 339 1 109 1 45 1 188 1 206 1 207 1 225 1 285 1 94 1 81 1 96 1 297 1 274 1 231 1 251 2 
353 1 268 1 161 1 206 1 207 1 285 1 216 1 94 1 81 1 315 1 96 1 274 2 145 1 
109 1 153 1 195 1 93 1 292 1 
0 1 2 1 43 1 45 1 188 1 98 1 49 1 20 2 50 1 22 1 168 1 297 1 329 1 195 1 172 1 251 1 60 1 153 1 286 1 177 2 287 1 93 1 257 1 130 1 200 2 264 1 349 1 292 1 
60 1 188 1 227 1 153 1 112 1 93 1 292 1 251 1 242 1 
168 1 93 1 130 1 
139 1 4 1 214 1 358 1 
238 1 119 1 139 1 296 1 4 1 214 1 159 1 
238 1 125 1 228 1 
119 1 139 1 214 1 74 1 370 2 238 3 296 1 4 1 376 1 222 1 277 1 159 3 
238 2 119 1 139 1 296 1 4 1 214 1 35 1 203 1 159 2 
119 1 137 1 76 1 369 1 311 1 238 1 296 1 4 1 6 1 277 1 159 1 
238 1 119 1 139 1 296 1 4 1 277 1 159 1 
238 1 119 1 139 2 296 1 214 1 277 1 159 1 
119 2 139 1 18 1 238 2 272 1 296 2 4 1 34 1 277 1 159 2 
119 1 139 1 214 1 175 1 76 1 253 1 238 3 296 1 192 1 4 2 203 2 277 1 159 3 
119 1 139 1 365 1 214 1 73 1 63 1 369 1 311 1 238 2 296 1 4 1 203 1 6 2 277 1 159 2 
119 2 302 1 139 1 214 1 76 1 238 4 296 2 192 1 4 2 35 1 203 2 277 1 159 4 
238 1 119 1 139 1 296 1 4 1 214 1 277 1 159 1 
119 1 139 2 214 2 174 1 74 1 76 1 370 1 238 4 296 1 192 1 4 3 376 1 203 2 159 4 
119 1 351 1 139 1 214 1 238 2 296 1 4 1 178 1 331 1 203 1 277 1 159 2 
119 1 213 1 139 1 214 1 74 1 370 2 238 3 296 1 4 1 376 2 277 1 159 3 
4 2 283 1 247 1 300 2 
238 1 119 1 296 1 62 1 277 1 159 1 
238 2 119 1 139 1 296 1 4 1 214 1 175 1 203 1 277 1 159 2 
279 1 
238 1 119 1 139 1 296 1 4 1 214 1 277 1 159 1 
238 3 119 1 139 1 296 1 4 1 214 1 175 1 203 1 370 1 277 1 159 3 
4 1 192 1 174 1 76 1 
139 1 4 1 

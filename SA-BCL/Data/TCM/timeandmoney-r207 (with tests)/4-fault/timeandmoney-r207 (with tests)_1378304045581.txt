#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 271 173 38 292 54 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 271 173 38 292 54 309 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 271 173 38 292 54 309 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 271 173 38 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 271 173 38 292 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 271 173 38 292 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 357 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 2 1 331 3 59 6 212 1 289 2 106 9 158 2 336 1 160 2 140 1 68 2 69 2 219 1 14 1 70 1 370 1 189 1 203 1 118 2 51 1 276 9 209 1 227 1 253 2 327 5 381 4 255 1 
1 1 2 1 331 3 59 6 212 1 289 2 106 9 158 2 336 1 160 2 140 1 68 2 69 2 219 1 14 1 70 1 370 1 189 1 203 1 118 2 51 1 276 9 209 1 227 1 253 2 327 5 381 4 255 1 
1 1 2 1 331 4 59 7 212 1 289 2 106 10 158 2 336 1 160 2 140 1 68 2 69 2 219 1 14 1 70 1 370 1 189 1 203 1 118 2 51 1 276 10 209 1 227 1 253 2 327 6 381 5 255 1 
1 1 2 1 331 2 59 4 212 1 289 2 106 7 158 2 336 1 160 2 140 1 68 1 69 2 219 1 14 1 70 1 370 1 189 1 118 2 51 1 276 7 209 1 227 1 253 2 327 4 381 3 255 1 
70 1 2 1 370 1 331 1 203 1 59 3 118 1 212 1 51 1 289 1 276 4 106 4 158 1 253 1 327 3 381 2 68 2 69 1 
2 1 187 1 370 1 189 1 212 1 289 1 276 2 106 2 158 1 293 1 215 1 336 1 160 1 253 1 327 1 69 1 
1 1 2 1 370 1 331 1 59 1 212 1 289 2 276 3 106 3 158 2 160 1 327 2 381 1 
70 1 14 1 1 1 2 1 370 1 246 1 203 1 331 3 118 1 59 7 212 1 51 1 289 2 276 9 106 9 158 2 160 1 253 1 126 1 327 5 381 4 68 2 69 1 219 1 
70 1 14 1 1 1 2 1 370 1 246 1 203 1 331 3 118 1 59 7 212 1 51 1 289 2 276 9 106 9 158 2 160 1 253 1 126 1 327 5 381 4 68 2 69 1 219 1 
102 1 86 1 346 1 
53 1 143 2 346 1 
6 2 199 1 114 2 31 2 9 2 191 2 243 1 270 2 
101 1 31 3 87 2 306 1 133 1 135 1 35 1 334 1 6 2 264 1 199 1 41 1 9 2 312 1 108 1 243 1 295 1 270 2 201 2 114 3 117 1 49 1 167 1 188 1 93 1 145 1 76 2 374 1 347 1 250 2 279 1 121 1 191 2 252 1 351 1 326 1 230 2 
6 1 298 1 114 1 31 1 115 1 9 1 191 1 343 1 243 1 270 1 
102 1 114 1 31 1 166 1 372 1 155 1 343 1 346 1 146 1 261 1 6 1 360 1 26 1 40 1 
102 1 114 1 31 1 166 1 372 1 155 1 343 1 346 1 261 1 6 1 360 2 40 2 191 1 9 1 270 1 
360 1 40 1 364 1 290 1 23 1 
102 1 360 2 190 1 40 2 81 1 346 1 290 1 23 1 
360 1 40 1 290 1 
298 1 114 1 115 1 31 1 343 1 23 1 6 1 360 1 40 1 191 1 9 1 243 1 11 1 270 1 
346 1 
16 1 102 1 360 2 190 1 40 2 346 1 290 1 23 1 
102 1 84 2 245 1 156 1 34 2 346 1 157 1 213 1 195 1 23 2 290 2 208 1 360 5 311 1 190 1 40 5 229 2 175 1 110 1 
199 1 86 1 
114 2 31 2 202 1 6 2 199 2 191 1 9 1 65 1 270 1 
3 1 308 1 127 1 
114 1 31 1 133 1 145 1 135 1 35 1 347 1 250 1 199 1 121 1 312 1 252 1 326 1 230 1 303 1 201 1 
114 2 31 2 308 1 133 1 145 1 135 1 347 1 35 1 250 1 310 1 6 1 121 1 252 1 9 1 312 1 326 1 161 1 230 1 270 1 201 1 
114 5 31 5 202 1 21 1 146 1 6 5 310 1 199 1 148 1 9 4 191 1 161 2 283 1 270 4 
6 2 304 1 298 1 114 2 31 2 9 2 343 1 270 2 
6 3 199 1 114 3 31 3 191 1 9 3 161 1 270 3 
6 1 298 1 114 1 31 1 9 1 343 1 270 1 
6 1 114 1 31 1 202 1 9 1 191 1 343 1 65 1 270 1 
101 1 305 1 31 4 87 2 155 1 306 1 133 1 135 1 35 1 261 1 334 1 6 3 310 1 360 1 199 1 40 1 41 1 312 1 9 3 268 1 108 1 161 1 243 1 270 3 201 1 114 4 117 1 49 1 202 1 166 1 372 1 343 1 93 1 145 1 76 1 347 1 250 1 279 1 121 1 252 1 191 2 351 1 326 1 230 1 
6 2 199 1 114 2 31 2 148 1 9 1 161 1 146 1 270 1 
114 3 31 3 305 1 202 1 85 1 166 1 372 1 343 1 155 1 346 1 261 1 310 1 6 3 360 1 40 1 191 1 9 3 161 2 270 3 
114 2 31 2 202 1 308 1 6 2 191 1 9 2 161 1 127 1 270 2 
114 1 31 1 133 1 145 1 135 1 35 1 347 1 250 1 199 1 121 1 312 1 252 1 326 1 230 1 201 1 
233 1 114 1 31 1 145 1 135 1 35 1 321 1 347 1 250 1 199 1 121 1 252 1 326 1 230 1 201 1 
177 1 101 1 193 1 87 2 3 2 306 1 308 2 307 1 4 1 333 1 264 2 267 1 41 2 337 1 108 1 269 1 271 1 49 1 93 1 76 4 279 1 281 1 174 1 127 2 
6 1 304 1 114 1 31 1 372 1 9 1 343 1 270 1 
176 1 183 1 
176 1 183 1 
280 1 338 1 
280 1 338 1 
280 1 338 1 
176 1 183 1 103 1 
176 1 183 1 103 1 
176 1 183 1 32 1 
176 2 280 1 257 1 259 1 183 2 338 1 
176 1 183 1 103 1 
256 1 176 1 183 1 
256 1 176 1 183 1 
256 1 176 1 183 1 
285 1 176 1 317 1 114 2 31 2 329 1 237 1 92 1 345 1 32 1 204 1 319 1 359 1 6 2 262 1 360 1 199 1 122 1 40 1 183 1 9 2 162 1 56 1 270 2 
176 2 71 1 259 1 329 1 237 2 204 2 104 1 346 1 262 2 36 1 360 2 122 2 200 1 183 2 40 2 361 1 162 3 362 2 163 1 
253 1 118 1 69 1 
187 1 253 1 69 1 
232 1 187 1 239 1 107 1 118 2 69 3 
232 1 187 1 239 1 118 1 61 1 69 2 
232 2 187 1 239 1 118 1 69 2 
285 1 177 1 84 1 102 1 286 1 34 1 156 1 333 1 4 1 290 1 198 1 360 5 40 5 45 1 271 1 143 3 273 1 92 1 119 2 346 2 23 4 208 3 77 2 173 1 53 1 123 1 190 1 228 2 229 1 175 2 151 1 56 1 
285 4 177 3 102 1 84 2 286 2 332 5 260 1 156 1 34 2 333 3 4 3 5 1 290 6 198 1 360 9 40 9 110 1 364 5 271 3 113 1 366 1 143 9 273 2 119 6 75 1 346 5 170 1 23 7 208 8 173 3 53 3 190 1 228 6 229 2 175 6 
285 1 177 1 102 1 84 1 286 1 34 1 333 1 4 1 360 3 40 3 45 1 110 1 271 1 273 1 143 4 346 3 119 2 23 2 208 3 77 1 173 1 53 2 228 2 229 1 175 2 151 1 
285 2 177 2 102 1 84 1 286 1 34 1 333 2 4 2 5 1 360 4 40 4 110 1 45 1 271 2 113 1 143 7 273 1 346 4 119 4 170 1 23 3 208 5 77 2 173 2 53 3 228 4 229 1 175 4 151 1 
294 1 86 1 135 1 
135 1 153 1 
47 1 
326 1 145 1 135 1 
236 1 135 1 
326 1 135 1 
348 1 294 2 214 1 326 1 145 1 135 3 
272 1 177 1 130 1 356 2 221 1 307 2 4 1 76 7 24 1 197 1 264 4 39 1 41 3 313 1 337 3 109 1 142 1 
272 1 177 1 130 1 356 2 221 1 307 2 4 1 76 7 24 1 197 1 264 4 39 1 41 3 313 1 337 3 109 1 142 1 
272 1 177 1 130 1 356 2 221 1 307 2 4 1 134 1 76 7 24 1 197 1 264 4 39 1 41 3 313 1 337 3 109 1 142 1 
130 5 177 4 101 1 287 1 356 3 87 2 307 5 4 4 333 3 136 4 60 3 197 2 264 16 39 1 41 15 313 2 337 10 109 1 142 2 272 2 271 3 221 1 49 1 93 1 50 1 222 1 76 31 24 1 279 1 173 3 350 1 28 1 150 1 231 1 
177 1 234 1 130 1 101 2 356 2 87 4 307 3 4 1 197 1 264 5 41 4 313 1 337 4 218 1 109 1 142 1 272 1 49 2 221 1 93 2 76 9 24 1 279 2 231 1 
57 1 2 1 58 1 59 1 212 1 289 1 106 2 238 1 158 1 107 1 160 1 201 1 69 2 187 1 370 1 371 1 19 1 118 1 274 1 275 1 250 1 276 2 97 1 121 1 252 1 253 1 125 1 327 1 211 1 230 1 
57 1 2 1 58 1 154 1 59 2 212 1 289 1 106 3 238 1 158 1 107 1 160 1 363 1 201 1 13 1 69 2 187 1 371 1 19 1 118 1 274 1 275 1 250 1 276 3 121 1 252 1 253 1 327 1 211 1 230 1 
57 1 2 1 58 1 59 2 212 1 106 2 238 1 107 1 160 1 363 1 201 1 13 1 69 2 187 1 19 1 118 1 274 1 250 1 276 2 121 1 252 1 253 1 327 1 211 1 230 1 
57 2 58 2 154 1 33 1 289 1 135 1 35 1 106 1 158 1 91 1 160 2 201 1 111 1 250 1 276 1 225 1 121 1 322 1 252 1 326 1 211 2 230 1 301 1 
57 1 187 1 58 1 370 1 19 1 371 1 118 1 274 1 275 1 289 1 276 1 250 1 238 1 106 1 158 1 121 1 97 1 107 1 252 1 160 1 253 1 230 1 211 1 69 2 13 1 201 1 
141 1 
102 1 286 1 155 1 156 1 290 6 6 1 10 1 339 1 201 2 164 2 114 1 72 2 166 1 343 1 168 1 346 2 208 2 250 2 210 2 26 1 121 1 252 1 124 4 175 2 302 2 84 1 31 1 88 2 33 1 34 1 358 1 135 1 35 2 261 1 37 1 360 5 40 5 139 1 184 2 143 2 372 1 146 1 147 1 278 1 53 2 377 1 322 1 190 3 326 1 229 1 325 1 380 2 379 1 230 2 152 1 
16 1 114 1 31 1 372 1 166 1 343 1 155 1 168 1 358 1 146 1 290 2 147 1 261 1 6 1 360 3 26 1 190 1 40 3 124 2 10 1 380 1 152 1 
102 1 31 1 155 1 358 1 290 1 261 1 6 1 360 3 40 3 10 1 16 1 114 1 72 1 166 1 372 1 343 1 168 1 346 1 146 1 147 1 26 1 190 1 124 3 152 1 
102 1 31 1 155 1 358 1 290 2 261 1 6 1 360 3 40 3 10 1 16 1 114 1 72 1 166 1 372 1 343 1 168 1 346 1 146 1 147 1 26 1 190 1 124 3 380 1 152 1 302 1 
84 1 102 5 258 1 31 1 155 1 88 2 34 1 156 1 358 1 291 1 290 7 261 1 6 1 360 5 139 1 40 5 184 2 10 1 296 1 164 2 16 1 114 1 72 4 166 1 372 1 343 1 168 1 346 5 146 1 147 1 208 1 53 2 210 2 26 1 226 1 190 3 124 6 229 1 379 1 175 1 380 4 128 1 152 1 302 4 
102 1 155 1 156 1 290 4 6 1 10 1 164 2 114 1 72 2 166 1 343 1 168 1 346 2 208 1 26 1 210 2 124 4 175 1 302 2 84 1 31 1 34 1 358 1 88 2 261 1 37 1 360 4 139 1 40 4 184 2 143 2 372 1 146 1 147 1 53 2 190 2 229 1 379 1 380 2 152 1 
102 1 84 1 31 1 258 1 155 1 88 2 358 1 156 1 34 1 290 4 291 1 261 1 6 1 360 4 139 1 40 4 184 2 10 1 296 1 164 2 114 1 72 2 166 1 372 1 343 1 168 1 346 1 146 1 147 1 208 1 53 2 210 2 26 1 190 2 124 4 229 1 380 2 379 1 175 1 152 1 302 2 
102 1 84 1 31 1 258 1 155 1 88 2 358 1 156 1 34 1 290 4 291 1 261 1 6 1 360 4 139 1 40 4 184 2 10 1 296 1 164 2 114 1 72 2 166 1 372 1 343 1 168 1 346 1 146 1 147 1 208 1 53 2 210 2 26 1 190 2 124 4 229 1 380 2 379 1 175 1 152 1 302 2 
129 1 102 1 84 1 31 1 155 1 88 2 358 1 156 1 34 1 290 4 291 1 261 1 6 1 360 4 40 4 10 1 242 1 297 1 114 1 72 2 143 2 166 1 372 1 343 1 168 1 346 1 146 1 147 1 277 2 208 1 299 2 210 2 26 1 190 2 124 4 229 1 380 2 379 1 175 1 152 1 302 2 
102 1 84 1 31 1 258 1 155 1 88 2 34 1 156 1 358 1 291 1 290 5 261 1 6 1 360 4 139 1 40 4 184 2 10 1 296 1 164 2 114 1 72 3 166 1 372 1 343 1 168 1 346 1 146 1 147 1 208 1 53 2 210 2 26 1 190 2 124 5 229 1 379 1 175 1 380 3 152 1 128 1 302 3 
102 1 84 1 31 1 258 1 155 1 88 2 34 1 156 1 358 1 291 1 290 5 261 1 6 1 360 4 139 1 40 4 184 2 10 1 296 1 164 2 114 1 72 3 166 1 372 1 343 1 168 1 346 1 146 1 147 1 208 1 53 2 210 2 26 1 190 2 124 5 229 1 379 1 175 1 380 3 152 1 128 1 302 3 
102 1 155 1 156 1 290 4 6 1 10 1 297 1 114 1 72 2 166 1 343 1 168 1 346 1 208 1 299 2 26 1 210 2 124 4 175 1 302 2 84 1 31 1 34 1 358 1 88 2 261 1 37 1 360 4 40 4 143 2 372 1 146 1 147 1 277 2 190 2 229 1 379 1 380 2 152 1 
177 1 101 1 356 1 86 1 87 2 3 1 308 1 306 1 307 2 4 1 264 3 199 2 41 3 313 1 337 2 108 1 269 1 109 1 272 1 221 1 49 1 93 1 76 6 24 1 279 1 127 1 
130 1 177 1 101 2 287 1 87 4 3 11 307 1 306 1 308 11 4 2 333 1 136 3 196 1 60 3 334 1 264 8 199 1 335 1 41 6 337 2 43 1 108 2 271 2 367 1 49 2 167 1 93 2 222 1 76 14 172 1 279 2 173 2 127 4 
101 1 31 2 87 2 132 1 133 1 306 1 135 1 35 1 196 1 6 1 310 1 334 1 264 1 199 1 312 1 9 1 41 1 185 1 108 1 161 1 201 1 270 1 165 1 114 2 49 1 167 1 93 1 145 1 76 2 347 1 250 1 279 1 121 1 252 1 326 1 127 1 230 1 303 1 
101 3 3 7 4 3 333 2 196 1 334 1 6 1 199 2 64 1 9 1 337 5 161 1 108 3 109 1 201 1 114 3 117 2 167 1 74 2 248 2 76 20 347 2 250 1 24 1 173 2 121 2 252 2 127 7 130 1 83 2 177 3 178 2 356 1 31 3 87 6 306 3 133 2 308 7 307 4 135 2 35 1 310 1 264 10 41 10 312 2 313 1 270 1 272 1 271 2 221 1 49 3 93 3 145 2 279 3 282 1 326 2 230 1 
101 2 31 1 87 4 306 2 33 1 135 3 35 2 6 1 334 1 63 1 264 1 8 1 265 1 9 1 41 1 241 1 269 1 161 1 108 2 13 1 270 1 201 7 114 1 49 2 167 1 188 2 93 2 76 2 171 1 250 8 279 2 121 2 322 1 80 1 252 2 125 1 326 2 98 1 230 8 
177 1 101 1 31 1 87 2 3 1 307 1 308 1 306 1 4 1 333 1 196 1 6 1 264 1 9 1 41 2 337 1 108 1 270 1 271 1 341 1 114 1 202 1 49 1 93 1 76 3 279 1 173 1 191 1 127 1 
271 1 130 1 101 1 49 1 87 2 3 1 308 1 306 1 93 1 4 1 76 2 279 1 264 2 281 1 337 1 127 1 269 1 108 1 
177 1 101 1 49 1 87 2 3 1 307 1 308 1 306 1 93 1 333 1 76 2 279 1 267 1 41 2 337 1 127 1 269 1 108 1 
130 1 177 1 101 1 87 2 3 2 306 1 308 2 307 1 4 1 333 1 264 2 41 2 337 2 108 1 269 1 271 1 49 1 93 1 76 4 279 1 173 1 127 2 
271 1 130 1 101 1 49 1 87 2 3 1 308 1 306 1 93 1 4 1 76 2 279 1 264 2 281 1 8 1 337 1 127 1 108 1 
177 1 101 1 49 1 87 2 3 1 307 1 308 1 306 1 93 1 333 1 76 2 279 1 8 1 267 1 41 2 337 1 127 1 108 1 
130 1 177 1 101 1 87 2 3 2 306 1 308 2 307 1 4 1 333 1 264 2 8 1 41 2 337 2 108 1 271 1 49 1 93 1 76 4 279 1 173 1 127 2 
130 1 177 1 101 1 87 2 3 2 306 1 308 2 307 1 4 1 333 1 264 2 41 2 337 2 108 1 271 1 49 1 93 1 76 4 279 1 173 1 127 2 
101 1 31 1 87 2 133 1 306 1 135 1 35 1 334 1 264 1 199 1 312 1 41 1 108 1 201 1 114 1 117 1 49 1 167 1 93 1 145 1 76 2 347 1 250 1 279 1 121 1 252 1 326 1 230 1 
233 1 114 1 31 1 145 1 135 1 35 1 321 1 347 1 250 1 121 1 252 1 326 1 230 1 67 1 201 1 
130 1 177 1 101 1 87 2 3 2 306 1 308 2 307 1 4 1 333 1 196 1 264 2 41 2 337 2 108 1 271 1 49 1 93 1 76 4 279 1 173 1 127 2 
177 1 130 1 101 1 31 1 87 2 3 2 307 1 308 2 133 1 306 1 333 1 4 1 135 1 264 2 41 2 312 1 337 2 108 1 201 1 271 1 114 1 117 1 49 1 93 1 145 1 74 1 76 4 347 1 250 1 279 1 173 1 121 1 252 1 125 1 326 1 127 2 230 1 
177 1 130 1 101 1 31 1 87 2 3 1 306 1 308 1 333 1 4 1 196 1 6 1 264 2 41 1 9 1 337 1 108 1 270 1 220 1 271 1 114 1 202 1 49 1 93 1 76 3 279 1 173 1 191 1 127 1 
130 3 177 3 30 1 101 2 287 1 87 4 307 3 309 1 4 3 333 3 182 2 136 2 137 2 60 1 264 9 41 10 240 1 337 6 218 1 271 3 49 2 93 2 95 1 222 1 76 19 224 1 279 2 173 3 192 1 54 1 
177 1 101 2 87 4 307 1 309 1 4 2 333 1 182 2 136 2 60 2 292 1 264 9 38 1 41 8 337 1 218 1 186 1 271 2 49 2 93 2 222 2 76 17 224 2 279 2 173 2 96 1 192 1 231 1 54 2 284 1 
130 4 177 5 30 1 101 3 287 1 356 1 87 6 307 4 309 1 4 5 333 4 182 4 136 4 137 1 60 3 292 1 264 20 38 1 41 21 313 1 337 8 218 1 109 1 186 1 272 1 271 4 342 1 221 1 49 3 144 1 93 3 95 1 222 3 76 41 24 1 224 2 279 3 173 4 96 1 192 1 231 1 284 1 54 1 
130 2 177 3 30 1 101 3 287 1 87 6 307 3 309 1 4 4 333 3 182 3 136 4 137 1 60 3 292 1 264 15 38 1 41 15 337 5 218 1 186 1 271 4 49 3 144 1 93 3 95 1 222 3 76 30 224 2 279 3 173 4 96 1 192 1 231 1 284 1 54 1 
130 4 177 6 101 1 287 2 356 1 87 2 307 6 309 1 4 7 333 5 182 2 136 4 60 4 292 1 264 22 38 1 41 19 313 1 337 10 218 1 109 1 186 1 272 1 271 6 221 1 49 1 93 1 222 2 76 41 24 1 224 1 172 2 279 1 173 6 96 1 192 1 284 1 54 1 
176 1 262 1 354 1 122 1 259 1 183 1 361 1 237 1 204 1 163 1 
359 1 32 1 
176 1 262 1 131 1 216 1 122 1 183 1 237 1 204 1 44 1 
103 1 206 1 
256 1 257 1 247 1 
176 1 71 1 259 1 329 1 237 1 204 1 104 1 346 1 262 1 360 1 122 1 200 1 40 1 183 1 361 1 162 2 362 1 163 1 
176 1 71 1 259 1 329 1 237 1 204 1 104 1 346 1 262 1 360 1 122 1 200 1 40 1 183 1 361 1 162 2 362 1 163 1 
176 1 71 1 259 1 329 1 237 1 204 1 104 1 346 1 262 1 360 1 122 1 200 1 40 1 183 1 361 1 162 2 362 1 163 1 
257 1 103 1 206 1 
257 1 103 1 206 1 
256 1 247 1 
256 1 257 1 247 1 
317 1 345 1 
176 1 285 1 31 2 237 1 32 1 104 1 359 1 6 2 262 1 360 1 199 1 40 1 183 1 9 2 162 1 362 1 316 1 270 2 317 1 114 2 92 1 345 1 204 1 319 1 23 1 122 1 56 1 
101 1 31 2 87 2 306 1 135 1 196 1 6 2 334 1 63 1 264 1 42 1 41 1 314 1 108 1 201 2 114 2 368 1 49 1 167 1 188 2 93 1 223 1 76 2 250 2 279 1 121 1 252 1 300 1 326 1 98 1 230 2 
0 1 187 1 58 1 19 1 118 1 274 1 275 1 250 2 376 1 121 1 107 1 252 1 253 1 125 1 230 2 55 1 69 2 13 1 201 2 
0 1 187 1 58 1 19 1 118 1 274 1 275 1 250 1 263 1 121 1 107 1 252 1 253 1 230 1 69 2 13 1 201 1 
58 1 33 1 135 1 35 1 250 1 62 1 376 1 121 1 91 1 322 1 252 1 326 1 230 1 201 1 
0 1 187 1 58 1 19 1 118 1 274 1 275 1 250 1 376 1 121 1 107 1 252 1 253 1 230 1 55 1 69 2 13 1 201 1 
318 1 
102 1 311 1 86 1 346 1 175 1 195 1 208 1 
84 1 102 1 34 1 156 1 290 1 360 1 139 1 40 1 184 1 164 1 143 1 346 2 208 1 53 1 190 1 229 1 175 1 
102 2 286 2 236 2 156 4 288 3 194 2 4 2 333 2 195 1 290 5 294 2 339 1 201 3 244 2 15 2 18 2 20 1 73 1 119 6 346 8 249 1 208 9 250 3 348 1 120 1 173 2 121 4 252 3 125 1 175 8 83 2 177 2 84 4 34 4 135 10 35 1 261 2 90 2 360 5 311 1 40 5 48 2 271 2 143 12 145 3 52 2 53 6 190 3 228 6 326 3 229 4 230 3 99 1 153 3 
177 2 286 1 84 2 102 2 288 1 34 2 156 2 194 2 4 2 333 2 89 1 136 1 290 1 60 1 292 1 360 1 38 1 40 1 186 1 339 1 271 2 112 1 143 6 119 5 346 5 222 1 208 8 173 2 96 1 53 3 190 1 228 5 229 2 175 5 284 1 
177 1 328 1 84 1 31 1 288 1 34 1 156 1 194 2 4 2 6 1 360 1 40 1 9 1 313 1 243 1 11 1 296 1 270 1 272 1 298 1 114 1 115 1 343 1 208 2 24 1 191 1 229 1 175 2 
84 1 102 1 156 1 34 1 346 1 195 1 208 1 311 1 229 1 175 1 
271 2 83 1 177 2 143 10 288 1 194 2 4 2 119 5 346 5 333 2 208 5 173 2 53 5 228 5 175 5 
102 1 360 1 40 1 190 1 346 1 290 1 
355 1 84 2 286 2 179 1 34 2 156 1 33 1 135 1 35 2 290 4 360 3 40 3 110 1 201 4 339 2 249 2 250 4 208 2 278 1 377 1 121 1 322 1 190 2 252 1 326 1 229 2 230 4 175 2 99 1 
101 1 31 3 87 2 133 1 306 1 135 1 35 1 334 1 6 2 199 1 41 1 9 2 312 1 108 1 243 1 201 1 270 2 114 3 117 1 49 1 93 1 145 1 76 1 347 1 250 1 279 1 121 1 191 2 252 1 351 1 326 1 230 1 
84 1 286 1 102 2 356 1 143 4 156 1 34 1 119 2 346 4 208 1 53 2 228 2 229 1 175 2 339 1 
122 1 237 1 82 1 
122 1 237 1 82 1 
122 1 369 1 361 1 237 1 345 1 
122 1 237 1 82 1 
122 1 237 1 375 1 
122 1 237 1 375 1 
122 1 237 1 375 1 
122 1 237 1 
176 1 183 1 
272 1 177 1 130 1 101 2 356 1 49 2 221 1 87 4 307 2 93 2 4 1 76 8 24 1 264 4 279 2 41 4 313 1 337 3 109 1 231 1 
24 1 272 1 177 1 264 3 356 1 221 1 86 1 41 3 313 1 337 2 307 2 4 1 109 1 76 6 
271 1 177 1 130 1 101 1 49 1 87 2 307 1 93 1 333 1 4 1 76 4 279 1 264 2 7 1 173 1 41 2 337 2 
271 1 177 1 130 1 287 1 307 1 333 1 4 1 222 1 136 2 76 7 60 1 264 3 173 1 41 4 337 2 
130 4 177 3 101 2 287 1 356 1 87 4 307 5 4 3 333 2 136 2 60 2 264 11 41 12 313 2 337 9 109 1 66 1 272 2 271 2 367 1 221 1 49 2 93 2 76 23 24 1 172 1 279 2 173 2 231 2 
41 1 76 1 136 1 
264 1 76 1 60 1 
271 1 83 1 130 2 177 1 101 1 49 1 87 2 93 1 307 2 4 1 333 1 76 6 279 1 264 3 7 1 173 1 41 3 337 4 
130 1 177 2 101 1 87 2 307 1 4 2 333 2 136 1 60 1 292 1 264 6 38 1 41 6 337 2 218 1 186 1 271 2 49 1 93 1 222 1 76 12 279 1 173 2 96 1 284 1 
272 1 177 1 130 1 307 1 4 1 76 6 24 1 264 3 41 3 313 1 337 2 
272 1 130 1 101 1 221 1 49 1 87 2 307 1 93 1 76 3 264 1 279 1 41 2 313 1 337 2 109 1 66 1 231 1 
272 2 130 2 177 2 101 1 328 1 49 1 87 2 93 1 307 3 4 2 76 10 24 1 279 1 264 5 41 5 313 2 337 5 218 1 
271 1 130 1 101 1 49 1 87 2 93 1 4 1 76 2 279 1 264 2 337 1 218 1 
271 1 177 1 130 1 101 1 49 1 87 2 307 1 93 1 333 1 4 1 76 4 279 1 264 2 173 1 41 2 337 2 218 1 
272 1 130 1 30 1 101 3 49 3 87 6 93 3 307 1 76 3 279 3 264 1 41 2 313 1 337 2 218 1 231 1 66 1 
130 5 177 5 30 1 101 5 287 1 356 1 87 10 307 7 4 5 333 3 136 4 60 3 264 16 7 1 41 18 313 3 337 12 218 1 109 1 66 1 272 3 271 3 221 1 49 5 93 5 50 1 222 1 76 34 24 2 279 5 173 3 350 1 28 1 231 2 
272 1 177 1 101 1 356 1 221 1 49 1 87 2 307 2 93 1 4 1 222 1 136 1 76 8 60 1 24 1 292 1 264 4 279 1 41 4 313 1 337 2 218 1 109 1 
177 1 130 1 101 2 287 1 356 1 87 4 307 2 4 2 136 2 60 1 292 1 264 6 7 1 41 5 313 1 337 3 218 1 109 1 272 1 271 1 221 1 49 2 93 2 222 1 76 11 24 1 279 2 173 1 
130 1 177 3 101 3 356 1 87 6 307 3 4 3 333 2 136 1 60 1 292 1 264 9 7 1 38 1 41 10 313 1 337 4 218 1 109 1 186 1 272 1 271 2 221 1 49 3 93 3 222 1 76 19 24 1 279 3 173 2 96 1 284 1 231 1 
271 2 177 1 101 1 49 1 87 2 307 1 93 1 333 1 4 2 222 1 136 1 76 10 60 1 292 1 264 6 279 1 173 2 96 1 38 1 41 4 337 1 218 1 186 1 284 1 
272 1 177 1 101 1 356 1 221 1 49 1 87 2 307 2 93 1 4 1 222 1 136 1 76 8 60 1 24 1 292 1 264 4 279 1 41 4 313 1 337 2 218 1 109 1 
130 1 177 2 101 1 87 2 307 1 4 2 333 2 136 1 60 1 292 1 264 6 38 1 41 6 337 2 218 1 186 1 271 2 49 1 93 1 222 1 76 12 279 1 173 2 96 1 284 1 
271 2 177 1 101 3 49 3 87 6 307 1 93 3 333 1 4 2 222 1 136 1 76 11 60 1 292 1 264 6 279 3 173 2 7 1 96 1 38 1 41 5 337 1 218 1 186 1 231 1 284 1 
130 3 177 2 101 4 30 1 87 8 307 3 4 3 333 2 136 1 60 1 292 1 264 9 38 1 41 7 337 6 218 1 186 1 271 3 49 4 93 4 222 1 76 16 279 4 173 3 96 1 284 1 231 2 
272 3 177 1 130 3 221 2 307 3 4 1 76 7 24 1 264 3 41 4 313 3 337 6 109 1 
271 2 177 1 30 1 101 3 49 3 87 6 307 1 93 3 333 1 4 2 222 1 136 1 76 11 60 1 292 1 264 6 279 3 173 2 96 1 38 1 41 5 337 1 218 1 186 1 231 1 284 1 
6 1 199 1 114 1 31 1 148 1 181 1 146 1 
17 1 114 1 31 1 169 1 181 1 146 1 320 1 6 1 199 1 148 1 217 1 46 1 
121 1 322 1 86 1 252 1 326 1 33 1 230 1 135 1 35 1 250 1 201 1 
114 2 31 2 133 1 145 1 135 1 347 1 35 1 250 1 6 1 199 1 121 1 9 1 252 1 326 1 161 1 230 1 270 1 201 1 
114 2 236 1 31 2 372 1 343 1 155 1 133 1 145 2 135 3 249 1 347 1 250 1 6 2 52 1 199 1 121 1 9 1 252 1 326 2 161 1 230 1 270 2 201 1 
233 1 100 1 114 2 236 1 31 2 372 1 343 1 155 1 145 2 135 3 249 1 347 1 250 2 6 2 52 1 199 1 121 1 9 1 252 1 326 2 161 1 230 2 270 2 201 2 
100 1 102 1 236 1 346 1 145 1 205 1 249 1 135 4 35 1 290 1 261 1 250 3 25 1 52 1 360 2 294 1 121 1 40 2 252 1 326 1 230 3 153 1 201 3 
15 1 100 1 102 1 236 1 346 1 145 1 249 1 135 4 35 1 290 1 261 1 250 3 52 1 360 2 294 1 121 1 40 2 252 1 326 1 230 3 153 1 201 3 
121 1 252 1 230 1 250 1 201 1 171 1 
340 1 116 1 188 1 145 1 135 3 35 2 171 1 250 7 251 1 348 1 265 1 121 3 80 1 252 2 125 1 241 1 326 2 98 1 230 7 13 1 201 6 
177 1 101 2 178 1 356 1 31 2 87 4 3 1 308 1 307 2 306 2 133 1 4 1 135 1 196 1 6 1 264 3 199 2 41 3 9 1 312 1 313 1 337 2 108 2 161 1 109 1 270 1 201 1 272 1 114 2 117 1 221 1 368 1 49 2 93 2 145 1 74 1 76 6 347 1 250 1 24 1 279 2 121 1 252 1 326 1 125 1 127 1 230 1 
102 1 84 2 34 2 156 2 135 2 195 1 35 1 290 2 261 1 90 1 360 3 294 1 311 1 40 3 48 1 201 1 15 1 18 1 346 1 23 1 208 1 250 1 190 1 229 2 175 1 230 1 99 1 153 1 
73 1 145 1 135 2 171 1 250 2 348 1 294 1 121 2 252 1 125 1 326 1 230 2 201 2 
100 1 33 1 135 1 35 1 250 4 121 1 322 1 252 1 125 1 326 1 230 4 352 1 201 4 
340 1 235 1 116 1 145 1 249 1 135 1 105 1 250 2 138 1 121 2 252 1 326 1 230 2 201 2 
187 1 121 1 252 1 19 1 253 1 230 1 35 1 69 1 250 1 201 1 
135 1 250 2 121 1 252 1 300 1 125 1 326 1 98 1 230 2 201 2 13 1 
33 1 249 1 135 3 35 1 250 5 322 1 121 2 265 1 80 1 252 2 125 1 326 2 98 1 230 5 352 1 201 4 
33 1 249 1 135 3 35 1 250 5 322 1 121 2 265 1 252 2 125 1 326 2 98 1 230 5 254 1 352 1 201 4 
233 1 114 2 31 2 145 1 135 1 347 1 35 1 250 1 6 1 199 1 121 1 9 1 252 1 326 1 161 1 230 1 270 1 201 1 
340 1 116 1 145 1 249 1 135 1 250 1 251 1 348 1 121 2 252 1 326 1 230 1 201 1 
6 1 114 1 31 1 42 1 314 1 94 1 223 1 22 1 315 1 
305 1 357 1 166 1 372 1 155 1 343 1 94 1 22 1 261 1 349 1 323 1 315 1 
199 1 323 1 94 1 22 1 315 1 
360 1 349 1 40 1 357 1 94 1 23 1 12 1 
2 1 86 1 212 1 327 1 
106 1 158 1 2 1 212 1 327 1 289 1 276 1 
57 1 160 1 276 1 
29 1 2 1 330 1 370 1 212 1 289 1 276 3 106 3 158 1 336 2 327 1 365 1 
106 2 158 1 2 1 59 1 212 1 327 1 68 1 289 1 276 2 
370 1 118 1 51 1 289 1 276 1 106 1 158 1 253 1 327 1 381 1 69 1 
106 1 158 1 2 1 370 1 327 1 289 1 276 1 
106 1 158 1 2 2 370 1 212 1 289 1 276 1 
106 2 158 2 2 1 79 1 370 1 344 1 149 1 327 1 289 2 276 2 
14 1 2 1 370 1 331 1 59 2 212 1 289 1 276 3 106 3 158 1 327 2 381 1 219 1 
2 1 187 1 370 1 118 1 59 1 212 1 289 1 276 2 106 2 158 1 107 1 159 1 253 1 327 1 69 2 
2 1 370 1 203 1 331 1 59 2 212 1 289 2 276 4 106 4 158 2 327 2 381 1 68 1 
106 1 158 1 2 1 370 1 212 1 327 1 289 1 276 1 
29 1 2 2 331 1 59 2 212 2 289 1 276 4 106 4 78 1 158 1 336 1 327 3 381 1 365 1 
106 2 158 1 2 1 370 1 246 1 324 1 59 1 212 1 327 1 207 1 289 1 276 2 
106 3 29 1 158 1 2 1 370 1 336 2 266 1 212 1 327 1 289 1 365 2 276 3 
353 2 378 1 27 1 327 2 
106 1 158 1 370 1 180 1 289 1 276 1 
106 2 158 1 2 1 370 1 59 1 212 1 327 1 289 1 219 1 276 2 
373 1 
106 1 158 1 2 1 370 1 212 1 327 1 289 1 276 1 
106 3 158 1 2 1 370 1 336 1 59 1 212 1 327 1 289 1 219 1 276 3 
78 1 331 1 327 1 381 1 
2 1 327 1 

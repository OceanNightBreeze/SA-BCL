#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 264 (301,371,379) (301,371,379) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 264 (301,371,379) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (150,204) (221,365,380) (301,371,379) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (209,235) (0,186) (0,186) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 264 (301,371,379) (301,371,379) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 264 (221,365,380) (221,365,380) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 264 (221,365,380) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (209,235) (209,235) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 264 (221,365,380) (221,365,380) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
66 1 269 2 67 2 271 1 157 1 334 5 207 1 310 4 5 2 185 1 8 1 256 1 105 3 165 1 188 1 36 6 320 2 37 1 139 2 291 1 60 1 295 9 349 9 64 1 118 1 330 2 351 1 22 2 
37 1 320 2 66 1 139 2 291 1 269 2 67 2 271 1 334 5 157 1 207 1 310 4 5 2 60 1 185 1 8 1 105 3 256 1 349 9 295 9 118 1 64 1 165 1 330 2 351 1 188 1 22 2 36 6 
37 1 320 2 66 1 139 2 291 1 269 2 67 2 271 1 334 6 157 1 207 1 310 5 5 2 60 1 185 1 8 1 105 4 256 1 349 10 295 10 118 1 64 1 165 1 330 2 351 1 188 1 22 2 36 7 
37 1 320 2 66 1 139 2 291 1 269 2 67 2 271 1 334 4 157 1 207 1 310 3 5 2 60 1 8 1 105 2 256 1 349 7 295 7 118 1 64 1 165 1 330 1 351 1 188 1 22 2 36 4 
320 1 139 1 66 1 269 1 67 1 271 1 334 3 207 1 310 2 60 1 185 1 105 1 256 1 349 4 295 4 330 2 22 1 36 3 
37 1 139 1 269 1 67 1 271 1 334 1 157 1 5 1 160 1 60 1 6 1 238 1 256 1 349 2 295 2 22 1 
269 2 291 1 271 1 334 2 310 1 5 1 60 1 256 1 349 3 295 3 105 1 22 2 36 1 
320 1 344 1 139 1 66 1 269 2 291 1 67 1 271 1 334 5 207 1 310 4 5 1 362 1 60 1 185 1 256 1 349 9 295 9 105 3 330 2 351 1 188 1 22 2 36 7 
320 1 344 1 139 1 66 1 269 2 291 1 67 1 271 1 334 5 207 1 310 4 5 1 362 1 60 1 185 1 256 1 349 9 295 9 105 3 330 2 351 1 188 1 22 2 36 7 
117 1 239 1 71 1 
61 2 198 1 239 1 
191 2 290 2 108 1 224 1 161 2 237 2 266 2 102 2 
358 1 308 1 251 1 228 1 277 1 161 2 338 2 132 1 102 3 70 2 85 1 28 2 135 1 108 1 35 1 286 1 214 1 88 1 191 2 366 1 110 2 290 3 322 1 217 1 172 1 15 2 219 1 173 1 78 1 237 2 145 1 243 1 331 1 224 1 353 1 266 2 304 1 
191 1 134 1 290 1 72 1 108 1 107 1 161 1 237 1 266 1 102 1 
290 1 38 1 193 1 368 1 161 1 102 1 134 1 7 1 117 1 326 1 298 1 239 1 199 1 213 1 
191 1 290 1 38 1 193 1 237 1 161 1 102 1 7 2 134 1 117 1 326 1 298 1 239 1 213 2 266 1 
363 1 7 1 364 1 242 1 213 1 
363 1 7 2 117 1 222 1 239 1 242 1 317 1 213 2 
363 1 7 1 213 1 
191 1 290 1 237 1 161 1 102 1 134 1 7 1 72 1 107 1 108 1 242 1 329 1 213 1 266 1 
239 1 
363 1 7 2 117 1 239 1 57 1 242 1 317 1 213 2 
74 1 99 1 39 2 51 1 158 1 230 1 162 1 312 1 7 5 363 2 117 1 106 1 239 1 242 2 374 2 376 1 317 1 213 5 265 2 
71 1 224 1 
215 1 191 1 290 2 161 2 237 1 102 2 45 1 224 2 266 1 
65 1 25 1 128 1 
366 1 110 1 290 1 322 1 251 1 126 1 219 1 338 1 102 1 145 1 132 1 28 1 135 1 243 1 224 1 286 1 
366 1 191 1 110 1 290 2 122 1 322 1 251 1 219 1 94 1 237 1 161 1 338 1 132 1 145 1 102 2 28 1 135 1 243 1 65 1 286 1 
215 1 191 4 290 5 122 2 373 1 199 1 284 1 224 1 347 1 94 1 266 1 161 5 237 4 102 5 
191 2 134 1 290 2 72 1 161 2 237 2 131 1 102 2 
191 3 290 3 122 1 224 1 266 1 161 3 237 3 102 3 
191 1 134 1 290 1 72 1 161 1 237 1 102 1 
191 1 215 1 134 1 290 1 45 1 161 1 237 1 266 1 102 1 
122 1 308 1 251 1 228 1 83 1 277 1 129 1 161 3 338 1 132 1 102 4 70 1 28 1 134 1 7 1 135 1 108 1 35 1 286 1 213 1 214 1 366 1 215 1 191 3 110 1 290 4 322 1 38 1 193 1 217 1 172 1 15 2 173 1 219 1 78 1 237 3 94 1 145 1 326 1 298 1 243 1 224 1 353 1 266 2 
191 1 290 2 122 1 199 1 224 1 347 1 161 2 237 1 102 2 
215 1 191 3 290 3 1 1 122 2 38 1 193 1 83 1 94 1 237 3 161 3 102 3 7 1 134 1 298 1 326 1 239 1 213 1 266 1 
215 1 191 2 290 2 122 1 237 2 161 2 102 2 65 1 25 1 266 1 
366 1 110 1 290 1 322 1 251 1 219 1 338 1 102 1 145 1 132 1 28 1 135 1 243 1 224 1 286 1 
366 1 110 1 290 1 251 1 219 1 159 1 338 1 102 1 145 1 132 1 28 1 135 1 11 1 243 1 224 1 
155 1 50 1 181 1 308 1 228 1 277 1 128 2 103 1 70 4 234 1 32 1 12 1 214 2 88 2 319 1 75 1 172 1 15 2 78 1 148 1 353 1 65 2 25 2 381 1 
191 1 134 1 290 1 38 1 161 1 237 1 102 1 131 1 
335 1 168 1 
335 1 168 1 
333 1 
333 1 
333 1 
335 1 352 1 168 1 
335 1 352 1 168 1 
335 1 352 1 168 1 
357 1 333 1 335 1 93 1 168 1 
335 1 316 1 168 1 
335 1 285 1 168 1 
335 1 285 1 168 1 
335 1 285 1 168 1 
335 1 272 1 161 2 102 2 7 1 313 1 281 1 316 1 213 1 168 1 191 2 290 2 90 1 41 1 59 1 237 2 62 1 350 1 241 1 224 1 19 1 375 1 21 1 377 1 
89 1 307 1 91 1 335 2 272 2 142 2 41 2 369 1 233 1 7 2 281 3 239 1 350 2 136 1 19 1 21 2 213 2 97 1 168 2 
320 1 139 1 67 1 
139 1 238 1 67 1 
320 2 372 1 238 1 67 3 150 1 130 1 
320 1 372 1 238 1 67 2 130 1 204 1 
320 1 372 1 238 1 67 2 130 2 
247 2 305 1 155 1 181 1 252 1 337 1 103 1 162 2 312 1 363 1 7 5 313 1 314 2 212 1 32 1 109 2 317 1 213 5 288 1 74 3 39 1 113 1 59 1 61 3 95 1 117 1 198 1 239 2 242 4 375 1 374 1 265 1 
305 2 48 1 155 3 270 5 181 3 182 1 337 1 103 3 162 6 312 1 363 6 7 9 313 4 314 6 212 3 364 5 339 1 32 3 109 6 213 9 317 1 343 1 288 2 74 8 39 2 261 1 61 9 117 1 198 3 239 5 147 1 242 7 374 2 376 1 265 2 
305 1 247 1 155 1 181 1 252 1 103 1 162 2 7 3 313 1 212 1 314 2 32 1 109 2 213 3 288 1 74 3 39 1 113 1 61 4 117 1 198 2 239 3 242 2 374 1 376 1 265 1 
305 1 247 2 48 1 155 2 181 2 182 1 252 1 103 2 162 4 7 4 313 2 314 4 212 2 32 2 109 4 213 4 288 1 74 5 39 1 113 1 61 7 117 1 198 3 239 4 147 1 242 3 374 1 376 1 265 1 
44 1 71 1 251 1 
251 1 336 1 
184 1 
251 1 243 1 132 1 
340 1 251 1 
251 1 243 1 
44 2 296 1 251 3 243 1 275 1 132 1 
88 4 98 1 216 1 140 1 181 1 218 2 171 1 52 1 254 1 195 1 70 7 234 3 43 1 32 1 164 1 214 3 381 2 
88 4 98 1 216 1 140 1 181 1 218 2 171 1 52 1 254 1 195 1 70 7 234 3 43 1 32 1 164 1 214 3 381 2 
88 4 98 1 216 1 140 1 181 1 218 2 171 1 52 1 254 1 195 1 70 7 234 3 43 1 32 1 164 1 303 1 214 3 381 2 
152 1 98 5 155 3 181 4 52 1 361 1 277 1 254 2 103 3 70 31 234 10 212 3 164 1 32 4 137 3 214 15 88 16 216 1 14 1 140 2 58 4 171 1 218 3 323 1 172 1 236 1 15 2 78 1 195 2 43 2 263 1 353 1 176 1 381 5 
98 1 49 1 181 1 52 1 127 1 277 2 254 1 70 9 234 4 32 1 164 1 214 4 88 5 216 1 140 1 218 2 172 2 15 4 78 2 195 1 43 1 263 1 353 2 381 3 
110 1 269 1 5 1 210 1 338 1 231 1 28 1 371 1 256 1 349 1 295 1 264 1 245 1 22 1 379 1 167 1 
289 1 110 1 269 1 5 1 338 1 231 1 28 1 163 1 371 1 349 2 295 2 264 1 244 1 245 1 22 1 167 1 36 1 
366 1 289 1 110 1 67 1 5 1 338 1 231 1 28 1 238 1 135 1 349 1 295 1 365 1 244 1 301 1 245 1 150 1 167 1 138 1 36 1 
0 1 110 1 269 1 259 1 219 1 5 2 338 1 231 2 28 1 163 1 186 1 349 1 295 1 235 1 245 2 22 1 167 2 
289 1 110 1 269 1 5 1 338 1 231 1 28 1 371 1 256 1 349 1 295 1 264 1 245 1 22 1 379 1 167 1 
249 1 
332 1 180 1 338 2 7 5 134 1 135 1 282 1 189 2 290 1 193 1 92 1 194 2 61 2 294 1 198 2 298 1 239 2 240 2 199 1 243 1 24 4 356 1 305 1 359 1 309 1 251 1 208 1 161 1 102 1 162 2 312 1 28 2 363 6 31 2 33 1 73 1 317 3 213 5 366 1 110 2 74 2 39 1 38 1 368 1 76 1 219 2 42 2 117 1 326 1 174 2 327 1 374 1 225 2 265 1 119 1 
356 1 309 1 208 1 161 1 102 1 7 3 134 1 363 2 73 1 213 3 317 1 290 1 38 1 193 1 57 1 368 1 42 1 294 1 326 1 298 1 199 1 24 2 
356 1 309 1 208 1 161 1 102 1 363 1 7 3 134 1 73 1 213 3 317 1 290 1 38 1 193 1 57 1 368 1 194 1 294 1 117 1 326 1 298 1 239 1 199 1 24 3 
356 1 309 1 208 1 161 1 102 1 7 3 134 1 363 2 73 1 317 1 213 3 290 1 38 1 57 1 193 1 368 1 194 1 42 1 294 1 117 1 326 1 298 1 240 1 239 1 199 1 24 3 
332 1 134 1 7 5 189 2 290 1 193 1 57 1 194 4 348 1 293 1 294 1 298 1 198 2 240 4 239 5 199 1 149 1 24 6 356 1 156 1 309 1 27 1 208 1 161 1 102 1 312 1 162 1 363 7 31 2 73 1 213 5 317 3 74 1 38 1 39 1 368 1 42 4 117 5 326 1 327 1 174 2 374 1 225 2 265 1 
332 1 134 1 7 4 189 2 290 1 193 1 92 1 194 2 61 2 294 1 298 1 198 2 240 2 239 2 199 1 24 4 356 1 309 1 208 1 161 1 102 1 312 1 162 1 363 4 31 2 73 1 213 4 317 2 74 1 38 1 39 1 368 1 42 2 117 1 326 1 327 1 174 2 374 1 225 2 265 1 
356 1 332 1 156 1 309 1 27 1 208 1 161 1 102 1 162 1 312 1 363 4 7 4 134 1 31 2 73 1 317 2 213 4 189 2 74 1 290 1 38 1 39 1 193 1 368 1 194 2 42 2 293 1 117 1 294 1 198 2 326 1 298 1 239 1 240 2 174 2 327 1 199 1 374 1 225 2 265 1 24 4 
356 1 332 1 156 1 309 1 27 1 208 1 161 1 102 1 162 1 312 1 363 4 7 4 134 1 31 2 73 1 317 2 213 4 189 2 74 1 290 1 38 1 39 1 193 1 368 1 194 2 42 2 293 1 117 1 294 1 198 2 326 1 298 1 239 1 240 2 174 2 327 1 199 1 374 1 225 2 265 1 24 4 
356 1 355 1 121 2 309 1 27 1 208 1 161 1 102 1 162 1 312 1 363 4 30 2 7 4 134 1 31 2 187 1 73 1 317 2 213 4 74 1 290 1 38 1 39 1 193 1 368 1 194 2 42 2 61 2 117 1 294 1 326 1 298 1 239 1 240 2 327 1 199 1 18 1 374 1 225 2 265 1 24 4 
356 1 332 1 156 1 309 1 27 1 208 1 161 1 102 1 162 1 312 1 7 4 134 1 363 5 31 2 73 1 317 2 213 4 189 2 74 1 290 1 39 1 38 1 193 1 368 1 194 3 42 3 293 1 117 1 294 1 198 2 326 1 298 1 239 1 174 2 327 1 240 3 199 1 374 1 225 2 149 1 265 1 24 5 
356 1 332 1 156 1 309 1 27 1 208 1 161 1 102 1 162 1 312 1 7 4 134 1 363 5 31 2 73 1 317 2 213 4 189 2 74 1 290 1 39 1 38 1 193 1 368 1 194 3 42 3 293 1 117 1 294 1 198 2 326 1 298 1 239 1 174 2 327 1 240 3 199 1 374 1 225 2 149 1 265 1 24 5 
121 2 134 1 7 4 290 1 193 1 92 1 194 2 61 2 294 1 298 1 240 2 239 1 199 1 18 1 24 4 356 1 309 1 208 1 161 1 102 1 312 1 162 1 30 2 363 4 31 2 73 1 213 4 317 2 74 1 38 1 39 1 368 1 42 2 117 1 326 1 327 1 374 1 225 2 265 1 
50 1 308 1 181 1 52 1 228 1 277 1 254 1 128 1 70 6 234 2 164 1 32 1 71 1 214 3 88 3 216 1 218 1 172 1 15 2 78 1 43 1 224 2 65 1 353 1 25 1 381 2 
120 1 151 1 358 1 98 1 3 1 155 2 250 1 308 2 181 1 228 1 277 2 128 11 103 1 70 14 234 2 212 2 32 2 35 1 137 3 214 6 88 8 14 1 58 3 172 2 15 4 78 2 224 1 176 1 353 2 65 11 25 4 381 1 246 1 
151 1 358 1 122 1 308 1 251 1 126 1 228 1 277 1 338 1 161 1 132 1 102 2 70 2 28 1 135 1 315 1 35 1 286 1 214 1 366 1 258 1 191 1 88 1 110 1 290 2 111 1 322 1 172 1 219 1 15 2 78 1 237 1 94 1 145 1 243 1 224 1 353 1 25 1 
47 1 122 1 181 3 52 1 228 3 277 3 338 3 128 7 132 2 234 8 135 2 286 2 289 1 191 1 88 10 290 3 15 6 94 1 237 1 145 2 17 2 299 1 243 2 353 3 65 7 25 7 151 1 358 1 98 4 155 2 248 1 308 3 251 2 254 1 161 1 102 3 103 2 70 20 28 3 212 2 164 1 32 3 35 1 214 10 170 2 366 2 110 3 216 1 322 2 218 1 172 3 219 1 173 2 40 2 78 3 43 1 223 2 224 2 381 4 
267 1 358 1 122 1 50 1 308 2 251 3 53 1 210 1 228 2 277 2 161 1 338 7 102 1 70 2 28 8 133 1 135 2 282 1 35 1 214 1 169 1 289 1 191 1 366 2 88 1 110 8 290 1 172 2 219 2 15 4 78 2 237 1 220 1 328 1 331 2 243 2 353 2 26 1 119 1 
151 1 155 1 308 1 181 1 228 1 277 1 128 1 161 1 102 1 103 1 70 3 234 1 212 1 32 1 214 2 87 1 215 1 191 1 88 1 290 1 172 1 15 2 78 1 237 1 65 1 353 1 25 1 266 1 381 1 
88 2 98 1 155 1 50 1 75 1 308 1 172 1 15 2 228 1 78 1 277 1 128 1 70 2 234 1 32 1 65 1 353 1 25 1 
50 1 308 1 181 1 172 1 15 2 228 1 78 1 277 1 128 1 103 1 70 2 234 1 65 1 353 1 148 1 25 1 214 2 381 1 
98 1 155 1 50 1 308 1 181 1 228 1 277 1 128 2 103 1 70 4 234 2 212 1 32 1 214 2 88 2 172 1 15 2 78 1 353 1 65 2 25 2 381 1 
88 2 98 1 155 1 75 1 308 1 172 1 15 2 228 1 78 1 277 1 128 1 70 2 234 1 133 1 32 1 65 1 353 1 25 1 
308 1 181 1 172 1 15 2 228 1 78 1 277 1 128 1 103 1 70 2 234 1 133 1 65 1 353 1 148 1 25 1 214 2 381 1 
98 1 155 1 308 1 181 1 228 1 277 1 128 2 103 1 70 4 133 1 234 2 212 1 32 1 214 2 88 2 172 1 15 2 78 1 353 1 65 2 25 2 381 1 
88 2 98 1 155 1 181 1 308 1 172 1 15 2 228 1 78 1 277 1 128 2 103 1 70 4 234 2 212 1 32 1 65 2 353 1 214 2 25 2 381 1 
358 1 308 1 251 1 228 1 277 1 338 1 132 1 102 1 70 2 28 1 135 1 35 1 286 1 214 1 88 1 366 1 110 1 290 1 322 1 172 1 173 1 219 1 15 2 78 1 145 1 243 1 224 1 353 1 
358 1 308 1 251 1 228 1 159 1 277 1 338 1 132 1 102 1 70 2 28 1 135 1 11 1 35 1 214 1 88 1 366 1 110 1 290 1 260 1 172 1 219 1 15 2 78 1 145 1 243 1 224 1 353 1 
151 1 98 1 155 1 308 1 181 1 228 1 277 1 128 2 103 1 70 4 234 2 212 1 32 1 214 2 88 2 172 1 15 2 78 1 353 1 65 2 25 2 381 1 
98 1 155 1 181 1 308 1 251 1 210 1 228 1 277 1 128 2 338 1 103 1 132 1 102 1 70 4 28 1 234 2 135 1 212 1 32 1 286 1 214 2 88 2 366 1 170 1 110 1 290 1 322 1 172 1 173 1 15 2 78 1 145 1 243 1 65 2 353 1 25 2 381 1 
151 1 98 1 155 1 181 1 308 1 228 1 277 1 161 1 128 1 103 1 102 1 70 3 234 1 212 1 32 1 86 1 214 1 215 1 191 1 88 2 290 1 172 1 15 2 78 1 237 1 353 1 65 1 266 1 25 1 
98 3 155 3 360 1 181 3 127 1 274 1 277 2 103 3 279 1 70 19 280 1 234 6 212 3 32 3 283 1 341 2 137 1 214 10 88 9 345 1 14 1 141 1 58 2 172 2 15 4 77 2 78 2 176 1 353 2 381 3 
98 2 155 3 360 2 181 2 127 1 68 1 277 3 103 2 279 1 70 26 234 4 280 1 212 3 32 3 283 2 55 1 341 1 137 2 56 1 214 12 88 14 141 1 58 2 172 3 15 6 77 4 78 3 79 1 263 2 353 3 176 2 300 1 302 1 381 2 
181 5 52 1 127 1 274 1 277 3 279 1 234 8 280 1 283 2 55 1 341 1 137 3 56 1 88 20 14 1 141 1 58 4 15 6 353 3 300 1 302 1 98 4 155 4 306 1 360 1 68 1 254 1 103 4 70 41 212 4 32 5 164 1 214 21 216 1 218 1 172 3 77 4 78 3 79 1 43 1 263 1 176 3 381 4 
98 3 155 4 306 1 360 1 181 4 52 1 127 1 274 1 68 1 277 4 254 1 103 3 279 1 70 38 280 1 234 7 212 4 164 1 32 5 283 2 55 1 341 1 56 1 137 3 214 18 88 20 216 1 14 1 141 1 58 4 218 1 172 4 15 8 77 4 78 4 79 1 43 1 263 2 300 1 176 3 353 4 302 1 381 4 
98 7 155 7 250 2 360 1 181 8 52 1 127 1 68 1 277 2 254 1 103 7 279 1 70 52 280 1 234 14 212 7 164 1 32 8 283 1 55 1 341 1 56 1 137 4 214 25 88 27 216 1 14 2 141 1 58 4 218 1 172 2 15 4 77 4 78 2 79 1 43 1 263 1 300 1 176 2 353 2 302 1 381 7 
89 1 350 1 335 1 272 1 21 1 41 1 97 1 369 1 278 1 168 1 
377 1 316 1 
292 1 192 1 350 1 335 1 175 1 272 1 21 1 41 1 168 1 
297 1 352 1 
93 1 285 1 273 1 
89 1 91 1 335 1 272 1 142 1 41 1 369 1 233 1 7 1 281 2 239 1 350 1 136 1 19 1 21 1 213 1 97 1 168 1 
89 1 91 1 335 1 272 1 142 1 41 1 369 1 233 1 7 1 281 2 239 1 350 1 136 1 19 1 21 1 213 1 97 1 168 1 
89 1 91 1 335 1 272 1 142 1 41 1 369 1 233 1 7 1 281 2 239 1 350 1 136 1 19 1 21 1 213 1 97 1 168 1 
297 1 93 1 352 1 
297 1 93 1 352 1 
285 1 273 1 
93 1 285 1 273 1 
62 1 90 1 
335 1 272 1 161 2 102 2 7 1 313 1 281 1 316 1 213 1 168 1 191 2 290 2 90 1 91 1 142 1 41 1 59 1 237 2 62 1 63 1 350 1 241 1 242 1 224 1 375 1 21 1 377 1 
151 1 358 1 179 1 308 1 251 1 183 1 228 1 277 1 161 2 338 2 102 2 54 1 70 2 28 2 135 1 35 1 214 1 318 1 366 1 88 1 110 2 290 2 172 1 15 2 78 1 220 1 328 1 243 1 331 2 201 1 353 1 
28 2 289 1 110 2 221 1 264 1 210 1 380 1 167 1 203 1 338 2 
197 1 28 1 289 1 110 1 221 1 264 1 167 1 338 1 
28 1 110 1 235 1 219 1 209 1 167 1 203 1 338 1 
28 1 289 1 110 1 221 1 264 1 380 1 167 1 203 1 338 1 
226 1 
162 1 74 1 117 1 99 1 239 1 71 1 230 1 
332 1 162 1 312 1 363 1 7 1 317 1 213 1 189 1 74 1 39 1 61 1 117 1 198 1 174 1 239 2 374 1 265 1 
125 1 181 2 336 3 276 1 338 3 230 1 132 3 7 5 135 4 340 2 190 2 143 2 61 12 146 1 296 1 298 2 198 6 239 8 243 3 354 1 205 2 305 2 99 1 155 2 251 10 210 1 69 2 253 2 103 2 312 4 28 3 162 8 363 5 314 6 212 2 32 2 166 1 109 6 213 5 317 3 366 3 110 3 74 9 321 2 39 4 76 1 219 1 116 2 117 2 44 2 223 2 374 4 378 2 265 4 
305 1 155 2 124 1 181 2 101 1 69 2 103 2 312 2 162 5 7 1 363 1 314 5 212 2 32 2 55 1 109 5 213 1 317 1 56 1 137 1 74 8 39 2 58 1 76 1 61 6 79 1 117 2 198 3 239 5 374 2 176 1 300 1 378 1 302 1 265 2 
181 1 69 2 254 1 161 1 102 1 312 1 162 2 134 1 7 1 164 1 32 2 72 1 107 1 108 1 213 1 191 1 290 1 74 2 39 1 237 1 293 1 43 1 46 1 329 1 374 1 378 1 265 1 266 1 
99 1 74 1 39 1 230 1 312 1 162 1 117 1 239 1 374 1 265 1 
155 2 74 5 181 2 69 2 103 2 61 10 162 5 212 2 314 5 223 1 32 2 198 5 239 5 109 5 378 1 
7 1 363 1 117 1 239 1 213 1 317 1 
305 2 359 1 251 1 311 1 276 1 338 4 312 1 28 4 162 2 363 4 7 3 135 1 282 1 33 1 10 1 317 2 213 3 366 1 110 4 74 2 39 2 219 2 76 2 243 1 374 2 376 1 354 2 265 2 119 1 
308 1 251 1 228 1 277 1 338 1 161 2 102 3 132 1 70 1 28 1 135 1 108 1 35 1 286 1 214 1 191 2 366 1 110 1 290 3 322 1 217 1 172 1 15 2 219 1 173 1 78 1 237 2 145 1 243 1 224 1 353 1 266 2 
305 1 74 1 39 1 218 1 76 1 61 4 162 2 312 1 117 2 314 2 198 2 239 4 374 1 109 2 265 1 
13 1 350 1 41 1 
13 1 350 1 41 1 
13 1 350 1 41 1 
123 1 90 1 350 1 41 1 97 1 
325 1 350 1 41 1 
325 1 350 1 41 1 
325 1 350 1 41 1 
350 1 41 1 
335 1 168 1 
88 4 98 1 216 1 218 1 181 1 172 2 52 1 15 4 78 2 277 2 254 1 70 8 234 3 43 1 263 1 32 1 164 1 353 2 214 4 381 2 
88 3 216 1 218 1 181 1 52 1 254 1 70 6 234 2 43 1 164 1 32 1 71 1 214 3 381 2 
88 2 98 1 154 1 155 1 181 1 172 1 15 2 78 1 277 1 103 1 70 4 234 2 212 1 32 1 353 1 214 2 381 1 
88 3 98 1 155 1 14 1 58 2 181 1 103 1 70 7 234 2 212 1 32 1 176 1 137 1 214 4 381 1 
98 4 155 2 250 1 181 3 52 1 277 2 254 2 103 2 70 23 234 9 212 2 164 1 32 3 137 2 214 12 88 11 216 1 14 1 367 1 58 2 218 1 172 2 15 4 78 2 43 2 263 2 353 2 246 1 381 5 
70 1 58 1 214 1 
70 1 88 1 137 1 
88 3 98 1 154 1 155 1 181 1 172 1 15 2 277 1 78 1 103 1 70 6 234 3 212 1 223 1 32 1 353 1 214 3 381 2 
98 1 155 2 181 2 127 1 277 1 103 2 70 12 234 2 212 2 32 2 55 1 137 1 56 1 214 6 88 6 58 1 172 1 15 2 78 1 79 1 176 1 353 1 300 1 302 1 381 1 
88 3 98 1 181 1 254 1 70 6 234 2 43 1 164 1 32 1 214 3 381 1 
88 1 98 1 367 1 216 1 52 1 172 1 15 2 78 1 277 1 254 1 70 3 234 2 43 1 263 1 353 1 214 2 381 1 
88 5 98 2 181 2 172 1 15 2 127 1 277 1 78 1 254 2 70 10 234 5 43 2 164 1 32 2 46 1 353 1 214 5 381 3 
88 2 98 1 155 1 172 1 15 2 127 1 78 1 277 1 70 2 234 1 32 1 353 1 
88 2 98 1 155 1 181 1 172 1 15 2 127 1 78 1 277 1 103 1 70 4 234 2 212 1 32 1 353 1 214 2 381 1 
88 1 98 1 367 1 172 3 15 6 127 1 274 1 78 3 277 3 254 1 70 3 234 2 43 1 263 1 353 3 214 2 381 1 
98 5 154 1 155 3 181 5 52 1 361 1 127 1 274 1 277 5 254 3 103 3 70 34 234 12 212 3 164 2 32 5 137 3 214 18 88 16 216 1 367 1 14 1 58 4 218 1 323 1 236 1 172 5 15 10 78 5 43 3 263 2 176 1 353 5 381 7 
181 1 52 1 127 1 277 1 254 1 70 8 234 2 32 1 164 1 137 1 56 1 214 4 88 4 216 1 58 1 218 1 172 1 15 2 78 1 43 1 176 1 353 1 381 2 
98 1 154 1 155 1 181 1 52 1 127 1 277 2 254 1 70 11 234 3 212 1 164 1 32 2 56 1 137 1 214 5 88 6 216 1 14 1 58 2 218 1 172 2 15 4 78 2 43 1 176 1 353 2 381 2 
98 1 154 1 155 2 181 3 52 1 127 1 277 3 254 1 103 2 70 19 234 4 212 2 164 1 32 3 55 1 137 1 56 1 214 10 88 9 216 1 58 1 218 1 172 3 15 6 78 3 79 1 43 1 263 1 176 1 353 3 300 1 302 1 381 3 
98 2 154 1 155 2 181 2 52 1 127 1 277 3 254 1 103 1 70 17 234 5 212 2 164 1 32 3 55 1 137 1 56 1 214 7 88 10 216 1 58 1 218 1 172 3 15 6 78 3 79 1 43 1 263 1 176 1 353 3 300 1 302 1 381 3 
181 1 52 1 127 1 277 1 254 1 70 8 234 2 32 1 164 1 137 1 56 1 214 4 88 4 216 1 58 1 218 1 172 1 15 2 78 1 43 1 176 1 353 1 381 2 
98 1 155 2 181 2 127 1 277 1 103 2 70 12 234 2 212 2 32 2 55 1 137 1 56 1 214 6 88 6 58 1 172 1 15 2 78 1 79 1 176 1 353 1 300 1 302 1 381 1 
98 2 154 1 155 2 181 2 52 1 127 1 277 4 254 1 103 1 70 18 234 5 212 2 164 1 32 3 55 1 56 1 137 1 214 8 88 10 216 1 58 1 218 1 172 4 15 8 78 4 79 1 43 1 263 2 176 1 353 4 300 1 302 1 381 3 
98 3 155 3 181 2 127 1 274 1 277 4 103 2 70 16 234 6 212 3 32 3 55 1 56 1 137 1 214 7 88 9 58 1 172 4 15 8 78 4 79 1 263 2 176 1 353 4 300 1 302 1 381 3 
88 3 98 3 216 1 181 1 52 2 254 3 70 7 234 6 43 3 164 1 32 1 214 4 381 3 
98 1 155 2 181 2 52 1 127 1 274 1 277 4 254 1 103 1 70 18 234 4 212 2 164 1 32 3 55 1 56 1 137 1 214 8 88 10 216 1 58 1 218 1 172 4 15 8 78 4 79 1 43 1 263 2 176 1 353 4 300 1 302 1 381 3 
290 1 199 1 257 1 224 1 347 1 161 1 102 1 
290 1 115 1 347 1 229 1 161 1 102 1 255 1 9 1 199 1 257 1 224 1 287 1 
366 1 28 1 110 1 135 1 282 1 71 1 251 1 243 1 219 1 338 1 119 1 
191 1 366 1 110 1 290 2 122 1 251 1 219 1 237 1 161 1 338 1 132 1 145 1 102 2 28 1 135 1 243 1 224 1 286 1 
205 1 191 2 366 1 110 1 290 2 122 1 38 1 193 1 251 3 237 1 161 2 338 1 132 2 145 1 102 2 28 1 134 1 135 1 340 1 243 2 224 1 354 1 286 1 
205 1 191 2 366 1 110 2 290 2 122 1 38 1 193 1 251 3 159 1 237 1 161 2 338 2 132 2 145 1 102 2 28 2 134 1 135 1 104 1 340 1 243 2 224 1 354 1 
205 1 366 1 110 3 251 4 219 1 336 1 338 3 132 1 144 1 28 3 7 2 363 1 117 1 135 1 44 1 104 1 298 1 340 1 239 1 243 1 354 1 213 2 177 1 
205 1 366 1 110 3 251 4 219 1 336 1 143 1 338 3 132 1 28 3 7 2 363 1 117 1 135 1 44 1 104 1 298 1 340 1 239 1 243 1 354 1 213 2 
267 1 366 1 28 1 110 1 135 1 338 1 
267 1 169 1 289 1 366 2 110 7 112 1 251 3 81 1 219 2 53 1 210 1 338 6 132 1 28 7 135 3 296 1 328 1 331 1 243 2 227 1 26 1 
151 1 122 1 181 1 308 2 251 1 52 1 183 1 228 2 210 1 277 2 128 1 254 1 161 1 338 1 132 1 102 2 70 6 28 1 234 2 135 1 32 1 164 1 286 1 214 3 88 3 366 1 191 1 170 1 110 1 290 2 216 1 322 1 218 1 172 2 15 4 173 1 78 2 237 1 145 1 43 1 17 1 243 1 224 2 65 1 353 2 25 1 381 2 
99 1 251 2 336 1 276 1 338 1 253 1 230 1 162 1 28 1 312 2 7 3 363 2 213 3 317 1 190 1 110 1 74 1 39 2 219 1 143 1 116 1 117 1 44 1 298 1 239 1 242 1 374 2 265 2 
267 1 366 1 110 2 251 2 210 1 338 2 132 1 28 2 146 1 44 1 135 2 296 1 243 1 
366 1 28 4 110 4 135 1 104 1 282 1 34 1 251 1 243 1 219 1 210 1 338 4 119 1 
47 1 366 1 110 2 178 1 251 1 81 1 338 2 132 1 232 1 28 2 135 2 243 1 354 1 227 1 
366 1 28 1 110 1 139 1 238 1 135 1 67 1 219 1 338 1 138 1 
366 1 289 1 28 2 110 2 135 1 328 1 179 1 251 1 243 1 210 1 338 2 
366 2 110 5 251 3 219 1 53 1 210 1 338 4 28 5 135 2 282 1 34 1 328 1 243 2 354 1 26 1 119 1 
366 2 110 5 251 3 219 1 210 1 338 4 28 5 135 2 282 1 34 1 328 1 243 2 354 1 342 1 26 1 119 1 
191 1 366 1 110 1 290 2 122 1 251 1 219 1 159 1 237 1 161 1 338 1 132 1 145 1 102 2 28 1 135 1 243 1 224 1 
366 1 110 1 112 1 251 1 81 1 338 1 132 1 28 1 135 2 296 1 243 1 354 1 227 1 
318 1 100 1 290 1 161 1 196 2 102 1 211 1 54 1 134 1 80 1 224 1 201 1 
100 1 153 1 2 1 83 1 161 2 102 2 54 1 7 2 134 2 72 1 108 1 107 1 213 2 318 1 191 1 290 2 38 1 193 1 237 1 262 1 196 2 117 1 80 1 326 1 298 1 239 1 329 1 242 1 201 1 266 1 
100 1 80 1 
153 1 262 1 196 1 
271 1 71 1 334 1 60 1 
295 1 349 1 269 1 271 1 334 1 22 1 60 1 
295 1 5 1 231 1 
37 2 269 1 271 1 334 1 4 1 114 1 324 1 60 1 256 1 349 3 295 3 22 1 
295 2 349 2 269 1 271 1 334 1 330 1 22 1 60 1 36 1 
320 1 139 1 295 1 349 1 269 1 256 1 67 1 334 1 207 1 310 1 22 1 
295 1 349 1 269 1 256 1 334 1 22 1 60 1 
295 1 349 1 269 1 256 1 271 1 22 1 60 2 
269 2 334 1 346 1 16 1 60 1 256 1 349 2 295 2 96 1 22 2 
269 1 271 1 334 2 310 1 60 1 256 1 349 3 295 3 105 1 351 1 188 1 22 1 36 2 
320 1 139 1 269 1 67 2 271 1 334 1 60 1 238 1 256 1 349 2 295 2 20 1 22 1 150 1 36 1 
269 2 271 1 334 2 310 1 60 1 185 1 256 1 349 4 295 4 105 1 330 1 22 2 36 2 
295 1 349 1 269 1 256 1 271 1 334 1 22 1 60 1 
37 1 269 1 271 2 334 3 114 1 310 1 324 1 60 2 349 4 295 4 105 1 22 1 23 1 36 2 
344 1 269 1 271 1 334 1 206 1 82 1 60 1 256 1 349 2 295 2 22 1 36 1 
37 2 269 1 271 1 334 1 114 2 324 1 60 1 256 1 349 3 295 3 22 1 202 1 
370 2 334 2 200 1 84 1 
29 1 295 1 349 1 269 1 256 1 22 1 
295 2 349 2 269 1 256 1 271 1 334 1 188 1 22 1 60 1 36 1 
268 1 
295 1 349 1 269 1 256 1 271 1 334 1 22 1 60 1 
37 1 269 1 271 1 334 1 60 1 256 1 349 3 295 3 188 1 22 1 36 1 
295 1 349 1 105 1 334 1 310 1 36 1 
334 1 60 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (214,254,318) 75 207 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (214,254,318) 75 207 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (214,254,318) 75 (73,163,266) 146 141 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 11 280 52 92 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 11 26 195 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 11 26 52 92 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 11 26 52 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (58,140) 78 250 (86,106) 328 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 11 280 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 11 280 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 11 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 341 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (214,254,318) 75 207 79 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (214,254,318) 75 207 79 263 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 234 (58,140) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (58,140) 78 250 (86,106) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 337 9 243 2 124 1 3 1 223 1 249 6 128 3 81 2 179 5 21 2 137 1 181 4 139 1 157 2 112 1 23 1 183 1 160 9 324 1 292 1 322 2 187 1 162 2 118 1 119 1 96 1 271 2 
297 1 337 9 243 2 124 1 3 1 223 1 249 6 128 3 81 2 179 5 21 2 137 1 181 4 139 1 157 2 112 1 23 1 183 1 160 9 324 1 292 1 322 2 187 1 162 2 118 1 119 1 96 1 271 2 
297 1 337 10 243 2 124 1 3 1 223 1 249 7 128 4 81 2 179 6 21 2 137 1 181 5 139 1 157 2 112 1 23 1 183 1 160 10 324 1 292 1 322 2 187 1 162 2 118 1 119 1 96 1 271 2 
297 1 337 7 243 2 124 1 3 1 223 1 249 4 128 2 81 2 179 4 21 2 137 1 181 3 139 1 157 2 112 1 23 1 183 1 160 7 292 1 322 2 187 1 162 1 118 1 119 1 96 1 271 2 
137 1 181 2 157 1 337 4 243 1 160 4 324 1 322 1 292 1 223 1 249 3 162 2 128 1 119 1 179 3 96 1 21 1 271 1 
137 1 314 1 157 1 337 2 2 1 243 1 112 1 160 2 322 1 67 1 118 1 119 1 179 1 81 1 96 1 21 1 
137 1 297 1 181 1 157 2 337 3 160 3 249 1 128 1 119 1 81 1 179 2 96 1 21 2 
137 1 297 1 181 4 139 1 157 2 337 9 208 1 243 1 183 1 160 9 324 1 322 1 292 1 223 1 249 7 264 1 162 2 128 3 119 1 179 5 81 1 96 1 21 2 271 1 
137 1 297 1 181 4 139 1 157 2 337 9 208 1 243 1 183 1 160 9 324 1 322 1 292 1 223 1 249 7 264 1 162 2 128 3 119 1 179 5 81 1 96 1 21 2 271 1 
14 1 300 1 88 1 
300 1 196 1 227 2 
153 1 318 2 54 2 301 2 254 2 214 2 48 2 192 1 
97 2 193 1 1 1 272 1 219 1 316 2 301 2 220 1 34 2 338 1 153 1 318 3 279 1 54 2 131 1 57 1 252 1 7 1 254 2 348 1 206 1 349 2 63 1 161 1 291 2 140 1 233 1 116 1 310 1 27 1 189 1 294 1 95 1 214 2 48 3 192 1 359 1 
318 1 54 1 251 1 268 1 301 1 270 1 254 1 214 1 48 1 192 1 
163 1 254 1 75 1 
138 2 73 2 300 1 301 1 318 1 14 1 54 1 266 1 281 1 238 1 254 1 270 1 214 1 48 1 109 1 
138 1 60 1 32 1 73 1 340 1 
138 2 60 1 32 1 14 1 145 1 73 2 300 1 302 1 
138 1 60 1 73 1 
138 1 32 1 82 1 73 1 301 1 318 1 54 1 251 1 268 1 270 1 254 1 214 1 48 1 192 1 
300 1 
138 2 60 1 32 1 14 1 73 2 300 1 269 1 302 1 
138 5 32 2 60 2 335 1 73 5 122 2 300 1 244 1 221 1 199 1 302 1 51 1 126 2 201 1 40 1 69 1 14 1 29 2 30 1 
193 1 97 1 206 1 63 1 272 1 219 1 316 1 301 1 291 1 140 1 233 1 174 1 91 1 279 1 6 1 318 2 131 1 254 1 214 1 48 2 
153 1 88 1 
61 1 301 1 153 2 318 2 54 1 178 1 254 2 214 1 48 2 
287 1 174 1 247 1 
97 1 193 1 206 1 63 1 219 1 272 1 316 1 291 1 140 1 233 1 153 1 318 1 279 1 131 1 135 1 48 1 
153 1 6 1 318 3 54 1 301 3 254 3 214 3 48 3 
318 1 251 1 301 1 270 1 254 1 214 1 48 1 
61 1 318 1 54 1 178 1 301 1 270 1 254 1 214 1 48 1 
193 1 97 1 1 1 73 1 272 1 219 1 316 1 301 3 34 2 18 1 153 1 279 1 318 4 6 1 54 2 281 1 131 1 57 1 254 3 348 1 109 1 138 1 206 1 61 1 9 1 349 1 63 1 161 1 291 1 140 1 233 1 116 1 310 1 91 1 189 1 266 1 294 1 238 1 270 1 95 1 214 3 48 4 192 1 359 1 
318 1 6 1 207 1 301 1 254 2 75 1 214 1 48 1 
138 1 61 1 9 1 73 1 300 1 301 3 91 1 6 2 318 3 54 1 266 1 281 1 238 1 270 1 254 3 214 3 48 3 109 1 260 1 
61 1 301 2 247 1 174 1 6 1 318 2 54 1 254 2 214 2 48 2 
97 1 193 1 206 1 63 1 219 1 272 1 316 1 291 1 140 1 233 1 153 1 318 1 279 1 131 1 48 1 
97 1 193 1 206 1 242 1 63 1 272 1 316 1 291 1 233 1 153 1 318 1 279 1 131 1 19 1 48 1 
1 1 34 2 101 1 247 2 39 1 174 2 278 1 57 2 7 2 253 1 285 1 348 1 287 2 349 4 161 1 117 1 265 1 189 1 47 1 294 1 190 1 167 1 358 1 359 1 
318 1 235 1 301 1 270 1 254 1 214 1 48 1 109 1 
91 1 153 1 61 1 318 4 6 2 54 1 207 1 336 1 301 4 43 1 254 5 75 1 214 4 48 4 
318 2 235 1 251 1 301 2 270 1 254 2 214 2 48 2 
149 1 315 1 
149 1 315 1 
213 1 8 1 
213 1 8 1 
213 1 8 1 
149 1 315 1 50 1 
149 1 315 1 50 1 
149 1 315 1 283 1 
149 2 315 2 213 1 344 1 245 1 8 1 
149 1 315 1 50 1 
149 1 315 1 166 1 
149 1 315 1 166 1 
149 1 315 1 166 1 
147 1 306 2 155 2 138 2 156 1 218 1 315 2 149 2 62 2 73 2 300 1 245 1 184 2 115 1 142 1 237 2 107 1 256 3 134 1 
138 1 306 1 155 1 169 1 73 1 315 1 149 1 62 1 301 2 184 1 115 1 304 1 153 1 318 2 130 1 93 1 282 1 154 1 254 2 283 1 256 1 214 2 215 1 48 2 
243 1 322 1 271 1 
243 1 322 1 67 1 
307 1 243 3 257 1 339 1 67 1 271 2 
46 1 243 2 257 1 339 1 67 1 271 1 
243 2 257 2 339 1 67 1 271 1 
32 4 216 1 0 1 122 1 335 1 73 5 300 2 196 1 221 3 302 1 126 1 200 1 304 1 39 1 342 1 40 2 278 1 56 1 154 1 108 2 227 3 180 1 285 1 138 5 60 1 22 1 351 2 352 2 14 1 29 1 215 1 358 1 
32 7 216 2 0 2 73 9 335 1 122 2 300 5 99 1 196 3 221 8 276 1 302 1 51 1 126 2 200 1 304 4 340 5 202 1 39 3 40 6 278 3 56 3 284 1 227 9 285 3 138 9 60 6 182 1 351 6 210 1 352 6 354 5 14 1 29 2 358 3 
32 2 216 1 0 1 122 1 73 3 300 3 196 2 221 3 126 1 51 1 304 1 39 1 342 1 278 1 40 2 56 1 108 1 227 4 285 1 138 3 22 1 351 2 352 2 14 1 29 1 358 1 
32 3 216 1 0 1 122 1 73 4 300 4 99 1 196 3 221 5 276 1 126 1 51 1 304 2 39 2 342 1 278 2 40 4 56 2 108 2 284 1 227 7 285 2 138 4 22 1 351 4 352 4 14 1 29 1 358 2 
262 1 88 1 233 1 
288 1 233 1 
350 1 
131 1 233 1 
272 1 262 2 131 1 275 1 345 1 233 3 
272 1 131 1 233 1 
203 1 233 1 
296 1 44 1 349 7 209 2 185 1 101 3 24 1 325 1 38 1 278 1 176 1 15 1 57 3 253 2 7 4 168 1 285 1 
296 1 44 1 349 7 209 2 185 1 101 3 24 1 325 1 38 1 278 1 176 1 15 1 57 3 253 2 7 4 168 1 285 1 
296 1 44 1 349 7 209 2 185 1 101 3 24 1 325 1 293 1 38 1 278 1 176 1 15 1 57 3 253 2 7 4 168 1 285 1 
296 2 1 1 274 1 34 2 101 10 303 1 38 1 39 3 127 3 278 4 176 1 56 3 343 1 57 15 7 16 253 5 255 1 285 4 286 1 44 2 349 31 209 3 11 1 24 1 185 5 325 1 189 1 294 1 15 2 329 4 168 2 31 1 358 3 359 1 
194 1 296 1 1 2 34 4 101 4 317 1 278 1 176 1 57 4 7 5 253 3 285 1 286 1 44 1 349 9 209 2 185 1 24 1 325 1 189 2 294 2 15 1 168 1 359 2 
97 1 193 1 72 1 337 2 316 1 243 2 197 1 74 1 33 1 249 1 80 1 279 1 319 1 179 1 81 1 21 1 261 1 137 1 59 1 307 1 45 1 157 1 84 1 291 1 160 2 322 1 67 1 119 1 96 1 271 1 
97 1 193 1 72 1 337 3 316 1 243 2 197 1 74 1 33 1 249 2 80 1 279 1 319 1 179 1 81 1 347 1 21 1 307 1 59 1 157 1 84 1 291 1 160 3 322 1 67 1 119 1 94 1 96 1 239 1 271 1 
97 1 193 1 72 1 337 2 316 1 243 2 197 1 74 1 249 2 80 1 279 1 179 1 81 1 59 1 307 1 84 1 291 1 160 2 322 1 67 1 119 1 94 1 96 1 239 1 271 1 
193 1 97 1 64 1 63 1 157 1 337 1 316 1 85 1 74 2 197 2 160 1 291 1 76 1 35 1 233 1 104 1 80 2 279 1 144 1 131 1 81 2 347 1 21 1 
193 1 137 1 97 1 307 1 59 1 72 1 45 1 84 1 157 1 337 1 243 2 316 1 74 1 197 1 33 1 160 1 291 1 322 1 67 1 80 1 279 1 319 1 81 1 94 1 21 1 271 1 
204 1 
193 1 97 2 0 1 122 1 335 1 73 2 316 2 75 1 246 1 221 1 76 1 302 1 126 1 305 1 279 1 40 1 131 1 254 1 20 1 138 2 60 2 289 1 63 2 85 1 291 2 141 1 233 1 163 1 146 1 267 1 29 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 2 60 1 163 1 289 1 73 2 146 1 269 1 254 1 75 1 141 1 302 1 
305 1 138 1 163 1 289 1 122 1 335 1 73 1 146 1 29 1 254 1 75 1 141 1 126 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 73 1 146 1 254 1 75 1 141 1 
305 1 138 1 163 1 289 1 122 1 335 1 73 1 146 1 29 1 254 1 75 1 141 1 126 1 
296 1 1 1 34 2 101 2 247 1 174 1 153 2 278 1 176 1 57 3 253 2 7 3 285 1 348 1 287 1 44 1 349 6 209 1 161 1 24 1 88 1 325 1 189 1 294 1 167 1 359 1 
1 2 34 4 101 2 247 4 341 1 39 1 153 1 174 11 127 3 278 2 56 2 57 6 253 1 7 8 255 1 285 1 348 1 287 11 349 14 11 1 161 2 185 1 232 1 66 1 188 1 310 1 27 1 189 2 236 1 294 2 329 3 358 2 359 2 
193 1 97 1 1 1 272 1 219 1 316 1 301 1 34 2 125 1 100 1 247 1 153 1 279 1 318 2 6 1 131 1 57 1 7 1 254 1 135 1 348 1 206 1 349 2 63 1 291 1 161 1 140 1 233 1 13 1 188 1 310 1 91 1 27 1 189 1 294 1 214 1 48 2 359 1 
1 3 219 2 272 2 316 3 34 6 173 2 39 2 174 7 6 1 318 3 279 2 278 3 176 1 131 2 7 10 132 2 285 3 287 7 44 1 291 3 140 2 185 4 325 1 233 2 188 1 91 1 189 3 294 3 94 1 48 3 296 1 97 3 193 2 301 1 102 1 103 1 101 8 247 7 152 2 106 2 153 2 56 2 57 10 253 4 254 1 348 3 206 2 349 20 63 1 209 1 161 3 24 1 116 2 310 1 27 1 356 1 214 1 358 2 359 3 
332 1 193 2 97 8 1 2 316 8 301 1 34 4 198 1 76 1 53 1 318 1 6 1 279 2 55 1 131 2 57 1 252 2 7 1 254 1 348 2 261 1 10 1 349 2 63 2 85 1 291 7 161 2 233 3 327 1 310 1 27 1 189 2 294 2 94 1 121 1 214 1 167 1 48 1 359 2 
1 1 171 1 301 1 34 2 101 1 247 1 39 1 174 1 318 1 278 1 54 1 56 1 57 2 253 1 7 1 254 1 285 1 348 1 287 1 61 1 349 3 161 1 188 1 189 1 294 1 214 1 48 1 358 1 359 1 
287 1 349 2 1 1 161 1 34 2 101 1 185 1 247 1 174 1 189 1 278 1 47 1 294 1 7 2 167 1 348 1 358 1 359 1 
287 1 349 2 1 1 161 1 34 2 101 1 247 1 39 1 174 1 189 1 294 1 57 2 253 1 190 1 167 1 285 1 348 1 359 1 
1 1 34 2 101 2 247 2 39 1 174 2 278 1 56 1 57 2 7 2 253 1 285 1 348 1 287 2 349 4 161 1 185 1 189 1 294 1 167 1 358 1 359 1 
287 1 349 2 1 1 161 1 34 2 101 1 185 1 247 1 174 1 189 1 278 1 47 1 294 1 121 1 7 2 348 1 358 1 359 1 
287 1 349 2 1 1 161 1 34 2 101 1 247 1 39 1 174 1 189 1 294 1 57 2 253 1 121 1 190 1 285 1 348 1 359 1 
1 1 34 2 101 2 247 2 39 1 174 2 278 1 56 1 57 2 7 2 253 1 285 1 348 1 287 2 349 4 161 1 185 1 189 1 294 1 121 1 358 1 359 1 
1 1 34 2 101 2 247 2 39 1 174 2 278 1 56 1 57 2 7 2 253 1 285 1 348 1 287 2 349 4 161 1 185 1 189 1 294 1 358 1 359 1 
193 1 97 1 1 1 272 1 219 1 316 1 34 2 153 1 279 1 318 1 131 1 57 1 7 1 348 1 206 1 349 2 63 1 291 1 161 1 140 1 233 1 116 1 310 1 27 1 189 1 294 1 48 1 359 1 
193 1 97 1 242 1 1 1 272 1 316 1 34 2 153 1 279 1 5 1 318 1 131 1 57 1 7 1 19 1 348 1 206 1 349 2 63 1 291 1 161 1 233 1 310 1 27 1 189 1 294 1 48 1 359 1 
1 1 34 2 101 2 247 2 39 1 174 2 278 1 56 1 57 2 7 2 253 1 285 1 348 1 287 2 349 4 161 1 185 1 188 1 189 1 294 1 358 1 359 1 
193 1 97 1 1 1 272 1 219 1 316 1 34 2 101 2 247 2 39 1 174 2 278 1 279 1 318 1 56 1 131 1 57 2 253 1 7 2 132 1 285 1 348 1 261 1 287 2 206 1 349 4 291 1 161 1 185 1 140 1 233 1 116 1 189 1 294 1 48 1 358 1 359 1 
1 1 301 1 34 2 101 1 247 1 39 1 174 1 318 1 278 1 54 1 56 1 57 1 7 2 254 1 285 1 348 1 287 1 61 1 349 3 161 1 185 1 188 1 189 1 294 1 191 1 214 1 48 1 358 1 359 1 
195 1 1 2 34 4 101 3 277 1 52 1 224 1 317 1 39 2 127 3 280 1 278 2 56 2 129 1 177 3 57 11 253 1 7 10 255 1 285 2 349 21 11 3 26 2 185 2 89 1 92 1 189 2 294 2 329 4 358 2 359 2 
195 1 1 2 34 4 101 4 277 1 52 1 224 1 317 1 39 2 127 2 278 2 56 2 129 1 177 2 57 9 253 2 7 8 255 1 285 2 349 17 11 2 26 2 185 2 89 1 92 1 189 2 294 2 329 3 358 2 359 2 
296 1 1 1 34 2 101 1 52 1 224 1 317 1 127 1 278 1 176 1 177 1 57 4 7 5 253 1 285 1 44 1 349 9 209 1 11 1 26 1 24 1 325 1 92 1 189 1 294 1 329 1 359 1 
1 2 34 4 101 6 277 2 52 1 224 1 317 1 39 3 127 1 278 3 56 3 129 1 177 2 57 10 253 3 7 9 255 1 285 3 349 19 11 1 26 1 185 3 89 1 92 1 189 2 294 2 28 1 329 2 358 3 359 2 
349 4 1 1 11 1 34 2 26 2 52 2 224 1 317 1 127 1 189 1 92 1 294 1 177 1 329 1 57 2 7 2 359 1 
155 1 306 1 156 1 62 1 149 1 315 1 313 1 245 1 184 1 142 1 
93 1 283 1 
155 1 306 1 175 1 62 1 149 1 315 1 184 1 4 1 248 1 
138 1 306 1 155 1 156 1 218 1 73 1 315 1 149 1 62 1 300 1 245 1 184 1 115 1 142 1 237 1 107 1 256 2 134 1 
138 1 306 1 155 1 156 1 218 1 73 1 315 1 149 1 62 1 300 1 245 1 184 1 115 1 142 1 237 1 107 1 256 2 134 1 
138 1 306 1 155 1 156 1 218 1 73 1 315 1 149 1 62 1 300 1 245 1 184 1 115 1 142 1 237 1 107 1 256 2 134 1 
344 1 50 1 326 1 
344 1 50 1 326 1 
12 1 166 1 
344 1 12 1 166 1 
169 1 282 1 
32 1 217 1 73 1 149 1 315 1 169 1 301 2 304 1 153 1 318 2 130 1 154 1 282 1 254 2 134 1 256 1 283 1 138 1 155 1 306 1 62 1 184 1 93 1 237 1 214 2 215 1 48 2 
50 1 326 1 
344 1 12 1 166 1 
193 1 97 2 333 1 148 1 1 1 273 1 316 2 34 2 36 1 53 1 279 1 318 2 131 1 57 1 252 2 7 1 254 2 348 1 349 2 161 1 291 2 233 1 188 1 327 1 310 1 27 1 189 1 294 1 16 1 48 2 359 1 
193 1 97 2 307 1 59 1 72 1 243 2 316 2 170 1 113 1 33 1 291 2 322 1 67 1 186 1 80 1 279 1 94 1 271 1 261 1 
97 1 193 1 307 1 59 1 72 1 243 2 316 1 113 1 33 1 291 1 322 1 67 1 80 1 279 1 94 1 165 1 271 1 
193 1 97 1 63 1 316 1 170 1 85 1 291 1 114 1 76 1 233 1 104 1 80 1 279 1 131 1 
97 1 193 1 307 1 59 1 72 1 243 2 316 1 170 1 113 1 33 1 291 1 322 1 67 1 186 1 80 1 279 1 94 1 271 1 
258 1 
40 1 14 1 300 1 221 1 199 1 88 1 201 1 
122 1 335 1 73 1 300 2 196 1 221 1 302 1 126 1 40 1 225 1 226 1 227 1 138 1 60 1 311 1 14 1 29 1 
97 1 193 1 0 1 122 1 335 1 272 1 316 1 275 1 221 1 78 1 126 1 250 1 279 2 131 1 58 1 288 2 63 1 262 1 291 1 86 1 233 4 143 1 328 1 29 1 
0 1 73 1 122 2 335 2 300 5 150 1 196 3 221 8 302 1 126 2 39 2 127 1 280 1 40 5 278 2 56 2 133 1 205 1 227 6 285 2 138 1 60 1 110 1 308 2 111 1 159 1 351 5 11 1 352 5 14 2 267 1 329 1 29 2 355 1 358 2 
296 1 334 1 122 1 335 1 73 1 301 1 221 2 126 1 318 1 278 2 40 2 54 1 251 1 254 1 285 1 138 1 308 2 44 1 82 1 111 1 25 1 325 1 268 1 29 1 270 1 214 1 48 1 192 1 
335 1 122 1 300 1 221 1 199 1 126 1 201 1 40 1 14 1 29 1 
308 2 111 1 300 5 351 5 196 5 221 5 352 5 173 1 39 2 278 2 40 5 56 2 227 10 285 2 358 2 
138 1 60 1 14 1 73 1 300 1 302 1 
193 1 97 4 0 2 122 2 335 1 73 3 316 4 246 1 221 2 76 1 302 2 51 1 126 2 105 1 279 1 40 2 41 1 131 1 20 1 320 2 138 3 60 4 63 2 85 1 291 4 233 1 267 2 29 2 330 1 
97 1 193 1 1 1 219 1 272 1 316 1 301 2 34 2 153 1 318 3 279 1 54 2 131 1 57 1 254 2 348 1 206 1 349 1 63 1 291 1 161 1 140 1 233 1 116 1 310 1 189 1 294 1 95 1 214 2 48 3 192 1 359 1 
0 1 335 1 122 1 300 4 196 2 351 2 209 1 221 1 126 1 352 2 40 2 14 2 267 1 29 1 227 4 
155 1 62 1 222 1 
155 1 62 1 222 1 
155 1 169 1 62 1 172 1 142 1 
155 1 62 1 222 1 
155 1 62 1 231 1 
155 1 62 1 231 1 
155 1 62 1 231 1 
155 1 62 1 
149 1 315 1 
296 1 1 1 34 2 101 2 317 1 127 1 278 1 280 1 176 1 57 4 7 4 253 2 285 1 44 1 349 8 209 1 11 1 24 1 325 1 189 1 294 1 329 1 359 1 
296 1 1 2 34 4 101 3 317 1 127 1 280 1 278 2 176 1 56 1 57 5 253 2 7 6 346 1 255 1 285 1 44 1 349 11 209 1 11 1 24 1 185 1 325 1 189 2 294 2 329 2 358 1 359 2 
317 1 127 1 280 1 189 1 349 2 1 1 294 1 57 1 329 1 7 1 11 1 34 2 359 1 
296 1 1 3 150 1 34 6 101 5 317 1 39 1 127 1 280 1 278 3 176 1 56 2 57 7 7 10 253 3 346 1 133 1 205 1 285 2 286 1 44 1 349 17 209 1 11 1 24 1 185 2 325 1 189 3 294 3 329 1 355 1 358 2 359 3 
296 1 1 1 34 2 101 2 317 1 127 1 278 1 280 1 176 1 57 4 7 4 253 2 285 1 44 1 349 8 209 1 11 1 24 1 325 1 189 1 294 1 329 1 359 1 
317 1 127 1 280 1 189 1 349 2 1 1 294 1 57 1 329 1 7 1 11 1 34 2 359 1 
296 1 1 4 150 1 34 8 101 5 317 1 39 1 127 1 280 1 278 3 176 1 56 2 57 8 7 10 253 3 346 1 133 1 205 1 285 2 286 2 44 1 349 18 209 1 11 1 24 1 185 2 325 1 189 4 294 4 329 1 355 1 358 2 359 4 
1 4 150 1 34 8 101 6 317 1 39 2 127 1 280 1 278 3 56 3 57 7 7 9 253 3 133 1 205 1 285 2 286 2 349 16 11 1 185 3 89 1 189 4 294 4 329 1 355 1 358 3 359 4 
296 3 44 3 349 7 24 2 101 6 185 3 325 1 278 1 176 1 57 4 253 3 7 3 285 1 
296 1 1 4 150 1 34 8 101 4 317 1 39 1 127 1 280 1 278 3 176 1 56 2 57 8 7 10 253 3 133 1 205 1 285 2 286 2 44 1 349 18 209 1 11 1 24 1 185 1 325 1 89 1 189 4 294 4 329 1 355 1 358 2 359 4 
296 1 44 1 349 8 1 2 209 1 34 4 185 1 101 3 24 1 325 1 278 1 189 2 176 1 294 2 57 4 7 4 253 2 285 1 359 2 286 1 
296 1 44 1 349 6 209 1 24 1 101 2 88 1 325 1 278 1 176 1 57 3 253 2 7 3 285 1 
349 4 1 1 34 2 101 2 185 1 39 1 189 1 278 1 56 1 294 1 57 2 253 1 7 2 346 1 285 1 358 1 359 1 
127 1 349 2 57 1 329 1 7 1 11 1 
296 1 1 1 34 2 101 4 39 2 341 1 127 2 278 3 176 1 56 2 57 9 7 9 253 3 255 1 285 3 286 1 44 1 349 18 209 1 24 1 185 1 325 1 66 1 189 1 294 1 329 2 358 2 359 1 
349 1 57 1 329 1 
127 1 349 1 7 1 
349 6 1 1 34 2 185 1 101 3 173 1 39 1 189 1 278 1 56 1 294 1 57 3 7 3 253 2 346 1 285 1 358 1 359 1 
1 1 150 1 34 2 101 2 317 1 39 2 127 1 280 1 278 2 56 2 57 6 7 6 253 1 133 1 205 1 285 2 349 12 11 1 185 1 189 1 294 1 329 1 355 1 358 2 359 1 
296 1 44 1 349 6 101 2 185 1 325 1 278 1 57 3 7 3 253 1 285 1 
296 1 44 1 349 3 1 1 34 2 185 1 101 2 24 1 189 1 176 1 294 1 57 2 7 1 253 1 49 1 286 1 359 1 
296 2 334 1 44 2 349 10 1 1 34 2 101 5 185 2 325 1 317 1 189 1 278 2 294 1 57 5 253 3 7 5 285 2 359 1 
349 2 1 1 34 2 185 1 101 1 317 1 189 1 278 1 294 1 7 2 358 1 359 1 
349 4 1 1 34 2 101 2 185 1 39 1 317 1 189 1 278 1 56 1 294 1 57 2 253 1 7 2 285 1 358 1 359 1 
296 1 44 1 349 3 1 3 34 6 101 2 185 1 89 1 317 1 189 3 294 3 57 2 253 1 7 1 286 1 49 1 359 3 
296 3 1 5 274 1 34 10 101 12 303 1 317 1 39 3 127 3 278 5 176 1 56 3 343 1 57 18 7 16 253 7 346 1 255 1 285 5 286 2 44 3 349 34 209 1 11 1 24 1 185 5 325 2 89 1 189 5 294 5 329 4 358 3 49 1 359 5 
207 1 254 1 75 1 79 1 
298 1 299 1 207 1 158 1 254 1 75 1 263 1 79 1 37 1 
193 1 97 1 279 1 63 1 131 1 316 1 85 1 291 1 76 1 88 1 233 1 
97 1 193 1 206 1 63 1 272 1 316 1 301 1 291 1 140 1 233 1 153 1 279 1 6 1 318 2 131 1 254 1 214 1 48 2 
320 1 97 1 193 1 206 1 272 2 316 1 301 1 291 1 140 1 233 3 153 1 234 1 279 1 6 1 318 2 203 1 131 2 238 1 270 1 254 2 214 2 48 2 109 1 
320 1 97 2 193 1 206 1 272 2 316 2 65 1 301 1 291 2 233 3 153 1 234 1 279 1 6 1 318 2 203 1 131 2 238 1 270 1 254 2 19 1 214 2 48 2 109 1 
138 2 320 1 97 3 193 1 60 1 288 1 63 1 73 2 300 1 272 1 316 3 262 1 65 1 291 3 323 1 233 4 234 1 279 1 14 1 203 1 42 1 281 1 131 1 
138 1 320 1 97 1 58 1 193 1 288 1 73 1 272 1 316 1 262 1 291 1 233 4 234 1 279 1 203 1 131 1 
193 1 97 1 332 1 279 1 316 1 291 1 
332 1 97 7 240 1 193 2 10 1 98 1 63 2 272 1 316 7 275 1 291 6 198 1 151 1 233 3 327 1 279 3 55 1 131 2 252 1 94 1 261 1 
296 1 193 1 97 1 1 2 272 1 273 1 219 1 316 1 301 1 34 4 101 2 247 1 106 1 174 1 153 2 278 1 279 1 318 2 6 1 176 1 131 1 57 3 7 3 253 2 254 1 132 1 285 1 348 2 261 1 287 1 206 1 44 1 349 6 209 1 161 2 291 1 24 1 140 1 325 1 233 1 188 1 116 1 189 2 294 2 214 1 48 2 359 2 
58 1 97 1 138 1 32 1 288 1 73 1 335 1 122 1 63 1 262 1 316 1 86 1 291 1 78 1 233 2 126 1 250 1 41 1 29 1 
332 1 97 2 193 1 272 1 262 1 316 2 275 1 291 2 233 2 143 1 279 2 131 1 261 1 
331 1 97 4 193 1 63 1 316 4 65 1 85 1 291 4 76 1 233 1 279 1 131 1 261 1 
320 1 97 2 240 1 193 1 272 1 316 2 291 2 102 1 151 1 233 1 279 2 312 1 120 1 131 1 
193 1 97 1 59 1 279 1 63 1 243 1 316 1 291 1 322 1 67 1 
97 2 193 1 333 1 316 2 291 2 233 1 327 1 279 1 131 1 94 1 261 1 
331 1 320 1 97 5 193 2 10 1 63 1 316 5 85 1 291 4 76 1 198 1 233 3 327 1 279 2 131 2 261 1 
331 1 320 1 97 5 193 2 83 1 10 1 63 1 316 5 85 1 291 4 76 1 233 3 327 1 279 2 131 2 261 1 
97 1 193 1 206 1 63 1 272 1 316 1 301 1 291 1 233 1 153 1 279 1 6 1 318 2 131 1 254 1 19 1 214 1 48 2 
320 1 97 1 240 1 193 1 98 1 272 1 316 1 275 1 291 1 151 1 233 1 279 2 131 1 
136 1 318 1 148 1 212 1 295 1 16 1 254 1 48 1 36 1 
164 1 295 1 77 1 
136 1 153 1 212 1 295 1 87 1 
138 2 136 2 32 1 9 1 73 2 300 1 77 1 87 2 153 1 14 1 266 1 281 1 164 1 212 2 295 1 238 1 270 1 109 1 17 1 
119 1 179 1 96 1 88 1 
119 1 337 1 157 1 179 1 160 1 96 1 21 1 
337 1 81 1 197 1 
137 1 241 1 157 1 337 3 290 1 160 3 118 2 119 1 179 1 71 1 96 1 21 1 
162 1 119 1 337 2 157 1 179 1 160 2 96 1 249 1 21 1 
137 1 181 1 157 1 337 1 243 1 160 1 292 1 322 1 179 1 21 1 271 1 
137 1 119 1 337 1 157 1 179 1 160 1 21 1 
137 1 119 2 337 1 157 1 160 1 96 1 21 1 
137 1 157 2 337 2 160 2 68 1 353 1 119 1 179 1 357 1 21 2 
137 1 181 1 139 1 157 1 337 3 183 1 160 3 249 2 128 1 119 1 179 2 96 1 21 1 
137 1 307 1 157 1 337 2 243 2 160 2 322 1 67 1 249 1 119 1 211 1 179 1 96 1 21 1 271 1 
137 1 181 1 157 2 337 4 160 4 324 1 249 2 162 1 128 1 119 1 179 2 96 1 21 2 
137 1 119 1 337 1 157 1 179 1 160 1 96 1 21 1 
241 1 181 1 337 4 157 1 160 4 249 2 118 1 128 1 119 2 70 1 179 3 71 1 96 2 21 1 
137 1 123 1 321 1 157 1 337 2 208 1 160 2 249 1 119 1 179 1 96 1 21 1 
241 2 137 1 118 2 119 1 337 3 157 1 179 1 71 1 160 3 96 1 21 1 229 1 
230 2 179 2 309 1 228 1 
90 1 137 1 337 1 157 1 160 1 21 1 
137 1 119 1 337 2 157 1 179 1 183 1 160 2 96 1 249 1 21 1 
259 1 
137 1 119 1 337 1 157 1 179 1 160 1 96 1 21 1 
137 1 157 1 337 3 183 1 160 3 249 1 118 1 119 1 179 1 96 1 21 1 
181 1 128 1 70 1 179 1 
119 1 179 1 

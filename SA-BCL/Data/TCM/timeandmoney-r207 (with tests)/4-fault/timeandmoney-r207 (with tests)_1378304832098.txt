#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 321 158 9 277 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 181 100 318 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 256 35 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 264 1 365 2 306 2 308 2 218 5 74 1 55 1 136 1 166 9 221 2 12 1 274 2 80 1 14 4 373 1 248 3 115 1 251 2 297 2 37 1 316 1 335 1 170 6 120 1 338 9 152 1 153 1 
127 1 264 1 365 2 306 2 308 2 218 5 74 1 55 1 136 1 166 9 221 2 12 1 274 2 80 1 14 4 373 1 248 3 115 1 251 2 297 2 37 1 316 1 335 1 170 6 120 1 338 9 152 1 153 1 
127 1 264 1 365 2 306 2 308 2 218 6 74 1 55 1 136 1 166 10 221 2 12 1 274 2 80 1 14 5 373 1 248 4 115 1 251 2 297 2 37 1 316 1 335 1 170 7 120 1 338 10 152 1 153 1 
127 1 264 1 365 2 306 2 308 2 218 4 74 1 55 1 136 1 166 7 221 1 274 2 80 1 14 3 373 1 248 2 115 1 251 2 297 2 37 1 316 1 335 1 170 4 120 1 338 7 152 1 153 1 
14 2 127 1 248 1 365 1 115 1 306 1 297 1 308 1 37 1 170 3 218 3 74 1 55 1 338 4 166 4 221 2 12 1 274 1 
365 1 297 1 298 1 251 1 344 1 308 1 315 1 37 1 335 1 218 1 74 1 55 1 136 1 338 2 166 2 274 1 
14 1 248 1 297 2 251 1 37 1 218 2 170 1 74 1 55 1 338 3 166 3 153 1 274 2 
127 1 365 1 306 1 308 1 72 1 218 5 74 1 55 1 166 9 221 2 274 2 80 1 12 1 14 4 248 3 115 1 251 1 297 2 37 1 170 7 120 1 21 1 338 9 153 1 
127 1 365 1 306 1 308 1 72 1 218 5 74 1 55 1 166 9 221 2 274 2 80 1 12 1 14 4 248 3 115 1 251 1 297 2 37 1 170 7 120 1 21 1 338 9 153 1 
148 1 279 1 22 1 
321 2 279 1 261 1 
165 2 109 2 371 2 70 1 266 2 229 2 174 1 289 2 
341 1 69 1 47 1 177 2 70 1 266 2 159 1 324 2 238 1 48 1 132 1 289 2 270 1 6 1 165 3 182 1 271 1 214 1 293 1 105 2 58 1 109 2 371 2 59 1 114 1 352 1 169 1 229 3 230 2 145 1 86 1 149 1 336 2 121 1 174 1 91 1 155 1 
165 1 351 1 109 1 371 1 184 1 266 1 229 1 2 1 174 1 289 1 
246 1 351 2 371 1 109 2 178 1 266 1 2 1 229 2 279 1 289 1 327 1 165 2 184 1 42 1 29 1 219 1 173 1 174 1 139 1 303 1 22 1 
246 1 351 1 371 1 109 1 178 2 266 1 229 1 279 1 289 1 165 1 219 2 29 1 139 1 303 1 22 1 
346 1 19 1 178 1 219 1 142 1 
19 1 178 2 219 2 279 1 125 1 22 1 118 1 142 1 
19 1 178 1 219 1 
351 1 371 1 109 1 178 1 266 1 2 1 229 1 289 1 165 1 184 1 42 1 219 1 174 1 142 1 
279 1 
380 1 19 1 178 2 219 2 279 1 22 1 118 1 142 1 
112 1 247 2 178 5 237 2 131 1 279 1 36 1 118 1 99 1 19 2 219 5 64 1 87 1 242 2 203 1 329 1 11 1 22 1 142 2 
148 1 70 1 
109 2 371 1 227 1 266 1 70 2 229 2 289 1 165 2 357 1 
199 1 111 1 348 1 
341 1 59 1 47 1 69 1 177 1 70 1 169 1 229 1 252 1 165 1 182 1 271 1 214 1 86 1 336 1 105 1 
165 3 371 1 109 3 70 1 266 3 229 3 280 1 289 3 
165 1 351 1 109 1 184 1 266 1 229 1 289 1 
165 1 351 1 357 1 109 1 371 1 227 1 266 1 229 1 289 1 
341 1 69 1 47 1 178 1 177 1 70 1 266 3 324 1 238 1 48 1 289 3 270 1 6 1 165 4 182 1 214 1 271 1 29 1 219 1 139 1 105 1 58 1 244 1 246 1 351 1 59 1 332 1 371 2 109 3 110 1 114 1 169 1 229 4 280 1 230 2 145 1 86 1 357 1 336 1 121 1 174 1 303 1 91 1 155 1 
351 1 109 2 266 1 70 1 229 2 280 1 289 1 165 2 119 1 173 1 140 1 
246 1 351 1 371 1 110 1 109 3 332 1 178 1 266 3 229 3 84 1 279 1 280 2 289 3 165 3 357 1 219 1 29 1 139 1 303 1 
111 1 371 1 109 2 266 2 229 2 280 1 289 2 165 2 357 1 199 1 
341 1 59 1 47 1 69 1 177 1 70 1 169 1 229 1 165 1 271 1 214 1 182 1 86 1 336 1 105 1 
341 1 59 1 323 1 69 1 177 1 70 1 169 1 229 1 165 1 271 1 134 1 182 1 86 1 336 1 105 1 
363 1 324 4 238 1 48 1 5 1 98 1 348 2 8 1 138 1 106 1 58 1 111 2 114 2 230 2 253 1 145 1 198 1 199 2 149 2 381 1 360 1 121 1 88 1 155 1 
165 1 53 1 351 1 109 1 266 1 229 1 139 1 289 1 
341 1 59 1 110 1 109 1 69 1 47 1 177 1 266 1 169 1 229 2 280 1 289 1 165 2 182 1 214 1 271 1 199 1 86 1 336 1 105 1 
351 1 110 1 109 5 371 1 226 1 266 4 70 1 229 5 280 2 289 4 165 5 357 1 119 1 173 1 140 1 287 1 
165 2 53 1 351 1 109 2 184 1 266 2 229 2 289 2 
322 1 71 1 
322 1 71 1 
171 1 31 1 
171 1 31 1 
171 1 31 1 
322 1 330 1 71 1 
322 1 330 1 71 1 
322 1 201 1 71 1 
147 1 322 2 171 1 31 1 71 2 117 1 
322 1 330 1 71 1 
322 1 71 1 163 1 
322 1 71 1 163 1 
322 1 71 1 163 1 
224 1 322 2 178 2 129 1 279 1 49 2 71 2 368 3 85 2 147 1 216 1 317 2 39 1 137 1 359 2 300 2 219 2 309 1 285 1 
322 1 178 1 70 1 266 2 49 1 71 1 289 2 368 1 165 2 215 1 219 1 191 1 109 2 353 1 229 2 146 1 18 1 317 1 201 1 300 1 359 1 285 1 258 1 45 1 
365 1 306 1 308 1 
365 1 308 1 315 1 
194 1 365 3 306 2 130 1 315 1 232 1 
194 1 44 1 365 2 306 1 130 1 315 1 
194 1 365 2 306 1 130 2 315 1 
363 1 321 3 94 1 178 5 210 2 97 1 237 1 240 1 98 1 213 2 99 2 219 5 57 1 138 1 242 1 188 1 11 3 142 4 245 1 191 1 192 1 247 1 279 2 118 1 18 1 19 1 258 1 360 1 87 1 261 1 151 2 22 1 
304 1 363 3 321 9 94 1 208 5 178 9 210 6 97 3 237 2 98 3 213 6 99 6 346 5 219 9 57 2 138 3 242 2 104 1 310 1 11 8 189 1 142 7 245 2 372 1 247 2 36 1 279 5 118 1 18 4 19 6 360 3 87 1 302 1 261 3 22 1 
363 1 321 4 178 3 210 2 237 1 97 1 98 1 99 2 213 2 219 3 57 1 242 1 138 1 188 1 11 3 142 2 245 1 192 1 247 1 279 3 36 1 18 1 360 1 261 2 151 1 22 1 
363 2 321 7 178 4 210 4 237 1 97 2 98 2 213 4 99 4 219 4 57 1 242 1 138 2 188 1 310 1 11 5 245 1 142 3 372 1 192 1 247 1 279 4 36 1 18 2 360 2 302 1 261 3 151 2 22 1 
182 1 148 1 269 1 
182 1 295 1 
337 1 
182 1 69 1 
182 3 370 1 86 1 69 1 269 2 162 1 
182 1 86 1 69 1 
182 1 43 1 
363 1 320 1 113 1 114 3 143 1 324 7 61 1 5 2 376 1 51 2 334 1 256 1 56 1 149 4 360 1 88 3 311 1 
363 1 320 1 113 1 114 3 143 1 324 7 61 1 5 2 376 1 51 2 334 1 256 1 56 1 149 4 360 1 88 3 311 1 
363 1 113 1 320 1 114 3 143 1 324 7 61 1 5 2 116 1 376 1 51 2 334 1 256 1 56 1 149 4 360 1 88 3 311 1 
320 1 363 4 46 1 324 31 238 1 97 3 48 1 5 5 51 3 98 3 27 1 56 2 292 1 185 1 138 3 58 1 311 5 243 1 82 1 113 1 114 15 143 2 61 2 333 4 230 2 376 1 378 3 334 2 358 1 256 1 149 16 121 1 360 4 88 10 
363 1 324 9 238 2 48 2 5 3 51 2 56 1 292 1 58 2 311 1 113 1 143 1 114 4 314 1 61 1 230 4 376 1 334 1 255 1 149 5 256 1 360 1 121 2 88 4 
68 1 341 1 362 1 177 1 365 2 306 1 3 1 308 1 54 1 218 1 74 1 55 1 220 1 105 1 166 2 274 1 169 1 297 1 251 1 315 1 37 1 232 1 170 1 41 1 336 1 20 1 260 1 338 2 204 1 123 1 
68 1 341 1 362 1 177 1 365 2 306 1 3 1 308 1 217 1 218 1 74 1 55 1 220 1 105 1 166 3 274 1 374 1 169 1 297 1 251 1 315 1 232 1 41 1 170 2 336 1 20 1 260 1 338 3 204 1 67 1 
341 1 362 1 177 1 365 2 306 1 3 1 308 1 218 1 74 1 55 1 220 1 105 1 166 2 374 1 169 1 251 1 315 1 232 1 41 1 170 2 336 1 20 1 260 1 338 2 67 1 
341 1 0 1 69 1 177 1 271 1 182 1 217 1 75 1 105 1 166 1 167 1 349 1 274 1 169 1 297 1 251 2 196 1 41 2 336 1 20 2 260 2 338 1 93 1 
68 1 341 1 362 1 177 1 365 2 306 1 3 1 308 1 220 1 105 1 166 1 274 1 374 1 169 1 297 1 251 1 315 1 37 1 232 1 41 1 336 1 20 1 260 1 338 1 204 1 123 1 
234 1 
341 1 206 1 158 1 1 1 165 1 99 2 271 2 219 5 105 2 349 1 11 2 351 1 109 1 168 2 169 1 278 2 229 1 279 2 355 2 356 2 118 3 282 2 19 6 319 1 284 1 173 1 22 1 361 1 321 2 128 1 69 1 178 5 177 2 237 1 179 2 239 1 327 1 182 1 290 4 291 1 75 1 328 1 76 1 29 1 242 1 139 1 245 1 81 2 246 1 247 1 250 1 336 2 87 1 261 2 303 1 
246 1 206 1 351 1 128 1 109 1 168 1 178 3 1 1 229 1 118 1 327 1 165 1 380 1 290 2 19 2 29 1 219 3 76 1 173 1 139 1 303 1 361 1 
246 1 206 1 351 1 128 1 109 1 178 2 1 1 229 1 355 1 327 1 165 1 290 3 29 1 219 2 76 1 173 1 139 1 303 1 361 1 
206 1 128 1 178 3 1 1 179 1 327 1 165 1 290 3 76 1 219 3 29 1 139 1 246 1 351 1 109 1 168 1 229 1 355 1 118 1 380 1 19 2 173 1 303 1 361 1 
206 1 266 1 158 1 267 1 1 1 211 1 2 1 165 2 99 1 9 1 219 5 11 1 351 2 109 2 168 4 229 2 278 2 279 2 355 3 356 2 118 3 282 2 19 7 173 1 174 1 22 2 361 1 128 1 178 5 25 1 237 1 179 4 289 1 239 1 327 1 290 5 184 1 29 1 76 1 242 1 139 1 246 1 81 2 371 1 247 1 380 1 42 1 87 1 90 1 303 1 261 2 
206 1 158 1 1 1 165 1 99 1 219 4 11 1 351 1 109 1 168 2 229 1 278 2 355 2 279 2 356 2 118 2 282 2 19 4 284 1 173 1 22 1 361 1 128 1 321 2 178 4 237 1 179 2 239 1 327 1 290 4 29 1 76 1 242 1 139 1 246 1 81 2 247 1 87 1 303 1 261 2 
206 1 128 1 178 4 158 1 1 1 211 1 237 1 179 2 239 1 327 1 165 1 99 1 290 4 9 1 76 1 219 4 29 1 242 1 139 1 11 1 81 2 246 1 351 1 109 1 247 1 168 2 278 2 229 1 279 1 355 2 356 2 118 2 282 2 19 4 87 1 173 1 90 1 261 2 303 1 22 1 361 1 
206 1 128 1 178 4 158 1 1 1 211 1 237 1 179 2 239 1 327 1 165 1 99 1 290 4 9 1 76 1 219 4 29 1 242 1 139 1 11 1 81 2 246 1 351 1 109 1 247 1 168 2 278 2 229 1 279 1 355 2 356 2 118 2 282 2 19 4 87 1 173 1 90 1 261 2 303 1 22 1 361 1 
206 1 321 1 128 1 178 2 158 1 1 1 237 1 327 1 165 1 99 1 290 2 28 1 9 1 76 1 219 2 29 1 242 1 139 1 11 1 81 1 246 1 351 1 109 1 247 1 228 1 229 1 277 1 356 1 40 1 87 1 173 1 303 1 361 1 
206 1 128 1 178 4 25 1 158 1 1 1 211 1 237 1 179 3 239 1 327 1 165 1 99 1 290 5 9 1 76 1 219 4 29 1 242 1 139 1 11 1 81 2 246 1 351 1 109 1 247 1 168 3 278 2 229 1 279 1 355 3 356 2 118 2 282 2 19 5 87 1 173 1 90 1 261 2 303 1 22 1 361 1 
206 1 128 1 178 4 25 1 158 1 1 1 211 1 237 1 179 3 239 1 327 1 165 1 99 1 290 5 9 1 76 1 219 4 29 1 242 1 139 1 11 1 81 2 246 1 351 1 109 1 247 1 168 3 278 2 229 1 279 1 355 3 356 2 118 2 282 2 19 5 87 1 173 1 90 1 261 2 303 1 22 1 361 1 
206 1 158 1 1 1 165 1 99 1 219 4 11 1 351 1 109 1 228 2 168 2 229 1 355 2 279 1 356 2 118 2 19 4 284 1 173 1 22 1 361 1 128 1 321 2 178 4 237 1 179 2 327 1 290 4 28 1 29 1 76 1 242 1 139 1 246 1 81 2 247 1 87 1 301 2 303 1 
363 1 70 2 324 6 238 1 48 1 5 2 51 1 348 1 8 1 56 1 58 1 111 1 113 1 114 3 61 1 230 2 145 1 376 1 148 1 199 1 256 1 149 3 121 1 360 1 88 2 155 1 
235 1 363 1 70 1 324 14 238 2 48 2 326 1 97 2 367 1 5 1 270 1 98 1 348 11 138 2 293 1 311 1 58 2 243 1 82 1 350 1 111 4 114 6 333 3 230 4 145 2 378 3 199 11 149 8 121 2 360 2 172 1 88 2 155 1 
341 1 69 1 47 1 177 1 70 1 343 1 266 1 324 2 48 1 326 1 238 1 289 1 270 1 165 2 182 1 214 1 271 1 293 1 105 1 58 1 59 1 111 1 109 1 110 1 114 1 169 1 229 2 252 1 375 1 280 1 230 2 144 1 145 1 86 1 149 1 336 1 121 1 155 1 
341 2 47 2 266 1 48 3 97 2 5 4 51 1 270 1 6 2 98 2 165 3 271 1 214 2 348 7 56 1 105 3 58 3 311 4 275 1 108 2 113 1 110 1 109 1 59 2 111 7 114 10 354 1 169 2 229 3 61 1 280 1 230 6 283 2 63 2 121 3 360 3 175 1 363 3 69 2 177 3 70 2 324 20 238 3 326 1 289 1 182 2 138 2 293 1 83 2 374 1 145 3 376 1 86 2 199 7 256 1 149 10 336 3 88 8 155 3 
341 2 288 1 69 2 177 8 266 1 324 2 238 2 48 2 132 2 289 1 270 1 165 1 182 3 271 2 54 1 8 1 75 1 293 1 30 1 105 7 58 2 349 1 296 1 109 1 114 1 374 1 169 2 229 1 280 1 230 4 145 2 62 1 149 1 336 8 121 2 286 1 124 1 340 1 155 2 
363 1 266 1 324 3 238 1 48 1 326 1 97 1 289 1 5 1 98 1 165 1 348 1 138 1 10 1 58 1 111 1 371 1 109 1 114 2 229 1 230 2 145 1 199 1 357 1 149 1 121 1 360 1 88 1 155 1 
111 1 324 2 48 1 238 1 230 2 253 1 145 1 199 1 348 1 8 1 149 2 121 1 138 1 360 1 88 1 311 1 58 1 155 1 
111 1 363 1 114 2 324 2 48 1 238 1 230 2 145 1 5 1 98 1 199 1 348 1 8 1 121 1 106 1 88 1 58 1 155 1 
363 1 324 4 97 1 238 1 48 1 5 1 98 1 348 2 8 1 138 1 58 1 311 1 111 2 114 2 230 2 145 1 199 2 149 2 360 1 121 1 88 2 155 1 
111 1 324 2 48 1 238 1 230 2 253 1 145 1 199 1 348 1 149 2 286 1 121 1 138 1 360 1 88 1 311 1 58 1 155 1 
111 1 363 1 114 2 324 2 48 1 238 1 230 2 145 1 5 1 98 1 199 1 348 1 286 1 121 1 106 1 88 1 58 1 155 1 
363 1 324 4 97 1 238 1 48 1 5 1 98 1 348 2 138 1 58 1 311 1 111 2 114 2 230 2 145 1 199 2 149 2 360 1 121 1 286 1 88 2 155 1 
363 1 111 2 114 2 324 4 48 1 238 1 97 1 230 2 145 1 5 1 98 1 199 2 348 2 149 2 121 1 138 1 360 1 88 2 311 1 58 1 155 1 
341 1 69 1 47 1 177 1 70 1 324 2 48 1 238 1 6 1 270 1 165 1 214 1 271 1 182 1 293 1 105 1 58 1 59 1 114 1 169 1 229 1 230 2 145 1 86 1 149 1 336 1 121 1 155 1 
341 1 69 1 323 1 177 1 70 1 324 2 48 1 238 1 270 1 165 1 134 1 271 1 182 1 183 1 293 1 105 1 58 1 59 1 114 1 169 1 229 1 230 2 145 1 86 1 149 1 336 1 121 1 155 1 
363 1 324 4 97 1 238 1 48 1 326 1 5 1 98 1 348 2 138 1 58 1 311 1 111 2 114 2 230 2 145 1 199 2 149 2 360 1 121 1 88 2 155 1 
341 1 363 1 47 1 69 1 177 1 324 4 48 1 238 1 97 1 5 1 98 1 6 1 165 1 214 1 182 1 54 1 348 2 138 1 105 1 311 1 58 1 108 1 111 2 59 1 114 2 169 1 229 1 230 2 145 1 199 2 86 1 149 2 336 1 360 1 121 1 88 2 155 1 
363 1 342 1 266 1 324 3 238 1 48 1 326 1 97 1 289 1 98 1 165 1 348 1 138 1 311 1 58 1 371 1 109 1 111 1 114 1 229 1 230 2 145 1 357 1 199 1 149 2 121 1 360 1 88 1 155 1 
156 1 363 3 364 1 324 19 325 2 238 2 48 2 97 3 5 3 98 3 138 3 187 1 58 2 311 3 243 1 190 1 82 1 225 1 114 10 333 2 197 1 281 2 230 4 378 1 255 1 149 9 121 2 360 3 88 6 154 1 
156 2 363 2 324 26 325 4 238 3 48 3 97 3 5 2 50 1 98 2 181 1 100 1 292 2 138 3 187 1 311 2 58 3 243 2 190 1 114 12 197 2 333 2 281 1 230 6 378 2 38 1 200 1 255 1 318 1 149 14 121 3 360 3 88 4 154 1 
156 1 263 1 97 4 48 3 5 4 50 1 51 1 98 4 100 1 56 1 311 4 58 3 113 1 114 21 61 1 230 6 281 1 318 1 360 5 121 3 363 5 364 1 324 41 238 3 325 4 181 1 292 1 138 4 187 1 243 3 82 1 190 1 197 2 333 4 376 1 378 3 38 1 200 1 255 1 149 20 256 1 88 8 154 1 
156 1 263 1 363 4 364 1 324 38 325 4 238 4 48 4 97 4 5 4 51 1 50 1 98 3 181 1 100 1 56 1 292 2 138 4 187 1 58 4 311 3 243 3 190 1 82 1 113 1 114 18 61 1 333 4 197 2 281 1 230 8 376 1 378 3 38 1 200 1 318 1 255 1 256 1 149 20 121 4 360 5 88 7 154 1 
235 2 156 1 363 8 324 52 325 4 238 2 48 2 97 7 5 7 51 1 50 1 98 7 181 1 100 1 56 1 292 1 138 7 187 1 58 2 311 7 243 2 190 1 82 2 113 1 114 25 61 1 333 4 197 1 281 1 230 4 376 1 378 4 38 1 200 1 318 1 255 1 256 1 149 27 121 2 360 8 88 14 154 1 
147 1 317 1 322 1 137 1 300 1 359 1 309 1 96 1 49 1 71 1 
215 1 201 1 
317 1 236 1 322 1 299 1 300 1 359 1 65 1 49 1 71 1 
224 1 322 1 178 1 129 1 279 1 49 1 71 1 368 2 85 1 147 1 317 1 39 1 137 1 219 1 359 1 300 1 309 1 285 1 
224 1 322 1 178 1 129 1 279 1 49 1 71 1 368 2 85 1 147 1 317 1 39 1 137 1 219 1 359 1 300 1 309 1 285 1 
224 1 322 1 178 1 129 1 279 1 49 1 71 1 368 2 85 1 147 1 317 1 39 1 137 1 219 1 359 1 300 1 309 1 285 1 
33 1 330 1 117 1 
33 1 330 1 117 1 
135 1 163 1 
135 1 163 1 117 1 
45 1 146 1 
322 1 178 1 70 1 266 2 49 1 71 1 289 2 368 1 165 2 215 1 219 1 222 1 142 1 191 1 109 2 353 1 229 2 85 1 146 1 18 1 39 1 317 1 201 1 300 1 359 1 258 1 45 1 
33 1 330 1 
135 1 163 1 117 1 
341 1 288 1 69 1 177 2 95 1 324 2 48 1 326 1 238 1 132 2 270 1 165 2 182 1 293 1 294 1 105 2 78 1 58 1 312 1 109 2 114 1 169 1 229 2 230 2 145 1 379 1 149 1 336 2 121 1 124 1 155 1 
341 1 68 1 362 1 176 1 193 1 177 2 365 2 374 1 306 1 169 1 308 1 315 1 232 1 164 1 54 1 336 2 20 1 220 1 105 2 
68 1 341 1 362 1 193 1 177 1 365 2 374 1 306 1 169 1 308 1 315 1 232 1 257 1 336 1 20 1 220 1 105 1 
341 1 23 1 0 1 69 1 177 1 169 1 164 1 182 1 271 1 75 1 336 1 20 1 105 1 349 1 
341 1 68 1 362 1 176 1 193 1 177 1 365 2 374 1 306 1 169 1 308 1 315 1 232 1 164 1 336 1 20 1 220 1 105 1 
16 1 
99 1 148 1 112 1 329 1 279 1 11 1 22 1 
321 1 178 1 237 1 239 1 99 1 219 1 242 1 11 1 247 1 278 1 279 2 118 1 282 1 19 1 87 1 261 1 22 1 
341 4 262 2 209 1 210 6 160 1 97 2 269 2 98 2 271 1 213 6 99 8 54 1 347 2 219 5 105 3 11 9 112 1 169 3 276 2 279 8 118 3 19 5 360 2 22 2 126 1 24 1 321 12 363 2 69 3 177 3 178 5 237 4 133 2 182 10 242 4 138 2 329 1 186 2 295 3 245 2 246 2 370 1 83 2 247 4 250 1 195 2 254 1 86 3 150 2 336 3 43 2 87 4 261 6 339 2 
321 6 363 1 178 1 210 4 237 2 97 1 133 1 98 1 181 1 213 4 99 3 100 1 219 1 242 2 138 1 11 5 243 1 15 1 247 2 333 1 279 4 118 1 378 1 38 1 200 1 19 1 318 1 87 2 360 1 261 3 22 1 
363 1 247 1 178 1 237 1 35 1 61 1 133 1 99 2 256 1 56 1 219 1 360 1 87 1 242 1 90 1 11 2 
112 1 247 1 237 1 279 1 99 1 87 1 242 1 329 1 22 1 11 1 
83 1 262 1 321 10 363 2 210 5 97 2 279 5 133 2 98 2 99 5 213 5 138 2 360 2 261 5 11 5 
19 1 178 1 219 1 279 1 22 1 118 1 
341 1 126 2 24 1 69 1 177 4 178 3 237 2 182 1 271 2 99 2 291 1 75 1 328 1 219 3 242 2 105 4 11 2 349 1 245 2 247 2 34 1 169 1 250 2 36 1 377 1 118 2 19 4 336 4 87 1 
341 1 47 1 69 1 177 1 70 1 266 2 324 1 238 1 48 1 289 2 270 1 6 1 165 3 271 1 214 1 182 1 105 1 58 1 109 2 371 2 59 1 114 1 169 1 229 3 230 2 145 1 86 1 336 1 121 1 174 1 91 1 155 1 
321 4 247 1 210 2 250 1 237 1 279 4 51 1 213 2 99 2 87 1 242 1 261 2 11 1 22 2 245 1 
317 1 300 1 17 1 
317 1 300 1 17 1 
317 1 300 1 309 1 268 1 146 1 
317 1 300 1 17 1 
317 1 300 1 26 1 
317 1 300 1 26 1 
317 1 300 1 26 1 
317 1 300 1 
322 1 71 1 
363 1 113 1 114 4 324 8 48 2 238 2 61 1 230 4 5 2 376 1 51 1 256 1 149 4 56 1 292 1 360 1 121 2 88 3 311 1 58 2 
148 1 363 1 113 1 114 3 149 3 256 1 56 1 360 1 324 6 61 1 88 2 5 2 376 1 51 1 
363 1 114 2 324 4 48 1 238 1 97 1 230 2 5 1 98 1 149 2 121 1 138 1 360 1 259 1 88 2 58 1 311 1 
82 1 363 1 114 4 324 7 97 1 333 2 5 1 98 1 378 1 149 3 138 1 360 1 88 2 311 1 243 1 
235 1 363 3 324 23 97 2 48 2 238 2 5 5 345 1 51 1 98 2 56 2 292 2 138 2 311 4 58 2 82 1 113 1 114 12 61 2 333 2 230 4 376 1 378 2 256 1 149 11 360 3 121 2 172 1 88 9 
114 1 324 1 333 1 
378 1 149 1 324 1 
83 1 363 1 114 3 324 6 238 1 48 1 97 1 230 2 5 2 98 1 149 3 121 1 138 1 360 1 259 1 88 3 58 1 311 1 
363 2 324 12 238 1 48 1 97 2 5 1 98 2 181 1 100 1 138 2 311 1 58 1 243 1 114 6 333 1 230 2 378 1 38 1 200 1 318 1 255 1 149 6 121 1 360 2 88 2 
363 1 114 3 324 6 61 1 5 1 256 1 149 3 56 1 360 1 88 2 311 1 
113 1 114 2 324 3 61 1 48 1 238 1 230 2 5 1 345 1 376 1 149 1 56 1 292 1 121 1 88 2 311 1 58 1 
363 2 114 5 324 10 238 1 48 1 35 1 61 2 230 2 5 3 255 1 56 2 149 5 256 1 121 1 360 2 88 5 58 1 311 2 
324 2 48 1 238 1 230 2 255 1 149 2 121 1 138 1 360 1 88 1 58 1 311 1 
363 1 114 2 324 4 48 1 238 1 97 1 230 2 5 1 98 1 255 1 149 2 121 1 138 1 360 1 88 2 58 1 311 1 
364 1 114 2 324 3 48 3 238 3 61 1 230 6 345 1 5 1 255 1 56 1 149 1 292 1 121 3 88 2 58 3 311 1 
363 5 46 1 364 1 324 34 238 5 48 5 97 3 345 1 5 7 51 1 98 3 56 3 292 2 185 1 138 3 58 5 311 5 243 1 82 1 113 1 114 18 61 3 333 4 230 10 376 1 378 3 358 1 255 1 256 2 149 16 121 5 360 5 259 1 88 12 
363 1 324 8 238 1 48 1 5 2 51 1 56 1 58 1 243 1 113 1 114 4 61 1 333 1 230 2 376 1 378 1 318 1 255 1 149 4 256 1 360 1 121 1 88 2 
363 1 324 11 238 2 48 2 97 1 5 2 51 1 56 1 138 1 58 2 311 1 243 1 82 1 113 1 114 5 61 1 333 2 230 4 376 1 378 1 318 1 255 1 256 1 149 6 121 2 360 2 259 1 88 3 
363 3 324 19 238 3 48 3 97 2 5 3 51 1 98 2 181 1 100 1 56 1 292 1 138 2 311 1 58 3 243 1 113 1 114 10 61 1 333 1 230 6 376 1 378 1 38 1 200 1 318 1 255 1 256 1 149 9 121 3 360 3 259 1 88 4 
363 2 324 17 238 3 48 3 97 2 5 3 51 1 98 1 181 1 100 1 56 1 292 1 138 2 311 2 58 3 243 1 113 1 114 7 61 1 333 1 230 6 376 1 378 1 38 1 200 1 318 1 255 1 256 1 149 10 121 3 360 3 259 1 88 5 
363 1 324 8 238 1 48 1 5 2 51 1 56 1 58 1 243 1 113 1 114 4 61 1 333 1 230 2 376 1 378 1 318 1 255 1 149 4 256 1 360 1 121 1 88 2 
363 2 324 12 238 1 48 1 97 2 5 1 98 2 181 1 100 1 138 2 311 1 58 1 243 1 114 6 333 1 230 2 378 1 38 1 200 1 318 1 255 1 149 6 121 1 360 2 88 2 
363 2 324 18 238 4 48 4 97 2 5 3 51 1 98 1 181 1 100 1 56 1 292 2 138 2 311 2 58 4 243 1 113 1 114 8 61 1 333 1 230 8 376 1 378 1 38 1 200 1 318 1 255 1 256 1 149 10 121 4 360 3 259 1 88 5 
363 2 364 1 324 16 238 4 48 4 97 3 5 3 98 2 181 1 100 1 292 2 138 3 311 3 58 4 243 1 114 7 333 1 230 8 378 1 38 1 200 1 318 1 255 1 149 9 121 4 360 3 88 6 
363 1 113 2 114 4 324 7 61 3 376 1 5 3 56 3 256 1 149 3 360 1 88 6 311 3 
363 2 364 1 324 18 238 4 48 4 97 2 5 3 51 1 98 1 181 1 100 1 56 1 292 2 138 2 311 1 58 4 243 1 113 1 114 8 61 1 333 1 230 8 376 1 378 1 38 1 200 1 318 1 255 1 256 1 149 10 121 4 360 3 88 4 
351 1 109 1 70 1 229 1 165 1 119 1 173 1 140 1 205 1 
107 1 351 1 109 1 70 1 161 1 229 1 4 1 165 1 233 1 119 1 77 1 173 1 140 1 205 1 
341 1 182 1 148 1 271 1 69 1 75 1 177 1 336 1 169 1 105 1 349 1 
341 1 59 1 109 1 69 1 177 1 70 1 266 1 169 1 229 2 280 1 289 1 165 2 182 1 271 1 214 1 86 1 336 1 105 1 
341 1 126 1 69 2 177 1 70 1 266 1 289 2 165 2 214 1 182 3 29 1 105 1 139 1 351 1 109 2 59 1 169 1 276 1 229 2 280 1 86 2 336 1 43 1 
341 1 126 1 69 2 177 2 70 1 266 1 307 1 289 2 165 2 134 1 182 3 29 1 105 2 139 1 351 1 109 2 59 1 169 1 276 1 229 2 280 1 86 2 336 2 43 1 
246 1 341 1 126 1 69 1 178 2 177 3 276 1 169 1 279 1 269 1 307 1 271 1 182 4 86 1 19 1 102 1 43 1 219 2 336 3 105 3 331 1 22 1 295 1 
246 1 341 1 126 1 69 1 178 2 177 3 276 1 169 1 279 1 269 1 307 1 271 1 182 4 86 1 19 1 43 1 219 2 336 3 105 3 22 1 339 1 295 1 
341 1 177 1 336 1 169 1 105 1 296 1 
341 3 288 1 370 1 69 2 177 7 374 1 169 2 132 1 62 1 271 2 182 3 54 1 86 1 336 7 30 1 105 6 122 1 66 1 141 1 296 1 340 1 
341 1 47 1 266 1 95 1 48 2 5 2 51 1 6 1 165 2 214 1 54 1 348 1 56 1 105 1 58 2 108 1 111 1 109 1 59 1 113 1 114 3 169 1 229 2 61 1 280 1 230 4 63 1 121 2 360 1 363 1 69 1 177 1 70 2 324 6 238 2 326 1 289 1 182 1 145 2 376 1 86 1 199 1 256 1 149 3 336 1 88 2 155 2 
24 1 178 3 177 1 237 2 269 1 99 1 271 1 182 2 347 1 219 3 242 2 329 1 105 1 186 1 11 1 295 1 142 1 246 1 112 1 247 2 279 1 118 1 19 2 336 1 150 1 87 2 22 1 339 1 
341 2 370 1 69 1 177 2 169 1 269 1 254 1 182 2 54 1 86 1 336 2 105 2 296 1 
341 1 69 1 177 4 169 1 307 1 231 1 271 1 182 1 54 1 75 1 336 4 105 4 349 1 
341 2 126 1 69 1 177 2 305 1 169 1 182 1 86 1 336 2 105 2 122 1 66 1 273 1 175 1 
341 1 362 1 271 1 177 1 365 1 336 1 169 1 105 1 308 1 315 1 
341 1 182 1 288 1 54 1 69 1 177 2 374 1 336 2 169 1 294 1 105 2 
341 2 126 1 288 1 69 2 177 5 169 2 231 1 271 1 182 3 54 1 75 1 336 5 105 4 30 1 349 1 340 1 
341 2 126 1 288 1 69 2 177 5 313 1 169 2 231 1 271 1 182 3 54 1 75 1 336 5 105 4 30 1 349 1 
341 1 59 1 109 1 69 1 177 1 70 1 266 1 169 1 229 2 280 1 289 1 165 2 182 1 271 1 134 1 86 1 336 1 105 1 
341 2 126 1 370 1 69 1 177 1 169 1 182 1 86 1 336 1 105 1 122 1 66 1 141 1 
165 1 379 1 241 1 109 1 101 1 229 1 366 1 78 1 312 1 
207 1 241 1 89 1 
13 1 241 1 101 1 70 1 366 1 
246 1 13 2 207 1 351 1 332 1 178 2 70 1 60 1 279 1 366 2 241 1 101 2 29 1 219 2 139 1 89 1 303 1 22 1 142 1 
148 1 218 1 74 1 55 1 
218 1 74 1 55 1 297 1 166 1 338 1 274 1 
41 1 251 1 166 1 
297 1 369 1 37 1 73 1 335 2 218 1 55 1 74 1 338 3 166 3 274 1 92 1 
218 1 170 1 74 1 55 1 297 1 166 2 338 2 221 1 274 1 
14 1 127 1 218 1 365 1 306 1 297 1 166 1 338 1 308 1 274 1 37 1 
218 1 74 1 297 1 166 1 338 1 274 1 37 1 
74 2 55 1 297 1 166 1 338 1 274 1 37 1 
157 1 297 2 37 1 52 1 218 1 74 1 202 1 338 2 166 2 274 2 
14 1 248 1 297 1 37 1 170 2 218 2 74 1 55 1 120 1 338 3 166 3 274 1 80 1 
365 2 249 1 306 1 297 1 308 1 315 1 37 1 232 1 218 1 170 1 74 1 55 1 338 2 166 2 274 1 
14 1 248 1 297 2 37 1 170 2 218 2 74 1 55 1 338 4 166 4 221 1 274 2 12 1 
218 1 74 1 55 1 297 1 166 1 338 1 274 1 37 1 
14 1 248 1 297 1 73 1 335 1 170 2 218 3 74 2 55 2 338 4 166 4 79 1 92 1 274 1 
297 1 212 1 37 1 7 1 218 1 170 1 74 1 55 1 338 2 166 2 21 1 274 1 
265 1 297 1 37 1 73 2 335 2 218 1 55 1 74 1 338 3 166 3 92 1 274 1 
272 2 218 2 103 1 32 1 
297 1 166 1 338 1 223 1 274 1 37 1 
218 1 170 1 74 1 55 1 297 1 166 2 338 2 80 1 274 1 37 1 
180 1 
218 1 74 1 55 1 297 1 166 1 338 1 274 1 37 1 
297 1 37 1 335 1 170 1 218 1 55 1 74 1 338 3 166 3 274 1 80 1 
14 1 218 1 248 1 79 1 
218 1 74 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (308,348) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 110 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 110 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 198 1 143 1 73 3 120 2 238 1 82 1 324 2 295 2 282 1 230 1 344 3 186 1 
31 2 198 1 361 2 130 1 316 1 73 9 290 2 272 1 82 1 18 1 249 1 324 2 295 5 230 1 344 9 186 3 112 2 252 1 115 1 143 1 255 1 237 2 120 2 277 1 238 4 65 1 124 1 282 6 
31 2 198 1 361 2 130 1 316 1 73 9 290 2 272 1 82 1 18 1 249 1 324 2 295 5 230 1 344 9 186 3 112 2 252 1 115 1 143 1 255 1 237 2 120 2 277 1 238 4 65 1 124 1 282 6 
31 2 198 1 361 2 130 1 316 1 73 10 290 2 272 1 82 1 18 1 249 1 324 2 295 6 230 1 344 10 186 4 112 2 252 1 115 1 143 1 255 1 237 2 120 2 277 1 238 5 65 1 124 1 282 7 
31 2 198 1 361 1 130 1 316 1 73 7 290 2 272 1 82 1 18 1 324 2 295 4 230 1 344 7 186 2 112 2 252 1 115 1 143 1 255 1 237 2 120 2 277 1 238 3 65 1 124 1 282 4 
31 1 198 1 361 2 130 1 143 1 237 1 73 4 290 1 120 1 277 1 238 2 249 1 324 1 282 3 295 3 230 1 186 1 344 4 
126 1 112 1 31 1 198 1 345 1 115 1 255 1 143 1 245 1 73 2 290 1 120 1 295 1 324 1 230 1 344 2 
31 1 112 1 198 1 361 2 130 1 362 1 143 1 237 1 299 1 73 9 290 1 120 2 277 1 238 4 65 1 124 1 82 1 249 1 295 5 324 2 282 7 230 1 344 9 186 3 
31 1 112 1 198 1 361 2 130 1 362 1 143 1 237 1 299 1 73 9 290 1 120 2 277 1 238 4 65 1 124 1 82 1 249 1 295 5 324 2 282 7 230 1 344 9 186 3 
53 1 346 1 336 1 33 1 329 1 275 1 163 1 56 1 132 1 220 1 7 1 80 1 27 1 370 1 
269 1 
269 1 44 1 33 2 47 1 132 2 56 1 165 1 20 1 
327 1 33 5 116 2 188 1 212 1 365 1 56 2 132 5 341 1 191 1 133 2 165 1 269 1 302 1 44 2 180 2 207 1 20 1 381 1 
269 1 20 1 110 1 
269 1 200 2 17 1 
336 2 346 2 7 2 27 2 329 2 163 2 19 1 370 1 
336 3 69 1 358 1 170 1 337 1 339 1 286 1 363 1 364 1 12 2 176 1 14 1 51 2 139 1 323 1 19 1 370 1 346 2 373 1 142 1 234 2 118 1 329 2 55 1 163 2 24 1 58 1 193 1 351 1 63 2 7 3 27 2 334 1 335 1 197 1 28 2 147 1 
336 1 346 1 53 1 220 1 7 1 27 1 329 1 275 1 163 1 370 1 
127 1 336 1 274 1 33 1 132 1 105 1 269 1 158 1 7 1 220 1 27 1 294 1 20 1 231 1 
127 1 346 1 336 1 274 1 33 2 329 1 163 1 132 2 105 1 269 1 7 1 220 1 27 1 20 1 231 1 
129 1 44 1 33 1 132 1 56 1 
269 1 43 1 44 1 33 2 132 2 56 1 165 1 20 1 
44 1 33 1 132 1 
336 2 128 1 346 1 329 1 163 1 289 1 7 2 27 2 19 2 
75 1 308 1 152 1 
336 1 373 1 337 1 118 1 286 1 363 1 58 1 176 1 351 1 146 1 63 1 7 1 51 1 139 1 19 1 28 1 
19 1 110 1 
13 1 336 3 346 3 7 3 329 1 27 3 163 3 19 1 
336 1 346 1 220 1 7 1 27 1 275 1 163 1 
336 1 346 1 128 1 220 1 7 1 27 1 329 1 163 1 289 1 
127 1 128 1 336 4 33 1 337 1 244 1 339 1 363 1 286 1 12 1 132 1 176 1 151 1 105 1 13 1 14 1 139 1 51 1 323 1 19 1 370 1 52 1 231 1 346 3 373 1 274 1 142 1 234 2 118 1 329 2 55 1 163 3 24 1 58 1 193 1 351 1 63 1 7 4 220 1 27 3 334 1 197 1 28 1 147 1 
13 1 336 2 346 1 7 2 27 2 5 1 163 1 19 1 294 1 
127 1 128 1 346 3 336 3 33 1 274 1 244 1 329 1 163 3 132 1 151 1 13 2 105 1 269 1 220 1 7 3 27 3 231 1 109 1 
13 1 308 1 336 2 346 2 128 1 7 2 27 2 329 1 163 2 152 1 
336 1 373 1 337 1 118 1 286 1 363 1 58 1 176 1 351 1 63 1 7 1 51 1 139 1 19 1 28 1 
336 1 373 1 337 1 150 1 118 1 363 1 58 1 176 1 351 1 63 1 194 1 7 1 51 1 19 1 28 1 
301 1 348 1 
336 1 346 1 274 1 220 1 7 1 27 1 3 1 163 1 
308 1 346 1 336 2 373 1 337 1 244 1 118 1 363 1 163 1 286 1 58 1 176 1 13 1 351 1 63 1 7 2 139 1 27 1 51 1 28 1 
346 4 336 5 128 1 244 1 329 1 5 1 163 4 13 2 332 1 7 5 27 5 280 1 294 1 19 1 
336 2 346 2 220 1 7 2 27 2 3 1 275 1 163 2 
22 1 321 1 357 1 
258 1 136 1 219 1 22 2 371 1 357 2 
22 1 357 1 
22 1 357 1 
136 1 219 1 
136 1 219 1 
136 1 219 1 
22 1 261 1 357 1 
22 1 261 1 357 1 
22 1 261 1 357 1 
122 1 22 1 357 1 
122 1 22 1 357 1 
122 1 22 1 357 1 
359 2 33 2 22 2 328 2 340 1 132 2 166 1 269 1 330 1 41 2 45 1 46 1 218 1 107 3 303 1 86 2 371 1 357 2 380 2 
100 1 336 2 359 1 33 1 36 1 132 1 174 1 41 1 107 1 181 1 321 1 86 1 19 1 346 2 141 1 22 1 328 1 163 2 189 1 93 1 218 1 7 2 27 2 357 1 
211 1 2 2 237 1 245 1 290 2 
31 1 237 1 290 1 
31 1 245 1 290 1 
211 1 79 1 2 1 237 2 245 1 290 3 
211 1 88 1 2 1 237 1 245 1 290 2 
169 2 200 3 199 1 33 5 71 1 37 2 287 1 365 2 132 5 133 1 228 1 135 1 269 2 106 1 44 1 181 1 180 1 138 1 17 1 20 1 141 1 116 1 188 3 212 1 56 4 214 1 165 1 93 1 94 1 6 2 66 1 305 1 
169 6 200 9 199 3 129 5 70 1 33 9 35 1 287 3 365 6 132 9 133 2 228 3 269 5 44 6 180 2 138 3 17 3 85 5 20 1 116 2 188 8 236 1 212 1 215 1 56 7 190 1 214 1 191 1 93 4 165 1 94 3 6 6 66 2 10 1 305 2 
169 2 199 1 200 4 33 3 71 1 37 1 287 1 132 3 365 2 133 1 228 1 269 3 106 1 180 1 138 1 17 2 20 1 116 1 188 3 56 2 191 1 93 1 94 1 6 2 66 1 305 1 
169 4 200 7 199 2 70 1 33 4 71 1 37 2 287 2 132 4 365 4 133 1 228 2 269 4 106 1 180 1 138 2 17 3 20 1 116 1 188 5 215 1 56 3 191 1 93 2 94 2 6 4 66 1 10 1 305 1 
283 1 
267 1 176 1 110 1 
343 1 176 1 
118 1 176 1 
76 1 337 1 118 1 320 1 267 2 176 3 
337 1 118 1 176 1 
259 1 176 1 
99 1 199 2 358 5 287 2 339 4 12 9 177 2 15 1 205 2 50 3 87 1 4 1 254 4 91 1 95 1 195 1 379 1 98 1 304 1 
199 5 358 18 265 1 338 1 339 17 287 5 12 35 228 3 177 3 15 1 14 1 205 3 78 3 138 3 50 6 108 1 323 1 87 7 111 1 372 1 4 1 254 13 234 2 91 1 55 1 349 4 94 3 25 1 95 2 195 2 379 1 221 1 98 1 304 2 197 1 
199 2 358 6 173 1 287 2 339 5 12 11 177 2 15 1 14 2 205 2 50 4 108 1 323 2 87 2 254 6 234 4 91 1 55 2 95 1 195 1 8 1 379 1 197 2 304 1 98 1 
199 2 358 5 287 2 339 4 12 9 177 2 15 1 205 2 50 3 87 1 4 1 254 4 91 1 95 1 195 1 379 1 98 1 304 1 
199 2 358 5 287 2 339 4 12 9 177 2 15 1 205 2 50 3 87 3 4 1 254 6 91 1 95 1 195 1 379 1 98 1 304 1 
112 2 32 2 113 1 373 1 54 1 172 2 118 1 246 1 73 1 58 1 176 1 268 1 120 1 351 1 77 1 63 1 368 1 182 2 51 1 324 1 28 1 242 1 344 1 
31 1 32 1 67 1 103 1 172 1 245 1 73 1 290 2 182 1 293 1 79 1 51 1 324 1 344 1 112 1 143 1 237 1 58 1 120 1 278 1 351 1 63 1 333 1 96 1 281 1 28 1 
31 1 198 1 32 1 67 1 103 1 172 1 245 1 73 2 290 2 155 1 182 1 79 1 51 1 295 1 324 1 230 1 344 2 112 1 143 1 237 1 58 1 120 1 278 1 351 1 63 1 333 1 96 1 281 1 282 1 28 1 
31 1 198 1 32 1 67 1 103 1 172 1 245 1 73 3 290 2 182 1 293 1 79 1 51 1 295 1 324 1 230 1 344 3 112 1 237 1 58 1 120 1 278 1 351 1 63 1 331 1 96 1 281 1 28 1 282 2 242 1 
31 1 198 1 32 1 67 1 172 1 245 1 73 2 290 2 182 1 293 1 79 1 51 1 295 1 230 1 344 2 112 1 237 1 58 1 278 1 351 1 63 1 331 1 281 1 28 1 282 2 
248 1 
148 2 200 2 336 1 33 5 38 1 39 1 105 1 292 2 44 6 158 1 51 2 342 1 294 1 162 1 116 1 118 1 212 1 165 3 58 1 60 2 351 1 63 2 7 1 220 1 167 2 354 1 305 1 306 1 127 1 309 2 72 2 365 2 132 5 133 1 74 1 268 1 176 1 269 2 178 1 77 1 270 4 180 1 17 2 20 1 231 1 326 1 373 2 274 1 233 2 90 1 188 2 145 1 196 1 27 1 28 2 
127 1 336 1 33 3 72 1 132 3 74 1 105 1 270 2 44 2 158 1 47 1 294 1 231 1 326 1 274 1 162 1 165 1 145 1 7 1 220 1 196 1 27 1 
127 1 336 1 33 3 132 3 74 1 105 1 269 1 270 3 44 1 158 1 47 1 294 1 231 1 20 1 326 1 274 1 162 1 165 1 145 1 60 1 7 1 220 1 196 1 27 1 
127 1 336 1 33 3 72 1 132 3 74 1 105 1 269 1 270 3 44 2 47 1 158 1 294 1 231 1 20 1 326 1 274 1 162 1 233 1 165 1 145 1 60 1 7 1 220 1 196 1 27 1 
148 2 336 1 101 1 33 5 38 1 1 1 105 1 291 1 292 2 44 7 47 1 158 1 294 1 162 1 116 1 212 1 165 3 60 4 220 1 7 1 354 1 167 2 127 1 309 2 72 4 132 5 365 1 133 1 74 1 269 5 270 6 180 1 17 2 325 1 231 1 20 5 326 1 274 1 21 1 233 4 188 1 145 1 196 1 27 1 
148 2 336 1 200 2 33 4 38 1 105 1 292 2 44 4 158 1 294 1 162 1 116 1 212 1 165 2 60 2 220 1 7 1 354 1 167 2 127 1 309 2 72 2 132 4 365 1 133 1 74 1 269 2 270 4 180 1 17 2 231 1 20 1 326 1 274 1 233 2 188 1 90 1 145 1 196 1 27 1 
148 2 127 1 101 1 336 1 33 4 309 2 38 1 72 2 365 1 132 4 133 1 74 1 105 1 291 1 269 1 292 2 270 4 44 4 180 1 158 1 17 2 294 1 20 1 231 1 326 1 274 1 21 1 233 2 162 1 116 1 188 1 212 1 165 2 60 2 145 1 7 1 220 1 196 1 27 1 167 2 354 1 
148 2 127 1 101 1 336 1 33 4 309 2 38 1 72 2 365 1 132 4 133 1 74 1 105 1 291 1 269 1 292 2 270 4 44 4 180 1 158 1 17 2 294 1 20 1 231 1 326 1 274 1 21 1 233 2 162 1 116 1 188 1 212 1 165 2 60 2 145 1 7 1 220 1 196 1 27 1 167 2 354 1 
148 2 127 1 200 2 101 1 336 1 33 4 309 2 38 1 72 2 365 1 132 4 227 1 133 1 74 1 105 1 269 1 270 4 44 4 179 2 180 1 158 1 294 1 20 1 231 1 209 1 326 1 274 1 253 1 233 2 162 1 116 1 188 1 212 1 165 2 60 2 145 1 7 1 220 1 196 1 9 2 27 1 
148 2 127 1 101 1 336 1 33 4 309 2 38 1 72 3 1 1 365 1 132 4 133 1 74 1 105 1 291 1 269 1 292 2 270 5 44 5 180 1 158 1 17 2 294 1 20 1 231 1 326 1 21 1 274 1 162 1 233 3 116 1 188 1 212 1 165 2 145 1 60 3 7 1 220 1 196 1 27 1 167 2 354 1 
148 2 127 1 101 1 336 1 33 4 309 2 38 1 72 3 1 1 365 1 132 4 133 1 74 1 105 1 291 1 269 1 292 2 270 5 44 5 180 1 158 1 17 2 294 1 20 1 231 1 326 1 21 1 274 1 162 1 233 3 116 1 188 1 212 1 165 2 145 1 60 3 7 1 220 1 196 1 27 1 167 2 354 1 
148 2 336 1 200 2 33 4 38 1 105 1 44 4 158 1 294 1 209 1 162 1 116 1 212 1 165 2 60 2 220 1 7 1 9 2 127 1 309 2 72 2 132 4 365 1 133 1 74 1 269 1 270 4 179 2 180 1 231 1 20 1 326 1 274 1 233 2 188 1 90 1 145 1 196 1 27 1 
336 1 358 1 339 1 364 1 12 2 366 1 40 1 176 3 268 1 13 1 14 1 77 1 155 1 293 1 51 8 323 1 185 1 251 1 346 1 373 2 142 1 234 2 118 2 89 1 300 1 163 1 55 1 213 1 24 1 58 2 301 1 351 2 63 7 7 1 27 1 334 1 335 2 28 8 197 1 
308 1 128 1 336 1 199 1 358 1 287 1 339 2 12 3 152 1 75 1 228 1 14 1 138 1 50 1 323 1 346 1 254 1 142 1 234 2 329 1 163 1 55 1 347 1 94 1 7 1 27 1 334 1 241 1 197 1 
301 1 110 1 
308 11 199 2 358 8 312 1 339 6 287 1 364 1 12 14 152 4 75 11 228 2 14 2 78 3 319 1 138 1 50 1 323 2 19 1 296 1 87 1 111 1 254 2 142 2 234 4 55 2 92 1 24 1 349 3 94 2 221 1 334 1 241 1 197 2 
336 2 358 1 102 1 337 1 244 1 363 1 286 1 339 1 12 2 364 1 204 1 176 1 152 1 13 1 14 1 139 1 51 1 323 1 19 1 346 1 373 1 142 1 234 2 118 1 163 1 55 1 24 1 58 1 351 1 63 1 146 1 7 2 97 1 27 1 334 1 241 1 28 1 197 1 
336 3 199 4 244 1 337 2 339 11 286 2 287 4 152 6 205 2 157 1 50 5 51 1 346 1 114 1 254 6 118 2 55 3 163 1 58 2 351 2 63 1 220 1 7 3 308 6 358 11 363 2 364 1 12 22 176 2 13 1 75 6 228 2 177 2 15 1 14 3 137 2 138 2 139 2 323 3 19 1 184 2 87 1 373 1 142 3 374 2 234 6 23 2 91 1 24 1 193 2 94 2 27 1 379 1 241 1 334 3 98 1 28 1 197 3 284 1 
301 1 
301 1 
301 1 
308 1 199 1 358 2 254 1 142 1 187 1 234 2 89 1 55 1 12 2 152 1 75 1 228 1 14 1 323 1 334 1 197 1 87 1 
308 1 254 1 142 1 234 2 89 1 55 1 287 1 339 2 12 2 152 1 75 1 14 1 138 1 50 1 323 1 334 1 197 1 161 1 
308 2 199 1 358 2 254 2 142 1 234 2 89 1 339 2 287 1 55 1 12 4 152 2 75 2 228 1 14 1 94 1 138 1 50 1 323 1 334 1 197 1 87 1 
308 2 199 1 358 2 254 2 142 1 234 2 339 2 287 1 55 1 12 4 152 2 75 2 228 1 14 1 94 1 138 1 50 1 323 1 334 1 197 1 87 1 
336 1 358 1 337 1 363 1 286 1 339 1 364 1 12 2 176 1 14 1 139 1 51 1 323 1 19 1 373 1 142 1 234 2 118 1 55 1 24 1 58 1 193 1 351 1 63 1 7 1 334 1 28 1 197 1 
336 1 358 1 337 1 150 1 363 1 339 1 364 1 12 2 176 1 14 1 48 1 51 1 323 1 19 1 373 1 142 1 234 2 118 1 55 1 24 1 58 1 351 1 63 1 194 1 7 1 334 1 28 1 197 1 
308 2 199 1 358 2 254 2 142 1 234 2 339 2 287 1 55 1 12 4 152 2 75 2 228 1 14 1 94 1 138 1 50 1 323 1 241 1 334 1 197 1 87 1 
308 2 199 1 336 1 358 2 337 1 339 2 287 1 363 1 286 1 12 4 152 2 176 1 75 2 228 1 14 1 155 1 138 1 50 1 139 1 51 1 323 1 87 1 254 2 374 1 142 1 234 2 118 1 55 1 58 1 193 1 351 1 63 1 94 1 7 1 334 1 28 1 197 1 
128 1 336 1 199 1 308 1 358 2 339 1 287 1 12 3 152 1 228 1 75 1 14 1 138 1 323 1 273 1 87 1 346 1 254 1 142 1 234 2 329 1 163 1 55 1 94 1 7 1 27 1 334 1 241 1 197 1 
285 1 68 1 223 2 199 3 358 9 0 1 339 10 287 3 12 19 317 1 228 3 14 2 78 1 138 3 50 3 323 2 87 3 297 2 111 1 254 6 234 4 55 2 349 2 94 3 376 1 8 1 377 1 221 1 197 2 30 1 
285 2 223 1 199 3 358 14 0 1 287 2 339 12 12 26 317 2 228 3 14 3 369 1 78 2 138 2 108 2 50 2 140 1 323 3 87 2 297 4 254 4 234 6 117 1 55 3 349 2 59 1 64 1 94 3 352 1 8 1 377 1 221 2 197 3 30 1 
285 1 168 1 223 1 199 4 358 17 0 1 339 19 287 4 12 36 317 2 228 4 177 1 14 3 205 1 369 1 78 3 138 4 108 1 50 4 140 1 323 3 87 4 297 4 111 1 254 8 234 6 117 1 91 1 55 3 349 4 59 1 64 1 94 4 352 1 376 1 8 1 377 1 221 3 98 1 197 3 30 1 
285 1 168 1 223 1 199 4 358 17 0 1 339 16 287 3 12 33 317 2 228 4 177 1 14 4 205 1 369 1 78 3 138 3 108 2 50 4 140 1 323 4 87 3 297 4 111 1 254 7 234 8 117 1 91 1 55 4 349 4 59 1 64 1 94 4 352 1 376 1 8 1 377 1 221 3 98 1 197 4 30 1 
285 1 223 1 199 7 358 24 0 1 312 2 339 23 287 7 12 47 317 1 228 7 177 1 14 2 205 1 369 1 78 4 138 7 108 1 50 7 140 1 323 2 87 7 297 4 111 2 254 14 234 4 117 1 91 1 55 2 349 4 59 1 64 1 94 7 352 1 8 1 377 1 221 2 98 1 197 2 30 1 
41 1 46 1 359 1 22 1 328 1 86 1 340 1 371 1 192 1 357 1 
321 1 189 1 
350 1 41 1 359 1 22 1 328 1 83 1 86 1 119 1 357 1 
33 1 359 1 22 1 328 1 340 1 132 1 269 1 330 1 41 1 45 1 46 1 218 1 107 2 303 1 86 1 371 1 357 1 380 1 
33 1 359 1 22 1 328 1 340 1 132 1 269 1 330 1 41 1 45 1 46 1 218 1 107 2 303 1 86 1 371 1 357 1 380 1 
33 1 359 1 22 1 328 1 340 1 132 1 269 1 330 1 41 1 45 1 46 1 218 1 107 2 303 1 86 1 371 1 357 1 380 1 
258 1 26 1 261 1 
258 1 26 1 261 1 
122 1 175 1 
258 1 122 1 175 1 
100 1 36 1 
100 1 336 2 33 1 359 1 36 1 132 1 174 1 41 1 107 1 181 1 321 1 81 1 86 1 19 1 141 1 346 2 22 1 328 1 189 1 163 2 56 1 93 1 303 1 7 2 27 2 380 1 357 1 
26 1 261 1 
258 1 122 1 175 1 
336 2 149 1 358 1 339 1 364 1 12 2 203 1 176 1 366 1 14 1 318 1 51 2 323 1 251 1 142 1 234 2 118 1 144 1 55 1 24 1 58 1 351 1 63 2 217 1 7 2 27 2 334 1 241 1 335 2 28 2 197 1 
262 1 373 1 172 1 118 1 246 1 58 1 176 1 268 1 351 1 63 1 77 1 51 1 183 1 28 1 
31 1 262 1 310 1 172 1 237 1 245 1 256 1 58 1 290 2 351 1 278 1 63 1 293 1 79 1 96 1 51 1 281 1 28 1 
31 1 262 1 310 1 172 1 237 1 245 1 58 1 256 1 290 2 351 1 278 1 63 2 155 1 293 1 79 1 96 1 51 2 281 1 28 2 
31 1 172 1 226 1 237 1 245 1 256 1 58 1 290 2 278 1 351 1 63 1 293 1 79 1 96 1 51 1 281 1 28 1 
49 1 
327 1 116 1 188 1 212 1 365 1 133 1 269 1 180 1 207 1 20 1 
169 5 199 2 200 10 311 1 188 5 287 2 365 5 228 2 269 5 42 2 137 1 94 2 6 5 138 2 17 5 
269 1 44 1 33 1 132 1 165 1 20 1 
33 3 39 1 365 2 132 3 133 2 176 1 268 1 178 2 77 1 44 4 180 2 51 4 210 1 373 2 116 2 118 1 188 2 212 1 276 2 191 1 58 1 165 2 351 1 63 4 279 1 356 1 28 4 306 1 305 2 
269 1 327 1 207 1 188 1 365 1 20 1 110 1 
200 1 33 1 365 1 132 1 133 1 269 2 292 1 44 1 180 1 17 1 20 1 116 1 188 1 212 1 165 1 354 1 167 1 
200 12 199 2 33 5 243 2 337 3 202 2 287 2 153 2 42 2 44 5 155 1 207 1 51 3 343 3 116 4 298 1 118 3 212 4 58 3 165 3 351 4 63 3 6 6 353 2 259 2 305 2 169 6 263 1 224 2 311 2 132 5 365 8 133 4 134 2 267 2 176 10 228 2 178 1 269 8 137 2 180 4 138 2 17 6 320 1 20 2 231 2 327 1 373 1 188 9 276 1 94 2 279 1 240 1 28 3 
169 5 200 6 199 2 33 1 311 1 287 2 132 1 365 5 133 2 228 2 178 1 269 5 42 2 369 1 44 1 78 1 180 2 138 2 17 3 140 1 20 2 116 2 117 1 188 8 212 2 165 1 349 1 59 1 64 1 94 2 6 5 221 1 222 1 29 1 305 1 
336 1 199 2 33 1 311 1 287 1 132 1 365 2 133 1 177 1 42 2 15 1 205 1 180 1 80 1 370 1 53 1 346 1 21 1 116 1 188 2 329 1 275 1 212 1 163 1 220 1 7 1 27 1 379 1 
336 3 337 1 339 1 286 1 363 1 12 1 176 1 14 1 51 1 139 1 323 1 19 1 370 1 346 2 373 1 142 1 234 2 118 1 329 2 55 1 163 2 24 1 58 1 193 1 351 1 63 1 7 3 27 2 334 1 28 1 197 1 147 1 
169 2 200 4 116 1 188 1 212 1 365 2 133 1 269 4 178 1 195 1 6 2 180 1 17 2 305 1 20 2 
46 1 359 1 360 1 36 1 86 1 
359 1 355 1 86 1 
359 1 355 1 86 1 
359 1 355 1 86 1 
359 1 86 1 208 1 
359 1 86 1 208 1 
359 1 86 1 208 1 
359 1 86 1 
22 1 357 1 
199 2 358 5 254 5 234 2 55 1 339 5 287 2 12 10 177 2 14 1 15 1 205 2 8 1 50 3 379 1 323 1 197 1 87 2 
199 1 358 2 254 1 234 2 55 1 12 2 228 1 14 1 8 1 323 1 197 1 87 1 
199 1 358 2 254 2 234 2 339 2 287 1 55 1 12 4 228 1 14 1 94 1 138 1 8 1 50 1 323 1 197 1 87 1 
358 1 254 2 234 6 339 2 55 3 12 3 177 1 14 3 205 1 206 1 376 1 8 1 108 1 50 1 323 3 197 3 87 1 
199 4 358 13 264 1 338 1 339 13 287 4 12 26 228 2 177 2 15 1 14 4 205 2 78 3 138 2 108 1 50 4 323 4 87 4 372 1 254 8 234 8 91 1 55 4 349 3 25 1 94 2 376 1 8 1 379 1 221 1 98 1 197 4 
199 2 358 5 287 2 339 5 12 10 177 2 15 1 14 1 369 1 205 2 78 1 50 3 323 1 87 1 254 4 234 2 91 1 55 1 349 1 8 1 379 1 221 1 197 1 98 1 
199 3 358 7 264 1 287 2 339 6 12 13 228 1 177 2 15 1 14 2 205 2 369 1 78 1 50 3 323 2 87 2 111 1 254 5 234 4 91 1 55 2 349 2 94 1 8 1 379 1 221 1 98 1 197 2 
199 4 358 10 264 1 339 11 287 4 12 21 228 2 177 2 15 1 14 3 205 2 369 1 78 1 138 2 50 4 108 1 140 1 323 3 87 2 254 6 234 6 117 1 91 1 55 3 349 1 59 1 64 1 94 2 8 1 379 1 221 1 98 1 197 3 
199 4 358 11 264 1 339 8 287 3 12 19 228 2 177 2 15 1 14 3 205 2 369 1 78 1 138 1 108 1 50 4 140 1 323 3 87 4 254 8 234 6 117 1 91 1 55 3 349 1 59 1 94 2 64 1 8 1 379 1 221 1 98 1 197 3 
199 2 358 5 287 2 339 5 12 10 177 2 15 1 14 1 369 1 205 2 78 1 50 3 323 1 87 1 254 4 234 2 91 1 55 1 349 1 8 1 379 1 221 1 197 1 98 1 
199 2 358 6 339 6 287 2 12 12 228 2 14 1 369 1 78 1 138 2 50 1 140 1 323 1 87 1 254 2 234 2 117 1 55 1 349 1 59 1 94 2 64 1 8 1 221 1 197 1 
199 4 358 11 264 1 339 9 287 3 12 20 228 2 177 2 15 1 14 4 205 2 369 1 78 1 138 1 50 4 108 2 140 1 323 4 87 2 254 6 234 8 117 1 91 1 55 4 349 1 59 1 64 1 94 2 8 1 379 1 221 1 98 1 197 4 
199 3 358 9 339 7 287 2 12 16 228 3 14 4 369 1 78 1 138 2 50 3 108 2 140 1 323 4 87 3 254 6 234 8 117 1 55 4 349 1 59 1 64 1 94 3 8 1 376 1 221 1 197 4 
199 1 358 2 254 6 91 1 339 3 287 1 12 5 177 3 15 1 205 3 50 3 379 1 98 1 87 3 
199 4 358 11 339 9 287 3 12 20 228 2 177 2 15 1 14 4 205 2 369 1 78 1 138 1 50 4 108 2 140 1 323 4 87 2 254 6 234 8 117 1 91 1 55 4 349 1 59 1 64 1 94 2 8 1 376 1 379 1 221 1 98 1 197 4 
199 2 358 6 339 6 287 2 12 12 177 2 14 2 15 1 205 2 108 1 50 3 323 2 87 3 254 6 234 4 91 1 55 2 379 1 98 1 197 2 
177 1 205 1 254 1 50 1 91 1 98 1 110 1 
199 1 358 2 254 2 264 1 234 2 339 2 287 1 55 1 12 4 228 1 14 1 94 1 138 1 50 1 323 1 197 1 87 1 
111 1 199 1 358 3 254 2 287 1 339 4 12 7 349 2 228 1 94 1 78 1 138 1 50 1 221 1 87 1 
199 4 358 10 312 1 287 4 339 10 12 20 228 2 177 2 15 1 14 1 205 2 78 2 319 1 138 2 50 4 108 1 323 1 87 2 111 1 254 6 234 2 91 1 55 1 349 2 94 2 379 1 98 1 197 1 
339 1 12 1 349 1 
358 1 78 1 12 1 
199 1 358 3 254 3 234 2 264 1 55 1 339 3 287 1 12 6 228 1 14 1 137 1 94 1 138 1 50 2 323 1 197 1 87 1 
199 2 358 6 339 6 287 2 12 12 228 2 14 1 369 1 78 1 138 2 50 1 140 1 323 1 87 1 254 2 234 2 117 1 55 1 349 1 59 1 94 2 64 1 8 1 221 1 197 1 
199 1 358 3 254 2 287 1 339 3 12 6 177 1 205 1 50 1 379 1 87 1 
358 1 254 2 234 2 91 1 339 2 55 1 12 3 177 1 14 1 205 1 206 1 50 1 108 1 323 1 197 1 98 1 87 1 
367 1 336 1 7 1 27 1 5 1 19 1 294 1 
307 1 336 1 5 1 315 1 57 1 367 1 239 1 7 1 27 1 19 1 294 1 11 1 
373 1 118 1 104 1 58 1 268 1 176 1 351 1 63 4 77 1 156 1 155 1 51 4 28 4 
171 1 337 1 118 1 276 1 164 1 58 1 176 1 351 2 63 2 271 1 51 2 160 1 28 2 229 1 
31 1 351 1 278 1 63 1 373 1 51 1 245 1 28 1 58 1 290 1 
118 1 58 1 366 1 176 1 351 1 63 2 318 1 155 1 293 1 51 2 28 2 
373 1 118 2 300 1 104 1 213 1 276 1 58 2 268 1 366 1 176 3 351 2 77 1 63 4 155 1 51 5 28 5 
373 1 118 2 225 1 300 1 104 1 276 1 58 2 268 1 366 1 176 3 351 2 77 1 63 4 155 1 51 5 28 5 
351 1 77 1 63 1 373 1 118 1 51 1 28 1 58 1 176 1 268 1 110 1 
346 1 336 2 373 1 337 1 118 1 363 1 163 1 58 1 176 1 13 1 351 1 63 1 7 2 27 1 51 1 139 1 19 1 28 1 
127 1 346 2 336 2 274 1 337 2 118 2 363 1 163 1 276 1 58 1 176 3 13 1 351 1 63 1 353 1 220 1 7 2 259 1 27 2 51 1 139 1 19 1 28 1 
127 1 346 2 336 2 274 1 337 2 118 2 150 1 363 1 163 1 276 1 58 1 176 3 13 1 351 1 63 2 156 1 353 1 220 1 7 2 259 1 27 2 51 2 19 1 28 2 
33 2 337 1 313 1 132 2 267 1 176 4 269 1 44 1 156 1 51 3 343 1 231 1 20 1 373 1 118 1 276 1 58 1 351 1 63 3 375 1 353 1 259 1 28 3 
373 1 33 2 224 1 337 1 118 1 132 2 276 1 267 1 58 1 176 4 269 1 351 1 63 3 44 1 156 1 353 1 259 1 51 3 343 1 28 3 20 1 231 1 
351 1 63 1 51 1 185 1 28 1 58 1 
373 2 337 1 118 2 314 1 300 1 213 1 58 2 366 1 40 1 176 3 351 3 63 6 155 1 293 1 271 1 320 1 51 7 335 1 185 1 28 7 229 1 
336 2 199 2 337 1 286 1 287 2 339 4 205 2 155 1 50 3 51 1 346 1 114 1 254 4 118 1 55 2 163 1 58 1 351 1 63 1 217 1 220 1 7 2 358 4 363 1 12 8 176 1 13 1 177 2 14 2 15 1 139 1 323 2 19 1 87 1 374 1 142 2 234 4 23 1 91 1 193 1 27 1 379 1 241 1 334 2 28 1 197 2 98 1 
33 3 243 1 224 1 202 1 365 1 132 3 133 2 134 1 267 1 176 2 269 1 44 2 180 2 207 1 51 1 343 1 20 1 231 1 327 1 373 1 116 2 188 1 212 2 56 1 165 1 63 1 279 1 28 1 
298 1 337 1 118 1 267 1 58 1 176 2 351 2 63 2 155 1 320 1 51 2 185 1 28 2 
346 1 336 2 373 1 337 1 118 1 150 1 363 1 163 1 58 1 176 1 13 1 351 1 63 1 7 2 27 1 51 1 19 1 28 1 
337 1 118 1 314 1 276 1 58 1 176 1 351 2 63 1 271 1 320 1 51 1 28 1 229 1 
125 1 336 1 149 1 7 1 27 1 144 1 84 1 266 1 203 1 
159 1 84 1 288 1 
125 1 378 1 84 1 266 1 19 1 
125 2 127 1 274 1 33 2 266 2 56 1 132 2 288 1 151 1 257 1 105 1 269 1 220 1 159 1 378 2 84 1 19 1 20 1 231 1 
120 1 198 1 143 1 295 1 73 1 324 1 230 1 344 1 
198 2 232 1 34 1 255 1 73 4 120 1 238 1 154 1 282 2 324 1 295 3 230 2 344 4 186 1 
198 1 143 1 299 1 73 2 120 1 216 1 123 1 295 1 324 1 282 1 230 1 344 2 
198 1 34 1 232 2 143 1 131 1 255 2 73 3 120 1 295 1 324 1 230 1 344 3 
247 1 201 2 295 2 260 1 
61 1 120 1 143 1 73 1 324 1 344 1 
120 1 198 1 65 1 143 1 295 1 282 1 73 2 324 1 230 1 344 2 
16 1 
120 1 198 1 143 1 295 1 73 1 324 1 230 1 344 1 
198 1 295 1 230 1 110 1 
120 1 198 1 295 1 73 1 324 1 230 1 344 1 
112 1 32 1 73 1 
198 1 34 1 232 1 143 1 255 2 73 3 120 1 250 1 295 1 324 1 230 1 344 3 
120 1 198 1 361 1 295 1 282 1 73 2 324 1 230 1 344 2 
31 1 130 1 143 1 237 1 73 1 290 1 120 1 238 1 324 1 295 1 344 1 
120 1 143 1 295 1 73 1 324 1 230 1 344 1 
120 1 198 1 143 1 73 1 324 1 230 2 344 1 
143 1 235 1 73 2 120 2 62 1 121 1 295 1 324 2 230 1 344 2 
198 1 143 1 73 3 120 1 238 1 65 1 124 1 324 1 282 2 295 2 230 1 344 3 186 1 
31 1 198 1 143 1 245 1 237 1 73 2 290 2 120 1 79 1 322 1 295 1 324 1 282 1 230 1 344 2 
198 1 361 1 143 1 73 4 120 2 238 1 249 1 324 2 282 2 295 2 230 1 344 4 186 1 
198 1 143 1 255 1 73 3 120 1 65 1 282 1 324 1 295 1 230 1 344 3 
238 1 154 1 295 1 186 1 
295 1 230 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 11 (65,205,267) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 11 323 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 11 323 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 11 (65,205,267) 188 344 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 11 323 48 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 11 323 48 101 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 217 2 172 1 111 1 132 5 198 2 7 2 199 9 53 1 293 1 279 1 141 4 296 6 225 9 75 1 158 1 160 1 34 2 35 1 232 3 303 2 329 1 331 1 264 1 44 1 124 2 21 2 63 1 
240 1 217 2 172 1 111 1 132 5 198 2 7 2 199 9 53 1 293 1 279 1 141 4 296 6 225 9 75 1 158 1 160 1 34 2 35 1 232 3 303 2 329 1 331 1 264 1 44 1 124 2 21 2 63 1 
240 1 217 2 172 1 111 1 132 6 198 2 7 2 199 10 53 1 293 1 279 1 141 5 296 7 225 10 75 1 158 1 160 1 34 2 35 1 232 4 303 2 329 1 331 1 264 1 44 1 124 2 21 2 63 1 
240 1 217 2 172 1 111 1 132 4 198 2 7 2 199 7 53 1 293 1 279 1 141 3 296 4 225 7 75 1 158 1 160 1 34 2 232 2 303 1 329 1 331 1 264 1 44 1 124 2 21 2 63 1 
158 1 34 1 35 1 172 1 111 1 232 1 132 3 198 1 303 2 7 1 199 4 293 1 44 1 21 1 124 1 296 3 141 2 225 4 
226 1 158 1 181 1 299 1 217 1 34 1 111 1 132 1 198 1 199 2 53 1 293 1 124 1 21 1 63 1 225 2 
158 1 217 1 34 2 111 1 232 1 132 2 198 2 199 3 293 1 279 1 141 1 296 1 225 3 
217 1 131 1 172 1 111 1 132 5 198 2 7 1 199 9 293 1 279 1 141 4 296 7 225 9 158 1 160 1 34 2 35 1 232 3 303 2 331 1 285 1 44 1 124 1 21 1 
217 1 131 1 172 1 111 1 132 5 198 2 7 1 199 9 293 1 279 1 141 4 296 7 225 9 158 1 160 1 34 2 35 1 232 3 303 2 331 1 285 1 44 1 124 1 21 1 
319 1 47 1 309 1 
177 1 185 2 309 1 
61 1 161 2 223 2 17 2 192 2 290 1 239 2 275 2 
313 1 1 1 214 1 241 1 243 2 219 1 27 1 245 1 275 2 133 1 28 1 134 1 91 2 10 1 223 2 137 1 140 2 97 1 295 1 282 1 32 1 227 1 14 1 161 3 121 2 228 1 17 2 234 1 306 1 61 1 105 2 167 1 192 3 290 1 239 2 85 1 213 1 
263 1 61 1 161 1 129 1 223 1 17 1 192 1 239 1 275 1 109 1 
11 1 65 1 
267 2 351 1 161 1 129 1 17 1 275 1 319 1 262 1 135 1 103 2 223 1 309 1 192 1 239 1 205 1 
267 1 236 1 103 1 130 1 42 1 
319 1 267 2 149 1 236 1 103 2 71 1 309 1 42 1 
267 1 103 1 42 1 
267 1 161 1 129 1 17 1 275 1 236 1 356 1 263 1 103 1 61 1 223 1 192 1 239 1 109 1 
309 1 
319 1 267 2 149 1 236 1 103 2 309 1 42 1 222 1 
267 5 169 2 98 1 273 1 231 1 88 2 18 1 332 1 319 1 39 2 200 1 165 1 149 1 236 2 103 5 250 1 288 1 309 1 42 2 
47 1 290 1 
25 1 161 2 17 1 275 1 79 1 223 1 192 2 290 2 239 2 
94 1 354 1 326 1 
214 1 1 1 32 1 227 1 183 1 161 1 243 1 121 1 228 1 306 1 91 1 192 1 290 1 295 1 97 1 85 1 
1 1 214 1 32 1 227 1 228 1 161 2 243 1 121 1 17 1 326 1 209 1 306 1 91 1 223 1 95 1 192 2 97 1 295 1 85 1 239 1 
128 1 25 1 161 4 323 1 17 4 275 1 318 1 209 2 11 1 223 4 95 1 192 4 290 1 239 4 
195 1 263 1 161 2 129 1 223 2 17 2 192 2 239 2 
161 3 223 3 17 3 192 3 290 1 275 1 239 3 209 1 
263 1 161 1 129 1 223 1 17 1 192 1 239 1 
25 1 161 1 129 1 223 1 17 1 192 1 239 1 275 1 79 1 
313 1 1 1 267 1 214 1 241 1 25 1 243 1 171 1 129 1 219 1 27 1 342 1 245 1 275 2 28 1 91 1 135 1 10 1 223 3 95 1 140 1 97 1 295 1 205 1 351 1 32 1 227 1 228 1 161 4 121 1 17 3 234 1 306 1 209 1 262 1 103 1 61 1 105 2 167 1 192 4 290 1 85 1 239 3 213 1 
161 1 11 1 223 1 323 1 17 1 192 1 239 1 209 1 
267 1 351 1 25 1 161 3 129 1 171 1 17 3 275 1 209 2 135 1 262 1 103 1 223 3 309 1 95 1 192 3 239 3 205 1 119 1 
25 1 161 2 354 1 17 2 326 1 275 1 209 1 223 2 192 2 239 2 
214 1 1 1 227 1 32 1 161 1 243 1 121 1 228 1 306 1 91 1 192 1 290 1 295 1 97 1 85 1 
214 1 1 1 227 1 32 1 161 1 243 1 121 1 228 1 68 1 91 1 29 1 192 1 290 1 97 1 85 1 
313 1 242 1 219 1 27 2 245 1 176 1 10 1 137 2 94 2 73 1 140 4 13 1 180 1 57 1 348 1 145 1 354 2 326 2 258 1 283 1 334 1 105 2 167 1 213 1 
262 1 195 1 161 1 129 1 223 1 17 1 192 1 239 1 
320 1 333 1 
320 1 333 1 
45 1 311 1 
45 1 311 1 
45 1 311 1 
320 1 40 1 333 1 
320 1 40 1 333 1 
286 1 320 1 333 1 
210 1 320 2 5 1 45 1 311 1 333 2 
320 1 40 1 333 1 
320 1 204 1 333 1 
320 1 204 1 333 1 
320 1 204 1 333 1 
0 1 267 1 196 1 220 1 244 1 274 1 52 1 112 1 320 1 223 2 138 1 117 1 118 1 161 2 17 2 102 1 37 1 333 1 286 1 103 1 107 1 192 2 290 1 239 2 
0 2 267 2 67 1 196 2 4 2 256 1 5 1 52 2 274 2 102 1 333 2 320 2 308 1 103 2 309 1 117 3 281 1 358 1 108 1 
7 1 21 1 124 1 
181 1 21 1 124 1 
7 2 181 1 335 1 201 1 302 1 124 3 
7 1 181 1 201 1 302 1 255 1 124 2 
7 1 181 1 201 2 302 1 124 2 
267 5 169 1 268 2 156 1 221 1 220 1 88 1 112 1 319 1 176 1 200 3 177 1 250 2 253 1 352 1 185 3 145 1 258 1 18 1 260 2 39 1 334 1 148 1 149 1 236 4 103 5 237 1 42 1 309 2 107 1 83 2 151 1 
127 1 267 9 169 2 130 5 292 1 273 1 156 1 220 4 88 2 319 1 176 3 200 8 177 3 30 1 250 6 120 1 253 2 352 2 185 9 15 5 145 3 258 3 18 1 260 6 39 2 334 3 148 3 236 7 149 1 103 9 104 1 42 6 309 5 83 6 310 1 
267 3 169 1 268 1 273 1 221 1 220 1 88 1 319 1 176 1 200 3 177 2 250 2 253 1 352 1 185 4 145 1 258 1 260 2 39 1 148 1 334 1 236 2 103 3 309 3 83 2 151 1 
267 4 169 1 268 2 273 1 221 1 220 2 88 1 319 1 176 2 200 5 177 3 250 4 120 1 253 1 352 1 185 7 145 2 258 2 260 4 39 1 148 2 334 2 236 3 103 4 104 1 309 4 83 4 151 1 310 1 
235 1 32 1 47 1 
32 1 317 1 
36 1 
1 1 32 1 97 1 
32 1 314 1 
32 1 97 1 
1 1 235 2 32 3 41 1 270 1 97 1 
27 3 163 2 334 1 175 1 276 1 176 1 116 1 248 1 55 1 137 4 62 1 359 1 140 7 193 1 152 1 180 2 348 3 
27 3 163 2 334 1 175 1 276 1 176 1 116 1 248 1 55 1 137 4 62 1 359 1 140 7 193 1 152 1 180 2 348 3 
142 1 27 3 163 2 334 1 175 1 276 1 176 1 116 1 248 1 55 1 137 4 62 1 359 1 140 7 193 1 152 1 180 2 348 3 
313 1 168 1 216 4 272 3 27 15 245 1 175 2 276 2 176 4 116 1 54 1 248 2 10 1 55 1 137 16 139 1 140 31 180 5 348 10 229 1 145 3 163 3 258 3 328 1 284 1 148 3 334 4 105 2 62 5 84 1 359 2 193 1 152 1 213 1 
313 2 168 1 27 4 197 1 245 2 276 1 175 1 176 1 92 1 10 2 248 1 55 1 137 5 140 9 180 3 348 4 163 2 334 1 105 4 62 1 359 1 193 1 152 1 213 2 
243 1 217 1 218 1 111 1 132 1 198 1 7 1 91 1 199 2 321 1 293 1 278 1 296 1 225 2 158 1 181 1 121 1 228 1 34 1 307 1 335 1 106 1 21 1 124 2 312 1 64 1 85 1 194 1 361 1 125 1 
243 1 3 1 217 1 218 1 111 1 132 1 198 1 7 1 91 1 199 3 321 1 251 1 278 1 296 2 225 3 158 1 143 1 181 1 121 1 228 1 34 1 307 1 335 1 106 1 21 1 124 2 64 1 85 1 361 1 125 1 
217 1 243 1 3 1 218 1 111 1 132 1 7 1 91 1 199 2 321 1 278 1 296 2 225 2 158 1 143 1 181 1 121 1 228 1 335 1 106 1 124 2 21 1 64 1 85 1 125 1 
214 1 243 1 217 2 218 2 198 1 91 1 199 1 251 1 278 2 97 1 225 1 182 1 32 1 228 1 121 1 34 1 257 1 261 1 60 1 122 1 106 2 85 1 154 1 
243 1 3 1 217 1 218 1 198 1 7 1 91 1 199 1 321 1 293 1 278 1 225 1 181 1 121 1 228 1 34 1 307 1 335 1 106 1 21 1 124 2 312 1 64 1 85 1 361 1 125 1 
324 1 
126 1 214 2 267 2 169 1 243 2 88 1 344 1 89 1 91 2 200 1 250 1 11 1 97 1 252 1 253 1 32 1 228 1 121 2 188 1 18 1 39 1 149 1 103 2 82 1 122 1 211 1 42 2 85 1 65 1 154 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 2 149 1 103 2 11 1 42 1 188 1 222 1 344 1 65 1 252 1 89 1 
39 1 267 1 169 1 103 1 11 1 188 1 88 1 344 1 18 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
267 1 103 1 11 1 188 1 344 1 65 1 252 1 89 1 
39 1 267 1 169 1 103 1 11 1 188 1 88 1 344 1 18 1 65 1 252 1 89 1 
313 1 47 1 242 1 219 1 27 3 245 1 175 1 176 1 248 1 10 1 55 1 137 3 94 1 140 6 180 2 348 2 354 1 326 1 163 1 334 1 105 2 167 1 193 1 290 2 152 1 213 1 
313 2 216 3 219 2 27 6 272 3 245 2 28 1 134 1 176 1 345 1 10 2 94 11 137 8 140 14 180 1 348 2 144 1 145 1 16 1 354 4 326 11 258 2 284 1 148 2 334 2 287 1 105 4 62 1 167 1 84 1 290 1 66 1 213 2 
313 1 1 1 214 1 243 1 219 1 27 1 245 1 28 1 91 1 134 1 10 1 223 1 137 1 95 1 56 1 96 1 140 2 97 1 295 1 32 1 227 1 183 1 228 1 121 1 161 2 187 1 354 1 17 1 306 1 209 1 287 1 105 2 167 1 192 2 290 1 85 1 239 1 213 1 
313 3 214 1 1 2 2 1 3 1 219 3 175 1 134 1 91 3 176 3 10 3 55 1 223 1 94 7 137 10 12 2 95 1 140 20 97 2 180 4 227 2 184 1 228 2 145 2 17 1 326 7 148 2 334 3 287 1 105 6 62 4 192 3 290 2 193 1 152 1 239 1 338 2 23 1 241 2 243 3 27 10 245 3 28 1 248 1 295 2 348 8 254 2 32 2 121 3 161 3 354 7 163 1 207 2 258 2 209 1 306 2 167 3 85 2 213 3 
313 2 214 2 215 1 3 1 242 1 243 7 219 2 27 1 245 2 133 2 28 1 91 8 134 1 10 2 223 1 346 1 137 1 140 2 97 2 298 1 32 3 161 1 228 2 121 8 17 1 146 1 209 1 190 1 105 4 122 1 191 1 167 2 150 1 192 1 239 1 85 2 194 1 213 2 154 1 
313 1 25 1 219 1 27 2 245 1 275 1 176 1 10 1 223 1 94 1 137 1 140 3 180 1 348 1 58 1 161 1 145 1 354 1 17 1 326 1 258 1 148 1 334 1 287 1 105 2 167 1 192 1 239 1 213 1 
313 1 242 1 219 1 354 1 326 1 245 1 258 1 283 1 334 1 10 1 105 2 94 1 137 2 62 1 167 1 140 2 348 1 213 1 
313 1 242 1 219 1 27 2 145 1 354 1 326 1 245 1 176 1 10 1 105 2 94 1 167 1 140 2 180 1 348 1 213 1 57 1 
313 1 242 1 219 1 27 2 145 1 354 2 326 2 245 1 258 1 148 1 334 1 176 1 10 1 105 2 94 2 137 2 62 1 167 1 140 4 180 1 348 2 213 1 
313 1 219 1 354 1 326 1 245 1 258 1 283 1 334 1 10 1 105 2 94 1 137 2 62 1 150 1 167 1 140 2 348 1 213 1 
313 1 219 1 27 2 145 1 354 1 326 1 245 1 176 1 10 1 105 2 94 1 150 1 167 1 140 2 180 1 348 1 213 1 57 1 
313 1 219 1 27 2 145 1 354 2 326 2 245 1 258 1 148 1 334 1 176 1 10 1 105 2 94 2 137 2 62 1 150 1 167 1 140 4 180 1 348 2 213 1 
313 1 219 1 27 2 145 1 354 2 326 2 245 1 258 1 148 1 334 1 176 1 10 1 105 2 94 2 137 2 62 1 167 1 140 4 180 1 348 2 213 1 
313 1 1 1 214 1 241 1 243 1 219 1 27 1 245 1 28 1 134 1 91 1 10 1 137 1 140 2 97 1 295 1 227 1 32 1 228 1 121 1 161 1 306 1 105 2 167 1 192 1 290 1 85 1 213 1 
313 1 1 1 214 1 243 1 68 1 219 1 27 1 245 1 28 1 134 1 91 1 29 1 10 1 137 1 140 2 97 1 297 1 227 1 32 1 228 1 121 1 161 1 105 2 167 1 192 1 290 1 85 1 213 1 
313 1 219 1 27 2 145 1 354 2 326 2 245 1 258 1 148 1 334 1 176 1 287 1 10 1 105 2 94 2 137 2 62 1 167 1 140 4 180 1 348 2 213 1 
313 1 1 1 241 1 243 1 219 1 27 2 245 1 91 1 176 1 10 1 94 2 137 2 140 4 295 1 97 1 180 1 348 2 227 1 32 1 228 1 121 1 161 1 145 1 354 2 326 2 258 1 306 1 334 1 148 1 105 2 62 1 167 1 192 1 85 1 338 1 194 1 213 1 
313 1 25 1 219 1 27 1 316 1 245 1 275 1 176 1 10 1 223 1 137 2 94 1 140 3 348 1 161 1 145 1 17 1 354 1 258 1 326 1 148 1 334 1 287 1 105 2 62 1 167 1 192 1 239 1 213 1 
22 1 313 2 216 2 271 1 340 1 27 10 272 1 245 2 176 3 92 1 246 1 10 2 247 1 31 2 137 9 140 19 180 3 348 6 99 2 145 3 258 3 147 1 284 1 148 3 334 3 105 4 62 3 84 1 86 1 213 2 
22 2 313 3 168 2 110 1 216 2 271 2 27 12 272 2 245 3 113 1 69 1 176 2 92 1 10 3 247 1 31 1 137 14 140 26 180 2 348 4 99 4 325 1 145 2 258 3 147 1 284 2 148 3 334 3 105 6 62 2 357 1 360 1 86 1 213 3 
22 2 313 3 168 1 110 1 216 4 271 1 27 21 272 3 245 3 113 1 69 1 175 1 176 5 92 1 246 1 248 1 10 3 247 1 55 1 72 1 31 1 137 20 140 41 180 4 348 8 99 4 325 1 145 4 163 1 258 4 147 1 284 3 148 4 334 5 105 6 62 4 357 1 84 1 193 1 360 1 152 1 86 1 213 3 
22 2 313 4 168 2 110 1 216 4 271 1 27 18 272 3 245 4 113 1 69 1 175 1 176 4 92 1 246 1 248 1 10 4 247 1 55 1 72 1 31 1 137 20 140 38 180 4 348 7 99 4 325 1 145 3 163 1 258 4 147 1 284 3 148 4 334 5 105 8 62 3 357 1 84 1 193 1 360 1 152 1 86 1 213 4 
22 1 313 2 168 1 110 1 216 4 271 1 27 25 272 4 245 2 113 1 69 1 175 1 176 8 92 1 248 1 10 2 247 1 55 1 31 1 137 27 140 52 180 7 348 14 99 4 325 1 145 7 163 1 258 7 147 1 284 2 148 7 334 8 105 4 62 7 357 1 84 2 193 1 360 1 152 1 66 2 86 1 213 2 
0 1 320 1 249 1 196 1 256 1 5 1 358 1 274 1 52 1 333 1 
286 1 37 1 
0 1 320 1 170 1 76 1 196 1 322 1 274 1 52 1 333 1 
40 1 114 1 
210 1 24 1 204 1 
0 1 267 1 67 1 196 1 4 1 256 1 5 1 102 1 52 1 274 1 333 1 320 1 308 1 103 1 309 1 117 2 358 1 108 1 
0 1 267 1 67 1 196 1 4 1 256 1 5 1 102 1 52 1 274 1 333 1 320 1 308 1 103 1 309 1 117 2 358 1 108 1 
0 1 267 1 67 1 196 1 4 1 256 1 5 1 102 1 52 1 274 1 333 1 320 1 308 1 103 1 309 1 117 2 358 1 108 1 
210 1 40 1 114 1 
210 1 40 1 114 1 
24 1 204 1 
210 1 24 1 204 1 
138 1 244 1 
0 1 267 1 196 1 4 1 220 1 244 1 274 1 52 1 112 1 320 1 223 2 138 1 117 1 118 1 203 1 161 2 17 2 37 1 333 1 286 1 308 1 236 1 103 1 107 1 192 2 290 1 239 2 
313 1 215 1 243 2 219 1 27 1 174 1 245 1 133 2 28 1 91 2 134 1 10 1 137 1 157 1 140 2 97 1 179 1 32 1 228 1 121 2 161 2 208 1 287 1 166 1 105 2 191 1 167 1 192 2 85 1 239 2 213 1 
181 1 228 1 3 1 243 2 121 2 218 1 80 1 7 1 307 1 91 2 321 1 115 1 335 1 21 1 124 2 85 1 266 1 64 1 194 1 
181 1 3 1 243 1 121 1 228 1 218 1 38 1 7 1 307 1 91 1 321 1 335 1 21 1 124 2 266 1 64 1 85 1 
214 1 32 1 228 1 243 1 121 1 218 1 162 1 80 1 91 1 60 1 122 1 97 1 85 1 154 1 
181 1 228 1 3 1 243 1 121 1 218 1 80 1 7 1 307 1 91 1 321 1 115 1 335 1 21 1 124 2 266 1 64 1 85 1 
353 1 
319 1 200 1 165 1 47 1 250 1 288 1 309 1 
267 1 169 1 341 1 88 1 319 1 200 1 177 1 250 1 185 1 230 1 18 1 330 1 39 1 149 1 103 1 309 2 42 1 
1 3 214 1 267 5 169 4 51 2 314 2 270 1 315 1 317 3 88 4 319 2 90 2 91 3 135 2 176 2 177 6 178 1 280 1 97 3 228 4 185 12 145 2 18 4 189 2 148 2 334 2 235 2 149 3 103 5 288 1 194 1 243 3 26 2 200 9 250 8 202 1 253 2 32 10 206 2 121 3 207 2 258 2 259 2 260 6 39 4 165 1 81 1 211 1 265 2 42 5 309 8 83 6 85 3 46 2 
267 1 169 2 269 1 216 1 272 1 173 1 88 2 113 1 69 1 319 2 200 8 176 2 177 3 250 5 253 1 185 6 325 1 145 2 258 2 259 2 18 2 260 5 284 1 39 2 148 2 334 2 149 1 103 1 211 1 265 1 42 1 309 5 357 1 83 5 360 1 
267 1 169 1 129 1 88 1 275 1 175 1 176 1 200 2 248 1 250 2 223 1 161 1 17 1 259 2 19 1 18 1 39 1 334 2 356 1 263 1 103 1 61 1 238 1 265 1 192 1 193 1 239 1 109 1 
169 1 88 1 18 1 39 1 319 1 165 1 200 1 250 1 288 1 309 1 
185 10 145 2 207 1 258 2 259 2 260 5 148 2 334 2 176 2 200 5 177 5 250 5 265 1 309 5 83 5 
319 1 267 1 149 1 103 1 309 1 42 1 
126 1 214 2 267 3 169 2 87 1 243 4 273 1 88 2 91 4 200 2 250 2 202 2 97 1 253 2 32 1 228 1 121 4 18 1 39 2 149 2 103 3 81 1 82 1 122 1 211 2 42 4 123 1 85 1 154 1 
313 1 214 1 1 1 241 1 243 1 219 1 27 1 245 1 275 2 28 1 91 1 10 1 223 2 140 1 295 1 97 1 227 1 32 1 121 1 161 3 228 1 17 2 234 1 306 1 61 1 105 2 167 1 192 3 290 1 239 2 85 1 213 1 
169 1 253 1 185 4 163 1 88 1 18 1 260 2 39 1 319 2 200 1 177 2 250 2 211 1 309 4 83 2 
78 1 196 1 274 1 
78 1 196 1 274 1 
196 1 43 1 256 1 244 1 274 1 
78 1 196 1 274 1 
196 1 164 1 274 1 
196 1 164 1 274 1 
196 1 164 1 274 1 
196 1 274 1 
320 1 333 1 
313 2 168 1 27 4 163 1 245 2 334 1 175 1 176 1 10 2 248 1 105 4 55 1 137 4 62 1 140 8 193 1 152 1 180 2 348 3 213 2 
47 1 27 3 163 1 175 1 334 1 176 1 248 1 55 1 137 3 140 6 193 1 152 1 180 2 348 2 
313 1 27 2 145 1 343 1 245 1 258 1 148 1 334 1 176 1 10 1 105 2 137 2 62 1 140 4 180 1 348 2 213 1 
216 2 27 4 272 1 145 1 258 1 284 1 148 1 334 1 176 1 137 3 62 1 84 1 140 7 180 1 348 2 
313 2 168 2 216 2 339 1 272 2 27 12 245 2 175 2 176 3 345 1 248 2 10 2 55 1 137 11 140 23 180 5 348 9 145 2 163 1 258 2 334 3 148 2 105 4 62 4 84 1 193 1 152 1 66 1 213 2 
216 1 27 1 140 1 
137 1 272 1 140 1 
313 1 27 3 145 1 245 1 343 1 207 1 258 1 148 1 334 1 176 1 10 1 105 2 137 3 62 1 140 6 180 2 213 1 348 3 
313 1 216 1 272 1 27 6 245 1 113 1 69 1 176 2 92 1 10 1 137 6 140 12 180 1 348 2 325 1 145 2 258 2 284 1 148 2 334 2 105 2 62 1 357 1 360 1 213 1 
27 3 334 1 175 1 176 1 248 1 137 3 62 1 140 6 193 1 180 1 348 2 
313 1 168 1 339 1 27 2 245 1 175 1 248 1 10 1 105 2 55 1 137 1 62 1 140 3 152 1 180 1 348 2 213 1 
313 1 27 5 245 1 19 1 175 2 334 2 176 2 92 1 10 1 248 2 105 2 137 5 62 2 140 10 193 1 180 3 213 1 348 5 
313 1 245 1 258 1 334 1 92 1 10 1 105 2 137 2 62 1 140 2 213 1 348 1 
313 1 27 2 145 1 245 1 258 1 148 1 334 1 176 1 92 1 10 1 105 2 137 2 62 1 140 4 180 1 348 2 213 1 
313 3 168 1 339 1 27 2 245 3 175 1 92 1 246 1 10 3 248 1 105 6 137 1 62 1 140 3 180 1 213 3 348 2 
313 5 168 2 216 4 339 1 27 18 272 3 343 1 245 5 175 3 176 5 92 1 54 1 248 3 246 1 10 5 55 1 137 16 139 1 140 34 180 7 348 12 229 1 145 3 163 1 258 3 284 1 148 3 334 5 105 10 62 5 84 1 193 2 152 1 213 5 
313 1 216 1 272 1 27 4 245 1 175 1 176 1 92 1 10 1 248 1 55 1 137 4 140 8 180 2 348 2 325 1 163 1 284 1 334 1 105 2 193 1 152 1 213 1 
313 2 216 2 27 5 272 1 245 2 343 1 175 1 176 1 92 1 248 1 10 2 55 1 137 6 140 11 180 2 348 3 325 1 163 1 258 1 284 1 148 1 334 2 105 4 62 1 84 1 193 1 152 1 213 2 
313 3 168 1 216 1 272 1 27 10 343 1 245 3 113 1 69 1 175 1 176 3 92 1 248 1 10 3 55 1 137 9 140 19 180 3 348 4 325 1 145 2 163 1 258 2 284 1 148 2 334 3 105 6 62 1 357 1 193 1 360 1 152 1 213 3 
313 3 168 1 216 1 272 1 27 7 343 1 245 3 113 1 69 1 175 1 176 2 92 1 248 1 10 3 55 1 137 10 140 17 180 3 348 5 325 1 145 1 163 1 258 2 284 1 148 2 334 3 105 6 62 2 357 1 193 1 360 1 152 1 213 3 
313 1 216 1 272 1 27 4 245 1 175 1 176 1 92 1 10 1 248 1 55 1 137 4 140 8 180 2 348 2 325 1 163 1 284 1 334 1 105 2 193 1 152 1 213 1 
313 1 216 1 272 1 27 6 245 1 113 1 69 1 176 2 92 1 10 1 137 6 140 12 180 1 348 2 325 1 145 2 258 2 284 1 148 2 334 2 105 2 62 1 357 1 360 1 213 1 
313 4 168 2 216 1 27 8 272 1 343 1 245 4 113 1 69 1 175 1 176 2 92 1 248 1 10 4 55 1 137 10 140 18 180 3 348 5 325 1 145 1 163 1 258 2 284 1 148 2 334 3 105 8 62 2 357 1 193 1 360 1 152 1 213 4 
313 4 168 2 216 1 27 7 272 1 245 4 113 1 69 1 176 2 92 1 10 4 246 1 137 9 140 16 180 3 348 6 325 1 145 2 258 3 284 1 148 3 334 3 105 8 62 3 357 1 360 1 213 4 
27 4 175 3 334 1 176 1 248 3 55 1 137 3 62 3 140 7 193 1 152 2 180 3 348 6 
313 4 168 2 216 1 27 8 272 1 245 4 113 1 69 1 175 1 176 2 92 1 248 1 10 4 246 1 55 1 137 10 140 18 180 3 348 4 325 1 145 1 163 1 258 2 284 1 148 2 334 3 105 8 62 1 357 1 193 1 360 1 152 1 213 4 
48 1 11 1 323 1 
277 1 93 1 48 1 11 1 323 1 327 1 101 1 6 1 
91 1 214 1 32 1 47 1 228 1 121 1 243 1 122 1 97 1 85 1 154 1 
1 1 214 1 32 1 227 1 228 1 161 2 243 1 121 1 17 1 209 1 91 1 223 1 192 2 290 1 97 1 295 1 239 1 85 1 
1 2 243 1 129 1 314 1 26 1 91 1 223 2 202 1 295 1 97 2 351 1 227 1 32 3 121 1 161 2 228 1 17 1 209 1 262 1 192 2 290 1 85 1 239 2 
1 2 243 2 68 1 129 1 314 1 26 1 91 2 70 1 223 2 202 1 97 2 351 1 227 1 32 3 121 2 161 2 228 1 17 1 209 1 262 1 192 2 290 1 85 1 239 2 
267 2 1 1 214 1 243 3 314 1 26 1 317 1 319 1 91 3 135 1 70 1 202 1 97 1 32 4 77 1 121 3 228 1 186 1 235 1 103 2 42 1 309 1 85 1 
214 1 1 1 267 2 32 4 228 1 243 3 121 3 314 1 51 1 26 1 317 1 319 1 91 3 135 1 235 1 70 1 103 2 309 1 42 1 202 1 97 1 85 1 
91 1 228 1 121 1 243 1 85 1 298 1 
214 2 1 1 32 3 3 1 243 6 121 7 228 3 270 1 100 1 304 1 146 1 133 1 91 7 190 1 346 1 191 1 97 2 85 2 194 1 74 1 298 1 
313 2 1 1 219 2 91 1 175 1 176 1 10 2 223 1 55 1 137 3 94 1 140 6 97 1 180 2 227 1 228 1 17 1 326 1 334 1 287 1 105 4 192 2 193 1 290 2 239 1 152 1 338 1 194 1 241 1 243 1 27 3 245 2 248 1 295 1 348 2 254 1 32 1 121 1 161 2 354 1 163 1 208 1 306 1 209 1 167 2 85 1 213 2 
214 1 267 3 169 2 243 1 51 1 88 2 317 1 319 1 91 1 90 1 200 1 135 1 250 1 32 2 206 1 121 1 18 2 39 2 165 1 236 1 235 1 149 1 103 3 81 1 288 1 309 1 42 2 46 1 
1 1 32 2 243 2 121 2 228 2 270 1 315 1 91 2 235 1 97 1 85 1 194 1 298 1 
214 1 32 1 33 1 228 1 243 4 121 4 91 4 70 1 122 1 97 1 85 1 194 1 154 1 
23 1 1 1 32 1 243 2 121 2 228 2 100 1 91 2 202 1 97 1 224 1 85 1 74 1 291 1 
91 1 214 1 181 1 321 1 228 1 121 1 243 1 21 1 124 1 85 1 
91 2 32 1 228 1 166 1 3 1 121 2 243 2 191 1 97 1 85 1 194 1 
214 1 32 3 33 1 243 4 121 5 228 2 146 1 91 5 122 1 346 1 191 1 202 1 97 2 85 2 194 1 154 1 
214 1 159 1 32 3 33 1 243 4 121 5 228 2 91 5 122 1 346 1 191 1 202 1 97 2 85 2 194 1 154 1 
1 1 214 1 32 1 227 1 228 1 161 2 243 1 121 1 68 1 17 1 209 1 91 1 223 1 192 2 290 1 97 1 239 1 85 1 
1 1 32 1 243 1 121 1 228 2 270 1 100 1 304 1 91 1 202 1 97 1 85 1 74 1 
161 1 300 1 155 1 157 1 192 1 174 1 179 1 239 1 347 1 
155 1 294 1 305 1 
300 1 155 1 290 1 347 1 355 1 
267 2 351 1 300 2 129 1 155 1 171 1 305 1 355 2 319 1 135 1 262 1 236 1 103 2 136 1 309 1 294 1 290 1 347 2 205 1 
158 1 47 1 111 1 132 1 
199 1 158 1 34 1 111 1 132 1 198 1 225 1 
217 1 106 1 225 1 
158 1 50 1 49 1 34 1 111 1 132 1 198 1 199 3 20 1 293 1 63 2 225 3 
199 2 158 1 34 1 111 1 132 1 303 1 198 1 296 1 225 2 
34 1 172 1 132 1 198 1 7 1 199 1 293 1 124 1 21 1 141 1 225 1 
199 1 293 1 34 1 111 1 132 1 198 1 225 1 
199 1 158 1 293 1 34 1 111 2 198 1 225 1 
34 2 301 1 111 1 132 1 198 2 8 1 199 2 9 1 293 1 225 2 
158 1 160 1 34 1 111 1 232 1 132 2 198 1 331 1 199 3 293 1 296 2 141 1 225 3 
158 1 181 1 34 1 111 1 132 1 198 1 59 1 7 1 199 2 293 1 335 1 124 2 21 1 296 1 225 2 
158 1 34 2 35 1 111 1 232 1 132 2 198 2 303 1 199 4 293 1 296 2 141 1 225 4 
199 1 158 1 293 1 34 1 111 1 132 1 198 1 225 1 
349 1 158 2 49 1 34 1 111 2 232 1 132 3 198 1 199 4 20 1 63 1 296 2 141 1 225 4 
158 1 34 1 131 1 111 1 132 1 198 1 199 2 293 1 289 1 153 1 296 1 225 2 
158 1 49 2 34 1 111 1 132 1 198 1 199 3 20 1 293 1 63 2 337 1 225 3 
212 1 132 1 233 1 
199 1 293 1 336 1 34 1 198 1 225 1 
199 2 158 1 160 1 293 1 34 1 111 1 132 1 198 1 296 1 225 2 
350 1 
199 1 158 1 293 1 34 1 111 1 132 1 198 1 225 1 
158 1 160 1 34 1 111 1 132 1 198 1 199 3 293 1 63 1 296 1 225 3 
349 1 232 1 132 1 141 1 
111 1 132 1 

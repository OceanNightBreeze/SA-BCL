#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (163,204) (163,204) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (148,266) 133 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (163,204) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (203,267,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 33 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (163,204) (163,204) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (163,204) (163,204) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (163,204) (163,204) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (203,267,324) (203,267,324) 255 261 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 33 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 7 184 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (148,266) (148,266) (139,280) 243 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (148,266) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (148,266) (148,266) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (148,266) 133 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (163,204) (163,204) 279 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 191 (146,304) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 191 (146,304) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 191 (3,157) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (163,204) (163,204) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 191 (3,157) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 252 2 232 1 318 2 97 3 28 1 2 1 200 3 51 2 222 1 179 1 111 1 228 1 
42 1 122 4 251 1 293 1 252 2 232 1 318 2 196 1 256 1 97 9 172 1 198 1 28 3 2 7 200 9 176 1 51 5 222 1 179 1 264 1 110 2 245 1 111 1 228 1 
42 1 122 4 251 1 293 1 252 2 232 1 318 2 196 1 256 1 97 9 172 1 198 1 28 3 2 7 200 9 176 1 51 5 222 1 179 1 264 1 110 2 245 1 111 1 228 1 
42 1 318 2 232 1 196 1 97 9 2 6 200 9 51 5 101 1 110 2 61 1 111 1 289 1 74 1 122 4 251 1 252 2 293 2 256 1 172 2 28 3 257 1 176 1 129 1 222 2 179 1 264 2 228 1 
42 1 318 2 232 1 196 1 97 9 2 6 200 9 51 5 101 1 110 2 61 1 111 1 289 1 74 1 122 4 251 1 252 2 293 2 256 1 172 2 28 3 257 1 176 1 129 1 222 2 179 1 264 2 228 1 
42 1 318 2 232 1 196 1 97 10 2 7 200 10 51 6 101 1 110 2 61 1 111 1 289 1 74 1 122 5 251 1 252 2 293 2 256 1 172 2 28 4 257 1 176 1 129 1 222 2 179 1 264 2 228 1 
42 1 318 2 232 1 196 1 97 7 2 4 200 7 51 4 101 1 110 1 61 1 111 1 289 1 74 1 122 3 252 2 293 2 256 1 172 2 28 2 257 1 176 1 129 1 222 2 179 1 264 2 228 1 
122 2 251 1 293 1 252 1 232 1 318 1 97 4 256 1 28 1 172 1 2 3 200 4 176 1 51 3 179 1 264 1 110 2 228 1 
252 1 293 1 232 1 318 1 97 2 172 1 200 2 51 1 129 1 297 1 222 1 179 1 90 1 307 1 61 1 228 1 
193 1 324 1 80 1 174 1 310 1 163 1 70 1 204 1 19 1 20 1 
301 1 
194 1 193 2 324 2 301 1 58 1 70 1 223 1 224 1 
193 5 194 2 79 1 271 1 216 1 233 1 217 2 223 1 178 2 10 1 324 5 301 1 34 1 242 1 209 1 58 1 326 2 36 1 70 2 
301 1 33 1 223 1 
301 1 121 1 341 2 
80 1 174 2 310 2 19 2 20 2 
80 1 174 1 334 1 4 2 148 1 133 1 323 1 134 2 135 1 327 1 310 1 68 2 20 1 19 1 
80 1 174 1 310 1 204 1 19 1 20 1 
174 1 267 1 6 1 203 1 
174 1 310 1 203 1 19 1 20 1 
194 1 193 1 324 1 70 1 269 1 
194 1 193 2 324 2 301 1 58 1 70 1 223 1 141 1 
194 1 193 1 324 1 
174 2 310 1 335 1 69 1 19 1 20 1 
134 1 135 1 174 1 13 1 4 1 68 1 258 1 19 1 20 1 
33 1 
145 1 325 1 128 1 13 1 174 5 6 1 310 1 258 2 69 1 19 4 20 4 
174 1 19 1 20 1 
174 3 310 1 258 1 19 3 20 3 
174 1 19 1 20 1 
174 1 310 1 335 1 69 1 19 1 20 1 
174 2 13 1 310 1 258 1 69 1 19 2 20 2 
325 1 174 2 6 1 258 1 19 1 20 1 
174 1 13 1 258 1 19 1 20 1 
174 1 310 1 69 1 19 1 20 1 
134 1 135 1 4 1 68 1 
134 1 135 1 4 1 68 1 
155 1 285 1 320 1 91 1 235 1 71 1 72 2 86 1 
215 1 174 1 19 1 20 1 
260 1 81 1 49 1 
205 1 260 2 81 2 57 1 210 1 213 1 
260 1 81 1 
260 1 81 1 
210 1 213 1 
210 1 213 1 
210 1 213 1 
260 1 81 1 15 1 
260 1 81 1 15 1 
260 1 81 1 15 1 
260 1 81 1 238 1 
260 1 81 1 238 1 
260 1 81 1 238 1 
76 1 193 1 168 1 253 1 124 1 81 1 174 2 1 1 49 1 225 1 324 1 31 1 260 1 55 1 207 1 182 1 38 1 93 1 270 1 20 2 19 2 
193 2 253 2 81 2 83 1 1 2 150 1 31 2 324 2 156 1 205 1 301 1 260 2 55 3 56 1 207 2 283 1 182 1 137 1 94 2 
12 2 293 2 295 1 264 1 307 1 
293 1 264 1 172 1 
293 1 307 1 172 1 
12 1 293 3 295 1 264 2 307 1 328 1 
12 1 293 2 295 1 264 1 307 1 161 1 
194 1 193 5 321 1 276 2 52 1 204 1 104 1 324 5 242 1 209 1 326 1 58 1 160 1 64 1 70 4 163 1 19 1 20 1 294 1 78 1 123 1 79 2 25 1 80 1 174 1 217 1 178 1 223 1 301 1 38 1 310 1 313 1 341 1 
194 3 193 5 273 1 321 1 52 1 204 1 104 1 324 5 242 1 209 1 326 1 58 1 160 1 64 1 162 2 70 4 163 1 20 1 19 1 294 1 78 1 79 2 25 1 80 1 174 1 217 1 178 1 223 1 301 1 38 1 310 1 40 1 269 2 341 1 
193 3 321 1 276 1 52 1 204 1 324 3 104 1 209 3 326 1 160 2 64 1 287 1 163 1 70 2 121 1 19 1 20 1 123 1 78 1 294 2 216 1 79 2 80 1 174 1 217 1 223 1 178 1 301 2 308 1 38 1 310 1 313 1 341 3 
192 1 193 4 321 1 276 2 52 1 324 4 104 2 108 1 209 5 326 1 160 4 64 2 287 2 70 3 248 1 121 2 123 1 78 2 294 4 216 1 79 4 217 1 223 1 178 1 301 3 308 2 38 2 313 1 341 6 
181 1 
33 1 315 1 250 1 
277 1 250 1 
47 1 113 1 250 1 
187 1 250 1 
47 1 250 1 
292 1 159 1 47 1 113 1 315 2 250 3 
332 3 195 1 197 1 218 1 177 1 219 1 221 1 154 2 305 1 265 7 308 1 185 2 64 1 39 3 246 1 142 1 17 1 21 4 
195 2 144 1 197 1 0 1 320 1 104 3 154 5 155 1 112 3 64 4 246 1 287 3 67 4 71 1 72 2 21 16 332 15 78 3 254 1 218 5 219 1 177 2 221 2 305 1 265 31 308 4 91 1 186 1 185 3 39 10 92 1 311 1 142 2 143 1 
195 1 320 2 197 1 154 3 155 2 64 1 246 1 120 1 71 2 72 4 21 5 332 4 218 1 177 1 219 1 221 1 265 9 308 1 91 2 338 1 185 2 39 4 92 1 142 1 
332 3 195 1 197 1 218 1 177 1 219 1 221 1 154 2 305 1 265 7 308 1 185 2 64 1 39 3 246 1 142 1 21 4 
332 3 195 1 197 1 218 1 177 1 219 1 221 1 154 2 305 1 265 7 308 1 185 2 64 1 39 3 246 1 142 1 21 4 
252 1 318 1 272 1 27 1 97 1 199 1 200 1 47 1 4 1 237 1 222 2 103 1 8 2 132 1 303 1 180 2 284 1 134 1 135 1 68 1 214 2 140 1 250 1 
318 1 232 1 272 1 97 1 200 1 4 1 8 1 278 1 281 1 107 1 158 1 328 1 59 1 68 1 214 1 18 1 252 1 293 2 27 1 172 1 222 1 131 1 180 1 134 1 264 1 307 1 
318 1 232 1 272 1 45 1 97 2 2 1 200 2 4 1 51 1 8 1 278 1 281 1 107 1 158 1 328 1 59 1 68 1 214 1 18 1 252 1 293 2 27 1 172 1 222 1 179 1 180 1 134 1 264 1 307 1 228 1 
318 1 272 1 97 3 2 2 200 3 4 1 51 1 8 1 278 1 281 1 284 1 158 1 328 1 59 1 68 1 214 1 18 1 252 1 293 2 27 1 172 1 222 1 131 1 179 1 180 1 134 1 264 1 307 1 309 1 228 1 
272 1 97 2 2 2 200 2 4 1 51 1 8 1 278 1 281 1 158 1 328 1 68 1 214 1 293 2 27 1 172 1 222 1 131 1 179 1 180 1 134 1 307 1 264 1 309 1 228 1 
119 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 255 1 174 1 217 1 6 1 203 1 178 1 87 1 324 1 261 1 242 1 326 1 267 1 288 1 
193 2 194 2 272 1 6 1 4 2 47 1 237 1 203 1 52 1 152 1 103 1 324 2 242 1 326 1 209 1 58 1 211 1 288 1 68 2 250 1 170 1 79 1 255 1 27 1 174 1 217 1 178 1 87 1 261 1 134 2 135 2 267 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
194 1 193 2 324 2 261 1 255 1 58 1 174 1 267 1 6 1 288 1 203 1 224 1 87 1 
193 1 255 1 174 1 217 1 6 1 203 1 178 1 87 1 324 1 261 1 242 1 326 1 267 1 288 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
193 1 324 1 261 1 255 1 174 1 267 1 6 1 288 1 203 1 87 1 
320 1 274 1 4 1 86 1 336 1 155 1 285 1 134 1 265 1 135 1 91 1 212 1 68 1 72 2 71 1 21 1 
320 1 48 1 104 1 155 1 285 1 64 1 287 1 69 1 71 1 72 2 20 1 19 1 21 1 332 1 78 1 174 1 86 1 300 1 265 2 308 1 91 1 310 1 
195 1 320 1 197 1 235 1 219 1 86 1 154 1 155 1 33 1 285 1 265 2 185 1 91 1 64 1 39 1 246 1 72 2 71 1 142 1 21 2 
332 1 320 1 7 1 86 1 300 1 155 1 285 1 265 2 184 1 91 1 112 1 67 1 72 2 71 1 21 1 
332 1 82 1 320 1 274 1 174 1 298 1 258 1 86 1 300 1 155 1 285 1 265 2 13 1 91 1 138 1 71 1 72 2 21 1 20 1 19 1 
320 1 4 1 148 1 155 1 280 1 285 1 243 1 13 1 68 1 72 2 71 1 19 1 20 1 332 1 174 1 258 1 86 1 300 1 134 1 135 1 265 1 266 1 91 1 138 1 
320 1 235 1 86 1 104 1 155 1 285 1 265 1 91 1 64 1 290 1 72 2 71 1 21 1 
332 1 320 1 235 1 86 1 155 1 302 1 285 1 265 1 308 1 91 1 287 1 72 2 71 1 
332 1 78 1 320 1 235 1 86 1 104 1 155 1 285 1 265 2 308 1 91 1 64 1 287 1 72 2 71 1 21 1 
320 1 86 1 104 1 155 1 285 1 265 1 91 1 212 1 64 1 290 1 72 2 71 1 21 1 
332 1 320 1 86 1 155 1 302 1 285 1 265 1 308 1 91 1 212 1 287 1 72 2 71 1 
332 1 78 1 320 1 86 1 104 1 155 1 285 1 265 2 308 1 91 1 212 1 64 1 287 1 72 2 71 1 21 1 
332 1 78 1 320 1 86 1 104 1 155 1 285 1 265 2 308 1 91 1 64 1 287 1 72 2 71 1 21 1 
134 1 135 1 4 1 68 1 148 1 
134 1 135 1 4 1 68 1 114 1 
332 1 78 1 320 1 86 1 300 1 104 1 155 1 285 1 265 2 308 1 91 1 64 1 287 1 72 2 71 1 21 1 
134 1 45 1 266 1 4 1 68 1 148 1 
320 1 104 1 155 1 285 1 64 1 287 1 69 1 71 1 72 2 164 1 20 1 19 1 21 1 332 1 78 1 174 1 86 1 300 1 265 2 308 1 91 1 310 1 
320 2 239 1 154 3 104 3 155 2 241 1 109 1 112 1 64 3 66 2 14 1 287 3 67 2 71 2 72 4 21 9 332 10 78 3 84 1 218 3 130 1 35 2 183 1 265 19 308 3 91 2 338 1 186 1 39 6 143 1 
320 3 50 1 239 1 154 2 104 3 155 3 241 2 106 1 109 1 112 2 64 3 66 1 14 2 287 2 67 2 71 3 72 6 249 1 21 14 332 12 23 1 78 3 218 2 35 4 183 1 265 26 308 2 91 3 338 1 39 4 92 2 268 1 143 2 230 1 
195 1 197 1 320 3 236 1 50 1 239 1 154 4 104 4 155 3 106 1 241 1 109 1 112 3 64 5 66 1 246 1 14 2 287 4 67 4 71 3 72 6 249 1 21 20 332 21 23 1 78 4 218 4 219 1 130 1 35 4 183 1 265 41 308 5 185 1 91 3 338 1 186 1 39 8 92 1 268 1 142 1 230 1 143 3 
195 1 197 1 320 4 236 1 50 1 239 1 154 4 104 4 155 4 106 1 241 1 109 1 112 3 64 5 66 1 246 1 14 2 287 3 67 4 71 4 72 8 249 1 21 20 332 18 23 1 78 4 218 3 219 1 130 1 35 4 183 1 265 38 308 4 185 1 91 4 338 1 186 1 39 7 92 2 268 1 142 1 230 1 143 3 
195 1 197 1 320 2 50 1 239 1 154 7 104 7 155 2 106 1 241 1 109 1 112 4 64 8 66 1 246 1 14 1 287 7 67 4 71 2 72 4 249 1 21 27 332 25 23 1 78 7 218 7 219 1 296 2 35 4 183 1 265 52 308 8 185 1 91 2 338 1 186 2 39 14 92 1 268 1 142 1 230 1 143 2 
31 1 205 1 253 1 260 1 81 1 207 1 1 1 137 1 150 1 30 1 
49 1 270 1 
166 1 31 1 105 1 253 1 260 1 81 1 207 1 1 1 117 1 
43 1 15 1 
57 1 238 1 153 1 
193 1 253 1 81 1 83 1 1 1 150 1 324 1 31 1 205 1 301 1 260 1 55 2 56 1 207 1 283 1 182 1 137 1 94 1 
193 1 253 1 81 1 83 1 1 1 150 1 324 1 31 1 205 1 301 1 260 1 55 2 56 1 207 1 283 1 182 1 137 1 94 1 
193 1 253 1 81 1 83 1 1 1 150 1 324 1 31 1 205 1 301 1 260 1 55 2 56 1 207 1 283 1 182 1 137 1 94 1 
43 1 57 1 15 1 
43 1 57 1 15 1 
238 1 153 1 
57 1 238 1 153 1 
168 1 93 1 
193 1 1 1 49 1 324 1 55 1 283 1 207 1 70 1 20 2 19 2 76 1 253 1 168 1 81 1 124 1 174 2 225 1 31 1 260 1 89 1 38 1 94 1 93 1 270 1 
174 2 5 1 118 1 190 1 
272 1 27 1 47 1 4 1 237 1 103 1 134 1 135 1 337 1 68 1 214 1 16 1 140 1 250 1 
293 2 272 1 27 1 172 1 4 1 322 1 131 1 278 1 134 1 264 1 307 1 158 1 328 1 337 1 68 1 214 1 247 1 18 1 
293 2 272 1 45 1 27 1 172 1 4 2 322 1 131 1 278 1 134 2 264 1 307 1 158 1 328 1 337 1 68 2 214 1 247 1 18 1 
293 2 272 1 27 1 172 1 4 1 131 1 278 1 240 1 134 1 264 1 307 1 158 1 328 1 68 1 214 1 247 1 18 1 
46 1 
271 1 79 1 233 1 217 1 178 1 223 1 301 1 242 1 326 1 209 1 
78 2 294 5 24 1 79 5 202 2 104 2 301 5 262 1 209 5 160 5 308 2 64 2 287 2 341 10 121 5 
193 1 324 1 194 1 301 1 58 1 223 1 
194 4 193 3 272 1 319 2 47 1 4 4 237 1 52 2 152 1 103 1 324 3 242 1 326 2 209 2 58 2 211 1 68 4 250 1 216 1 170 2 79 2 171 1 127 1 27 1 173 1 217 2 178 2 134 4 135 2 
133 1 80 1 134 1 135 1 174 1 4 1 310 1 68 1 148 1 19 1 20 1 
294 2 79 2 170 1 217 1 52 1 178 1 223 2 301 4 242 1 326 1 209 1 160 2 185 1 121 2 341 4 
301 1 33 1 79 1 271 1 233 1 209 1 223 1 
194 1 193 1 100 1 54 1 324 1 242 1 209 1 326 1 58 1 121 1 79 1 217 1 178 1 223 1 32 1 301 2 341 1 
194 5 193 5 271 1 272 4 202 2 4 3 277 3 104 2 209 9 113 3 287 2 121 6 292 1 294 6 24 2 27 3 217 4 223 2 301 8 134 3 135 1 308 2 139 2 315 2 44 1 317 2 233 1 319 1 45 1 146 2 147 2 47 3 52 2 324 5 242 4 326 4 58 3 160 6 60 2 63 1 244 2 64 2 68 3 73 2 250 10 78 2 170 1 79 8 171 1 178 4 262 2 88 1 187 2 341 12 
193 1 194 1 202 2 50 1 52 1 151 1 324 1 104 2 242 2 106 1 58 1 209 8 326 2 160 5 112 1 64 2 287 2 67 1 249 1 121 3 294 5 78 2 170 1 24 1 79 5 217 2 178 2 223 2 301 5 308 2 188 1 268 1 341 6 143 1 230 1 
193 1 79 1 195 1 80 1 174 1 217 1 202 2 204 1 178 1 324 1 279 1 242 1 209 2 326 1 308 1 64 1 310 1 246 1 115 1 163 1 142 1 19 1 20 1 
253 1 1 1 226 1 136 1 93 1 
253 1 1 1 220 1 
253 1 1 1 220 1 
253 1 1 1 220 1 
253 1 1 1 149 1 
253 1 1 1 149 1 
253 1 1 1 149 1 
253 1 1 1 
260 1 81 1 
332 5 195 2 320 1 218 2 279 1 154 3 155 1 265 10 308 2 91 1 338 1 39 5 64 2 246 1 71 1 72 2 142 2 21 5 
320 1 218 1 104 1 155 1 265 2 338 1 91 1 64 1 39 1 72 2 71 1 21 2 
332 2 78 1 320 1 218 1 154 1 104 1 155 1 265 4 308 1 338 1 91 1 39 2 64 1 287 1 72 2 71 1 21 2 
332 2 195 1 320 3 218 1 130 1 154 1 155 3 208 1 265 3 338 1 91 3 39 2 92 1 72 6 71 3 142 1 21 1 
195 3 144 1 197 1 0 1 320 5 104 3 154 7 155 5 208 1 112 3 64 5 246 2 287 3 67 4 71 5 72 10 21 16 332 18 78 3 125 1 218 5 219 1 130 1 265 34 308 5 185 1 91 5 338 1 186 1 39 12 92 2 311 1 142 3 143 1 
195 1 320 1 197 1 154 2 155 1 64 1 112 1 246 1 67 1 71 1 72 2 21 4 332 4 219 1 265 8 308 1 185 1 91 1 338 1 39 2 142 1 143 1 230 1 
195 1 197 1 320 2 154 2 104 1 155 2 112 1 64 2 246 1 67 2 71 2 72 4 21 6 332 5 78 1 125 1 218 1 219 1 265 11 308 1 185 1 338 1 91 2 186 1 39 3 142 1 143 1 230 1 
195 1 197 1 320 3 50 1 104 2 154 3 155 3 106 1 112 1 64 3 246 1 287 2 67 1 71 3 72 6 249 1 21 9 332 10 78 2 125 1 218 1 219 1 265 19 308 3 185 1 91 3 338 1 39 4 92 1 268 1 142 1 143 1 230 1 
195 1 197 1 320 3 50 1 104 2 154 3 155 3 106 1 112 1 64 3 246 1 287 1 67 1 71 3 72 6 249 1 21 10 332 7 78 2 125 1 218 2 219 1 265 17 308 2 185 1 91 3 338 1 39 5 92 1 268 1 142 1 143 1 230 1 
195 1 320 1 197 1 154 2 155 1 64 1 112 1 246 1 67 1 71 1 72 2 21 4 332 4 219 1 265 8 308 1 185 1 91 1 338 1 39 2 142 1 143 1 230 1 
320 1 50 1 104 2 154 1 155 1 106 1 112 1 64 2 287 2 67 1 71 1 72 2 249 1 21 6 332 6 78 2 218 1 265 12 308 2 91 1 338 1 39 2 268 1 143 1 230 1 
195 1 197 1 320 4 50 1 104 2 154 3 155 4 106 1 112 1 64 3 246 1 287 1 67 1 71 4 72 8 249 1 21 10 332 8 78 2 125 1 218 2 219 1 265 18 308 2 185 1 91 4 338 1 39 5 92 2 268 1 142 1 143 1 230 1 
320 4 50 1 104 3 154 3 155 4 106 1 112 1 64 3 287 2 67 1 71 4 72 8 249 1 21 9 332 7 78 3 218 3 130 1 265 16 308 2 338 1 91 4 39 6 92 2 268 1 143 1 230 1 
332 4 195 3 197 2 218 3 219 1 154 3 265 7 308 1 39 6 64 1 246 1 142 3 21 3 
195 1 197 1 320 4 50 1 104 2 154 3 155 4 106 1 112 1 64 3 246 1 287 1 67 1 71 4 72 8 249 1 21 10 332 8 78 2 218 1 219 1 130 1 265 18 308 2 185 1 338 1 91 4 39 4 92 2 268 1 142 1 143 1 230 1 
332 4 195 1 320 2 197 1 218 1 219 1 154 2 155 2 265 8 308 1 185 1 91 2 64 1 39 3 246 1 92 1 72 4 71 2 142 1 21 4 
332 3 195 1 197 1 219 1 154 2 33 1 265 6 308 1 185 1 39 2 64 1 246 1 142 1 21 3 
332 2 78 1 125 1 320 1 218 1 154 1 104 1 155 1 265 4 308 1 91 1 39 2 64 1 287 1 72 2 71 1 21 2 
332 4 78 1 218 1 154 1 104 1 265 7 308 1 186 1 112 1 64 1 39 2 287 1 67 2 143 1 21 3 
195 2 197 1 320 2 7 1 104 2 154 5 155 2 208 1 64 3 112 2 246 1 287 2 67 2 72 4 71 2 21 11 332 12 78 2 218 4 219 1 296 1 265 23 308 3 185 1 186 1 91 2 39 9 92 2 142 2 
332 1 265 1 67 1 
265 1 112 1 21 1 
332 3 78 1 125 1 320 1 218 1 104 1 154 2 155 1 262 1 265 6 308 1 91 1 64 1 39 3 287 1 71 1 72 2 21 3 
320 1 50 1 104 2 154 1 155 1 106 1 112 1 64 2 287 2 67 1 71 1 72 2 249 1 21 6 332 6 78 2 218 1 265 12 308 2 91 1 338 1 39 2 268 1 143 1 230 1 
332 3 195 1 218 1 154 1 265 6 308 1 64 1 39 2 246 1 142 1 21 3 
332 2 195 1 197 1 320 1 218 1 219 1 154 1 155 1 208 1 265 3 91 1 39 2 92 1 72 2 71 1 142 1 21 1 
165 1 174 1 6 1 282 1 325 1 37 1 340 1 
165 1 291 1 77 1 126 1 174 1 6 1 85 1 282 1 325 1 37 1 340 1 312 1 
272 1 45 1 134 4 27 1 135 1 275 1 47 1 4 4 68 4 237 1 29 1 103 1 250 1 
272 2 319 1 27 1 98 1 4 2 47 1 134 2 339 1 113 1 189 1 68 2 314 1 41 1 250 1 
293 1 272 1 134 1 307 1 27 1 158 1 135 1 172 1 4 1 68 1 
167 1 272 1 134 2 45 1 27 1 286 1 47 1 4 2 68 2 131 1 250 1 
167 1 272 2 319 1 45 1 27 2 4 4 47 2 237 1 29 1 103 1 299 1 227 1 134 5 135 1 68 5 250 3 
167 1 22 1 272 2 319 1 45 1 27 2 4 4 47 2 237 1 29 1 103 1 299 1 134 5 135 1 68 5 250 3 
33 1 272 1 134 1 27 1 135 1 47 1 4 1 68 1 237 1 103 1 250 1 
272 1 27 1 174 1 47 1 4 1 258 1 134 1 304 1 135 1 113 1 68 1 250 1 20 1 19 1 191 1 
272 1 319 1 27 1 174 1 47 1 4 1 258 1 134 1 304 1 113 1 68 1 250 1 20 1 19 1 191 1 
272 1 319 1 27 1 174 1 47 1 4 1 258 1 157 1 134 1 113 1 68 1 250 1 20 1 19 1 191 1 
194 1 193 2 317 1 272 1 319 1 3 1 4 2 47 1 277 1 204 1 324 2 11 1 113 1 68 2 163 1 73 1 19 1 20 1 250 4 80 1 27 1 174 1 223 1 301 1 134 2 135 1 187 1 310 1 315 1 
193 2 194 1 317 1 272 1 319 1 146 1 27 1 275 1 47 1 4 3 277 1 223 1 324 2 301 1 134 3 135 1 187 1 113 1 68 3 73 1 315 1 250 4 
259 1 272 1 134 1 27 1 4 1 68 1 
167 1 292 1 272 3 45 1 27 2 201 1 4 6 47 2 131 1 299 1 259 1 227 1 134 7 135 2 327 1 113 1 189 1 68 7 41 1 331 1 250 3 
174 1 258 1 19 1 20 1 
193 3 194 2 271 1 233 1 146 1 147 1 4 1 277 1 324 3 242 2 209 1 326 2 58 1 60 1 68 1 70 1 73 1 250 2 79 1 171 1 217 2 223 1 178 2 301 1 134 1 135 1 139 1 315 1 
292 1 272 2 45 1 27 1 4 2 47 1 259 1 134 2 63 1 113 1 68 2 315 1 250 2 
272 1 27 1 174 1 47 1 4 1 258 1 157 1 134 1 135 1 113 1 68 1 250 1 20 1 19 1 191 1 
292 1 272 2 319 1 27 1 4 1 47 1 134 1 113 1 189 1 68 1 41 1 331 1 250 1 
174 1 175 1 5 1 99 1 118 1 190 1 102 1 
99 1 316 1 9 1 
306 1 175 1 99 1 102 1 
193 1 324 1 306 1 175 1 65 1 99 1 70 1 102 1 316 1 9 1 
252 1 318 1 232 1 97 1 200 1 51 1 228 1 179 1 
75 1 122 1 169 1 252 1 318 1 97 4 28 1 2 2 200 4 51 3 129 1 179 2 263 1 228 2 
252 1 232 1 318 1 97 2 198 1 2 1 200 2 51 1 179 1 116 1 329 1 228 1 
75 1 252 1 169 2 232 1 318 1 97 3 200 3 51 1 129 2 179 1 228 1 95 1 
231 1 234 1 62 2 51 2 
252 1 318 1 232 1 333 1 97 1 200 1 
252 1 318 1 232 1 196 1 97 2 2 1 200 2 51 1 228 1 179 1 
53 1 
252 1 318 1 232 1 97 1 200 1 51 1 228 1 179 1 
252 1 318 1 232 1 196 1 97 3 2 1 200 3 51 1 129 1 228 1 179 1 
122 1 263 1 28 1 51 1 
51 1 179 1 
33 1 51 1 228 1 179 1 
252 1 318 1 97 1 200 1 51 1 228 1 179 1 
200 1 222 1 8 1 
75 1 252 1 169 1 232 1 318 1 97 3 200 3 51 1 129 2 179 1 330 1 228 1 
252 1 318 1 97 2 110 1 2 1 200 2 51 1 228 1 179 1 
122 1 252 1 293 1 232 1 318 1 97 1 256 1 172 1 200 1 51 1 264 1 
252 1 318 1 232 1 97 1 200 1 51 1 179 1 
252 1 318 1 232 1 97 1 200 1 228 1 179 2 
96 1 252 2 318 2 232 1 206 1 26 1 97 2 200 2 51 1 179 1 
42 1 122 1 252 1 232 1 318 1 196 1 97 3 28 1 2 2 200 3 51 2 179 1 228 1 
293 2 252 1 232 1 318 1 97 2 172 1 2 1 200 2 51 1 179 1 307 1 264 1 328 1 228 1 229 1 
122 1 252 2 251 1 232 1 318 2 97 4 28 1 2 2 200 4 51 2 179 1 110 1 228 1 

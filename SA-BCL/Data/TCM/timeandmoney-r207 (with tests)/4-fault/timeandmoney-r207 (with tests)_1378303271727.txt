#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 200 2 358 1 134 1 235 2 326 3 150 1 246 1 76 2 268 3 334 1 277 1 195 1 
92 1 0 6 20 1 199 1 200 2 358 4 51 1 134 1 362 2 326 9 246 1 364 1 247 2 76 2 328 2 226 1 277 2 334 1 209 1 167 2 227 1 283 1 191 1 235 5 150 3 154 1 268 9 195 1 
92 1 0 6 20 1 199 1 200 2 358 4 51 1 134 1 362 2 326 9 246 1 364 1 247 2 76 2 328 2 226 1 277 2 334 1 209 1 167 2 227 1 283 1 191 1 235 5 150 3 154 1 268 9 195 1 
92 1 0 7 20 1 199 1 200 2 358 5 51 1 134 1 362 2 326 10 246 1 364 1 247 2 76 2 328 2 226 1 277 2 334 1 209 1 167 2 227 1 283 1 191 1 235 6 150 4 154 1 268 10 195 1 
92 1 0 4 20 1 199 1 200 2 358 3 51 1 134 1 362 2 326 7 246 1 364 1 247 1 76 2 328 2 277 2 334 1 209 1 167 2 227 1 283 1 191 1 235 4 150 2 154 1 268 7 195 1 
0 3 199 1 200 1 191 1 358 2 134 1 362 1 235 3 150 1 326 4 247 2 76 1 328 1 226 1 268 4 334 1 195 1 167 1 
283 1 310 1 200 1 51 1 134 1 235 1 326 2 76 1 153 1 328 1 42 1 268 2 334 1 277 1 195 1 167 1 
20 1 0 7 199 1 191 1 200 2 358 4 134 1 362 1 312 1 13 1 235 5 326 9 150 3 364 1 246 1 247 2 76 2 328 1 226 1 268 9 334 1 277 1 195 1 167 1 
20 1 0 7 199 1 191 1 200 2 358 4 134 1 362 1 312 1 13 1 235 5 326 9 150 3 364 1 246 1 247 2 76 2 328 1 226 1 268 9 334 1 277 1 195 1 167 1 
114 1 11 1 95 1 35 1 233 1 346 1 194 1 378 1 77 1 225 1 274 1 217 1 319 1 278 1 
161 1 
84 1 315 1 114 2 161 1 244 1 225 2 274 1 320 1 
83 2 114 5 85 2 244 1 296 1 32 1 376 2 215 1 123 1 204 1 181 1 115 1 315 2 161 1 88 1 225 5 274 2 320 1 208 1 
161 1 248 1 320 1 
161 1 6 1 213 2 
346 1 378 2 95 2 319 2 35 2 278 2 233 2 292 1 
113 1 44 2 356 1 131 2 3 2 95 2 53 1 99 1 98 1 101 1 102 1 273 1 165 2 367 1 117 1 278 3 254 1 285 1 286 1 35 2 233 2 12 1 292 1 106 1 346 1 378 2 240 1 262 1 110 1 112 2 68 1 155 1 319 3 382 1 269 1 129 1 91 1 
346 1 194 1 378 1 11 1 95 1 217 1 319 1 35 1 278 1 233 1 
114 1 158 1 95 2 161 1 77 1 225 1 182 1 278 2 309 1 29 1 11 2 35 1 233 1 346 1 194 1 378 1 125 1 317 1 217 1 319 2 320 1 
114 2 309 1 29 1 11 1 95 1 35 1 233 1 161 1 378 1 125 1 225 2 182 1 320 1 319 1 278 1 
315 1 114 1 38 1 225 1 274 1 
315 1 114 2 161 1 244 1 162 1 225 2 274 1 320 1 
315 1 114 1 225 1 
46 1 95 2 35 1 233 1 292 2 378 1 319 2 278 2 166 1 
116 1 341 1 64 1 
44 1 339 1 285 1 356 1 292 1 240 1 262 1 112 1 155 1 68 1 319 1 165 1 367 1 382 1 278 1 129 1 
248 1 292 1 
378 3 95 3 35 1 175 1 319 3 278 3 233 3 292 1 
378 1 11 1 95 1 217 1 319 1 278 1 233 1 
378 1 46 1 11 1 95 1 319 1 35 1 278 1 233 1 166 1 
113 1 114 1 44 1 356 1 131 2 21 1 3 1 95 3 53 1 99 1 98 1 297 1 101 1 273 1 225 1 182 1 367 1 165 1 117 1 278 4 166 1 309 1 285 1 286 1 29 1 11 1 35 2 233 3 292 1 106 1 151 1 346 1 378 3 240 1 262 1 125 1 112 1 68 1 155 1 382 1 319 4 175 1 129 1 91 1 
177 1 158 1 19 1 11 1 95 2 233 1 292 1 378 1 175 1 319 2 278 2 
114 1 309 1 29 1 21 1 11 1 95 3 35 1 297 1 233 3 161 1 378 3 225 1 125 1 332 1 182 1 175 2 319 3 278 3 166 1 
95 2 341 1 35 1 233 2 64 1 378 2 175 1 319 2 278 2 166 1 
44 1 285 1 356 1 292 1 262 1 240 1 112 1 155 1 68 1 319 1 165 1 367 1 382 1 278 1 129 1 
44 1 285 1 356 1 292 1 66 1 262 1 240 1 112 1 155 1 68 1 319 1 165 1 382 1 278 1 27 1 
113 1 219 1 132 1 131 2 97 1 3 4 53 1 99 1 298 1 25 1 299 1 101 1 102 2 116 2 117 1 370 1 286 1 255 1 231 1 341 2 121 1 64 2 106 2 18 1 
369 1 378 1 11 1 182 1 95 1 319 1 278 1 233 1 
44 1 285 1 356 1 95 1 297 1 233 1 64 1 378 1 240 1 262 1 112 1 68 1 155 1 382 1 175 1 319 2 165 1 367 1 129 1 278 2 
177 1 158 1 19 1 11 1 95 5 35 1 297 1 233 4 292 1 378 4 80 1 175 2 319 5 278 5 60 1 166 1 
369 1 378 2 11 1 95 2 217 1 319 2 278 2 233 2 
338 1 264 1 259 1 
243 1 152 1 178 1 264 2 156 1 259 2 
264 1 259 1 
264 1 259 1 
178 1 156 1 
178 1 156 1 
178 1 156 1 
282 1 264 1 259 1 
282 1 264 1 259 1 
282 1 264 1 259 1 
67 1 264 1 259 1 
67 1 264 1 259 1 
67 1 264 1 259 1 
7 2 81 1 243 1 197 2 114 2 220 1 198 3 287 2 361 1 36 1 16 1 259 2 344 1 161 1 261 2 57 2 301 1 264 2 225 2 
197 1 323 1 114 1 198 1 49 1 95 2 324 1 137 1 365 1 57 1 225 1 144 1 278 2 7 1 81 1 9 1 338 1 233 2 292 1 259 1 261 1 378 2 264 1 319 2 
8 2 153 1 103 1 362 1 167 2 
328 1 362 1 167 1 
328 1 153 1 167 1 
8 1 100 1 153 1 103 1 362 2 167 3 
242 1 8 1 153 1 103 1 362 1 167 2 
322 1 114 5 219 1 244 1 48 1 132 1 47 2 97 1 135 2 221 1 4 1 298 1 324 1 136 1 204 1 137 1 181 2 161 2 225 5 6 1 274 4 276 1 279 1 83 1 9 1 85 1 213 3 376 1 123 3 347 2 315 1 320 1 
322 2 114 9 219 3 244 1 132 3 97 3 135 6 4 3 298 3 136 1 204 1 115 1 181 6 161 5 225 9 143 1 6 3 274 7 276 2 61 1 185 1 83 2 9 4 85 2 213 9 232 1 376 2 123 8 347 6 315 6 87 1 38 5 348 5 128 1 320 1 
322 1 114 3 219 1 132 1 47 1 97 1 221 1 135 2 4 1 298 1 115 1 181 2 161 3 225 3 6 2 274 2 276 1 279 1 83 1 9 1 85 1 213 4 376 1 123 3 347 2 320 1 
322 1 114 4 219 2 132 2 47 2 97 2 135 4 221 1 4 2 298 2 115 1 181 4 161 4 225 4 6 3 276 1 274 3 279 1 61 1 83 1 9 2 85 1 213 7 376 1 123 5 347 4 87 1 320 1 128 1 
327 1 
240 1 248 1 24 1 
240 1 263 1 
240 1 68 1 
377 1 240 3 356 1 68 1 24 2 281 1 
240 1 356 1 68 1 
240 1 145 1 
307 1 188 1 159 1 255 3 97 1 3 7 179 1 298 1 272 1 193 2 106 3 18 2 172 1 79 1 102 4 41 1 26 1 43 1 
113 1 159 1 219 3 131 2 132 3 96 4 3 31 97 4 179 5 4 3 298 4 272 2 205 3 101 1 79 1 102 16 117 1 307 2 188 1 86 1 286 1 255 10 170 1 257 1 193 3 122 1 106 15 17 1 313 1 172 2 18 5 41 2 43 1 267 1 
196 1 113 2 131 4 97 1 3 9 179 1 298 1 272 1 101 2 102 5 79 1 117 2 284 1 307 1 188 1 286 2 255 4 193 2 106 4 313 1 172 1 18 3 41 1 43 1 
307 1 188 1 159 1 255 3 97 1 3 7 179 1 298 1 272 1 193 2 106 3 18 2 172 1 79 1 102 4 41 1 43 1 
307 1 188 1 159 1 255 3 97 1 3 7 179 1 298 1 272 1 193 2 106 3 18 2 172 1 79 1 102 4 41 1 43 1 
44 1 200 1 363 2 326 1 76 1 165 1 59 1 277 2 285 1 190 2 258 1 342 2 237 1 240 1 293 1 112 1 40 1 265 1 155 1 68 1 268 1 382 1 321 1 
44 1 45 1 200 1 362 1 363 1 326 1 100 1 76 1 328 1 329 1 366 1 165 1 334 1 277 1 167 2 190 1 288 1 30 1 216 1 342 1 171 1 153 1 112 1 155 1 268 1 382 1 
44 1 45 1 0 1 200 1 134 1 362 1 363 1 326 2 100 1 76 1 328 1 329 1 366 1 165 1 334 1 277 1 304 1 167 2 190 1 30 1 216 1 342 1 235 1 171 1 153 1 112 1 155 1 268 2 382 1 195 1 
44 1 0 2 200 1 134 1 362 1 363 1 326 3 100 1 76 1 328 1 329 1 366 1 165 1 277 1 167 2 371 1 190 1 288 1 30 1 216 1 342 1 235 1 171 1 153 1 112 1 265 1 155 1 268 3 382 1 195 1 
44 1 0 2 134 1 362 1 363 1 326 2 100 1 328 1 366 1 165 1 277 1 167 2 371 1 190 1 288 1 30 1 342 1 235 1 171 1 153 1 112 1 155 1 268 2 382 1 195 1 
127 1 
218 2 130 2 44 2 95 1 181 2 140 2 224 1 225 5 6 2 182 1 275 2 276 1 278 1 285 2 10 1 289 1 11 1 148 4 149 1 240 1 293 1 112 2 68 1 155 1 70 1 355 1 114 5 158 1 244 3 357 1 22 1 204 1 75 1 161 2 163 1 165 2 28 1 252 2 305 2 83 1 85 1 309 1 29 1 213 2 37 2 376 1 123 2 314 1 315 6 40 1 125 1 317 1 320 1 382 1 319 1 
114 3 158 1 244 1 95 1 224 1 225 3 182 1 163 1 275 1 278 1 84 1 309 1 10 1 29 1 11 1 148 2 314 1 315 2 125 1 317 1 319 1 70 1 
114 2 309 1 158 1 29 1 10 1 11 1 148 3 95 1 314 1 140 1 224 1 125 1 225 2 182 1 163 1 317 1 319 1 278 1 70 1 
114 3 130 1 158 1 244 1 95 1 224 1 140 1 225 3 182 1 163 1 275 1 278 1 84 1 309 1 10 1 29 1 11 1 148 3 314 1 315 2 125 1 317 1 319 1 70 1 
114 3 130 2 158 1 244 1 95 2 138 1 161 1 224 1 77 1 225 3 182 1 163 1 275 2 278 2 84 1 309 1 10 1 29 1 11 2 148 2 35 1 233 1 314 1 346 1 315 3 194 1 378 1 125 1 317 1 352 1 217 1 320 1 319 2 70 1 
218 2 130 2 95 1 181 1 224 1 140 2 225 4 182 1 6 2 275 2 278 1 10 1 11 1 149 1 148 4 70 1 114 4 158 1 244 2 22 1 204 1 161 2 163 1 28 1 252 2 305 2 83 1 309 1 85 1 29 1 213 2 376 1 37 2 123 1 314 1 315 4 125 1 317 1 319 1 320 1 
218 2 130 2 114 4 158 1 244 2 360 1 95 1 22 1 204 1 181 1 161 1 140 2 224 1 225 4 6 2 182 1 163 1 275 2 333 1 278 1 252 2 305 2 83 1 309 1 85 1 10 1 29 1 11 1 149 1 148 4 37 2 376 1 123 1 314 1 315 4 236 1 125 1 317 1 320 1 319 1 70 1 
218 2 130 2 114 4 158 1 244 2 360 1 95 1 22 1 204 1 181 1 161 1 140 2 224 1 225 4 6 2 182 1 163 1 275 2 333 1 278 1 252 2 305 2 83 1 309 1 85 1 10 1 29 1 11 1 149 1 148 4 37 2 376 1 123 1 314 1 315 4 236 1 125 1 317 1 320 1 319 1 70 1 
130 2 114 4 158 1 244 2 360 1 95 1 22 1 201 1 23 2 204 1 181 1 161 1 140 2 224 1 225 4 182 1 163 1 275 2 278 1 305 2 83 1 309 1 85 1 10 1 29 1 11 1 148 4 213 2 37 2 376 1 123 1 107 1 314 1 315 4 109 1 125 1 126 2 317 1 320 1 319 1 70 1 
218 2 114 4 130 3 158 1 244 2 360 1 95 1 22 1 204 1 181 1 161 1 224 1 140 3 225 4 6 2 182 1 163 1 275 3 333 1 278 1 252 2 305 2 83 1 85 1 309 1 10 1 29 1 11 1 149 1 148 5 37 2 376 1 123 1 314 1 315 5 236 1 125 1 317 1 352 1 320 1 319 1 70 1 
218 2 114 4 130 3 158 1 244 2 360 1 95 1 22 1 204 1 181 1 161 1 224 1 140 3 225 4 6 2 182 1 163 1 275 3 333 1 278 1 252 2 305 2 83 1 85 1 309 1 10 1 29 1 11 1 149 1 148 5 37 2 376 1 123 1 314 1 315 5 236 1 125 1 317 1 352 1 320 1 319 1 70 1 
130 2 95 1 181 1 224 1 140 2 225 4 182 1 275 2 278 1 10 1 11 1 148 4 107 1 70 1 114 4 158 1 244 2 22 1 23 2 204 1 161 1 163 1 28 1 305 2 83 1 309 1 85 1 29 1 213 2 376 1 37 2 123 1 314 1 315 4 125 1 126 2 317 1 319 1 320 1 
113 2 44 8 131 4 95 1 3 2 53 2 99 2 5 1 54 1 101 2 102 1 273 1 250 1 165 7 278 1 117 2 304 1 370 1 285 2 286 2 288 1 233 1 343 1 234 1 106 1 378 1 240 3 110 1 293 1 112 8 40 1 294 1 155 2 68 2 241 1 319 1 175 1 382 2 269 2 
113 1 219 1 131 2 132 1 95 1 97 1 3 3 53 1 99 1 4 1 298 1 101 1 56 1 102 1 116 1 117 1 278 1 166 1 286 1 311 1 255 1 341 1 35 1 233 1 64 1 106 2 378 1 18 1 319 1 
113 1 131 2 97 1 3 6 53 1 99 1 298 1 101 1 248 1 79 1 102 3 116 1 117 1 370 1 307 1 188 1 286 1 255 2 341 1 193 1 64 1 292 2 106 3 18 2 41 1 43 1 
113 2 219 2 131 4 132 1 96 3 3 14 97 2 179 1 53 1 99 2 4 2 298 1 205 3 101 2 55 1 56 1 273 1 102 8 116 11 117 2 86 1 62 1 286 2 255 2 341 4 257 1 63 1 292 1 64 11 106 6 110 1 18 1 380 1 
113 1 44 1 356 1 131 2 95 1 3 2 53 1 99 1 297 1 101 1 56 1 78 1 273 1 102 1 367 1 165 1 278 2 117 1 82 1 104 1 285 1 339 1 286 1 341 1 233 1 292 1 106 1 378 1 240 1 262 1 110 1 112 1 68 1 155 1 382 1 319 2 175 1 129 1 
44 3 219 2 131 6 132 2 1 2 95 1 3 20 97 3 53 3 179 4 99 3 4 2 101 3 56 1 273 1 102 10 278 3 188 1 285 1 286 3 288 1 192 2 341 7 233 1 193 1 292 2 64 7 106 10 345 2 239 1 240 2 110 1 18 4 112 3 155 2 68 2 69 1 113 3 356 2 298 3 297 1 79 1 116 7 164 1 165 3 367 2 117 3 307 1 255 8 378 1 262 2 41 1 43 1 266 2 175 1 319 3 382 2 129 2 91 2 
370 1 113 1 286 1 219 1 131 2 255 1 3 2 97 1 179 1 341 1 53 1 99 1 121 1 64 1 101 1 102 2 116 1 117 1 
370 1 113 1 286 1 131 2 132 1 255 1 3 2 231 1 341 1 53 1 99 1 298 1 64 1 106 2 101 1 18 1 116 1 117 1 
113 1 219 1 131 2 132 1 97 1 3 4 53 1 179 1 4 1 99 1 298 1 101 1 102 2 116 2 117 1 370 1 286 1 255 2 341 2 64 2 106 2 18 1 
113 1 286 1 219 1 131 2 255 1 3 2 97 1 179 1 341 1 53 1 99 1 121 1 64 1 5 1 101 1 102 2 116 1 117 1 
113 1 286 1 131 2 132 1 255 1 3 2 231 1 341 1 53 1 99 1 298 1 64 1 5 1 106 2 101 1 18 1 116 1 117 1 
113 1 219 1 131 2 132 1 97 1 3 4 53 1 179 1 4 1 99 1 298 1 5 1 101 1 102 2 116 2 117 1 286 1 255 2 341 2 64 2 106 2 18 1 
113 1 286 1 219 1 132 1 131 2 255 2 97 1 3 4 179 1 341 2 53 1 99 1 4 1 298 1 64 2 106 2 101 1 18 1 102 2 116 2 117 1 
113 1 44 1 356 1 131 2 3 2 53 1 99 1 101 1 102 1 273 1 367 1 165 1 278 1 117 1 285 1 286 1 292 1 106 1 262 1 240 1 110 1 112 1 68 1 155 1 382 1 319 1 129 1 91 1 
113 1 44 1 356 1 131 2 3 2 53 1 99 1 101 1 102 1 273 1 165 1 27 1 278 1 117 1 285 1 286 1 292 1 108 1 106 1 66 1 262 1 240 1 110 1 112 1 68 1 155 1 382 1 319 1 
113 1 219 1 131 2 132 1 97 1 3 4 53 1 179 1 4 1 99 1 298 1 101 1 56 1 102 2 116 2 117 1 286 1 255 2 341 2 64 2 106 2 18 1 
113 1 44 1 219 1 356 1 132 1 131 2 3 4 97 1 179 1 53 1 99 1 4 1 298 1 101 1 102 2 116 2 367 1 165 1 278 1 117 1 304 1 286 1 255 2 341 2 64 2 106 2 262 1 240 1 18 1 112 1 266 1 155 1 68 1 382 1 319 1 129 1 91 1 
113 1 219 1 132 1 131 2 95 1 97 1 3 3 179 1 53 1 99 1 4 1 298 1 101 1 56 1 102 2 116 1 117 1 278 1 166 1 286 1 255 1 341 1 35 1 214 1 233 1 64 1 106 1 378 1 319 1 
295 1 113 2 93 1 219 3 131 4 132 3 96 2 3 19 97 3 179 3 4 3 298 3 205 1 206 1 101 2 102 9 117 2 147 1 373 1 284 1 86 1 286 2 118 1 255 6 340 2 257 1 15 1 106 10 18 3 176 2 
295 2 113 3 93 2 219 3 131 6 132 2 3 26 96 2 97 3 179 2 4 3 298 2 205 2 139 1 206 1 101 3 102 14 303 1 117 3 147 1 284 1 86 2 286 3 255 4 340 1 290 1 15 1 106 12 313 2 238 1 18 2 174 1 381 1 176 4 
93 2 219 4 132 4 131 6 97 5 3 41 96 4 179 4 4 4 139 1 101 3 102 20 147 1 284 1 188 1 286 3 290 1 340 1 193 1 15 1 106 21 238 1 18 4 113 3 295 1 298 5 205 3 206 1 79 1 303 1 117 3 307 1 373 1 86 3 255 8 257 1 313 1 316 1 174 1 41 1 43 1 381 1 176 4 
295 1 113 4 93 2 219 4 131 8 132 3 96 4 3 38 97 5 179 3 4 4 298 4 205 3 139 1 206 1 101 4 79 1 102 20 303 1 117 4 147 1 373 1 307 1 284 1 188 1 86 3 286 4 255 7 340 1 290 1 257 1 15 1 193 1 106 18 313 2 316 1 238 1 18 4 174 1 41 1 43 1 381 1 176 4 
295 1 113 2 93 1 219 7 131 4 132 7 96 4 3 52 97 8 179 7 4 7 298 8 205 4 139 1 206 1 101 2 55 2 79 1 102 27 303 1 117 2 147 1 307 1 284 1 188 1 86 2 286 2 255 14 340 1 290 1 257 2 15 1 193 1 106 25 313 1 238 1 18 7 174 1 41 1 43 1 381 1 176 4 
74 1 7 1 344 1 243 1 197 1 261 1 57 1 264 1 361 1 259 1 
338 1 49 1 
7 1 197 1 261 1 374 1 57 1 264 1 14 1 335 1 259 1 
81 1 7 1 243 1 197 1 114 1 220 1 198 2 287 1 361 1 36 1 259 1 344 1 161 1 261 1 57 1 301 1 225 1 264 1 
81 1 7 1 243 1 197 1 114 1 220 1 198 2 287 1 361 1 36 1 259 1 344 1 161 1 261 1 57 1 301 1 225 1 264 1 
81 1 7 1 243 1 197 1 114 1 220 1 198 2 287 1 361 1 36 1 259 1 344 1 161 1 261 1 57 1 301 1 225 1 264 1 
282 1 152 1 291 1 
282 1 152 1 291 1 
67 1 183 1 
152 1 67 1 183 1 
365 1 144 1 
197 1 323 1 114 1 198 1 49 1 95 2 324 1 137 1 365 1 57 1 225 1 144 1 274 1 278 2 336 1 7 1 9 1 338 1 287 1 36 1 233 2 292 1 259 1 261 1 378 2 264 1 319 2 
282 1 291 1 
152 1 67 1 183 1 
113 1 44 2 131 2 95 2 3 2 53 1 99 1 54 1 141 1 101 1 56 1 102 1 273 1 165 2 278 2 117 1 368 1 286 1 375 1 212 1 343 1 106 1 240 1 39 1 110 1 112 2 155 1 68 1 382 1 319 2 269 2 
44 1 285 1 258 1 342 1 240 1 293 1 112 1 40 1 58 1 155 1 68 1 382 1 165 1 280 1 
306 1 44 1 288 1 30 1 362 1 216 1 342 1 100 1 328 1 153 1 90 1 112 1 366 1 155 1 165 1 382 1 280 1 167 2 
306 1 44 2 288 1 30 1 362 1 216 1 342 1 100 1 328 1 153 1 90 1 112 2 366 1 155 1 382 1 165 2 280 1 304 1 167 2 
44 1 288 1 30 1 52 1 362 1 216 1 342 1 100 1 328 1 153 1 90 1 112 1 366 1 155 1 165 1 382 1 167 2 
256 1 
83 1 85 1 296 1 376 1 204 1 123 1 181 1 161 1 208 1 320 1 
187 1 219 2 132 2 1 1 97 2 135 5 213 10 4 2 298 2 222 2 123 5 181 5 347 5 161 5 6 5 
114 1 315 1 161 1 244 1 225 1 320 1 
355 1 44 4 114 3 244 2 204 1 115 1 181 2 75 2 225 3 276 2 165 4 228 1 83 2 85 2 285 2 289 1 120 1 376 2 123 2 315 4 89 1 240 1 293 1 112 4 40 1 155 1 68 1 382 1 354 2 
123 1 181 1 161 1 248 1 296 1 320 1 208 1 
218 1 114 1 244 1 204 1 181 1 161 2 225 1 6 1 252 1 83 1 85 1 149 1 213 1 376 1 123 1 315 1 320 1 
44 3 94 1 219 2 132 2 271 2 1 2 97 2 135 6 4 2 222 2 181 8 225 5 6 6 145 2 276 2 281 1 229 2 187 2 337 2 285 1 347 6 240 10 112 3 155 4 68 3 354 1 114 5 157 2 356 3 244 3 296 1 24 2 298 2 204 4 75 1 161 8 208 1 165 3 251 1 304 1 83 4 85 4 211 2 29 2 213 12 34 1 376 4 123 9 315 5 89 1 263 3 318 2 320 2 382 3 
114 1 244 1 219 2 132 2 96 1 97 2 135 5 4 2 298 2 222 2 204 2 205 1 181 5 75 1 139 1 161 5 225 1 331 1 6 3 276 1 303 1 184 1 83 2 187 1 85 2 86 1 213 6 376 2 123 8 315 1 347 5 238 1 174 1 381 1 320 2 
114 1 97 2 95 1 298 1 222 2 204 1 181 2 77 1 207 1 225 1 79 1 278 1 83 1 187 1 307 1 85 1 11 1 35 1 376 1 233 1 123 2 346 1 236 1 194 1 378 1 41 1 217 1 319 1 
113 1 44 1 356 1 131 2 3 1 95 2 53 1 98 1 99 1 101 1 273 1 165 1 367 1 117 1 278 3 285 1 286 1 35 2 233 2 292 1 106 1 346 1 378 2 262 1 240 1 112 1 155 1 68 1 319 3 382 1 129 1 91 1 
83 1 85 1 213 4 135 2 376 1 193 1 204 1 123 1 181 2 347 2 75 1 161 4 6 2 276 1 320 2 
344 1 365 1 261 1 57 1 72 1 
189 1 261 1 57 1 
189 1 261 1 57 1 
189 1 261 1 57 1 
261 1 57 1 359 1 
261 1 57 1 359 1 
261 1 57 1 359 1 
261 1 57 1 
264 1 259 1 
113 1 284 1 307 2 286 1 131 2 255 5 3 10 97 2 179 2 298 2 106 5 101 1 18 3 207 1 102 5 79 1 41 2 117 1 
113 1 284 1 286 1 219 1 131 2 255 1 97 1 3 2 179 1 101 1 102 2 117 1 
113 1 284 1 286 1 219 1 132 1 131 2 255 2 97 1 3 4 179 1 4 1 298 1 106 2 101 1 18 1 102 2 117 1 
113 3 373 1 284 1 307 1 308 1 286 3 131 6 255 2 3 3 179 1 106 2 313 1 101 3 18 1 102 1 41 1 117 3 
113 5 219 3 131 10 132 3 96 4 3 34 97 5 179 5 4 3 298 5 205 3 101 5 79 2 102 16 117 5 307 3 373 1 284 1 188 1 308 1 86 1 286 5 255 12 170 1 257 1 193 1 106 18 313 2 17 1 65 1 18 7 41 3 43 1 267 1 
113 1 131 2 97 1 3 8 96 1 298 1 205 1 101 1 102 4 79 1 117 1 284 1 307 1 188 1 86 1 286 1 255 2 193 1 106 4 18 2 41 1 43 1 381 1 
113 2 219 1 131 4 3 11 96 2 97 2 179 1 4 1 298 1 205 1 101 2 79 1 102 6 117 2 307 1 284 1 188 1 86 1 286 2 255 3 257 1 193 1 106 5 65 1 18 2 41 1 43 1 381 1 
113 3 219 2 131 6 132 2 3 19 96 1 97 3 179 1 4 2 298 3 205 1 139 1 101 3 79 1 102 9 303 1 117 3 307 1 284 1 188 1 86 1 286 3 255 4 193 1 106 10 65 1 313 1 238 1 18 3 174 1 41 1 43 1 381 1 
113 3 219 2 131 6 132 1 3 17 96 1 97 3 179 2 4 2 298 2 205 1 139 1 101 3 79 1 102 10 303 1 117 3 307 1 284 1 188 1 86 1 286 3 255 5 193 1 106 7 65 1 313 1 238 1 18 3 174 1 41 1 43 1 381 1 
113 1 131 2 97 1 3 8 96 1 298 1 205 1 101 1 102 4 79 1 117 1 284 1 307 1 188 1 86 1 286 1 255 2 193 1 106 4 18 2 41 1 43 1 381 1 
113 1 219 2 131 2 132 2 3 12 96 1 97 2 179 1 4 2 298 2 205 1 139 1 101 1 102 6 303 1 117 1 284 1 86 1 286 1 255 2 106 6 238 1 18 1 174 1 381 1 
113 4 219 2 131 8 132 1 3 18 96 1 97 3 179 2 4 2 298 2 205 1 139 1 101 4 79 1 102 10 303 1 117 4 307 1 284 1 188 1 86 1 286 4 255 5 193 1 106 8 65 1 313 2 238 1 18 3 174 1 41 1 43 1 381 1 
113 4 219 3 131 8 132 2 3 16 96 1 97 3 179 3 4 3 298 2 205 1 139 1 101 4 102 9 303 1 117 4 284 1 373 1 86 1 286 4 255 6 106 7 313 2 238 1 18 3 174 1 381 1 
307 3 188 2 255 6 3 7 97 1 179 3 298 1 106 4 18 3 79 1 102 3 41 3 43 1 
113 4 219 2 131 8 132 1 3 18 96 1 97 3 179 1 4 2 298 2 205 1 139 1 101 4 79 1 102 10 303 1 117 4 307 1 284 1 373 1 188 1 86 1 286 4 255 4 193 1 106 8 313 2 238 1 18 3 174 1 41 1 43 1 381 1 
113 2 307 1 188 1 286 2 131 4 255 3 97 1 3 8 179 1 298 1 193 1 106 4 313 1 101 2 18 2 79 1 102 4 41 1 43 1 117 2 
106 3 307 1 188 1 248 1 18 2 102 3 79 1 255 2 41 1 3 6 97 1 43 1 298 1 193 1 
113 1 286 1 219 1 132 1 131 2 255 2 97 1 3 4 179 1 4 1 298 1 106 2 65 1 101 1 18 1 102 2 117 1 
86 1 219 1 132 1 255 2 96 2 3 7 97 1 179 1 4 1 298 1 257 1 106 4 205 1 18 1 102 3 
113 2 219 2 132 2 131 4 97 3 3 23 96 2 179 4 4 2 298 3 205 2 101 2 55 1 79 1 102 11 117 2 307 2 188 1 308 1 62 1 286 2 255 9 257 1 193 1 106 12 313 2 18 5 41 2 43 1 
106 1 3 1 96 1 
205 1 102 1 3 1 
113 1 286 1 219 1 131 2 132 1 255 3 1 1 3 6 97 1 179 1 4 1 298 1 106 3 65 1 101 1 18 2 102 3 117 1 
113 1 219 2 131 2 132 2 3 12 96 1 97 2 179 1 4 2 298 2 205 1 139 1 101 1 102 6 303 1 117 1 284 1 86 1 286 1 255 2 106 6 238 1 18 1 174 1 381 1 
307 1 255 2 97 1 3 6 179 1 298 1 106 3 18 1 79 1 102 3 41 1 
113 1 307 1 188 1 308 1 286 1 131 2 255 2 3 3 179 1 106 2 313 1 101 1 18 1 102 1 41 1 43 1 117 1 
177 1 158 1 19 1 11 1 95 1 202 1 292 1 319 1 278 1 
270 1 177 1 158 1 19 1 11 1 95 1 203 1 202 1 292 1 379 1 350 1 351 1 319 1 278 1 
253 1 44 4 285 1 240 1 293 1 112 4 40 1 155 1 68 1 165 4 382 1 304 1 210 1 
71 1 44 2 356 1 50 1 300 1 142 1 240 1 112 2 68 1 155 2 69 1 165 2 382 1 354 1 
44 1 285 1 328 1 153 1 30 1 112 1 155 1 382 1 165 1 167 1 
44 2 288 1 212 1 343 1 240 1 112 2 68 1 155 1 165 2 382 1 304 1 
253 1 44 5 285 1 343 1 234 1 240 3 293 1 40 1 112 5 68 2 155 2 165 4 250 1 382 2 304 1 354 1 
253 1 44 5 285 1 343 1 234 1 240 3 293 1 111 1 40 1 112 5 68 2 155 2 165 4 382 2 304 1 354 1 
44 1 285 1 240 1 248 1 293 1 40 1 112 1 155 1 68 1 382 1 165 1 
44 1 285 1 356 1 95 1 233 1 292 1 378 1 240 1 262 1 112 1 68 1 155 1 175 1 319 2 165 1 382 1 278 2 129 1 
44 1 211 1 356 2 11 1 95 2 233 1 292 1 378 2 240 3 262 1 125 1 112 1 182 1 145 1 68 2 155 1 175 1 319 2 165 1 382 1 278 2 129 1 354 1 
44 2 356 2 95 2 182 1 145 1 165 2 27 1 278 2 210 1 211 1 11 1 233 1 292 1 378 2 262 1 240 3 112 2 125 1 155 1 68 2 382 1 319 2 175 1 354 1 
44 3 114 2 356 1 24 1 73 1 161 1 225 2 145 1 165 3 210 1 372 1 211 1 285 1 29 1 315 1 240 4 263 1 112 3 155 1 68 1 382 1 320 1 354 1 
114 2 44 3 211 1 285 1 29 1 356 1 24 1 315 1 161 1 240 4 225 2 112 3 263 1 145 1 68 1 155 1 318 1 320 1 165 3 382 1 210 1 354 1 
44 1 112 1 294 1 155 1 382 1 165 1 
71 1 44 7 285 2 356 1 288 1 343 1 234 1 223 1 300 1 240 3 112 7 294 1 68 2 155 3 250 1 241 1 165 6 382 2 269 1 304 1 281 1 
113 2 44 1 356 1 131 4 3 6 97 1 95 1 53 2 99 2 298 1 101 2 56 1 102 3 79 1 116 1 165 1 367 1 278 2 117 2 368 1 304 1 307 1 188 1 286 2 255 2 192 1 341 1 233 1 193 1 64 1 292 2 106 3 378 1 240 1 262 1 18 2 112 1 41 1 43 1 266 1 68 1 155 1 382 1 319 2 175 1 129 1 91 1 
44 1 114 3 244 1 296 1 271 1 24 1 204 2 181 1 161 1 225 3 274 1 208 1 165 1 83 2 229 1 337 1 85 2 285 1 29 1 376 2 123 1 315 2 89 1 240 2 112 1 263 1 318 1 320 1 
44 2 356 1 24 1 240 2 112 2 294 1 68 1 155 2 165 2 251 1 382 1 304 1 281 1 
44 1 285 1 356 1 95 1 233 1 292 1 378 1 240 1 262 1 112 1 68 1 155 1 175 1 319 2 165 1 382 1 278 2 27 1 
71 1 44 1 356 1 223 1 300 1 240 1 112 1 68 1 155 2 165 1 382 1 354 1 281 1 
173 1 2 1 160 1 249 1 292 1 
114 2 309 1 29 1 21 1 11 1 160 1 105 1 2 2 169 1 292 1 161 1 330 1 173 2 125 1 225 2 182 1 274 1 249 2 320 1 
375 1 2 1 160 1 95 1 141 1 39 1 249 1 319 1 278 1 
105 1 160 1 169 1 
326 1 76 1 200 1 134 1 268 1 334 1 195 1 235 1 
283 1 0 2 200 1 358 1 245 1 134 2 235 3 326 4 150 1 76 1 349 1 268 4 353 1 195 2 
0 1 200 1 33 1 134 1 13 1 235 1 326 2 76 1 268 2 146 1 334 1 195 1 
326 3 283 2 76 1 200 1 245 1 134 1 268 3 353 2 180 1 334 1 195 1 235 1 
260 1 168 1 124 2 235 2 
326 1 76 1 200 1 302 1 268 1 334 1 
326 2 76 1 0 1 20 1 200 1 134 1 268 2 334 1 195 1 235 1 
230 1 
326 1 76 1 200 1 134 1 268 1 334 1 195 1 235 1 
248 1 134 1 195 1 235 1 
326 1 76 1 200 1 134 1 268 1 195 1 235 1 
326 1 277 1 363 1 
186 1 283 2 200 1 245 1 134 1 235 1 326 3 76 1 268 3 334 1 353 1 195 1 
326 2 247 1 76 1 0 1 200 1 134 1 268 2 195 1 235 1 
199 1 200 1 358 1 362 1 235 1 326 1 76 1 328 1 268 1 334 1 167 1 
326 1 76 1 200 1 268 1 334 1 195 1 235 1 
326 1 76 1 200 1 134 1 268 1 334 1 195 2 
200 2 31 1 133 1 325 1 235 1 326 2 76 2 268 2 334 1 195 1 
20 1 0 2 200 1 358 1 134 1 235 2 326 3 150 1 364 1 76 1 268 3 334 1 195 1 
0 1 200 1 119 1 134 1 362 1 235 1 326 2 100 1 76 1 153 1 328 1 268 2 334 1 195 1 167 2 
0 2 200 2 358 1 134 1 235 2 326 4 150 1 247 1 76 2 226 1 268 4 334 1 195 1 
283 1 0 1 20 1 200 1 134 1 235 1 326 3 76 1 268 3 334 1 195 1 
150 1 358 1 349 1 235 1 
195 1 235 1 

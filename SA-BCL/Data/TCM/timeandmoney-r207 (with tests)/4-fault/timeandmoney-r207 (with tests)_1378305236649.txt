#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 1 363 1 172 2 315 1 236 1 43 1 44 1 284 1 370 3 262 3 348 5 322 1 182 1 49 1 214 2 7 1 295 1 298 1 56 1 244 2 121 1 15 7 247 7 145 1 
65 1 363 1 172 2 315 1 236 1 43 1 44 1 284 1 370 3 262 3 348 5 322 1 182 1 49 1 214 2 7 1 295 1 298 1 56 1 244 2 121 1 15 7 247 7 145 1 
363 1 172 2 83 1 315 1 236 1 43 1 44 1 284 1 370 3 262 3 348 4 129 1 323 1 182 1 49 1 214 2 7 2 30 1 294 1 295 1 298 2 56 2 244 2 121 2 15 7 381 1 247 7 145 1 
363 1 172 2 83 1 315 1 236 1 43 1 44 1 284 1 370 3 262 3 348 4 129 1 323 1 182 1 49 1 214 2 7 2 30 1 294 1 295 1 298 2 56 2 244 2 121 2 15 7 381 1 247 7 145 1 
363 1 172 2 83 1 315 1 236 1 43 1 44 1 284 1 370 3 262 3 348 4 129 1 323 1 182 1 49 1 214 2 7 2 30 1 294 1 295 1 298 2 56 2 244 2 121 2 15 7 381 1 247 7 145 1 
363 1 172 2 83 1 315 1 236 1 43 1 44 1 284 1 370 4 262 3 348 4 129 1 323 1 49 1 214 2 7 2 30 1 294 1 295 1 298 2 56 2 244 2 121 2 15 7 381 1 247 7 145 1 
363 1 172 1 295 1 298 1 236 1 43 1 284 1 370 1 262 1 121 1 348 1 15 2 182 1 7 1 214 1 247 2 145 1 
363 1 172 1 22 1 23 1 207 1 236 1 56 1 370 1 284 1 121 1 15 2 323 1 214 1 7 1 247 2 30 1 
363 1 172 2 236 1 44 1 56 1 244 1 284 1 370 2 262 1 348 1 15 3 214 2 247 3 
82 1 96 1 241 1 
91 1 241 1 249 2 
3 2 66 2 160 1 266 2 250 2 74 2 227 2 334 1 
308 1 66 2 250 2 21 1 253 1 256 1 258 1 211 2 259 1 103 1 104 1 46 1 3 2 156 1 25 2 47 2 263 2 71 2 29 1 107 1 159 1 52 1 133 1 160 1 266 3 190 1 74 3 111 1 112 1 14 1 138 1 35 1 37 1 227 2 141 1 334 1 40 1 
19 1 3 1 66 1 160 1 266 1 250 1 84 1 74 1 227 1 89 1 
19 1 266 1 252 1 311 1 74 1 241 1 3 1 356 1 378 1 96 1 184 1 183 1 379 1 350 1 
19 1 66 1 250 1 266 1 311 2 252 1 74 1 241 1 3 1 227 1 356 1 378 1 96 1 183 1 379 2 
195 1 311 1 379 1 55 1 340 1 
195 1 73 1 109 1 311 2 96 1 379 2 241 1 55 1 
195 1 311 1 379 1 
19 1 160 1 66 1 250 1 266 1 311 1 74 1 55 1 3 1 84 1 227 1 89 1 379 1 201 1 
241 1 
195 1 109 1 311 2 96 1 379 2 241 1 55 1 330 1 
51 1 170 1 109 1 311 5 312 1 353 1 13 2 241 1 135 1 55 2 54 2 270 1 195 2 143 1 96 1 379 5 333 2 246 1 215 1 
82 1 334 1 
66 1 266 2 250 1 74 2 105 1 3 2 227 1 334 2 360 1 
309 1 130 1 230 1 
52 1 308 1 266 1 21 1 74 1 256 1 223 1 259 1 35 1 37 1 25 1 141 1 263 1 334 1 71 1 40 1 
66 1 3 3 266 3 250 3 74 3 227 3 334 1 41 1 
19 1 3 1 266 1 250 1 74 1 227 1 89 1 
19 1 105 1 3 1 66 1 266 1 250 1 74 1 227 1 360 1 
19 1 308 1 66 2 250 3 21 1 252 1 311 1 253 1 256 1 41 1 258 1 211 2 259 1 46 1 3 3 156 1 25 1 47 1 183 1 263 1 71 1 159 1 52 1 133 1 160 1 266 4 190 1 74 4 111 1 14 1 35 1 138 1 37 1 57 1 59 1 227 3 141 1 356 1 378 1 379 1 334 1 167 1 40 1 360 1 
319 1 3 2 266 2 250 1 74 2 227 1 184 1 334 1 41 1 
19 1 66 1 250 3 266 3 311 1 252 1 74 3 241 1 41 2 3 3 57 1 286 1 227 3 378 1 356 1 379 1 183 1 167 1 360 1 
3 2 66 1 309 1 266 2 250 2 74 2 227 2 230 1 41 1 360 1 
52 1 308 1 266 1 21 1 74 1 256 1 259 1 35 1 37 1 25 1 141 1 263 1 334 1 71 1 40 1 
52 1 308 1 266 1 74 1 338 1 256 1 259 1 37 1 197 1 25 1 141 1 263 1 334 1 71 1 40 1 
309 2 253 1 314 1 175 1 42 1 258 1 211 2 260 1 46 1 181 1 47 4 130 2 158 1 107 2 159 1 133 1 190 1 293 1 297 1 14 2 373 1 377 1 230 2 380 1 
19 1 3 1 266 1 250 1 74 1 227 1 183 1 231 1 
52 1 308 1 309 1 250 1 266 2 21 1 74 2 256 1 41 1 259 1 35 1 37 1 3 1 227 1 25 1 141 1 263 1 167 1 40 1 71 1 
66 1 250 4 266 5 74 5 41 2 319 1 3 5 332 1 227 4 184 1 334 1 167 1 360 1 325 1 
19 1 3 2 266 2 250 2 74 2 227 2 89 1 231 1 
320 1 92 1 
320 1 92 1 
171 1 233 1 
171 1 233 1 
171 1 233 1 
320 1 92 1 359 1 
320 1 147 1 92 1 
320 2 171 1 157 1 92 2 136 1 233 1 
320 1 92 1 359 1 
320 1 92 1 359 1 
320 1 10 1 92 1 
320 1 10 1 92 1 
320 1 10 1 92 1 
311 2 12 1 92 2 0 1 241 1 76 3 136 1 116 1 179 2 45 1 320 2 347 1 287 2 88 1 237 2 122 2 379 2 166 1 238 2 
250 2 311 1 203 1 147 1 173 1 127 1 209 1 179 1 320 1 285 1 3 2 237 1 238 1 266 2 74 2 92 1 76 1 115 1 116 1 243 1 227 2 122 1 379 1 334 1 
121 1 298 1 7 1 
121 1 23 1 7 1 
121 3 204 1 352 1 23 1 328 1 298 2 
121 2 204 1 23 1 328 1 298 1 288 1 
121 2 204 2 23 1 298 1 328 1 
203 1 364 2 311 5 209 1 42 1 2 1 261 1 260 1 28 2 91 1 109 1 353 2 13 1 297 1 54 1 135 1 55 4 241 2 372 1 270 3 191 2 373 1 243 1 36 1 195 1 80 1 333 1 379 5 96 1 200 1 81 1 249 3 
364 6 311 9 257 1 340 5 42 3 368 1 260 3 28 6 51 1 91 3 109 1 353 6 13 2 297 3 55 7 241 5 135 1 54 2 372 2 270 8 373 3 243 4 164 1 36 3 195 6 302 1 374 5 120 1 38 1 80 2 379 9 96 1 333 2 200 1 249 9 
311 3 364 2 42 1 2 1 260 1 28 2 51 1 91 2 353 2 13 1 297 1 241 3 55 2 54 1 372 1 270 3 191 1 373 1 243 1 36 1 80 1 96 1 333 1 379 3 81 1 249 4 
364 4 311 4 42 2 368 1 2 1 260 2 28 4 51 1 91 3 353 4 13 1 297 2 241 4 54 1 55 3 372 1 270 5 191 2 373 2 243 2 164 1 36 2 38 1 80 1 96 1 333 1 379 4 81 1 249 7 
82 1 308 1 305 1 
308 1 281 1 
313 1 
308 1 259 1 
283 1 308 3 37 1 280 1 305 2 259 1 
308 1 37 1 259 1 
308 1 34 1 
188 1 293 3 31 1 255 1 297 1 14 3 273 1 260 1 331 1 196 1 87 1 181 2 106 2 198 1 47 7 187 1 107 4 
188 1 293 3 31 1 255 1 297 1 14 3 273 1 260 1 331 1 196 1 87 1 181 2 106 2 198 1 47 7 187 1 107 4 
188 1 293 3 31 1 255 1 297 1 14 3 367 1 273 1 260 1 331 1 196 1 87 1 181 2 106 2 198 1 47 7 187 1 107 4 
251 1 254 1 255 2 42 3 258 1 211 2 155 3 282 1 260 4 46 1 213 4 87 1 181 5 106 3 47 31 159 1 107 16 187 2 188 1 133 1 31 2 293 10 269 1 297 4 14 15 373 3 273 2 301 1 331 1 117 1 36 3 196 5 198 1 63 1 
255 1 258 2 211 4 260 1 46 2 181 3 87 1 106 2 47 9 159 2 107 5 187 1 188 1 133 2 293 4 31 1 297 1 161 1 14 4 273 1 117 1 196 1 198 1 232 1 
363 1 172 1 23 1 256 1 236 1 370 1 284 1 345 1 180 1 348 1 25 1 263 1 289 1 7 1 71 1 214 1 219 1 52 1 352 1 327 1 298 1 56 1 192 1 121 2 15 2 226 1 375 1 142 1 247 2 234 1 
124 1 363 1 172 1 23 1 151 1 256 1 370 1 284 1 180 1 348 2 25 1 263 1 289 1 7 1 71 1 214 1 219 1 52 1 352 1 327 1 298 1 56 1 121 2 15 3 226 1 375 1 142 1 335 1 247 3 234 1 
363 1 23 1 151 1 256 1 370 1 284 1 348 2 25 1 263 1 71 1 7 1 219 1 52 1 352 1 327 1 298 1 56 1 121 2 15 2 226 1 375 1 142 1 335 1 247 2 234 1 
18 1 124 1 308 1 172 1 148 1 153 1 256 1 259 1 178 1 25 1 263 1 50 1 71 1 214 1 52 1 219 2 327 2 56 2 15 1 375 2 141 1 247 1 307 1 
172 1 23 1 151 1 256 1 236 1 180 1 25 1 263 1 289 1 7 1 71 1 214 1 219 1 52 1 352 1 327 1 298 1 56 1 192 1 121 2 15 1 226 1 375 1 142 1 247 1 234 1 
321 1 
169 2 125 1 343 1 3 1 183 1 184 1 350 1 239 2 91 2 353 1 13 1 241 1 135 1 54 1 137 1 195 5 194 2 356 1 199 2 61 1 96 1 202 3 19 1 310 1 252 1 311 4 102 3 69 1 24 1 26 1 266 1 109 2 74 1 270 1 162 3 78 1 274 5 275 1 378 1 379 4 333 1 277 1 
202 3 19 1 169 2 310 1 311 4 252 1 125 1 102 3 343 1 3 1 24 1 69 1 26 1 184 1 183 1 350 1 239 2 91 2 266 1 109 2 74 1 353 1 13 1 241 1 54 1 135 1 270 1 137 1 162 3 194 2 195 5 78 1 274 5 275 1 199 2 356 1 378 1 96 1 333 1 379 4 61 1 277 1 
202 2 19 1 20 2 311 4 252 1 174 2 341 1 102 2 343 1 3 1 24 1 69 1 5 1 26 1 184 1 183 1 350 1 239 2 266 1 109 2 74 1 353 1 13 1 241 1 54 1 135 1 270 1 162 2 195 4 194 2 78 1 274 4 275 1 356 1 378 1 96 1 333 1 379 4 249 2 
169 2 343 1 3 1 85 1 5 1 184 1 183 1 350 1 239 2 91 2 52 1 353 2 13 1 241 2 135 1 54 1 137 1 194 2 195 6 141 2 199 2 356 1 96 1 249 2 307 1 202 2 19 1 308 1 311 5 252 1 148 1 366 1 256 1 259 1 102 2 69 1 24 1 25 2 26 1 263 2 71 2 266 1 109 3 74 1 222 1 270 2 162 2 78 1 274 4 275 1 228 1 80 1 378 1 379 5 333 1 
19 1 311 3 252 1 102 1 343 1 3 1 69 1 26 1 184 1 183 1 350 1 266 1 109 1 74 1 330 1 195 2 78 1 274 2 275 1 356 1 378 1 379 3 
19 1 311 3 252 1 343 1 3 1 69 1 26 1 184 1 183 1 350 1 266 1 109 1 74 1 241 1 162 1 330 1 195 1 78 1 274 3 275 1 356 1 378 1 379 3 96 1 
202 1 19 1 311 3 252 1 102 1 343 1 3 1 69 1 26 1 184 1 183 1 350 1 266 1 109 1 74 1 241 1 162 1 330 1 195 2 78 1 274 3 275 1 356 1 378 1 379 3 96 1 
169 2 125 1 343 1 3 1 183 1 184 1 350 1 239 2 91 2 189 1 353 1 13 1 241 5 135 1 54 1 137 1 195 7 194 2 356 1 199 2 96 5 61 1 202 4 19 1 310 1 252 1 311 5 102 4 69 1 24 1 26 1 266 1 109 3 74 1 270 1 162 4 330 1 78 1 274 6 275 1 378 1 379 5 333 1 277 1 
202 2 19 1 169 2 311 4 252 1 102 2 343 1 3 1 24 1 69 1 5 1 26 1 184 1 183 1 350 1 239 2 91 2 266 1 109 2 74 1 353 1 13 1 241 2 54 1 135 1 270 1 137 1 162 2 195 4 194 2 78 1 274 4 275 1 199 2 356 1 378 1 96 1 333 1 379 4 249 2 
202 2 19 1 169 2 310 1 311 4 252 1 125 1 102 2 343 1 3 1 24 1 69 1 26 1 184 1 183 1 350 1 239 2 91 2 266 1 109 2 74 1 353 1 13 1 241 1 54 1 135 1 270 1 137 1 162 2 195 4 194 2 78 1 274 4 275 1 199 2 356 1 378 1 96 1 379 4 61 1 333 1 
202 2 19 1 169 2 310 1 311 4 252 1 125 1 102 2 343 1 3 1 24 1 69 1 26 1 184 1 183 1 350 1 239 2 91 2 266 1 109 2 74 1 353 1 13 1 241 1 54 1 135 1 270 1 137 1 162 2 195 4 194 2 78 1 274 4 275 1 199 2 356 1 378 1 96 1 379 4 61 1 333 1 
202 2 19 1 310 1 362 1 20 2 311 4 252 1 174 2 341 1 102 2 343 1 3 1 24 1 69 1 26 1 184 1 183 1 350 1 239 2 266 1 109 2 74 1 353 1 13 1 241 1 54 1 135 1 270 1 162 2 195 4 194 2 78 1 274 4 275 1 356 1 378 1 96 1 379 4 333 1 16 1 249 2 
82 1 188 1 133 1 309 1 293 2 190 1 31 1 253 1 255 1 297 1 14 3 211 2 258 1 260 1 46 1 87 1 181 2 106 1 198 1 130 1 47 6 334 2 230 1 158 1 107 3 159 1 
309 11 337 1 254 1 253 1 42 2 258 2 211 4 103 1 155 3 260 2 46 2 213 3 181 1 156 1 48 1 47 14 130 11 290 1 159 2 107 8 133 2 293 2 190 2 269 1 297 1 14 6 373 1 196 1 36 2 225 1 334 1 230 4 17 1 
308 1 250 1 21 1 253 1 256 1 41 1 259 1 211 2 258 1 103 1 46 1 3 1 156 1 349 1 25 1 263 1 47 2 71 1 159 1 107 1 52 1 133 1 266 2 190 1 74 2 14 1 223 1 35 1 37 1 119 1 227 1 141 1 334 1 167 1 40 1 230 1 168 1 17 1 
41 1 42 2 128 2 3 1 46 3 87 1 181 4 47 20 130 7 188 1 52 2 133 3 190 3 293 8 134 2 297 3 14 10 196 4 141 1 245 1 198 1 248 1 17 1 361 2 308 2 250 1 309 7 21 2 253 3 255 1 151 1 256 2 258 3 211 6 259 2 103 1 260 3 156 1 25 3 106 1 263 3 71 3 159 3 107 10 266 3 31 1 74 3 111 2 114 2 35 2 373 2 37 2 36 2 224 1 227 1 334 2 167 1 40 2 230 7 
308 3 250 1 100 1 253 2 148 1 151 1 256 2 41 1 258 2 211 4 259 2 101 1 103 1 104 2 345 1 3 1 46 2 156 1 25 8 263 7 47 2 71 8 158 1 132 1 159 2 107 1 265 1 52 2 133 2 266 1 190 2 74 1 113 1 271 1 14 1 227 1 141 2 62 1 307 1 
66 1 309 1 250 1 253 1 42 1 258 1 211 2 260 1 46 1 3 1 181 1 130 1 47 3 159 1 107 1 133 1 266 1 293 1 190 1 74 1 297 1 14 2 242 1 373 1 36 1 227 1 230 1 360 1 17 1 
133 1 309 1 293 1 190 1 253 1 314 1 42 1 211 2 258 1 260 1 196 1 46 1 130 1 47 2 230 1 158 1 159 1 107 2 
133 1 309 1 293 1 190 1 253 1 297 1 14 2 211 2 258 1 373 1 46 1 181 1 377 1 130 1 47 2 230 1 158 1 159 1 
309 2 253 1 42 1 258 1 211 2 260 1 46 1 181 1 47 4 130 2 158 1 107 2 159 1 133 1 190 1 293 2 297 1 14 2 373 1 36 1 196 1 230 2 
133 1 309 1 293 1 190 1 253 1 314 1 42 1 211 2 258 1 260 1 196 1 46 1 130 1 47 2 230 1 62 1 159 1 107 2 
133 1 309 1 293 1 190 1 253 1 297 1 14 2 211 2 258 1 373 1 46 1 181 1 377 1 130 1 47 2 230 1 62 1 159 1 
309 2 253 1 42 1 258 1 211 2 260 1 46 1 181 1 47 4 130 2 107 2 159 1 133 1 190 1 293 2 297 1 14 2 373 1 36 1 196 1 230 2 62 1 
309 2 253 1 42 1 258 1 211 2 260 1 46 1 181 1 47 4 130 2 107 2 159 1 133 1 190 1 293 2 297 1 14 2 373 1 36 1 196 1 230 2 
308 1 21 1 253 1 256 1 259 1 211 2 258 1 103 1 46 1 156 1 25 1 47 2 263 1 71 1 107 1 159 1 52 1 133 1 266 1 190 1 74 1 111 1 14 1 35 1 37 1 141 1 334 1 40 1 
308 1 338 1 253 1 256 1 259 1 211 2 258 1 103 1 46 1 156 1 25 1 47 2 263 1 71 1 107 1 159 1 52 1 133 1 266 1 190 1 74 1 14 1 300 1 37 1 197 1 141 1 334 1 40 1 
309 2 253 1 42 1 258 1 211 2 260 1 46 1 181 1 47 4 130 2 107 2 159 1 133 1 190 1 293 2 297 1 14 2 373 1 36 1 196 1 230 2 17 1 
308 1 309 2 21 1 253 1 256 1 42 1 259 1 211 2 258 1 260 1 345 1 46 1 181 1 25 1 130 2 47 4 263 1 71 1 107 2 159 1 52 1 133 1 266 1 293 2 190 1 74 1 111 1 297 1 114 1 14 2 373 1 35 1 196 1 37 1 36 1 230 2 40 1 
66 1 250 1 309 1 253 1 42 1 258 1 211 2 260 1 46 1 3 1 47 3 130 1 159 1 107 2 133 1 291 1 266 1 293 1 190 1 74 1 297 1 14 1 373 1 196 1 36 1 227 1 230 1 360 1 17 1 
146 1 254 3 154 1 317 1 177 1 42 3 258 2 211 4 155 3 260 3 46 2 213 5 181 2 6 1 47 28 351 2 159 2 107 13 133 2 326 4 293 4 53 1 269 2 161 1 297 3 14 15 373 3 36 3 196 2 94 1 60 1 376 1 
146 1 254 3 154 1 317 1 177 1 42 3 258 2 211 4 155 3 260 3 46 2 213 5 181 3 6 1 47 28 351 2 159 2 107 13 133 2 326 4 293 5 53 1 269 2 161 1 297 3 14 15 373 3 36 3 196 2 94 1 60 1 376 1 
146 1 337 1 254 2 255 3 154 1 317 1 177 1 42 3 258 1 211 2 155 3 260 6 46 1 213 3 87 3 181 6 106 3 6 1 47 41 351 1 159 1 107 22 188 3 133 1 31 3 326 4 293 9 269 1 161 1 297 6 14 19 373 3 36 3 196 3 94 1 198 3 376 1 
146 1 254 2 154 1 318 1 317 1 177 1 42 4 258 2 211 4 155 2 260 4 46 2 213 4 181 4 6 1 47 30 351 1 159 2 107 14 133 2 326 4 293 7 53 1 269 2 161 1 297 4 14 16 373 4 36 4 196 3 94 2 376 1 
254 1 317 2 177 1 42 1 258 1 211 2 155 1 260 1 46 1 213 1 47 10 6 1 351 2 159 1 107 5 133 1 326 2 161 1 297 1 14 5 373 1 36 1 94 1 376 1 
320 1 12 1 92 1 237 1 150 1 122 1 0 1 136 1 238 1 179 1 
147 1 173 1 
320 1 11 1 92 1 237 1 122 1 68 1 238 1 193 1 179 1 
311 1 12 1 92 1 0 1 241 1 76 2 136 1 116 1 179 1 45 1 320 1 347 1 287 1 237 1 379 1 122 1 166 1 238 1 
311 1 12 1 92 1 0 1 241 1 76 2 136 1 116 1 179 1 45 1 320 1 347 1 287 1 237 1 379 1 122 1 166 1 238 1 
311 1 12 1 92 1 0 1 241 1 76 2 136 1 116 1 179 1 45 1 320 1 347 1 287 1 237 1 379 1 122 1 166 1 238 1 
157 1 359 1 64 1 
157 1 359 1 64 1 
220 1 10 1 
220 1 10 1 157 1 
285 1 115 1 
250 2 311 1 203 1 147 1 173 1 127 1 209 1 179 1 320 1 285 1 3 2 287 1 237 1 238 1 266 2 74 2 92 1 55 1 76 1 115 1 243 1 58 1 227 2 379 1 122 1 334 1 166 1 
359 1 64 1 
220 1 10 1 157 1 
308 1 100 1 253 1 235 1 256 1 259 1 211 2 258 1 103 1 104 2 46 1 3 2 156 1 25 2 90 1 47 2 263 2 71 2 185 1 159 1 107 1 265 1 52 1 133 1 266 2 190 1 74 2 14 1 304 1 276 1 17 1 
52 1 352 1 327 1 23 1 298 1 151 1 256 1 212 1 345 1 180 1 121 2 25 2 142 1 263 2 358 1 7 1 71 2 324 1 234 1 
52 1 352 1 327 1 23 1 298 1 151 1 256 1 180 1 121 2 25 1 142 1 263 1 358 1 7 1 71 1 217 1 234 1 
18 1 52 1 308 1 327 1 148 1 256 1 259 1 212 1 25 1 141 1 263 1 71 1 8 1 307 1 
52 1 352 1 327 1 23 1 298 1 151 1 256 1 212 1 180 1 121 2 25 1 142 1 263 1 358 1 7 1 71 1 324 1 234 1 
210 1 
66 2 308 1 250 2 21 1 253 1 256 1 258 1 211 2 259 1 3 2 46 1 156 1 25 1 47 1 263 1 71 1 159 1 52 1 133 1 160 1 266 3 190 1 74 3 111 1 14 1 138 1 35 1 37 1 227 2 141 1 334 1 40 1 
91 2 364 2 353 2 13 1 135 1 54 1 241 4 270 1 85 1 106 1 80 1 28 2 333 1 96 2 249 4 
82 1 170 1 353 1 143 1 96 1 241 1 270 1 
169 1 311 1 91 1 109 1 353 1 13 1 54 1 135 1 241 2 270 1 137 1 195 1 199 1 333 1 379 1 96 1 249 1 
170 1 126 1 42 2 281 3 283 1 344 2 345 1 85 1 9 2 52 3 91 6 292 1 134 2 353 8 13 4 297 2 135 4 54 4 93 2 241 8 195 5 141 1 143 1 357 2 96 2 305 2 144 2 249 12 308 8 311 5 364 6 149 1 256 2 259 2 260 2 25 3 263 3 27 1 28 6 71 3 218 1 109 3 270 9 34 1 272 2 373 2 37 2 36 2 80 2 378 2 123 2 333 4 379 5 336 1 
311 1 364 5 254 1 154 1 42 2 369 1 155 1 260 2 85 1 213 1 28 5 91 3 109 1 267 1 353 5 240 1 13 2 297 2 54 2 135 2 241 5 329 1 270 8 139 1 373 2 118 1 195 1 36 2 80 1 379 1 123 2 333 2 96 2 144 1 249 6 
19 1 66 1 250 1 311 1 125 1 255 1 260 2 3 1 84 1 87 1 89 1 131 1 160 1 266 1 31 1 74 1 353 2 13 1 297 1 54 1 135 1 270 2 227 1 123 2 333 1 379 1 144 1 201 1 
170 1 353 1 13 1 135 1 54 1 241 1 270 1 143 1 333 1 96 1 
91 5 364 5 134 1 353 5 297 2 241 5 270 5 42 2 373 2 260 2 36 2 123 2 28 5 144 1 249 10 
195 1 311 1 109 1 96 1 379 1 241 1 
308 1 311 3 148 1 366 1 256 1 259 1 85 2 25 4 263 4 71 4 51 1 218 1 52 1 292 2 109 2 353 2 13 2 222 1 54 2 135 1 270 2 140 1 195 4 141 2 165 1 80 2 333 2 379 3 307 1 
365 1 122 1 179 1 
285 1 12 1 296 1 122 1 179 1 
365 1 122 1 179 1 
365 1 122 1 179 1 
122 1 208 1 179 1 
122 1 208 1 179 1 
122 1 208 1 179 1 
122 1 179 1 
320 1 92 1 
254 1 255 1 154 1 258 1 211 2 155 1 260 1 46 1 213 1 181 2 87 1 106 1 47 8 159 1 107 4 188 1 133 1 31 1 293 2 297 1 161 1 14 4 198 1 
254 1 255 1 154 1 42 1 258 2 211 4 155 1 260 2 46 2 213 2 87 1 181 2 106 1 47 11 159 2 107 6 188 1 133 2 31 1 293 3 269 1 297 1 161 1 14 5 36 1 196 1 79 1 198 1 
254 1 255 1 154 1 42 2 258 3 211 6 369 1 155 1 260 3 46 3 213 1 87 1 181 3 106 1 47 19 159 3 107 9 188 1 133 3 31 1 267 1 293 4 240 1 161 1 297 3 329 1 14 10 373 2 117 1 196 1 36 2 79 1 198 1 
254 1 255 1 154 1 42 2 258 3 211 6 369 1 155 1 260 3 46 3 213 1 87 1 181 3 106 1 47 17 159 3 107 10 188 1 133 3 31 1 267 1 293 5 240 1 161 1 297 2 329 1 14 7 373 1 117 1 196 2 36 2 79 1 198 1 
254 1 255 1 154 1 258 1 211 2 155 1 260 1 46 1 213 1 181 2 87 1 106 1 47 8 159 1 107 4 188 1 133 1 31 1 293 2 297 1 161 1 14 4 198 1 
254 1 154 1 42 2 258 1 211 2 369 1 155 1 260 2 46 1 213 1 181 1 47 12 159 1 107 6 133 1 267 1 293 2 240 1 161 1 297 2 329 1 14 6 373 2 196 1 36 2 
254 1 255 1 154 1 42 2 258 4 211 8 369 1 155 1 260 3 46 4 213 1 87 1 181 3 106 1 47 18 159 4 107 10 188 1 133 4 31 1 267 1 293 5 240 1 161 1 297 2 329 1 14 8 373 1 117 2 196 2 36 2 79 1 198 1 
254 1 154 1 42 3 258 4 211 8 369 1 155 1 260 3 46 4 213 1 181 3 47 16 159 4 107 9 133 4 267 1 293 6 240 1 53 1 161 1 297 2 329 1 14 7 373 2 117 2 196 3 36 3 
188 2 31 3 293 6 255 3 297 1 14 4 260 1 196 3 181 3 87 1 198 1 47 7 107 3 
254 1 255 1 154 1 42 2 258 4 211 8 369 1 155 1 260 3 46 4 213 1 87 1 181 3 106 1 47 18 159 4 107 10 188 1 133 4 31 1 267 1 293 4 240 1 53 1 161 1 297 2 329 1 14 8 373 1 117 2 196 1 36 2 198 1 
188 1 133 2 293 3 31 1 255 1 297 1 14 4 211 4 258 2 260 1 117 1 196 1 46 2 87 1 181 2 106 1 198 1 47 8 107 4 159 2 
82 1 188 1 31 1 293 2 255 1 297 1 14 3 260 1 181 2 87 1 106 1 198 1 47 6 107 3 
133 1 293 2 297 1 14 2 42 1 211 2 258 1 373 1 260 1 46 1 36 1 196 1 181 1 79 1 47 4 159 1 107 2 
293 2 254 1 269 1 297 1 14 4 42 1 373 1 155 1 260 1 36 1 196 1 213 2 181 1 47 7 107 3 
337 1 255 2 42 2 211 4 258 2 155 2 260 3 46 2 213 2 87 1 181 5 106 1 47 23 290 1 107 11 159 2 188 1 133 2 31 2 293 9 269 1 297 3 14 12 373 2 117 2 196 4 36 2 198 1 97 1 
213 1 47 1 14 1 
155 1 47 1 107 1 
133 1 293 3 134 1 297 1 14 3 42 1 258 1 211 2 373 1 260 1 46 1 36 1 196 1 181 2 79 1 47 6 159 1 107 3 
254 1 154 1 42 2 258 1 211 2 369 1 155 1 260 2 46 1 213 1 181 1 47 12 159 1 107 6 133 1 267 1 293 2 240 1 161 1 297 2 329 1 14 6 373 2 196 1 36 2 
31 1 293 2 255 1 297 1 14 3 260 1 196 1 87 1 181 1 47 6 107 3 
188 1 133 1 293 2 31 1 255 1 14 2 211 2 258 1 117 1 196 1 46 1 181 1 198 1 47 3 97 1 107 1 159 1 
133 1 31 2 293 5 255 2 161 1 297 2 14 5 258 1 211 2 260 2 46 1 196 2 181 3 87 1 47 10 131 1 159 1 107 5 
133 1 293 1 161 1 42 1 211 2 258 1 260 1 46 1 196 1 47 2 159 1 107 2 
133 1 293 2 297 1 161 1 14 2 42 1 211 2 258 1 373 1 260 1 46 1 36 1 196 1 181 1 47 4 159 1 107 2 
133 3 31 1 293 2 53 1 255 1 161 1 14 2 211 6 258 3 117 1 46 3 196 1 181 1 47 3 97 1 159 3 107 1 
251 1 254 1 255 3 42 3 258 5 211 10 282 1 155 3 260 5 46 5 213 4 87 2 181 7 106 1 47 34 159 5 107 16 188 1 133 5 31 3 293 12 53 1 269 1 161 1 297 5 14 18 373 3 301 1 117 2 36 3 196 5 79 1 198 1 97 1 
319 1 3 1 221 1 266 1 74 1 184 1 334 1 
221 1 99 1 266 1 74 1 339 1 268 1 316 1 319 1 163 1 3 1 184 1 334 1 
82 1 52 1 308 1 25 1 141 1 148 1 263 1 256 1 71 1 259 1 307 1 
52 1 308 1 250 1 266 2 74 2 256 1 41 1 259 1 35 1 37 1 3 1 227 1 25 1 141 1 263 1 334 1 40 1 71 1 
19 2 308 3 250 1 252 1 256 1 41 1 259 2 3 2 25 1 263 1 183 1 71 1 52 1 292 1 266 2 74 2 34 1 355 1 35 1 37 2 227 2 334 1 40 1 336 1 
19 2 308 3 250 1 252 1 338 1 256 1 41 1 259 2 3 2 25 1 263 1 183 1 71 1 52 1 292 1 266 2 74 2 34 1 355 1 37 2 227 2 334 1 40 1 336 1 
19 1 66 1 308 4 250 1 311 2 256 1 259 1 281 1 3 1 84 1 25 1 89 1 263 1 71 1 52 1 160 1 72 1 266 1 292 1 74 1 241 1 34 1 195 1 37 1 227 1 378 1 379 2 96 1 305 1 278 1 336 1 201 1 
19 1 66 1 308 4 250 1 311 2 256 1 259 1 281 1 3 1 84 1 25 1 89 1 263 1 71 1 9 1 52 1 160 1 266 1 292 1 74 1 241 1 34 1 195 1 37 1 227 1 378 1 379 2 96 1 305 1 336 1 201 1 
52 1 25 1 263 1 256 1 71 1 101 1 
265 1 98 1 52 3 308 3 67 1 151 1 113 1 271 1 256 2 259 2 101 1 104 1 283 1 345 1 37 1 25 7 141 2 263 6 71 7 132 1 186 1 
41 1 128 1 345 1 3 1 46 2 181 2 87 1 47 6 130 1 185 1 52 1 188 1 133 2 190 2 293 2 297 1 14 3 198 1 17 1 308 1 250 1 309 1 21 1 253 2 255 1 256 1 258 2 211 4 259 1 260 1 25 1 106 1 263 1 71 1 159 2 107 3 266 2 31 1 74 2 111 1 114 1 35 1 37 1 227 1 334 2 230 1 40 1 
308 2 170 1 311 3 281 1 344 1 25 1 263 1 71 1 9 1 218 1 109 1 353 1 13 2 241 1 54 2 135 2 55 1 93 1 270 1 272 1 195 2 141 1 143 1 378 1 96 1 333 2 379 3 305 1 
52 2 308 2 149 1 256 1 259 1 101 1 283 1 345 1 37 1 25 2 263 2 305 1 71 2 
52 1 308 1 148 1 256 1 176 1 259 1 345 1 25 4 141 1 263 4 71 4 264 1 307 1 
52 2 308 1 292 1 67 1 75 1 256 1 259 1 37 1 86 1 25 2 245 1 263 2 71 2 186 1 
52 1 121 1 25 1 142 1 141 1 23 1 263 1 7 1 256 1 71 1 
265 1 52 1 308 1 345 1 25 2 90 1 151 1 263 2 256 1 71 2 259 1 
265 1 52 2 308 3 292 1 148 1 113 1 271 1 256 2 176 1 259 2 345 1 25 5 141 1 263 4 71 5 307 1 
265 1 52 2 308 3 292 1 148 1 113 1 256 2 176 1 259 2 345 1 25 5 141 1 263 4 71 5 307 1 216 1 
52 1 308 1 250 1 266 2 74 2 338 1 256 1 41 1 259 1 37 1 3 1 227 1 25 1 141 1 263 1 334 1 40 1 71 1 
98 1 52 2 308 1 292 1 67 1 256 1 259 1 283 1 37 1 25 1 263 1 71 1 186 1 
3 1 266 1 74 1 235 1 304 1 354 1 276 1 70 1 306 1 
205 1 354 1 152 1 
32 1 354 1 334 1 70 1 306 1 
19 1 252 1 311 2 205 1 32 2 354 1 152 1 241 1 206 1 55 1 57 1 378 1 356 1 96 1 183 1 379 2 334 1 70 2 306 2 
370 1 284 1 363 1 348 1 15 3 172 1 323 1 315 1 214 1 247 3 236 1 
370 1 262 1 182 1 244 1 
370 1 284 1 
370 1 284 1 82 1 363 1 
370 1 284 1 363 1 15 1 172 1 214 1 247 1 
15 1 375 1 56 1 
108 1 363 1 172 1 299 1 236 1 370 1 284 1 15 3 4 1 323 2 214 1 247 3 
370 1 284 1 363 1 348 1 15 2 172 1 214 1 247 2 145 1 
370 1 262 1 121 1 15 1 172 1 298 1 295 1 7 1 214 1 247 1 236 1 
370 1 284 1 15 1 172 1 214 1 247 1 236 1 
284 2 363 1 15 1 172 1 214 1 247 1 236 1 
172 2 33 1 236 1 1 1 370 1 284 1 346 1 15 2 214 2 247 2 
363 1 172 1 315 1 236 1 244 1 284 1 370 2 262 1 348 2 15 3 49 1 214 1 247 3 
363 1 172 1 352 1 23 1 298 1 236 1 370 1 284 1 121 2 348 1 15 2 39 1 214 1 7 1 247 2 
363 1 172 2 236 1 244 1 284 1 370 2 262 1 348 2 15 4 229 1 214 2 247 4 145 1 
370 1 284 1 363 1 15 1 172 1 214 1 247 1 236 1 
363 2 172 1 299 1 244 1 284 2 370 3 262 1 348 2 4 1 15 4 323 1 182 1 214 1 247 4 
65 1 363 1 172 1 236 1 370 1 284 1 348 1 15 2 95 1 214 1 247 2 382 1 
279 1 363 1 172 1 299 1 236 1 370 1 284 1 15 3 4 2 323 2 214 1 247 3 
370 2 371 2 77 1 342 1 
303 1 15 1 172 1 214 1 247 1 236 1 
370 1 284 1 363 1 348 1 15 2 172 1 315 1 214 1 247 2 236 1 
110 1 
370 1 284 1 363 1 15 1 172 1 214 1 247 1 236 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (18,147) (18,147) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (18,147) (18,147) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (18,147) (18,147) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (18,147) (18,147) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 374 223 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 374 209 112 376 176 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 374 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 374 209 112 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 374 209 112 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 374 209 112 376 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 374 209 112 376 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 1 147 1 8 1 299 1 18 1 320 1 191 1 95 1 118 1 
83 1 147 1 8 1 299 1 18 1 320 1 191 1 95 1 118 1 
83 1 147 1 8 1 299 1 18 1 320 1 191 1 95 1 118 1 
83 1 147 1 8 1 299 1 18 1 320 1 191 1 95 1 118 1 
233 1 0 2 320 1 95 1 342 1 118 4 55 1 366 3 8 1 299 4 201 1 88 1 290 1 174 2 91 3 214 1 203 1 164 1 
83 1 233 1 241 1 320 1 95 1 3 1 115 1 118 2 366 1 8 1 299 2 103 1 201 1 191 1 214 1 164 1 
366 2 8 2 371 1 299 3 320 2 201 1 174 1 191 1 95 1 91 1 118 3 203 1 164 1 
233 1 0 2 320 2 142 1 95 1 96 1 39 1 342 1 118 9 206 1 55 1 366 5 8 2 299 9 371 1 201 1 88 1 290 1 191 1 174 4 91 7 214 1 203 3 164 1 
233 1 0 2 320 2 142 1 95 1 96 1 39 1 342 1 118 9 206 1 55 1 366 5 8 2 299 9 371 1 201 1 88 1 290 1 191 1 174 4 91 7 214 1 203 3 164 1 
130 1 330 1 196 1 
30 1 84 1 51 1 361 1 2 1 185 1 21 1 251 1 246 1 104 1 313 1 192 1 136 1 295 1 
130 1 
246 2 130 1 158 1 284 1 104 1 375 1 196 1 295 2 
49 1 109 1 284 1 169 1 327 1 217 1 196 1 126 2 53 2 343 2 71 1 246 5 130 1 158 2 104 2 315 1 295 5 255 1 46 1 
130 1 329 1 322 2 
30 2 361 2 51 1 313 2 185 2 2 2 117 1 21 2 
30 2 178 1 306 1 51 1 307 1 185 2 2 2 234 1 32 2 77 1 190 1 313 2 9 2 79 1 236 1 357 1 213 1 36 1 254 1 318 1 168 1 16 1 274 1 319 2 361 3 64 1 117 1 21 3 323 1 145 1 345 1 148 1 373 1 199 2 248 2 175 1 304 1 
30 1 84 1 361 1 51 1 313 1 185 1 2 1 192 1 21 1 251 1 
84 1 361 1 171 1 196 1 21 1 246 1 130 1 301 1 372 1 313 1 67 1 292 1 204 1 295 1 
30 1 84 1 361 1 2 1 185 1 171 1 196 1 21 1 246 2 130 1 301 1 372 1 313 1 67 1 295 2 
246 1 158 1 104 1 89 1 295 1 
246 2 130 1 158 1 284 1 104 1 227 1 196 1 295 2 
246 1 158 1 295 1 
330 1 117 1 
30 1 361 2 2 1 185 1 21 2 117 2 54 1 367 1 313 2 
23 1 316 1 73 1 
274 1 306 1 361 1 307 1 234 1 117 1 21 1 323 1 145 1 345 1 148 1 32 1 199 1 78 1 9 1 213 1 
306 1 274 1 194 1 361 2 307 1 2 1 185 1 234 1 323 1 21 2 145 1 144 1 345 1 148 1 32 1 199 1 313 1 9 1 213 1 316 1 
30 1 194 1 361 3 313 3 185 3 2 3 117 1 21 3 
30 1 194 2 361 5 218 1 2 4 185 4 21 5 117 1 144 1 367 1 151 1 313 5 204 1 163 1 
84 1 361 2 313 2 185 2 2 2 192 1 215 1 21 2 
84 1 361 1 313 1 185 1 2 1 192 1 21 1 
54 1 30 1 84 1 367 1 361 1 313 1 185 1 2 1 21 1 
178 1 30 2 306 1 182 1 51 1 307 1 185 3 2 3 234 1 32 1 77 1 190 1 313 3 9 1 357 1 213 1 36 1 295 1 318 1 168 1 84 1 16 1 274 1 319 2 361 4 194 1 171 1 117 1 323 1 21 4 145 1 144 1 345 1 246 1 148 1 367 1 346 1 373 1 301 1 372 1 199 1 67 1 248 1 304 1 
361 2 194 1 313 2 185 1 2 1 117 1 21 2 204 1 163 1 
30 1 84 1 194 2 361 3 1 1 2 3 185 3 171 1 21 3 144 1 246 1 367 1 130 1 346 1 301 1 372 1 313 3 67 1 295 1 
30 1 194 1 361 2 2 2 185 2 21 2 23 1 367 1 313 2 316 1 
274 1 306 1 361 1 307 1 234 1 117 1 21 1 323 1 145 1 345 1 148 1 32 1 199 1 9 1 213 1 
48 1 306 1 361 1 307 1 234 1 117 1 21 1 323 1 145 1 148 1 32 1 199 1 9 1 213 1 68 1 
73 2 129 1 7 1 75 1 311 1 77 2 190 1 34 1 357 1 316 2 36 1 12 1 168 1 167 1 17 1 319 2 64 2 296 1 23 2 373 1 263 1 248 4 304 1 232 1 
84 1 372 1 361 1 313 1 185 1 2 1 21 1 215 1 
224 1 314 1 122 1 
69 1 224 2 42 1 24 1 280 1 122 2 
224 1 122 1 
224 1 122 1 
24 1 280 1 
24 1 280 1 
24 1 280 1 
181 1 224 1 122 1 
181 1 224 1 122 1 
181 1 224 1 122 1 
224 1 122 1 177 1 
224 1 122 1 177 1 
224 1 122 1 177 1 
183 1 250 1 205 1 40 1 22 2 352 2 246 2 120 1 130 1 224 2 42 1 35 2 228 3 44 1 271 2 122 2 230 2 202 1 295 2 
250 1 185 2 2 2 352 1 33 1 313 2 35 1 314 1 81 1 355 1 271 1 295 1 15 1 110 1 361 2 117 1 21 2 20 1 246 1 224 1 228 1 90 1 230 1 122 1 
103 1 114 1 331 2 342 1 214 2 
233 1 342 1 214 1 
233 1 103 1 214 1 
256 1 103 1 114 1 331 1 342 2 214 3 
103 1 152 1 114 1 331 1 342 1 214 2 
284 1 31 1 329 1 126 1 53 1 6 1 129 1 130 2 287 1 75 1 158 1 131 2 104 4 211 1 315 2 61 1 295 5 15 1 109 3 110 1 17 1 169 1 258 2 196 1 20 1 322 3 221 1 343 1 246 5 222 1 66 2 263 1 
284 1 31 1 329 3 126 2 53 2 129 3 130 5 287 2 75 3 158 6 131 6 104 7 270 1 315 6 358 1 61 3 255 1 295 9 107 1 110 4 109 8 17 3 169 1 258 6 113 1 321 1 196 1 322 9 343 2 298 1 246 9 222 2 263 3 89 5 231 5 
329 2 126 1 53 1 6 1 129 1 130 3 287 1 75 1 131 2 104 2 315 2 61 1 295 3 255 1 109 3 110 1 17 1 258 2 196 1 221 1 322 4 343 1 246 3 222 1 66 1 263 1 
329 3 126 1 53 1 6 1 129 2 130 4 287 1 75 2 131 4 104 3 315 4 358 1 61 2 295 4 255 1 109 5 110 2 17 2 258 4 196 1 113 1 322 7 221 1 343 1 298 1 246 4 222 1 66 2 263 2 
141 1 330 1 145 1 
328 1 
235 1 145 1 
307 1 213 1 145 1 
145 1 245 1 
213 1 145 1 
141 2 76 1 307 1 213 1 4 1 145 3 
47 2 167 3 17 1 64 4 94 1 243 1 143 1 129 1 260 1 56 1 7 2 370 1 149 1 77 3 25 1 265 1 248 7 
47 2 167 3 17 1 64 4 94 1 243 1 143 1 129 1 260 1 56 1 7 2 370 1 149 1 77 3 25 1 265 1 248 7 
47 2 167 3 17 1 64 4 94 1 243 1 143 1 129 1 56 1 260 1 7 2 370 1 149 1 77 3 25 1 265 1 248 7 305 1 
348 1 47 1 156 4 94 4 129 3 7 2 75 3 336 1 77 12 312 1 288 3 190 2 357 2 61 3 168 2 167 6 319 4 17 3 193 1 64 11 243 1 260 2 370 1 149 1 26 2 263 3 265 1 154 1 229 1 248 23 249 1 304 2 
47 2 94 1 129 1 56 1 7 3 77 4 190 2 357 2 168 2 167 4 17 1 319 4 64 5 143 1 260 1 149 1 370 1 25 1 226 1 26 1 247 1 265 1 248 9 304 2 
233 1 306 1 95 1 332 1 333 1 32 1 8 1 58 1 337 1 353 1 103 1 9 1 191 1 214 2 340 1 164 1 256 1 320 1 297 1 342 1 118 2 363 1 323 1 365 1 366 1 146 1 299 2 199 1 201 1 91 1 
233 1 306 1 332 1 333 1 32 1 8 1 58 1 337 1 269 1 353 1 103 1 9 1 191 1 214 2 340 1 164 1 256 1 320 1 170 1 342 1 118 3 363 1 323 1 365 1 366 1 299 3 199 1 201 1 27 1 91 2 
233 1 256 1 306 1 332 1 342 1 323 1 118 2 333 1 365 1 366 1 32 1 299 2 337 1 199 1 103 1 353 1 269 1 201 1 27 1 9 1 191 1 91 2 214 2 340 1 164 1 
306 1 124 1 93 1 234 1 332 2 333 2 32 1 8 1 9 1 191 2 161 1 213 1 340 2 253 1 139 1 320 1 170 1 323 1 118 1 145 1 299 1 199 1 303 1 
233 1 306 1 95 1 332 1 333 1 32 1 8 1 58 1 337 1 353 1 103 1 9 1 191 1 214 2 340 1 256 1 320 1 297 1 342 1 118 1 363 1 323 1 365 1 299 1 199 1 27 1 
210 1 
92 1 284 1 53 1 207 1 287 1 158 2 160 1 9 2 161 1 213 1 292 1 106 1 295 3 14 2 109 2 169 1 171 1 21 1 343 1 344 1 223 1 301 1 303 1 67 1 266 1 306 1 234 2 126 1 187 1 268 1 32 2 189 1 313 1 315 2 272 1 84 1 361 1 323 1 145 1 325 1 246 3 199 2 372 1 374 1 204 1 
92 1 284 1 187 1 207 1 208 1 158 2 313 1 292 1 272 1 295 3 84 1 14 2 361 1 171 1 21 1 325 1 246 3 301 1 372 1 375 1 67 1 204 1 
92 1 284 1 187 1 207 1 130 1 158 1 102 1 313 1 292 1 272 1 295 3 84 1 14 3 361 1 171 1 196 1 21 1 325 1 246 3 301 1 372 1 375 1 67 1 204 1 
92 1 284 1 187 1 207 1 208 1 130 1 158 2 102 1 313 1 237 1 292 1 272 1 295 3 84 1 14 3 361 1 171 1 196 1 21 1 325 1 246 3 301 1 372 1 375 1 67 1 204 1 
266 1 92 1 284 1 126 1 53 1 187 1 207 1 208 2 268 1 158 3 209 1 189 1 313 1 237 2 292 1 315 1 272 1 295 3 84 1 14 2 109 1 169 1 361 1 112 1 171 1 21 1 343 1 325 1 246 3 198 1 301 1 372 1 374 1 375 1 67 1 376 1 176 1 204 1 
92 1 266 1 126 1 53 1 187 1 207 1 268 1 189 1 313 1 292 1 315 1 272 1 295 2 84 1 14 2 109 1 169 1 361 1 171 1 21 1 343 1 325 1 246 2 301 1 372 1 374 1 67 1 204 1 
266 1 92 1 126 1 53 1 187 1 207 1 268 1 209 1 189 1 313 1 292 1 315 1 272 1 295 2 84 1 14 2 109 1 361 1 169 1 112 1 171 1 21 1 343 1 325 1 246 2 301 1 372 1 198 1 374 1 67 1 204 1 
266 1 92 1 126 1 53 1 187 1 207 1 268 1 209 1 189 1 313 1 292 1 315 1 272 1 295 2 84 1 14 2 109 1 361 1 169 1 112 1 171 1 21 1 343 1 325 1 246 2 301 1 372 1 198 1 374 1 67 1 204 1 
92 1 70 2 284 2 98 2 126 1 53 1 187 1 208 2 207 1 130 1 335 1 158 4 268 2 209 1 102 2 189 2 313 1 237 2 292 1 315 1 272 1 295 4 84 1 14 4 37 1 109 1 361 1 169 1 171 1 196 1 322 2 21 1 343 1 325 1 246 4 301 1 372 1 374 1 67 1 264 1 204 1 
266 1 92 1 126 1 53 1 187 1 207 1 208 1 268 1 158 1 209 1 102 1 189 1 313 1 237 1 292 1 315 1 272 1 295 2 84 1 14 3 109 1 169 1 361 1 112 1 171 1 21 1 343 1 325 1 246 2 198 1 301 1 372 1 374 1 67 1 376 1 204 1 
266 1 92 1 126 1 53 1 187 1 207 1 208 1 268 1 158 1 209 1 102 1 189 1 313 1 237 1 292 1 315 1 272 1 295 2 84 1 14 3 109 1 169 1 361 1 112 1 171 1 21 1 343 1 325 1 246 2 198 1 301 1 372 1 374 1 67 1 376 1 204 1 
92 1 284 2 98 2 53 1 207 1 208 2 158 4 102 2 292 1 295 4 14 4 109 1 169 1 171 1 21 1 343 1 301 1 67 1 70 2 126 1 187 1 130 1 268 2 189 2 313 1 237 2 272 1 315 1 84 1 37 1 361 1 196 1 322 2 325 1 246 4 369 1 372 1 374 1 204 1 
47 1 330 1 73 1 56 1 129 1 7 2 77 3 190 1 357 1 316 1 36 1 168 1 167 2 319 2 17 1 64 3 296 1 117 2 143 1 23 1 370 1 373 1 25 1 265 1 248 6 304 1 
348 2 156 4 123 1 184 1 94 2 73 16 129 2 7 2 157 1 75 2 77 9 288 4 190 2 79 1 357 2 316 16 61 4 36 2 167 4 168 2 16 1 319 4 17 4 64 13 117 1 324 1 23 6 373 1 173 2 263 4 154 1 248 22 304 2 
306 2 185 1 2 1 234 2 32 7 159 1 132 1 77 1 313 1 9 8 190 2 354 1 79 1 161 1 357 2 213 2 36 2 13 1 168 2 16 1 361 1 194 1 319 4 64 1 296 1 21 1 323 2 65 1 145 3 146 1 199 8 373 2 27 1 303 1 248 2 175 2 281 1 282 1 304 2 
30 1 123 1 2 1 185 1 73 1 129 1 7 1 75 1 77 2 190 1 313 1 357 1 316 1 60 1 61 1 36 1 167 1 168 1 319 2 361 1 17 1 64 1 21 1 23 1 367 1 373 1 263 1 248 3 304 1 
167 1 168 1 319 2 17 1 64 2 296 1 94 1 73 1 23 1 373 1 190 1 263 1 248 2 357 1 316 1 304 1 36 1 12 1 
167 1 168 1 319 2 296 1 73 1 23 1 129 1 7 1 75 1 373 1 311 1 77 2 190 1 248 2 357 1 316 1 304 1 36 1 
94 1 73 2 129 1 7 1 75 1 77 2 190 1 357 1 316 2 61 1 36 1 168 1 167 2 17 1 319 2 64 2 296 1 23 2 373 1 263 1 248 4 304 1 
167 1 168 1 319 2 17 1 64 2 94 1 65 1 73 1 23 1 373 1 190 1 263 1 248 2 357 1 316 1 304 1 36 1 12 1 
167 1 168 1 319 2 65 1 73 1 23 1 129 1 7 1 75 1 373 1 311 1 77 2 190 1 248 2 357 1 316 1 304 1 36 1 
94 1 73 2 129 1 7 1 75 1 77 2 190 1 357 1 316 2 61 1 36 1 168 1 167 2 17 1 319 2 64 2 65 1 23 2 373 1 263 1 248 4 304 1 
94 1 73 2 129 1 7 1 75 1 77 2 190 1 357 1 316 2 61 1 36 1 168 1 167 2 17 1 319 2 64 2 23 2 373 1 263 1 248 4 304 1 
178 1 306 1 307 1 234 1 32 1 77 1 9 1 190 1 79 1 213 1 357 1 36 1 168 1 16 1 274 1 361 1 319 2 64 1 117 1 323 1 21 1 145 1 345 1 148 1 199 1 373 1 248 2 304 1 
48 1 50 1 306 1 307 1 234 1 32 1 77 1 9 1 190 1 79 1 213 1 357 1 36 1 168 1 16 1 361 1 319 2 64 1 117 1 323 1 21 1 145 1 148 1 199 1 373 1 248 2 304 1 68 1 
123 1 94 1 73 2 129 1 7 1 75 1 77 2 190 1 357 1 316 2 61 1 36 1 168 1 167 2 17 1 319 2 64 2 23 2 373 1 263 1 248 4 304 1 
178 1 306 1 307 1 94 1 73 2 129 1 74 1 7 1 75 1 32 1 77 2 9 1 190 1 213 1 357 1 316 2 61 1 36 1 167 2 168 1 274 1 17 1 361 1 319 2 64 2 323 1 21 1 145 1 345 1 23 2 146 1 148 1 199 1 373 1 263 1 248 4 304 1 
30 1 123 1 2 1 185 1 94 1 73 1 129 1 75 1 77 1 190 1 313 1 357 1 316 1 61 1 36 1 167 1 168 1 319 2 361 1 17 1 64 2 21 1 23 1 367 1 373 1 263 1 248 3 45 1 304 1 
306 1 307 1 123 1 185 1 2 1 234 1 308 1 32 1 100 1 77 1 78 1 9 1 190 1 313 1 79 1 213 1 357 1 36 1 168 1 16 1 274 1 361 2 194 1 319 2 64 1 117 1 323 1 21 2 86 1 145 1 144 1 345 1 23 1 148 1 199 1 373 1 248 2 304 1 
47 1 2 1 94 4 56 1 7 4 101 2 9 3 213 2 61 2 168 3 167 8 16 1 17 3 64 10 117 2 21 3 345 2 23 7 25 1 27 1 263 2 265 1 304 3 178 2 306 2 123 1 307 2 185 1 234 1 310 2 73 7 129 3 74 2 32 3 75 2 77 10 313 1 190 3 79 1 357 3 316 7 82 1 36 3 274 2 319 6 194 1 361 3 323 2 143 1 144 1 145 2 368 2 148 2 370 1 199 3 373 3 153 1 248 20 377 1 
348 1 156 3 94 3 128 1 129 4 7 3 57 1 75 4 77 16 133 1 288 2 190 4 356 1 338 1 357 4 61 4 238 1 165 1 168 4 167 6 108 1 319 8 17 4 111 1 64 15 19 1 220 1 364 1 277 3 26 2 226 1 28 1 263 4 154 2 248 31 304 4 
348 2 156 4 94 4 128 1 129 6 7 4 57 2 75 6 77 22 133 1 288 4 134 1 190 3 356 1 338 1 357 3 61 7 238 1 165 1 167 8 168 3 108 1 319 6 17 7 111 1 64 24 19 2 277 4 173 2 26 2 226 1 28 1 263 7 248 46 154 2 304 3 
179 1 348 2 156 5 94 6 128 1 129 5 7 4 57 1 75 5 77 21 133 1 288 5 134 1 190 4 356 1 338 1 357 4 61 7 238 1 165 1 168 4 167 10 108 1 319 8 17 7 111 1 64 25 19 2 364 1 277 4 173 2 26 2 226 1 28 1 263 7 154 3 248 46 304 4 
348 1 156 3 94 3 128 1 129 4 7 2 57 1 75 4 77 17 133 1 288 2 134 1 190 4 356 1 338 1 357 4 61 4 238 1 165 1 168 4 167 5 108 1 319 8 17 4 111 1 64 16 19 1 364 1 277 4 26 2 226 1 28 1 263 4 154 2 248 33 304 4 
47 1 348 2 156 4 94 6 128 1 56 1 129 8 7 8 57 1 75 7 77 27 133 1 288 4 134 1 190 3 356 1 338 1 357 3 61 7 238 1 165 1 168 3 167 14 108 1 319 6 17 8 111 1 64 27 19 1 143 1 277 4 370 1 25 1 173 2 26 2 226 1 28 1 263 7 265 1 154 2 248 54 304 3 
352 1 224 1 42 1 205 1 35 1 230 1 122 1 271 1 202 1 351 1 
33 1 314 1 
239 1 352 1 224 1 35 1 244 1 275 1 230 1 122 1 271 1 
250 1 205 1 40 1 22 1 246 1 352 1 120 1 130 1 224 1 42 1 35 1 228 2 44 1 271 1 122 1 230 1 202 1 295 1 
250 1 205 1 40 1 22 1 246 1 352 1 120 1 130 1 224 1 42 1 35 1 228 2 44 1 271 1 122 1 230 1 202 1 295 1 
250 1 205 1 40 1 22 1 246 1 352 1 120 1 130 1 224 1 42 1 35 1 228 2 44 1 271 1 122 1 230 1 202 1 295 1 
69 1 181 1 138 1 
69 1 181 1 138 1 
10 1 177 1 
69 1 10 1 177 1 
355 1 81 1 
2 2 185 2 352 1 33 1 104 1 313 2 35 1 314 1 81 1 355 1 271 1 339 1 295 1 15 1 110 1 361 2 117 1 21 2 20 1 22 1 120 1 246 1 224 1 228 1 90 1 230 1 122 1 
181 1 138 1 
69 1 10 1 177 1 
306 1 155 1 123 1 97 1 32 2 159 1 77 1 9 2 313 2 190 1 289 1 79 1 213 1 357 1 359 1 36 1 293 1 168 1 16 1 361 2 319 2 64 1 323 1 21 2 145 1 199 2 373 1 248 2 175 2 281 1 304 1 
233 1 256 1 306 1 332 1 342 1 186 1 323 1 363 1 365 1 146 1 32 2 300 1 199 2 337 1 103 1 27 1 9 2 214 2 273 1 
233 1 256 1 306 1 332 1 342 1 363 1 323 1 365 1 32 1 300 1 199 1 337 1 103 1 279 1 27 1 9 1 214 2 
306 1 124 1 234 1 332 1 186 1 323 1 145 1 32 1 199 1 302 1 9 1 303 1 161 1 213 1 
233 1 256 1 306 1 332 1 342 1 186 1 323 1 363 1 365 1 32 1 300 1 199 1 337 1 103 1 27 1 9 1 214 2 273 1 
59 1 
130 1 49 1 109 1 327 1 330 1 196 1 315 1 
49 1 109 1 169 1 327 1 196 1 126 1 53 1 343 1 130 1 315 1 
240 1 109 5 17 2 258 5 329 5 310 1 322 10 129 2 130 5 75 2 131 5 326 2 263 2 315 5 61 2 
246 1 130 1 158 1 284 1 196 1 295 1 
306 1 284 2 125 1 267 1 234 2 126 2 53 2 287 2 32 4 158 4 160 2 9 4 161 1 213 1 315 2 106 1 294 2 255 1 295 3 109 2 169 1 257 1 323 1 343 2 145 1 344 1 246 3 199 4 303 1 
30 2 178 1 306 1 51 1 307 1 185 2 2 2 234 1 32 1 77 1 190 1 9 1 313 2 213 1 357 1 36 1 318 1 168 1 16 1 274 1 319 2 361 3 117 1 21 3 323 1 145 1 345 1 148 1 199 1 373 1 248 1 304 1 
47 1 109 1 169 1 258 2 329 2 196 2 126 1 322 4 53 1 343 1 287 1 130 4 131 2 160 1 315 2 
266 1 109 1 169 1 126 1 315 1 53 1 343 1 
49 1 284 3 327 1 329 6 53 4 4 1 286 2 287 2 158 5 160 1 9 3 291 2 213 3 61 2 162 2 294 1 295 5 166 2 109 9 169 4 17 2 258 6 259 2 343 4 263 2 67 2 306 3 307 3 350 1 125 1 234 1 126 4 310 2 129 2 130 8 32 3 75 2 235 3 131 6 188 1 315 8 240 2 141 2 196 2 276 1 323 4 322 12 145 10 245 2 146 1 246 5 199 3 326 2 43 2 
348 1 284 1 156 2 329 5 126 2 53 2 128 1 129 4 287 1 130 7 252 1 158 1 75 4 160 1 131 8 288 2 338 1 315 8 61 4 165 1 295 1 240 1 108 1 109 13 169 2 17 4 258 8 196 2 197 1 322 10 343 2 246 1 173 1 326 3 28 1 263 4 154 1 
30 1 51 1 2 1 185 1 126 1 53 1 251 1 129 1 313 1 192 1 315 2 136 1 137 1 295 1 240 1 84 1 109 2 361 1 169 1 17 2 21 1 343 1 143 1 246 1 370 1 198 1 326 2 265 1 
352 1 41 1 355 1 230 1 202 1 
352 1 85 1 230 1 
352 1 85 1 230 1 
352 1 85 1 230 1 
352 1 212 1 230 1 
352 1 212 1 230 1 
352 1 212 1 230 1 
352 1 230 1 
224 1 122 1 
47 1 167 3 168 2 17 1 319 4 64 4 94 1 143 1 129 1 56 1 7 2 370 1 77 4 25 1 190 2 26 1 265 1 248 8 357 2 304 2 
47 1 167 2 17 1 64 3 330 1 143 1 56 1 129 1 7 2 370 1 77 3 25 1 265 1 248 6 
167 2 168 1 319 2 17 1 64 2 94 1 129 1 7 1 75 1 87 1 77 2 190 1 263 1 248 4 357 1 304 1 61 1 
348 1 167 2 156 2 17 2 64 6 94 1 129 2 7 1 75 2 77 6 173 1 288 2 263 2 154 1 248 12 61 2 
47 1 348 1 156 2 184 1 94 4 56 1 129 3 7 5 75 2 336 1 77 12 288 2 190 2 357 2 61 2 167 9 168 2 17 3 319 4 64 11 143 1 370 2 25 1 173 1 26 2 263 2 265 2 248 23 304 2 
156 1 77 1 248 1 
288 1 64 1 248 1 
168 1 167 3 319 2 17 1 64 3 94 1 310 1 129 1 7 2 75 1 87 1 77 3 190 1 263 1 248 6 357 1 304 1 61 1 
348 1 156 2 94 2 128 1 129 4 7 2 75 4 77 11 288 2 190 1 357 1 338 1 61 4 165 1 168 1 167 4 108 1 319 2 17 4 64 11 173 1 226 1 28 1 263 4 248 22 154 1 304 1 
167 2 17 1 64 3 94 1 143 1 129 1 7 1 370 1 77 3 265 1 248 6 
167 2 168 1 319 2 64 1 94 1 56 1 7 1 370 1 336 1 77 2 25 1 26 1 190 1 265 1 248 3 357 1 304 1 
168 1 167 5 319 2 17 2 64 5 94 2 143 1 129 2 7 3 370 2 77 5 190 1 226 1 265 2 248 10 357 1 304 1 137 1 
168 1 167 1 319 2 17 1 64 2 94 1 226 1 190 1 263 1 248 2 357 1 304 1 
167 2 168 1 319 2 17 1 64 2 94 1 129 1 7 1 75 1 77 2 226 1 190 1 263 1 248 4 357 1 304 1 61 1 
168 3 167 2 319 6 64 1 94 1 364 1 7 1 370 1 336 1 77 2 26 1 226 1 190 3 265 1 248 3 357 3 304 3 
156 1 94 3 129 2 56 1 7 3 336 1 77 8 288 1 190 4 357 4 137 1 167 6 168 4 17 2 319 8 64 7 364 1 143 1 370 2 87 1 25 1 226 1 26 1 265 2 154 1 248 15 249 1 304 4 
47 1 156 1 94 4 128 1 56 1 129 4 7 5 75 1 77 10 288 1 190 2 357 2 338 1 61 2 137 1 165 1 168 2 167 9 108 1 319 4 17 5 64 14 143 2 370 2 25 1 26 1 226 1 28 1 263 2 265 2 248 24 154 1 304 2 
47 1 348 1 156 2 94 1 129 1 56 1 7 2 77 5 288 1 190 2 357 2 61 1 168 2 167 3 319 4 17 2 64 6 143 1 370 1 87 1 25 1 226 1 28 1 263 1 265 1 248 11 154 1 304 2 
47 1 348 1 156 2 94 2 128 1 56 1 129 5 7 4 75 4 77 15 288 2 190 3 357 3 338 1 61 4 165 1 168 3 167 6 108 1 319 6 17 5 64 14 143 1 370 1 87 1 25 1 173 1 26 1 226 1 28 1 263 4 265 1 248 29 154 1 304 3 
47 1 348 1 156 2 94 3 128 1 56 1 129 4 7 4 75 3 77 12 288 2 190 3 357 3 338 1 61 4 165 1 168 3 167 7 108 1 319 6 17 5 64 15 143 1 370 1 87 1 25 1 173 1 26 1 226 1 28 1 263 4 265 1 248 27 154 1 304 3 
47 1 156 1 94 4 128 1 56 1 129 4 7 5 75 1 77 10 288 1 190 2 357 2 338 1 61 2 137 1 165 1 168 2 167 9 108 1 319 4 17 5 64 14 143 2 370 2 25 1 26 1 226 1 28 1 263 2 265 2 248 24 154 1 304 2 
348 1 156 2 94 2 128 1 129 4 7 2 75 4 77 11 288 2 190 1 357 1 338 1 61 4 165 1 168 1 167 4 108 1 319 2 17 4 64 11 173 1 226 1 28 1 263 4 248 22 154 1 304 1 
47 1 348 1 156 2 94 3 128 1 56 1 129 4 7 4 75 3 77 13 288 2 190 4 338 1 357 4 61 4 165 1 168 4 167 7 108 1 319 8 17 5 64 15 143 1 370 1 87 1 25 1 173 1 26 2 226 1 28 1 263 4 265 1 248 28 154 1 304 4 
348 1 156 2 129 1 7 1 75 1 77 4 288 1 190 2 357 2 61 1 168 2 167 1 319 4 17 1 64 3 364 1 226 1 28 1 263 1 248 7 154 1 304 2 
167 6 17 1 64 3 94 3 143 1 129 1 56 2 7 3 370 3 77 4 25 1 265 3 248 7 
348 1 156 2 129 1 7 1 75 1 77 4 288 1 190 2 357 2 61 1 168 2 167 1 319 4 17 1 64 3 364 1 226 1 28 1 263 1 248 7 154 1 304 2 
361 1 63 1 313 1 117 1 21 1 204 1 163 1 
38 1 63 1 361 1 117 1 21 1 347 1 105 1 262 1 313 1 80 1 204 1 163 1 
32 1 306 1 199 1 303 1 9 1 330 1 161 1 234 1 213 1 323 1 145 1 
341 1 306 1 234 1 323 1 119 1 145 1 146 1 32 4 199 4 9 4 303 1 161 1 213 1 
216 1 306 1 307 1 127 1 99 1 323 2 145 1 32 2 199 2 9 2 153 1 135 1 213 1 294 1 
233 1 32 1 306 1 337 1 199 1 103 1 9 1 234 1 214 1 323 1 
306 1 97 1 323 1 145 1 146 1 32 2 199 2 9 2 27 1 281 1 213 1 
306 2 234 1 323 2 119 1 145 3 146 1 32 4 199 5 132 1 303 1 9 5 161 1 281 1 213 2 294 1 13 1 
306 2 234 1 323 2 119 1 145 3 146 1 32 4 199 5 132 1 303 1 9 5 161 1 281 1 213 2 317 1 294 1 
306 1 194 1 361 2 307 1 2 1 185 1 234 1 117 1 323 1 21 2 145 1 148 1 32 1 199 1 313 1 9 1 213 1 68 1 
306 1 307 1 127 1 323 2 4 1 145 1 5 1 32 1 199 1 9 1 135 1 213 1 294 1 
274 1 306 1 194 1 361 2 307 1 2 1 185 1 234 1 117 1 323 1 21 2 145 1 148 1 32 1 199 1 313 1 9 1 213 1 
306 1 307 2 185 2 2 1 32 1 9 1 313 2 213 2 294 1 166 1 84 1 274 1 361 2 194 1 171 1 117 1 21 2 323 1 145 3 245 1 148 1 199 1 372 1 
306 1 307 2 185 2 2 1 32 2 9 2 313 2 213 2 294 1 166 1 341 1 84 1 361 2 194 1 171 1 117 1 21 2 323 1 145 3 245 1 148 1 199 2 372 1 68 1 
166 1 341 1 141 1 306 1 307 1 196 1 234 1 323 1 245 1 145 4 246 2 130 1 32 3 158 1 235 1 199 3 9 3 67 1 11 1 213 1 29 1 295 2 294 1 
166 1 341 1 141 1 306 1 307 1 196 1 234 1 323 1 245 1 145 4 246 2 130 1 32 3 158 1 235 1 199 3 9 3 67 1 213 1 162 1 295 2 294 1 
32 1 306 1 199 1 9 1 354 1 323 1 
306 2 307 1 234 2 127 1 323 3 4 1 145 3 5 1 146 1 32 6 132 1 199 7 27 1 9 7 354 1 175 1 135 1 281 1 213 2 282 1 13 1 
47 1 2 1 56 1 7 2 9 1 289 1 213 1 168 2 167 2 17 1 64 3 21 2 117 2 345 1 23 1 25 1 265 1 304 2 178 1 306 1 123 1 307 1 185 1 73 1 74 1 129 1 32 1 77 3 313 1 190 2 357 2 316 1 36 2 274 1 319 4 194 1 361 2 323 1 143 1 145 1 146 1 368 1 148 1 370 1 199 1 373 2 248 6 
49 1 284 1 327 1 125 1 234 1 126 2 53 2 286 1 130 1 32 1 158 2 235 1 104 1 9 1 291 1 315 1 162 1 295 3 109 1 141 1 169 2 196 1 343 2 145 2 246 3 199 1 43 1 67 1 
141 1 306 1 307 1 276 1 323 2 4 1 145 2 146 1 32 2 199 2 9 2 354 1 213 1 
283 1 278 1 225 1 117 1 72 1 
84 1 349 1 283 2 171 1 196 1 362 1 117 1 334 1 72 2 246 2 130 1 278 2 346 1 372 1 301 1 104 1 225 1 67 1 295 2 
155 1 361 1 21 1 72 1 278 1 225 1 313 1 359 1 293 1 
349 1 225 1 362 1 
366 1 201 1 330 1 164 1 
366 1 8 1 299 1 320 1 201 1 118 1 164 1 
299 1 191 1 333 1 
320 1 95 1 115 2 116 1 118 3 366 1 8 1 299 3 200 1 201 1 121 1 164 1 
366 1 8 1 0 1 299 2 320 1 201 1 91 1 118 2 164 1 
233 1 366 1 8 1 299 1 320 1 88 1 174 1 95 1 342 1 214 1 118 1 
366 1 8 1 299 1 320 1 95 1 118 1 164 1 
8 1 299 1 320 1 201 1 95 1 118 1 164 2 
320 2 195 1 285 1 95 1 118 2 366 1 8 2 299 2 62 1 164 1 
366 2 8 1 299 3 320 1 201 1 142 1 174 1 95 1 96 1 91 2 118 3 203 1 164 1 
256 1 233 1 320 1 95 1 342 1 118 2 366 1 8 1 299 2 150 1 103 1 201 1 91 1 214 2 164 1 
366 2 8 2 0 1 299 4 320 2 201 1 174 1 290 1 95 1 91 2 118 4 203 1 164 1 
366 1 8 1 299 1 320 1 201 1 95 1 118 1 164 1 
140 1 320 1 115 1 118 4 366 3 8 1 299 4 200 1 201 2 121 1 174 1 91 2 203 1 164 2 
366 1 8 1 299 2 320 1 201 1 242 1 95 1 91 1 52 1 206 1 118 2 164 1 
366 1 8 1 299 3 200 2 320 1 201 1 121 1 95 1 115 2 118 3 164 1 360 1 
366 2 180 2 219 1 172 1 
261 1 8 1 299 1 320 1 95 1 118 1 
366 1 8 1 299 2 320 1 201 1 95 1 96 1 91 1 118 2 164 1 
309 1 
366 1 8 1 299 1 320 1 201 1 95 1 118 1 164 1 
320 1 95 1 96 1 115 1 118 3 366 1 8 1 299 3 201 1 91 1 164 1 
366 1 140 1 174 1 203 1 
366 1 164 1 

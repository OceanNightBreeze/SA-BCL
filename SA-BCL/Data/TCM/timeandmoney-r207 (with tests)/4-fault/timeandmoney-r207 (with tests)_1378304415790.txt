#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (31,199) (31,199) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (31,199) (31,199) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (31,199) (31,199) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (31,199) (31,199) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (166,210,316) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (166,210,316) 222 82 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (166,210,316) 222 32 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (166,210,316) (166,210,316) 208 85 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (166,210,316) 222 342 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 153 (44,344) (44,344) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
110 1 31 1 211 1 199 1 118 1 187 1 212 1 358 1 345 1 360 1 231 1 
110 1 31 1 211 1 199 1 118 1 187 1 212 1 358 1 345 1 360 1 231 1 
110 1 31 1 211 1 199 1 118 1 187 1 212 1 358 1 345 1 360 1 231 1 
110 1 31 1 211 1 199 1 118 1 187 1 212 1 358 1 345 1 360 1 231 1 
232 1 211 4 314 3 99 1 44 1 58 1 234 2 158 1 235 1 118 1 176 2 187 1 344 1 153 2 345 1 358 4 190 1 194 1 347 1 
211 2 232 1 99 1 44 1 212 1 59 1 235 1 214 1 309 1 118 1 187 1 344 1 345 1 358 2 303 1 231 1 
211 3 314 1 99 1 44 1 234 1 212 1 118 2 187 2 344 1 153 1 345 1 358 3 189 1 194 1 
99 1 44 1 176 2 344 1 153 4 345 1 329 1 347 1 314 7 211 9 232 1 58 1 234 4 212 1 158 1 235 1 117 1 90 1 118 2 187 2 189 1 358 9 190 1 361 1 194 3 
99 1 44 1 176 2 344 1 153 4 345 1 329 1 347 1 314 7 211 9 232 1 58 1 234 4 212 1 158 1 235 1 117 1 90 1 118 2 187 2 189 1 358 9 190 1 361 1 194 3 
72 1 164 1 161 1 
52 1 164 1 263 2 
2 2 359 1 147 2 116 2 237 2 315 2 223 1 180 2 
172 1 2 2 268 1 221 1 291 1 147 2 127 1 224 1 223 1 3 1 271 1 5 1 129 2 326 2 53 2 274 1 277 1 180 2 181 1 111 1 86 1 334 1 352 1 160 1 353 2 116 2 12 1 237 3 315 3 186 1 91 1 359 1 215 1 18 1 70 1 140 2 339 1 
2 1 242 1 281 1 147 1 116 1 237 1 302 1 315 1 223 1 180 1 
143 1 2 1 166 1 237 1 210 1 315 1 
2 1 147 1 116 1 237 1 210 1 315 1 180 1 
79 1 318 1 183 1 275 1 316 1 
164 1 112 1 79 1 183 2 275 1 23 1 161 1 316 2 
79 1 183 1 316 1 
2 1 183 1 281 1 147 1 116 1 237 1 302 1 223 1 315 1 316 1 242 1 275 1 130 1 180 1 
164 1 
164 1 112 1 79 1 183 2 275 1 161 1 321 1 316 2 
112 1 340 1 183 5 61 1 62 2 161 1 355 1 316 5 77 1 164 1 297 1 325 1 79 2 275 2 54 1 254 2 170 2 96 1 299 1 
72 1 359 1 
2 2 147 1 116 1 237 2 315 2 165 1 359 2 256 1 180 1 
87 1 83 1 294 1 
86 1 268 1 127 1 12 1 237 1 315 1 224 1 186 1 5 1 326 1 359 1 53 1 18 1 276 1 277 1 140 1 
86 1 2 1 268 1 127 1 147 1 12 1 116 1 262 1 237 2 224 1 315 2 186 1 5 1 326 1 53 1 18 1 8 1 277 1 140 1 83 1 
143 1 2 5 147 4 134 1 116 4 262 2 237 5 315 5 4 1 228 1 359 1 8 1 256 1 180 1 
2 2 203 1 242 1 147 2 116 2 237 2 302 1 315 2 
2 3 359 1 147 3 116 3 262 1 237 3 315 3 180 1 
2 1 242 1 147 1 116 1 237 1 302 1 315 1 
165 1 2 1 242 1 147 1 116 1 237 1 315 1 180 1 256 1 
2 2 8 1 222 1 82 1 147 2 116 2 237 2 262 1 210 1 315 2 180 1 256 1 
143 1 2 2 359 1 147 1 134 1 116 1 237 2 262 1 315 2 
32 1 2 1 8 1 222 1 147 1 116 1 237 1 262 1 210 1 315 1 
2 2 87 1 147 2 116 2 262 1 237 2 315 2 83 1 256 1 180 1 
86 1 268 1 127 1 12 1 237 1 315 1 224 1 186 1 5 1 326 1 359 1 53 1 18 1 277 1 140 1 
257 1 86 1 341 1 127 1 237 1 315 1 224 1 186 1 5 1 326 1 359 1 53 1 18 1 277 1 140 1 
43 1 198 1 145 1 291 1 100 1 294 2 3 1 76 1 129 2 273 1 274 2 83 2 331 1 108 1 111 1 87 2 160 1 353 4 283 1 135 1 284 1 215 1 70 1 339 2 
2 1 242 1 203 1 147 1 155 1 116 1 237 1 315 1 
244 1 168 1 
244 1 168 1 
354 1 27 1 
354 1 27 1 
354 1 27 1 
244 1 33 1 168 1 
244 1 33 1 168 1 
244 1 236 1 168 1 
244 2 307 1 24 1 354 1 168 2 27 1 
244 1 33 1 168 1 
244 1 168 1 311 1 
244 1 168 1 311 1 
244 1 168 1 311 1 
244 1 233 1 332 1 2 2 132 1 183 1 147 2 236 1 116 2 237 2 315 2 205 1 316 1 238 1 64 1 65 1 28 1 359 1 123 1 168 1 330 1 179 1 98 1 30 1 
157 1 244 2 332 2 183 2 24 1 205 1 316 2 49 1 336 1 238 3 15 1 39 1 164 1 64 2 28 2 178 1 168 2 305 2 30 2 
232 1 235 1 347 1 
232 1 303 1 235 1 
197 1 303 1 235 3 328 1 14 1 347 2 
303 1 235 2 328 1 14 1 347 1 97 1 
303 1 235 2 328 2 14 1 347 1 
218 1 200 1 145 1 340 3 148 1 25 2 102 1 206 2 77 2 52 1 207 2 79 1 273 1 105 1 275 4 254 1 331 1 280 1 233 1 112 1 258 1 183 5 132 1 62 1 161 1 263 3 316 5 284 1 164 2 65 1 170 1 96 1 
218 3 200 2 145 3 340 8 220 1 25 6 102 1 77 6 52 3 207 6 79 6 273 3 275 7 254 2 331 3 299 1 350 5 112 1 258 2 132 4 183 9 335 1 62 2 161 1 263 9 356 1 316 9 284 3 164 5 92 1 318 5 169 1 243 1 170 2 96 1 
218 1 200 1 340 3 145 1 25 2 206 1 77 2 52 2 207 2 273 1 275 2 105 1 254 1 331 1 299 1 280 1 258 1 183 3 132 1 62 1 161 1 263 4 316 3 164 3 284 1 170 1 
218 2 200 1 340 5 145 2 220 1 25 4 206 2 77 4 52 3 207 4 273 2 105 1 275 3 254 1 331 2 299 1 280 1 258 1 183 4 132 2 335 1 62 1 161 1 263 7 316 4 164 4 284 2 92 1 170 1 
72 1 119 1 224 1 
300 1 224 1 
55 1 
18 1 224 1 186 1 
89 1 224 1 
224 1 186 1 
119 2 177 1 333 1 18 1 224 3 186 1 
266 1 100 2 353 7 133 1 225 1 135 3 284 1 122 1 68 1 191 1 274 3 265 1 331 1 196 1 106 2 42 1 339 4 
266 1 100 2 353 7 133 1 225 1 135 3 284 1 122 1 68 1 191 1 274 3 265 1 331 1 196 1 106 2 42 1 339 4 
266 1 100 2 353 7 133 1 225 1 135 3 37 1 284 1 122 1 68 1 191 1 274 3 265 1 331 1 196 1 42 1 106 2 339 4 
218 3 266 1 145 3 291 1 100 5 293 1 225 1 3 1 103 1 343 1 129 2 6 1 273 3 7 1 274 15 81 1 106 3 331 4 57 3 111 1 11 4 133 1 353 31 135 10 38 1 284 4 122 2 191 2 215 1 68 5 265 2 42 1 196 2 339 16 
291 2 100 3 3 2 225 1 251 1 129 4 274 4 331 1 106 2 111 2 282 1 353 9 133 1 135 4 38 1 284 1 122 1 215 2 68 1 191 1 265 1 42 1 196 1 339 5 
21 1 99 1 44 1 201 1 197 1 126 1 248 1 249 1 48 1 175 1 5 1 344 1 326 1 345 1 53 1 277 1 347 1 314 1 232 1 211 2 212 1 113 1 235 2 301 1 118 1 187 1 358 2 303 1 140 1 71 1 
21 1 99 1 44 1 197 1 201 1 126 1 248 1 249 1 149 1 5 1 344 1 326 1 53 1 277 1 347 1 232 1 211 3 314 2 212 1 113 1 235 2 301 1 213 1 63 1 118 1 187 1 358 3 303 1 140 1 71 1 
21 1 99 1 44 1 197 1 126 1 249 1 5 1 344 1 326 1 53 1 277 1 347 1 211 2 314 2 232 1 212 1 113 1 235 2 301 1 213 1 63 1 358 2 303 1 140 1 71 1 
211 1 21 2 86 1 212 2 46 1 60 1 159 1 249 2 301 2 149 1 224 1 128 1 186 1 5 1 118 1 187 1 326 1 358 1 53 1 277 1 20 1 140 1 195 1 
21 1 201 1 197 1 126 1 248 1 249 1 48 1 5 1 326 1 345 1 53 1 277 1 347 1 232 1 211 1 212 1 113 1 235 2 301 1 63 1 118 1 187 1 358 1 303 1 140 1 71 1 
349 1 
143 1 200 1 2 1 340 1 101 1 224 1 128 1 5 1 77 1 208 1 326 2 29 1 79 2 53 2 277 1 254 1 210 1 112 1 85 1 86 2 183 2 62 1 237 1 315 1 185 1 316 2 35 1 186 1 166 1 20 1 140 2 94 1 170 1 96 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 112 1 85 1 2 1 183 2 237 1 315 1 316 2 185 1 208 1 79 1 166 1 210 1 94 1 321 1 
143 1 85 1 2 1 183 1 62 1 237 1 315 1 316 1 185 1 208 1 166 1 254 1 210 1 170 1 94 1 96 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 208 1 2 1 166 1 183 1 237 1 210 1 315 1 94 1 185 1 316 1 
143 1 85 1 2 1 183 1 62 1 237 1 315 1 316 1 185 1 208 1 166 1 254 1 210 1 170 1 94 1 96 1 
72 1 111 1 87 1 160 1 291 1 353 6 100 2 133 1 294 1 225 1 135 2 76 1 3 1 129 2 284 1 359 2 191 1 215 1 274 3 70 1 83 1 106 1 331 1 42 1 196 1 339 3 
218 2 75 1 145 2 22 1 291 2 100 1 174 1 293 1 294 11 3 2 103 1 129 4 273 1 274 6 83 11 331 1 56 1 298 1 181 1 57 3 111 2 11 3 87 4 160 2 353 14 135 2 91 1 284 2 359 1 68 1 215 2 70 1 339 8 
75 1 2 1 268 1 127 1 291 1 147 1 224 1 3 1 5 1 129 2 326 1 53 1 8 1 274 1 277 1 276 1 181 1 111 1 86 1 87 1 160 1 12 1 116 1 353 2 237 2 262 1 315 2 186 1 337 1 91 1 359 1 215 1 18 1 19 1 216 1 70 1 140 1 339 1 
247 1 2 1 45 2 145 2 147 1 291 3 100 4 294 7 3 3 295 2 5 2 326 3 53 3 8 1 106 1 331 3 111 3 160 3 116 1 12 2 262 1 63 1 16 2 215 3 68 4 18 2 70 3 171 1 339 10 218 2 75 1 268 2 127 2 224 2 225 1 129 6 78 2 273 2 274 10 277 2 83 7 181 1 86 1 87 7 352 2 133 1 353 20 237 3 315 3 186 2 135 8 91 1 284 3 359 2 191 1 139 1 140 3 196 1 42 1 
142 1 219 1 288 1 2 1 221 2 147 1 291 2 224 3 128 1 175 1 76 1 3 2 5 2 129 4 326 7 53 8 274 1 277 2 253 1 346 1 181 1 111 2 86 2 160 2 116 1 353 2 237 1 262 1 63 1 315 1 186 2 163 1 91 1 137 1 215 2 70 2 20 1 140 8 339 1 
218 1 75 1 2 1 145 1 250 1 291 1 147 1 100 1 294 1 3 1 129 2 273 1 274 2 83 1 331 1 180 1 256 1 111 1 87 1 160 1 116 1 353 3 237 1 315 1 135 1 284 1 215 1 70 1 339 1 
111 1 145 1 87 1 160 1 291 1 353 2 294 1 135 1 76 1 3 1 129 2 284 1 68 1 215 1 70 1 83 1 108 1 339 2 
111 1 87 1 160 1 291 1 100 1 353 2 294 1 135 1 76 1 3 1 283 1 129 2 215 1 273 1 274 2 70 1 83 1 331 1 
218 1 145 1 291 1 100 1 294 2 3 1 76 1 129 2 273 1 274 2 83 2 331 1 111 1 87 2 160 1 353 4 135 2 284 1 215 1 68 1 70 1 339 2 
142 1 111 1 145 1 87 1 160 1 291 1 353 2 294 1 135 1 3 1 129 2 284 1 68 1 215 1 70 1 83 1 108 1 339 2 
142 1 111 1 87 1 160 1 291 1 100 1 353 2 294 1 135 1 3 1 283 1 129 2 215 1 273 1 274 2 70 1 83 1 331 1 
142 1 218 1 145 1 291 1 100 1 294 2 3 1 129 2 273 1 274 2 83 2 331 1 111 1 87 2 160 1 353 4 135 2 284 1 215 1 68 1 70 1 339 2 
218 1 111 1 145 1 87 2 160 1 291 1 100 1 353 4 294 2 135 2 3 1 129 2 284 1 273 1 68 1 215 1 274 2 70 1 83 2 331 1 339 2 
268 1 127 1 291 1 224 1 3 1 5 1 129 2 326 1 53 1 274 1 277 1 181 1 111 1 86 1 352 1 160 1 353 2 12 1 237 1 315 1 186 1 91 1 359 1 215 1 18 1 70 1 140 1 339 1 
125 1 341 1 127 1 291 1 224 1 3 1 5 1 129 2 326 1 53 1 274 1 277 1 257 1 181 1 111 1 86 1 160 1 353 2 237 1 315 1 186 1 91 1 359 1 215 1 18 1 70 1 140 1 339 1 
218 1 75 1 145 1 291 1 100 1 294 2 3 1 129 2 273 1 274 2 83 2 331 1 111 1 87 2 160 1 353 4 135 2 284 1 215 1 68 1 70 1 339 2 
218 1 145 1 268 1 127 1 291 1 100 1 224 1 294 2 175 1 3 1 5 1 129 2 326 1 273 1 53 1 274 2 277 1 83 2 331 1 111 1 87 2 352 1 160 1 353 4 12 1 237 1 315 1 135 2 186 1 284 1 16 1 68 1 215 1 18 1 70 1 140 1 339 2 
218 1 75 1 2 1 145 1 291 1 147 1 294 1 3 1 129 2 273 1 274 1 83 1 331 1 180 1 256 1 111 1 87 1 160 1 116 1 353 3 237 1 315 1 135 1 284 1 304 1 68 1 215 1 70 1 339 2 
218 3 1 1 145 3 290 1 291 2 100 3 293 1 3 2 324 1 103 1 129 4 296 1 273 3 274 10 107 2 9 1 331 3 57 1 182 2 111 2 259 1 11 2 282 1 353 19 135 6 284 3 17 1 215 2 68 3 339 9 
218 3 1 1 145 3 290 2 291 3 100 2 293 2 3 3 324 1 129 6 296 2 273 2 274 12 230 1 331 2 107 4 9 1 348 1 57 2 182 1 111 3 11 2 282 1 353 26 162 1 135 4 38 2 284 3 285 1 240 1 68 2 215 3 286 1 339 14 
218 4 1 1 145 4 290 2 291 3 100 4 293 3 225 1 3 3 324 1 103 1 129 6 296 1 273 4 274 21 230 1 106 1 107 4 9 1 331 5 348 1 57 3 182 1 111 3 11 4 115 1 282 1 133 1 353 41 162 1 135 8 38 1 284 5 285 1 240 1 17 1 191 1 215 3 68 4 286 1 196 1 42 1 339 20 
218 4 1 1 145 4 290 2 291 4 100 4 293 3 225 1 3 4 324 1 103 1 129 8 296 1 273 3 274 18 230 1 106 1 107 4 9 1 331 4 348 1 57 3 182 1 111 4 11 4 115 1 282 1 133 1 353 38 162 1 135 7 38 2 284 5 285 1 240 1 17 1 191 1 215 4 68 3 286 1 196 1 42 1 339 20 
218 7 1 1 145 7 22 2 290 1 291 2 100 7 293 2 225 1 3 2 324 1 103 2 129 4 296 1 273 7 274 25 230 1 106 1 107 4 9 1 331 8 348 1 57 4 182 1 111 2 11 4 282 1 133 1 353 52 162 1 135 14 38 1 284 8 285 1 240 1 191 1 215 2 68 7 286 1 196 1 42 1 339 27 
157 1 244 1 332 1 64 1 28 1 67 1 178 1 24 1 168 1 30 1 
236 1 179 1 
313 1 244 1 332 1 64 1 28 1 217 1 26 1 168 1 30 1 
33 1 188 1 
307 1 311 1 322 1 
157 1 244 1 332 1 183 1 24 1 205 1 316 1 49 1 336 1 238 2 39 1 164 1 64 1 28 1 178 1 168 1 305 1 30 1 
157 1 244 1 332 1 183 1 24 1 205 1 316 1 49 1 336 1 238 2 39 1 164 1 64 1 28 1 178 1 168 1 305 1 30 1 
157 1 244 1 332 1 183 1 24 1 205 1 316 1 49 1 336 1 238 2 39 1 164 1 64 1 28 1 178 1 168 1 305 1 30 1 
33 1 188 1 307 1 
33 1 188 1 307 1 
311 1 322 1 
307 1 311 1 322 1 
330 1 98 1 
244 1 2 2 147 2 49 1 28 1 80 1 275 1 330 1 179 1 30 1 332 1 233 1 183 1 132 1 236 1 116 2 237 2 315 2 316 1 238 1 64 1 65 1 359 1 123 1 168 1 305 1 98 1 
0 1 75 1 219 1 173 1 2 2 289 1 221 2 291 1 224 1 3 1 5 1 129 2 326 2 227 1 53 2 274 1 277 1 346 1 181 1 111 1 160 1 353 2 237 2 315 2 186 1 91 1 215 1 319 1 70 1 140 2 339 1 
232 1 197 1 84 1 201 1 113 1 235 2 301 1 63 1 175 1 5 1 239 1 326 2 303 1 53 2 277 1 140 2 156 1 347 1 71 1 
232 1 197 1 84 1 201 1 113 1 235 2 146 1 301 1 63 1 5 1 326 1 303 1 53 1 277 1 140 1 347 1 71 1 
86 1 114 1 46 1 301 1 224 1 128 1 186 1 5 1 326 1 53 1 277 1 20 1 140 1 156 1 
232 1 197 1 84 1 201 1 113 1 235 2 301 1 63 1 5 1 239 1 326 1 303 1 53 1 277 1 140 1 156 1 347 1 71 1 
252 1 
72 1 77 1 164 1 340 1 54 1 61 1 161 1 
112 1 340 1 183 1 62 1 161 1 13 1 263 1 316 1 77 1 52 1 164 2 120 1 79 1 138 1 254 1 170 1 96 1 
323 2 200 2 202 2 145 2 295 2 5 1 50 1 51 2 52 6 151 2 207 6 326 3 104 2 209 1 53 3 54 1 254 4 331 2 112 3 333 1 61 1 62 4 161 2 300 3 263 12 119 2 164 8 18 1 170 4 218 2 267 1 340 9 25 6 224 6 175 1 77 8 79 5 273 2 277 2 229 2 312 1 86 1 183 5 357 2 35 1 186 1 316 5 284 2 192 2 140 3 320 1 96 4 
218 2 200 1 340 8 145 2 25 5 293 1 150 1 51 1 77 5 52 3 207 5 104 2 79 1 272 1 273 2 230 1 254 2 331 2 57 1 112 1 11 1 183 1 62 2 161 2 263 6 35 1 162 1 316 1 164 5 284 2 285 1 240 1 286 1 170 2 96 2 
340 2 2 1 147 1 223 1 225 1 51 1 308 1 77 2 104 2 254 1 279 1 130 1 331 1 180 1 183 1 281 1 62 1 116 1 237 1 302 1 315 1 316 1 284 2 191 1 242 1 196 1 170 1 96 1 
340 1 61 1 62 1 161 1 77 1 164 1 254 1 54 1 170 1 96 1 
218 2 145 2 340 5 25 5 263 10 295 1 51 1 77 5 52 5 284 2 164 5 207 5 104 2 273 2 331 2 
164 1 112 1 79 1 183 1 161 1 316 1 
200 2 340 2 101 1 224 1 128 1 5 1 77 2 29 1 326 4 79 4 209 1 53 4 277 1 254 2 109 1 299 1 112 2 86 2 183 3 62 2 186 1 35 2 316 3 136 1 20 1 140 4 320 2 170 2 96 1 
172 1 2 2 268 1 147 2 127 1 291 1 223 1 224 1 3 1 5 1 129 2 326 1 53 1 274 1 277 1 180 2 181 1 111 1 86 1 352 1 160 1 353 1 116 2 12 1 237 3 315 3 186 1 359 1 215 1 18 1 70 1 140 1 
200 1 340 1 62 1 25 2 161 2 263 4 35 1 77 2 52 2 164 4 207 2 254 1 106 1 170 1 96 1 
332 1 317 1 30 1 
332 1 317 1 30 1 
157 1 246 1 332 1 330 1 30 1 
332 1 317 1 30 1 
332 1 41 1 30 1 
332 1 41 1 30 1 
332 1 41 1 30 1 
332 1 30 1 
244 1 168 1 
111 2 291 2 353 8 100 2 133 1 225 1 135 3 3 2 38 1 129 4 284 1 68 1 215 2 191 1 274 4 106 1 331 1 42 1 196 1 339 4 
72 1 133 1 100 2 353 6 135 2 225 1 284 1 191 1 274 3 106 1 42 1 196 1 331 1 339 3 
218 1 111 1 145 1 291 1 100 1 353 4 135 2 3 1 129 2 284 1 273 1 215 1 68 1 274 2 338 1 331 1 339 2 
57 1 218 1 145 1 11 2 100 1 353 7 293 1 135 2 103 1 284 1 273 1 68 1 274 4 331 1 339 3 
218 2 245 1 145 2 22 1 291 2 100 5 174 1 225 1 3 2 103 1 129 4 273 2 274 12 106 1 331 3 57 2 111 2 11 2 133 1 353 23 135 9 38 2 284 3 191 2 68 4 215 2 196 2 42 1 339 11 
274 1 11 1 353 1 
57 1 353 1 339 1 
218 1 111 1 145 1 291 1 353 6 100 2 3 1 295 1 135 3 129 2 284 1 215 1 68 1 273 1 338 1 274 3 331 1 339 3 
218 2 145 2 291 1 100 1 293 1 3 1 129 2 273 2 274 6 230 1 331 2 57 1 111 1 11 1 282 1 353 12 135 2 162 1 284 2 285 1 240 1 68 1 215 1 286 1 339 6 
353 6 100 1 225 1 135 2 284 1 191 1 68 1 274 3 331 1 196 1 339 3 
245 1 111 1 291 1 100 1 353 3 133 1 135 2 3 1 38 1 129 2 68 1 191 1 215 1 274 2 196 1 42 1 339 1 
111 1 291 1 282 1 100 3 353 10 3 1 135 5 225 1 308 1 129 2 284 2 215 1 191 2 68 2 274 5 196 2 331 2 339 5 
111 1 145 1 282 1 291 1 353 2 3 1 135 1 129 2 284 1 215 1 68 1 339 2 
218 1 111 1 145 1 282 1 291 1 100 1 353 4 135 2 3 1 129 2 284 1 273 1 215 1 68 1 274 2 331 1 339 2 
245 1 111 3 282 1 291 3 353 3 100 1 3 3 135 2 38 1 129 6 17 1 215 3 191 1 68 1 274 2 196 1 339 1 
245 1 218 3 145 3 291 5 100 7 293 1 225 2 3 5 343 1 103 1 129 10 7 1 6 1 273 3 274 18 106 1 331 5 57 3 111 5 11 4 282 1 133 1 353 34 135 12 38 2 284 5 17 1 191 3 215 5 68 5 338 1 196 3 42 1 339 16 
291 1 100 2 293 1 3 1 225 1 129 2 274 4 230 1 106 1 331 1 57 1 111 1 11 1 282 1 353 8 133 1 135 2 284 1 215 1 191 1 42 1 196 1 339 4 
218 1 145 1 291 2 100 2 293 1 225 1 3 2 103 1 129 4 274 5 230 1 106 1 331 1 57 1 111 2 11 2 282 1 133 1 353 11 135 3 284 2 191 1 215 2 68 1 338 1 196 1 42 1 339 6 
218 2 145 2 291 3 100 3 293 1 225 1 3 3 129 6 273 2 274 10 230 1 106 1 331 3 57 1 111 3 11 1 282 1 133 1 353 19 135 4 162 1 38 1 284 3 285 1 240 1 191 1 68 1 215 3 338 1 286 1 196 1 42 1 339 9 
218 2 145 2 291 3 100 3 293 1 225 1 3 3 129 6 273 1 274 7 230 1 106 1 331 2 57 1 111 3 11 1 282 1 133 1 353 17 135 5 162 1 38 1 284 3 285 1 240 1 191 1 68 2 215 3 338 1 286 1 196 1 42 1 339 10 
291 1 100 2 293 1 3 1 225 1 129 2 274 4 230 1 106 1 331 1 57 1 111 1 11 1 282 1 353 8 133 1 135 2 284 1 215 1 191 1 42 1 196 1 339 4 
218 2 145 2 291 1 100 1 293 1 3 1 129 2 273 2 274 6 230 1 331 2 57 1 111 1 11 1 282 1 353 12 135 2 162 1 284 2 285 1 240 1 68 1 215 1 286 1 339 6 
218 2 145 2 291 4 100 3 293 1 225 1 3 4 129 8 273 1 274 8 230 1 106 1 331 2 57 1 111 4 11 1 282 1 133 1 353 18 162 1 135 5 38 2 284 3 285 1 240 1 191 1 68 2 215 4 338 1 286 1 196 1 42 1 339 10 
218 3 145 3 291 4 100 3 293 1 3 4 129 8 273 2 274 7 230 1 331 2 57 1 111 4 11 1 282 1 353 16 162 1 135 6 38 2 284 3 285 1 240 1 17 1 68 3 215 4 286 1 339 9 
353 7 133 1 100 3 135 6 225 1 284 1 191 3 68 3 274 4 331 1 42 2 196 3 339 3 
218 2 145 2 291 4 100 3 293 1 225 1 3 4 129 8 273 1 274 8 230 1 106 1 331 2 57 1 111 4 11 1 282 1 133 1 353 18 162 1 135 4 38 2 284 3 285 1 240 1 17 1 191 1 68 1 215 4 286 1 196 1 42 1 339 10 
143 1 2 1 359 1 167 1 134 1 237 1 315 1 
143 1 10 1 73 1 2 1 134 1 270 1 237 1 315 1 264 1 359 1 167 1 95 1 
72 1 5 1 326 1 86 1 53 1 277 1 20 1 140 1 224 1 128 1 186 1 
86 1 2 1 127 1 147 1 116 1 12 1 262 1 237 2 224 1 315 2 186 1 5 1 326 1 359 1 53 1 18 1 277 1 140 1 
2 2 147 2 127 1 224 3 5 1 326 1 53 1 277 1 310 1 154 1 155 1 12 1 116 1 237 2 262 1 315 2 186 2 89 1 359 1 18 2 242 1 140 1 320 1 
2 2 341 1 147 2 127 1 224 3 5 1 326 2 53 2 277 1 310 1 278 1 154 1 155 1 116 1 237 2 262 1 315 2 186 2 89 1 359 1 18 2 242 1 140 2 320 1 
47 1 224 4 5 1 326 3 79 1 53 3 277 1 310 1 229 1 278 1 86 1 34 1 183 2 300 1 161 1 316 2 186 1 89 1 119 1 164 1 18 1 140 3 320 1 
2 1 147 1 224 2 223 1 326 1 79 1 53 1 229 1 130 1 180 1 183 2 281 1 300 1 161 1 116 1 237 1 302 1 315 1 316 2 119 1 164 1 192 1 242 1 140 1 320 1 
5 1 163 1 326 1 53 1 277 1 140 1 
74 1 288 1 86 2 333 1 221 1 261 1 63 1 224 3 204 1 175 1 186 2 163 1 5 2 326 6 137 1 53 7 18 1 277 3 253 1 140 7 346 1 
75 1 2 1 268 1 127 1 291 2 147 1 100 2 224 1 294 1 225 1 3 2 175 1 5 1 129 4 326 1 78 1 53 1 274 3 277 1 83 1 106 1 331 1 111 2 87 1 352 1 160 2 353 6 133 1 116 1 12 1 237 2 262 1 315 2 135 2 186 1 284 1 16 1 359 2 191 1 215 2 18 1 319 1 70 2 140 1 196 1 42 1 339 3 
323 1 202 1 340 1 224 2 77 1 151 1 326 1 79 2 209 1 53 1 275 1 54 1 254 2 229 1 112 1 86 1 183 3 61 1 62 2 161 1 300 1 316 3 164 1 119 1 192 1 140 1 170 2 96 2 
333 1 224 2 175 1 186 1 163 1 50 1 5 1 119 1 326 2 53 2 18 1 277 2 140 2 
86 1 144 1 128 1 224 1 175 1 186 1 5 1 326 4 53 4 277 1 20 1 278 1 140 4 
261 1 224 1 204 1 186 1 5 1 326 2 66 1 152 1 53 2 18 1 277 2 140 2 320 1 171 1 
5 1 232 1 326 1 86 1 303 1 53 1 235 1 277 1 140 1 71 1 
5 1 326 2 227 1 53 2 277 1 140 2 224 1 346 1 63 1 186 1 175 1 
86 1 288 1 144 1 128 1 224 3 175 1 186 2 5 2 326 4 53 5 277 2 20 1 253 1 140 5 320 1 346 1 
86 1 288 1 144 1 128 1 224 3 175 1 186 2 5 2 326 4 53 5 327 1 277 2 20 1 140 5 320 1 346 1 
86 1 2 1 341 1 127 1 147 1 116 1 262 1 237 2 224 1 315 2 186 1 5 1 326 1 359 1 53 1 18 1 277 1 140 1 
74 1 333 1 261 1 224 1 204 1 186 1 5 1 326 1 53 1 18 1 277 2 140 1 320 1 
226 1 359 1 193 1 69 1 40 1 
226 1 260 1 131 1 193 1 222 1 69 1 183 1 275 1 40 1 210 1 342 1 316 1 
226 1 0 1 2 1 173 1 289 1 193 1 237 1 40 1 315 1 
226 1 260 1 342 1 
72 1 44 1 344 1 
211 1 99 1 44 1 118 1 187 1 344 1 358 1 
21 1 212 1 358 1 
211 2 99 1 44 1 59 1 118 1 187 1 344 1 345 1 358 2 93 1 255 1 
211 2 314 1 99 1 44 1 118 1 176 1 187 1 344 1 358 2 
211 1 232 1 234 1 235 1 118 1 187 1 153 1 345 1 358 1 190 1 347 1 
211 1 118 1 187 1 344 1 358 1 345 1 
211 1 44 1 118 1 187 1 153 1 344 1 358 1 345 1 
211 2 118 2 187 2 344 1 345 1 358 2 241 1 141 1 287 1 
211 3 314 2 99 1 44 1 234 1 117 1 118 1 187 1 344 1 153 1 345 1 358 3 194 1 329 1 
211 2 232 1 314 1 99 1 44 1 197 1 235 2 292 1 118 1 187 1 344 1 303 1 345 1 358 2 347 1 
211 3 314 2 99 1 44 1 58 1 234 1 118 1 176 1 187 1 344 1 153 1 345 1 358 3 194 1 
211 1 99 1 44 1 118 1 187 1 344 1 358 1 345 1 
314 2 211 3 44 1 99 2 234 1 118 1 187 1 344 1 153 1 358 3 194 1 
211 2 314 1 99 1 44 1 269 1 184 1 118 1 187 1 344 1 345 1 358 2 361 1 
211 2 99 1 44 1 59 1 118 1 187 1 121 1 344 1 345 1 358 2 93 1 
36 1 351 1 153 2 306 2 
211 1 118 1 187 1 358 1 345 1 88 1 
211 2 314 1 99 1 44 1 118 1 187 1 344 1 345 1 358 2 329 1 
124 1 
211 1 99 1 44 1 118 1 187 1 344 1 358 1 345 1 
211 2 99 1 44 1 59 1 118 1 187 1 344 1 345 1 358 2 
99 1 234 1 153 1 194 1 
344 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
322 1 17 6 298 1 324 1 153 2 154 2 301 1 100 3 47 1 305 1 80 1 52 9 133 2 185 9 276 4 308 2 135 5 27 1 56 1 59 1 311 2 112 2 61 1 89 1 353 2 235 1 239 1 122 1 
322 1 17 6 298 1 324 1 153 2 154 2 301 1 100 3 47 1 305 1 80 1 52 9 133 2 185 9 276 4 308 2 135 5 27 1 56 1 59 1 112 2 311 2 61 1 89 1 353 2 235 1 239 1 122 1 
322 1 17 7 298 1 324 1 153 2 154 2 301 1 100 4 47 1 305 1 80 1 52 10 133 2 185 10 276 5 308 2 135 6 27 1 56 1 59 1 112 2 311 2 61 1 89 1 353 2 235 1 239 1 122 1 
322 1 17 4 298 1 324 1 153 2 154 2 301 1 100 2 47 1 305 1 52 7 133 2 185 7 276 3 308 1 135 4 27 1 56 1 59 1 112 2 311 2 61 1 89 1 353 2 235 1 239 1 122 1 
322 1 17 3 311 1 112 1 324 1 353 1 154 1 100 1 235 1 47 1 305 1 80 1 133 1 52 4 185 4 276 2 308 2 135 3 
322 1 255 1 311 1 209 1 324 1 258 1 153 1 353 1 154 1 301 1 305 1 239 1 52 2 133 1 185 2 135 1 
322 1 17 1 311 2 324 1 153 1 154 2 100 1 305 1 52 3 185 3 276 1 135 2 122 1 
322 1 17 7 298 1 324 1 153 1 154 2 100 3 47 1 305 1 80 1 52 9 133 1 276 4 185 9 308 2 135 5 56 1 137 1 311 2 112 1 353 1 235 1 261 1 122 1 
322 1 17 7 298 1 324 1 153 1 154 2 100 3 47 1 305 1 80 1 52 9 133 1 276 4 185 9 308 2 135 5 56 1 137 1 311 2 112 1 353 1 235 1 261 1 122 1 
173 1 251 1 343 1 
370 1 
136 2 359 1 181 2 103 2 54 2 143 2 8 2 175 1 
123 1 73 1 359 1 125 1 243 2 245 1 175 1 21 1 155 1 6 1 303 1 181 2 132 1 102 1 248 1 103 3 158 2 105 2 54 2 8 2 26 1 110 1 136 3 280 1 253 1 281 1 233 1 371 1 212 1 70 2 216 1 145 1 143 2 318 1 357 1 295 1 296 2 
136 1 359 1 181 1 168 1 103 1 23 1 54 1 143 1 8 1 44 1 
359 1 18 1 44 1 4 1 343 1 181 2 103 2 227 1 273 1 23 1 8 1 54 1 251 1 208 1 136 2 15 1 168 2 317 1 262 1 143 1 358 1 
359 1 18 1 44 1 343 1 181 2 103 2 273 2 227 2 23 1 54 2 8 2 251 1 208 1 136 2 15 1 168 2 317 1 262 1 143 2 
325 1 227 1 273 1 60 1 278 1 
325 1 68 1 315 1 227 2 273 2 278 1 251 1 343 1 
227 1 273 1 278 1 
359 1 136 1 18 1 44 1 325 1 181 1 168 1 103 1 273 1 227 1 23 1 8 1 143 1 54 1 
251 1 
325 1 315 1 227 2 273 2 278 1 251 1 343 1 372 1 
42 2 244 1 323 1 343 1 13 2 325 2 315 1 36 1 142 1 214 1 71 1 273 5 227 5 199 1 108 1 278 2 251 1 148 1 252 2 
200 1 136 2 243 1 245 1 21 1 371 1 344 1 181 1 212 1 248 1 289 1 102 1 70 1 103 2 105 1 145 1 143 1 54 1 295 1 110 1 
173 1 175 1 
136 2 98 1 175 2 222 1 181 2 103 2 8 1 143 1 54 1 
200 1 312 1 22 1 
332 1 136 1 243 1 245 1 175 1 371 1 21 1 212 1 102 1 248 1 70 1 103 1 105 1 145 1 295 1 110 1 
136 5 111 1 98 1 175 1 344 2 181 5 289 1 250 1 103 5 143 4 54 4 8 1 375 1 358 1 
136 2 181 2 168 1 103 2 271 1 54 2 143 2 44 1 
136 3 181 3 103 3 8 1 54 3 143 3 175 1 344 1 
136 1 181 1 168 1 103 1 54 1 143 1 44 1 
136 1 181 1 168 1 103 1 54 1 143 1 8 1 98 1 222 1 
0 1 243 1 98 1 245 1 344 1 155 1 6 1 303 1 102 1 248 1 103 4 158 2 105 1 54 3 8 2 208 1 110 1 253 1 15 1 212 1 70 1 168 2 317 1 262 1 216 1 357 1 123 1 359 1 175 1 21 1 181 3 227 1 273 1 277 1 136 4 190 1 280 1 281 1 233 1 371 1 289 1 143 3 145 1 295 1 296 1 
136 2 111 1 181 2 103 2 54 1 143 1 175 1 358 1 344 1 
136 3 16 1 98 1 344 2 181 3 15 1 289 1 168 1 103 3 227 1 273 1 317 1 262 1 8 1 143 3 54 3 277 1 251 1 208 1 
136 2 200 1 98 1 22 1 344 1 181 2 103 2 8 1 143 2 54 2 
136 1 243 1 245 1 175 1 371 1 21 1 212 1 102 1 248 1 70 1 103 1 105 1 145 1 295 1 110 1 
136 1 243 1 232 1 245 1 175 1 371 1 21 1 177 1 102 1 70 1 103 1 105 1 145 1 295 1 110 1 
123 1 200 2 150 1 174 1 77 1 361 1 22 2 6 1 303 1 101 1 132 2 364 1 158 2 253 1 281 2 312 2 335 1 233 1 140 1 338 1 373 1 216 1 296 4 218 1 
136 1 15 1 181 1 168 1 103 1 271 1 54 1 143 1 
260 1 116 1 
260 1 116 1 
346 1 10 1 
346 1 10 1 
346 1 10 1 
260 1 116 1 287 1 
260 1 116 1 86 1 
260 2 116 2 163 1 346 1 264 1 10 1 
260 1 116 1 287 1 
260 1 116 1 287 1 
260 1 116 1 107 1 
260 1 116 1 107 1 
260 1 116 1 107 1 
136 2 94 1 151 1 349 1 31 1 32 1 86 1 87 1 175 1 288 1 157 1 35 1 181 2 260 1 306 1 226 1 103 2 116 1 327 1 273 1 227 1 206 1 143 2 54 2 
219 1 266 1 349 2 151 1 192 1 32 2 178 1 157 3 260 2 116 2 327 2 273 2 227 2 206 2 188 2 293 1 264 1 251 1 134 1 
112 1 133 1 353 1 
255 1 133 1 353 1 
255 1 340 1 112 2 162 1 133 3 217 1 
255 1 340 1 112 1 133 2 217 1 319 1 
255 1 112 1 340 2 133 2 217 1 
359 1 42 1 150 1 242 1 18 1 97 1 44 1 343 1 247 1 325 4 181 1 103 1 227 5 273 5 23 1 54 1 8 1 278 1 251 1 83 1 252 1 136 1 31 1 370 1 113 1 337 2 13 1 315 1 36 1 142 2 168 1 240 1 199 1 143 1 356 1 218 1 320 1 
42 1 359 1 150 1 242 1 18 1 97 1 78 2 44 1 343 1 247 1 325 4 181 1 103 1 227 5 273 5 23 1 8 1 54 1 278 3 251 1 252 1 136 1 31 1 60 2 370 1 13 1 67 1 315 1 36 1 142 2 168 1 240 1 199 1 143 1 356 1 92 1 218 1 320 1 
359 1 42 1 150 1 242 1 244 1 18 1 77 1 44 1 343 1 247 2 325 2 181 1 103 1 23 1 227 3 273 3 54 1 8 1 251 2 83 1 252 1 136 1 31 1 370 3 113 1 337 1 140 1 166 1 13 1 168 1 142 2 240 1 199 3 143 1 356 1 218 1 320 2 
41 1 42 1 150 2 242 1 244 1 44 1 343 1 247 4 103 1 8 1 54 1 251 3 252 1 113 1 13 1 166 2 168 1 215 1 356 2 218 2 320 4 359 1 18 1 77 2 325 3 181 1 273 4 227 4 228 1 23 1 83 1 136 1 31 2 370 6 337 2 140 2 142 4 240 1 199 5 143 1 
169 1 173 1 145 1 
145 1 170 1 
220 1 
145 1 21 1 371 1 
145 1 207 1 
145 1 21 1 
224 1 169 2 145 3 21 1 371 1 229 1 
150 1 171 2 281 3 139 1 335 3 63 1 19 1 284 1 45 1 272 1 140 1 364 2 132 4 24 1 275 1 292 1 296 7 
150 1 171 2 281 3 139 1 335 3 63 1 19 1 284 1 45 1 272 1 140 1 364 2 132 4 24 1 275 1 292 1 296 7 
150 1 171 2 281 3 139 1 335 3 63 1 19 1 284 1 45 1 272 1 140 1 259 1 364 2 132 4 24 1 275 1 292 1 296 7 
123 1 171 3 150 4 1 1 126 1 300 1 19 1 77 3 45 2 272 1 6 1 303 1 132 16 364 5 205 1 158 2 183 1 275 2 24 5 189 1 231 4 253 1 281 15 139 1 335 10 63 2 284 2 66 3 140 4 292 1 356 3 296 31 218 3 265 1 
123 2 150 1 95 1 171 2 1 1 19 1 45 1 272 1 6 2 303 2 132 5 364 3 158 4 24 1 275 1 84 1 253 2 281 4 335 4 63 1 284 1 140 1 292 1 296 9 
243 1 322 1 17 1 96 1 245 1 324 1 153 1 154 1 305 1 249 1 7 1 105 1 52 2 133 2 185 2 307 1 135 1 255 1 112 1 311 1 162 1 196 1 197 1 353 1 70 1 374 1 118 1 121 1 241 1 295 1 
243 1 322 1 321 1 17 2 96 1 341 1 245 1 324 1 153 1 154 1 249 1 7 1 105 1 52 3 133 2 185 3 307 1 135 1 255 1 112 1 162 1 311 1 196 1 283 1 197 1 353 1 70 1 118 1 241 1 295 1 
243 1 322 1 321 1 17 2 96 1 245 1 324 1 153 1 249 1 7 1 105 1 52 2 133 2 185 2 307 1 135 1 255 1 162 1 112 1 196 1 283 1 353 1 70 1 241 1 295 1 
333 1 243 1 201 1 311 1 62 1 196 2 341 1 245 1 21 1 90 1 153 2 154 1 202 1 102 1 70 1 249 2 52 1 105 1 145 1 185 1 120 1 307 2 295 1 
243 1 321 1 96 1 245 1 153 1 154 1 305 1 249 1 7 1 105 1 52 1 133 2 185 1 307 1 255 1 112 1 311 1 162 1 196 1 197 1 353 1 70 1 118 1 121 1 241 1 295 1 
114 1 
42 1 243 2 299 4 245 1 4 1 343 3 302 1 102 2 49 1 103 1 104 2 105 2 251 4 208 1 252 1 62 1 314 1 166 2 13 1 115 1 315 3 15 1 70 2 168 1 317 1 262 1 263 1 358 1 270 1 128 2 21 1 179 1 181 1 328 2 366 1 273 5 227 5 368 1 187 1 278 6 28 1 29 2 333 1 136 1 370 2 234 2 91 2 36 1 237 2 142 2 240 1 38 1 199 2 145 1 295 1 
299 2 4 1 343 2 302 1 179 1 181 1 49 1 103 1 227 3 273 3 278 2 251 2 208 1 136 1 372 1 315 1 15 1 168 1 237 1 317 1 38 1 262 1 263 1 358 1 
136 1 299 3 4 1 343 2 302 1 179 1 15 1 181 1 49 1 168 1 328 1 103 1 273 2 227 2 38 1 317 1 262 1 263 1 251 2 208 1 358 1 
299 3 128 1 4 1 343 3 302 1 179 1 181 1 49 1 103 1 328 1 227 3 273 3 278 2 251 3 208 1 136 1 372 1 315 1 15 1 168 1 237 1 317 1 38 1 262 1 263 1 358 1 
42 1 299 5 44 1 4 1 343 4 302 1 48 1 49 1 103 2 104 2 54 1 8 1 251 4 208 1 348 1 252 1 257 1 352 1 13 1 166 2 15 1 315 3 168 2 317 1 262 1 263 1 358 1 359 1 18 1 128 4 179 1 181 2 328 3 365 1 366 1 23 1 273 5 227 5 368 1 278 7 29 2 136 2 234 2 372 1 91 2 36 1 237 4 142 1 38 1 199 1 143 1 
42 1 299 4 4 1 343 3 302 1 49 1 103 1 104 2 251 3 208 1 252 1 13 1 166 2 15 1 315 2 115 1 168 1 317 1 262 1 263 1 358 1 128 2 179 1 181 1 366 1 328 2 273 4 227 4 368 1 278 4 29 2 136 1 370 2 234 2 91 2 36 1 142 1 237 2 38 1 199 1 
42 1 299 4 128 2 4 1 343 3 302 1 179 1 181 1 49 1 328 2 366 1 103 1 365 1 104 2 227 4 273 4 368 1 278 4 251 3 208 1 348 1 252 1 29 2 136 1 352 1 234 2 166 2 13 1 91 2 315 2 15 1 36 1 237 2 142 1 168 1 317 1 38 1 262 1 199 1 263 1 358 1 
42 1 299 4 128 2 4 1 343 3 302 1 179 1 181 1 49 1 328 2 366 1 103 1 365 1 104 2 227 4 273 4 368 1 278 4 251 3 208 1 348 1 252 1 29 2 136 1 352 1 234 2 166 2 13 1 91 2 315 2 15 1 36 1 237 2 142 1 168 1 317 1 38 1 262 1 199 1 263 1 358 1 
42 1 299 4 128 2 4 1 343 3 302 1 179 1 181 1 49 1 328 2 103 1 227 4 273 4 368 1 329 2 278 4 251 3 9 1 208 1 252 1 29 2 136 1 310 2 370 2 351 1 352 1 234 2 13 1 315 2 15 1 36 1 237 2 142 1 168 1 317 1 38 1 316 1 262 1 199 1 263 1 358 1 
42 1 299 5 128 3 4 1 343 3 302 1 179 1 181 1 49 1 366 1 365 1 328 3 103 1 104 2 227 4 273 4 368 1 278 5 251 3 208 1 348 1 252 1 29 2 136 1 257 1 352 1 234 2 166 2 13 1 91 2 315 2 15 1 36 1 142 1 168 1 237 3 317 1 38 1 262 1 199 1 263 1 358 1 
42 1 299 5 128 3 4 1 343 3 302 1 179 1 181 1 49 1 366 1 365 1 328 3 103 1 104 2 227 4 273 4 368 1 278 5 251 3 208 1 348 1 252 1 29 2 136 1 257 1 352 1 234 2 166 2 13 1 91 2 315 2 15 1 36 1 142 1 168 1 237 3 317 1 38 1 262 1 199 1 263 1 358 1 
42 1 299 2 4 1 343 2 302 1 179 1 181 1 49 1 103 1 227 2 273 2 368 1 329 1 251 2 9 1 208 1 252 1 29 1 136 1 370 1 234 1 13 1 115 1 15 1 36 1 142 1 168 1 38 1 317 1 262 1 199 1 263 1 358 1 
123 1 200 1 171 1 150 1 253 1 281 3 173 1 312 1 335 2 233 1 19 1 175 2 45 1 272 1 22 1 140 1 6 1 338 1 303 1 132 3 364 2 158 2 275 1 216 1 292 1 296 6 
123 2 200 11 150 2 126 1 77 1 175 1 22 4 6 2 303 2 364 1 132 8 225 1 158 4 106 1 24 1 231 3 253 2 57 1 281 6 138 1 312 11 335 2 233 1 33 1 66 3 140 1 216 2 318 1 357 1 356 2 296 14 218 2 265 1 
123 1 243 1 245 1 175 1 20 1 21 1 22 1 344 1 6 1 303 1 181 1 248 1 102 1 132 1 103 2 158 2 105 1 54 1 110 1 332 1 136 2 253 1 281 1 88 1 233 1 33 1 371 1 212 1 289 1 70 1 355 1 145 1 216 1 143 1 357 1 318 1 295 1 296 2 
200 7 150 3 243 3 43 2 245 2 45 1 344 1 155 2 6 3 303 3 102 1 248 2 50 2 103 3 158 6 105 3 54 1 110 2 160 1 253 3 312 7 167 2 212 2 70 3 216 3 318 1 357 1 356 2 218 2 123 3 74 1 171 1 321 1 19 1 77 2 175 2 272 1 21 2 22 7 181 1 182 2 364 4 132 10 275 1 24 4 136 3 281 10 282 1 335 8 233 3 33 1 371 2 140 3 289 1 143 1 145 2 292 1 295 2 296 20 
123 2 73 2 267 1 243 8 321 1 127 1 245 2 21 2 344 1 6 2 79 1 303 2 181 1 102 2 132 1 103 1 158 4 105 8 274 1 54 1 347 1 279 1 333 1 136 1 253 2 58 1 281 1 62 1 233 2 338 1 70 7 374 1 143 1 145 3 216 2 318 1 357 1 295 2 296 2 
123 1 200 1 150 1 77 1 98 1 22 1 6 1 303 1 181 1 364 1 132 1 103 1 158 2 8 1 54 1 136 1 253 1 281 2 312 1 335 1 233 1 33 1 140 1 37 1 143 1 216 1 356 1 218 1 296 3 
123 1 200 1 150 1 253 1 312 1 174 1 335 1 233 1 22 1 6 1 338 1 303 1 132 2 158 2 24 1 216 1 296 2 218 1 
123 1 200 1 253 1 281 2 312 1 335 1 233 1 77 1 22 1 140 1 6 1 338 1 303 1 373 1 364 1 158 2 216 1 296 2 
123 1 200 2 150 1 77 1 22 2 6 1 303 1 132 2 364 1 158 2 24 1 253 1 281 2 312 2 335 2 233 1 140 1 338 1 216 1 356 1 218 1 296 4 
123 1 200 1 150 1 253 1 312 1 174 1 335 1 233 1 22 1 6 1 303 1 132 2 158 2 274 1 24 1 216 1 296 2 218 1 
123 1 200 1 253 1 281 2 312 1 335 1 233 1 77 1 22 1 140 1 6 1 303 1 373 1 364 1 158 2 274 1 216 1 296 2 
123 1 200 2 150 1 77 1 22 2 6 1 303 1 132 2 364 1 158 2 274 1 24 1 253 1 281 2 312 2 335 2 233 1 140 1 216 1 356 1 218 1 296 4 
123 1 200 2 150 1 253 1 281 2 312 2 335 2 77 1 233 1 22 2 140 1 6 1 303 1 364 1 132 2 158 2 24 1 216 1 356 1 218 1 296 4 
123 1 243 1 245 1 175 1 21 1 155 1 6 1 303 1 132 1 248 1 102 1 103 1 158 2 105 1 110 1 136 1 253 1 281 1 233 1 371 1 212 1 70 1 145 1 216 1 318 1 357 1 295 1 296 2 
123 1 243 1 245 1 175 1 21 1 177 1 6 1 303 1 132 1 102 1 103 1 158 2 105 1 110 1 136 1 253 1 281 1 232 1 233 1 371 1 70 1 145 1 216 1 318 1 357 1 295 1 296 2 93 1 
123 1 200 2 150 1 77 1 22 2 6 1 303 1 132 2 364 1 158 2 24 1 253 1 281 2 312 2 335 2 233 1 33 1 140 1 216 1 356 1 218 1 296 4 
123 1 200 2 150 1 243 1 77 1 245 1 21 1 22 2 155 1 6 1 303 1 182 1 364 1 132 2 248 1 103 1 158 2 105 1 24 1 110 1 136 1 253 1 281 2 312 2 335 2 233 1 371 1 140 1 212 1 70 1 374 1 145 1 216 1 356 1 295 1 296 4 218 1 
123 1 200 1 150 1 77 1 98 1 22 1 6 1 303 1 181 1 132 2 103 1 158 2 24 1 8 1 54 1 136 1 253 1 281 1 312 1 335 1 233 1 285 1 33 1 140 1 143 1 216 1 356 1 218 1 296 3 
123 2 75 2 150 3 126 1 77 3 6 2 303 2 364 3 132 9 158 4 184 1 24 3 309 1 84 1 231 2 253 2 281 10 11 1 193 1 12 2 195 1 335 6 64 1 66 1 140 3 290 1 356 3 296 19 218 3 265 1 
123 3 72 1 75 4 150 3 1 2 268 1 77 2 6 3 303 3 364 2 132 14 158 6 184 1 159 1 24 2 309 2 84 1 231 2 253 3 254 1 281 12 11 2 193 1 12 1 335 4 64 1 140 2 66 2 146 1 39 1 356 3 296 26 218 3 265 2 
150 5 1 1 45 1 6 3 303 3 158 6 159 1 309 1 253 3 254 1 11 2 350 1 12 1 64 1 66 3 356 4 218 4 265 3 123 3 72 1 75 4 171 1 268 1 126 1 77 4 19 1 272 1 132 20 364 4 184 1 24 4 275 1 84 1 231 4 281 21 193 1 335 8 195 1 140 5 146 1 292 1 39 1 296 41 
72 1 123 4 75 4 171 1 150 5 1 2 268 1 126 1 19 1 77 3 45 1 272 1 6 4 303 4 364 4 132 20 158 8 159 1 184 1 275 1 24 3 309 1 84 1 231 4 253 4 254 1 281 18 11 2 350 1 193 1 12 1 195 1 335 7 64 1 66 3 140 4 146 1 292 1 39 1 356 4 296 38 218 4 265 3 
72 1 123 2 75 4 171 1 150 8 1 1 268 1 126 2 19 1 77 7 45 1 272 1 6 2 303 2 364 7 132 27 158 4 159 1 184 1 275 1 24 7 309 1 84 1 231 4 253 2 254 1 57 2 281 25 11 1 193 1 12 1 335 14 64 1 66 4 140 8 146 1 292 1 39 1 356 7 296 52 218 7 265 2 
124 1 260 1 219 1 349 1 192 1 327 1 32 1 116 1 206 1 264 1 
306 1 86 1 
260 1 349 1 236 1 327 1 32 1 116 1 206 1 246 1 376 1 
81 1 287 1 
363 1 163 1 107 1 
219 1 266 1 151 1 349 1 192 1 32 1 178 1 157 2 260 1 116 1 327 1 273 1 227 1 206 1 188 1 264 1 251 1 134 1 
219 1 266 1 151 1 349 1 192 1 32 1 178 1 157 2 260 1 116 1 327 1 273 1 227 1 206 1 188 1 264 1 251 1 134 1 
219 1 266 1 151 1 349 1 192 1 32 1 178 1 157 2 260 1 116 1 327 1 273 1 227 1 206 1 188 1 264 1 251 1 134 1 
163 1 81 1 287 1 
163 1 81 1 287 1 
363 1 107 1 
363 1 163 1 107 1 
94 1 288 1 
94 1 175 1 325 1 157 1 181 2 103 2 327 1 226 1 306 1 227 1 273 1 206 1 188 1 54 2 134 1 136 2 349 1 32 1 31 1 87 1 86 1 288 1 260 1 35 1 213 1 116 1 143 2 
123 1 73 2 243 2 245 1 21 1 156 1 6 1 79 1 303 1 181 2 132 1 204 1 103 2 158 2 105 2 279 1 136 2 253 1 281 1 233 1 33 1 198 1 70 2 354 1 145 1 216 1 147 1 318 1 357 1 295 1 296 2 
243 2 321 1 255 1 112 1 162 1 245 1 353 1 129 1 70 2 249 1 7 1 374 1 133 2 105 2 118 1 186 1 119 1 295 1 241 1 
76 1 243 1 321 1 255 1 112 1 162 1 245 1 353 1 70 1 249 1 7 1 133 2 105 1 118 1 119 1 241 1 295 1 
333 1 243 1 201 1 62 1 245 1 152 1 21 1 102 1 70 1 249 1 105 1 145 1 186 1 295 1 
243 1 321 1 255 1 112 1 162 1 245 1 353 1 129 1 70 1 249 1 7 1 133 2 105 1 118 1 186 1 119 1 295 1 241 1 
5 1 
142 1 173 1 71 1 199 1 323 1 251 1 343 1 
42 1 343 1 366 1 104 1 273 1 227 1 278 1 251 1 252 1 370 1 166 1 13 1 91 1 315 1 36 1 142 1 199 1 
42 2 150 1 243 1 172 1 43 1 245 1 21 1 247 2 362 1 180 1 224 1 102 1 227 2 273 2 105 1 278 2 55 1 252 2 85 1 370 2 211 1 371 1 34 1 13 2 315 1 36 2 142 3 70 1 169 1 240 1 262 1 199 2 145 4 356 1 295 2 218 1 320 2 170 2 
72 1 42 1 150 2 268 1 77 2 247 5 159 1 252 1 231 1 254 1 370 3 13 1 66 1 140 2 36 1 142 4 199 6 356 2 39 1 218 2 320 5 265 1 
42 1 359 1 150 2 18 1 44 1 45 1 272 1 223 1 181 1 103 1 227 1 273 1 23 1 275 1 8 1 54 1 348 1 252 1 136 1 164 1 13 1 140 1 36 1 168 1 142 2 199 2 143 1 294 2 
42 1 36 1 142 1 71 1 199 1 323 1 251 1 343 1 13 1 252 1 
150 1 142 2 370 1 356 1 218 1 320 1 247 1 
315 1 227 1 273 1 278 1 251 1 343 1 
42 2 243 4 244 1 342 1 245 1 21 1 102 2 273 3 227 3 105 4 187 2 278 4 28 1 252 2 333 1 194 2 62 1 314 1 13 2 315 2 339 1 36 1 70 4 142 2 238 1 240 2 199 2 145 1 295 1 
123 1 359 1 243 1 245 1 175 1 21 1 155 1 6 1 303 1 181 2 102 1 248 1 103 3 158 2 105 1 54 2 8 2 110 1 136 3 280 1 253 1 281 1 233 1 371 1 212 1 70 1 143 2 145 1 216 1 357 1 295 1 296 1 
42 1 370 1 343 1 13 1 36 1 142 1 240 1 199 1 187 1 251 1 320 1 252 1 
30 1 327 1 32 1 
304 1 94 1 192 1 327 1 32 1 
30 1 327 1 32 1 
30 1 327 1 32 1 
327 1 32 1 165 1 
327 1 32 1 165 1 
327 1 32 1 165 1 
327 1 32 1 
260 1 116 1 
123 2 171 1 150 1 253 2 281 4 1 1 335 3 19 1 45 1 272 1 140 1 6 2 303 2 132 4 364 2 158 4 24 1 275 1 292 1 296 8 
171 1 150 1 281 3 173 1 335 2 19 1 45 1 272 1 140 1 364 2 132 3 275 1 292 1 296 6 
123 1 150 1 253 1 281 2 335 2 77 1 140 1 6 1 303 1 364 1 132 2 158 2 291 1 24 1 356 1 218 1 296 4 
231 2 150 1 281 4 126 1 335 2 77 1 140 1 66 1 364 1 132 3 24 1 356 1 296 7 218 1 265 1 
123 2 171 1 150 3 1 2 126 1 19 1 77 2 45 2 272 1 6 2 303 2 132 11 364 5 225 1 158 4 275 2 24 4 231 2 253 2 281 12 57 1 335 9 66 2 140 3 292 1 356 2 218 2 296 23 40 1 
231 1 281 1 296 1 
132 1 296 1 66 1 
123 1 150 1 253 1 281 3 43 1 335 3 77 1 140 1 6 1 303 1 132 3 364 2 158 2 291 1 24 1 356 1 296 6 218 1 
72 1 123 1 150 2 268 1 77 2 6 1 303 1 132 6 364 1 158 2 159 1 24 1 84 1 231 1 253 1 281 6 254 1 335 2 66 1 140 2 356 2 39 1 296 12 218 2 265 1 
150 1 281 3 335 2 45 1 272 1 140 1 132 3 364 1 275 1 24 1 296 6 
123 1 253 1 281 2 1 1 335 2 19 1 45 1 6 1 303 1 132 1 364 1 158 2 24 1 275 1 292 1 296 3 40 1 
123 1 150 2 253 1 281 5 335 5 164 1 45 2 272 1 140 2 6 1 303 1 364 3 132 5 158 2 275 2 24 2 296 10 84 1 
123 1 150 1 253 1 335 1 6 1 303 1 132 2 158 2 24 1 218 1 296 2 84 1 
123 1 150 1 253 1 281 2 335 2 77 1 140 1 6 1 303 1 364 1 132 2 158 2 24 1 356 1 218 1 296 4 84 1 
123 3 253 3 1 1 281 2 195 1 335 2 45 1 6 3 303 3 364 1 132 1 158 6 275 1 24 1 296 3 40 1 84 1 
123 5 171 1 150 5 1 2 126 1 300 1 19 1 77 3 45 3 272 2 6 5 303 5 132 16 364 7 205 1 158 10 183 1 275 3 24 5 84 1 231 4 253 5 281 18 195 1 335 12 66 3 140 5 291 1 292 1 356 3 296 34 218 3 40 1 265 1 
72 1 123 1 171 1 150 1 19 1 45 1 272 1 6 1 303 1 132 4 364 2 158 2 275 1 84 1 231 1 253 1 281 4 335 2 140 1 66 1 292 1 296 8 265 1 
72 1 123 2 171 1 150 2 126 1 19 1 45 1 272 1 6 2 303 2 364 2 132 6 158 4 275 1 24 1 84 1 231 2 253 2 281 5 335 3 140 1 66 1 291 1 292 1 356 1 296 11 218 1 265 1 
72 1 123 3 171 1 150 3 268 1 1 1 19 1 77 2 45 1 272 1 6 3 303 3 132 9 364 3 158 6 159 1 275 1 24 1 84 1 231 1 253 3 254 1 281 10 335 4 66 1 140 3 291 1 292 1 356 2 39 1 296 19 218 2 265 1 
72 1 123 3 171 1 150 3 1 1 268 1 19 1 77 1 45 1 272 1 6 3 303 3 132 10 364 3 158 6 159 1 275 1 24 2 84 1 231 1 253 3 281 7 254 1 335 5 66 1 140 2 291 1 292 1 356 2 39 1 296 17 218 2 265 1 
72 1 123 1 171 1 150 1 19 1 45 1 272 1 6 1 303 1 132 4 364 2 158 2 275 1 84 1 231 1 253 1 281 4 335 2 140 1 66 1 292 1 296 8 265 1 
72 1 123 1 150 2 268 1 77 2 6 1 303 1 132 6 364 1 158 2 159 1 24 1 84 1 231 1 253 1 281 6 254 1 335 2 66 1 140 2 356 2 39 1 296 12 218 2 265 1 
72 1 123 4 171 1 150 3 268 1 1 2 19 1 77 1 45 1 272 1 6 4 303 4 132 10 364 3 158 8 159 1 275 1 24 2 84 1 231 1 253 4 254 1 281 8 335 5 66 1 140 2 291 1 292 1 39 1 356 2 296 18 218 2 265 1 
72 1 123 4 150 3 268 1 1 2 77 2 6 4 303 4 132 9 364 3 158 8 159 1 24 3 84 1 231 1 253 4 254 1 281 7 195 1 335 6 66 1 140 2 39 1 356 3 296 16 218 3 265 1 
150 1 281 4 335 6 19 1 45 3 272 1 140 1 364 3 132 3 275 3 24 3 292 2 296 7 
72 1 123 4 171 1 150 3 268 1 1 2 19 1 77 1 45 1 272 1 6 4 303 4 132 10 364 3 158 8 159 1 275 1 24 1 84 1 231 1 253 4 254 1 281 8 195 1 335 4 66 1 140 2 292 1 39 1 356 2 296 18 218 2 265 1 
136 1 181 1 111 1 103 1 175 1 358 1 130 1 
334 1 136 1 111 1 99 1 175 1 286 1 176 1 130 1 181 1 103 1 25 1 358 1 
333 1 243 1 102 1 70 1 173 1 62 1 105 1 145 1 245 1 295 1 21 1 
136 2 243 1 245 1 175 1 21 1 371 1 344 1 181 1 102 1 248 1 70 1 103 2 105 1 145 1 143 1 54 1 295 1 110 1 
136 2 243 1 194 1 245 1 175 1 65 1 21 2 371 2 344 1 15 1 181 2 248 1 168 1 70 1 103 2 105 1 207 1 145 3 143 1 54 2 295 1 208 1 110 1 
136 2 243 2 232 1 194 1 245 1 175 1 65 1 21 2 371 2 344 1 15 1 181 2 141 1 168 1 70 2 103 2 105 2 207 1 145 3 143 1 54 2 295 1 208 1 110 1 
359 1 243 1 18 1 44 1 343 1 46 1 181 1 103 1 227 1 273 1 23 1 105 1 8 1 54 1 251 1 136 1 194 1 168 1 70 1 145 1 143 1 170 1 
359 1 243 1 18 1 44 1 343 1 180 1 181 1 103 1 227 1 273 1 23 1 105 1 8 1 54 1 251 1 136 1 194 1 168 1 70 1 145 1 143 1 170 1 
243 1 70 1 105 1 127 1 245 1 295 1 
73 1 267 1 243 7 297 1 321 1 58 1 127 1 245 2 371 1 21 2 79 1 14 1 224 1 102 2 70 6 117 1 374 1 105 7 145 3 347 1 295 3 
123 2 200 1 171 1 150 1 243 1 19 1 245 1 175 2 45 1 272 1 21 1 22 1 344 1 155 1 156 1 6 2 303 2 181 1 182 1 132 3 364 2 248 1 103 2 158 4 105 1 275 1 54 1 110 1 136 2 253 2 281 3 312 1 335 2 233 2 33 1 371 1 140 1 167 1 212 1 70 1 374 1 145 1 216 2 143 1 292 1 295 1 296 6 
42 2 150 2 243 1 44 1 45 1 343 2 102 1 103 1 105 1 8 1 54 1 251 2 252 2 211 1 164 1 13 2 315 1 168 1 70 1 169 1 71 1 262 1 170 1 359 1 18 1 323 1 272 1 325 1 223 1 180 1 181 1 273 3 227 3 23 1 275 1 278 2 85 1 136 1 34 1 140 2 36 2 142 5 238 1 199 4 145 2 143 1 294 2 
243 2 172 1 127 1 245 1 371 1 21 1 224 1 70 2 169 1 374 1 105 2 145 2 295 2 
333 1 243 4 269 1 62 1 245 1 21 1 141 1 102 1 70 4 374 1 105 4 145 1 295 1 
331 1 74 1 243 2 2 1 194 1 245 1 371 1 21 1 14 1 70 2 117 1 105 2 145 1 295 2 
243 1 102 1 70 1 255 1 133 1 105 1 245 1 295 1 241 1 353 1 
79 1 243 2 204 1 321 1 70 2 374 1 105 2 145 1 245 1 295 1 21 1 
333 1 243 5 58 1 269 1 194 1 62 1 245 2 21 2 79 1 102 1 70 4 374 1 105 5 145 3 347 1 295 2 
333 1 243 5 269 1 194 1 62 1 245 2 21 2 79 1 102 1 70 4 374 1 105 5 145 3 109 1 347 1 295 2 
136 2 243 1 232 1 245 1 175 1 21 1 371 1 344 1 181 1 102 1 70 1 103 2 105 1 145 1 143 1 54 1 295 1 110 1 
243 1 297 1 194 1 245 1 371 1 21 1 14 1 224 1 70 1 117 1 105 1 145 1 295 2 
136 1 161 1 210 1 198 1 345 1 181 1 354 1 103 1 147 1 
210 1 3 1 51 1 
131 1 345 1 161 1 210 1 175 1 
359 1 18 1 3 1 44 1 343 1 325 1 181 1 131 1 345 1 103 1 227 2 273 2 23 1 51 1 54 1 8 1 277 1 251 1 208 1 136 1 230 1 161 1 210 1 15 1 168 2 317 1 262 1 143 1 
322 1 173 1 135 1 324 1 
322 1 311 1 52 1 185 1 135 1 324 1 154 1 
196 1 52 1 153 1 
191 1 360 1 322 1 311 1 324 1 154 1 301 2 69 1 305 1 52 3 185 3 135 1 
322 1 17 1 311 1 52 2 185 2 308 1 135 1 324 1 154 1 
311 1 112 1 353 1 154 1 235 1 305 1 52 1 133 1 185 1 276 1 135 1 
322 1 305 1 311 1 52 1 185 1 135 1 154 1 
322 2 305 1 311 1 52 1 185 1 324 1 154 1 
322 1 311 2 369 1 336 1 154 2 305 1 52 2 144 1 185 2 135 1 
322 1 298 1 17 2 311 1 324 1 154 1 100 1 305 1 52 3 185 3 276 1 135 2 56 1 
322 1 17 1 255 1 311 1 162 1 112 1 221 1 324 1 353 1 154 1 305 1 133 2 52 2 185 2 135 1 
322 1 17 2 311 2 324 1 154 2 100 1 305 1 80 1 52 4 185 4 276 1 308 1 135 2 
322 1 305 1 311 1 52 1 185 1 135 1 324 1 154 1 
191 1 360 1 322 2 17 2 311 1 324 2 154 1 301 1 100 1 326 1 52 4 185 4 276 1 135 3 
322 1 17 1 311 1 256 1 324 1 154 1 261 1 305 1 367 1 52 2 185 2 135 1 
191 2 360 1 322 1 311 1 324 1 154 1 301 2 305 1 52 3 185 3 135 1 82 1 
149 1 53 1 135 2 330 2 
305 1 311 1 313 1 52 1 185 1 154 1 
322 1 17 1 298 1 305 1 311 1 52 2 185 2 135 1 324 1 154 1 
203 1 
322 1 305 1 311 1 52 1 185 1 135 1 324 1 154 1 
17 1 322 1 298 1 311 1 324 1 154 1 301 1 305 1 52 3 185 3 135 1 
326 1 276 1 135 1 100 1 
322 1 135 1 

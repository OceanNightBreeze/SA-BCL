#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (105,174) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (105,174) 338 112 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (105,174) 338 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 77 243 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
58 9 139 1 2 1 94 1 281 6 318 1 43 9 4 1 302 2 319 3 64 1 195 1 237 1 287 2 124 2 215 2 173 1 305 2 307 1 322 1 8 1 53 1 200 1 225 1 107 4 153 2 312 5 274 2 
58 9 139 1 2 1 94 1 281 6 318 1 43 9 4 1 302 2 319 3 64 1 195 1 237 1 287 2 124 2 215 2 173 1 305 2 307 1 322 1 8 1 53 1 200 1 225 1 107 4 153 2 312 5 274 2 
58 10 139 1 2 1 94 1 281 7 318 1 43 10 4 1 302 2 319 4 64 1 195 1 237 1 287 2 124 2 215 2 173 1 305 2 307 1 322 1 8 1 53 1 200 1 225 1 107 5 153 2 312 6 274 2 
58 7 139 1 2 1 94 1 281 4 318 1 43 7 4 1 302 2 319 2 64 1 237 1 287 2 124 2 215 2 173 1 305 1 307 1 322 1 8 1 53 1 200 1 225 1 107 3 153 2 312 4 274 2 
307 1 322 1 58 4 53 1 281 3 43 4 107 2 319 1 302 1 64 1 195 1 237 1 287 1 312 3 124 1 215 1 305 2 274 1 
307 1 322 1 58 2 139 1 43 2 4 1 153 1 302 1 64 1 122 1 312 1 124 1 352 1 215 1 340 1 274 1 
307 1 322 1 58 3 8 1 281 1 43 3 107 1 153 1 319 1 64 1 312 2 124 2 215 2 
58 9 333 1 281 7 318 1 43 9 319 3 302 1 64 1 195 1 237 1 287 1 49 1 124 2 215 2 305 2 307 1 322 1 8 1 53 1 200 1 107 4 153 1 312 5 274 1 
58 9 333 1 281 7 318 1 43 9 319 3 302 1 64 1 195 1 237 1 287 1 49 1 124 2 215 2 305 2 307 1 322 1 8 1 53 1 200 1 107 4 153 1 312 5 274 1 
134 1 315 1 79 1 
11 1 339 2 315 1 
248 2 232 2 349 1 202 2 351 2 158 1 128 2 34 2 
20 1 189 1 232 2 40 1 278 2 140 1 60 1 24 2 118 1 25 1 335 2 194 1 66 1 142 1 51 1 342 1 147 2 244 2 176 1 308 1 202 2 13 1 128 2 151 1 129 1 130 1 108 1 34 3 248 3 349 1 181 1 254 1 182 1 351 2 158 1 356 1 205 1 
248 1 251 1 232 1 349 1 92 1 178 1 202 1 351 1 128 1 34 1 
104 1 148 1 92 1 128 1 27 1 165 1 34 1 248 1 311 1 203 1 134 1 289 1 315 1 90 1 
232 1 104 1 92 1 202 1 128 1 27 1 165 1 34 1 248 1 311 1 203 2 351 1 134 1 289 2 315 1 
250 1 203 1 293 1 289 1 282 1 
250 1 138 1 203 2 223 1 134 1 289 2 315 1 282 1 
203 1 289 1 282 1 
232 1 92 1 116 1 178 1 202 1 128 1 34 1 248 1 251 1 250 1 349 1 203 1 351 1 289 1 
315 1 
250 1 138 1 203 2 134 1 289 2 315 1 282 1 44 1 
136 1 256 1 138 1 21 2 59 1 97 1 282 2 3 1 250 2 211 1 46 1 346 1 203 5 156 2 134 1 289 5 113 2 315 1 357 1 
267 2 245 1 232 4 202 4 128 5 106 1 34 5 248 5 350 1 353 1 351 1 86 1 158 1 90 1 
248 2 251 1 232 2 92 1 202 2 128 2 186 1 34 2 
267 1 232 1 308 1 278 1 332 1 60 1 202 1 118 1 128 1 130 1 335 1 34 2 248 2 194 1 181 1 350 1 182 1 66 1 205 1 244 1 
158 1 79 1 
232 1 202 1 128 2 34 2 248 2 310 1 351 1 86 1 158 2 
332 1 313 1 54 1 
308 1 278 1 60 1 300 1 118 1 335 1 130 1 34 1 248 1 194 1 181 1 182 1 66 1 158 1 205 1 244 1 
267 1 248 3 232 3 351 1 202 3 158 1 128 3 34 3 
248 1 251 1 232 1 92 1 202 1 128 1 34 1 
248 1 310 1 232 1 92 1 202 1 351 1 86 1 128 1 34 1 
20 1 189 1 232 3 40 1 278 1 140 1 60 1 92 1 24 1 118 1 27 1 165 1 335 1 194 1 66 1 142 1 342 1 289 1 127 1 147 2 244 1 267 1 104 1 308 1 202 3 128 3 151 1 130 1 108 1 34 4 248 4 36 1 311 1 181 1 349 1 350 1 254 1 203 1 182 1 351 2 86 1 158 1 356 1 205 1 
248 2 267 1 232 1 353 1 202 1 158 1 128 2 90 1 34 2 
267 2 104 1 232 3 92 1 202 3 128 3 27 1 165 1 34 3 248 3 36 1 311 1 350 1 203 1 351 1 86 1 289 1 315 1 19 1 
267 1 232 2 332 1 202 2 54 1 128 2 34 2 248 2 351 1 86 1 
308 1 278 1 60 1 118 1 335 1 130 1 34 1 248 1 194 1 181 1 182 1 66 1 158 1 205 1 244 1 
278 1 60 1 118 1 335 1 130 1 34 1 248 1 194 1 181 1 182 1 158 1 159 1 298 1 205 1 244 1 
189 2 140 1 332 2 24 4 213 1 142 1 239 1 171 1 69 1 51 2 265 1 342 1 218 1 143 1 147 2 54 2 151 1 108 1 254 1 56 1 204 1 313 2 228 1 229 1 
248 1 311 1 232 1 92 1 202 1 128 1 186 1 34 1 
105 1 246 1 
105 1 246 1 
162 1 174 1 
162 1 174 1 
162 1 174 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
105 1 246 1 
112 1 203 1 105 1 125 1 338 1 246 1 289 1 
105 1 125 1 338 1 246 1 
287 1 302 1 274 1 
352 1 302 1 274 1 
188 1 74 1 287 2 352 1 354 1 274 3 
188 1 287 1 270 1 352 1 354 1 274 2 
188 2 287 1 352 1 354 1 274 2 
256 3 190 2 138 1 21 1 277 1 163 1 59 1 42 1 96 2 282 1 3 2 212 1 47 2 337 1 339 3 69 1 265 1 289 5 11 1 326 1 250 4 35 1 203 5 156 1 85 1 228 1 134 1 113 1 229 1 315 2 231 1 161 1 
256 8 190 6 138 1 163 4 21 2 277 2 115 1 59 1 97 1 282 6 3 6 321 1 47 6 339 9 216 1 69 3 265 3 289 9 144 5 11 3 293 5 80 1 326 2 250 7 252 1 203 9 156 2 85 1 314 1 228 3 134 1 113 2 229 3 315 5 161 3 
256 3 190 2 21 1 277 1 163 1 42 1 96 1 97 1 3 2 212 1 47 2 339 4 69 1 265 1 289 3 11 2 326 1 250 2 203 3 156 1 134 1 228 1 113 1 229 1 315 3 161 1 
256 5 190 4 21 1 277 1 163 2 42 1 96 2 97 1 3 4 212 1 321 1 47 4 339 7 69 2 265 2 289 4 11 3 326 1 250 3 252 1 203 4 156 1 134 1 314 1 228 2 113 1 229 2 315 4 161 2 
194 1 118 1 205 1 
194 1 82 1 
194 1 79 1 15 1 
194 1 87 1 
0 1 
194 1 118 1 
194 3 9 1 327 1 118 1 205 1 15 2 
189 2 206 1 191 1 260 1 271 1 24 5 295 1 168 1 238 1 184 1 239 3 227 2 69 1 51 3 265 1 218 2 242 1 
189 2 206 1 191 1 260 1 271 1 24 5 295 1 168 1 238 1 184 1 239 3 227 2 69 1 51 3 265 1 218 2 242 1 
189 2 206 1 191 1 260 1 271 1 24 5 295 1 168 1 297 1 238 1 184 1 239 3 227 2 69 1 51 3 265 1 218 2 242 1 
206 2 189 14 191 1 260 1 24 29 26 4 284 1 301 1 168 2 320 1 238 2 141 3 239 10 172 1 69 4 51 15 265 4 218 5 342 1 198 1 242 1 147 2 102 1 271 1 295 2 151 1 152 1 108 1 254 1 227 3 184 5 228 3 229 3 161 3 
189 3 206 1 191 1 24 7 167 1 168 1 320 1 238 1 239 4 69 1 51 4 265 1 6 1 342 2 218 3 242 1 147 4 271 1 295 1 151 2 108 2 254 2 227 2 184 1 
58 2 278 1 60 1 334 1 281 1 43 2 335 1 302 1 64 1 98 1 287 1 124 1 215 1 126 1 244 1 307 1 322 1 323 1 74 1 130 1 153 1 345 1 109 1 309 1 312 1 131 1 352 1 355 1 329 1 274 2 
58 3 278 1 60 1 334 1 281 2 43 3 335 1 302 1 64 1 98 1 287 1 124 1 215 1 126 1 244 1 307 1 74 1 323 1 343 1 130 1 153 1 109 1 309 1 312 1 352 1 355 1 328 1 329 1 89 1 274 2 
58 2 278 1 60 1 334 1 281 2 43 2 335 1 302 1 64 1 287 1 244 1 307 1 323 1 74 1 343 1 130 1 153 1 109 1 309 1 312 1 352 1 355 1 328 1 329 1 274 2 
291 1 58 1 323 2 31 1 278 1 279 1 60 1 61 1 118 1 164 1 43 1 130 1 335 1 153 2 194 1 182 1 124 1 263 1 215 1 355 2 329 2 89 1 244 1 
58 1 278 1 60 1 334 1 43 1 335 1 302 1 98 1 287 1 124 1 215 1 126 1 244 1 322 1 323 1 74 1 343 1 130 1 153 1 345 1 109 1 309 1 352 1 355 1 329 1 274 2 
1 1 
138 3 233 2 276 2 278 2 92 1 282 6 3 2 236 1 194 1 45 1 48 2 289 5 244 2 11 2 104 1 148 1 149 2 150 1 326 1 248 1 111 2 55 4 203 5 255 1 156 1 113 1 160 2 256 2 257 1 331 1 21 1 59 1 60 1 118 1 335 2 27 1 165 1 29 2 339 2 263 1 219 1 31 1 76 1 33 1 78 1 128 1 130 1 34 1 311 1 182 2 38 1 84 1 134 1 315 2 90 1 
104 1 138 1 257 1 76 1 148 1 92 1 78 1 128 1 44 1 282 2 165 1 27 1 236 1 34 1 248 1 311 1 45 1 55 2 203 3 289 3 160 1 90 1 
257 1 138 1 92 1 282 1 27 1 165 1 44 1 236 1 45 1 29 1 289 3 104 1 76 1 148 1 128 1 78 1 34 1 248 1 311 1 55 3 203 3 134 1 315 1 90 1 
138 1 257 1 92 1 44 1 27 1 165 1 282 2 236 1 45 1 29 1 289 3 104 1 76 1 148 1 128 1 78 1 34 1 248 1 311 1 111 1 55 3 203 3 134 1 160 1 315 1 90 1 
138 3 233 2 276 2 92 1 44 1 282 7 3 1 236 1 45 1 48 2 289 5 104 1 11 2 148 1 149 2 248 1 111 4 55 6 17 1 203 5 156 1 113 1 160 4 256 1 257 1 21 1 59 1 165 1 27 1 65 1 29 4 219 1 76 1 226 1 78 1 128 1 34 1 311 1 37 1 183 1 38 1 134 5 315 5 90 1 
138 2 233 2 276 2 92 1 282 4 3 1 236 1 45 1 48 2 289 4 104 1 11 2 148 1 149 2 248 1 111 2 55 4 203 4 156 1 113 1 160 2 256 1 257 1 21 1 59 1 165 1 27 1 29 2 339 2 219 1 76 1 33 1 128 1 78 1 34 1 311 1 38 1 134 1 315 2 90 1 
256 1 138 2 257 1 233 2 276 2 21 1 92 1 59 1 282 4 27 1 165 1 3 1 236 1 45 1 65 1 29 2 48 2 289 4 219 1 11 2 104 1 76 1 148 1 149 2 128 1 78 1 34 1 248 1 311 1 111 2 55 4 37 1 203 4 183 1 38 1 156 1 134 1 113 1 315 1 160 2 90 1 
256 1 138 2 257 1 233 2 276 2 21 1 92 1 59 1 282 4 27 1 165 1 3 1 236 1 45 1 65 1 29 2 48 2 289 4 219 1 11 2 104 1 76 1 148 1 149 2 128 1 78 1 34 1 248 1 311 1 111 2 55 4 37 1 203 4 183 1 38 1 156 1 134 1 113 1 315 1 160 2 90 1 
137 1 256 1 138 2 257 1 233 2 276 2 21 1 92 1 59 1 192 2 282 4 27 1 165 1 3 1 236 1 45 1 65 1 29 2 197 1 339 2 289 4 290 2 219 1 199 1 104 1 76 1 148 1 128 1 78 1 34 1 248 1 311 1 111 2 55 4 203 4 156 1 134 1 113 1 315 1 160 2 90 1 
256 1 138 2 257 1 233 2 276 2 21 1 59 1 92 1 27 1 165 1 282 5 3 1 236 1 45 1 65 1 48 2 29 3 289 4 219 1 11 2 104 1 76 1 148 1 149 2 226 1 128 1 78 1 34 1 248 1 311 1 111 3 37 1 55 5 203 4 183 1 38 1 156 1 134 1 113 1 315 1 160 3 90 1 
256 1 138 2 257 1 233 2 276 2 21 1 59 1 92 1 27 1 165 1 282 5 3 1 236 1 45 1 65 1 48 2 29 3 289 4 219 1 11 2 104 1 76 1 148 1 149 2 226 1 128 1 78 1 34 1 248 1 311 1 111 3 37 1 55 5 203 4 183 1 38 1 156 1 134 1 113 1 315 1 160 3 90 1 
138 2 233 2 276 2 92 1 192 2 282 4 3 1 236 1 45 1 289 4 290 2 199 1 104 1 148 1 248 1 111 2 55 4 203 4 156 1 113 1 160 2 256 1 257 1 21 1 59 1 165 1 27 1 29 2 339 2 219 1 76 1 33 1 128 1 78 1 34 1 311 1 134 1 315 1 90 1 
206 1 189 2 332 1 140 1 191 1 24 4 168 1 142 1 239 2 69 1 51 2 342 1 218 2 265 1 242 1 147 2 271 1 54 1 79 1 151 1 108 1 254 1 56 1 227 1 313 1 158 1 
189 6 40 1 140 2 332 11 24 14 26 3 63 1 239 2 142 1 141 3 172 1 69 2 51 8 218 1 342 2 265 1 198 1 72 1 147 4 324 1 176 1 54 4 151 2 108 2 110 1 254 2 184 1 313 11 158 1 228 2 229 1 187 1 161 2 
39 1 232 1 189 1 40 1 278 1 140 1 60 1 300 1 24 2 118 1 41 1 335 1 194 1 336 1 66 1 142 1 51 1 342 1 244 1 147 2 267 1 324 1 308 1 176 1 202 1 54 1 128 1 130 1 151 1 108 1 34 2 248 2 181 1 350 1 182 1 254 1 158 1 205 1 
189 9 232 1 40 1 278 3 140 3 191 1 280 1 285 1 194 2 142 3 239 8 51 9 99 2 242 1 244 3 147 6 324 1 202 1 54 7 151 3 108 3 248 3 16 2 254 3 158 1 205 2 161 2 206 1 114 2 332 7 60 2 24 18 118 2 335 3 168 1 66 2 69 3 341 1 218 4 265 3 342 3 71 2 267 1 343 1 176 1 308 2 271 1 128 1 130 2 34 3 181 2 350 1 182 1 227 1 184 4 313 7 228 2 356 2 229 2 
232 1 189 1 40 1 278 7 140 2 60 2 24 2 209 1 95 1 118 2 335 8 5 1 194 3 142 2 263 1 51 1 342 2 244 8 147 4 267 1 103 1 343 1 31 1 176 1 202 1 128 1 130 2 151 2 129 2 108 2 34 1 248 1 154 1 81 1 182 2 254 2 56 1 131 1 273 1 
232 1 189 2 332 1 140 1 24 3 283 1 239 1 142 1 69 1 51 1 218 1 342 1 265 1 147 2 324 1 202 1 54 1 128 1 151 1 108 1 34 1 248 1 254 1 351 1 313 1 86 1 228 1 229 1 161 1 
332 1 140 1 24 2 54 1 151 1 108 1 254 1 56 1 239 1 184 1 142 1 171 1 313 1 69 1 228 1 51 2 342 1 147 2 
189 2 332 1 140 1 24 2 54 1 151 1 108 1 213 1 254 1 56 1 239 1 142 1 313 1 218 1 342 1 265 1 229 1 147 2 
189 2 332 2 140 1 24 4 54 2 151 1 108 1 254 1 56 1 239 2 184 1 142 1 313 2 69 1 228 1 51 2 218 1 265 1 342 1 229 1 147 2 161 1 
332 1 140 1 24 2 95 1 54 1 151 1 108 1 254 1 239 1 184 1 142 1 171 1 313 1 69 1 228 1 51 2 342 1 147 2 
189 2 332 1 140 1 24 2 95 1 54 1 151 1 108 1 213 1 254 1 239 1 142 1 313 1 218 1 342 1 265 1 229 1 147 2 
189 2 332 2 140 1 24 4 95 1 54 2 151 1 108 1 254 1 239 2 184 1 142 1 313 2 69 1 228 1 51 2 218 1 265 1 342 1 229 1 147 2 161 1 
189 2 332 2 140 1 24 4 54 2 151 1 108 1 254 1 239 2 184 1 142 1 313 2 69 1 228 1 51 2 218 1 265 1 342 1 229 1 147 2 161 1 
189 1 40 1 278 1 140 1 60 1 24 2 118 1 335 1 194 1 66 1 142 1 51 1 342 1 244 1 147 2 176 1 308 1 130 1 151 1 108 1 34 1 248 1 181 1 182 1 254 1 158 1 356 1 205 1 
189 1 40 1 278 1 140 1 60 1 259 1 24 2 118 1 335 1 194 1 142 1 51 1 342 1 244 1 147 2 176 1 130 1 151 1 108 1 34 1 248 1 181 1 182 1 254 1 158 1 159 1 205 1 298 1 
189 2 140 1 332 2 24 4 142 1 239 2 69 1 51 2 342 1 265 1 218 1 147 2 324 1 54 2 151 1 108 1 254 1 184 1 313 2 228 1 229 1 161 1 
189 2 278 1 332 2 140 1 60 1 24 4 118 1 335 1 194 1 66 1 239 2 142 1 69 1 51 2 218 1 265 1 99 1 342 1 244 1 147 2 308 1 54 2 130 1 151 1 108 1 34 1 248 1 181 1 254 1 184 1 131 1 313 2 228 1 356 1 229 1 205 1 161 1 
189 1 232 1 140 1 332 1 24 3 169 1 239 1 142 1 69 1 51 2 265 1 342 1 147 2 324 1 202 1 128 1 54 1 151 1 108 1 34 1 248 1 254 1 184 1 351 1 86 1 313 1 228 1 229 1 161 1 
189 17 91 3 207 1 23 1 24 32 26 4 235 1 193 1 167 1 320 1 210 1 288 2 141 3 239 5 172 3 69 4 51 15 218 2 342 3 265 4 198 1 243 1 147 6 221 1 177 1 201 1 222 1 77 1 296 1 151 3 108 3 249 1 254 3 184 3 228 4 229 4 161 4 
189 16 91 4 207 1 23 1 24 33 26 4 235 1 193 1 167 1 320 2 210 1 288 2 141 3 239 6 172 3 69 4 51 17 218 3 342 4 265 3 198 1 243 1 147 8 221 1 177 1 201 1 222 1 77 1 296 1 151 4 108 4 249 1 254 4 184 3 228 4 229 3 161 4 
206 1 189 21 91 3 207 1 191 1 23 1 24 44 26 4 235 1 63 2 167 1 168 1 320 1 210 1 288 1 141 4 239 12 172 2 69 7 51 23 218 6 342 2 265 7 198 2 242 1 243 1 147 4 177 1 201 1 222 1 271 1 77 1 296 1 151 2 108 2 249 1 254 2 227 1 184 6 228 6 229 6 161 6 
189 10 91 2 24 19 26 2 167 1 288 1 141 1 239 6 172 1 69 3 51 9 218 3 342 2 265 3 198 1 243 1 147 4 221 1 201 1 77 2 296 1 151 2 108 2 249 1 254 2 184 3 228 3 230 1 229 3 161 3 
189 11 91 3 207 1 23 1 24 24 26 2 235 1 167 1 320 2 210 1 288 2 239 2 141 2 172 2 69 3 51 13 218 1 265 2 342 3 243 1 147 6 177 1 201 1 222 1 77 1 296 1 151 3 108 3 249 2 254 3 184 1 228 3 229 2 161 3 
189 1 40 1 278 2 140 1 60 1 24 2 118 1 335 2 194 1 142 1 264 1 217 1 51 1 342 1 244 2 147 2 292 1 324 1 176 1 128 2 130 1 151 1 129 2 108 1 34 2 248 2 81 1 254 1 135 1 88 1 273 1 
74 1 343 1 278 2 269 1 60 1 14 1 130 1 335 2 109 1 302 1 309 1 98 1 287 1 352 1 131 1 329 1 145 1 274 2 244 2 
74 1 343 1 278 1 60 1 344 1 335 1 130 1 109 1 302 1 309 1 98 1 287 1 352 1 329 1 145 1 274 2 244 1 
10 1 31 1 278 1 269 1 279 1 60 1 118 1 130 1 335 1 194 1 182 1 263 1 329 1 244 1 
74 1 343 1 278 1 269 1 60 1 14 1 335 1 130 1 109 1 302 1 309 1 98 1 287 1 352 1 329 1 145 1 274 2 244 1 
294 1 
256 1 46 1 346 1 134 1 315 1 79 1 3 1 
256 1 11 1 138 1 21 1 59 1 149 1 282 1 3 1 48 1 203 1 38 1 339 1 156 1 134 1 289 1 113 1 315 2 
275 1 256 1 138 1 278 1 21 2 59 2 60 2 316 1 118 1 282 2 335 1 120 1 194 4 214 1 196 1 289 2 244 1 268 1 104 1 130 1 15 1 326 1 203 2 182 1 156 2 327 1 87 2 113 2 205 1 299 1 
256 7 138 1 190 5 21 2 59 2 23 1 26 1 282 1 235 1 3 4 210 1 47 5 261 1 339 6 141 1 172 1 69 2 289 1 265 2 11 3 177 1 222 1 203 1 156 2 228 2 134 1 185 1 113 2 315 4 229 2 161 2 
206 1 256 2 232 1 21 1 92 1 59 1 116 1 3 2 168 1 261 2 69 2 289 1 265 1 101 1 178 1 202 1 271 1 128 1 34 1 248 1 251 1 347 1 349 1 37 1 203 1 156 1 351 1 113 1 
256 1 21 1 59 1 3 1 346 1 46 1 156 1 134 1 113 1 315 1 
11 5 256 5 114 1 190 5 3 5 47 5 261 2 339 10 69 2 228 2 265 2 315 5 229 2 101 1 161 2 
138 1 203 1 134 1 289 1 315 1 282 1 
57 2 256 2 138 2 21 2 278 4 60 1 59 1 118 1 234 1 97 1 335 4 282 4 3 2 304 1 194 1 263 1 289 3 244 4 73 1 31 1 150 2 130 1 326 2 182 2 203 3 255 1 156 2 84 1 113 2 
20 1 189 1 232 2 40 1 278 1 140 1 60 1 24 1 118 1 335 1 194 1 66 1 142 1 342 1 147 2 244 1 308 1 202 2 128 2 151 1 130 1 108 1 34 3 248 3 349 1 181 1 254 1 182 1 351 2 158 1 356 1 205 1 
11 2 256 1 190 2 21 1 59 1 150 1 3 2 326 1 47 2 227 1 339 4 156 1 134 2 113 1 315 4 
30 1 224 1 146 1 
286 1 30 1 68 1 93 1 146 1 
30 1 224 1 146 1 
30 1 224 1 146 1 
30 1 119 1 146 1 
30 1 119 1 146 1 
30 1 119 1 146 1 
30 1 146 1 
105 1 246 1 
189 3 206 1 191 1 24 6 26 1 235 1 167 1 168 1 141 1 239 2 172 1 69 1 51 3 265 1 342 1 218 2 242 1 147 2 271 1 151 1 108 1 254 1 227 1 
206 1 189 4 191 1 24 9 26 2 235 1 167 1 168 1 141 1 239 3 172 1 69 2 51 5 265 1 218 2 342 2 198 1 242 1 147 4 271 1 151 2 108 2 254 2 227 1 157 1 184 1 228 1 161 1 
189 7 23 1 24 13 26 1 235 1 167 1 210 1 320 1 141 1 239 2 172 1 69 2 51 6 342 3 265 2 218 1 147 6 177 1 222 1 151 3 108 3 254 3 157 1 184 1 228 2 229 2 161 2 
189 4 23 1 24 11 26 1 235 1 167 1 320 1 210 1 141 1 239 2 172 1 69 2 51 7 342 3 265 1 218 1 147 6 177 1 222 1 151 3 108 3 254 3 157 1 184 1 228 2 229 1 161 2 
189 3 206 1 191 1 24 6 26 1 235 1 167 1 168 1 141 1 239 2 172 1 69 1 51 3 265 1 342 1 218 2 242 1 147 2 271 1 151 1 108 1 254 1 227 1 
189 6 23 1 24 12 26 1 235 1 167 1 210 1 141 1 239 2 172 1 69 2 51 6 342 1 265 2 218 1 147 2 177 1 222 1 151 1 108 1 254 1 184 1 228 2 229 2 161 2 
189 5 23 1 24 12 26 1 235 1 167 1 210 1 320 2 141 1 239 2 172 1 69 2 51 7 342 4 265 1 218 1 147 8 177 1 222 1 151 4 108 4 254 4 184 1 157 1 228 2 229 1 161 2 
189 5 23 1 24 12 26 1 235 1 167 1 210 1 320 2 141 1 239 4 172 1 69 2 51 7 342 4 265 1 218 2 147 8 221 1 177 1 222 1 151 4 108 4 254 4 184 2 228 2 229 1 161 2 
189 4 206 2 191 1 24 9 271 2 168 2 347 1 227 1 239 7 184 3 69 3 51 5 265 3 218 4 242 1 
189 5 23 1 24 12 26 1 235 1 167 1 210 1 320 2 141 1 239 2 172 1 69 2 51 7 342 4 265 1 218 1 147 8 221 1 177 1 222 1 151 4 108 4 254 4 184 1 228 2 229 1 161 2 
189 3 206 1 191 1 271 1 24 6 151 2 108 2 168 1 320 1 254 2 227 1 184 1 239 3 69 1 51 3 265 1 218 2 342 2 242 1 147 4 
189 2 206 1 191 1 271 1 24 4 79 1 168 1 227 1 239 2 69 1 51 2 218 2 265 1 242 1 
189 2 24 4 151 1 108 1 254 1 239 2 157 1 184 1 69 1 228 1 51 2 218 1 265 1 342 1 229 1 147 2 161 1 
189 4 24 7 26 2 141 1 184 1 239 2 172 1 69 1 51 3 228 1 218 1 265 1 229 1 198 1 161 1 
206 2 189 11 191 1 24 21 26 2 63 1 168 2 320 2 239 9 141 2 69 3 51 10 265 3 218 5 342 2 198 1 242 1 147 4 306 1 271 1 151 2 108 2 254 2 227 1 184 4 228 2 229 2 161 2 187 1 
189 1 24 1 26 1 
141 1 24 1 51 1 
189 3 114 1 24 6 151 1 108 1 254 1 157 1 184 1 239 3 69 1 228 1 51 3 342 1 265 1 218 2 229 1 147 2 161 1 
189 6 23 1 24 12 26 1 235 1 167 1 210 1 141 1 239 2 172 1 69 2 51 6 342 1 265 2 218 1 147 2 177 1 222 1 151 1 108 1 254 1 184 1 228 2 229 2 161 2 
189 1 24 2 271 1 69 1 51 1 265 1 
206 1 189 2 191 1 24 3 151 1 108 1 168 1 320 1 254 1 184 1 239 2 51 1 218 1 342 1 242 1 306 1 147 2 
206 1 189 4 24 8 271 1 151 1 108 1 167 1 168 1 347 1 254 1 239 4 184 2 69 2 51 4 342 1 218 2 265 2 147 2 
24 2 151 1 108 1 167 1 254 1 184 1 239 1 69 1 228 1 51 2 342 1 147 2 
189 2 24 4 151 1 108 1 167 1 254 1 239 2 184 1 69 1 228 1 51 2 218 1 265 1 342 1 229 1 147 2 161 1 
189 2 206 1 221 1 24 3 151 3 108 3 167 1 168 1 320 1 254 3 239 2 184 1 51 1 342 3 218 1 306 1 147 6 
206 2 189 16 191 1 24 30 26 4 301 1 167 1 168 2 320 2 141 3 239 11 172 1 69 5 51 14 342 5 265 5 218 6 198 1 242 1 306 1 147 10 102 1 221 1 271 2 152 1 151 5 108 5 254 5 227 1 157 1 184 5 228 3 229 3 161 3 
248 1 175 1 353 1 158 1 128 1 34 1 90 1 
75 1 175 1 128 1 34 1 248 1 262 1 18 1 353 1 132 1 158 1 241 1 90 1 
267 1 232 1 278 1 60 1 202 1 118 1 128 1 335 1 130 1 34 2 248 2 194 1 181 1 182 1 158 1 205 1 298 1 244 1 
57 1 12 1 278 1 60 2 118 1 335 1 130 1 194 1 253 1 50 1 327 1 205 1 244 1 
194 1 31 1 278 1 182 1 60 1 263 1 118 1 130 1 79 1 335 1 244 1 
267 1 232 1 308 1 278 1 60 1 202 1 118 1 128 1 335 1 130 1 34 2 248 2 194 1 181 1 182 1 158 1 205 1 244 1 
267 1 57 1 232 2 308 1 278 1 92 1 60 1 202 1 118 2 128 2 165 1 335 1 130 1 34 2 248 2 311 1 194 3 181 1 82 1 158 1 205 2 330 1 244 1 
57 1 232 2 278 2 60 1 92 1 118 2 335 2 165 1 194 3 240 1 244 2 267 1 202 1 128 2 130 1 34 2 248 2 311 1 181 1 82 1 158 1 298 1 205 2 330 1 
57 1 278 3 60 1 118 1 282 1 335 3 194 4 240 1 289 2 244 3 220 1 104 1 130 1 15 1 203 2 182 1 82 1 83 1 87 1 134 1 205 1 315 1 330 1 
57 1 104 1 278 3 60 1 118 1 335 3 282 1 130 1 15 1 194 4 182 1 203 2 82 1 240 1 87 1 134 1 289 2 315 1 205 1 330 1 244 3 299 1 
154 1 278 1 60 1 130 1 335 1 244 1 
103 1 343 1 12 1 278 6 60 3 209 1 118 2 129 1 335 7 130 2 5 1 154 1 194 3 253 1 81 1 182 2 50 1 131 1 327 1 205 1 244 7 
232 1 189 2 278 1 140 2 191 1 194 1 142 2 239 2 51 2 99 1 242 1 244 1 147 4 324 1 202 1 54 1 151 2 108 2 248 2 16 1 254 2 158 1 205 1 206 1 332 1 60 1 24 4 118 1 335 1 168 1 66 1 69 1 217 1 342 2 218 2 265 1 267 1 308 1 271 1 128 1 130 1 34 2 181 1 131 1 227 1 313 1 356 1 
256 1 138 1 278 1 21 2 59 2 335 1 282 2 3 1 46 1 194 2 196 1 214 1 289 3 244 1 73 1 268 1 104 1 15 1 250 1 346 1 182 1 203 3 156 2 87 1 134 1 113 2 315 1 299 1 
278 2 60 2 118 1 335 2 130 1 120 1 15 1 154 1 194 2 131 1 327 1 205 1 244 2 
31 1 278 4 60 1 118 1 335 4 130 1 194 1 182 1 131 1 240 1 263 1 52 1 244 4 
57 1 278 2 258 1 60 2 280 1 62 1 118 1 335 2 130 1 194 1 253 1 50 1 205 1 244 2 
278 1 182 1 60 1 352 1 130 1 335 1 109 1 302 1 274 1 244 1 
292 1 343 1 278 2 60 1 118 1 335 2 130 1 194 1 81 1 131 1 244 2 
57 1 31 1 278 4 60 2 118 2 209 1 335 5 130 2 5 1 194 3 182 1 81 1 131 1 263 1 52 1 244 5 
57 1 31 1 278 4 60 2 118 2 209 1 335 5 130 2 121 1 194 3 182 1 81 1 131 1 263 1 52 1 244 5 
22 1 208 1 117 1 158 1 247 1 
104 1 22 2 92 1 208 2 117 2 247 1 165 1 27 1 250 1 311 1 36 1 203 2 158 1 70 1 134 1 289 2 315 1 7 1 266 1 
248 1 22 1 117 1 264 1 247 1 128 1 135 1 88 1 34 1 
247 1 7 1 266 1 
307 1 64 1 312 1 79 1 
307 1 58 1 64 1 312 1 124 1 215 1 43 1 
323 1 43 1 153 1 
322 1 307 1 58 3 139 2 43 3 303 1 64 1 155 1 170 1 312 1 124 1 215 1 
307 1 58 2 64 1 312 1 124 1 215 1 281 1 43 2 305 1 
322 1 58 1 287 1 237 1 312 1 124 1 215 1 43 1 107 1 302 1 274 1 
307 1 322 1 58 1 312 1 124 1 215 1 43 1 
307 2 322 1 58 1 64 1 124 1 215 1 43 1 
307 1 322 1 58 2 32 1 325 1 43 2 28 1 312 1 124 2 215 2 
307 1 322 1 58 3 200 1 318 1 281 2 43 3 107 1 319 1 64 1 312 2 124 1 215 1 
307 1 322 1 58 2 74 1 281 1 43 2 302 1 64 1 287 1 312 1 123 1 352 1 124 1 215 1 274 2 
307 1 322 1 58 4 281 2 43 4 107 1 319 1 64 1 195 1 312 2 124 2 215 2 305 1 
307 1 322 1 58 1 64 1 312 1 124 1 215 1 43 1 
307 2 58 4 139 1 281 2 43 4 107 1 303 1 319 1 64 2 348 1 155 1 312 3 124 1 215 1 
307 1 322 1 58 2 317 1 281 1 43 2 166 1 64 1 49 1 312 1 124 1 215 1 
322 1 307 1 58 3 139 2 43 3 303 1 180 1 64 1 155 2 312 1 124 1 215 1 
272 1 179 1 312 2 67 2 
322 1 58 1 124 1 215 1 133 1 43 1 
307 1 322 1 58 2 64 1 312 1 124 1 215 1 281 1 318 1 43 2 
100 1 
307 1 322 1 58 1 64 1 312 1 124 1 215 1 43 1 
322 1 307 1 58 3 139 1 281 1 318 1 43 3 64 1 312 1 124 1 215 1 
348 1 312 1 107 1 319 1 
307 1 312 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 132 333 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 46 1 47 1 263 2 130 1 176 1 35 2 230 1 211 3 116 1 91 5 93 1 55 1 118 2 340 2 295 1 138 1 296 1 239 1 125 9 279 6 195 1 76 2 307 9 308 1 198 4 224 2 82 2 
0 1 46 1 47 1 263 2 130 1 176 1 230 1 35 2 211 3 116 1 91 5 93 1 340 2 55 1 118 2 295 1 138 1 296 1 239 1 125 9 279 6 195 1 76 2 307 9 308 1 198 4 224 2 82 2 
0 1 46 1 47 1 263 2 130 1 176 1 230 1 35 2 211 4 116 1 91 6 93 1 340 2 55 1 118 2 295 1 138 1 296 1 239 1 125 10 279 7 195 1 76 2 307 10 308 1 198 5 224 2 82 2 
0 1 46 1 47 1 263 2 130 1 230 1 35 1 211 2 116 1 91 4 93 1 340 2 55 1 118 2 295 1 138 1 296 1 239 1 125 7 279 4 195 1 76 2 307 7 308 1 198 3 224 2 82 2 
47 1 263 1 295 1 138 1 176 1 125 4 279 3 35 2 211 1 195 1 91 3 76 1 93 1 307 4 198 2 340 1 224 1 82 1 
47 1 263 1 295 1 347 1 270 1 125 2 230 1 91 1 76 1 93 1 308 1 307 2 118 1 56 1 224 1 82 1 
47 1 263 2 295 1 239 1 125 3 279 1 211 1 91 2 93 1 307 3 118 1 198 1 82 2 
46 1 261 1 47 1 202 1 263 2 130 1 176 1 35 2 211 3 91 5 93 1 118 1 340 1 295 1 138 1 239 1 279 7 125 9 195 1 76 1 198 4 307 9 224 1 82 2 
46 1 261 1 47 1 202 1 263 2 130 1 176 1 35 2 211 3 91 5 93 1 118 1 340 1 295 1 138 1 239 1 279 7 125 9 195 1 76 1 198 4 307 9 224 1 82 2 
153 1 57 1 150 1 
190 2 208 1 57 1 
73 1 257 2 360 1 183 2 171 2 337 2 196 2 238 2 
201 2 354 1 286 2 203 1 171 3 226 1 337 2 5 1 338 1 360 1 10 1 232 1 94 1 136 1 238 2 365 1 13 1 97 1 273 1 367 1 63 1 183 2 185 1 299 1 370 1 70 1 302 1 189 2 73 1 257 3 192 2 193 1 191 1 222 1 23 1 78 2 196 2 
356 1 257 1 360 1 183 1 171 1 152 1 235 1 337 1 196 1 238 1 
356 2 171 2 152 1 337 2 269 1 360 1 9 1 254 1 235 1 236 1 292 1 238 1 58 1 57 1 183 1 257 2 196 1 245 1 149 1 150 1 250 1 
356 1 183 1 171 1 337 1 269 1 257 1 9 2 292 1 236 1 196 1 245 2 238 1 57 1 150 1 149 1 
161 1 9 1 259 1 245 1 182 1 
9 2 22 1 259 1 245 2 182 1 187 1 57 1 150 1 
9 1 245 1 182 1 
356 1 183 1 171 1 152 1 337 1 360 1 257 1 9 1 235 1 259 1 196 1 245 1 238 1 250 1 
57 1 
372 1 9 2 259 1 245 2 182 1 187 1 57 1 150 1 
14 1 262 1 18 1 335 1 121 1 187 1 9 5 351 1 271 1 282 1 259 2 361 2 306 2 244 2 245 5 182 2 57 1 150 1 311 1 
73 1 153 1 
183 1 171 2 337 2 339 1 102 1 257 2 73 2 196 1 238 1 
105 1 207 1 379 1 
201 1 97 1 354 1 203 1 171 1 185 1 299 1 70 1 5 1 189 1 73 1 257 1 77 1 78 1 94 1 136 1 
73 1 257 3 21 1 183 1 171 3 337 3 196 3 238 3 
356 1 257 1 171 1 235 1 337 1 196 1 238 1 
356 1 257 1 183 1 171 1 337 1 196 1 238 1 339 1 102 1 
354 1 356 1 201 1 286 2 203 1 171 4 226 1 337 3 5 1 339 1 269 1 360 1 9 1 10 1 232 1 94 1 292 1 236 1 136 1 238 3 365 1 97 1 367 1 63 1 183 2 185 1 217 1 216 1 299 1 70 1 302 1 189 1 73 1 257 4 143 1 21 1 192 1 193 1 191 1 23 1 78 1 196 3 245 1 149 1 
356 1 171 2 337 2 257 2 73 1 21 1 254 1 169 1 234 1 196 1 238 1 
356 1 183 1 171 3 217 1 337 3 339 1 269 1 143 1 257 3 9 1 21 2 157 1 292 1 236 1 196 3 245 1 238 3 57 1 149 1 
257 2 21 1 183 1 171 2 105 1 337 2 196 2 238 2 207 1 339 1 
201 1 97 1 354 1 203 1 171 1 185 1 299 1 70 1 5 1 189 1 73 1 257 1 78 1 94 1 136 1 
201 1 354 1 203 1 171 1 185 1 299 1 70 1 189 1 73 1 257 1 78 1 94 1 331 1 136 1 119 1 
26 1 286 2 226 2 129 1 207 2 87 1 365 1 13 2 367 1 319 1 17 1 297 1 186 1 302 1 144 1 193 1 191 1 192 4 280 1 105 2 23 1 148 1 83 1 379 2 
356 1 257 1 171 1 374 1 236 1 337 1 196 1 238 1 
354 1 201 1 97 1 203 1 171 2 185 1 299 1 337 1 70 1 5 1 207 1 189 1 143 1 257 2 21 1 94 1 78 1 196 1 136 1 238 1 
356 1 151 1 183 1 171 5 327 1 337 5 339 1 143 1 257 5 73 1 21 2 254 1 234 1 169 1 196 4 238 4 
356 1 257 2 171 2 374 1 235 1 337 2 196 2 238 2 
322 1 45 1 
322 1 45 1 
53 1 375 1 
53 1 375 1 
53 1 375 1 
322 1 45 1 328 1 
16 1 322 1 45 1 
53 1 322 2 336 1 375 1 45 2 140 1 
322 1 45 1 328 1 
322 1 45 1 328 1 
322 1 45 1 366 1 
322 1 45 1 366 1 
322 1 45 1 366 1 
170 1 322 2 255 2 140 1 228 1 229 1 188 2 9 2 194 1 304 2 45 2 376 1 237 2 245 2 246 1 79 2 212 3 57 1 199 1 
107 1 171 2 337 2 175 1 9 1 179 1 237 1 238 2 212 1 16 1 322 1 67 1 163 1 71 1 188 1 73 1 257 2 124 1 304 1 45 1 196 2 245 1 246 1 79 1 
76 1 340 1 224 1 
347 1 76 1 224 1 
347 1 75 1 340 2 81 1 224 3 318 1 
347 1 75 1 340 1 224 2 318 1 142 1 
347 1 75 2 340 1 224 2 318 1 
355 1 262 1 30 1 206 1 208 1 175 1 9 5 179 1 92 2 361 1 181 1 182 1 294 1 57 2 319 1 345 1 18 3 121 2 163 1 187 1 190 3 74 2 280 1 259 4 244 1 306 1 197 1 245 5 285 2 148 1 150 1 83 1 
262 1 206 2 208 3 9 9 361 2 181 2 96 1 182 6 57 5 319 3 345 1 161 5 18 8 43 1 184 1 121 6 163 4 122 5 300 1 219 1 187 1 190 9 74 6 258 1 351 1 280 3 259 7 306 2 244 2 197 3 245 9 285 6 148 3 150 1 83 3 
355 1 206 1 208 2 9 3 92 1 361 1 181 1 294 1 57 3 319 1 18 3 121 2 163 1 190 4 74 2 351 1 280 1 259 2 244 1 306 1 245 3 197 1 285 2 148 1 150 1 83 1 
355 1 206 1 208 3 9 4 92 2 361 1 181 1 96 1 294 1 57 4 319 2 18 5 121 4 163 2 300 1 190 7 74 4 258 1 351 1 280 2 259 3 244 1 306 1 245 4 197 2 285 4 148 2 150 1 83 2 
1 1 153 1 136 1 
27 1 136 1 
128 1 
70 1 136 1 
1 2 204 1 185 1 240 1 70 1 136 3 
185 1 70 1 136 1 
110 1 136 1 
13 4 297 2 226 3 129 3 325 1 266 1 348 1 154 1 44 1 155 1 278 1 305 1 192 7 280 1 281 2 310 1 83 1 
13 4 297 2 226 3 129 3 325 1 266 1 348 1 154 1 44 1 155 1 278 1 305 1 192 7 280 1 281 2 310 1 83 1 
13 4 297 2 226 3 129 3 325 1 266 1 348 1 154 1 44 1 155 1 278 1 305 1 192 7 280 1 281 2 248 1 310 1 83 1 
286 2 287 1 226 15 129 10 266 1 154 1 155 2 7 1 133 1 231 1 365 1 13 16 367 1 319 3 320 1 297 5 323 1 325 2 348 2 349 3 44 1 278 5 193 1 192 31 305 2 280 4 281 3 23 1 24 1 127 4 197 3 148 3 310 1 83 4 
13 5 367 2 286 4 287 1 297 3 325 1 129 4 226 4 266 1 348 1 154 1 155 1 278 1 210 1 305 1 192 9 193 2 280 1 281 2 23 2 135 1 310 1 365 2 83 1 
201 1 47 1 263 1 37 1 91 1 233 1 117 1 317 1 93 1 94 1 340 1 118 1 295 1 347 1 326 1 299 1 69 1 189 1 279 1 125 2 104 1 126 1 76 1 78 1 307 2 81 1 224 2 82 1 334 1 106 1 
201 1 47 1 263 1 29 1 37 1 91 1 233 1 90 1 117 1 317 1 93 1 94 1 340 1 118 1 347 1 299 1 189 1 125 3 279 2 104 1 126 1 241 1 76 1 78 1 81 1 307 3 224 2 82 1 334 1 106 1 
201 1 47 1 37 1 91 1 233 1 90 1 117 1 93 1 94 1 118 1 340 1 347 1 299 1 189 1 125 2 279 2 126 1 241 1 76 1 78 1 307 2 81 1 224 2 334 1 106 1 
201 1 263 1 108 1 203 1 29 1 299 1 70 1 34 1 189 1 177 1 371 1 125 1 233 2 117 2 94 1 291 1 39 1 78 1 136 1 118 2 307 1 82 1 106 2 
201 1 263 1 37 1 233 1 117 1 317 1 94 1 340 1 118 1 295 1 347 1 299 1 69 1 189 1 125 1 104 1 126 1 241 1 76 1 78 1 307 1 81 1 224 2 82 1 334 1 106 1 
272 1 
201 2 108 1 203 2 109 2 337 1 206 1 208 2 52 1 9 5 254 1 290 1 291 1 292 1 341 1 57 2 59 1 58 1 120 1 344 2 18 2 215 1 121 2 299 1 70 1 257 1 78 2 306 1 25 1 80 2 352 2 356 1 262 1 171 1 172 4 267 1 269 1 180 1 361 1 95 2 94 1 236 1 182 6 136 1 98 1 187 3 189 2 190 2 244 1 283 1 284 2 332 1 245 5 378 2 150 1 149 1 
356 1 171 1 172 2 337 1 269 1 52 1 9 3 254 1 290 1 292 1 236 1 182 2 341 1 58 1 120 1 98 1 187 1 257 1 372 1 245 3 378 1 149 1 
120 1 356 1 98 1 171 1 172 3 337 1 269 1 52 1 257 1 9 2 254 1 290 1 236 1 292 1 284 1 245 2 341 1 149 1 58 1 
356 1 171 1 109 1 172 3 337 1 269 1 52 1 9 3 254 1 290 1 292 1 236 1 182 2 341 1 58 1 120 1 98 1 187 1 257 1 372 1 245 3 284 1 378 1 149 1 
109 4 152 1 337 2 208 2 52 1 9 5 254 1 290 1 11 1 292 1 341 1 57 2 58 1 120 1 344 2 215 1 18 1 121 1 68 1 257 2 303 1 306 1 352 2 80 2 356 2 262 1 171 2 172 5 269 1 360 1 235 1 361 1 180 1 236 1 95 2 238 1 182 7 98 1 183 1 324 1 187 3 372 1 243 1 196 1 244 1 245 5 284 3 378 4 150 2 149 1 250 1 
109 2 337 1 208 2 52 1 9 4 254 1 290 1 292 1 341 1 58 1 57 2 120 1 344 2 215 1 18 1 121 1 257 1 306 1 352 2 80 2 356 1 262 1 171 1 172 4 269 1 361 1 180 1 236 1 95 2 182 4 98 1 187 2 190 2 244 1 245 4 284 2 283 1 378 2 149 1 150 1 
356 1 262 1 109 2 171 1 172 4 337 1 208 2 269 1 52 1 9 4 254 1 290 1 180 1 361 1 11 1 95 2 292 1 236 1 182 4 341 1 57 1 58 1 120 1 344 2 98 1 18 1 215 1 324 1 121 1 68 1 187 2 257 1 306 1 244 1 284 2 245 4 378 2 80 2 352 2 150 1 149 1 
356 1 262 1 109 2 171 1 172 4 337 1 208 2 269 1 52 1 9 4 254 1 290 1 180 1 361 1 11 1 95 2 292 1 236 1 182 4 341 1 57 1 58 1 120 1 344 2 98 1 18 1 215 1 324 1 121 1 68 1 187 2 257 1 306 1 244 1 284 2 245 4 378 2 80 2 352 2 150 1 149 1 
356 1 262 1 109 2 171 1 172 4 337 1 111 1 269 1 52 1 9 4 254 1 290 1 180 1 361 1 95 2 292 1 236 1 182 4 341 1 57 1 58 1 214 2 120 1 98 1 18 1 324 1 121 1 187 2 141 1 20 2 190 2 257 1 306 1 244 1 284 2 245 4 378 2 352 2 147 1 150 1 149 1 
356 1 262 1 171 1 109 3 172 5 337 1 208 2 269 1 52 1 9 4 254 1 290 1 180 1 361 1 11 1 95 2 292 1 236 1 182 5 341 1 57 1 58 1 120 1 344 2 98 1 18 1 215 1 324 1 121 1 68 1 187 2 257 1 303 1 244 1 306 1 245 4 284 3 80 2 352 2 378 3 150 1 149 1 
356 1 262 1 171 1 109 3 172 5 337 1 208 2 269 1 52 1 9 4 254 1 290 1 180 1 361 1 11 1 95 2 292 1 236 1 182 5 341 1 57 1 58 1 120 1 344 2 98 1 18 1 215 1 324 1 121 1 68 1 187 2 257 1 303 1 244 1 306 1 245 4 284 3 80 2 352 2 378 3 150 1 149 1 
109 2 337 1 111 1 52 1 9 4 254 1 290 1 292 1 341 1 58 1 57 1 120 1 214 2 18 1 121 1 20 2 257 1 306 1 352 2 356 1 262 1 171 1 172 4 269 1 361 1 180 1 236 1 95 2 182 4 98 1 187 2 190 2 244 1 245 4 284 2 283 1 378 2 149 1 150 1 
286 2 153 1 129 2 226 3 266 1 154 1 207 1 365 1 13 3 367 1 297 2 325 1 348 1 302 1 73 2 144 1 193 1 191 1 192 6 105 1 280 1 281 1 23 1 310 1 83 1 379 1 
286 4 84 1 129 2 226 6 207 11 7 1 156 1 10 1 38 1 365 2 13 8 273 1 367 2 319 2 321 1 320 1 297 1 349 3 123 1 302 2 73 1 278 1 193 2 191 1 192 14 280 2 105 4 23 2 127 3 197 2 148 1 379 11 83 1 
354 1 201 1 203 1 286 2 171 2 28 1 226 1 265 1 337 1 5 1 156 1 10 1 94 1 136 1 238 1 365 1 97 1 13 1 367 1 273 1 42 1 185 1 299 1 70 1 302 1 189 1 73 1 257 2 143 1 21 1 191 1 193 1 192 2 105 1 77 1 23 1 78 1 196 1 
201 1 286 2 203 1 171 1 226 1 337 1 209 1 156 1 10 1 238 1 365 1 367 1 302 1 189 1 257 1 143 1 21 1 192 1 191 1 193 1 23 1 78 1 196 1 
201 8 203 2 286 4 108 1 171 1 3 1 226 1 337 1 113 1 10 1 94 2 291 1 362 1 238 1 136 3 365 2 13 1 367 2 273 1 62 1 162 1 326 1 299 2 70 2 302 2 189 7 165 1 257 1 21 1 144 1 193 2 191 2 192 2 241 1 222 2 23 2 377 1 78 8 196 1 
225 1 286 2 171 1 129 1 226 2 337 1 207 1 339 1 156 1 238 1 365 1 13 1 367 1 319 1 183 1 297 1 302 1 257 1 193 1 191 1 192 3 105 1 280 1 23 1 196 1 197 1 148 1 379 1 83 1 
13 2 367 1 319 1 286 2 129 1 207 1 87 1 302 1 278 1 144 1 192 2 191 1 193 1 105 1 280 1 23 1 365 1 379 1 
367 1 26 1 286 2 297 1 129 1 226 2 207 1 302 1 144 1 192 2 191 1 193 1 105 1 23 1 148 1 365 1 379 1 83 1 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 207 2 302 1 278 1 144 1 192 4 191 1 193 1 105 2 280 1 23 1 197 1 148 1 365 1 83 1 379 2 
13 2 367 1 319 1 286 2 129 1 207 1 87 1 302 1 165 1 278 1 192 2 191 1 193 1 105 1 280 1 23 1 365 1 379 1 
367 1 26 1 286 2 297 1 129 1 226 2 207 1 302 1 165 1 192 2 191 1 193 1 105 1 23 1 148 1 365 1 379 1 83 1 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 207 2 302 1 165 1 278 1 192 4 191 1 193 1 105 2 280 1 23 1 197 1 148 1 365 1 83 1 379 2 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 207 2 302 1 278 1 191 1 193 1 192 4 105 2 280 1 23 1 197 1 148 1 365 1 83 1 379 2 
354 1 201 1 203 1 286 2 171 1 226 1 5 1 10 1 94 1 136 1 365 1 13 1 97 1 273 1 367 1 63 1 185 1 299 1 70 1 302 1 189 1 73 1 257 1 192 2 191 1 193 1 23 1 78 1 
354 1 201 1 203 1 286 2 171 1 226 1 10 1 94 1 136 1 119 1 365 1 13 1 273 1 367 1 41 1 185 1 299 1 70 1 302 1 189 1 73 1 257 1 192 2 191 1 193 1 23 1 78 1 331 1 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 207 2 302 1 156 1 278 1 192 4 191 1 193 1 105 2 280 1 23 1 197 1 148 1 365 1 83 1 379 2 
354 1 201 1 286 2 171 1 226 2 129 2 5 1 207 2 131 1 94 1 136 1 365 1 13 2 97 1 319 1 367 1 63 1 297 1 185 1 326 1 299 1 70 1 302 1 189 1 257 1 278 1 192 4 191 1 193 1 105 2 280 1 23 1 78 1 197 1 148 1 83 1 379 2 
286 2 171 1 226 1 129 1 337 1 339 1 207 1 156 1 238 1 365 1 13 2 367 1 319 1 275 1 183 1 302 1 257 1 278 1 193 1 191 1 192 3 280 1 105 1 23 1 196 1 197 1 148 1 83 1 379 1 
286 4 226 10 129 6 268 1 33 2 7 1 114 1 253 1 210 1 36 1 365 2 13 9 367 2 319 3 320 1 297 3 276 1 19 1 349 1 278 3 373 2 193 2 192 19 280 3 23 2 145 1 127 2 197 3 148 3 83 3 
251 1 286 6 287 2 129 4 226 12 86 1 33 4 7 2 114 2 210 1 36 2 365 3 13 14 367 3 319 3 15 1 297 2 276 1 19 1 100 1 349 2 278 2 277 1 373 1 193 3 192 26 280 3 221 1 23 3 145 1 127 2 197 3 148 2 83 2 
251 1 286 6 287 1 226 21 129 8 266 1 86 1 154 1 268 1 33 4 7 3 114 2 210 1 36 1 365 3 13 20 367 3 319 4 15 1 320 1 297 4 325 1 276 1 100 1 19 1 348 1 349 3 103 1 277 1 278 4 373 1 193 3 192 41 280 5 281 1 221 1 23 3 145 1 127 4 197 4 148 4 310 1 83 5 
251 1 286 8 287 2 226 18 129 7 266 1 86 1 154 1 268 1 33 4 7 3 114 2 210 1 36 1 365 4 13 20 367 4 319 4 15 1 320 1 297 4 325 1 276 1 100 1 19 1 348 1 349 3 103 1 277 1 278 3 373 1 193 4 192 38 280 5 281 1 221 1 23 4 145 1 127 4 197 4 148 3 310 1 83 4 
251 1 286 4 287 1 226 25 129 14 266 1 86 1 154 1 33 4 7 2 114 1 210 1 36 1 365 2 13 27 367 2 319 7 15 1 321 2 320 2 297 7 325 1 276 1 100 1 19 1 348 1 349 4 277 1 278 7 373 1 193 2 192 52 280 8 281 1 221 1 23 2 145 1 127 4 197 7 148 7 310 1 83 8 
170 1 264 1 322 1 304 1 45 1 376 1 140 1 237 1 79 1 188 1 
124 1 16 1 
322 1 304 1 45 1 205 1 237 1 223 1 79 1 60 1 188 1 
170 1 322 1 255 1 140 1 228 1 188 1 9 1 194 1 304 1 45 1 376 1 237 1 246 1 245 1 79 1 212 2 57 1 199 1 
170 1 322 1 255 1 140 1 228 1 188 1 9 1 194 1 304 1 45 1 376 1 237 1 246 1 245 1 79 1 212 2 57 1 199 1 
170 1 322 1 255 1 140 1 228 1 188 1 9 1 194 1 304 1 45 1 376 1 237 1 246 1 245 1 79 1 212 2 57 1 199 1 
336 1 50 1 328 1 
336 1 50 1 328 1 
353 1 366 1 
336 1 353 1 366 1 
107 1 71 1 
107 1 171 2 228 1 337 2 175 1 9 1 179 1 237 1 238 2 212 1 16 1 322 1 368 1 255 1 67 1 163 1 71 1 188 1 73 1 257 2 124 1 304 1 259 1 45 1 196 2 245 1 79 1 
50 1 328 1 
336 1 353 1 366 1 
201 2 286 2 171 2 312 1 226 1 337 2 174 1 113 1 156 1 10 1 94 1 12 1 136 1 365 1 13 1 367 1 273 1 299 1 70 1 302 1 220 1 189 2 257 2 191 1 193 1 192 2 222 2 23 1 377 1 78 2 330 1 
201 2 347 1 326 1 299 1 189 2 115 1 104 1 126 1 89 1 241 1 76 1 260 1 117 1 94 1 78 2 340 1 81 1 224 2 334 1 
201 1 347 1 299 1 189 1 115 1 104 1 126 1 241 1 76 1 117 1 78 1 94 1 340 1 81 1 309 1 224 2 334 1 
201 1 203 1 108 1 299 1 70 1 189 1 371 1 260 1 117 1 94 1 78 1 291 1 136 1 137 1 
201 1 347 1 299 1 189 1 115 1 104 1 126 1 89 1 241 1 76 1 260 1 117 1 78 1 94 1 340 1 81 1 224 2 334 1 
2 1 
18 1 153 1 271 1 121 1 282 1 57 1 150 1 
262 1 208 1 9 1 361 1 182 1 57 2 344 1 18 1 215 1 121 1 187 1 190 1 244 1 306 1 245 1 80 1 150 1 
201 3 1 2 203 1 204 1 110 2 4 2 206 2 6 2 208 6 9 5 59 1 61 1 57 8 18 9 64 1 66 1 121 8 299 4 218 2 70 3 350 2 74 6 78 3 306 4 83 2 262 4 27 3 31 2 359 2 269 2 178 2 271 1 361 4 94 3 136 10 182 5 364 1 319 2 274 2 326 1 185 3 369 2 187 3 189 3 190 12 242 1 280 2 282 1 244 4 245 5 197 2 285 6 148 2 150 2 
262 2 4 1 86 1 206 1 208 3 7 1 9 1 361 2 182 1 59 1 57 5 319 2 15 1 18 8 298 1 121 5 218 2 100 1 349 1 187 1 190 6 166 1 277 1 74 5 280 2 221 1 244 2 306 2 245 1 127 1 197 2 285 5 148 2 150 2 83 2 
356 1 262 1 171 1 152 1 4 1 266 1 337 1 360 1 9 1 235 1 361 1 238 1 18 2 183 1 325 1 121 2 68 1 218 2 348 1 256 1 257 1 280 2 244 1 306 1 196 1 245 1 83 1 250 1 
262 1 18 1 121 1 271 1 361 1 282 1 306 1 244 1 150 1 57 1 
319 2 18 5 121 5 4 1 369 1 218 2 208 5 190 10 74 5 280 2 197 2 285 5 148 2 57 5 83 2 
9 1 245 1 182 1 187 1 57 1 150 1 
201 4 262 1 203 2 108 1 206 2 9 3 361 2 94 1 291 1 293 1 136 1 182 4 59 2 18 2 64 1 121 2 299 1 70 1 187 2 189 4 329 1 242 2 351 1 78 4 25 1 244 2 306 2 332 1 245 3 
201 1 354 1 286 2 203 1 171 3 226 1 337 2 5 1 360 1 10 1 232 1 94 1 238 2 136 1 365 1 97 1 367 1 63 1 183 2 185 1 299 1 70 1 302 1 189 1 73 1 257 3 192 1 193 1 191 1 23 1 78 1 196 2 
262 1 18 1 121 2 206 1 208 2 190 4 74 2 281 1 361 1 306 1 244 1 285 2 150 2 57 4 59 1 
40 1 79 1 188 1 
65 1 376 1 71 1 79 1 188 1 
40 1 79 1 188 1 
40 1 79 1 188 1 
79 1 101 1 188 1 
79 1 101 1 188 1 
79 1 101 1 188 1 
79 1 188 1 
322 1 45 1 
13 4 367 2 286 4 287 1 297 2 226 4 129 3 325 1 266 1 348 1 154 1 278 1 192 8 193 2 280 1 281 1 23 2 365 2 310 1 83 1 
13 3 153 1 297 2 226 3 325 1 129 2 266 1 348 1 154 1 192 6 280 1 281 1 310 1 83 1 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 278 1 193 1 192 4 280 1 23 1 197 1 148 1 363 1 365 1 83 1 
13 3 319 1 320 1 297 1 226 4 129 2 349 1 7 1 278 1 192 7 280 1 127 2 197 1 148 1 83 1 
286 4 287 2 129 9 226 12 313 1 266 1 154 1 38 1 365 2 13 11 319 2 367 2 320 1 321 1 297 5 325 2 348 2 349 2 278 4 192 23 193 2 280 3 281 1 23 2 197 2 127 2 148 2 310 1 83 3 
192 1 226 1 127 1 
13 1 192 1 349 1 
13 3 367 1 319 1 286 2 297 2 226 3 129 3 369 1 278 1 193 1 192 6 280 1 23 1 197 1 363 1 148 1 365 1 83 1 
286 2 226 6 129 2 86 1 7 1 210 1 365 1 13 6 367 1 319 2 15 1 297 1 100 1 349 1 278 1 277 1 192 12 193 1 280 2 221 1 23 1 127 1 197 2 148 2 83 2 
13 3 297 1 226 3 325 1 129 2 266 1 348 1 278 1 192 6 280 1 83 1 
13 1 367 1 286 2 287 1 297 1 129 2 325 1 313 1 226 2 348 1 154 1 278 1 192 3 193 1 23 1 365 1 310 1 
13 5 367 1 286 2 297 3 325 2 129 5 226 5 266 1 348 2 256 1 278 2 210 1 193 1 192 10 280 2 23 1 365 1 83 2 
13 2 367 1 319 1 286 2 129 1 278 1 210 1 193 1 192 2 280 1 23 1 365 1 
13 2 367 1 319 1 286 2 297 1 226 2 129 2 278 1 210 1 193 1 192 4 280 1 23 1 197 1 148 1 365 1 83 1 
13 1 367 3 286 6 287 1 297 1 313 1 226 2 325 1 129 2 348 1 268 1 278 1 210 1 192 3 193 3 23 3 365 3 
286 10 287 2 313 1 226 18 129 12 266 2 154 1 268 1 7 1 133 1 210 1 363 1 365 5 13 16 367 5 319 3 320 1 323 1 297 7 325 3 348 3 349 3 278 5 193 5 192 34 280 5 281 1 24 1 23 5 127 4 197 3 148 3 310 1 83 5 
286 2 226 4 129 2 266 1 154 1 7 1 210 1 365 1 13 4 367 1 297 2 325 1 349 1 348 1 192 8 193 1 280 1 281 1 221 1 23 1 127 1 310 1 83 1 
286 4 226 5 129 3 266 1 154 1 7 1 210 1 363 1 365 2 13 6 367 2 319 1 320 1 297 2 325 1 348 1 349 1 278 1 192 11 193 2 280 2 281 1 221 1 23 2 127 2 197 1 310 1 83 1 
286 6 287 1 226 10 129 4 266 1 86 1 154 1 7 1 210 1 363 1 365 3 13 9 367 3 319 2 15 1 297 3 325 1 100 1 348 1 349 1 278 1 277 1 192 19 193 3 280 3 281 1 221 1 23 3 127 1 197 2 148 2 310 1 83 3 
286 6 287 1 226 7 129 5 266 1 86 1 154 1 7 1 210 1 363 1 365 3 13 10 367 3 319 2 15 1 297 3 325 1 100 1 348 1 349 1 278 2 277 1 192 17 193 3 280 3 281 1 221 1 23 3 127 1 197 2 148 1 310 1 83 2 
286 2 226 4 129 2 266 1 154 1 7 1 210 1 365 1 13 4 367 1 297 2 325 1 349 1 348 1 192 8 193 1 280 1 281 1 221 1 23 1 127 1 310 1 83 1 
286 2 226 6 129 2 86 1 7 1 210 1 365 1 13 6 367 1 319 2 15 1 297 1 100 1 349 1 278 1 277 1 192 12 193 1 280 2 221 1 23 1 127 1 197 2 148 2 83 2 
286 8 287 2 226 8 129 5 266 1 86 1 154 1 7 1 210 1 363 1 365 4 13 10 367 4 319 2 15 1 297 3 325 1 100 1 348 1 349 1 278 2 277 1 192 18 193 4 280 3 281 1 221 1 23 4 127 1 197 2 148 1 310 1 83 2 
286 8 287 2 226 7 129 6 86 1 268 1 7 1 210 1 365 4 13 9 367 4 319 3 15 1 297 3 100 1 349 1 278 3 277 1 192 16 193 4 280 3 221 1 23 4 127 1 197 3 148 2 83 2 
13 3 297 3 226 4 325 3 129 6 266 1 348 3 154 2 278 3 192 7 280 1 310 1 83 1 
286 8 287 2 226 8 129 4 266 1 86 1 154 1 268 1 7 1 210 1 365 4 13 10 367 4 319 2 15 1 297 3 325 1 100 1 348 1 349 1 278 1 277 1 192 18 193 4 280 3 281 1 221 1 23 4 127 1 197 2 148 1 310 1 83 2 
356 1 171 1 337 1 257 1 73 1 132 1 254 1 234 1 169 1 
159 1 132 1 168 1 333 1 247 1 164 1 
201 1 108 1 203 1 153 1 299 1 94 1 291 1 78 1 70 1 136 1 189 1 
354 1 201 1 203 1 171 2 185 1 299 1 337 1 70 1 5 1 189 1 73 1 257 2 21 1 78 1 94 1 196 1 136 1 238 1 
201 1 354 1 356 1 171 2 110 1 337 2 5 1 178 1 94 1 236 1 238 2 136 3 185 2 299 1 70 2 189 1 73 1 257 2 21 1 242 1 78 1 196 1 149 1 
201 2 354 1 356 1 171 2 110 1 337 2 178 1 94 1 236 1 238 2 136 3 119 1 185 2 299 1 70 2 189 2 73 1 257 2 21 1 242 1 78 2 196 1 249 1 149 1 
356 1 201 1 1 1 252 1 27 1 171 1 152 1 337 1 269 1 360 1 9 2 235 1 182 1 136 2 238 1 57 1 183 1 189 1 257 1 242 1 78 1 196 1 245 2 150 1 250 1 
201 3 1 1 203 1 27 1 110 1 185 1 299 1 70 1 269 1 359 1 189 3 9 2 178 1 242 1 78 3 94 1 245 2 136 4 182 1 249 1 57 1 150 1 
201 1 162 1 299 1 94 1 78 1 189 1 
201 7 62 1 203 2 162 1 204 1 3 1 99 1 326 1 185 1 299 3 70 2 32 1 189 6 241 1 222 1 377 1 78 7 94 2 362 1 136 3 342 1 
201 1 286 4 337 1 5 1 154 1 207 1 156 1 13 3 63 1 297 2 299 1 70 1 348 1 302 2 257 2 73 2 21 1 23 2 78 1 310 1 83 1 354 1 171 2 312 1 129 2 226 3 266 1 131 1 134 1 94 1 238 1 136 1 365 2 97 1 367 2 326 1 185 1 325 1 189 1 193 2 191 2 192 6 105 1 280 1 281 1 196 1 379 1 
201 1 262 2 1 1 203 1 27 1 31 1 6 1 359 1 269 1 9 3 271 1 361 2 136 2 182 2 57 1 18 1 64 1 121 1 350 1 187 1 189 1 282 1 259 1 78 1 244 2 306 2 245 3 150 1 
201 2 1 1 162 1 204 1 326 1 185 1 299 2 70 1 189 2 78 2 94 1 136 2 61 1 
201 4 203 1 108 1 326 1 299 1 70 1 189 4 315 1 78 4 291 1 94 1 136 1 249 1 
201 2 99 1 85 1 185 1 299 2 70 1 189 2 72 1 242 1 78 2 94 1 54 1 136 1 342 1 
201 1 347 1 203 1 126 1 76 1 299 1 94 1 78 1 224 1 189 1 
201 2 326 1 299 1 70 1 189 2 220 1 241 1 78 2 377 1 94 1 136 1 
201 5 62 1 108 1 203 1 3 1 326 1 299 2 70 2 189 4 315 1 242 1 291 1 78 5 377 1 94 2 136 3 
201 5 62 1 108 1 203 1 326 1 299 2 70 2 189 4 315 1 242 1 291 1 78 5 377 1 94 2 146 1 136 3 
354 1 201 1 203 1 171 2 185 1 299 1 337 1 70 1 189 1 73 1 257 2 21 1 78 1 94 1 196 1 136 1 238 1 119 1 
201 1 204 1 99 1 185 1 299 2 70 1 32 1 189 1 242 1 78 1 94 1 136 1 342 1 
160 1 171 1 174 1 337 1 51 1 167 1 257 1 330 1 12 1 
51 1 112 1 200 1 
73 1 167 1 160 1 48 1 51 1 
356 1 343 1 160 2 48 2 217 1 51 1 112 1 269 1 73 1 167 2 9 2 259 1 236 1 292 1 245 2 57 1 150 1 149 1 200 1 
47 1 153 1 91 1 93 1 
47 1 263 1 125 1 91 1 93 1 307 1 82 1 
125 1 118 1 106 1 
263 1 47 1 295 1 227 1 357 1 88 1 125 3 91 1 93 1 307 3 308 2 82 1 
47 1 263 1 279 1 125 2 35 1 91 1 93 1 307 2 82 1 
263 1 125 1 295 1 91 1 195 1 76 1 340 1 198 1 307 1 224 1 82 1 
263 1 125 1 295 1 91 1 93 1 307 1 82 1 
47 1 263 1 125 1 295 1 93 2 307 1 82 1 
263 2 295 1 125 2 91 1 316 1 93 1 307 2 213 1 158 1 82 2 
46 1 47 1 263 1 295 1 130 1 125 3 279 2 211 1 91 2 93 1 307 3 198 1 82 1 
47 1 263 1 347 1 295 1 173 1 125 2 279 1 91 1 76 1 93 1 307 2 81 1 340 1 224 2 82 1 
47 1 263 2 295 1 176 1 125 4 279 2 35 1 211 1 91 2 93 1 307 4 198 1 82 2 
47 1 263 1 125 1 295 1 91 1 93 1 307 1 82 1 
47 2 263 1 227 1 357 1 8 1 279 2 125 4 211 1 91 3 93 2 308 1 307 4 198 1 82 1 
261 1 47 1 263 1 279 1 125 2 295 1 139 1 91 1 288 1 93 1 307 2 82 1 
263 1 47 1 295 1 49 1 227 1 357 2 125 3 91 1 93 1 307 3 308 2 82 1 
314 1 346 1 91 2 301 2 
263 1 125 1 295 1 307 1 358 1 82 1 
46 1 47 1 263 1 279 1 125 2 295 1 91 1 93 1 307 2 82 1 
289 1 
47 1 263 1 125 1 295 1 91 1 93 1 307 1 82 1 
46 1 263 1 47 1 295 1 279 1 125 3 91 1 93 1 307 3 308 1 82 1 
8 1 211 1 91 1 198 1 
91 1 93 1 

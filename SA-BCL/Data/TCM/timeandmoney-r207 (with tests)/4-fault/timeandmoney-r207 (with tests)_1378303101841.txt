#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 222 1 3 2 278 1 161 2 249 2 6 2 361 9 287 1 7 5 204 1 233 1 147 9 69 2 103 1 16 4 294 6 329 1 45 1 180 1 20 2 127 1 88 1 351 3 352 1 214 1 240 1 52 2 
194 1 222 1 3 2 278 1 161 2 249 2 361 9 6 2 287 1 7 5 204 1 233 1 147 9 69 2 103 1 16 4 294 6 329 1 45 1 180 1 20 2 127 1 88 1 351 3 352 1 214 1 240 1 52 2 
194 1 222 1 3 2 278 1 161 2 249 2 361 10 6 2 287 1 7 6 204 1 233 1 147 10 69 2 103 1 16 5 294 7 329 1 45 1 180 1 20 2 127 1 88 1 351 4 352 1 214 1 240 1 52 2 
194 1 3 2 278 1 161 2 249 2 361 7 6 1 287 1 7 4 204 1 233 1 147 7 69 2 103 1 16 3 294 4 329 1 45 1 180 1 20 2 127 1 88 1 351 2 352 1 214 1 240 1 52 2 
147 4 194 1 222 1 294 3 16 2 3 1 278 1 161 1 127 1 20 1 249 1 361 4 6 2 351 1 287 1 7 3 204 1 52 1 
353 1 147 2 69 1 194 1 3 1 278 1 161 1 303 1 97 1 249 1 361 2 88 1 7 1 287 1 240 1 52 1 
361 3 147 3 69 1 194 1 294 1 7 2 16 1 351 1 287 1 3 2 278 1 45 1 249 2 
147 9 69 1 194 1 222 1 294 7 16 4 3 2 79 1 278 1 45 1 161 1 180 1 20 1 127 1 249 2 6 2 361 9 7 5 287 1 351 3 204 1 352 1 230 1 52 1 
147 9 69 1 194 1 222 1 294 7 16 4 3 2 79 1 278 1 45 1 161 1 180 1 20 1 127 1 249 2 6 2 361 9 7 5 287 1 351 3 204 1 352 1 230 1 52 1 
170 1 44 1 295 1 
44 1 245 1 40 2 
211 2 316 1 264 2 314 2 14 2 259 1 66 2 32 2 
190 1 275 1 355 1 160 1 30 2 140 2 32 2 250 2 164 1 362 1 229 1 102 2 62 1 326 1 65 1 232 1 66 3 328 1 234 1 292 1 257 1 14 2 372 1 259 1 126 1 128 1 262 2 349 1 211 2 316 1 264 3 314 2 377 1 212 1 92 1 186 1 131 1 
211 1 264 1 314 1 14 1 130 1 279 1 259 1 299 1 66 1 32 1 
44 1 176 1 295 1 223 1 197 1 47 1 108 1 202 1 314 1 264 1 109 1 50 1 299 1 66 1 
44 1 14 1 295 1 223 1 47 2 197 1 32 1 108 1 211 1 202 1 314 1 264 1 109 2 299 1 66 1 
173 1 109 1 111 1 74 1 47 1 
173 1 36 1 109 2 44 1 366 1 111 1 295 1 47 2 
109 1 111 1 47 1 
173 1 14 1 279 1 259 1 47 1 225 1 32 1 211 1 109 1 314 1 264 1 130 1 299 1 66 1 
44 1 
173 1 36 1 109 2 44 1 153 1 111 1 295 1 47 2 
321 1 173 2 13 2 310 1 44 1 295 1 60 1 47 5 31 1 33 1 304 2 313 1 34 1 36 1 109 5 51 1 288 2 111 2 270 1 
190 1 292 1 14 1 177 1 126 1 30 1 32 1 250 1 164 1 362 1 314 1 264 2 102 1 39 1 92 1 186 1 65 1 66 2 328 1 271 1 
170 1 316 1 
211 1 56 1 316 2 264 2 314 2 14 1 66 2 32 1 181 1 
188 1 120 1 177 1 
190 1 273 1 292 1 30 1 126 1 250 1 164 1 362 1 316 1 264 1 102 1 92 1 65 1 186 1 66 1 328 1 
14 4 176 1 19 1 260 1 32 4 181 1 211 1 314 5 264 5 316 1 39 1 369 1 66 5 271 2 
264 2 314 2 14 2 279 1 299 1 10 1 66 2 32 2 
211 1 316 1 264 3 314 3 14 3 66 3 271 1 32 3 
264 1 314 1 14 1 279 1 299 1 66 1 32 1 
56 1 211 1 264 1 314 1 14 1 299 1 66 1 32 1 181 1 
190 1 275 1 355 1 160 1 223 1 30 1 140 2 197 1 32 3 250 1 164 1 362 1 229 1 202 1 102 1 62 1 324 1 326 1 39 1 65 1 232 1 66 4 328 1 234 1 292 1 14 3 372 1 259 1 126 1 47 1 181 1 262 1 108 1 211 2 316 1 264 4 314 3 109 1 377 1 92 1 186 1 94 1 299 1 271 1 
316 1 264 2 314 2 14 1 176 1 19 1 66 2 32 1 271 1 
44 1 14 3 223 1 47 1 197 1 181 1 32 3 108 1 211 1 202 1 109 1 314 3 264 3 317 1 39 1 94 1 299 1 66 3 271 2 
14 2 177 1 181 1 32 2 211 1 314 2 264 2 120 1 66 2 271 1 
190 1 292 1 30 1 126 1 250 1 164 1 362 1 316 1 264 1 102 1 92 1 65 1 186 1 66 1 328 1 
190 1 292 1 30 1 250 1 362 1 342 1 316 1 264 1 102 1 306 1 92 1 65 1 186 1 66 1 328 1 
188 1 53 1 355 1 234 1 160 1 70 1 179 1 177 1 140 2 374 1 262 2 229 2 285 1 315 1 377 1 120 1 326 1 231 1 232 1 
202 1 264 1 314 1 14 1 299 1 66 1 10 1 32 1 
210 1 146 1 
210 1 146 1 
122 1 215 1 
122 1 215 1 
122 1 215 1 
210 1 146 1 340 1 
210 1 146 1 142 1 
210 2 146 2 49 1 122 1 215 1 169 1 
210 1 146 1 340 1 
210 1 146 1 340 1 
210 1 146 1 9 1 
210 1 146 1 9 1 
210 1 146 1 9 1 
272 1 58 1 356 1 29 1 32 2 82 1 142 1 167 1 368 1 66 2 206 1 172 1 146 1 14 2 17 1 47 1 297 1 210 1 375 1 316 1 109 1 314 2 264 2 319 1 
272 3 189 1 146 2 86 2 291 1 44 1 178 1 360 1 47 2 210 2 297 2 375 1 89 1 49 1 109 2 267 1 167 2 319 2 206 2 
161 1 20 1 52 1 
161 1 97 1 52 1 
158 1 152 1 337 1 161 3 20 2 97 1 
152 1 8 1 337 1 161 2 20 1 97 1 
152 2 337 1 161 2 20 1 97 1 
137 2 245 1 304 1 200 2 251 1 203 1 66 1 13 1 70 1 148 1 14 1 259 1 211 1 109 5 314 1 264 1 315 1 110 2 111 1 270 2 113 1 279 1 29 1 225 1 32 1 363 1 36 1 34 1 288 1 40 3 173 4 44 2 87 1 125 1 295 1 47 5 130 1 51 3 239 1 299 1 
95 2 137 2 245 1 304 1 200 2 251 1 203 1 66 1 13 1 70 1 148 1 14 1 259 1 74 2 211 1 315 1 264 1 314 1 109 5 111 3 270 2 279 1 29 1 225 1 32 1 363 1 36 1 34 1 365 1 288 1 40 3 173 4 44 2 87 1 295 1 47 5 48 1 130 1 51 3 239 1 299 1 
113 1 137 2 245 1 279 1 29 1 225 1 32 1 33 1 304 1 200 2 251 1 363 1 288 1 40 3 66 1 173 2 13 1 70 1 148 1 14 1 44 2 87 1 125 1 259 1 295 1 47 3 211 1 264 1 314 1 315 1 109 3 130 1 51 3 110 1 239 1 299 1 270 2 
137 4 113 1 245 3 29 2 33 1 200 4 304 1 251 2 363 2 40 7 288 1 68 1 13 1 173 3 70 2 148 1 44 4 87 1 125 1 295 1 47 4 315 2 109 4 298 1 51 5 110 2 239 2 217 1 270 4 
170 1 190 1 162 1 
190 1 269 1 
57 1 
190 1 92 1 186 1 
190 1 1 1 
190 1 92 1 
190 3 261 1 92 1 72 1 186 1 162 2 
26 1 70 1 179 3 371 2 348 1 224 1 374 2 61 1 182 1 128 4 262 7 229 3 239 1 308 1 168 1 144 1 300 1 
26 1 70 1 179 3 371 2 348 1 224 1 374 2 61 1 182 1 128 4 262 7 229 3 239 1 308 1 168 1 144 1 300 1 
26 1 70 1 179 3 371 2 348 1 224 1 374 2 61 1 182 1 128 4 226 1 262 7 229 3 239 1 168 1 308 1 144 1 300 1 
135 1 26 5 160 1 359 1 224 2 140 2 61 2 282 3 229 15 251 3 363 3 307 1 168 1 308 1 144 2 232 1 254 1 309 4 70 4 234 1 175 1 179 10 371 3 348 1 374 5 182 1 128 16 262 31 315 3 377 1 239 4 320 1 300 2 134 1 
26 1 160 2 117 1 359 1 224 1 140 4 61 1 229 4 168 1 144 1 232 2 85 1 70 1 234 2 179 4 371 2 348 1 374 3 182 1 128 5 262 9 377 2 239 1 300 1 
158 1 193 1 194 1 28 1 3 1 278 1 358 1 246 1 30 1 161 2 97 1 141 1 250 1 249 1 361 2 102 1 252 1 7 1 287 1 328 1 12 1 147 2 346 1 69 1 292 1 294 1 150 1 20 1 154 1 52 1 
96 1 158 1 193 1 194 1 3 1 278 1 357 1 358 1 4 1 246 1 30 1 161 2 97 1 141 1 250 1 249 1 361 3 102 1 252 1 7 1 328 1 147 3 346 1 69 1 292 1 294 2 150 1 20 1 154 1 52 1 
158 1 193 1 194 1 278 1 357 1 358 1 4 1 30 1 161 2 97 1 141 1 250 1 361 2 102 1 7 1 328 1 147 2 346 1 69 1 292 1 294 2 150 1 20 1 154 1 52 1 
96 1 190 1 147 1 346 2 69 2 292 1 3 1 30 1 150 2 248 1 198 1 249 1 250 1 361 1 76 1 102 1 92 1 205 1 84 1 154 2 65 1 328 1 219 1 
158 1 193 1 28 1 3 1 358 1 4 1 246 1 30 1 161 2 97 1 141 1 250 1 249 1 361 1 102 1 252 1 287 1 328 1 147 1 346 1 69 1 292 1 150 1 20 1 154 1 52 1 
22 1 
190 1 243 2 335 1 336 1 245 2 248 1 197 1 250 2 304 1 202 1 102 2 343 1 65 2 66 1 255 2 256 1 13 1 148 1 311 1 73 1 108 1 109 5 314 1 264 1 111 6 318 2 270 2 219 1 112 2 274 2 276 2 277 1 116 1 223 1 30 2 284 2 36 3 34 1 38 1 40 2 288 1 327 1 328 1 292 1 44 2 176 1 295 1 296 1 373 4 47 5 129 1 50 1 51 2 92 1 299 1 
112 1 277 1 223 1 197 1 202 1 36 1 38 1 327 1 66 1 176 1 296 1 373 2 73 1 47 3 108 1 264 1 314 1 109 3 50 1 153 1 111 2 299 1 
277 1 223 1 197 1 202 1 284 1 36 1 38 1 327 1 66 1 44 1 176 1 295 1 296 1 373 3 73 1 47 3 108 1 264 1 314 1 109 3 50 1 153 1 111 1 299 1 
112 1 277 1 223 1 197 1 202 1 284 1 36 1 38 1 327 1 66 1 44 1 176 1 295 1 296 1 373 3 73 1 47 3 108 1 264 1 314 1 109 3 153 1 50 1 111 2 318 1 299 1 
136 1 243 2 245 2 197 1 304 1 202 1 66 1 255 2 13 1 258 1 73 1 108 1 264 1 109 5 314 1 153 1 111 7 268 1 318 4 216 1 270 1 155 1 112 4 274 2 276 2 277 1 116 1 223 1 284 4 36 3 34 1 38 1 288 1 327 1 44 5 176 1 295 5 373 6 296 1 47 5 129 1 50 1 51 1 299 1 
243 2 245 2 197 1 304 1 202 1 343 1 66 1 255 2 13 1 73 1 108 1 264 1 314 1 109 4 111 4 318 2 270 1 112 2 274 2 276 2 277 1 116 1 223 1 284 2 34 1 36 2 38 1 288 1 40 2 327 1 44 2 176 1 295 1 373 4 296 1 47 4 129 1 50 1 51 1 299 1 
112 2 274 2 243 2 136 1 276 2 277 1 116 1 245 2 223 1 197 1 304 1 284 2 202 1 36 2 34 1 38 1 288 1 327 1 66 1 255 2 13 1 44 1 176 1 295 1 296 1 373 4 73 1 47 4 129 1 108 1 264 1 314 1 109 4 50 1 51 1 111 4 318 2 216 1 270 1 299 1 155 1 
112 2 274 2 243 2 136 1 276 2 277 1 116 1 245 2 223 1 197 1 304 1 284 2 202 1 36 2 34 1 38 1 288 1 327 1 66 1 255 2 13 1 44 1 176 1 295 1 296 1 373 4 73 1 47 4 129 1 108 1 264 1 314 1 109 4 50 1 51 1 111 4 318 2 216 1 270 1 299 1 155 1 
112 2 242 1 243 2 136 1 114 1 277 1 116 1 223 1 197 1 304 1 227 2 284 2 202 1 286 1 36 2 34 1 38 1 40 2 288 1 327 1 66 1 255 2 13 1 44 1 176 1 237 2 295 1 296 1 373 4 73 1 47 4 108 1 264 1 314 1 109 4 50 1 51 1 111 4 318 2 270 1 299 1 
112 3 274 2 243 2 136 1 276 2 277 1 116 1 245 2 223 1 197 1 304 1 202 1 284 3 36 2 34 1 38 1 288 1 327 1 66 1 255 2 13 1 44 1 176 1 295 1 296 1 373 5 73 1 47 4 129 1 108 1 264 1 314 1 109 4 50 1 51 1 111 5 268 1 318 3 216 1 270 1 299 1 155 1 
112 3 274 2 243 2 136 1 276 2 277 1 116 1 245 2 223 1 197 1 304 1 202 1 284 3 36 2 34 1 38 1 288 1 327 1 66 1 255 2 13 1 44 1 176 1 295 1 296 1 373 5 73 1 47 4 129 1 108 1 264 1 314 1 109 4 50 1 51 1 111 5 268 1 318 3 216 1 270 1 299 1 155 1 
243 2 197 1 304 1 202 1 343 1 66 1 255 2 13 1 73 1 108 1 264 1 314 1 109 4 111 4 318 2 270 1 112 2 114 1 277 1 116 1 223 1 227 2 284 2 34 1 36 2 38 1 288 1 40 2 327 1 44 1 176 1 237 2 295 1 373 4 296 1 47 4 50 1 51 1 299 1 
188 1 355 1 160 1 224 1 140 2 61 1 229 3 120 1 326 1 168 1 231 1 232 1 170 1 234 1 70 1 177 1 179 2 371 1 348 1 374 2 182 1 128 3 262 6 316 2 377 1 239 1 
188 3 355 1 160 2 323 1 2 1 140 4 280 1 98 1 282 1 229 3 326 2 121 1 232 2 309 1 234 2 177 3 372 1 128 1 262 4 316 1 377 2 299 1 133 1 
190 1 273 1 355 1 160 1 339 1 30 1 341 1 140 2 250 1 32 1 164 1 362 1 98 1 229 1 102 1 120 1 326 1 39 1 65 1 232 1 66 2 328 1 292 1 234 1 14 1 372 1 126 1 151 1 128 1 262 2 316 1 264 2 314 1 377 1 212 1 92 1 186 1 271 1 
188 2 241 1 190 1 140 4 250 1 98 1 101 1 251 1 102 1 62 1 65 1 64 1 66 2 14 1 262 5 314 1 264 2 271 1 157 1 322 1 26 2 355 2 160 2 30 1 32 1 164 1 362 1 229 2 363 1 120 2 39 1 326 2 232 2 328 1 234 2 292 1 177 2 179 3 372 1 126 1 374 1 128 3 377 2 92 1 239 1 186 1 
54 1 190 3 301 1 355 2 160 2 4 1 30 8 5 1 140 4 248 1 32 1 250 8 83 1 229 1 102 7 326 2 231 1 65 2 232 2 66 1 328 2 171 1 12 1 292 2 234 2 174 1 14 1 257 2 235 1 372 1 128 1 262 2 264 1 314 1 377 2 212 1 92 2 271 1 219 1 
188 1 355 1 160 1 140 2 32 1 98 1 100 1 251 1 229 2 363 1 120 1 326 1 232 1 66 1 234 1 70 1 14 1 179 1 177 1 374 1 181 1 128 1 262 3 211 1 314 1 264 1 315 1 377 1 239 1 
188 1 26 1 355 1 27 1 234 1 160 1 179 1 177 1 140 2 128 2 262 2 363 1 377 1 120 1 326 1 239 1 231 1 232 1 
188 1 53 1 355 1 234 1 160 1 70 1 179 1 177 1 140 2 374 1 262 2 229 2 315 1 377 1 120 1 326 1 231 1 232 1 
188 2 26 1 355 1 160 1 140 2 251 1 229 2 363 1 120 2 326 1 231 1 232 1 234 1 70 1 177 2 179 2 374 1 128 2 262 4 315 1 377 1 239 1 
188 1 26 1 301 1 355 1 27 1 234 1 160 1 179 1 177 1 140 2 128 2 262 2 363 1 377 1 120 1 326 1 239 1 232 1 
188 1 53 1 301 1 355 1 234 1 160 1 70 1 179 1 177 1 140 2 374 1 262 2 229 2 315 1 377 1 120 1 326 1 232 1 
188 1 26 1 301 1 355 1 234 1 160 1 179 1 177 1 140 2 128 2 262 2 251 1 363 1 377 1 120 1 326 1 239 1 232 1 
188 1 26 1 355 1 234 1 160 1 179 1 177 1 140 2 128 2 262 2 251 1 363 1 377 1 120 1 326 1 239 1 232 1 
190 1 355 1 160 1 30 1 140 2 250 1 164 1 362 1 229 1 102 1 62 1 326 1 65 1 232 1 66 1 328 1 292 1 234 1 372 1 126 1 128 1 262 2 316 1 264 1 377 1 212 1 92 1 186 1 
190 1 355 1 160 1 30 1 140 2 250 1 362 1 229 1 342 1 102 1 306 1 326 1 65 1 232 1 66 1 328 1 123 1 292 1 234 1 372 1 128 1 262 2 316 1 264 1 377 1 212 1 92 1 186 1 
188 1 26 1 355 1 234 1 160 1 179 1 177 1 140 2 128 2 98 1 262 2 251 1 363 1 377 1 120 1 326 1 239 1 232 1 
188 1 190 1 26 1 355 1 160 1 30 1 140 2 250 1 164 1 362 1 251 1 363 1 102 1 62 1 120 1 326 1 232 1 66 1 328 1 12 1 292 1 234 1 179 1 177 1 126 1 128 2 262 2 264 1 377 1 92 1 239 1 186 1 157 1 
188 1 26 1 355 1 160 1 140 2 32 1 98 1 251 1 363 1 120 1 326 1 232 1 66 1 234 1 14 1 179 1 177 1 181 1 128 2 262 2 211 1 314 1 264 1 377 1 23 1 239 1 
26 4 159 1 160 3 80 1 59 1 139 1 117 1 359 1 224 1 247 1 140 6 61 1 282 3 229 22 251 5 363 5 364 1 166 1 168 1 232 3 345 1 254 3 309 5 234 3 70 5 236 1 179 8 371 1 348 1 374 4 182 1 128 22 262 44 90 1 315 4 377 3 77 1 93 2 239 6 156 1 218 1 187 4 320 2 
26 3 159 1 160 4 80 1 59 1 139 1 117 1 359 2 224 1 247 1 140 8 61 1 282 3 229 21 251 5 363 5 364 1 166 1 168 1 232 4 345 1 254 3 309 5 234 4 70 5 236 1 179 8 371 1 348 1 374 5 182 1 128 22 262 43 90 1 315 4 377 4 77 1 93 2 239 6 156 1 218 1 187 4 320 2 
26 7 159 1 160 2 80 1 59 1 139 1 117 1 359 1 224 1 140 4 61 1 99 2 282 4 229 25 251 7 363 7 364 1 166 1 168 1 232 2 345 1 254 2 309 4 234 2 70 8 236 1 179 14 371 1 348 1 374 7 182 1 128 27 262 52 90 1 315 7 377 2 77 1 93 1 239 8 218 1 187 4 320 2 
26 3 159 1 160 2 80 2 59 1 117 1 140 4 282 1 229 10 251 3 363 3 364 1 232 2 345 1 254 1 309 2 234 2 70 3 179 6 374 3 128 9 263 1 262 19 315 3 377 2 93 1 239 3 156 1 187 2 320 1 
26 2 159 1 160 3 80 1 59 1 139 1 117 1 359 2 140 6 282 2 229 12 251 3 363 3 364 1 166 1 232 3 345 2 254 2 309 2 70 2 234 3 236 1 179 4 374 2 128 14 262 26 90 1 315 2 377 3 93 2 77 1 239 3 218 1 187 4 
189 1 297 1 210 1 146 1 49 1 267 1 167 1 319 1 281 1 206 1 
142 1 17 1 
42 1 297 1 210 1 146 1 167 1 378 1 319 1 199 1 206 1 
107 1 340 1 
201 1 169 1 9 1 
272 2 189 1 146 1 86 1 291 1 44 1 360 1 47 1 210 1 297 1 375 1 89 1 49 1 109 1 267 1 167 1 319 1 206 1 
272 2 189 1 146 1 86 1 291 1 44 1 360 1 47 1 210 1 297 1 375 1 89 1 49 1 109 1 267 1 167 1 319 1 206 1 
272 2 189 1 146 1 86 1 291 1 44 1 360 1 47 1 210 1 297 1 375 1 89 1 49 1 109 1 267 1 167 1 319 1 206 1 
107 1 169 1 340 1 
107 1 169 1 340 1 
201 1 9 1 
201 1 169 1 9 1 
82 1 356 1 
272 1 58 1 356 1 29 1 32 2 82 1 35 1 142 1 167 1 368 1 66 2 206 1 172 1 86 1 146 1 173 1 14 2 17 1 47 1 297 1 210 1 89 1 316 1 264 2 109 1 314 2 319 1 
54 1 190 1 355 1 160 1 30 2 140 2 250 2 98 1 229 1 102 2 326 1 63 1 232 1 66 2 328 1 292 1 234 1 257 2 235 1 331 1 372 1 21 1 128 1 262 2 264 2 314 2 91 1 184 1 377 1 212 1 92 1 
158 1 12 1 346 1 292 1 124 1 358 1 4 1 161 2 30 2 20 1 97 1 141 1 250 2 102 2 252 1 185 1 52 1 328 1 370 1 
158 1 346 1 292 1 358 1 4 1 161 2 30 1 20 1 97 1 141 1 250 1 102 1 252 1 185 1 289 1 52 1 328 1 
190 1 346 1 292 1 124 1 30 1 248 1 250 1 198 1 102 1 265 1 92 1 65 1 328 1 219 1 
158 1 346 1 292 1 124 1 358 1 4 1 161 2 30 1 20 1 97 1 141 1 250 1 102 1 252 1 185 1 52 1 370 1 328 1 
43 1 
321 1 170 1 313 1 44 1 51 1 295 1 270 1 
274 1 276 1 245 1 304 1 34 1 36 1 288 1 40 1 13 1 44 2 295 1 47 1 129 1 109 1 51 1 111 1 270 1 
190 10 1 2 191 1 137 6 245 6 250 3 304 4 200 6 101 2 251 2 102 3 305 1 65 1 12 1 13 4 148 2 70 2 208 2 72 1 347 2 105 2 311 1 149 2 209 1 75 2 108 2 313 1 109 5 315 2 266 2 213 2 111 5 269 3 270 8 321 1 220 1 30 3 81 2 162 2 363 2 34 4 36 3 288 4 40 12 41 1 328 3 292 4 44 8 295 2 47 5 51 9 92 3 239 2 186 3 
137 5 221 1 245 3 200 5 304 2 282 1 251 2 363 2 36 1 34 2 166 1 40 6 288 2 254 1 309 1 13 2 148 1 70 2 208 1 44 5 236 1 295 2 311 1 47 1 75 2 90 1 109 1 315 2 51 8 333 1 111 1 77 1 239 2 270 5 218 1 
279 1 224 1 61 1 225 1 32 1 304 1 34 1 288 1 344 1 66 1 13 1 70 1 208 1 14 1 259 1 47 1 75 2 182 1 211 1 264 1 109 1 314 1 51 2 130 1 239 2 299 1 270 2 155 1 
321 1 13 1 44 1 295 1 304 1 313 1 34 1 51 1 288 1 270 1 
137 5 70 2 208 1 44 5 245 5 75 2 200 5 101 1 251 2 363 2 315 2 51 5 239 2 40 10 270 5 
109 1 36 1 44 1 111 1 295 1 47 1 
190 1 191 1 336 1 30 4 248 1 250 4 33 1 304 2 34 1 102 4 36 2 288 2 65 2 41 2 328 1 256 1 13 2 292 1 148 2 311 2 47 3 376 1 109 3 51 2 92 1 111 4 25 1 270 2 219 1 
190 1 275 1 355 1 160 1 30 1 140 2 250 1 32 2 164 1 362 1 229 1 102 1 62 1 326 1 65 1 232 1 66 3 328 1 292 1 234 1 14 2 372 1 259 1 126 1 262 1 211 2 316 1 264 3 314 2 377 1 92 1 186 1 
137 2 13 1 148 1 44 4 245 2 371 1 295 2 311 1 200 2 304 1 34 1 51 1 40 4 288 1 270 2 
297 1 71 1 206 1 
312 1 297 1 356 1 267 1 206 1 
297 1 71 1 206 1 
297 1 71 1 206 1 
297 1 354 1 206 1 
297 1 354 1 206 1 
297 1 354 1 206 1 
297 1 206 1 
210 1 146 1 
160 1 117 1 224 1 140 2 61 1 282 1 229 5 251 1 363 1 168 1 232 1 254 1 309 2 70 1 234 1 236 1 179 2 371 1 348 1 374 2 182 1 128 6 262 11 377 1 239 2 320 1 
26 1 160 2 117 1 224 1 140 4 61 1 282 1 229 5 251 1 363 1 168 1 232 2 254 1 309 2 70 1 234 2 293 1 236 1 179 3 371 1 348 1 374 2 182 1 128 6 262 11 377 2 239 2 320 1 
26 1 160 3 117 1 359 1 224 1 140 6 61 1 282 1 229 10 251 2 363 2 166 1 168 1 232 3 254 1 309 1 234 3 70 3 293 1 236 1 179 4 371 1 348 1 374 3 182 1 128 9 262 19 90 1 315 2 377 3 77 1 239 3 218 1 
26 2 160 3 117 1 359 1 224 1 140 6 61 1 282 1 229 7 251 2 363 2 166 1 168 1 232 3 254 1 309 1 234 3 70 2 293 1 236 1 179 5 371 1 348 1 374 3 182 1 128 10 262 17 90 1 315 1 377 3 77 1 239 3 218 1 
160 1 117 1 224 1 140 2 61 1 282 1 229 5 251 1 363 1 168 1 232 1 254 1 309 2 70 1 234 1 236 1 179 2 371 1 348 1 374 2 182 1 128 6 262 11 377 1 239 2 320 1 
26 1 160 1 117 1 140 2 282 1 229 6 251 2 363 2 166 1 232 1 254 1 309 1 234 1 70 2 236 1 179 2 374 1 128 6 262 12 90 1 315 2 377 1 77 1 239 2 218 1 
26 2 160 4 117 1 359 2 224 1 140 8 61 1 282 1 229 8 251 2 363 2 166 1 168 1 232 4 254 1 309 1 234 4 70 2 293 1 236 1 179 5 371 1 348 1 374 3 182 1 128 10 262 18 90 1 315 1 377 4 77 1 239 3 218 1 
26 3 160 4 117 1 359 2 140 8 282 1 229 7 251 3 363 3 166 1 232 4 254 1 309 1 234 4 70 2 236 1 179 6 374 3 128 9 262 16 90 1 315 2 377 4 77 1 239 3 218 1 156 1 
26 3 70 1 179 6 348 1 224 3 61 3 374 3 182 1 128 3 262 7 229 4 168 2 239 1 
26 1 160 4 117 1 359 2 224 1 140 8 61 1 282 1 229 8 251 2 363 2 166 1 168 1 232 4 254 1 309 1 234 4 70 2 236 1 179 4 371 1 348 1 374 3 182 1 128 10 262 18 90 1 315 1 377 4 77 1 239 3 218 1 156 1 
26 1 70 1 234 2 160 2 179 3 371 1 359 1 348 1 224 1 140 4 374 2 61 1 182 1 128 4 262 8 229 4 377 2 239 1 168 1 232 2 
170 1 70 1 179 2 371 1 348 1 224 1 61 1 374 2 182 1 128 3 262 6 229 3 168 1 239 1 
26 1 70 1 234 1 160 1 293 1 179 2 140 2 374 1 128 2 262 4 229 2 251 1 363 1 315 1 377 1 239 1 232 1 
254 1 309 2 26 1 70 1 179 2 374 1 128 3 282 1 262 7 229 4 251 1 363 1 315 1 239 1 320 1 
26 3 160 1 2 1 359 1 224 2 140 2 61 2 282 1 229 8 121 1 168 1 344 1 232 1 309 1 70 2 234 1 179 6 348 1 374 3 182 1 128 7 262 15 377 1 239 2 
309 1 262 1 229 1 
128 1 282 1 262 1 
26 1 160 1 234 1 70 1 293 1 179 3 140 2 374 2 128 3 262 6 101 1 229 3 251 1 363 1 315 1 377 1 239 1 232 1 
26 1 160 1 117 1 140 2 282 1 229 6 251 2 363 2 166 1 232 1 254 1 309 1 234 1 70 2 236 1 179 2 374 1 128 6 262 12 90 1 315 2 377 1 77 1 239 2 218 1 
26 1 70 1 179 2 224 1 61 1 374 1 182 1 128 3 262 6 229 3 239 1 
26 1 234 1 160 1 2 1 179 2 359 1 348 1 224 1 140 2 374 1 61 1 128 1 262 3 229 2 377 1 168 1 232 1 
26 2 160 1 234 1 70 2 117 1 179 5 224 2 140 2 61 2 374 3 182 1 128 5 262 10 229 5 377 1 239 2 344 1 232 1 
26 1 234 1 160 1 117 1 179 1 140 2 128 2 262 2 363 1 377 1 239 1 232 1 
26 1 70 1 234 1 160 1 179 2 117 1 140 2 374 1 128 2 262 4 229 2 251 1 363 1 315 1 377 1 239 1 232 1 
26 1 234 3 160 3 2 1 117 1 179 2 359 1 224 1 140 6 61 1 374 1 128 1 262 3 229 2 377 3 232 3 156 1 
26 5 160 5 2 1 117 1 359 2 224 3 140 10 61 3 282 3 229 18 251 3 363 3 307 1 168 1 232 5 254 1 309 4 234 5 70 5 175 1 293 1 179 12 371 1 348 1 374 7 182 2 128 16 262 34 315 3 377 5 239 5 156 1 320 1 134 1 
316 1 264 1 314 1 176 1 19 1 66 1 106 1 
207 1 176 1 338 1 19 1 106 1 350 1 316 1 314 1 264 1 325 1 24 1 66 1 
170 1 190 1 292 1 102 1 92 1 30 1 65 1 248 1 328 1 219 1 250 1 
190 1 292 1 14 1 30 1 126 1 32 1 250 1 362 1 316 1 314 1 264 2 102 1 92 1 186 1 65 1 66 2 271 1 328 1 
190 3 1 1 30 1 197 1 250 1 32 2 362 1 202 1 102 1 41 1 66 2 328 1 292 1 14 1 126 1 316 1 264 2 314 2 213 1 92 2 186 2 299 1 271 1 
190 3 1 1 118 1 30 2 197 1 250 2 32 2 362 1 202 1 342 1 102 2 41 1 66 2 328 1 292 1 14 1 316 1 264 2 314 2 213 1 92 2 186 2 299 1 271 1 
190 4 1 1 118 1 30 3 162 1 250 3 102 3 37 1 65 1 41 1 328 1 292 1 44 1 330 1 295 1 47 2 108 1 109 2 213 1 92 1 111 1 269 1 186 1 
190 4 1 1 292 1 44 1 118 1 295 1 30 3 149 1 162 1 47 2 250 3 108 1 109 2 102 3 213 1 92 1 111 1 65 1 186 1 269 1 41 1 328 1 
171 1 292 1 102 1 30 1 328 1 250 1 
54 1 171 1 12 1 190 3 292 3 257 1 174 1 4 1 72 1 196 1 30 7 5 1 250 7 83 1 119 1 102 6 332 1 92 2 65 2 186 1 328 2 
188 1 190 1 355 2 160 2 224 1 30 1 140 4 61 1 32 1 250 1 164 1 362 1 98 1 229 3 102 1 62 1 120 1 326 2 168 1 64 1 232 2 66 2 328 1 12 1 70 1 292 1 234 2 14 1 177 1 179 2 371 1 348 1 331 1 126 1 374 2 182 1 128 3 262 6 316 2 264 2 314 1 377 2 92 1 239 1 186 1 271 1 157 1 
321 1 190 2 191 1 30 1 81 1 162 1 250 1 304 2 102 1 34 2 36 1 288 2 65 1 13 2 173 1 44 1 295 1 105 1 149 1 47 3 108 1 313 1 109 3 51 1 266 1 111 2 269 1 270 1 
12 1 171 1 190 2 292 2 72 1 30 2 162 1 250 2 102 2 305 1 92 1 186 1 328 1 
12 1 190 1 292 1 118 1 30 4 248 1 250 4 102 4 92 1 65 1 145 1 219 1 328 1 
190 1 292 2 196 1 30 2 46 1 250 2 228 1 119 1 102 2 92 1 186 1 367 1 41 1 328 1 
292 1 102 1 161 1 30 1 65 1 97 1 52 1 141 1 328 1 250 1 
54 1 12 1 190 1 292 1 4 1 30 2 250 2 102 2 91 1 92 1 328 1 
54 1 12 1 190 3 292 2 174 1 30 5 248 1 5 1 250 5 102 4 92 2 65 1 41 1 145 1 219 1 328 2 
54 1 12 1 190 3 292 2 30 5 248 1 5 1 250 5 102 4 183 1 92 2 65 1 41 1 145 1 219 1 328 2 
190 1 292 1 14 1 30 1 32 1 250 1 362 1 342 1 316 1 314 1 264 2 102 1 92 1 186 1 65 1 66 2 271 1 328 1 
190 1 292 2 72 1 196 1 30 1 250 1 119 1 102 1 332 1 92 1 186 1 41 1 328 1 
0 1 264 1 314 1 184 1 63 1 195 1 143 1 66 1 21 1 
0 1 104 1 334 1 
0 1 316 1 165 1 195 1 143 1 
0 1 173 1 104 1 44 1 302 1 195 2 295 1 223 1 197 1 47 2 108 1 202 1 316 1 109 2 165 2 334 1 143 2 94 1 299 1 
170 1 194 1 7 1 278 1 
361 1 147 1 194 1 7 1 3 1 278 1 249 1 
147 1 69 1 150 1 
147 3 15 1 194 1 3 1 278 1 163 1 249 1 361 3 7 1 287 1 253 1 240 2 
6 1 361 2 147 2 194 1 7 1 294 1 3 1 278 1 249 1 
147 1 16 1 3 1 161 1 20 1 249 1 361 1 287 1 7 1 204 1 52 1 
361 1 147 1 194 1 7 1 287 1 3 1 249 1 
361 1 147 1 194 2 287 1 3 1 278 1 249 1 
147 2 194 1 115 1 3 2 249 2 361 2 283 1 7 1 287 1 132 1 
361 3 147 3 194 1 7 2 16 1 351 1 294 2 287 1 352 1 3 1 278 1 180 1 249 1 
158 1 147 2 67 1 194 1 294 1 3 1 278 1 161 2 97 1 20 1 249 1 361 2 7 1 287 1 52 1 
6 1 361 4 147 4 194 1 7 2 16 1 351 1 294 2 222 1 287 1 3 2 278 1 249 2 
361 1 147 1 194 1 7 1 287 1 3 1 278 1 249 1 
147 4 194 2 294 2 16 1 3 1 278 2 163 1 249 1 361 4 253 1 351 1 7 3 240 1 11 1 
147 2 192 1 194 1 244 1 294 1 3 1 79 1 278 1 249 1 361 2 7 1 287 1 
55 1 147 3 194 1 3 1 278 1 163 1 249 1 361 3 7 1 287 1 253 2 240 2 
78 2 138 1 7 2 290 1 
361 1 147 1 287 1 3 1 238 1 249 1 
361 2 147 2 194 1 7 1 294 1 287 1 352 1 3 1 278 1 249 1 
18 1 
361 1 147 1 194 1 7 1 287 1 3 1 278 1 249 1 
147 3 194 1 294 1 3 1 278 1 249 1 361 3 287 1 7 1 352 1 240 1 
7 1 16 1 351 1 11 1 
194 1 7 1 

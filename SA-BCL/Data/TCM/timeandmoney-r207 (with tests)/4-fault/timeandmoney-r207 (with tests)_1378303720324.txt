#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 0 2 283 6 305 1 238 2 287 1 337 1 240 1 198 3 288 4 341 1 50 1 244 2 158 1 55 5 137 1 113 2 253 1 347 2 58 2 322 2 143 1 231 9 207 9 120 1 68 1 42 1 373 1 
332 1 0 2 283 6 305 1 238 2 287 1 337 1 240 1 198 3 288 4 341 1 50 1 244 2 158 1 55 5 137 1 113 2 253 1 347 2 58 2 322 2 143 1 231 9 207 9 120 1 68 1 42 1 373 1 
332 1 0 2 283 7 305 1 238 2 287 1 337 1 240 1 198 4 288 5 341 1 50 1 244 2 158 1 55 6 137 1 113 2 253 1 347 2 58 2 322 2 143 1 231 10 207 10 120 1 68 1 42 1 373 1 
332 1 0 2 283 4 305 1 238 2 287 1 337 1 240 1 198 2 288 3 341 1 50 1 244 2 158 1 55 4 137 1 113 2 253 1 347 1 58 2 322 2 143 1 231 7 207 7 120 1 68 1 373 1 
55 3 0 1 137 1 113 1 283 3 347 2 322 1 58 1 143 1 231 4 337 1 207 4 198 1 288 2 244 1 42 1 373 1 158 1 
55 1 0 1 137 1 113 1 253 1 335 1 238 1 58 1 322 1 287 1 231 2 165 1 337 1 207 2 144 1 373 1 
55 2 288 1 198 1 0 2 137 1 283 1 305 1 238 1 58 2 373 1 231 3 337 1 207 3 
0 2 283 7 305 1 238 1 337 1 288 4 198 3 50 1 244 1 158 1 55 5 137 1 113 1 347 2 58 2 322 1 143 1 231 9 207 9 187 1 120 1 124 1 373 1 42 1 
0 2 283 7 305 1 238 1 337 1 288 4 198 3 50 1 244 1 158 1 55 5 137 1 113 1 347 2 58 2 322 1 143 1 231 9 207 9 187 1 120 1 124 1 373 1 42 1 
324 1 319 1 145 1 
75 1 145 1 301 2 
126 2 44 2 64 2 66 2 173 2 57 2 22 1 343 1 
126 2 44 3 196 1 5 1 173 3 22 1 362 1 338 1 27 1 134 1 178 1 9 1 29 2 157 1 53 2 218 1 249 1 343 1 184 2 317 1 31 1 33 1 320 1 272 2 57 2 34 2 228 1 88 1 323 1 188 1 209 1 276 1 64 2 66 2 169 1 19 1 374 1 
126 1 123 1 131 1 44 1 64 1 66 1 4 1 173 1 57 1 22 1 
319 1 44 1 173 1 307 1 64 1 123 1 235 1 93 1 52 1 365 1 145 1 43 1 352 1 315 1 
126 1 319 1 44 1 173 1 57 1 93 2 64 1 123 1 235 2 66 1 52 1 365 1 145 1 352 1 315 1 
112 1 93 1 235 1 281 1 363 1 
112 1 319 1 93 2 235 2 155 1 145 1 359 1 363 1 
93 1 235 1 363 1 
126 1 112 1 44 1 4 1 173 1 86 1 57 1 22 1 123 1 131 1 235 1 93 1 64 1 66 1 
145 1 
112 1 319 1 93 2 235 2 15 1 145 1 359 1 363 1 
344 1 112 2 319 1 357 2 359 1 78 1 36 1 363 2 235 5 93 5 296 1 67 1 270 2 40 1 145 1 222 1 159 2 111 1 84 1 
324 1 343 1 
126 1 44 2 173 2 57 1 285 1 348 1 64 2 66 1 343 2 
269 1 181 1 37 1 
317 1 44 1 320 1 196 1 173 1 5 1 34 1 362 1 276 1 178 1 179 1 53 1 19 1 374 1 343 1 184 1 
126 3 44 3 64 3 66 3 173 3 57 1 265 1 343 1 
126 1 123 1 131 1 44 1 64 1 66 1 173 1 
126 1 348 1 123 1 44 1 64 1 66 1 173 1 57 1 285 1 
126 3 44 4 196 1 5 1 173 4 265 1 22 1 362 1 338 1 27 1 178 1 9 1 29 2 52 1 365 1 157 1 53 1 249 1 343 1 315 1 184 1 317 1 31 1 33 1 320 1 272 1 255 1 57 2 34 1 228 1 88 1 348 1 276 1 64 3 123 1 235 1 93 1 66 3 19 1 169 1 352 1 374 1 211 1 71 1 
126 1 44 2 64 2 66 1 173 2 117 1 265 1 343 1 307 1 
126 3 44 3 173 3 57 1 265 2 348 1 93 1 235 1 123 1 64 3 48 1 66 3 52 1 365 1 145 1 352 1 211 1 315 1 71 1 
126 2 348 1 44 2 64 2 66 2 269 1 173 2 57 1 265 1 181 1 
317 1 44 1 320 1 196 1 173 1 5 1 34 1 362 1 276 1 178 1 53 1 19 1 374 1 343 1 184 1 
317 1 44 1 196 1 173 1 5 1 34 1 294 1 362 1 178 1 53 1 19 1 312 1 374 1 343 1 184 1 
333 1 103 1 177 1 338 1 27 1 29 2 269 2 156 1 216 1 218 2 249 1 181 2 54 1 314 1 31 1 33 2 272 4 226 1 228 1 88 1 59 1 257 1 37 2 328 1 
126 1 123 1 44 1 64 1 66 1 365 1 173 1 47 1 
317 1 126 1 44 2 196 1 320 1 5 1 173 2 34 1 265 1 362 1 276 1 64 1 178 1 66 1 269 1 19 1 53 1 374 1 71 1 184 1 
126 4 44 5 173 5 117 1 57 1 227 1 265 2 307 1 348 1 243 1 64 5 66 4 343 1 71 1 
126 2 123 1 131 1 44 2 64 2 66 2 173 2 47 1 
132 1 164 1 
132 1 164 1 
247 1 361 1 
247 1 361 1 
247 1 361 1 
132 1 164 1 256 1 
132 1 164 1 256 1 
185 1 132 1 164 1 
223 1 290 1 132 2 164 2 247 1 361 1 
132 1 164 1 256 1 
132 1 164 1 83 1 
132 1 164 1 83 1 
132 1 164 1 83 1 
223 1 164 2 150 1 346 2 197 2 284 2 360 3 102 1 339 1 235 2 93 2 342 2 132 2 51 2 145 1 20 1 237 1 161 1 375 1 
126 2 72 1 44 2 173 2 360 1 284 1 197 1 242 1 132 1 51 1 310 1 367 1 343 1 202 1 185 1 164 1 14 1 346 1 93 1 235 1 64 2 66 2 171 1 237 1 
113 1 244 1 322 1 
113 1 144 1 322 1 
252 1 113 3 244 2 144 1 236 1 10 1 
113 2 244 1 144 1 236 1 331 1 10 1 
113 2 244 1 144 1 236 2 10 1 
303 1 333 1 357 1 75 1 359 1 151 2 154 2 363 1 49 1 310 1 270 1 136 1 220 2 314 1 54 1 159 1 202 1 112 4 319 1 32 1 35 1 167 1 93 5 235 5 326 1 296 2 67 1 328 1 301 3 145 2 40 3 171 1 
303 2 333 3 357 2 75 3 99 1 359 1 266 1 154 6 363 6 26 1 49 1 270 2 217 5 136 2 220 6 314 3 54 3 202 4 159 2 112 7 319 1 32 3 13 1 139 1 36 1 93 9 235 9 298 1 296 6 67 1 328 3 301 9 145 5 40 8 281 5 
303 1 333 1 357 1 75 2 151 1 154 2 270 1 136 1 220 2 314 1 54 1 159 1 202 1 112 2 319 1 32 1 35 1 36 1 93 3 235 3 326 1 296 2 328 1 145 3 40 3 301 4 
303 1 333 2 357 1 75 3 266 1 151 2 154 4 270 1 136 1 220 4 314 2 54 2 159 1 202 2 112 3 319 1 32 2 139 1 35 1 36 1 93 4 235 4 326 1 298 1 296 4 328 2 145 4 301 7 40 5 
324 1 5 1 191 1 
350 1 5 1 
148 1 
178 1 5 1 
92 1 345 1 178 1 5 3 191 2 374 1 
178 1 5 1 374 1 
254 1 5 1 
213 1 33 3 203 1 261 1 272 7 59 2 232 1 130 2 60 1 89 1 268 1 327 1 216 3 218 4 314 1 54 1 183 1 
213 1 33 3 203 1 261 1 272 7 59 2 232 1 130 2 60 1 89 1 268 1 327 1 216 3 218 4 314 1 54 1 183 1 
213 1 33 3 203 1 261 1 272 7 59 2 232 1 130 2 60 1 89 1 79 1 268 1 327 1 216 3 218 4 314 1 54 1 183 1 
213 1 333 3 127 3 261 2 264 1 104 1 130 3 268 2 27 1 267 1 29 2 216 10 218 16 293 1 249 1 54 4 314 4 183 1 31 1 318 1 33 15 203 2 32 3 272 31 88 1 142 4 59 5 60 1 232 5 166 1 89 2 208 1 327 1 328 3 
213 1 262 1 261 1 130 2 27 2 267 1 268 1 29 4 216 4 218 5 249 2 314 1 54 1 183 1 31 2 203 1 33 4 272 9 88 2 59 3 232 1 89 1 327 1 98 1 
0 1 282 1 283 1 238 1 106 1 337 1 340 1 133 1 199 1 244 1 53 1 245 1 184 1 55 1 369 1 317 1 137 1 113 2 252 1 34 1 322 1 58 1 231 2 207 2 233 1 144 1 300 1 19 1 330 1 373 1 
0 1 282 1 283 2 238 1 106 1 337 1 340 1 133 1 199 1 244 1 53 1 245 1 292 1 184 1 55 1 317 1 137 1 252 1 113 2 138 1 34 1 322 1 58 1 231 3 207 3 144 1 300 1 302 1 19 1 330 1 
283 2 238 1 106 1 337 1 340 1 199 1 244 1 53 1 245 1 292 1 184 1 55 1 317 1 137 1 113 2 252 1 34 1 322 1 231 2 207 2 144 1 300 1 302 1 19 1 330 1 
212 1 0 1 5 1 238 2 106 2 175 1 362 1 178 1 53 1 248 1 184 1 368 1 317 1 138 1 34 1 17 1 58 1 231 1 207 1 94 1 300 2 19 1 330 2 
0 1 282 1 238 1 106 1 340 1 133 1 199 1 244 1 53 1 245 1 292 1 184 1 369 1 317 1 113 2 252 1 34 1 322 1 58 1 231 1 207 1 144 1 300 1 19 1 330 1 373 1 
105 1 
195 1 146 2 5 1 101 1 107 1 108 2 53 2 201 1 159 1 56 2 16 2 61 2 121 2 296 2 168 1 297 1 67 1 19 1 301 2 69 1 353 1 303 1 357 1 75 2 77 1 359 3 21 1 175 1 24 1 362 2 363 6 80 2 178 1 270 1 184 2 317 1 34 2 141 1 91 2 235 4 93 4 94 1 145 1 40 2 
93 2 235 2 101 1 15 1 359 1 141 1 69 1 24 1 201 1 363 2 91 1 
121 1 93 1 235 1 101 1 16 1 141 1 69 1 24 1 201 1 
101 1 15 1 359 1 16 1 141 1 24 1 91 1 363 2 121 1 235 2 93 2 80 1 69 1 201 1 
195 1 146 2 44 1 4 1 101 1 108 2 246 1 201 1 159 1 56 2 15 1 57 1 16 3 61 2 121 3 123 1 64 1 296 1 66 1 67 1 69 1 126 1 357 1 74 1 75 2 173 1 359 3 21 1 22 1 23 1 24 1 363 7 131 1 80 4 270 1 82 1 319 2 86 1 141 1 91 4 275 1 235 4 93 4 40 1 145 2 
195 1 146 2 357 1 75 2 101 1 359 2 21 1 24 1 363 4 80 2 108 2 270 1 201 1 159 1 319 1 56 2 16 2 141 1 61 2 91 2 121 2 93 3 235 3 296 1 67 1 145 2 40 1 301 2 69 1 353 1 
195 1 146 2 357 1 75 2 101 1 359 2 21 1 23 1 24 1 363 4 80 2 108 2 82 1 270 1 201 1 159 1 319 1 56 2 16 2 141 1 61 2 91 2 275 1 121 2 93 3 235 3 296 1 67 1 145 1 40 1 69 1 
195 1 146 2 357 1 75 2 101 1 359 2 21 1 23 1 24 1 363 4 80 2 108 2 82 1 270 1 201 1 159 1 319 1 56 2 16 2 141 1 61 2 91 2 275 1 121 2 93 3 235 3 296 1 67 1 145 1 40 1 69 1 
147 1 146 2 357 1 1 2 101 1 359 2 21 1 23 1 24 1 363 4 80 2 8 2 270 1 313 1 201 1 159 1 319 1 16 2 141 1 61 2 91 2 121 2 93 3 235 3 296 1 67 1 145 1 301 2 40 1 69 1 172 1 
146 2 195 1 357 1 75 2 74 1 101 1 359 2 21 1 23 1 24 1 363 5 80 3 108 2 82 1 270 1 201 1 159 1 319 1 56 2 16 3 141 1 61 2 91 3 275 1 121 3 93 3 235 3 296 1 67 1 145 1 40 1 69 1 
146 2 195 1 357 1 75 2 74 1 101 1 359 2 21 1 23 1 24 1 363 5 80 3 108 2 82 1 270 1 201 1 159 1 319 1 56 2 16 3 141 1 61 2 91 3 275 1 121 3 93 3 235 3 296 1 67 1 145 1 40 1 69 1 
146 2 357 1 1 2 101 1 359 2 21 1 24 1 363 4 80 2 8 2 270 1 313 1 201 1 159 1 319 1 16 2 141 1 61 2 91 2 121 2 93 3 235 3 296 1 67 1 145 1 40 1 301 2 69 1 353 1 
213 1 130 1 177 1 338 1 268 1 27 1 269 1 29 2 216 2 218 3 181 1 249 1 54 1 314 1 183 1 343 2 31 1 33 3 272 6 228 1 88 1 59 2 89 1 37 1 324 1 327 1 
333 2 127 3 264 1 6 1 104 1 338 1 27 2 134 1 9 1 29 4 269 11 216 2 200 1 30 1 218 8 249 2 181 4 54 2 314 1 343 1 31 2 33 6 32 2 162 1 272 14 228 2 59 1 142 3 88 2 232 1 37 11 38 1 328 1 
126 1 44 2 196 1 5 1 173 2 265 1 362 1 338 1 27 1 178 1 134 1 179 1 29 2 9 1 53 1 200 1 218 1 181 1 249 1 343 1 184 1 317 1 85 1 31 1 33 1 320 1 116 1 272 2 34 1 228 1 88 1 276 1 64 1 66 1 19 1 374 1 71 1 194 1 
333 2 44 3 196 2 5 2 153 2 338 3 289 1 9 1 53 3 200 1 292 1 249 3 54 3 343 2 115 1 59 4 64 1 66 1 169 2 19 2 71 1 213 1 126 1 215 1 173 3 265 1 129 2 130 1 362 1 268 1 27 3 134 1 178 2 29 6 269 7 216 8 218 10 219 2 181 7 314 3 183 1 184 3 317 2 31 3 33 10 32 2 320 2 272 20 34 3 228 3 88 3 232 4 89 1 37 7 276 2 327 1 328 2 329 2 374 2 
126 1 44 1 3 1 173 1 5 3 265 1 152 1 175 1 362 2 241 1 177 1 338 2 27 2 134 1 178 2 29 4 9 1 53 8 292 1 218 1 249 2 184 7 317 2 31 2 250 1 33 1 272 2 34 8 228 2 88 2 233 1 323 2 64 1 65 1 94 1 372 1 66 1 19 2 354 1 
126 1 333 1 44 1 173 1 338 1 27 1 269 1 29 2 216 1 200 1 218 1 181 1 249 1 54 1 314 1 31 1 32 1 33 2 272 3 57 1 228 1 59 1 88 1 37 1 348 1 64 1 66 1 328 1 70 1 
31 1 333 1 272 2 226 1 228 1 88 1 232 1 37 1 177 1 338 1 27 1 269 1 29 2 216 1 218 2 181 1 249 1 54 1 
31 1 33 2 272 2 228 1 103 1 59 1 88 1 37 1 177 1 338 1 27 1 269 1 29 2 328 1 216 1 181 1 249 1 314 1 
333 1 177 1 338 1 27 1 29 2 269 2 216 2 218 2 249 1 181 2 54 1 314 1 31 1 32 1 33 2 272 4 228 1 88 1 59 1 232 1 37 2 328 1 
31 1 333 1 272 2 226 1 228 1 88 1 152 1 232 1 37 1 338 1 27 1 269 1 29 2 216 1 218 2 181 1 249 1 54 1 
31 1 33 2 272 2 228 1 103 1 59 1 88 1 152 1 37 1 338 1 27 1 269 1 29 2 328 1 216 1 181 1 249 1 314 1 
333 1 152 1 338 1 27 1 29 2 269 2 216 2 218 2 249 1 181 2 54 1 314 1 31 1 32 1 33 2 272 4 228 1 88 1 59 1 232 1 37 2 328 1 
333 1 338 1 27 1 29 2 269 2 216 2 218 2 249 1 181 2 54 1 314 1 31 1 32 1 33 2 272 4 228 1 88 1 59 1 232 1 37 2 328 1 
44 1 196 1 5 1 173 1 362 1 338 1 27 1 134 1 178 1 29 2 9 1 53 1 218 1 249 1 343 1 184 1 317 1 31 1 33 1 320 1 272 2 34 1 228 1 88 1 276 1 19 1 169 1 374 1 
44 1 196 1 5 1 173 1 176 1 362 1 338 1 27 1 134 1 178 1 29 2 9 1 53 1 218 1 312 1 249 1 343 1 184 1 317 1 31 1 33 1 272 2 34 1 228 1 88 1 294 1 19 1 374 1 
333 1 338 1 27 1 29 2 269 2 200 1 216 2 218 2 249 1 181 2 54 1 314 1 31 1 32 1 33 2 272 4 228 1 88 1 59 1 232 1 37 2 328 1 
333 1 44 1 196 1 5 1 173 1 129 1 338 1 27 1 178 1 269 2 29 2 216 2 53 1 218 2 181 2 249 1 314 1 54 1 184 1 317 1 31 1 33 2 32 1 320 1 272 4 34 1 228 1 59 1 88 1 232 1 37 2 233 1 276 1 328 1 19 1 169 1 374 1 
126 1 333 1 44 1 173 1 338 1 27 1 29 2 269 1 216 1 200 1 218 2 249 1 181 1 314 1 54 1 31 1 33 1 32 1 163 1 272 3 57 1 228 1 88 1 232 1 37 1 348 1 64 1 66 1 328 1 
333 3 127 1 334 1 304 2 358 1 262 1 264 1 104 1 239 1 27 2 29 4 216 6 218 9 182 1 249 2 54 3 314 3 31 2 251 1 33 10 32 3 272 19 87 1 59 3 142 2 88 2 232 3 279 1 328 3 96 2 
333 3 127 2 334 1 304 4 358 2 262 1 104 2 267 2 27 3 29 6 216 4 218 14 182 2 249 3 110 1 314 2 54 3 12 1 31 3 33 12 32 3 225 1 272 26 205 1 87 1 59 2 88 3 142 2 232 2 274 1 119 1 279 1 328 2 96 1 
333 4 334 1 104 3 249 3 54 5 110 1 12 1 251 1 114 1 205 1 59 4 119 1 213 1 127 3 358 1 304 4 262 1 264 1 130 1 27 3 267 1 268 1 29 6 216 8 218 20 182 2 314 5 183 1 31 3 32 4 33 21 225 1 272 41 87 1 88 3 142 4 232 4 274 1 89 1 279 1 328 4 327 1 96 1 
213 1 333 4 127 3 334 1 304 4 358 1 262 1 264 1 104 3 130 1 268 1 267 2 27 4 29 8 216 7 218 20 182 2 249 4 110 1 54 5 314 4 183 1 12 1 31 4 251 1 33 18 32 4 114 1 225 1 272 38 205 1 87 1 59 4 142 4 88 4 232 3 89 1 274 1 119 1 279 1 327 1 328 3 96 1 
213 1 333 7 127 4 334 1 304 4 358 1 262 1 264 2 104 2 130 1 268 1 267 1 27 2 29 4 216 14 218 27 182 1 249 2 110 1 54 8 314 8 183 1 12 1 31 2 33 25 32 7 225 1 272 52 205 1 87 1 59 7 142 4 88 2 232 7 89 1 274 1 119 1 38 2 279 1 327 1 328 7 96 1 
44 2 5 1 173 2 338 1 27 1 178 1 134 1 29 2 9 1 135 1 53 2 200 1 218 1 249 1 221 1 184 2 317 1 31 1 33 1 272 2 34 2 228 1 88 1 323 2 64 2 65 1 372 1 19 1 39 1 192 1 125 1 
317 1 282 1 252 1 113 2 34 2 322 1 62 1 233 1 122 1 309 1 199 1 244 1 144 1 19 1 53 2 245 1 292 1 330 1 184 2 
317 1 282 1 252 1 113 2 204 1 34 1 322 1 309 1 199 1 244 1 144 1 53 1 245 1 19 1 292 1 330 1 184 1 
317 1 5 1 34 1 175 1 362 1 90 1 122 1 94 1 178 1 19 1 53 1 330 1 248 1 184 1 
317 1 282 1 252 1 113 2 34 1 322 1 62 1 122 1 309 1 199 1 244 1 144 1 53 1 245 1 19 1 292 1 330 1 184 1 
97 1 
324 1 319 1 296 1 40 1 145 1 78 1 222 1 
195 1 357 1 75 1 359 1 363 1 108 1 270 1 159 1 56 1 319 1 235 1 93 1 296 1 67 1 40 1 301 1 145 2 
333 2 5 10 336 2 154 6 291 1 53 3 54 2 159 4 254 2 18 2 350 3 168 1 296 8 299 1 67 4 19 3 301 12 303 2 355 1 357 4 356 1 214 1 75 6 359 3 78 1 362 1 363 5 81 2 178 3 270 4 219 2 220 6 222 1 314 2 184 3 315 2 317 4 319 2 32 2 321 2 34 3 186 2 233 1 234 2 92 1 235 5 93 5 278 2 328 2 40 9 145 8 374 3 191 2 193 2 
303 1 333 2 357 2 127 1 75 3 359 1 104 1 154 5 363 1 270 2 180 1 220 5 54 2 314 2 159 2 12 1 319 2 32 2 225 1 273 1 205 1 142 1 274 1 119 1 234 1 93 1 235 1 278 2 168 1 296 5 67 2 328 2 301 6 40 8 145 5 
213 1 126 1 44 1 357 1 4 1 173 1 22 1 268 1 131 1 270 1 54 2 314 1 159 1 86 1 57 1 89 1 234 1 275 1 123 1 93 1 235 1 64 1 278 2 296 2 66 1 67 1 259 1 40 2 
357 1 319 1 78 1 296 1 67 1 270 1 145 1 40 1 222 1 159 1 
333 2 32 2 75 5 154 5 234 1 278 2 296 5 328 2 301 10 145 5 40 5 219 1 220 5 54 2 314 2 
319 1 93 1 235 1 145 1 359 1 363 1 
303 2 357 2 214 1 100 1 77 1 5 1 359 2 175 1 362 2 363 4 178 1 270 2 53 4 184 4 159 2 317 1 34 4 36 1 235 3 93 3 351 1 94 1 297 1 168 2 296 2 299 2 67 1 19 1 40 2 
126 2 44 3 196 1 173 3 5 1 22 1 362 1 338 1 27 1 178 1 9 1 29 2 157 1 53 1 249 1 343 1 184 1 317 1 31 1 33 1 320 1 272 1 57 2 34 1 228 1 88 1 276 1 64 2 66 2 169 1 19 1 374 1 
303 1 357 1 319 2 75 2 130 1 154 2 296 2 168 1 67 1 270 1 301 4 40 1 145 4 220 2 159 1 
364 1 51 1 346 1 
364 1 51 1 346 1 
51 1 311 1 14 1 346 1 102 1 
364 1 51 1 346 1 
258 1 51 1 346 1 
258 1 51 1 346 1 
258 1 51 1 346 1 
51 1 346 1 
132 1 164 1 
213 1 31 2 33 4 272 8 59 2 88 2 130 1 232 1 89 1 27 2 267 1 268 1 29 4 327 1 216 3 218 4 249 2 314 1 54 1 183 1 
213 1 33 3 272 6 59 2 130 1 89 1 324 1 268 1 327 1 216 2 218 3 54 1 314 1 183 1 
31 1 333 1 33 2 32 1 272 4 59 1 88 1 232 1 27 1 29 2 328 1 216 2 218 2 271 1 249 1 314 1 54 1 
333 1 127 1 33 4 32 1 272 7 264 1 104 1 59 1 142 2 232 1 328 1 216 2 218 3 314 1 54 1 
213 1 333 2 127 2 264 1 130 1 268 2 267 2 27 2 29 4 216 9 218 11 30 1 249 2 54 3 314 3 183 1 31 2 32 2 33 12 272 23 142 2 59 5 88 2 232 4 89 2 38 1 277 1 327 1 328 2 
33 1 272 1 142 1 
127 1 272 1 218 1 
31 1 333 1 33 3 32 1 272 6 88 1 59 2 232 1 27 1 29 2 328 1 216 3 218 3 219 1 249 1 271 1 54 1 314 1 
12 1 333 2 31 1 127 1 32 2 33 6 225 1 262 1 272 12 205 1 104 1 59 1 88 1 142 1 232 1 274 1 119 1 27 1 29 2 328 2 216 2 218 6 249 1 314 2 54 2 
213 1 33 3 272 6 59 1 232 1 89 1 268 1 216 2 218 3 54 1 314 1 
31 1 33 2 272 3 59 1 88 1 232 1 89 1 268 1 267 1 27 1 277 1 29 2 327 1 216 2 218 1 249 1 183 1 
213 1 31 1 33 5 262 1 272 10 88 1 59 3 232 2 89 2 27 1 268 2 29 2 259 1 216 5 218 5 249 1 54 2 314 2 
31 1 333 1 262 1 272 2 88 1 232 1 27 1 29 2 216 1 218 2 249 1 54 1 
31 1 333 1 33 2 32 1 262 1 272 4 59 1 88 1 232 1 27 1 29 2 328 1 216 2 218 2 249 1 314 1 54 1 
31 3 251 1 33 2 262 1 272 3 88 3 59 1 232 1 89 1 267 1 27 3 268 1 277 1 29 6 216 2 218 1 249 3 
213 2 333 3 127 3 262 1 264 1 104 1 130 1 268 3 267 2 27 5 29 10 216 12 218 16 293 1 271 1 249 5 54 5 314 5 183 1 31 5 33 18 251 1 32 3 272 34 142 4 88 5 59 7 166 1 232 5 89 3 208 1 277 1 327 1 328 3 
213 1 127 1 262 1 104 1 130 1 27 1 268 1 29 2 216 2 218 4 249 1 314 1 54 1 183 1 31 1 33 4 272 8 205 1 142 1 88 1 59 2 89 1 327 1 
213 1 333 1 127 1 262 1 264 1 104 1 130 1 268 1 27 2 29 4 216 3 218 6 249 2 271 1 314 1 54 2 183 1 31 2 33 5 32 1 272 11 205 1 59 2 142 2 88 2 232 1 89 1 327 1 
213 1 333 2 127 1 262 1 104 1 130 1 268 1 27 3 267 1 29 6 216 4 218 9 271 1 249 3 54 3 314 3 183 1 31 3 12 1 33 10 32 2 225 1 272 19 205 1 142 1 88 3 59 3 232 1 89 1 274 1 119 1 327 1 328 2 
213 1 333 2 127 1 262 1 104 1 130 1 268 1 267 1 27 3 29 6 216 5 218 10 271 1 249 3 54 3 314 2 183 1 31 3 12 1 33 7 32 2 225 1 272 17 205 1 142 1 88 3 59 3 232 2 89 1 274 1 119 1 327 1 328 1 
213 1 127 1 262 1 104 1 130 1 27 1 268 1 29 2 216 2 218 4 249 1 314 1 54 1 183 1 31 1 33 4 272 8 205 1 142 1 88 1 59 2 89 1 327 1 
12 1 333 2 31 1 127 1 32 2 33 6 225 1 262 1 272 12 205 1 104 1 59 1 88 1 142 1 232 1 274 1 119 1 27 1 29 2 328 2 216 2 218 6 249 1 314 2 54 2 
213 1 333 2 127 1 262 1 104 1 130 1 268 1 27 4 267 2 29 8 216 5 218 10 271 1 249 4 54 3 314 2 183 1 12 1 31 4 33 8 32 2 225 1 272 18 205 1 142 1 88 4 59 3 232 2 89 1 274 1 119 1 327 1 328 1 
333 3 127 1 262 1 104 1 27 4 267 2 29 8 216 6 218 9 249 4 54 3 314 2 12 1 31 4 33 7 251 1 32 3 225 1 272 16 205 1 142 1 88 4 59 3 232 3 274 1 119 1 328 2 
213 1 33 4 272 7 59 3 232 3 89 3 268 3 327 1 216 6 218 3 314 1 54 1 183 2 
213 1 333 2 127 1 262 1 104 1 130 1 268 1 27 4 267 2 29 8 216 4 218 10 249 4 54 3 314 2 183 1 12 1 31 4 33 8 251 1 32 2 225 1 272 18 205 1 142 1 88 4 59 3 232 1 89 1 274 1 119 1 327 1 328 1 
44 1 173 1 117 1 307 1 7 1 295 1 123 1 64 1 343 1 
370 1 260 1 44 1 173 1 117 1 229 1 206 1 307 1 7 1 295 1 123 1 64 1 170 1 343 1 
317 1 324 1 94 1 178 1 5 1 19 1 53 1 34 1 175 1 184 1 362 1 
317 1 126 1 44 2 196 1 5 1 173 2 34 1 265 1 362 1 276 1 64 1 178 1 66 1 53 1 19 1 374 1 343 1 184 1 
126 2 44 2 196 1 173 2 5 3 265 1 178 2 52 1 365 1 53 1 343 1 184 1 317 1 254 1 34 1 18 1 276 1 64 2 123 1 66 1 299 1 19 1 374 2 
126 2 44 2 196 1 263 1 173 2 5 3 265 1 178 2 52 1 365 1 53 2 312 1 343 1 184 2 317 1 254 1 34 2 18 1 64 2 123 1 66 1 299 1 19 1 374 2 
149 1 263 1 5 4 362 1 363 1 178 1 53 3 184 3 315 1 11 1 317 1 319 1 254 1 34 3 18 1 350 1 93 2 235 2 299 1 19 1 145 1 191 1 374 1 
317 1 319 1 254 1 263 1 5 4 34 3 186 1 362 1 18 1 363 1 235 2 93 2 350 1 178 1 299 1 145 1 53 3 19 1 374 1 191 1 315 1 184 3 
317 1 19 1 53 1 34 1 354 1 184 1 
317 3 250 1 3 1 5 3 34 7 286 1 362 2 323 1 233 1 241 1 92 1 372 1 178 2 53 7 210 1 19 2 292 1 374 1 354 1 316 1 184 6 
44 2 196 1 5 1 338 2 53 1 200 1 249 2 54 1 343 2 59 2 64 1 66 1 169 1 19 1 126 1 213 1 173 2 265 1 129 1 130 1 27 2 268 1 178 1 29 4 269 1 216 2 218 3 181 1 314 1 184 1 183 1 317 1 31 2 33 3 320 1 272 6 34 1 228 2 88 2 89 1 233 1 37 1 276 1 327 1 39 1 329 1 374 1 
357 2 214 1 5 2 359 1 78 1 362 1 363 2 81 1 270 2 53 1 222 1 184 1 315 1 159 2 112 1 319 1 321 1 34 1 186 1 93 3 235 3 350 1 296 1 67 2 40 1 145 1 191 1 193 1 
317 2 356 1 5 2 34 2 233 1 92 1 178 1 53 2 19 1 191 1 374 1 354 1 184 2 
317 1 46 1 263 1 5 1 34 4 175 1 362 1 233 1 94 1 178 1 53 4 19 1 184 4 
317 2 5 1 34 2 289 1 178 1 299 1 95 1 53 2 366 1 210 1 19 1 374 1 316 1 184 2 
317 1 113 1 144 1 19 1 245 1 53 1 34 1 322 1 184 1 362 1 
317 1 178 1 372 1 5 1 19 1 53 2 34 2 292 1 192 1 184 2 233 1 
317 2 250 1 46 1 3 1 5 3 34 5 175 1 362 1 233 1 94 1 372 1 178 2 299 1 53 5 19 2 184 4 
317 2 250 1 46 1 45 1 5 3 34 5 175 1 362 1 233 1 94 1 372 1 178 2 299 1 53 5 19 2 184 4 
317 1 126 1 44 2 196 1 5 1 173 2 34 1 265 1 362 1 64 1 178 1 66 1 53 1 19 1 312 1 374 1 343 1 184 1 
317 2 5 1 34 1 286 1 92 1 178 1 299 1 53 1 210 1 19 1 374 1 316 1 184 1 
44 1 64 1 189 1 2 1 173 1 135 1 230 1 221 1 125 1 
73 1 230 1 306 1 
189 1 2 1 28 1 230 1 343 1 
112 1 319 1 73 1 2 2 230 1 306 1 123 1 235 2 93 2 189 2 28 2 365 1 52 1 145 1 41 1 352 1 211 1 343 1 315 1 
55 1 324 1 137 1 337 1 
55 1 0 1 137 1 58 1 231 1 337 1 207 1 
238 1 106 1 231 1 
55 1 0 1 137 1 58 1 231 3 287 2 337 1 207 3 349 1 373 1 280 1 109 1 
55 1 0 1 137 1 283 1 347 1 58 1 231 2 337 1 207 2 
55 1 288 1 0 1 113 1 244 1 322 1 58 1 373 1 231 1 158 1 207 1 
55 1 0 1 137 1 58 1 373 1 231 1 207 1 
0 1 137 2 58 1 373 1 231 1 337 1 207 1 
55 1 63 1 0 2 137 1 58 2 373 1 231 2 207 2 160 1 25 1 
55 2 120 1 288 1 198 1 0 1 137 1 50 1 283 2 58 1 373 1 231 3 337 1 207 3 
55 1 0 1 137 1 113 2 252 1 283 1 58 1 140 1 322 1 231 2 337 1 207 2 144 1 244 1 373 1 
55 2 288 1 198 1 0 2 137 1 283 2 347 1 58 2 42 1 373 1 231 4 337 1 207 4 
55 1 0 1 137 1 58 1 373 1 231 1 337 1 207 1 
55 3 0 1 137 2 283 2 58 1 174 1 287 1 231 4 337 2 207 4 198 1 288 1 109 1 280 1 
55 1 0 1 137 1 283 1 118 1 58 1 231 2 337 1 207 2 325 1 124 1 373 1 
55 1 0 1 137 1 58 1 231 3 287 2 337 1 207 3 190 1 280 1 373 1 109 2 
55 2 308 1 128 2 224 1 
0 1 58 1 373 1 371 1 231 1 207 1 
55 1 120 1 0 1 137 1 283 1 58 1 373 1 231 2 337 1 207 2 
76 1 
55 1 0 1 137 1 58 1 373 1 231 1 337 1 207 1 
120 1 55 1 0 1 137 1 283 1 58 1 373 1 287 1 231 3 337 1 207 3 
55 1 288 1 198 1 174 1 
55 1 137 1 

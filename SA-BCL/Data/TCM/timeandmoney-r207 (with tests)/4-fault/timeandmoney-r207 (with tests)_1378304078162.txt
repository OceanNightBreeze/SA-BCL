#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (48,301) (48,301) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (48,301) (48,301) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (48,301) (48,301) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (48,301) (48,301) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 1 21 1 136 2 305 1 148 1 350 1 263 1 72 2 223 1 97 1 154 1 312 1 301 1 279 1 10 1 
48 1 21 1 136 2 305 1 148 1 350 1 263 1 72 2 223 1 97 1 312 1 301 1 154 1 279 1 10 1 
48 1 21 1 136 2 305 1 148 1 350 1 263 1 72 2 223 1 97 1 312 1 301 1 154 1 279 1 10 1 
48 1 21 1 136 2 305 1 148 1 350 1 263 1 72 2 223 1 97 1 312 1 301 1 154 1 279 1 10 1 
18 3 2 1 319 1 160 1 194 3 136 4 195 2 305 1 342 2 29 1 368 1 72 4 223 1 354 1 97 1 312 1 154 1 279 1 
18 1 45 1 319 1 160 1 283 1 21 1 136 2 305 1 350 1 72 2 223 1 201 1 312 1 97 1 279 1 10 1 
18 2 319 1 160 1 179 1 194 1 136 3 195 1 305 2 350 1 72 3 354 1 312 2 279 1 
18 5 2 1 110 1 319 1 160 1 179 1 101 1 348 1 194 7 136 9 195 4 305 2 342 2 29 1 309 1 350 1 368 1 72 9 223 1 354 3 97 1 154 1 312 2 279 1 
18 5 2 1 110 1 319 1 160 1 179 1 101 1 348 1 194 7 136 9 195 4 305 2 342 2 29 1 309 1 350 1 368 1 72 9 223 1 354 3 97 1 154 1 312 2 279 1 
1 1 152 1 141 1 
152 1 310 2 71 1 
116 2 73 2 200 2 275 2 16 1 285 1 376 2 239 2 
0 1 47 1 158 1 50 1 337 1 135 1 275 3 321 1 23 2 68 1 366 1 116 2 199 1 73 3 200 2 278 1 144 1 302 1 11 1 173 2 12 1 176 1 256 1 145 1 147 1 232 1 233 1 285 1 376 2 15 1 209 2 349 1 188 2 288 2 264 1 16 1 239 2 
116 1 272 1 236 1 19 1 73 1 200 1 275 1 16 1 376 1 239 1 
1 1 317 1 275 1 376 1 42 1 152 1 287 1 84 1 236 1 132 1 73 1 169 1 170 1 172 1 
1 1 275 1 376 1 42 2 152 1 116 1 84 1 132 2 236 1 200 1 73 1 169 1 170 1 239 1 172 1 
87 1 365 1 42 1 132 1 79 1 
1 1 87 1 268 1 365 1 42 2 152 1 132 2 214 1 
87 1 42 1 132 1 
272 1 244 1 19 1 275 1 376 1 365 1 42 1 116 1 236 1 132 1 200 1 73 1 16 1 239 1 
152 1 
1 1 87 1 268 1 365 1 185 1 42 2 152 1 132 2 
1 1 268 1 87 2 294 1 282 1 102 1 4 2 364 1 365 2 197 2 42 5 298 1 152 1 94 2 132 5 265 1 355 1 300 1 190 1 
141 1 285 1 
177 1 372 1 275 2 376 2 285 2 116 1 73 2 200 1 239 1 
281 1 382 1 155 1 
173 1 12 1 145 1 50 1 337 1 275 1 147 1 233 1 321 1 285 1 68 1 234 1 188 1 288 1 199 1 73 1 
173 1 12 1 145 1 50 1 337 1 303 1 147 1 363 1 275 2 321 1 233 1 376 1 68 1 188 1 116 1 288 1 199 1 73 2 239 1 155 1 
116 3 200 1 73 3 363 1 275 3 285 1 376 3 239 3 
116 1 272 1 236 1 73 1 275 1 376 1 239 1 
177 1 116 1 372 1 236 1 73 1 200 1 275 1 376 1 239 1 
47 1 158 1 50 1 337 1 275 4 363 1 321 1 23 2 68 1 116 3 199 1 200 2 73 4 169 1 170 1 278 1 144 1 172 1 302 1 11 1 173 1 12 1 145 1 256 1 372 1 303 1 147 1 233 1 285 1 376 3 306 1 15 1 307 1 209 1 42 1 349 1 188 1 84 1 288 1 264 1 236 1 132 1 16 1 239 3 
287 1 116 1 73 2 275 2 363 1 226 1 285 1 376 2 239 1 
372 1 303 1 363 2 275 3 5 1 376 3 306 1 42 1 152 1 84 1 116 3 132 1 236 1 200 1 73 3 169 1 170 1 239 3 172 1 
372 1 363 1 275 2 376 2 116 2 200 1 73 2 382 1 239 2 155 1 
173 1 12 1 145 1 50 1 337 1 275 1 147 1 233 1 321 1 285 1 68 1 188 1 288 1 199 1 73 1 
173 1 12 1 50 1 337 1 275 1 147 1 233 1 321 1 285 1 196 1 188 1 288 1 324 1 199 1 73 1 
315 1 359 1 361 1 158 2 135 2 23 2 278 1 98 1 144 1 302 1 281 2 261 1 183 1 15 1 210 1 209 4 149 1 349 1 264 1 212 1 382 2 313 1 213 1 155 2 
116 1 236 1 73 1 275 1 376 1 239 1 172 1 191 1 
175 1 372 1 303 1 363 2 275 5 376 5 285 1 287 1 116 4 73 5 200 1 225 1 226 1 239 4 
116 2 272 1 236 1 73 2 275 2 376 2 239 2 191 1 
105 1 228 1 
105 1 228 1 
218 1 304 1 
218 1 304 1 
218 1 304 1 
105 1 228 1 215 1 
105 1 228 1 32 1 
218 1 105 2 257 1 304 1 228 2 217 1 
105 1 228 1 215 1 
105 1 228 1 215 1 
105 1 43 1 228 1 
105 1 43 1 228 1 
105 1 43 1 228 1 
34 1 257 1 273 1 100 1 180 3 377 1 105 2 186 1 42 2 323 2 152 1 70 2 254 2 132 2 299 1 44 2 153 1 189 2 228 2 
273 1 275 2 323 1 116 2 254 1 96 1 73 2 228 1 32 1 99 1 180 1 208 1 181 1 285 1 376 2 260 1 104 1 105 1 42 1 106 1 132 1 44 1 189 1 239 2 
223 1 97 1 154 1 
45 1 223 1 97 1 
45 1 245 1 223 3 266 1 154 2 250 1 
45 1 245 1 296 1 223 2 154 1 250 1 
45 1 245 1 223 2 154 1 250 2 
315 1 87 1 268 1 1 1 357 1 242 1 295 1 320 2 219 1 4 1 220 1 164 2 364 3 197 1 365 4 94 1 71 1 96 1 143 2 98 1 181 1 261 1 104 1 187 1 42 5 152 2 310 3 131 1 132 5 265 1 313 1 190 2 
315 3 87 6 1 1 268 1 294 1 320 6 274 1 219 2 220 1 4 2 247 1 364 8 365 7 340 1 197 2 276 5 94 2 71 3 96 4 55 1 143 6 98 3 79 5 14 1 261 3 187 3 42 9 289 1 152 5 310 9 131 2 132 9 265 1 313 3 190 6 
315 1 1 1 242 1 294 1 295 1 320 2 219 1 4 1 164 1 364 3 365 2 197 1 94 1 71 2 96 1 143 2 98 1 261 1 42 3 187 1 152 3 131 1 310 4 132 3 313 1 190 2 
315 2 1 1 294 1 242 1 295 1 320 4 219 1 4 1 247 1 164 2 364 5 197 1 365 3 94 1 71 3 96 2 55 1 143 4 98 2 261 2 42 4 187 2 289 1 152 4 310 7 131 1 132 4 313 2 190 4 
286 1 12 1 141 1 
12 1 293 1 
167 1 
12 1 337 1 
286 2 12 3 337 1 75 1 321 1 76 1 
12 1 337 1 321 1 
35 1 12 1 
315 1 359 2 65 1 158 3 89 1 231 1 375 1 81 1 135 4 248 2 184 1 149 3 209 7 380 1 332 1 313 1 8 1 
315 1 359 2 65 1 158 3 89 1 231 1 375 1 81 1 135 4 248 2 184 1 149 3 209 7 380 1 332 1 313 1 8 1 
315 1 359 2 65 1 318 1 158 3 89 1 231 1 375 1 81 1 135 4 248 2 184 1 149 3 209 7 380 1 332 1 313 1 8 1 
315 4 359 5 241 1 65 1 89 1 158 15 49 1 135 16 248 3 23 2 140 1 227 1 8 2 98 3 144 1 302 1 344 1 346 4 345 1 327 1 375 1 231 5 81 1 261 3 184 2 209 31 149 10 187 3 349 1 264 1 380 2 332 2 311 3 313 4 
315 1 359 3 65 1 158 4 135 5 248 2 23 4 8 1 144 2 302 2 344 1 231 1 375 1 81 1 184 1 209 9 149 4 126 1 349 2 264 2 380 1 292 1 332 1 313 1 
18 1 240 1 45 1 319 1 160 1 50 1 194 1 136 2 338 1 6 1 341 1 139 1 253 1 72 2 223 2 97 1 171 1 279 1 173 1 39 1 13 1 233 1 259 1 305 1 188 1 288 1 350 1 266 1 154 1 312 1 
18 1 240 1 45 1 319 1 160 1 50 1 194 2 136 3 338 1 341 1 139 1 95 1 72 3 223 2 97 1 171 1 280 1 173 1 39 1 13 1 233 1 259 1 305 1 188 1 288 1 350 1 379 1 266 1 154 1 312 1 
18 1 45 1 319 1 160 1 50 1 194 2 136 2 338 1 139 1 95 1 72 2 223 2 171 1 97 1 280 1 173 1 39 1 13 1 233 1 259 1 188 1 350 1 288 1 266 1 154 1 
243 1 50 1 112 1 337 1 136 1 252 1 199 1 139 2 72 1 118 1 173 1 12 1 39 2 13 2 103 1 233 1 305 1 188 1 288 1 350 2 379 1 312 1 334 1 
240 1 45 1 50 1 136 1 338 1 6 1 341 1 139 1 95 1 72 1 223 2 97 1 171 1 279 1 173 1 39 1 13 1 233 1 259 1 305 1 188 1 288 1 350 1 266 1 154 1 312 1 
269 1 
87 4 50 1 337 1 297 1 4 1 252 1 339 1 197 1 92 1 93 1 94 1 199 2 203 1 12 1 103 1 310 1 265 1 64 1 268 2 317 1 360 3 66 1 275 1 163 1 20 1 22 1 24 1 364 2 325 1 221 1 71 1 168 1 73 1 169 1 170 1 172 1 173 2 371 1 178 1 233 1 376 1 42 4 188 2 288 2 287 1 84 1 131 1 132 4 331 1 236 1 381 1 86 1 190 2 
317 1 87 2 268 1 360 2 275 1 221 1 73 1 169 1 170 1 203 1 172 1 371 1 376 1 185 1 42 3 287 1 84 1 331 1 132 3 236 1 381 1 86 1 
87 1 317 1 1 1 268 1 360 3 275 1 20 1 221 1 73 1 169 1 170 1 203 1 172 1 371 1 376 1 185 1 42 3 287 1 84 1 152 1 331 1 132 3 236 1 381 1 
268 1 317 1 87 2 1 1 360 3 66 1 275 1 20 1 221 1 73 1 169 1 170 1 203 1 172 1 371 1 376 1 185 1 42 3 287 1 84 1 152 1 331 1 132 3 236 1 381 1 86 1 
335 1 87 7 1 5 88 1 4 1 197 1 93 2 94 1 203 1 58 1 152 5 265 1 64 2 268 3 317 1 360 6 66 4 275 1 20 4 22 2 364 1 221 1 325 1 168 1 71 2 169 1 73 1 170 1 172 1 371 1 178 2 376 1 185 1 42 5 84 1 287 1 130 1 290 1 236 1 132 5 331 1 381 1 86 4 190 1 
87 4 1 1 4 1 297 1 197 1 93 2 94 1 203 1 152 2 310 2 265 1 64 2 317 1 268 2 360 4 66 2 275 1 22 2 20 2 364 1 221 1 325 1 168 1 71 2 169 1 73 1 170 1 172 1 371 1 178 2 376 1 42 4 84 1 287 1 236 1 132 4 331 1 381 1 86 2 190 1 
335 1 1 1 87 4 268 2 317 1 88 1 360 4 66 2 275 1 4 1 20 2 22 2 364 1 197 1 93 2 325 1 221 1 94 1 71 2 168 1 73 1 169 1 170 1 203 1 172 1 371 1 178 2 376 1 42 4 152 1 287 1 84 1 130 1 331 1 132 4 236 1 381 1 265 1 86 2 190 1 64 2 
335 1 1 1 87 4 268 2 317 1 88 1 360 4 66 2 275 1 4 1 20 2 22 2 364 1 197 1 93 2 325 1 221 1 94 1 71 2 168 1 73 1 169 1 170 1 203 1 172 1 371 1 178 2 376 1 42 4 152 1 287 1 84 1 130 1 331 1 132 4 236 1 381 1 265 1 86 2 190 1 64 2 
1 1 87 4 268 2 317 1 88 1 360 4 66 2 275 1 4 1 20 2 22 2 364 1 197 1 115 1 325 1 221 1 94 1 73 1 169 1 7 1 170 1 369 2 203 1 172 1 371 1 178 2 376 1 42 4 152 1 262 1 287 1 84 1 310 2 85 2 331 1 132 4 236 1 381 1 265 1 86 2 190 1 
335 1 1 1 268 2 317 1 87 5 88 1 360 5 66 3 275 1 4 1 22 2 20 3 364 1 197 1 93 2 325 1 94 1 221 1 71 2 168 1 73 1 169 1 170 1 203 1 172 1 371 1 178 2 376 1 42 4 152 1 130 1 287 1 84 1 290 1 331 1 132 4 236 1 381 1 265 1 86 3 190 1 64 2 
335 1 1 1 268 2 317 1 87 5 88 1 360 5 66 3 275 1 4 1 22 2 20 3 364 1 197 1 93 2 325 1 94 1 221 1 71 2 168 1 73 1 169 1 170 1 203 1 172 1 371 1 178 2 376 1 42 4 152 1 130 1 287 1 84 1 290 1 331 1 132 4 236 1 381 1 265 1 86 3 190 1 64 2 
1 1 87 4 268 2 317 1 360 4 66 2 275 1 297 1 4 1 20 2 22 2 364 1 197 1 325 1 221 1 94 1 73 1 169 1 170 1 369 2 203 1 172 1 371 1 178 2 376 1 42 4 152 1 287 1 84 1 262 1 310 2 85 2 331 1 132 4 236 1 381 1 265 1 86 2 190 1 
315 1 359 2 65 1 158 3 135 3 248 1 23 2 141 1 278 1 144 1 302 1 281 1 375 1 81 1 285 2 15 1 184 1 210 1 149 2 209 6 349 1 264 1 382 1 332 1 313 1 155 1 
315 1 359 1 47 1 157 1 158 6 161 1 135 8 23 4 53 1 278 1 227 1 98 2 144 2 302 2 345 1 346 3 176 1 281 11 231 1 285 1 261 1 15 2 149 2 209 14 187 2 349 2 264 2 352 1 291 1 311 3 382 4 313 2 155 11 
157 1 47 1 158 1 50 1 337 1 275 2 363 1 135 1 321 1 23 2 68 1 116 1 199 1 73 2 224 1 278 1 77 1 144 1 173 1 302 1 12 1 176 1 145 1 60 1 303 1 147 1 233 1 285 1 376 1 15 1 234 1 209 2 188 1 349 1 288 1 264 1 382 1 239 1 
47 1 50 2 337 2 135 10 248 1 95 1 199 1 98 2 144 3 57 2 302 3 12 2 256 2 145 2 303 1 147 2 261 2 15 3 209 20 149 8 349 3 264 3 313 3 155 7 315 3 270 1 359 4 65 1 157 1 158 10 363 1 275 3 321 2 23 6 68 2 322 2 116 1 74 1 73 3 278 3 33 2 173 3 230 1 176 1 281 7 124 2 375 1 231 4 81 1 233 2 285 2 376 1 184 1 187 2 188 3 288 3 332 1 382 7 239 1 
47 1 158 1 51 1 50 2 337 2 275 1 363 1 135 1 23 4 252 1 69 1 366 2 222 1 116 1 95 1 253 1 199 2 73 1 278 2 144 2 173 8 302 2 12 3 176 1 38 1 233 2 103 1 376 1 15 2 62 1 210 1 209 2 128 1 188 7 349 2 288 8 264 2 239 1 17 1 
315 1 359 1 157 1 158 2 162 1 275 1 135 1 23 2 116 1 200 1 73 1 278 1 98 1 144 1 302 1 281 1 372 1 376 1 261 1 15 1 149 1 209 3 187 1 349 1 264 1 382 1 313 1 239 1 155 1 
302 1 281 1 231 1 135 2 23 2 15 1 149 1 209 2 210 1 349 1 264 1 382 1 278 1 213 1 313 1 98 1 144 1 155 1 
302 1 315 1 359 1 281 1 361 1 158 2 23 2 261 1 15 1 149 1 209 2 210 1 349 1 264 1 382 1 278 1 144 1 155 1 
315 1 359 1 158 2 135 2 23 2 278 1 98 1 144 1 302 1 281 2 231 1 261 1 15 1 210 1 209 4 149 2 187 1 349 1 264 1 382 2 313 1 155 2 
302 1 281 1 38 1 231 1 135 2 23 2 15 1 149 1 209 2 349 1 264 1 382 1 278 1 213 1 313 1 98 1 144 1 155 1 
302 1 315 1 359 1 281 1 38 1 361 1 158 2 23 2 261 1 15 1 149 1 209 2 349 1 264 1 382 1 278 1 144 1 155 1 
315 1 359 1 158 2 135 2 23 2 278 1 98 1 144 1 302 1 38 1 281 2 231 1 261 1 15 1 209 4 149 2 187 1 349 1 264 1 382 2 313 1 155 2 
315 1 359 1 158 2 135 2 23 2 278 1 98 1 144 1 302 1 281 2 231 1 261 1 15 1 209 4 149 2 187 1 349 1 264 1 382 2 313 1 155 2 
47 1 158 1 50 1 337 1 135 1 275 1 321 1 23 2 68 1 199 1 73 1 278 1 144 1 173 1 302 1 12 1 176 1 145 1 256 1 147 1 233 1 285 1 15 1 209 2 188 1 349 1 288 1 264 1 
46 1 47 1 158 1 50 1 337 1 135 1 275 1 321 1 23 2 196 1 324 1 199 1 73 1 278 1 144 1 173 1 302 1 12 1 176 1 147 1 233 1 285 1 15 1 209 2 188 1 349 1 288 1 264 1 
315 1 359 1 157 1 158 2 135 2 23 2 278 1 98 1 144 1 302 1 281 2 231 1 261 1 15 1 209 4 149 2 187 1 349 1 264 1 382 2 313 1 155 2 
315 1 359 1 158 2 50 1 337 1 135 2 275 1 321 1 23 2 68 1 322 1 253 1 73 1 278 1 98 1 144 1 173 1 302 1 12 1 281 2 145 1 256 1 231 1 147 1 233 1 261 1 15 1 149 2 209 4 187 1 188 1 349 1 288 1 264 1 382 2 313 1 155 2 
315 1 157 1 158 1 275 1 135 2 23 2 116 1 200 1 119 1 73 1 278 1 98 1 144 1 302 1 281 1 372 1 231 1 376 1 261 1 15 1 149 1 209 3 187 1 349 1 264 1 382 1 313 1 239 1 155 1 
315 5 359 4 65 1 3 1 158 21 159 1 135 20 248 1 23 6 249 1 166 1 227 1 98 4 144 3 302 3 174 1 344 1 229 1 346 4 345 3 375 1 231 4 81 1 40 1 261 4 184 1 209 41 149 8 308 4 187 4 349 3 330 1 264 3 211 1 353 1 108 2 292 1 332 1 238 1 311 3 313 5 267 1 109 1 
315 4 359 4 65 1 3 1 158 18 159 1 135 20 248 1 23 8 249 1 166 1 227 1 98 4 144 4 302 4 174 1 344 2 229 1 346 4 345 3 375 1 231 3 81 1 40 1 261 3 184 1 209 38 149 7 308 4 187 4 349 4 330 1 264 4 211 1 353 1 108 2 292 1 332 1 238 1 311 3 313 5 267 1 109 1 
315 8 359 7 65 1 3 1 158 25 159 1 135 27 248 1 23 4 249 1 166 1 227 2 98 7 144 2 302 2 174 1 344 1 229 1 346 4 345 2 375 1 231 7 81 1 40 1 261 7 184 1 209 52 149 14 308 4 187 7 349 2 330 1 264 2 352 2 353 1 108 1 292 1 332 1 238 1 311 4 313 8 267 1 
315 3 359 3 3 1 158 10 159 1 135 9 23 4 166 1 78 1 227 1 98 3 144 2 302 2 174 2 346 2 345 1 231 3 261 3 209 19 149 6 308 2 187 3 349 2 264 2 108 1 292 1 311 1 313 3 267 1 109 1 
315 2 359 2 3 2 158 12 159 1 135 14 23 6 249 1 166 1 98 3 144 3 302 3 174 1 344 2 229 1 345 2 346 2 231 2 40 1 261 2 149 4 209 26 308 4 187 3 349 3 330 1 264 3 108 2 292 1 353 1 238 1 311 2 313 3 267 1 
34 1 105 1 323 1 123 1 257 1 254 1 44 1 153 1 189 1 228 1 
208 1 32 1 
105 1 107 1 323 1 254 1 246 1 44 1 182 1 189 1 228 1 
34 1 257 1 273 1 180 2 377 1 105 1 186 1 42 1 323 1 152 1 70 1 132 1 254 1 299 1 44 1 153 1 189 1 228 1 
34 1 257 1 273 1 180 2 377 1 105 1 186 1 42 1 323 1 152 1 70 1 132 1 254 1 299 1 44 1 153 1 189 1 228 1 
34 1 257 1 273 1 180 2 377 1 105 1 186 1 42 1 323 1 152 1 70 1 132 1 254 1 299 1 44 1 153 1 189 1 228 1 
28 1 215 1 217 1 
28 1 215 1 217 1 
117 1 43 1 
117 1 43 1 217 1 
106 1 260 1 
91 1 275 2 365 1 323 1 70 1 116 2 254 1 96 1 73 2 228 1 32 1 99 1 180 1 208 1 181 1 285 1 376 2 260 1 104 1 186 1 105 1 42 1 106 1 132 1 44 1 189 1 239 2 
28 1 215 1 
117 1 43 1 217 1 
157 1 47 1 158 1 50 1 51 1 337 1 275 2 135 1 23 2 27 1 138 1 366 2 73 2 54 1 278 1 144 1 173 2 302 1 12 1 176 1 233 1 376 2 15 1 209 2 349 1 188 2 288 2 264 1 314 1 356 1 17 1 
45 1 173 2 240 1 192 1 50 1 233 1 259 1 338 1 251 1 188 2 288 2 95 1 139 1 253 1 223 2 266 1 63 1 97 1 154 1 
45 1 173 1 240 1 192 1 50 1 233 1 259 1 338 1 188 1 288 1 95 1 235 1 139 1 223 2 266 1 97 1 154 1 
173 1 12 1 50 1 337 1 233 1 103 1 251 1 26 1 252 1 188 1 288 1 199 1 139 1 118 1 
45 1 173 1 240 1 192 1 50 1 233 1 259 1 338 1 251 1 188 1 288 1 95 1 139 1 223 2 266 1 63 1 97 1 154 1 
25 1 
1 1 298 1 152 1 141 1 102 1 190 1 364 1 
268 1 87 1 1 1 4 1 364 1 197 1 93 1 94 1 71 1 168 1 42 1 152 2 310 1 132 1 265 1 190 1 64 1 
1 2 87 5 134 1 50 3 193 2 337 2 52 2 4 4 137 1 339 1 197 4 298 1 94 4 253 1 199 1 143 6 9 2 98 2 12 8 255 1 102 1 61 2 261 2 152 8 310 12 265 4 313 2 216 1 315 2 268 3 320 6 362 2 321 2 364 9 165 2 71 6 76 1 370 1 173 3 35 1 124 2 233 2 286 2 42 5 187 2 127 2 188 3 288 3 378 1 84 2 131 2 132 5 293 3 190 8 
315 2 87 1 268 1 1 2 320 5 52 1 4 2 364 8 249 1 339 1 197 2 94 2 71 3 143 5 9 2 98 2 229 1 346 1 345 1 261 2 83 1 42 1 187 2 351 1 152 5 330 1 131 1 310 6 132 1 353 1 265 2 238 1 311 1 313 2 190 5 
315 1 65 1 272 1 244 1 19 1 52 1 275 1 4 1 364 2 197 1 94 1 116 1 73 1 200 1 9 2 376 1 184 1 329 1 42 1 130 1 236 1 132 1 16 1 265 1 332 1 313 2 190 2 239 1 
1 1 4 1 102 1 364 1 197 1 298 1 94 1 152 1 265 1 190 1 
315 2 124 1 320 5 52 1 364 5 261 2 187 2 152 5 310 10 71 5 313 2 143 5 9 2 98 2 190 5 
1 1 87 1 268 1 42 1 152 1 132 1 
316 1 87 4 268 2 358 1 134 2 294 1 50 3 337 2 4 2 321 1 24 1 364 2 252 1 339 2 92 1 197 2 94 2 199 2 202 1 173 4 12 2 255 1 374 1 59 1 233 2 103 1 42 3 188 4 288 4 131 2 132 3 265 1 333 1 190 2 
47 1 158 1 50 1 337 1 275 3 321 1 23 2 68 1 116 2 199 1 73 3 200 2 278 1 144 1 173 1 11 1 302 1 12 1 256 1 145 1 147 1 233 1 285 1 376 2 15 1 209 1 349 1 188 1 288 1 264 1 16 1 239 2 
1 2 320 2 4 1 248 1 364 1 339 1 197 1 94 1 152 4 310 4 131 1 71 2 265 1 143 2 190 2 
204 1 44 1 189 1 
326 1 44 1 153 1 189 1 260 1 
204 1 44 1 189 1 
204 1 44 1 189 1 
44 1 56 1 189 1 
44 1 56 1 189 1 
44 1 56 1 189 1 
44 1 189 1 
105 1 228 1 
315 1 359 2 65 1 158 4 135 4 248 1 23 2 144 1 302 1 346 1 345 1 375 1 81 1 184 1 209 8 149 2 349 1 264 1 353 1 292 1 311 1 332 1 313 1 
315 1 359 2 65 1 158 5 90 1 135 6 248 1 23 4 227 1 98 1 144 2 302 2 346 2 345 1 375 1 231 1 81 1 184 1 209 11 149 3 187 1 349 2 264 2 353 1 292 1 332 1 311 1 313 2 
315 3 359 3 65 1 158 10 90 1 135 9 248 1 23 6 249 1 98 2 144 3 302 3 229 1 344 1 346 1 345 1 375 1 231 1 81 1 261 2 184 1 209 19 149 4 187 2 349 3 330 1 264 3 353 1 292 1 332 1 311 1 238 1 313 3 
315 2 359 3 65 1 158 7 90 1 135 10 248 1 23 6 249 1 98 2 144 3 302 3 344 1 229 1 346 1 345 1 375 1 231 2 81 1 261 1 184 1 209 17 149 5 187 2 349 3 330 1 264 3 353 1 292 1 332 1 311 1 238 1 313 3 
315 1 359 2 65 1 158 4 135 4 248 1 23 2 144 1 302 1 346 1 345 1 375 1 81 1 184 1 209 8 149 2 349 1 264 1 353 1 292 1 311 1 332 1 313 1 
315 2 359 1 158 6 135 6 23 2 249 1 98 2 144 1 302 1 229 1 346 1 345 1 231 1 261 2 209 12 149 2 187 2 349 1 330 1 264 1 353 1 292 1 311 1 238 1 313 2 
315 2 359 3 65 1 158 8 90 1 135 10 248 1 23 8 249 1 98 2 144 4 302 4 229 1 344 2 346 1 345 1 375 1 231 2 81 1 261 1 184 1 209 18 149 5 187 2 349 4 330 1 264 4 353 1 292 1 332 1 238 1 311 1 313 3 
315 2 359 3 158 7 135 9 23 8 249 1 98 3 144 4 302 4 229 1 344 2 346 1 345 1 231 3 261 2 209 16 149 6 187 3 349 4 330 1 264 4 353 1 292 1 238 1 311 1 313 3 109 1 
315 1 359 3 65 1 158 4 375 2 231 3 81 1 135 3 184 3 209 7 149 6 332 3 313 1 
315 2 359 3 65 1 158 8 135 10 248 1 23 8 249 1 98 2 144 4 302 4 229 1 344 2 346 1 345 1 375 1 231 1 81 1 261 1 184 1 209 18 149 4 187 2 349 4 330 1 264 4 353 1 292 1 332 1 238 1 311 1 313 3 109 1 
315 1 302 2 344 1 359 2 65 1 158 4 231 1 375 1 81 1 135 4 248 1 23 4 184 1 209 8 149 3 349 2 264 2 332 1 313 1 144 2 
315 1 359 2 65 1 158 3 375 1 81 1 135 3 248 1 184 1 149 2 209 6 141 1 332 1 313 1 
315 1 302 1 359 1 158 2 90 1 231 1 135 2 23 2 261 1 149 2 209 4 187 1 349 1 264 1 313 1 98 1 144 1 
315 1 359 1 345 1 346 2 158 4 231 1 135 3 261 1 209 7 149 2 187 1 311 1 227 1 313 1 98 1 
315 3 359 5 65 1 158 12 161 1 135 11 248 1 23 4 30 1 227 1 98 2 144 2 302 2 344 2 346 2 375 1 231 4 81 1 261 2 184 2 149 9 209 23 187 2 349 2 264 2 352 1 332 2 311 2 313 3 
209 1 346 1 158 1 
209 1 135 1 311 1 
302 1 315 1 359 2 158 3 124 1 90 1 231 1 135 3 23 2 261 1 209 6 149 3 187 1 349 1 264 1 313 1 98 1 144 1 
315 2 359 1 158 6 135 6 23 2 249 1 98 2 144 1 302 1 229 1 346 1 345 1 231 1 261 2 209 12 149 2 187 2 349 1 330 1 264 1 353 1 292 1 311 1 238 1 313 2 
315 1 359 1 65 1 158 3 231 1 135 3 184 1 209 6 149 2 332 1 313 1 
302 1 344 1 359 1 158 2 231 1 375 1 81 1 135 1 23 2 184 1 149 2 209 3 349 1 30 1 264 1 332 1 144 1 
302 1 315 2 359 3 65 1 158 5 231 2 135 5 23 2 184 2 149 5 209 10 329 1 349 1 264 1 292 1 332 2 313 2 144 1 
302 1 231 1 135 2 23 2 209 2 149 1 349 1 264 1 292 1 313 1 98 1 144 1 
315 1 302 1 359 1 158 2 231 1 135 2 23 2 261 1 149 2 209 4 187 1 349 1 264 1 292 1 313 1 98 1 144 1 
302 3 344 1 359 1 158 2 231 1 135 1 23 6 184 1 209 3 149 2 349 3 30 1 264 3 292 1 332 1 144 3 109 1 
315 5 241 1 359 7 65 2 158 18 49 1 90 1 135 16 248 1 23 10 30 1 140 1 227 1 98 3 144 5 302 5 344 2 346 4 345 1 375 1 231 5 81 1 261 3 184 3 209 34 149 12 187 3 349 5 264 5 292 1 332 3 311 3 313 5 109 1 
287 1 73 1 336 1 275 1 226 1 285 1 376 1 
122 1 80 1 336 1 275 1 82 1 285 1 376 1 198 1 287 1 73 1 142 1 226 1 
173 1 12 1 188 1 288 1 50 1 199 1 337 1 141 1 233 1 103 1 252 1 
173 1 12 1 145 1 50 1 337 1 147 1 363 1 275 2 321 1 233 1 285 1 376 1 188 1 116 1 288 1 199 1 73 2 239 1 
134 1 111 1 50 1 337 2 275 2 363 1 321 2 116 2 73 2 169 1 172 1 173 1 35 1 12 3 145 1 147 1 233 1 285 1 376 2 188 1 288 1 236 2 239 1 216 1 
134 1 111 1 50 1 337 2 275 2 363 1 321 2 196 1 116 2 73 2 169 1 172 1 173 1 35 1 12 3 147 1 233 1 285 1 376 2 188 1 288 1 236 2 239 1 216 1 
87 1 1 1 134 1 272 1 244 1 50 1 19 1 337 1 275 1 321 1 116 1 277 1 73 1 200 1 173 1 35 1 12 4 233 1 376 1 286 1 42 2 188 1 288 1 84 1 152 1 236 1 132 2 16 1 239 1 293 1 133 1 216 1 
87 1 1 1 134 1 272 1 244 1 50 1 19 1 337 1 275 1 321 1 165 1 116 1 73 1 200 1 173 1 35 1 12 4 233 1 376 1 286 1 42 2 188 1 288 1 84 1 152 1 236 1 132 2 16 1 239 1 293 1 216 1 
173 1 188 1 128 1 288 1 50 1 233 1 
316 1 173 7 12 3 51 1 50 3 374 1 337 2 347 1 321 1 233 2 69 1 366 1 62 1 128 1 188 6 222 1 288 7 95 1 253 1 199 2 76 1 
50 1 337 1 135 3 248 1 253 1 144 2 302 2 12 1 145 1 256 1 147 1 15 2 149 2 209 6 349 2 264 2 313 1 155 1 315 1 359 2 65 1 157 1 158 3 363 1 275 2 321 1 23 4 68 1 27 1 322 1 116 1 73 2 278 2 33 1 173 1 281 1 375 1 81 1 233 1 376 1 285 2 184 1 188 1 288 1 382 1 332 1 239 1 
1 1 87 2 268 1 193 1 362 1 4 2 364 1 197 2 365 1 165 1 298 1 94 2 199 1 173 1 12 2 255 1 102 1 286 1 42 3 188 1 127 1 152 1 288 1 84 1 132 3 265 2 190 1 293 1 
173 2 12 2 50 2 337 1 321 1 233 1 286 1 128 1 188 2 288 2 378 1 253 1 76 1 
173 4 271 1 12 1 50 1 337 1 103 1 233 1 252 1 188 4 288 4 199 1 253 1 120 1 
316 1 173 2 134 1 230 1 12 1 50 2 59 1 374 1 337 1 321 1 233 1 188 2 288 2 202 1 
45 1 173 1 188 1 288 1 50 1 199 1 223 1 233 1 97 1 338 1 
173 2 12 1 188 2 288 2 50 1 51 1 95 1 253 1 337 1 233 1 356 1 
173 5 134 1 12 3 51 1 50 2 337 2 103 1 233 2 252 1 69 1 62 1 188 4 288 5 199 1 253 1 120 1 
173 5 134 1 205 1 12 3 51 1 50 2 337 2 103 1 233 2 252 1 69 1 188 4 288 5 199 1 253 1 120 1 
173 1 12 1 50 1 337 1 147 1 363 1 275 2 321 1 233 1 285 1 376 1 196 1 188 1 116 1 288 1 199 1 73 2 239 1 
316 1 173 1 134 1 12 1 50 2 374 1 337 1 347 1 321 1 233 1 188 1 288 1 76 1 
146 1 275 1 376 1 41 1 138 1 73 1 54 1 314 1 343 1 
207 1 146 1 121 1 
41 1 367 1 146 1 285 1 343 1 
1 1 207 1 146 1 285 1 125 1 306 1 365 1 41 2 42 2 152 1 84 1 367 2 236 1 132 2 169 1 170 1 121 1 343 2 172 1 
18 1 319 1 160 1 141 1 
18 1 319 1 160 1 72 1 136 1 312 1 305 1 
350 1 39 1 72 1 
18 1 129 1 319 1 160 1 373 1 72 3 258 1 21 2 136 3 312 1 305 1 279 1 
18 1 342 1 319 1 160 1 72 2 194 1 136 2 312 1 305 1 
18 1 2 1 136 1 195 1 305 1 72 1 223 1 312 1 154 1 97 1 279 1 
18 1 160 1 72 1 136 1 312 1 305 1 279 1 
319 1 160 2 72 1 136 1 312 1 305 1 279 1 
18 1 206 1 160 1 328 1 136 2 305 2 114 1 72 2 312 2 279 1 
18 2 110 1 319 1 160 1 348 1 194 2 136 3 195 1 305 1 72 3 354 1 312 1 279 1 
18 1 45 1 319 1 160 1 194 1 136 2 305 1 72 2 223 2 237 1 266 1 312 1 154 1 97 1 279 1 
18 2 319 1 160 1 194 2 136 4 195 1 305 2 342 1 29 1 72 4 354 1 312 2 279 1 
18 1 319 1 160 1 72 1 136 1 312 1 305 1 279 1 
18 3 37 1 319 2 160 2 373 1 194 2 21 1 136 4 195 1 305 1 129 1 72 4 354 1 312 1 
18 1 156 1 319 1 160 1 101 1 194 1 136 2 305 1 150 1 72 2 312 1 279 1 
18 1 129 1 319 1 160 1 373 2 67 1 72 3 21 2 136 3 312 1 305 1 279 1 
18 2 36 2 113 1 284 1 
31 1 72 1 136 1 312 1 305 1 279 1 
18 1 319 1 160 1 72 2 194 1 348 1 136 2 312 1 305 1 279 1 
151 1 
18 1 319 1 160 1 72 1 136 1 312 1 305 1 279 1 
18 1 319 1 160 1 194 1 348 1 136 3 21 1 305 1 72 3 312 1 279 1 
18 1 37 1 354 1 195 1 
18 1 160 1 

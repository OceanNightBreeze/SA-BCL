#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 11 (117,247,357) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 150 166 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 150 166 234 53 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 91 275 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 3 1 211 1 315 1 104 9 289 1 124 1 340 3 264 6 291 4 217 1 265 2 318 2 242 5 295 1 41 1 83 1 177 2 178 2 374 1 251 1 131 2 330 2 139 1 46 1 306 2 282 9 120 1 
2 1 3 1 211 1 315 1 104 9 289 1 124 1 340 3 264 6 291 4 265 2 217 1 318 2 242 5 295 1 41 1 83 1 177 2 178 2 374 1 251 1 131 2 330 2 139 1 46 1 306 2 282 9 120 1 
2 1 3 1 211 1 315 1 104 10 289 1 124 1 340 4 264 7 291 5 265 2 217 1 318 2 242 6 295 1 41 1 83 1 177 2 178 2 374 1 251 1 131 2 330 2 139 1 46 1 306 2 282 10 120 1 
2 1 211 1 315 1 104 7 289 1 124 1 340 2 264 4 291 3 265 2 217 1 318 2 242 4 295 1 41 1 83 1 177 1 178 2 374 1 251 1 131 2 330 2 139 1 46 1 306 2 282 7 120 1 
177 2 178 1 3 1 251 1 104 4 289 1 124 1 340 1 264 3 291 2 330 1 265 1 318 1 46 1 306 1 282 4 120 1 242 3 
83 1 178 1 251 1 131 1 104 2 289 1 204 1 151 1 88 1 330 1 217 1 318 1 306 1 282 2 242 1 120 1 
178 2 374 1 251 1 131 1 104 3 289 1 340 1 264 1 291 1 318 2 282 3 120 1 242 2 
3 1 104 9 289 1 124 1 340 3 264 7 291 4 265 1 318 2 320 1 242 5 295 1 177 2 178 2 374 1 251 1 131 1 139 1 330 1 46 1 306 1 142 1 282 9 120 1 
3 1 104 9 289 1 124 1 340 3 264 7 291 4 265 1 318 2 320 1 242 5 295 1 177 2 178 2 374 1 251 1 131 1 139 1 330 1 46 1 306 1 142 1 282 9 120 1 
24 1 63 1 68 1 
68 1 308 2 230 1 
9 2 168 2 49 1 126 2 156 2 67 2 221 1 22 2 
93 2 261 1 167 1 168 2 49 1 313 1 212 1 52 1 31 1 73 1 174 1 33 1 8 2 9 3 106 1 126 2 221 1 153 1 193 2 371 1 296 1 62 1 112 1 130 1 156 3 157 1 224 2 277 2 133 1 225 1 200 1 201 1 182 1 19 1 305 1 206 1 67 2 380 1 22 2 
9 1 18 1 167 1 168 1 126 1 170 1 156 1 67 1 221 1 22 1 
0 1 70 1 232 1 167 1 98 1 63 1 235 1 156 1 159 1 9 1 67 1 68 1 241 1 222 1 
0 1 70 2 167 1 168 1 63 1 235 1 156 1 159 1 9 1 126 1 67 1 68 1 241 1 222 2 22 1 
70 1 316 1 233 1 360 1 222 1 
70 2 63 1 233 1 68 1 360 1 332 1 222 2 103 1 
70 1 360 1 222 1 
70 1 167 1 168 1 233 1 170 1 156 1 9 1 18 1 126 1 319 1 67 1 222 1 221 1 22 1 
68 1 
70 2 63 1 233 1 68 1 360 1 39 1 222 2 103 1 
368 2 70 5 343 1 63 1 233 2 14 2 360 2 180 1 30 1 103 1 327 1 376 1 328 2 354 1 140 1 21 1 68 1 310 1 222 5 
24 1 49 1 
168 1 49 2 156 2 338 1 9 2 126 1 67 2 22 1 322 1 
298 1 71 1 101 1 
93 1 261 1 62 1 49 1 156 1 73 1 74 1 277 1 133 1 225 1 201 1 8 1 200 1 9 1 305 1 206 1 
261 1 93 1 62 1 298 1 156 2 262 1 73 1 277 1 133 1 225 1 200 1 201 1 8 1 9 2 305 1 215 1 126 1 206 1 67 1 22 1 
161 1 9 5 20 1 232 1 168 1 215 2 49 1 126 4 156 5 67 5 262 1 22 4 60 1 322 1 
9 2 18 1 167 1 126 2 156 2 67 2 253 1 22 2 
9 3 168 1 215 1 49 1 126 3 156 3 67 3 22 3 
9 1 18 1 167 1 126 1 156 1 67 1 22 1 
9 1 167 1 168 1 126 1 156 1 67 1 22 1 338 1 322 1 
0 1 261 1 70 1 93 1 167 1 168 2 49 1 358 1 288 1 235 1 262 1 52 1 31 1 73 1 174 1 33 1 8 1 9 4 215 1 126 3 241 1 222 1 221 1 322 1 193 2 371 1 296 1 62 1 130 1 156 4 157 1 159 1 224 1 277 1 133 1 225 1 200 1 182 1 201 1 19 1 305 1 206 1 67 3 22 3 
161 1 9 2 232 1 215 1 49 1 126 1 156 2 67 2 22 1 
0 1 70 1 167 1 168 1 288 1 235 1 156 3 262 1 159 1 9 3 215 2 126 3 67 3 90 1 68 1 241 1 222 1 22 3 322 1 
168 1 298 1 71 1 156 2 9 2 215 1 126 2 67 2 22 2 322 1 
93 1 261 1 62 1 49 1 156 1 277 1 73 1 133 1 225 1 201 1 8 1 200 1 9 1 305 1 206 1 
93 1 62 1 49 1 156 1 113 1 277 1 73 1 133 1 201 1 8 1 200 1 9 1 305 1 206 1 109 1 
71 1 212 1 188 1 52 1 101 1 31 1 174 1 75 1 147 1 150 1 175 1 127 1 38 1 193 2 371 1 296 1 298 1 195 1 130 1 157 2 224 3 351 1 304 1 280 1 
9 1 167 1 126 1 235 1 156 1 67 1 253 1 22 1 
155 1 357 1 
155 1 357 1 
155 1 247 1 357 1 11 1 
155 1 247 1 357 1 11 1 
247 1 11 1 
155 1 349 1 357 1 
155 1 247 1 357 1 11 1 
155 1 357 1 117 1 
155 1 349 1 357 1 
155 1 349 1 357 1 
155 1 357 1 258 1 
155 1 357 1 258 1 
155 1 357 1 258 1 
92 1 70 1 25 1 49 1 357 1 213 1 9 2 126 2 267 1 81 1 222 1 154 1 155 1 341 1 272 1 273 1 156 2 255 1 377 1 117 1 67 2 228 1 22 2 283 1 
70 2 167 1 168 1 357 2 50 1 170 1 146 1 213 2 9 1 79 1 37 1 126 1 319 1 222 2 221 1 154 2 155 2 272 2 156 1 273 1 252 1 18 1 86 1 352 1 67 1 228 2 283 2 22 1 165 1 
330 1 265 1 306 1 
330 1 151 1 306 1 
65 1 151 1 265 2 306 3 189 1 337 1 
65 1 151 1 265 1 306 2 189 1 15 1 
65 2 151 1 265 1 306 2 189 1 
166 1 1 1 70 5 25 1 285 1 359 1 233 4 360 1 30 3 103 1 77 1 149 2 150 1 175 1 222 5 128 1 244 1 368 1 341 1 194 1 63 1 14 1 376 1 328 1 377 1 351 1 354 1 280 1 69 1 68 1 308 1 
166 3 70 9 25 4 285 2 359 3 233 7 360 6 30 8 103 1 238 1 76 1 77 2 150 3 316 5 175 3 222 9 152 1 192 1 269 1 368 2 194 3 63 1 14 2 254 1 376 1 328 2 351 3 354 3 280 3 21 1 68 2 69 1 308 3 121 5 
166 1 70 3 25 1 285 1 233 2 359 1 30 3 77 1 149 1 150 1 175 1 128 1 222 3 244 1 368 1 194 1 63 1 14 1 328 1 351 1 354 1 280 1 21 1 68 2 308 2 230 1 
166 2 70 4 25 2 285 1 359 2 233 3 30 5 238 1 77 1 149 2 150 2 175 2 222 4 128 1 244 1 269 1 368 1 194 2 63 1 14 1 254 1 328 1 351 2 354 2 280 2 21 1 68 2 308 3 230 1 
226 1 24 1 73 1 
279 1 73 1 
10 1 
200 1 206 1 73 1 
260 1 73 1 
200 1 73 1 
200 1 363 1 226 2 257 1 206 1 73 3 
333 1 248 2 195 3 145 1 64 1 29 1 157 1 212 3 224 4 135 1 203 1 85 1 366 1 304 2 175 1 91 1 
333 1 248 2 195 3 145 1 64 1 29 1 157 1 212 3 224 4 135 1 203 1 85 1 366 1 304 2 175 1 91 1 
333 1 248 2 195 3 145 1 64 1 29 1 157 1 212 3 6 1 224 4 135 1 203 1 85 1 366 1 304 2 175 1 91 1 
166 3 333 2 145 2 29 1 100 1 236 1 212 12 52 1 314 1 150 3 366 2 367 1 266 1 175 4 193 2 371 1 296 1 248 3 195 6 64 2 130 1 157 13 224 25 132 3 134 4 135 1 203 2 85 1 87 1 351 3 304 4 280 3 91 1 209 1 
193 4 333 1 371 2 248 2 296 2 195 4 145 1 100 1 64 1 130 2 157 2 212 4 52 2 224 6 16 1 135 1 203 1 85 1 365 1 366 1 304 3 175 1 91 1 
93 1 337 1 263 1 104 2 8 1 289 1 264 1 105 1 125 1 151 1 265 1 318 1 242 1 243 1 12 1 369 1 178 1 251 1 131 1 301 1 277 1 133 1 347 1 136 1 330 1 305 1 306 2 282 2 120 1 143 1 
93 1 337 1 104 3 8 1 264 2 105 1 125 1 151 1 265 1 318 1 242 1 243 1 369 1 178 1 372 1 251 1 44 1 276 1 131 1 301 1 277 1 133 1 347 1 136 1 330 1 305 1 306 2 282 3 120 1 143 1 
93 1 337 1 104 2 8 1 264 2 105 1 151 1 265 1 242 1 243 1 251 1 44 1 276 1 131 1 301 1 277 1 133 1 347 1 136 1 305 1 330 1 306 2 282 2 120 1 143 1 
144 1 93 1 372 1 178 1 99 1 131 2 301 2 73 1 277 1 133 1 104 1 200 1 201 1 8 1 136 2 36 1 292 1 305 1 318 1 294 1 282 1 129 1 243 2 
93 1 337 1 104 1 8 1 289 1 105 1 125 1 151 1 265 1 318 1 243 1 12 1 369 1 178 1 44 1 131 1 301 1 277 1 133 1 347 1 136 1 330 1 305 1 306 2 282 1 143 1 
61 1 
0 1 93 2 232 1 98 1 99 1 235 1 51 2 102 2 103 3 8 2 9 1 241 1 342 2 110 2 111 1 13 1 63 1 14 1 156 1 159 1 196 1 160 1 200 1 201 2 162 2 305 1 353 1 354 2 67 1 68 2 308 2 70 5 167 1 210 1 360 6 30 2 73 1 362 1 77 1 364 1 36 1 220 1 222 5 368 1 42 2 45 2 375 1 277 2 133 1 376 1 328 1 329 1 89 4 184 1 230 2 
0 1 70 3 167 1 232 1 111 1 13 1 98 1 235 1 156 1 360 2 102 1 159 1 362 1 103 1 196 1 9 1 89 2 67 1 241 1 220 1 39 1 222 3 
0 1 70 3 232 1 167 1 98 1 235 1 360 1 362 1 103 1 9 1 241 1 220 1 39 1 222 3 111 1 13 1 63 1 156 1 45 1 159 1 196 1 89 3 67 1 68 1 
0 1 70 3 232 1 167 1 98 1 235 1 360 2 102 1 362 1 103 1 9 1 241 1 220 1 39 1 222 3 42 1 111 1 13 1 63 1 156 1 45 1 159 1 196 1 89 3 67 1 68 1 
0 1 70 5 232 1 167 1 98 1 235 1 51 2 360 7 30 1 102 4 361 1 362 1 103 3 9 1 241 1 220 1 39 1 222 5 59 1 245 1 368 1 42 4 342 2 110 2 111 1 13 1 63 5 84 1 14 1 156 1 375 1 45 4 158 1 159 1 196 1 160 1 376 1 162 2 328 1 354 1 89 6 67 1 68 5 230 2 
0 1 232 1 98 1 235 1 51 2 102 2 103 2 9 1 241 1 342 2 110 2 111 1 13 1 63 1 156 1 14 1 159 1 196 1 160 1 162 2 354 1 67 1 68 2 308 2 70 4 167 1 360 4 30 1 362 1 220 1 222 4 368 1 42 2 375 1 45 2 376 1 328 1 89 4 184 1 230 2 
0 1 70 4 232 1 167 1 98 1 235 1 51 2 360 4 102 2 30 1 362 1 361 1 103 2 9 1 241 1 220 1 222 4 59 1 245 1 368 1 42 2 342 2 110 2 111 1 13 1 63 1 156 1 14 1 45 2 375 1 159 1 196 1 160 1 376 1 162 2 328 1 354 1 89 4 67 1 68 1 230 2 
0 1 70 4 232 1 167 1 98 1 235 1 51 2 360 4 102 2 30 1 362 1 361 1 103 2 9 1 241 1 220 1 222 4 59 1 245 1 368 1 42 2 342 2 110 2 111 1 13 1 63 1 156 1 14 1 45 2 375 1 159 1 196 1 160 1 376 1 162 2 328 1 354 1 89 4 67 1 68 1 230 2 
0 1 70 4 232 1 167 1 312 2 286 1 98 1 235 1 360 4 336 1 102 2 30 1 362 1 103 2 9 1 241 1 220 1 222 4 59 1 368 1 42 2 342 2 111 1 13 1 63 1 156 1 299 1 14 1 45 2 159 1 196 1 160 1 376 1 162 2 328 1 350 2 354 1 89 4 67 1 68 1 308 2 
0 1 70 4 232 1 167 1 98 1 235 1 51 2 360 5 30 1 102 3 362 1 361 1 103 2 9 1 241 1 220 1 222 4 59 1 245 1 368 1 42 3 342 2 110 2 111 1 13 1 63 1 14 1 156 1 375 1 45 3 158 1 159 1 196 1 160 1 376 1 162 2 328 1 354 1 89 5 67 1 68 1 230 2 
0 1 70 4 232 1 167 1 98 1 235 1 51 2 360 5 30 1 102 3 362 1 361 1 103 2 9 1 241 1 220 1 222 4 59 1 245 1 368 1 42 3 342 2 110 2 111 1 13 1 63 1 14 1 156 1 375 1 45 3 158 1 159 1 196 1 160 1 376 1 162 2 328 1 354 1 89 5 67 1 68 1 230 2 
0 1 232 1 286 1 98 1 235 1 102 2 103 2 9 1 241 1 342 2 111 1 13 1 63 1 156 1 14 1 159 1 196 1 160 1 162 2 350 2 354 1 67 1 68 1 308 2 70 4 167 1 312 2 360 4 30 1 362 1 220 1 222 4 368 1 42 2 45 2 376 1 328 1 89 4 184 1 
193 2 333 1 24 1 371 1 248 1 296 1 49 1 298 1 195 2 71 1 130 1 157 1 212 2 52 1 101 1 224 3 31 1 174 1 135 1 203 1 85 1 304 2 175 1 127 1 91 1 
166 2 49 1 71 2 212 6 314 1 52 2 101 10 31 1 174 2 150 2 106 1 191 1 367 1 55 1 175 2 193 4 371 2 373 1 296 2 195 1 298 10 130 2 157 8 224 14 132 3 199 1 134 3 19 1 304 1 351 2 280 2 118 1 
261 1 93 1 49 1 71 1 171 1 262 1 212 1 52 1 73 1 74 1 31 1 174 1 8 1 9 2 106 1 215 1 126 1 55 1 218 1 193 2 371 1 62 1 296 1 130 1 156 2 157 1 277 1 224 2 133 1 225 1 200 1 201 1 19 1 305 1 205 1 206 1 67 1 22 1 
333 1 93 1 231 1 49 1 52 3 101 5 8 1 9 3 150 2 106 1 107 1 55 1 193 6 248 1 296 3 62 2 297 2 195 4 298 5 156 3 157 8 201 1 200 2 203 1 19 1 305 2 351 2 304 4 206 2 67 1 164 2 22 1 166 2 261 2 28 2 71 5 262 1 212 7 31 3 73 2 174 3 32 2 215 1 126 1 175 3 371 3 130 3 277 1 224 15 133 2 225 2 135 1 182 2 85 1 280 2 91 1 
93 7 27 1 99 1 212 1 52 2 73 3 31 2 263 1 174 2 8 8 9 1 106 1 36 1 215 1 126 1 127 1 57 1 153 2 193 4 43 1 223 1 371 2 296 2 249 1 44 1 156 1 130 2 157 1 302 1 277 8 224 2 133 2 201 2 200 2 19 1 305 2 116 1 67 1 22 1 
166 1 193 2 270 1 371 1 296 1 168 1 156 1 130 1 212 2 52 1 224 2 31 1 174 1 9 1 150 1 126 1 175 1 67 1 55 1 22 1 322 1 
193 2 371 1 296 1 130 1 212 1 52 1 224 1 31 1 174 1 150 1 127 1 175 1 38 1 
193 2 371 1 296 1 195 1 298 1 71 1 130 1 157 2 52 1 101 1 224 2 31 1 174 1 147 1 304 1 351 1 280 1 127 1 
166 1 71 1 212 1 52 1 101 1 31 1 174 1 150 1 175 1 127 1 193 2 371 1 296 1 298 1 195 1 130 1 157 2 224 3 351 1 304 1 280 1 
193 2 223 1 371 1 296 1 130 1 212 1 52 1 224 1 31 1 174 1 150 1 175 1 38 1 
193 2 223 1 371 1 296 1 195 1 298 1 71 1 130 1 157 2 52 1 101 1 224 2 31 1 174 1 147 1 304 1 351 1 280 1 
166 1 71 1 212 1 52 1 101 1 31 1 174 1 150 1 175 1 193 2 223 1 371 1 296 1 298 1 195 1 130 1 157 2 224 3 351 1 304 1 280 1 
166 1 71 1 212 1 52 1 101 1 31 1 174 1 150 1 175 1 193 2 371 1 296 1 298 1 195 1 130 1 157 2 224 3 351 1 304 1 280 1 
261 1 93 1 49 1 212 1 52 1 73 1 31 1 174 1 8 1 9 1 106 1 193 2 371 1 62 1 296 1 156 1 130 1 157 1 224 2 277 1 133 1 225 1 200 1 182 1 201 1 19 1 305 1 206 1 
93 1 49 1 212 1 52 1 73 1 31 1 174 1 8 1 9 1 106 1 109 1 193 2 371 1 62 1 296 1 113 1 156 1 130 1 157 1 224 2 181 1 277 1 133 1 200 1 201 1 19 1 305 1 206 1 
166 1 71 1 212 1 52 1 101 1 31 1 174 1 150 1 175 1 55 1 193 2 371 1 296 1 298 1 195 1 130 1 157 2 224 3 351 1 304 1 280 1 
166 1 261 1 93 1 71 1 212 1 52 1 101 1 73 1 31 1 263 1 174 1 8 1 9 1 150 1 175 1 193 2 371 1 62 1 296 1 195 1 298 1 156 1 130 1 157 2 224 3 277 1 133 1 225 1 182 1 200 1 304 1 351 1 305 1 280 1 206 1 164 1 
166 1 168 1 212 1 52 1 31 1 174 1 9 1 150 1 126 1 55 1 175 1 322 1 193 2 371 1 296 1 130 1 156 1 157 1 224 2 138 1 351 1 280 1 67 1 22 1 
166 2 97 1 212 4 314 1 52 2 150 2 365 1 293 1 367 1 175 2 108 1 193 4 371 2 271 1 296 2 195 2 179 1 130 2 157 7 224 11 132 1 134 2 183 1 351 2 304 2 379 1 280 2 185 1 
166 3 97 2 234 1 100 1 212 10 52 2 314 2 53 1 150 3 365 1 293 4 175 3 219 1 82 1 193 4 371 2 271 2 296 2 195 1 274 1 130 2 157 14 224 24 132 2 134 2 17 1 278 1 183 1 304 1 351 3 280 3 379 1 185 1 
166 2 97 1 212 5 314 1 52 2 150 2 365 1 293 2 367 1 175 2 219 1 193 4 371 2 271 1 296 2 195 1 179 1 130 2 157 8 224 13 132 1 134 2 183 1 351 2 304 1 379 1 280 2 185 1 
166 2 97 1 212 5 314 1 52 2 150 2 365 1 293 2 367 1 175 2 219 1 193 4 371 2 271 1 296 2 195 1 179 1 130 2 157 8 224 13 132 1 134 2 183 1 351 2 304 1 379 1 280 2 185 1 
166 7 333 1 97 1 234 1 212 17 314 2 52 1 53 1 150 7 365 1 293 3 367 2 175 8 219 1 82 1 193 2 371 1 248 1 271 1 296 1 195 6 274 1 130 1 157 22 224 39 132 4 199 2 134 4 135 1 17 1 203 1 278 1 85 1 183 1 351 7 304 6 379 1 280 7 91 1 185 1 
155 1 35 1 357 1 228 1 56 1 229 1 213 1 58 1 283 1 154 1 
255 1 117 1 
155 1 370 1 357 1 207 1 228 1 213 1 114 1 283 1 154 1 
349 1 309 1 
258 1 250 1 326 1 
70 1 167 1 168 1 357 1 50 1 170 1 146 1 213 1 9 1 79 1 37 1 126 1 319 1 222 1 221 1 154 1 155 1 272 2 156 1 273 1 252 1 18 1 86 1 352 1 67 1 228 1 283 1 22 1 165 1 
70 1 167 1 168 1 357 1 50 1 170 1 146 1 213 1 9 1 79 1 37 1 126 1 319 1 222 1 221 1 154 1 155 1 272 2 156 1 273 1 252 1 18 1 86 1 352 1 67 1 228 1 283 1 22 1 165 1 
70 1 167 1 168 1 357 1 50 1 170 1 146 1 213 1 9 1 79 1 37 1 126 1 319 1 222 1 221 1 154 1 155 1 272 2 156 1 273 1 252 1 18 1 86 1 352 1 67 1 228 1 283 1 22 1 165 1 
349 1 326 1 309 1 
349 1 326 1 309 1 
258 1 250 1 
258 1 250 1 326 1 
92 1 267 1 
92 1 70 1 25 1 49 1 357 1 233 1 213 1 9 2 79 1 78 1 126 2 267 1 81 1 222 1 154 1 155 1 341 1 272 1 156 2 252 1 255 1 377 1 117 1 67 2 228 1 283 1 22 2 
93 2 4 1 212 1 52 1 73 1 31 1 174 1 8 2 290 1 9 2 106 1 240 1 55 1 153 2 193 2 371 1 296 1 249 1 156 2 130 1 157 1 277 2 224 2 133 1 200 1 348 1 19 1 305 1 331 1 116 1 67 2 
93 2 95 1 369 1 44 1 123 1 337 1 277 2 346 1 133 1 263 1 8 2 347 1 136 1 330 1 151 1 305 1 265 1 306 2 143 1 
93 1 311 1 369 1 44 1 123 1 337 1 277 1 133 1 8 1 347 1 136 1 330 1 151 1 305 1 265 1 306 2 143 1 
93 1 99 1 73 1 277 1 346 1 133 1 200 1 201 1 8 1 136 1 36 1 305 1 129 1 246 1 
93 1 95 1 369 1 44 1 123 1 337 1 277 1 346 1 133 1 8 1 347 1 136 1 330 1 151 1 305 1 265 1 306 2 143 1 
5 1 
24 1 63 1 354 1 68 1 180 1 30 1 310 1 
368 1 70 1 110 1 63 1 14 1 51 1 360 1 375 1 30 1 103 1 376 1 328 1 354 1 68 2 308 1 230 1 222 1 
93 1 103 3 237 1 8 1 148 2 150 2 241 2 194 4 297 2 63 1 345 1 14 3 197 2 200 1 201 1 305 2 257 1 351 2 354 5 206 1 307 1 68 5 308 8 166 2 70 5 359 4 210 1 360 5 30 8 73 6 77 2 80 2 175 2 321 2 222 5 368 3 325 2 277 1 133 1 376 3 328 3 226 2 279 3 280 2 48 2 230 4 
166 1 368 1 194 3 359 3 234 1 14 1 314 1 30 2 132 1 134 1 17 1 376 1 328 1 150 1 53 1 354 3 175 1 68 2 308 4 230 2 
368 1 333 1 70 1 14 1 275 1 30 2 376 1 328 1 203 1 354 2 280 1 175 1 91 1 48 1 222 1 245 1 
368 1 63 1 14 1 180 1 30 1 376 1 328 1 354 1 68 1 310 1 
166 1 194 1 359 1 30 2 150 1 351 1 354 1 280 1 175 1 48 1 68 1 308 2 230 1 
70 1 63 1 68 1 360 1 222 1 103 1 
93 4 70 3 287 1 99 1 210 2 360 4 7 2 30 2 73 1 103 2 190 1 77 2 8 4 364 1 36 1 239 1 222 3 368 2 14 2 277 4 133 1 200 1 376 1 201 2 328 2 329 1 305 1 354 2 21 1 
93 1 261 1 168 2 49 1 52 1 73 1 31 1 174 1 8 1 33 1 9 3 126 2 221 1 193 2 371 1 296 1 62 1 130 1 156 3 157 1 224 1 277 1 133 1 225 1 201 1 182 1 200 1 19 1 305 1 206 1 67 2 22 2 
368 1 248 1 194 2 359 2 63 2 14 1 210 1 30 1 77 1 376 1 328 1 354 2 68 4 308 4 230 2 
47 1 213 1 283 1 
267 1 281 1 56 1 213 1 283 1 
47 1 213 1 283 1 
47 1 213 1 283 1 
334 1 213 1 283 1 
334 1 213 1 283 1 
334 1 213 1 283 1 
213 1 283 1 
155 1 357 1 
193 4 333 1 371 2 248 1 296 2 195 3 130 2 100 1 157 2 212 3 52 2 224 5 135 1 203 1 85 1 366 1 304 2 175 1 91 1 
333 1 24 1 248 1 195 2 157 1 212 2 224 3 135 1 203 1 85 1 304 2 175 1 91 1 
193 2 166 1 371 1 296 1 195 1 130 1 157 2 212 1 52 1 224 3 150 1 304 1 351 1 280 1 175 1 356 1 
166 1 195 1 157 4 212 2 314 1 224 6 132 1 134 2 150 1 304 1 351 1 367 1 280 1 175 1 
166 2 333 2 100 2 212 8 52 2 150 2 366 2 367 1 175 3 193 4 371 2 248 1 296 2 195 7 130 2 157 10 224 18 132 2 134 2 199 1 135 1 203 2 85 1 303 1 351 2 304 5 280 2 91 1 118 1 
157 1 224 1 134 1 
212 1 224 1 132 1 
193 2 166 1 371 1 296 1 297 1 195 2 130 1 157 3 212 2 52 1 224 5 150 1 351 1 304 2 280 1 175 1 356 1 
166 2 234 1 212 4 314 1 52 1 53 1 150 2 365 1 175 2 193 2 371 1 296 1 195 1 130 1 274 1 157 6 224 10 132 1 134 1 17 1 278 1 351 2 304 1 280 2 
175 1 212 1 91 1 224 1 
193 2 333 1 371 1 296 1 195 2 100 1 130 1 212 1 157 2 52 1 224 3 135 1 203 1 85 1 303 1 366 1 304 1 
333 1 195 3 275 1 212 2 157 2 224 4 203 1 304 2 366 1 280 1 175 2 91 1 
193 2 371 1 296 1 130 1 212 1 52 1 224 1 150 1 365 1 175 1 
193 2 166 1 371 1 296 1 195 1 130 1 157 2 212 1 52 1 224 3 150 1 365 1 304 1 351 1 280 1 175 1 
193 6 333 1 371 3 296 3 195 2 100 1 179 1 130 3 157 2 212 1 52 3 224 3 203 1 303 1 365 1 304 1 366 1 
166 3 333 2 100 2 236 1 212 11 314 1 52 5 150 3 365 1 366 2 367 1 175 5 193 10 371 5 248 1 296 5 195 6 179 1 130 5 157 14 224 25 132 3 134 4 135 1 203 2 85 1 303 1 87 1 351 3 304 4 280 3 91 2 209 1 356 1 
333 1 212 3 314 1 52 1 53 1 365 1 175 1 193 2 371 1 248 1 296 1 195 2 130 1 157 2 224 5 132 1 134 1 135 1 203 1 85 1 304 2 91 1 
166 4 234 1 212 7 314 1 52 2 53 1 150 4 365 1 367 1 175 4 193 4 371 2 296 2 195 3 274 1 130 2 157 11 224 18 132 2 134 2 199 1 17 1 278 1 351 4 304 3 280 4 356 1 
166 2 333 1 234 1 100 1 212 6 314 1 52 3 53 1 150 2 365 1 175 3 193 6 371 3 248 1 296 3 195 3 130 3 274 1 157 8 224 14 132 1 134 1 135 1 17 1 203 1 278 1 85 1 351 2 304 3 280 2 91 1 356 1 
166 2 234 1 212 4 314 1 52 2 53 1 150 2 365 1 175 2 193 4 371 2 296 2 195 1 130 2 274 1 157 6 224 10 132 1 134 1 17 1 278 1 351 2 304 1 280 2 356 1 
333 1 212 3 314 1 52 1 53 1 365 1 175 1 193 2 371 1 248 1 296 1 195 2 130 1 157 2 224 5 132 1 134 1 135 1 203 1 85 1 304 2 91 1 
166 2 234 1 212 4 314 1 52 1 53 1 150 2 365 1 175 2 193 2 371 1 296 1 195 1 130 1 274 1 157 6 224 10 132 1 134 1 17 1 278 1 351 2 304 1 280 2 
166 2 234 1 100 1 212 4 314 1 52 3 53 1 150 2 365 1 175 2 193 6 371 3 296 3 195 1 274 1 130 3 157 7 224 11 132 1 134 1 17 1 278 1 351 2 304 1 280 2 356 1 
166 2 234 1 100 1 212 4 314 1 52 3 53 1 150 2 365 1 175 2 193 6 371 3 296 3 195 2 274 1 130 3 179 1 157 7 224 11 132 1 134 1 17 1 278 1 351 2 304 2 280 2 
333 2 248 1 195 7 275 1 157 2 212 4 224 6 135 1 203 2 85 1 304 4 366 3 280 1 175 3 91 2 
166 2 234 1 100 1 212 4 314 1 52 3 53 1 150 2 365 1 175 2 193 6 371 3 296 3 195 1 274 1 130 3 179 1 157 7 224 11 132 1 134 1 17 1 278 1 351 2 304 1 280 2 
161 1 9 1 232 1 49 1 66 1 156 1 67 1 
232 1 187 1 49 1 156 1 161 1 9 1 54 1 259 1 66 1 67 1 208 1 23 1 
200 1 8 1 201 1 24 1 93 1 36 1 305 1 99 1 73 1 277 1 133 1 
93 1 261 1 62 1 49 1 156 2 73 1 277 1 133 1 200 1 201 1 8 1 9 2 305 1 215 1 126 1 206 1 67 1 22 1 
0 1 93 1 261 1 167 1 62 1 49 1 235 1 156 2 7 1 73 3 277 1 133 1 200 2 8 1 9 2 305 1 215 1 126 2 206 2 67 2 260 1 268 1 22 1 
0 1 93 2 167 1 62 1 49 1 235 1 156 2 113 1 7 1 73 3 277 2 133 1 200 2 8 2 9 2 115 1 305 1 215 1 126 2 206 2 67 2 260 1 268 1 22 1 
93 3 70 2 360 1 7 1 172 1 73 4 8 3 241 1 222 2 268 1 63 1 277 3 133 1 200 1 201 1 115 1 226 1 305 1 279 1 378 1 206 1 68 1 260 1 
70 2 93 3 63 1 360 1 7 1 277 3 73 4 197 1 133 1 201 1 200 1 8 3 115 1 226 1 305 1 279 1 206 1 68 1 241 1 260 1 222 2 268 1 
8 1 93 1 305 1 277 1 302 1 133 1 
43 1 93 6 249 1 27 1 44 1 173 1 302 1 277 7 73 3 263 1 133 2 201 2 8 7 200 2 214 1 256 1 257 1 305 3 206 1 153 1 57 1 
333 1 93 1 261 1 49 1 28 1 71 1 212 2 52 2 101 1 73 1 31 2 174 2 263 1 8 1 9 2 215 1 126 1 175 1 55 1 193 4 371 2 248 1 62 1 296 2 298 1 195 2 130 2 156 2 157 1 224 3 277 1 133 1 225 1 135 1 200 1 182 1 203 1 348 1 85 1 304 2 305 1 206 1 67 1 91 1 164 1 22 1 
93 1 70 3 233 1 360 2 30 1 73 2 103 1 190 1 8 1 80 1 321 1 241 1 222 3 368 2 325 1 63 1 14 2 180 1 277 1 197 1 201 1 376 2 328 2 226 1 279 1 354 1 68 1 310 1 
93 2 302 1 277 2 73 2 263 1 133 1 237 1 8 2 200 1 226 1 257 1 305 2 206 1 
93 4 99 1 277 4 73 1 263 1 133 1 201 1 8 4 200 1 115 1 227 1 36 1 305 1 
93 2 335 1 7 1 72 1 173 1 277 2 73 1 133 1 8 2 200 1 256 1 305 2 206 1 119 1 
347 1 8 1 201 1 93 1 330 1 151 1 305 1 306 1 277 1 133 1 
200 1 8 2 93 2 305 1 249 1 240 1 44 1 73 1 277 2 133 1 263 1 
93 4 27 1 249 1 99 1 7 1 277 5 73 3 263 1 133 2 201 1 8 5 200 2 227 1 36 1 305 2 57 1 
93 4 249 1 99 1 7 1 277 5 73 3 263 1 133 2 201 1 8 5 200 2 227 1 36 1 137 1 305 2 57 1 
93 1 62 1 49 1 156 2 113 1 73 1 277 1 133 1 200 1 201 1 8 1 9 2 305 1 215 1 126 1 206 1 67 1 22 1 
93 1 7 1 173 1 277 1 73 1 133 1 8 1 200 1 214 1 256 1 257 1 305 2 206 1 
339 1 34 1 49 1 122 1 186 1 
0 1 284 1 324 1 70 2 167 1 49 1 63 1 233 1 288 1 235 1 122 2 159 1 34 2 339 2 141 1 68 1 241 1 222 2 186 1 
9 1 290 1 34 1 331 1 4 1 122 1 156 1 67 1 186 1 
324 1 141 1 186 1 
24 1 251 1 242 1 120 1 
178 1 318 1 251 1 282 1 242 1 120 1 104 1 
131 1 243 1 104 1 
83 2 94 1 26 1 178 1 251 1 104 3 289 1 317 1 318 1 282 3 242 1 120 1 
264 1 177 1 178 1 318 1 251 1 282 2 242 1 120 1 104 2 
178 1 104 1 289 1 291 1 330 1 265 1 318 1 46 1 306 1 282 1 242 1 
289 1 178 1 318 1 251 1 282 1 242 1 104 1 
289 1 178 1 318 1 251 2 282 1 120 1 104 1 
289 1 344 1 178 2 318 2 251 1 282 2 381 1 242 1 40 1 104 2 
295 1 178 1 251 1 104 3 289 1 340 1 264 2 291 1 139 1 318 1 282 3 120 1 242 2 
178 1 251 1 337 1 104 2 289 1 264 1 151 1 216 1 330 1 265 1 318 1 306 2 282 2 242 1 120 1 
177 1 178 2 3 1 251 1 104 4 289 1 340 1 264 2 291 1 318 2 282 4 120 1 242 2 
289 1 178 1 318 1 251 1 282 1 242 1 120 1 104 1 
83 1 26 1 178 1 251 2 104 4 340 1 264 2 317 1 291 1 318 1 355 1 282 4 120 2 242 3 
178 1 251 1 300 1 104 2 289 1 264 1 318 1 142 1 282 2 176 1 242 1 120 1 
83 2 26 1 178 1 169 1 251 1 104 3 289 1 317 2 318 1 282 3 242 1 120 1 
202 1 242 2 323 2 198 1 
289 1 96 1 178 1 318 1 282 1 104 1 
289 1 264 1 139 1 178 1 318 1 251 1 282 2 242 1 120 1 104 2 
163 1 
289 1 178 1 318 1 251 1 282 1 242 1 120 1 104 1 
289 1 83 1 264 1 139 1 178 1 318 1 251 1 282 3 242 1 120 1 104 3 
340 1 291 1 355 1 242 1 
251 1 242 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 61 (355,363) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 61 (355,363) (355,363) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 179 317 19 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 102 212 141 285 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 61 (355,363) (355,363) 9 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
193 2 294 1 115 4 116 1 24 9 324 2 226 1 196 1 277 1 169 5 30 1 32 1 58 2 79 1 206 1 335 1 129 1 262 2 187 9 38 2 42 3 269 2 248 1 381 2 68 1 43 1 191 6 69 1 
193 2 294 1 115 4 116 1 24 9 324 2 226 1 196 1 277 1 169 5 30 1 32 1 58 2 79 1 206 1 335 1 129 1 262 2 187 9 38 2 42 3 269 2 248 1 381 2 68 1 43 1 191 6 69 1 
193 2 294 1 115 5 116 1 24 10 324 2 226 1 196 1 277 1 169 6 30 1 32 1 58 2 79 1 206 1 335 1 129 1 262 2 187 10 38 2 42 4 269 2 248 1 381 2 68 1 43 1 191 7 69 1 
193 2 294 1 115 3 116 1 24 7 324 1 226 1 196 1 277 1 169 4 30 1 32 1 58 2 79 1 206 1 335 1 129 1 262 2 187 7 38 2 42 2 269 2 248 1 381 2 68 1 191 4 69 1 
193 1 294 1 115 2 335 1 24 4 262 1 324 2 196 1 187 4 169 3 38 1 42 1 269 1 248 1 43 1 191 3 69 1 58 1 
233 1 193 1 294 1 206 1 249 1 335 1 24 2 129 1 262 1 73 1 187 2 169 1 38 1 269 1 248 1 381 1 
193 2 79 1 294 1 115 1 335 1 24 3 187 3 169 2 42 1 269 2 248 1 381 1 191 1 
193 2 115 4 294 1 116 1 24 9 324 2 196 1 169 5 125 1 32 1 58 1 79 1 335 1 262 1 210 1 187 9 38 1 42 3 269 2 248 1 381 1 191 7 43 1 69 1 
193 2 115 4 294 1 116 1 24 9 324 2 196 1 169 5 125 1 32 1 58 1 79 1 335 1 262 1 210 1 187 9 38 1 42 3 269 2 248 1 381 1 191 7 43 1 69 1 
120 1 36 1 208 1 
271 1 102 2 208 1 
197 2 314 1 112 2 235 2 145 1 366 2 23 2 174 2 
138 1 112 3 47 1 114 1 71 1 224 1 366 3 4 1 250 1 23 2 296 2 7 2 325 1 197 2 253 1 168 1 28 1 145 1 76 1 303 1 353 1 174 2 255 1 60 2 34 1 235 2 334 1 183 1 314 1 63 1 243 2 131 1 17 1 87 1 341 1 217 2 247 1 
197 1 314 1 363 1 112 1 235 1 61 1 366 1 23 1 174 1 
112 1 222 1 292 1 35 1 366 1 23 1 184 1 105 1 208 1 167 1 96 1 198 1 120 1 360 1 
112 1 222 1 235 1 35 1 366 1 23 1 184 1 105 2 208 1 197 1 96 1 198 2 120 1 360 1 174 1 
22 1 33 1 54 1 198 1 105 1 
192 1 22 1 33 1 198 2 120 1 77 1 105 2 208 1 
33 1 198 1 105 1 
197 1 314 1 363 1 355 1 22 1 112 1 235 1 198 1 61 1 366 1 23 1 105 1 174 1 
208 1 
192 1 22 1 33 1 198 2 120 1 105 2 208 1 185 1 
44 1 192 1 22 2 345 2 33 2 46 1 223 2 258 1 105 5 106 1 208 1 298 1 15 1 264 1 287 1 198 5 155 1 120 1 219 2 
145 1 36 1 
112 2 235 1 366 2 23 2 104 1 197 1 213 1 145 2 174 1 
377 1 216 1 171 1 
60 1 112 1 1 1 34 1 71 1 366 1 4 1 183 1 250 1 296 1 63 1 243 1 131 1 17 1 145 1 303 1 
197 3 112 3 235 1 145 1 366 3 23 3 251 1 174 3 
197 1 112 1 61 1 366 1 23 1 174 1 
197 1 112 1 213 1 235 1 360 1 366 1 23 1 104 1 174 1 
138 1 112 4 222 1 47 1 114 1 71 1 224 1 4 1 366 4 250 1 23 3 251 1 296 1 7 2 325 1 197 3 253 1 96 1 198 1 145 1 303 1 353 1 174 3 255 1 60 1 34 1 35 1 235 2 334 1 374 1 183 1 184 1 105 1 63 1 314 1 131 1 243 1 17 1 318 1 213 1 341 1 66 1 217 1 360 1 
197 1 167 1 112 2 145 1 366 2 23 2 56 1 251 1 174 1 
112 3 222 1 235 1 35 1 366 3 374 1 23 3 184 1 251 2 105 1 208 1 197 3 96 1 213 1 198 1 66 1 360 1 31 1 174 3 
112 2 235 1 366 2 23 2 251 1 197 2 213 1 216 1 171 1 174 2 
60 1 112 1 34 1 71 1 366 1 4 1 250 1 183 1 296 1 63 1 243 1 131 1 17 1 145 1 303 1 
305 1 60 1 112 1 34 1 71 1 366 1 4 1 250 1 183 1 296 1 326 1 243 1 17 1 145 1 303 1 
0 1 160 1 138 1 114 1 47 2 224 1 7 2 253 1 327 1 199 1 171 2 353 1 255 1 98 1 284 1 209 1 211 1 377 2 40 1 216 2 217 4 247 2 
197 1 222 1 112 1 360 1 162 1 366 1 23 1 174 1 
60 1 34 1 112 2 71 1 4 1 366 2 183 1 250 1 23 1 251 1 296 1 63 1 197 1 243 1 131 1 17 1 66 1 171 1 303 1 174 1 
112 5 235 1 366 5 23 5 251 2 197 4 167 1 133 1 213 1 145 1 66 1 75 1 56 1 174 4 
197 1 112 1 61 1 366 1 23 1 174 1 
10 1 202 1 
10 1 202 1 
74 1 62 1 
74 1 62 1 
74 1 62 1 
268 1 10 1 202 1 
268 1 10 1 202 1 
347 1 10 1 202 1 
130 1 74 1 230 1 10 2 62 1 202 2 
268 1 10 1 202 1 
10 1 297 1 202 1 
10 1 297 1 202 1 
10 1 297 1 202 1 
136 1 97 1 59 2 100 2 333 1 310 1 259 2 117 1 225 2 105 2 208 1 8 1 86 1 198 2 230 1 361 2 200 3 10 2 202 2 
97 1 59 1 112 2 45 1 100 1 207 1 347 1 366 2 23 2 225 1 261 1 252 1 105 1 165 1 197 2 29 1 198 1 145 1 215 1 361 1 200 1 10 1 202 1 174 2 
38 1 262 1 58 1 
38 1 249 1 262 1 
321 1 332 1 38 3 249 1 93 1 58 2 
332 1 38 2 352 1 249 1 93 1 58 1 
332 2 38 2 249 1 93 1 58 1 
291 1 160 1 192 1 22 4 345 1 113 1 46 1 364 1 45 1 271 1 223 1 348 2 349 1 252 1 165 1 227 1 198 5 55 2 120 1 199 1 33 1 284 1 102 3 258 2 105 5 208 2 211 1 15 3 64 2 359 1 219 1 220 1 
160 3 22 7 192 1 345 2 45 4 46 1 364 2 271 3 223 2 348 6 349 1 195 1 94 1 54 5 198 9 120 1 199 3 329 1 280 1 33 6 284 3 102 9 180 1 258 6 37 1 105 9 208 5 211 3 15 8 64 6 155 1 359 3 380 5 219 2 220 2 
22 2 160 1 345 1 113 1 364 1 45 1 271 2 223 1 348 2 227 1 198 3 55 1 120 1 199 1 284 1 102 4 258 2 105 3 208 3 211 1 15 3 64 2 155 1 359 1 219 1 220 1 
22 3 160 2 345 1 113 1 364 1 45 2 271 3 223 1 348 4 195 1 94 1 227 1 198 4 55 2 120 1 199 2 284 2 102 7 258 4 37 1 105 4 208 4 211 2 15 5 64 4 155 1 359 2 219 1 220 1 
319 1 183 1 36 1 
16 1 183 1 
85 1 
71 1 183 1 
71 1 273 1 319 2 183 3 250 1 83 1 
71 1 183 1 250 1 
91 1 183 1 
160 1 344 1 356 1 70 3 47 3 313 1 166 1 109 1 340 1 65 2 39 2 199 1 172 1 157 1 217 7 134 1 247 4 
160 1 344 1 356 1 70 3 47 3 313 1 166 1 109 1 340 1 65 2 39 2 199 1 172 1 157 1 217 7 134 1 247 4 
160 1 344 1 356 1 70 3 47 3 313 1 166 1 109 1 340 1 65 2 39 2 199 1 172 1 157 1 278 1 217 7 134 1 247 4 
344 1 160 5 161 1 138 2 70 8 114 2 47 18 7 4 166 2 143 1 199 5 172 1 353 2 369 1 176 1 11 4 255 2 127 1 284 4 356 5 12 1 82 2 313 2 240 1 211 4 109 1 340 2 65 3 39 3 88 4 359 4 157 2 217 37 134 1 20 1 247 19 
160 1 344 1 138 2 70 4 114 2 47 4 7 4 164 1 166 1 199 1 172 1 353 2 255 2 356 1 82 1 313 1 18 1 65 2 340 1 39 3 217 9 157 1 134 1 247 5 
221 1 193 1 321 1 294 1 323 1 3 1 249 1 4 1 24 2 296 1 169 1 148 1 330 1 58 1 331 1 282 1 60 1 81 1 335 1 262 1 108 1 243 1 17 1 187 2 38 2 269 1 110 1 248 1 381 1 191 1 
221 1 321 1 193 1 3 1 249 1 4 1 24 3 296 1 25 1 169 1 148 1 330 1 58 1 282 1 60 1 81 1 335 1 262 1 339 1 108 1 243 1 17 1 187 3 38 2 269 1 110 1 248 1 381 1 21 1 191 2 
221 1 321 1 249 1 4 1 24 2 296 1 25 1 169 1 148 1 330 1 58 1 60 1 81 1 335 1 262 1 108 1 243 1 17 1 187 2 38 2 110 1 248 1 381 1 191 2 21 1 
221 2 150 1 193 1 60 1 139 1 71 1 205 1 365 1 4 1 183 1 24 1 296 1 339 1 53 1 243 1 108 2 17 1 154 1 187 1 269 1 303 1 381 2 330 2 
282 1 221 1 321 1 193 1 60 1 294 1 81 1 323 1 249 1 3 1 4 1 24 1 25 1 296 1 262 1 243 1 108 1 17 1 187 1 38 2 110 1 269 1 381 1 148 1 330 1 58 1 
144 1 
192 3 345 1 292 1 46 1 48 1 49 4 50 2 4 1 296 2 53 1 96 1 198 5 303 2 304 2 354 1 60 2 205 1 102 2 258 2 105 5 208 2 212 1 15 2 316 1 358 1 17 1 360 1 219 1 112 1 222 1 322 1 71 1 364 1 271 2 223 1 366 1 72 1 23 1 368 1 167 1 120 1 370 1 33 6 373 2 35 1 178 2 181 2 336 1 183 1 184 1 243 2 242 1 244 1 290 2 342 2 
192 1 112 1 222 1 292 1 49 2 366 1 23 1 167 1 96 1 198 3 354 1 33 2 35 1 184 1 105 3 185 1 316 1 358 1 242 1 244 1 360 1 342 1 
192 1 112 1 222 1 292 1 49 3 366 1 23 1 167 1 96 1 198 3 120 1 304 1 354 1 33 1 35 1 184 1 105 3 208 1 185 1 316 1 358 1 242 1 244 1 360 1 
192 1 112 1 222 1 292 1 49 3 366 1 23 1 167 1 96 1 198 3 120 1 304 1 354 1 33 2 35 1 184 1 105 3 208 1 185 1 316 1 358 1 242 1 244 1 360 1 290 1 342 1 
192 1 112 1 222 1 292 1 49 2 366 1 23 1 167 1 96 1 198 3 354 1 33 3 35 1 179 1 184 1 105 3 185 1 316 1 358 1 242 1 317 1 244 1 19 1 360 1 290 2 342 2 
192 2 345 1 112 1 222 1 292 1 322 1 46 1 271 2 49 4 50 2 223 1 366 1 23 1 368 1 167 1 96 1 198 4 120 1 304 2 354 1 33 4 373 2 35 1 178 2 102 2 258 1 181 2 184 1 105 4 208 2 212 1 15 1 316 1 358 1 242 1 244 1 360 1 290 2 342 2 219 1 
192 2 345 1 112 1 222 1 292 1 46 1 271 2 49 4 50 2 223 1 366 1 23 1 141 1 368 1 95 1 167 1 96 1 198 4 120 1 304 2 354 1 33 4 373 2 35 1 178 2 179 1 258 1 181 2 184 1 105 4 208 1 212 1 15 1 316 1 358 1 242 1 244 1 360 1 290 2 342 2 219 1 
192 2 345 1 112 1 222 1 292 1 46 1 271 2 49 4 50 2 223 1 366 1 23 1 141 1 368 1 95 1 167 1 96 1 198 4 120 1 304 2 354 1 33 4 373 2 35 1 178 2 179 1 258 1 181 2 184 1 105 4 208 1 212 1 15 1 316 1 358 1 242 1 244 1 360 1 290 2 342 2 219 1 
343 1 345 1 112 1 222 1 292 1 46 1 49 2 50 1 223 1 366 1 23 1 141 1 167 1 96 1 198 2 149 1 354 1 99 1 373 1 35 1 102 1 258 1 184 1 285 1 105 2 212 1 15 1 316 1 358 1 242 1 244 1 360 1 219 1 
192 2 345 1 112 1 222 1 292 1 46 1 271 2 49 5 50 2 223 1 366 1 23 1 141 1 368 1 95 1 167 1 96 1 198 4 120 1 304 3 354 1 33 5 373 2 35 1 178 2 179 1 258 1 181 2 184 1 105 4 208 1 212 1 15 1 316 1 358 1 242 1 317 1 244 1 360 1 290 3 342 3 219 1 
192 2 345 1 112 1 222 1 292 1 46 1 271 2 49 5 50 2 223 1 366 1 23 1 141 1 368 1 95 1 167 1 96 1 198 4 120 1 304 3 354 1 33 5 373 2 35 1 178 2 179 1 258 1 181 2 184 1 105 4 208 1 212 1 15 1 316 1 358 1 242 1 317 1 244 1 360 1 290 3 342 3 219 1 
343 2 192 2 345 1 112 1 222 1 292 1 322 1 46 1 49 4 50 2 223 1 366 1 23 1 167 1 96 1 198 4 120 1 304 2 149 1 232 2 354 1 33 4 373 2 35 1 102 2 258 1 184 1 105 4 208 1 212 1 15 1 316 1 358 1 242 1 244 1 360 1 290 2 342 2 219 1 
344 1 160 1 138 1 70 2 114 1 47 3 224 1 7 2 253 1 327 1 145 2 171 1 199 1 172 1 353 1 255 1 36 1 377 1 340 1 65 1 39 2 216 1 157 1 217 6 134 1 247 3 
160 2 138 2 70 1 47 6 114 2 224 2 52 1 7 4 253 1 28 1 145 1 171 11 199 1 353 2 255 2 11 3 176 1 356 1 284 2 12 1 337 1 377 11 211 1 341 1 88 3 359 2 216 4 289 1 217 14 20 1 246 1 247 8 
1 1 138 1 112 2 71 1 114 1 47 1 295 1 4 1 224 1 366 2 250 1 23 1 296 1 251 1 7 2 197 1 253 1 28 1 145 1 303 1 353 1 204 1 174 1 255 1 60 1 34 1 238 1 183 1 63 1 131 1 243 1 17 1 341 1 66 1 216 1 289 1 217 2 247 1 
344 1 138 3 293 1 47 10 4 2 250 2 296 3 251 1 7 6 197 1 253 3 145 2 199 3 303 1 353 3 255 3 60 3 356 4 153 2 63 2 211 2 17 2 65 1 66 1 359 2 216 7 157 1 217 20 160 3 112 3 70 6 114 3 71 2 366 3 224 3 23 1 25 1 276 1 27 2 28 1 171 7 172 1 174 1 372 1 34 2 284 2 334 2 183 2 377 7 243 3 131 2 186 2 340 1 39 2 341 1 289 1 245 2 134 1 247 10 
112 1 138 2 114 2 47 1 71 2 2 1 366 1 4 2 224 2 23 1 25 1 251 1 296 7 7 4 197 1 299 1 253 2 53 1 327 1 28 1 301 1 303 2 353 2 203 1 174 1 331 1 255 2 60 8 205 1 183 3 315 1 243 8 17 2 265 1 87 2 341 1 217 2 247 1 270 1 
160 1 138 1 112 1 114 1 47 2 224 1 366 1 23 1 7 2 197 1 253 1 171 1 199 1 353 1 174 1 255 1 57 1 284 1 235 1 377 1 211 1 213 1 359 1 216 1 289 1 217 3 247 1 
160 1 98 1 356 1 138 1 284 1 70 1 114 1 224 1 7 2 377 1 253 1 327 1 216 1 171 1 217 2 247 2 353 1 255 1 
0 1 138 1 114 1 47 2 224 1 7 2 377 1 211 1 253 1 327 1 216 1 171 1 199 1 217 2 353 1 255 1 
160 1 356 1 138 1 284 1 70 1 47 2 114 1 224 1 7 2 211 1 377 2 253 1 327 1 359 1 199 1 216 2 171 2 217 4 247 2 353 1 255 1 
160 1 98 1 356 1 138 1 284 1 70 1 114 1 224 1 7 2 377 1 315 1 253 1 216 1 171 1 217 2 247 2 353 1 255 1 
0 1 138 1 114 1 47 2 224 1 7 2 377 1 315 1 211 1 253 1 216 1 171 1 199 1 217 2 353 1 255 1 
160 1 138 1 284 1 47 2 114 1 224 1 7 2 211 1 377 2 315 1 253 1 359 1 199 1 216 2 171 2 217 4 247 2 353 1 255 1 
160 1 356 1 138 1 284 1 70 1 47 2 114 1 224 1 7 2 211 1 377 2 253 1 359 1 199 1 216 2 171 2 217 4 247 2 353 1 255 1 
112 1 138 1 71 1 114 1 47 1 4 1 366 1 224 1 250 1 296 1 7 2 253 1 28 1 145 1 303 1 353 1 255 1 60 1 34 1 334 1 183 1 63 1 131 1 243 1 17 1 341 1 217 2 247 1 
112 1 138 1 71 1 114 1 47 1 4 1 366 1 224 1 250 1 296 1 7 2 326 1 253 1 28 1 145 1 146 1 303 1 353 1 255 1 305 1 60 1 34 1 183 1 243 1 17 1 341 1 217 2 247 1 
160 1 356 1 138 1 284 1 70 1 47 2 114 1 224 1 7 2 211 1 377 2 253 1 359 1 199 1 216 2 171 2 217 4 289 1 247 2 353 1 255 1 
160 1 112 1 138 1 70 1 47 2 71 1 114 1 4 1 366 1 224 1 250 1 296 1 7 2 253 1 27 1 199 1 171 2 353 1 331 1 255 1 60 1 356 1 284 1 34 1 334 1 183 1 211 1 377 2 63 1 131 1 243 1 17 1 359 1 216 2 217 4 247 2 
160 1 138 1 112 1 70 1 47 1 114 1 224 1 366 1 350 1 23 1 7 2 197 1 253 1 199 1 171 1 353 1 174 1 255 1 356 1 284 1 235 1 211 1 377 1 213 1 359 1 216 1 289 1 217 3 247 2 
344 1 138 4 47 27 7 8 199 8 201 4 147 1 353 4 11 4 255 4 356 9 12 2 257 2 211 7 65 1 359 8 217 57 157 1 20 2 158 1 320 1 160 9 70 11 114 4 275 1 119 1 26 1 164 1 328 1 172 1 281 1 176 2 284 8 128 1 82 2 338 1 241 1 378 1 340 1 88 4 379 1 39 2 134 1 247 30 
320 1 160 3 138 3 70 3 47 12 114 3 275 2 26 1 119 1 7 6 164 1 199 2 328 1 147 1 201 4 353 3 281 2 255 3 11 2 356 2 128 1 284 3 257 1 82 2 211 2 378 1 39 1 88 2 379 1 359 3 217 26 20 2 247 14 158 1 
344 2 138 4 47 31 7 8 199 9 201 4 147 1 353 4 11 5 255 4 356 9 12 2 257 1 211 7 65 2 359 7 217 64 157 2 20 3 158 1 320 1 160 9 70 12 114 4 275 2 119 1 26 1 164 1 328 1 172 2 281 1 176 2 284 7 128 1 82 2 239 1 241 1 378 1 340 2 88 5 379 1 39 3 134 2 247 33 
320 1 344 1 160 8 138 4 70 9 114 4 47 25 275 1 26 1 119 1 7 8 164 1 199 7 172 1 328 1 147 1 201 4 353 4 281 1 255 4 11 4 176 2 128 1 284 7 356 7 12 2 257 1 82 2 241 1 211 6 378 1 65 1 340 1 39 2 379 1 88 4 359 7 157 1 217 53 134 1 20 2 247 28 158 1 
320 1 344 1 160 8 138 2 70 8 114 2 47 25 275 1 26 1 119 1 7 4 164 1 199 8 172 1 328 1 147 1 201 4 353 2 281 1 255 2 11 4 176 2 128 1 284 7 356 7 12 2 257 1 82 1 211 7 378 1 65 1 340 1 39 1 379 1 88 4 359 7 157 1 217 52 134 1 20 2 247 27 158 1 
136 1 59 1 100 1 310 1 230 1 361 1 10 1 225 1 6 1 202 1 
215 1 347 1 
59 1 100 1 361 1 311 1 118 1 10 1 225 1 202 1 90 1 
136 1 97 1 59 1 100 1 310 1 259 1 117 1 225 1 105 1 208 1 8 1 86 1 198 1 230 1 361 1 200 2 10 1 202 1 
136 1 97 1 59 1 100 1 310 1 259 1 117 1 225 1 105 1 208 1 8 1 86 1 198 1 230 1 361 1 200 2 10 1 202 1 
136 1 97 1 59 1 100 1 310 1 259 1 117 1 225 1 105 1 208 1 8 1 86 1 198 1 230 1 361 1 200 2 10 1 202 1 
130 1 306 1 268 1 
130 1 306 1 268 1 
297 1 142 1 
130 1 297 1 142 1 
207 1 261 1 
22 1 112 2 45 1 347 1 366 2 23 2 225 1 252 1 165 1 197 2 198 1 29 1 145 1 200 1 10 1 202 1 174 2 256 1 59 1 100 1 259 1 207 1 261 1 105 1 86 1 215 1 361 1 
306 1 268 1 
130 1 297 1 142 1 
112 2 138 1 71 1 114 1 47 1 2 1 4 1 224 1 366 2 23 2 51 1 296 2 7 2 253 1 28 1 353 1 255 1 283 1 60 2 78 1 183 1 376 1 243 2 17 1 265 1 87 2 341 1 67 1 289 1 217 2 247 1 
321 1 60 2 249 1 152 1 3 1 4 1 375 1 25 1 296 2 262 1 243 2 17 1 38 2 190 1 110 1 148 1 330 1 58 1 331 1 
321 1 60 1 249 1 260 1 3 1 4 1 25 1 296 1 262 1 243 1 17 1 38 2 190 1 110 1 148 1 330 1 58 1 
150 1 60 1 71 1 205 1 152 1 4 1 183 1 296 1 243 1 53 1 17 1 121 1 303 1 330 1 
321 1 60 1 249 1 152 1 3 1 4 1 375 1 25 1 296 1 262 1 243 1 17 1 38 2 190 1 110 1 148 1 330 1 58 1 
135 1 
15 1 44 1 287 1 120 1 258 1 36 1 208 1 
192 1 345 1 46 1 271 1 223 1 368 1 198 1 120 1 33 1 178 1 102 1 258 1 181 1 105 1 208 2 15 1 219 1 
44 1 192 3 345 4 346 2 91 2 46 4 48 1 348 6 4 4 250 3 296 3 194 2 351 2 96 2 198 5 199 2 303 1 60 3 308 1 102 12 258 8 13 2 105 5 208 8 153 2 15 9 211 2 16 3 64 6 17 3 359 2 319 2 219 4 160 2 364 2 71 3 271 6 223 4 272 2 274 2 367 1 120 2 170 1 122 1 331 1 33 5 284 2 183 10 83 1 286 1 243 3 287 1 89 2 
320 1 192 1 160 2 345 2 364 1 46 2 48 1 271 3 223 2 348 5 194 1 119 1 198 1 120 2 199 2 328 1 11 1 33 1 309 1 284 2 101 2 102 6 258 5 105 1 208 5 15 8 211 2 64 5 132 1 88 1 379 1 359 2 20 1 158 1 219 2 
160 1 363 1 345 1 112 1 46 1 223 1 366 1 23 1 9 1 95 1 197 1 198 1 199 1 172 1 174 1 355 1 235 1 61 1 101 2 258 1 105 1 15 2 314 1 340 1 157 1 219 1 
44 1 345 1 46 1 223 1 258 1 208 1 15 1 287 1 120 1 219 1 
160 2 284 2 271 5 102 10 258 5 348 5 194 1 208 5 153 1 211 2 15 5 64 5 359 2 199 2 
192 1 33 1 198 1 120 1 105 1 208 1 
192 2 137 1 345 2 71 1 46 1 364 2 48 2 223 2 4 1 296 4 53 1 300 1 198 3 122 2 303 2 370 1 60 4 33 4 308 1 205 1 258 2 183 1 336 1 105 3 15 2 243 4 17 1 155 1 219 2 
138 1 112 3 47 1 114 1 71 1 366 3 4 1 224 1 23 2 250 1 296 1 7 2 325 1 197 2 253 1 145 1 303 1 353 1 174 2 255 1 60 1 34 1 235 2 334 1 183 1 314 1 63 1 243 1 131 1 17 1 341 1 217 1 
345 1 46 1 364 1 271 2 48 1 102 4 223 1 348 2 258 2 208 4 15 1 64 2 65 1 120 2 219 1 
100 1 361 1 159 1 
100 1 361 1 159 1 
136 1 100 1 207 1 361 1 279 1 
100 1 361 1 159 1 
100 1 123 1 361 1 
100 1 123 1 361 1 
100 1 123 1 361 1 
100 1 361 1 
10 1 202 1 
160 1 344 1 356 1 138 2 70 3 47 4 114 2 82 1 7 4 65 1 340 1 39 2 199 1 172 1 217 8 157 1 134 1 247 4 353 2 255 2 
344 1 160 1 70 2 47 3 36 1 65 1 340 1 39 2 199 1 157 1 172 1 217 6 134 1 247 3 
362 1 160 1 138 1 284 1 47 2 114 1 7 2 211 1 359 1 199 1 217 4 247 2 353 1 255 1 
160 2 284 2 356 2 70 2 12 1 47 6 211 2 88 2 359 2 199 2 217 12 20 1 247 6 11 2 176 1 
344 1 160 4 161 1 138 2 70 10 47 16 114 2 7 4 9 1 199 4 172 2 353 2 176 1 11 2 255 2 356 5 284 2 12 1 82 2 211 2 65 1 340 4 39 5 88 2 359 2 157 4 217 30 134 1 246 1 247 14 
47 1 88 1 217 1 
217 1 247 1 11 1 
362 1 160 1 138 1 284 1 356 1 70 1 114 1 47 3 7 2 153 1 211 1 359 1 199 1 217 6 247 3 353 1 255 1 
320 1 160 2 138 1 70 1 47 6 114 1 119 1 7 2 164 1 199 2 328 1 353 1 11 1 255 1 284 2 356 1 211 2 88 1 379 1 359 2 217 12 20 1 247 6 158 1 
160 1 356 1 70 2 47 3 340 1 39 1 199 1 172 1 217 6 157 1 247 3 
344 1 161 1 356 1 138 1 70 2 47 2 114 1 82 1 7 2 340 1 39 1 157 1 217 3 134 1 247 1 353 1 255 1 
160 2 138 1 356 2 70 5 114 1 47 5 7 2 164 1 9 1 340 2 39 3 199 2 157 2 217 10 172 1 247 5 353 1 255 1 
160 1 138 1 284 1 356 1 70 1 114 1 164 1 7 2 217 2 247 2 353 1 255 1 
160 1 138 1 284 1 356 1 70 1 47 2 114 1 164 1 7 2 211 1 359 1 199 1 217 4 247 2 353 1 255 1 
161 1 138 3 356 1 70 2 47 2 114 3 82 1 164 1 7 6 241 1 340 1 39 1 217 3 157 1 247 1 353 3 255 3 
362 1 344 1 160 6 161 1 138 5 70 11 47 21 114 5 7 10 164 1 143 1 199 6 172 2 353 5 255 5 11 4 176 1 127 1 284 4 356 7 12 1 82 2 240 1 241 1 211 4 65 1 340 3 39 4 88 4 359 4 157 3 217 41 134 1 20 1 247 20 
320 1 160 1 344 1 138 1 70 2 47 4 114 1 7 2 164 1 199 1 172 1 353 1 11 1 255 1 65 1 340 1 88 1 39 2 217 8 157 1 20 1 134 1 247 4 
320 1 362 1 344 1 160 2 138 2 70 3 47 5 114 2 164 1 7 4 199 1 172 1 353 2 255 2 11 1 176 1 284 1 356 1 65 1 340 1 39 2 88 2 359 1 157 1 217 11 134 1 20 1 247 6 
362 1 320 1 344 1 160 3 138 3 70 4 47 10 114 3 119 1 7 6 164 1 199 3 172 1 328 1 353 3 11 1 255 3 356 1 284 2 82 1 211 2 65 1 340 1 88 1 379 1 39 3 359 2 157 1 217 19 134 1 20 1 247 9 158 1 
362 1 320 1 344 1 160 3 138 3 70 4 47 7 114 3 119 1 7 6 164 1 199 2 172 1 328 1 353 3 11 1 255 3 284 2 356 2 82 1 211 1 65 1 340 1 39 2 88 1 379 1 359 2 157 1 217 17 134 1 20 1 247 10 158 1 
320 1 160 1 344 1 138 1 70 2 47 4 114 1 7 2 164 1 199 1 172 1 353 1 11 1 255 1 65 1 340 1 88 1 39 2 217 8 157 1 20 1 134 1 247 4 
320 1 160 2 138 1 70 1 47 6 114 1 119 1 7 2 164 1 199 2 328 1 353 1 11 1 255 1 284 2 356 1 211 2 88 1 379 1 359 2 217 12 20 1 247 6 158 1 
320 1 362 1 344 1 160 3 138 4 70 5 47 8 114 4 119 1 7 8 164 1 199 2 172 1 328 1 353 4 255 4 11 1 356 2 284 2 82 2 211 1 65 1 340 1 88 1 379 1 39 3 359 2 157 1 217 18 134 1 20 1 247 10 158 1 
320 1 160 2 138 3 70 2 47 4 114 3 119 1 164 1 7 6 199 1 328 1 353 3 255 3 11 1 284 2 356 2 82 1 241 1 211 1 88 1 379 1 359 2 217 11 20 1 247 7 158 1 
344 1 160 1 356 3 70 6 47 4 340 3 39 3 199 1 217 7 157 3 172 1 134 2 247 3 
320 1 344 1 160 3 138 4 70 4 47 8 114 4 119 1 164 1 7 8 199 2 172 1 328 1 353 4 255 4 11 1 356 1 284 2 82 2 241 1 211 1 65 1 340 1 88 1 379 1 39 3 359 2 157 1 217 18 134 1 20 1 247 10 158 1 
167 1 112 1 145 1 151 1 366 1 23 1 56 1 
112 1 151 1 80 1 366 1 23 1 167 1 188 1 145 1 41 1 124 1 56 1 173 1 
53 1 243 1 17 1 60 1 71 1 205 1 4 1 183 1 36 1 303 1 296 1 
60 1 34 1 112 2 71 1 4 1 366 2 183 1 250 1 23 1 251 1 296 1 197 1 63 1 243 1 17 1 145 1 303 1 174 1 
60 1 91 1 222 1 34 1 112 2 71 2 4 1 366 2 13 1 184 1 183 3 250 2 23 2 251 1 296 1 197 1 63 1 243 1 17 1 145 1 360 1 122 1 174 2 
305 1 60 2 91 1 222 1 34 1 112 2 71 2 4 1 366 2 13 1 184 1 183 3 250 2 23 2 251 1 296 2 197 1 243 2 17 1 266 1 145 1 360 1 122 1 174 2 
91 1 71 1 4 1 250 1 296 3 96 1 198 2 120 1 122 1 303 1 33 1 60 3 236 1 183 4 13 1 105 2 208 1 16 1 243 3 17 1 266 1 189 1 319 1 
60 3 33 1 91 1 346 1 71 1 4 1 250 1 13 1 183 4 296 3 105 2 208 1 96 1 243 3 16 1 17 1 266 1 198 2 120 1 122 1 319 1 303 1 
243 1 299 1 17 1 60 1 4 1 296 1 
60 7 71 2 92 1 2 1 4 3 83 1 250 1 183 3 25 1 296 6 312 1 299 1 243 7 17 2 87 1 301 1 229 1 303 2 270 1 203 1 331 1 
160 1 344 1 138 2 112 2 70 2 47 3 71 1 114 2 4 1 224 2 366 2 250 1 23 1 251 1 296 1 7 4 197 1 253 2 27 1 145 2 171 1 199 1 172 1 353 2 174 1 255 2 331 1 60 1 34 1 334 1 183 1 377 1 63 1 243 1 131 1 17 1 65 1 340 1 39 2 67 1 216 1 217 6 157 1 289 1 245 1 134 1 247 3 
44 1 22 1 192 1 345 2 346 1 46 2 223 2 274 1 296 1 351 1 96 1 198 3 120 1 303 1 60 1 33 2 308 1 258 1 183 2 105 3 208 1 15 1 243 1 16 1 287 1 89 1 319 1 219 2 
60 2 71 1 4 2 83 1 250 1 183 2 296 2 367 1 299 1 243 2 17 1 319 1 331 1 
177 1 53 1 243 4 17 1 60 4 266 1 71 1 205 1 4 1 183 1 303 1 296 4 331 1 
60 2 234 1 71 1 92 1 4 2 250 1 183 1 296 2 276 1 243 2 17 1 229 1 302 1 122 1 
243 1 17 1 60 1 38 1 249 1 4 1 110 1 303 1 296 1 262 1 
243 2 17 1 283 1 60 2 71 1 2 1 4 1 183 1 25 1 296 2 331 1 
177 1 60 5 205 1 71 2 2 1 4 2 183 3 296 4 53 1 243 5 17 2 122 1 303 1 270 1 203 1 331 1 
177 1 60 5 205 1 71 2 2 1 4 2 183 3 296 4 357 1 53 1 243 5 17 2 122 1 303 1 270 1 331 1 
305 1 60 1 34 1 112 2 71 1 4 1 366 2 183 1 250 1 23 1 251 1 296 1 197 1 243 1 17 1 145 1 303 1 174 1 
60 1 71 1 92 1 4 2 83 1 250 1 183 1 296 1 312 1 243 1 17 1 229 1 122 1 
112 1 78 1 366 1 23 1 376 1 51 1 263 1 214 1 126 1 
103 1 163 1 126 1 
145 1 214 1 140 1 126 1 263 1 
22 1 222 1 35 1 140 2 103 1 374 1 184 1 163 1 105 2 208 1 263 2 96 1 198 2 145 1 214 2 120 1 360 1 156 1 126 1 
169 1 335 1 36 1 248 1 
193 1 187 1 169 1 335 1 24 1 269 1 248 1 
108 1 24 1 381 1 
307 1 193 1 187 3 169 1 294 1 206 2 182 1 335 1 24 3 269 1 248 1 107 1 
193 1 187 2 169 1 335 1 24 2 269 1 248 1 191 1 324 1 
196 1 193 1 187 1 169 1 38 1 115 1 294 1 24 1 269 1 262 1 58 1 
193 1 187 1 169 1 294 1 24 1 269 1 248 1 
193 1 187 1 294 1 335 1 24 1 269 1 248 2 
371 1 111 1 193 2 294 1 24 2 5 1 187 2 169 1 269 2 248 1 
193 1 294 1 116 1 115 1 335 1 24 3 187 3 169 2 42 1 269 1 248 1 191 2 32 1 
193 1 321 1 294 1 249 1 335 1 24 2 262 1 187 2 169 1 38 2 269 1 248 1 231 1 191 1 58 1 
193 2 294 1 115 1 335 1 24 4 324 1 187 4 169 2 42 1 269 2 248 1 43 1 191 2 
193 1 187 1 169 1 294 1 335 1 24 1 269 1 248 1 
307 1 193 1 237 1 115 1 206 1 182 1 335 2 24 4 187 4 169 3 42 1 269 1 248 2 191 2 
193 1 294 1 24 2 335 1 14 1 210 1 187 2 169 1 269 1 248 1 218 1 191 1 
307 2 193 1 187 3 169 1 294 1 206 2 182 1 335 1 24 3 269 1 248 1 84 1 
254 2 169 2 267 1 288 1 
193 1 228 1 187 1 294 1 24 1 269 1 
193 1 187 2 169 1 116 1 294 1 335 1 24 2 269 1 248 1 191 1 
175 1 
193 1 187 1 169 1 294 1 335 1 24 1 269 1 248 1 
193 1 294 1 116 1 206 1 24 3 335 1 187 3 169 1 269 1 248 1 191 1 
169 1 237 1 115 1 42 1 
169 1 248 1 

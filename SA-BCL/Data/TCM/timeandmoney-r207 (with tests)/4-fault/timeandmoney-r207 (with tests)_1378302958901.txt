#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 9 141 1 234 6 49 1 236 1 310 1 312 2 119 1 260 1 362 2 188 5 317 1 320 1 287 9 100 3 102 2 15 1 216 1 324 2 174 1 291 1 218 1 246 2 225 2 277 1 226 1 182 4 23 2 
331 9 141 1 234 6 49 1 236 1 310 1 312 2 119 1 260 1 362 2 188 5 317 1 320 1 287 9 100 3 102 2 15 1 216 1 324 2 174 1 291 1 218 1 246 2 225 2 277 1 226 1 182 4 23 2 
331 10 141 1 234 7 49 1 236 1 310 1 312 2 119 1 260 1 362 2 188 6 317 1 320 1 287 10 100 4 102 2 15 1 216 1 324 2 174 1 291 1 218 1 246 2 225 2 277 1 226 1 182 5 23 2 
331 7 141 1 234 4 49 1 236 1 310 1 312 2 119 1 260 1 362 1 188 4 317 1 320 1 287 7 100 2 102 2 15 1 216 1 324 2 174 1 291 1 218 1 246 2 225 2 226 1 182 3 23 2 
100 1 287 4 331 4 141 1 102 1 216 1 324 1 234 3 291 1 310 1 312 1 362 2 246 1 188 3 225 1 277 1 226 1 182 2 
287 2 331 2 141 1 80 1 216 1 324 1 6 1 291 1 218 1 236 1 153 1 312 1 246 1 188 1 225 1 23 1 
287 3 100 1 331 3 141 1 216 1 174 1 234 1 291 1 312 2 188 2 225 2 182 1 23 1 
320 1 287 9 100 3 331 9 141 1 102 1 216 1 324 1 174 1 49 1 234 7 291 1 310 1 312 2 9 1 19 1 362 2 246 1 188 5 225 2 277 1 226 1 182 4 23 1 
320 1 287 9 100 3 331 9 141 1 102 1 216 1 324 1 174 1 49 1 234 7 291 1 310 1 312 2 9 1 19 1 362 2 246 1 188 5 225 2 277 1 226 1 182 4 23 1 
294 1 378 1 45 1 
232 1 122 2 378 1 
283 1 221 2 145 2 207 1 68 2 44 2 115 2 169 2 
68 2 160 1 257 1 50 1 7 1 258 1 308 1 115 2 143 1 313 1 283 1 145 2 30 1 239 1 207 1 58 2 169 2 168 2 148 2 366 1 240 1 368 1 268 1 105 1 217 1 244 1 84 1 221 3 222 2 134 1 86 1 20 1 272 1 44 3 328 2 181 1 278 1 
221 1 145 1 245 1 207 1 68 1 44 1 98 1 115 1 169 1 213 1 
192 1 14 1 369 1 68 1 70 1 106 1 243 1 294 1 221 1 245 1 44 1 297 1 378 1 191 1 
192 1 14 2 369 1 68 1 115 1 243 2 294 1 145 1 221 1 245 1 44 1 297 1 378 1 191 1 169 1 
101 1 14 1 97 1 162 1 243 1 
294 1 14 2 97 1 378 1 256 1 162 1 243 2 60 1 
14 1 162 1 243 1 
14 1 68 1 335 1 115 1 243 1 145 1 221 1 245 1 97 1 207 1 44 1 98 1 169 1 213 1 
378 1 
294 1 14 2 97 1 147 1 378 1 256 1 162 1 243 2 
14 5 253 1 302 1 303 1 233 2 372 1 256 1 162 2 243 5 309 1 164 1 294 1 74 1 97 2 342 1 378 1 158 2 78 2 347 1 
283 1 45 1 
68 2 115 1 221 2 145 1 283 2 120 1 166 1 44 2 169 1 
29 1 281 1 289 1 
217 1 50 1 7 1 308 1 258 1 84 1 313 1 283 1 221 1 86 1 44 1 328 1 181 1 329 1 168 1 148 1 
281 1 68 1 217 1 7 1 50 1 258 1 308 1 115 1 84 1 313 1 145 1 221 2 86 1 259 1 44 2 328 1 181 1 168 1 148 1 263 1 
283 1 221 3 145 3 68 3 44 3 115 3 169 1 263 1 
221 1 145 1 245 1 68 1 44 1 98 1 115 1 
221 1 145 1 245 1 120 1 68 1 166 1 44 1 115 1 169 1 
68 3 160 1 255 1 7 1 50 1 258 1 308 1 115 3 143 1 313 1 283 1 146 1 145 3 30 1 120 1 259 1 239 1 207 1 191 1 58 2 169 2 168 1 148 1 263 1 240 1 368 1 192 1 14 1 369 1 268 1 217 1 243 1 84 1 221 4 222 1 134 1 86 1 245 1 272 1 44 4 297 1 328 1 181 1 278 1 
283 1 221 2 145 1 340 1 68 2 44 2 106 1 115 1 263 1 
14 1 192 1 369 1 68 3 186 1 255 1 115 3 243 1 145 3 221 3 120 1 245 1 259 1 44 3 297 1 378 1 191 1 169 1 263 2 
281 1 68 2 115 2 29 1 145 2 221 2 120 1 44 2 169 1 263 1 
217 1 50 1 7 1 308 1 258 1 84 1 313 1 283 1 221 1 86 1 44 1 328 1 181 1 168 1 148 1 
24 1 71 1 217 1 7 1 308 1 258 1 84 1 313 1 283 1 221 1 44 1 328 1 181 1 168 1 148 1 
159 1 198 1 281 2 200 1 304 1 160 1 305 1 306 1 29 2 239 1 58 2 368 1 240 2 371 1 289 2 293 1 244 2 134 1 222 4 295 1 272 1 227 1 278 1 157 1 
221 1 145 1 245 1 68 1 297 1 44 1 4 1 115 1 
68 5 106 1 115 4 152 1 145 4 221 5 283 1 120 1 259 1 340 1 44 5 128 1 169 1 263 2 
221 2 145 2 245 1 68 2 4 1 44 2 98 1 115 2 
307 1 37 1 
307 1 37 1 
42 1 316 1 
42 1 316 1 
42 1 316 1 
247 1 307 1 37 1 
307 1 37 1 96 1 
42 1 299 1 316 1 307 2 37 2 59 1 
247 1 307 1 37 1 
247 1 307 1 37 1 
307 1 37 1 319 1 
307 1 37 1 319 1 
307 1 37 1 319 1 
110 1 14 2 142 1 323 1 37 2 307 2 243 2 187 1 336 2 337 1 375 2 10 1 274 2 364 2 378 1 109 2 211 3 138 1 59 1 
68 2 254 1 307 1 96 1 115 2 283 1 145 2 336 1 10 1 363 1 211 1 286 1 346 1 14 1 132 1 37 1 243 1 221 2 375 1 274 1 44 2 109 1 358 1 279 1 
246 1 102 1 324 1 
246 1 324 1 153 1 
149 1 102 2 246 3 370 1 235 1 153 1 
102 1 246 2 370 1 275 1 235 1 153 1 
102 1 246 2 370 1 235 2 153 1 
232 1 111 1 94 1 200 1 304 1 305 1 233 1 256 1 162 1 164 1 122 3 123 2 97 4 363 1 343 1 78 1 348 1 347 3 171 1 14 5 214 2 132 1 372 2 292 1 243 5 294 1 135 2 227 1 378 2 158 1 89 1 358 1 
232 3 251 5 111 1 200 3 304 3 305 3 233 2 256 1 162 6 309 1 164 1 55 1 314 1 122 9 123 6 97 7 190 1 78 2 348 2 347 8 171 2 101 5 14 9 214 6 325 1 372 6 326 1 292 3 243 9 108 1 294 1 227 3 378 5 158 2 358 4 
232 2 200 1 304 1 233 1 305 1 309 1 123 2 122 4 97 2 343 1 78 1 348 1 347 3 171 1 14 3 214 2 372 2 292 1 243 3 294 1 135 1 378 3 227 1 158 1 89 1 358 1 
232 3 200 2 304 2 233 1 305 2 309 1 122 7 123 4 97 3 343 1 190 1 78 1 348 1 347 5 171 1 14 4 214 4 325 1 372 4 326 1 292 2 243 4 294 1 135 2 378 4 227 2 158 1 89 1 358 2 
250 1 181 1 45 1 
181 1 170 1 
356 1 
181 1 258 1 
250 2 267 1 322 1 181 3 258 1 308 1 
181 1 258 1 308 1 
165 1 181 1 
140 1 240 3 159 3 252 1 304 1 305 1 16 1 27 1 244 4 107 1 177 2 222 7 295 2 339 1 365 1 126 1 76 1 
140 1 240 3 159 3 252 1 304 1 305 1 16 1 27 1 244 4 107 1 177 2 222 7 295 2 339 1 365 1 126 1 76 1 
140 1 240 3 159 3 252 1 304 1 305 1 16 1 27 1 327 1 244 4 107 1 177 2 222 7 295 2 339 1 365 1 126 1 76 1 
140 1 159 10 231 1 252 2 200 3 304 4 305 4 27 5 52 1 205 1 239 1 339 2 76 1 365 2 126 2 58 2 212 1 240 15 266 1 16 1 270 1 292 3 244 16 107 1 134 1 222 31 177 3 295 5 272 1 248 3 87 1 227 3 137 4 278 1 
140 1 159 4 231 1 252 1 304 1 305 1 27 1 285 1 239 2 339 1 126 1 365 1 58 4 240 4 193 1 16 1 244 5 107 1 134 2 222 9 177 2 295 3 272 2 278 2 
229 1 331 2 141 1 3 1 234 1 7 1 312 1 73 1 313 1 188 1 124 1 32 1 148 1 168 1 172 1 149 1 287 2 150 1 102 1 216 1 324 1 291 1 153 1 41 1 154 1 194 1 246 2 328 1 225 1 23 1 
91 1 229 1 331 3 141 1 332 1 3 1 234 2 7 1 312 1 313 1 188 1 32 1 148 1 168 1 149 1 172 1 287 3 150 1 102 1 324 1 242 1 291 1 153 1 41 1 154 1 194 1 246 2 328 1 225 1 23 1 
91 1 229 1 331 2 141 1 332 1 3 1 234 2 7 1 313 1 188 1 32 1 148 1 168 1 172 1 149 1 287 2 150 1 102 1 324 1 291 1 153 1 154 1 246 2 328 1 23 1 
172 2 287 1 150 2 331 1 242 1 217 1 7 1 258 1 203 1 312 1 313 1 154 2 224 1 208 1 180 1 167 1 225 1 328 1 377 1 181 1 23 2 168 1 148 1 
149 1 172 1 229 1 287 1 91 1 331 1 150 1 102 1 3 1 216 1 324 1 7 1 153 1 73 1 312 1 313 1 41 1 154 1 246 2 194 1 32 1 225 1 328 1 23 1 168 1 148 1 
67 1 
330 1 232 2 184 1 233 1 7 1 53 4 191 1 344 1 347 2 148 2 14 5 192 1 106 1 18 2 243 5 294 1 245 1 297 1 196 1 156 1 249 2 158 1 66 2 359 2 68 1 70 1 256 3 258 1 162 6 201 1 72 1 164 1 202 1 313 1 122 2 315 1 209 2 78 1 168 2 171 1 367 1 35 2 369 1 269 2 372 2 217 2 83 1 221 1 224 1 44 1 180 1 328 2 378 2 136 1 181 1 
359 1 68 1 184 1 70 1 256 1 162 2 201 1 202 1 53 2 147 1 191 1 344 1 14 3 192 1 369 1 106 1 243 3 221 1 245 1 44 1 297 1 136 1 
68 1 184 1 70 1 256 1 162 1 201 1 202 1 53 3 147 1 191 1 344 1 14 3 192 1 35 1 369 1 106 1 243 3 221 1 294 1 245 1 44 1 297 1 136 1 378 1 
359 1 68 1 184 1 70 1 256 1 162 2 201 1 202 1 53 3 147 1 191 1 344 1 14 3 192 1 35 1 369 1 269 1 106 1 243 3 221 1 294 1 245 1 44 1 297 1 136 1 378 1 
359 1 68 2 184 1 335 1 70 1 256 1 115 1 162 2 201 1 202 1 53 2 145 1 207 1 147 1 191 1 344 1 98 1 169 1 262 1 213 1 14 3 192 1 369 1 269 1 106 1 243 3 294 1 221 2 245 2 44 2 297 1 378 1 136 1 
232 2 184 1 233 1 53 4 344 1 191 1 347 1 192 1 14 4 106 1 18 2 243 4 294 1 245 1 297 1 156 1 158 1 249 2 66 2 359 2 68 1 70 1 256 2 162 4 72 1 201 1 164 1 202 1 122 2 209 2 78 1 367 1 35 2 369 1 269 2 372 1 221 1 44 1 136 1 378 2 
66 2 232 2 359 2 68 1 184 1 70 1 233 1 256 2 162 4 72 1 201 1 8 1 202 1 53 4 164 1 209 2 191 1 344 1 78 1 347 1 367 1 265 1 35 2 14 4 192 1 369 1 269 2 106 1 372 1 18 2 243 4 294 1 221 1 245 1 44 1 297 1 378 1 136 1 249 2 88 1 158 1 
66 2 232 2 359 2 68 1 184 1 70 1 233 1 256 2 162 4 72 1 201 1 8 1 202 1 53 4 164 1 209 2 191 1 344 1 78 1 347 1 367 1 265 1 35 2 14 4 192 1 369 1 269 2 106 1 372 1 18 2 243 4 294 1 221 1 245 1 44 1 297 1 378 1 136 1 249 2 88 1 158 1 
359 2 93 2 68 1 184 1 70 1 233 1 256 2 162 4 201 1 8 1 54 1 202 1 53 4 164 1 75 2 122 2 209 2 191 1 344 1 78 1 347 1 367 1 35 2 14 4 192 1 369 1 321 1 269 2 106 1 372 1 18 2 243 4 294 1 221 1 245 1 44 1 297 1 378 1 136 1 300 1 158 1 
66 2 232 2 359 3 68 1 184 1 70 1 233 1 256 2 162 5 72 1 201 1 8 1 164 1 202 1 53 5 209 2 191 1 344 1 78 1 347 1 367 1 265 1 14 4 192 1 35 3 369 1 269 3 106 1 372 1 18 2 243 4 294 1 221 1 245 1 64 1 44 1 297 1 378 1 136 1 249 2 158 1 88 1 
66 2 232 2 359 3 68 1 184 1 70 1 233 1 256 2 162 5 72 1 201 1 8 1 164 1 202 1 53 5 209 2 191 1 344 1 78 1 347 1 367 1 265 1 14 4 192 1 35 3 369 1 269 3 106 1 372 1 18 2 243 4 294 1 221 1 245 1 64 1 44 1 297 1 378 1 136 1 249 2 158 1 88 1 
93 2 184 1 233 1 54 1 53 4 344 1 191 1 347 1 192 1 14 4 106 1 18 2 243 4 294 1 245 1 297 1 156 1 158 1 359 2 68 1 70 1 256 2 162 4 201 1 164 1 202 1 75 2 122 2 209 2 78 1 367 1 35 2 369 1 269 2 372 1 221 1 44 1 136 1 378 1 
140 1 159 2 281 1 160 1 304 1 305 1 29 1 283 2 239 1 126 1 365 1 58 2 368 1 240 3 16 1 289 1 244 3 107 1 134 1 222 6 177 1 295 2 272 1 278 1 157 1 45 1 
159 2 230 1 301 1 281 11 282 1 200 1 160 2 304 1 305 2 257 1 27 1 283 1 29 4 30 1 239 2 58 4 212 1 240 6 368 1 79 1 351 1 289 11 270 1 292 2 244 8 134 2 222 14 295 1 272 2 248 3 227 2 137 3 278 2 
301 1 68 1 160 1 7 1 50 1 257 1 258 1 308 1 115 1 51 1 313 1 283 1 29 1 145 1 259 1 30 1 239 1 58 2 148 1 168 1 263 1 368 1 240 1 217 1 84 1 244 1 63 1 221 2 86 1 134 1 222 2 272 1 44 2 328 1 181 1 329 1 278 1 46 1 
140 1 1 1 90 2 91 1 333 2 281 7 50 2 7 2 143 2 283 2 145 1 239 3 58 6 148 3 240 10 16 1 288 2 289 7 292 2 244 10 107 1 353 1 295 4 155 1 159 8 301 1 68 1 200 2 304 3 160 3 305 3 257 1 27 4 115 1 161 2 308 2 258 2 313 2 29 7 30 1 259 1 365 1 126 1 168 3 263 1 368 3 217 1 84 2 221 3 177 1 134 3 222 20 86 2 272 3 44 3 328 3 227 2 181 2 278 3 
91 1 68 1 160 2 26 1 7 2 257 1 115 1 258 2 313 2 145 1 30 1 239 2 124 1 12 1 58 4 148 8 168 8 263 1 368 2 240 1 173 1 105 2 217 2 85 1 176 1 244 1 221 1 134 2 222 2 376 1 272 2 195 1 224 1 44 1 328 7 180 1 181 3 157 1 278 2 
159 1 301 1 281 1 68 1 200 1 160 1 304 1 305 1 115 1 29 1 145 1 120 1 239 1 58 2 169 1 368 1 99 1 240 2 289 1 292 1 244 1 221 1 134 1 222 3 295 1 272 1 44 1 227 1 278 1 
159 1 368 1 281 1 160 1 289 1 306 1 305 1 27 1 244 2 29 1 222 2 134 1 239 1 272 1 227 1 58 2 157 1 278 1 
159 1 368 1 240 2 281 1 200 1 160 1 304 1 289 1 293 1 29 1 222 2 134 1 295 1 239 1 272 1 58 2 157 1 278 1 
159 2 281 2 200 1 160 1 304 1 305 1 27 1 29 2 239 1 58 2 368 1 240 2 289 2 292 1 244 2 134 1 222 4 295 1 272 1 227 1 278 1 157 1 
159 1 368 1 281 1 160 1 289 1 306 1 305 1 27 1 176 1 244 2 29 1 222 2 134 1 239 1 272 1 227 1 58 2 278 1 
159 1 368 1 240 2 281 1 200 1 160 1 304 1 289 1 293 1 176 1 29 1 222 2 134 1 295 1 239 1 272 1 58 2 278 1 
159 2 281 2 200 1 160 1 304 1 305 1 27 1 29 2 239 1 58 2 368 1 240 2 289 2 292 1 244 2 176 1 134 1 222 4 295 1 272 1 227 1 278 1 
240 2 159 2 368 1 281 2 200 1 304 1 160 1 289 2 305 1 27 1 292 1 244 2 29 2 134 1 222 4 295 1 239 1 272 1 227 1 58 2 278 1 
160 1 257 1 7 1 50 1 258 1 308 1 143 1 313 1 283 1 30 1 239 1 58 2 148 1 168 1 368 1 240 1 217 1 244 1 84 1 221 1 222 2 86 1 134 1 272 1 44 1 328 1 181 1 278 1 
24 1 71 1 160 1 257 1 7 1 258 1 308 1 313 1 283 1 30 1 338 1 239 1 58 2 148 1 168 1 368 1 240 1 217 1 244 1 84 1 221 1 222 2 134 1 272 1 44 1 328 1 181 1 278 1 
159 2 301 1 281 2 200 1 160 1 304 1 305 1 27 1 29 2 239 1 58 2 368 1 240 2 289 2 292 1 244 2 134 1 222 4 295 1 272 1 227 1 278 1 
90 1 159 2 281 2 200 1 304 1 160 1 305 1 27 1 7 1 50 1 308 1 258 1 143 1 313 1 29 2 239 1 124 1 58 2 148 1 168 1 240 2 368 1 289 2 292 1 244 2 84 1 221 1 222 4 86 1 134 1 295 1 272 1 44 1 328 1 227 1 181 1 278 1 
159 1 301 1 281 1 68 1 200 1 304 1 160 1 305 1 27 1 115 1 28 1 145 1 29 1 120 1 239 1 58 2 169 1 240 1 368 1 289 1 292 1 244 2 221 1 134 1 222 3 272 1 44 1 227 1 278 1 
159 6 199 1 112 1 200 3 304 3 25 1 305 3 27 3 204 1 239 2 56 1 345 2 58 4 212 1 240 10 241 1 193 1 270 1 82 2 292 3 219 1 244 9 134 2 222 19 295 3 272 2 248 1 227 3 137 2 278 2 
159 2 183 1 231 2 199 2 334 1 185 1 112 1 200 2 304 2 25 1 5 1 305 3 27 1 239 3 56 2 345 1 58 6 212 2 240 12 241 1 193 1 82 4 271 1 292 3 244 14 134 3 222 26 295 1 272 3 248 2 179 1 227 3 137 2 278 3 
140 1 183 1 231 1 334 1 185 1 5 1 239 3 56 2 58 6 345 1 240 21 241 1 193 1 16 1 292 4 244 20 107 1 295 3 248 3 159 7 199 1 200 4 112 1 304 5 305 5 25 1 27 4 204 1 126 1 365 1 212 3 270 1 82 4 271 1 40 1 222 41 134 3 177 1 272 3 179 1 227 4 137 4 278 3 
140 1 183 1 231 2 334 1 185 1 5 1 239 4 56 2 58 8 345 1 240 18 241 1 193 1 16 1 292 4 244 20 107 1 295 4 248 3 159 7 199 1 200 3 112 1 304 4 305 5 25 1 27 3 204 1 126 1 365 1 212 3 270 1 82 4 271 1 40 1 222 38 134 4 177 1 272 4 179 1 227 4 137 4 278 4 
140 1 183 1 159 14 231 1 199 1 334 1 185 1 112 1 200 7 304 8 5 1 25 1 305 8 27 7 239 2 56 1 365 1 126 1 345 1 58 4 212 2 240 25 241 1 79 2 193 1 16 1 270 2 82 4 271 1 292 7 244 27 107 1 177 1 134 2 222 52 295 7 272 2 248 4 179 1 227 7 137 4 278 2 
110 1 336 1 337 1 375 1 274 1 307 1 37 1 109 1 59 1 139 1 
96 1 279 1 
61 1 336 1 375 1 341 1 274 1 307 1 37 1 17 1 109 1 
110 1 14 1 323 1 37 1 307 1 243 1 187 1 336 1 337 1 375 1 10 1 274 1 364 1 378 1 109 1 211 2 138 1 59 1 
110 1 14 1 323 1 37 1 307 1 243 1 187 1 336 1 337 1 375 1 10 1 274 1 364 1 378 1 109 1 211 2 138 1 59 1 
110 1 14 1 323 1 37 1 307 1 243 1 187 1 336 1 337 1 375 1 10 1 274 1 364 1 378 1 109 1 211 2 138 1 59 1 
223 1 247 1 299 1 
223 1 247 1 299 1 
131 1 319 1 
131 1 299 1 319 1 
346 1 286 1 
68 2 254 1 307 1 96 1 115 2 187 1 283 1 336 1 145 2 97 1 363 1 364 1 211 1 286 1 346 1 14 1 132 1 104 1 37 1 243 1 221 2 375 1 44 2 274 1 109 1 358 1 279 1 
223 1 247 1 
131 1 299 1 319 1 
301 1 68 2 160 1 7 1 257 1 258 1 237 1 313 1 30 1 239 1 125 1 210 1 33 1 318 1 58 2 148 2 168 2 368 1 240 1 105 2 85 1 244 1 221 2 134 1 222 2 272 1 195 1 44 2 328 2 181 1 278 1 
149 1 91 1 229 1 150 1 102 1 3 1 324 1 290 1 7 1 153 1 313 1 246 2 194 1 124 1 21 1 298 1 328 2 168 2 148 2 
149 1 0 1 91 1 229 1 150 1 102 1 3 1 324 1 7 1 153 1 313 1 246 2 194 1 21 1 328 1 168 1 148 1 
150 1 217 1 290 1 7 1 258 1 203 1 313 1 224 1 273 1 328 1 180 1 181 1 168 1 148 1 
149 1 91 1 229 1 150 1 102 1 3 1 324 1 290 1 7 1 153 1 313 1 246 2 194 1 21 1 298 1 328 1 168 1 148 1 
77 1 
294 1 253 1 342 1 378 1 372 1 347 1 45 1 
66 1 232 1 233 1 256 1 162 1 72 1 164 1 122 1 78 1 347 1 14 1 372 1 243 1 294 1 378 2 249 1 158 1 
171 1 322 1 233 1 217 1 7 1 258 1 308 1 117 1 164 1 313 2 328 1 276 1 181 2 158 1 78 1 347 1 168 1 148 1 170 1 
183 1 197 2 232 3 185 1 200 2 304 2 5 1 233 2 305 2 256 1 162 1 118 1 164 2 122 6 123 5 78 2 347 8 212 1 171 1 14 1 214 5 215 1 372 5 271 1 292 2 243 1 294 2 178 1 248 1 179 1 196 1 378 5 227 2 137 1 158 2 
140 1 197 2 68 1 304 1 335 1 233 1 305 2 115 1 144 1 164 1 145 1 207 1 365 1 126 1 98 1 78 1 347 2 169 1 213 1 14 1 215 1 372 2 243 1 221 1 245 1 44 1 158 1 88 1 
253 1 233 1 372 1 164 1 294 1 342 1 378 1 158 1 78 1 347 1 
197 2 232 5 214 5 215 1 200 2 304 2 288 1 305 2 372 5 292 2 123 5 122 10 227 2 378 5 347 5 
294 1 14 1 378 1 256 1 162 1 243 1 
233 2 7 1 256 2 258 1 162 4 309 1 164 1 313 1 315 1 189 1 127 1 78 2 148 4 168 4 347 2 130 2 171 2 14 3 217 2 372 2 83 1 243 3 224 1 355 1 328 4 180 1 196 2 181 1 158 2 
68 2 160 1 50 1 7 1 115 2 308 1 258 1 143 1 313 1 283 1 145 2 30 1 239 1 207 1 58 2 148 1 168 1 169 2 240 1 368 1 268 1 217 1 84 1 221 3 222 1 134 1 86 1 272 1 44 3 328 1 181 1 278 1 
171 1 232 2 214 2 233 1 372 2 164 1 294 2 177 1 122 4 123 2 378 4 196 1 158 1 78 1 347 1 
336 1 375 1 57 1 
110 1 336 1 375 1 261 1 346 1 
336 1 375 1 57 1 
336 1 375 1 57 1 
336 1 375 1 175 1 
336 1 375 1 175 1 
336 1 375 1 175 1 
336 1 375 1 
307 1 37 1 
140 1 240 4 159 3 231 1 304 1 305 1 16 1 27 1 244 4 107 1 177 1 222 8 134 2 295 2 239 2 272 2 126 1 365 1 58 4 278 2 
140 1 240 3 159 2 304 1 16 1 305 1 244 3 107 1 177 1 222 6 295 2 126 1 365 1 45 1 
240 2 159 2 200 1 304 1 305 1 27 1 292 1 244 2 220 1 134 1 222 4 295 1 239 1 272 1 227 1 58 2 278 1 
240 4 159 2 200 1 304 1 270 1 305 1 27 1 292 1 244 3 222 7 295 1 248 1 227 1 137 2 212 1 
140 1 159 9 230 1 231 2 2 1 200 2 304 3 305 3 27 4 239 2 365 2 126 2 58 4 240 12 79 1 16 1 270 1 292 2 244 11 107 1 177 1 222 23 134 2 295 5 248 2 272 2 227 2 137 2 278 2 
240 1 222 1 137 1 
244 1 222 1 248 1 
240 3 159 3 200 1 304 1 288 1 305 1 27 1 292 1 244 3 220 1 134 1 222 6 295 2 239 1 272 1 227 1 58 2 278 1 
183 1 159 2 200 2 185 1 304 2 5 1 305 2 27 1 239 1 58 2 212 1 240 6 193 1 271 1 292 2 244 6 222 12 134 1 295 1 248 1 272 1 179 1 227 2 137 1 278 1 
140 1 240 3 159 2 304 1 305 1 27 1 244 3 222 6 295 1 126 1 365 1 
159 2 240 2 231 1 2 1 16 1 27 1 244 1 107 1 222 3 134 1 295 1 239 1 272 1 365 1 126 1 58 2 278 1 
140 1 159 3 240 4 304 2 305 2 27 1 144 1 244 4 222 8 295 2 126 1 365 1 
159 1 193 1 305 1 27 1 244 2 134 1 222 2 239 1 272 1 227 1 58 2 278 1 
240 2 159 2 193 1 200 1 304 1 305 1 27 1 292 1 244 2 134 1 222 4 295 1 239 1 272 1 227 1 58 2 278 1 
240 2 159 2 231 1 193 1 2 1 27 1 244 1 204 1 222 3 134 3 295 1 239 3 272 3 126 1 365 1 58 6 278 3 
140 2 159 12 231 2 2 1 200 3 304 5 305 5 27 5 205 1 204 1 239 5 365 3 126 3 58 10 212 1 240 18 266 1 193 1 16 1 270 1 292 3 244 16 107 1 220 1 177 1 134 5 222 34 295 7 87 1 272 5 248 3 227 3 137 4 278 5 
140 1 159 2 304 1 305 1 5 1 239 1 126 1 365 1 58 2 212 1 240 4 193 1 16 1 244 4 107 1 177 1 222 8 134 1 295 2 248 1 272 1 137 1 278 1 
140 1 159 3 304 1 5 1 305 2 27 1 239 2 365 1 126 1 58 4 212 1 240 5 193 1 16 1 270 1 292 1 244 6 107 1 220 1 177 1 222 11 134 2 295 2 272 2 248 1 227 1 137 2 278 2 
140 1 183 1 159 4 231 1 200 2 185 1 304 3 5 1 305 3 27 1 239 3 365 1 126 1 58 6 212 1 240 10 193 1 16 1 271 1 292 2 244 9 107 1 220 1 177 1 222 19 134 3 295 3 248 1 272 3 179 1 227 2 137 1 278 3 
140 1 183 1 159 5 231 1 200 1 185 1 304 2 5 1 305 3 27 2 239 3 365 1 126 1 58 6 212 1 240 7 193 1 16 1 271 1 292 2 244 10 107 1 220 1 177 1 222 17 134 3 295 3 248 1 272 3 179 1 227 2 137 1 278 3 
140 1 159 2 304 1 305 1 5 1 239 1 126 1 365 1 58 2 212 1 240 4 193 1 16 1 244 4 107 1 177 1 222 8 134 1 295 2 248 1 272 1 137 1 278 1 
183 1 159 2 200 2 185 1 304 2 5 1 305 2 27 1 239 1 58 2 212 1 240 6 193 1 271 1 292 2 244 6 222 12 134 1 295 1 248 1 272 1 179 1 227 2 137 1 278 1 
140 1 183 1 159 5 231 2 185 1 200 1 304 2 5 1 305 3 27 2 239 4 365 1 126 1 58 8 212 1 240 8 193 1 16 1 271 1 292 2 244 10 107 1 220 1 177 1 222 18 134 4 295 3 272 4 248 1 179 1 227 2 137 1 278 4 
183 1 159 6 231 2 185 1 200 2 304 2 5 1 305 3 27 3 204 1 239 4 58 8 212 1 240 7 193 1 271 1 292 3 244 9 222 16 134 4 295 3 272 4 248 1 179 1 227 3 137 1 278 4 
140 1 240 4 159 6 304 1 16 2 305 1 27 3 244 3 107 1 222 7 295 3 126 3 365 3 
140 1 183 1 159 4 231 2 185 1 200 1 304 2 5 1 305 3 27 1 204 1 239 4 365 1 126 1 58 8 212 1 240 8 193 1 16 1 271 1 292 2 244 10 107 1 177 1 222 18 134 4 295 3 272 4 248 1 179 1 227 2 137 1 278 4 
283 1 221 1 340 1 68 1 44 1 106 1 228 1 
34 1 280 1 68 1 95 1 106 1 113 1 352 1 283 1 221 1 340 1 44 1 228 1 
313 1 224 1 180 1 328 1 217 1 7 1 181 1 258 1 148 1 168 1 45 1 
68 1 217 1 7 1 258 1 308 1 115 1 84 1 313 1 283 1 145 1 221 2 86 1 44 2 328 1 181 1 168 1 148 1 263 1 
68 2 7 1 115 2 308 2 258 2 165 1 313 1 283 1 145 1 148 1 168 1 263 1 130 1 369 1 62 1 84 1 221 2 86 1 245 1 44 2 297 1 328 1 181 3 
24 1 68 2 7 1 115 2 308 2 258 2 165 1 313 1 283 1 145 1 129 1 148 2 168 2 263 1 130 1 369 1 62 1 84 1 221 2 245 1 44 2 297 1 328 2 181 3 
250 1 360 1 7 1 162 1 114 1 308 1 258 1 165 1 313 1 129 1 148 3 168 3 170 1 130 1 14 2 192 1 62 1 217 1 243 2 294 1 328 3 378 1 181 4 
130 1 250 1 192 1 14 2 62 1 217 1 7 1 258 1 308 1 162 1 243 2 373 1 165 1 313 1 294 1 328 3 378 1 181 4 129 1 168 3 148 3 170 1 
313 1 173 1 328 1 7 1 148 1 168 1 
349 1 91 1 173 1 322 1 105 1 81 1 26 1 217 2 7 2 308 1 258 2 116 1 85 1 313 3 376 1 124 1 328 6 12 1 181 3 168 7 148 7 
90 1 140 1 281 1 50 1 7 1 143 1 145 1 283 2 239 2 58 4 148 1 240 3 16 1 289 1 244 3 107 1 295 2 159 2 301 1 68 1 160 2 304 1 305 1 161 1 115 1 308 1 258 1 313 1 29 1 124 1 125 1 126 1 365 1 168 1 263 1 368 2 84 1 221 2 86 1 134 2 222 6 177 1 272 2 44 2 328 1 181 1 278 2 
250 1 253 1 69 1 233 2 256 1 162 2 361 1 164 2 97 1 342 1 189 1 78 2 347 1 168 1 148 1 170 1 14 3 192 1 103 1 372 1 217 1 243 3 373 1 294 1 328 1 378 1 181 2 158 2 
250 1 173 1 322 1 7 1 308 1 258 1 117 1 313 2 124 1 328 2 181 2 168 2 148 2 
217 1 7 1 258 1 313 1 124 1 43 1 224 1 328 4 180 1 181 1 129 1 168 4 148 4 
130 1 349 1 7 1 308 1 258 1 116 1 38 1 313 2 353 1 357 1 328 2 181 1 168 2 148 2 
313 1 229 1 246 1 324 1 328 1 217 1 7 1 153 1 148 1 168 1 
85 1 313 1 91 1 124 1 328 2 210 1 7 1 181 1 258 1 148 2 168 2 
130 1 217 1 26 1 7 2 258 2 85 1 313 2 376 1 124 1 43 1 224 1 180 1 328 4 181 3 168 5 148 5 
130 1 217 1 26 1 7 2 258 2 85 1 313 2 31 1 124 1 43 1 224 1 180 1 328 4 181 3 168 5 148 5 
24 1 68 1 217 1 7 1 258 1 308 1 115 1 84 1 313 1 283 1 145 1 221 2 44 2 328 1 181 1 168 1 148 1 263 1 
130 1 349 1 322 1 81 1 7 1 308 1 258 1 116 1 313 2 328 1 181 1 168 1 148 1 
350 1 283 1 354 1 11 1 163 1 
350 2 192 1 14 2 369 1 255 1 243 2 163 2 238 1 283 1 294 1 245 1 284 1 354 1 97 1 11 2 296 1 297 1 378 1 191 1 
350 1 221 1 354 1 68 1 11 1 44 1 33 1 318 1 237 1 
238 1 354 1 296 1 
141 1 188 1 291 1 45 1 
312 1 287 1 331 1 141 1 188 1 225 1 291 1 
172 1 331 1 23 1 
47 1 312 1 39 1 287 3 331 3 141 1 206 1 188 1 216 1 225 1 291 1 218 2 
312 1 287 2 331 2 141 1 362 1 188 1 225 1 234 1 291 1 
287 1 331 1 102 1 216 1 324 1 310 1 312 1 246 1 188 1 225 1 182 1 
312 1 287 1 331 1 141 1 188 1 216 1 225 1 
312 1 287 1 331 1 141 2 216 1 225 1 291 1 
287 2 331 2 141 1 216 1 312 2 133 1 65 1 121 1 188 1 225 2 
320 1 287 3 100 1 331 3 141 1 216 1 49 1 234 2 291 1 312 1 188 2 225 1 182 1 
149 1 287 2 331 2 141 1 102 1 216 1 48 1 324 1 234 1 291 1 153 1 312 1 246 2 188 1 225 1 
287 4 100 1 331 4 141 1 216 1 234 2 291 1 312 2 362 1 188 2 225 2 277 1 182 1 
312 1 287 1 331 1 141 1 188 1 216 1 225 1 291 1 
47 1 287 4 100 1 331 4 141 2 234 2 218 1 291 2 312 1 39 1 188 3 225 1 182 1 264 1 
287 2 331 2 141 1 92 1 216 1 36 1 234 1 291 1 312 1 9 1 188 1 225 1 
47 1 287 3 331 3 141 1 216 1 218 2 291 1 312 1 374 1 39 2 188 1 225 1 
311 1 188 2 151 1 22 2 
312 1 287 1 331 1 216 1 225 1 379 1 
312 1 287 2 331 2 141 1 188 1 216 1 225 1 234 1 49 1 291 1 
13 1 
312 1 287 1 331 1 141 1 188 1 216 1 225 1 291 1 
287 3 331 3 141 1 216 1 234 1 49 1 218 1 291 1 312 1 188 1 225 1 
100 1 188 1 182 1 264 1 
141 1 188 1 

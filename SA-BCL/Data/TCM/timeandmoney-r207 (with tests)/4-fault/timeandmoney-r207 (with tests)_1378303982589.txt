#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (91,143,242,286,321) (200,210) (200,210) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (91,143,242,286,321) (200,210) (200,210) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (91,143,242,286,321) (200,210) (200,210) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (91,143,242,286,321) (200,210) (200,210) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (91,143,242,286,321) (195,258) (195,258) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 101 54 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 101 54 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (109,184,292,306) (109,184,292,306) (98,129,135) (98,129,135) (98,129,135) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (109,184,292,306) (109,184,292,306) (98,129,135) (98,129,135) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (109,184,292,306) (109,184,292,306) (98,129,135) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (109,184,292,306) (109,184,292,306) (98,129,135) (98,129,135) (98,129,135) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 6 153 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (109,184,292,306) (109,184,292,306) 62 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 200 1 88 1 87 1 91 1 109 1 292 1 319 1 74 1 172 1 253 1 349 1 210 1 306 1 273 1 
2 1 200 1 88 1 87 1 91 1 109 1 292 1 319 1 74 1 172 1 253 1 349 1 210 1 306 1 273 1 
2 1 200 1 88 1 87 1 91 1 109 1 292 1 319 1 74 1 172 1 253 1 349 1 210 1 306 1 273 1 
2 1 200 1 88 1 87 1 91 1 109 1 292 1 319 1 74 1 172 1 253 1 349 1 210 1 306 1 273 1 
198 1 145 1 2 1 184 1 109 1 292 1 319 1 253 2 349 1 348 1 101 1 306 2 273 1 343 1 
2 1 185 1 253 1 88 1 349 1 258 1 91 1 109 1 292 1 195 1 306 1 273 1 74 1 
198 2 184 1 88 1 259 1 109 2 292 2 61 1 284 1 253 3 349 1 173 1 306 3 343 1 
198 3 145 1 2 1 184 5 88 1 155 1 109 2 292 2 319 1 284 2 253 7 348 1 349 1 173 1 101 1 229 1 54 1 224 1 306 7 273 1 343 3 
198 3 145 1 2 1 184 5 88 1 155 1 109 2 292 2 319 1 284 2 253 7 348 1 349 1 173 1 101 1 229 1 54 1 224 1 306 7 273 1 343 3 
82 1 39 1 196 1 
39 1 345 2 69 1 
86 2 299 2 106 1 255 2 34 2 220 2 272 1 265 2 
344 1 178 2 299 3 301 1 106 1 139 1 279 1 49 2 227 1 203 1 330 1 113 1 228 2 142 1 305 1 255 2 34 2 36 1 79 1 80 1 83 1 19 1 313 1 86 3 59 1 354 1 189 1 220 2 266 1 265 2 150 1 123 2 272 1 376 1 46 1 197 1 23 2 
86 1 146 1 299 1 255 1 34 1 226 1 220 1 272 1 264 1 265 1 
118 1 86 1 299 1 39 1 225 1 373 1 264 1 152 1 127 1 340 1 255 1 211 1 132 1 196 1 
118 1 86 1 299 1 39 1 225 2 373 1 220 1 264 1 265 1 127 1 255 1 132 2 34 1 211 1 196 1 
137 1 132 1 225 1 201 1 243 1 
320 1 39 1 137 1 132 2 225 2 201 1 196 1 78 1 
132 1 225 1 201 1 
86 1 146 1 299 1 137 1 225 1 226 1 220 1 264 1 265 1 141 1 255 1 132 1 34 1 272 1 
39 1 
64 1 39 1 137 1 132 2 225 2 201 1 196 1 78 1 
311 1 84 2 27 2 166 1 39 1 137 2 225 5 41 1 201 2 50 1 148 1 151 1 11 2 132 5 55 1 174 1 196 1 324 1 78 1 
82 1 106 1 
86 2 299 2 106 2 220 1 265 1 357 1 255 2 34 1 342 1 
43 1 186 1 295 1 
80 1 86 1 344 1 178 1 299 1 106 1 354 1 189 1 279 1 123 1 330 1 113 1 241 1 376 1 36 1 23 1 
192 1 86 3 299 3 106 1 255 3 34 3 220 3 265 1 
86 1 299 1 255 1 34 1 226 1 220 1 264 1 
86 1 357 1 299 1 255 1 34 1 220 1 264 1 265 1 342 1 
26 1 344 1 178 1 299 4 301 1 277 1 106 1 225 1 279 1 49 1 203 1 330 1 113 1 228 2 305 1 142 1 255 3 211 1 34 3 36 1 80 1 118 1 19 1 313 1 86 4 59 1 354 1 121 1 189 1 373 1 220 3 264 1 266 1 265 2 150 1 192 1 123 1 357 1 127 1 132 1 272 1 376 1 46 1 23 1 
192 1 86 2 340 1 299 2 235 1 106 1 255 2 34 1 220 1 
118 1 26 1 86 3 299 3 39 1 225 1 121 1 373 1 220 3 264 1 265 1 192 2 357 1 127 1 255 3 132 1 34 3 211 1 377 1 
86 2 186 1 299 2 220 2 265 1 43 1 192 1 357 1 255 2 34 2 
80 1 86 1 344 1 178 1 299 1 106 1 354 1 189 1 279 1 123 1 330 1 113 1 376 1 36 1 23 1 
80 1 86 1 165 1 178 1 299 1 106 1 354 1 189 1 123 1 330 1 113 1 376 1 36 1 212 1 23 1 
214 1 313 1 249 1 186 1 59 1 167 1 301 2 60 1 266 1 49 2 43 1 268 1 203 1 150 1 252 1 228 2 295 1 254 1 46 1 
118 1 182 1 86 1 299 1 255 1 34 1 220 1 264 1 
80 1 26 1 86 2 344 1 178 1 299 2 354 1 189 1 220 1 279 1 43 1 192 1 123 1 330 1 113 1 255 1 34 1 376 1 36 1 23 1 
26 1 86 5 299 5 235 1 106 1 220 4 265 1 192 2 99 1 357 1 340 1 255 5 34 4 15 1 
182 1 86 2 299 2 255 2 34 2 226 1 220 2 264 1 
0 1 170 1 
0 1 170 1 
215 1 278 1 
215 1 278 1 
215 1 278 1 
0 1 276 1 170 1 
0 1 89 1 170 1 
0 2 215 1 278 1 263 1 170 2 293 1 
0 1 276 1 170 1 
0 1 276 1 170 1 
0 1 170 1 280 1 
0 1 170 1 280 1 
0 1 170 1 280 1 
0 2 231 1 232 1 362 2 120 1 333 2 39 1 336 1 225 2 263 1 170 2 159 3 181 2 9 2 346 1 206 1 132 2 322 2 309 1 
0 1 363 1 299 2 179 1 106 1 225 1 159 1 9 1 181 1 329 1 205 1 346 1 255 2 34 2 257 1 333 1 86 2 334 1 89 1 168 1 220 2 170 1 132 1 322 1 
2 1 273 1 319 1 
2 1 185 1 273 1 
213 1 2 3 185 1 107 1 3 1 319 2 
213 1 2 2 185 1 107 1 319 1 117 1 
213 1 2 2 185 1 107 2 319 1 
27 1 28 2 363 1 137 4 345 3 225 5 201 1 110 1 204 2 11 1 285 1 78 1 370 1 214 1 84 1 18 1 144 1 334 1 187 1 39 2 168 1 317 1 41 3 268 1 148 2 149 1 132 5 361 2 196 1 69 1 103 1 324 1 
27 2 363 4 137 7 345 9 225 9 201 6 73 1 157 1 110 2 204 6 51 1 11 2 55 1 285 1 78 1 370 3 214 3 84 2 39 5 40 5 317 3 41 8 268 3 148 6 356 1 149 2 126 1 132 9 243 5 361 6 196 1 69 3 103 3 324 1 246 1 
27 1 28 1 363 1 137 2 345 4 225 3 110 1 204 2 11 1 55 1 370 1 214 1 18 1 84 1 39 3 187 1 41 3 317 1 268 1 148 2 149 1 132 3 196 1 361 2 69 2 103 1 
27 1 28 2 363 2 137 3 345 7 225 4 73 1 157 1 110 1 204 4 11 1 55 1 370 2 214 2 84 1 18 1 39 4 187 1 41 5 317 2 268 2 148 4 356 1 149 1 132 4 196 1 361 4 69 3 103 2 
82 1 189 1 360 1 
189 1 230 1 
251 1 
80 1 189 1 
80 1 330 1 208 1 189 3 360 2 374 1 
80 1 330 1 189 1 
56 1 189 1 
214 1 119 1 83 4 289 1 301 3 167 2 108 1 267 1 49 7 96 1 254 3 307 1 154 1 103 1 68 1 163 1 287 2 
214 1 119 1 83 4 289 1 301 3 167 2 108 1 267 1 49 7 96 1 254 3 307 1 154 1 103 1 68 1 163 1 287 2 
214 1 119 1 83 4 289 1 301 3 167 2 108 1 267 1 49 7 96 1 44 1 254 3 307 1 154 1 103 1 68 1 163 1 287 2 
301 15 108 2 111 1 49 31 228 2 254 10 209 1 331 1 307 2 332 1 163 5 287 3 370 3 119 1 83 16 214 4 289 1 313 1 59 1 167 5 317 3 266 1 267 1 96 1 268 3 22 3 124 1 270 1 65 1 194 4 154 2 68 2 103 4 46 1 
301 4 108 1 72 1 111 1 49 9 228 4 254 4 307 1 163 1 287 2 214 1 83 5 119 1 289 1 313 2 59 2 167 3 266 2 267 1 171 1 154 1 103 1 68 1 46 2 
247 1 48 1 178 1 2 2 135 1 3 1 109 1 113 1 253 1 347 1 349 1 162 1 306 2 217 1 184 1 185 1 88 1 292 1 319 1 123 1 98 1 338 1 129 1 244 1 376 1 273 1 23 1 
247 1 48 1 178 1 2 2 135 1 3 1 109 1 113 1 253 2 347 1 306 3 217 1 184 2 185 1 88 1 218 1 262 1 292 1 319 1 123 1 269 1 338 1 129 1 244 1 376 1 273 1 23 1 
48 1 247 1 217 1 2 2 185 1 184 2 178 1 135 1 88 1 3 1 218 1 262 1 319 1 123 1 113 1 253 1 338 1 244 1 376 1 306 2 273 1 23 1 
48 2 247 2 248 1 178 1 364 1 109 1 31 1 113 1 253 1 306 1 36 1 80 1 88 2 189 1 292 1 97 1 123 1 63 1 269 1 338 2 358 1 376 1 23 1 
247 1 48 1 178 1 2 2 135 1 3 1 109 1 113 1 253 1 347 1 349 1 306 2 217 1 184 1 185 1 88 1 262 1 292 1 319 1 123 1 98 1 338 1 129 1 244 1 376 1 273 1 23 1 
240 1 
1 1 199 1 248 1 299 1 345 2 201 6 110 1 113 1 12 2 11 1 255 1 53 2 211 1 114 2 118 1 314 2 261 1 169 1 264 1 63 1 123 2 127 1 132 5 359 1 69 2 324 1 23 2 176 2 27 1 178 2 29 1 225 5 30 4 76 1 282 1 283 2 367 1 368 1 78 3 36 2 80 1 84 1 86 1 39 2 291 2 41 2 189 1 373 1 148 2 152 1 45 1 339 1 340 1 196 1 376 1 
199 1 299 1 225 3 30 2 201 2 76 1 282 1 255 1 211 1 53 1 368 1 78 1 118 1 86 1 261 1 373 1 264 1 152 1 64 1 127 1 340 1 132 3 
199 1 299 1 225 3 30 3 201 1 76 1 282 1 255 1 12 1 211 1 368 1 78 1 118 1 86 1 39 1 261 1 373 1 264 1 152 1 64 1 127 1 340 1 132 3 196 1 
199 1 299 1 225 3 30 3 201 2 76 1 282 1 255 1 12 1 211 1 53 1 114 1 368 1 78 1 118 1 86 1 39 1 261 1 373 1 264 1 64 1 152 1 127 1 340 1 132 3 196 1 
1 1 199 1 299 1 201 7 350 1 255 1 12 4 11 1 53 4 211 1 114 4 118 1 314 2 261 1 264 1 221 1 64 1 127 1 132 5 324 1 69 2 176 2 27 1 30 6 225 5 282 1 76 1 283 2 367 1 368 1 78 3 183 1 84 1 86 1 371 1 39 5 291 2 92 1 373 1 41 1 148 1 152 1 340 1 196 5 
1 1 199 1 299 1 345 2 201 4 255 1 11 1 12 2 211 1 53 2 114 2 118 1 314 2 261 1 264 1 169 1 127 1 132 4 324 1 69 2 176 2 27 1 30 4 225 4 282 1 76 1 283 2 367 1 368 1 78 2 84 1 86 1 39 2 291 2 373 1 41 1 148 1 152 1 340 1 196 1 
176 2 1 1 199 1 27 1 299 1 225 4 30 4 201 4 76 1 282 1 283 2 350 1 12 2 255 1 11 1 53 2 367 1 211 1 114 2 368 1 78 2 118 1 183 1 84 1 314 2 86 1 371 1 39 1 291 2 41 1 261 1 373 1 264 1 148 1 152 1 127 1 340 1 132 4 196 1 69 2 324 1 
176 2 1 1 199 1 27 1 299 1 225 4 30 4 201 4 76 1 282 1 283 2 350 1 12 2 255 1 11 1 53 2 367 1 211 1 114 2 368 1 78 2 118 1 183 1 84 1 314 2 86 1 371 1 39 1 291 2 41 1 261 1 373 1 264 1 148 1 152 1 127 1 340 1 132 4 196 1 69 2 324 1 
176 2 1 1 199 1 27 1 299 1 345 2 225 4 30 4 201 4 76 1 282 1 283 2 207 2 12 2 366 2 255 1 11 1 53 2 211 1 114 2 256 1 368 1 78 2 118 1 84 1 86 1 371 1 39 1 316 1 41 1 261 1 373 1 264 1 148 1 152 1 127 1 340 1 132 4 102 1 196 1 324 1 
176 2 1 1 199 1 27 1 299 1 225 4 30 5 201 5 76 1 282 1 283 2 350 1 11 1 255 1 12 3 367 1 211 1 53 3 114 3 368 1 78 2 118 1 84 1 183 1 314 2 86 1 371 1 39 1 291 2 92 1 41 1 261 1 373 1 264 1 148 1 152 1 127 1 340 1 132 4 196 1 69 2 324 1 
176 2 1 1 199 1 27 1 299 1 225 4 30 5 201 5 76 1 282 1 283 2 350 1 11 1 255 1 12 3 367 1 211 1 53 3 114 3 368 1 78 2 118 1 84 1 183 1 314 2 86 1 371 1 39 1 291 2 92 1 41 1 261 1 373 1 264 1 148 1 152 1 127 1 340 1 132 4 196 1 69 2 324 1 
1 1 199 1 299 1 345 2 201 4 207 2 255 1 11 1 12 2 211 1 53 2 114 2 118 1 316 1 261 1 264 1 169 1 127 1 132 4 324 1 176 2 27 1 30 4 225 4 282 1 76 1 283 2 366 2 368 1 78 2 84 1 86 1 39 1 373 1 41 1 148 1 152 1 340 1 196 1 
301 3 106 2 108 1 49 6 203 1 252 1 228 2 254 2 307 1 287 1 82 1 119 1 83 3 214 1 289 1 313 1 186 1 59 1 167 2 266 1 267 1 43 1 150 1 295 1 103 1 46 1 
134 1 250 1 301 5 106 1 140 1 49 15 227 1 203 1 228 4 254 2 332 2 163 2 370 3 83 10 19 1 313 2 59 2 186 3 317 3 266 2 43 12 150 2 22 3 65 1 295 12 194 4 130 1 103 3 70 1 46 2 
105 1 26 1 344 1 178 1 299 2 301 1 106 1 279 1 49 2 227 1 203 1 330 1 113 1 228 2 255 1 34 1 36 1 80 1 83 1 19 1 313 1 86 2 85 1 186 1 59 1 354 1 189 1 220 1 266 1 123 1 150 1 192 1 241 1 130 1 296 1 376 1 46 1 23 1 
344 1 299 2 301 2 112 1 49 5 203 2 113 1 305 1 254 3 255 1 14 1 163 2 19 1 313 2 59 2 167 1 354 1 317 1 220 1 266 2 123 1 130 1 131 1 23 1 325 1 26 1 178 1 279 1 330 1 228 4 34 1 36 1 370 1 80 1 83 3 86 2 186 2 236 1 189 1 43 2 192 1 150 2 295 2 376 1 103 1 46 2 
248 1 178 8 298 1 299 1 301 1 328 1 7 1 49 2 227 1 203 2 252 1 113 2 228 4 255 1 34 1 162 1 36 2 79 2 80 2 83 1 19 1 86 1 313 2 59 2 90 1 189 3 262 1 122 1 220 1 266 2 192 1 123 7 150 2 63 1 223 1 376 2 175 1 46 2 23 8 
299 1 301 2 5 1 49 3 203 1 228 2 254 1 255 1 34 1 370 1 83 1 214 1 313 1 86 1 186 1 59 1 167 1 317 1 220 1 265 1 266 1 43 1 268 1 150 1 357 1 295 1 130 1 103 1 46 1 
83 2 297 1 313 1 186 1 59 1 266 1 49 2 43 1 203 1 150 1 252 1 228 2 295 1 254 1 103 1 163 1 46 1 370 1 
214 1 313 1 186 1 59 1 167 1 301 2 60 1 266 1 49 2 43 1 268 1 203 1 150 1 252 1 228 2 295 1 254 1 46 1 
301 2 49 4 203 1 252 1 228 2 254 2 163 1 370 1 83 2 214 1 313 1 59 1 186 2 167 1 317 1 266 1 43 2 268 1 150 1 295 2 103 1 46 1 
83 2 297 1 313 1 186 1 59 1 266 1 49 2 43 1 203 1 150 1 223 1 228 2 295 1 254 1 103 1 163 1 46 1 370 1 
214 1 313 1 186 1 59 1 167 1 301 2 60 1 266 1 49 2 43 1 268 1 203 1 150 1 223 1 228 2 295 1 254 1 46 1 
83 2 313 1 186 1 59 1 317 1 266 1 49 2 43 1 203 1 150 1 223 1 228 2 295 1 254 1 103 1 163 1 46 1 370 1 
83 2 313 1 186 1 59 1 317 1 266 1 49 2 43 1 203 1 150 1 228 2 295 1 254 1 103 1 163 1 46 1 370 1 
344 1 178 1 299 1 301 1 106 1 279 1 49 2 227 1 203 1 330 1 113 1 228 2 305 1 36 1 80 1 83 1 19 1 86 1 313 1 59 1 354 1 189 1 266 1 123 1 150 1 376 1 46 1 23 1 
178 1 299 1 301 1 106 1 49 2 227 1 203 1 330 1 113 1 228 2 212 1 36 1 80 1 83 1 19 1 165 1 86 1 313 1 57 1 59 1 354 1 189 1 266 1 123 1 150 1 376 1 46 1 23 1 
83 2 313 1 186 1 59 1 317 1 266 1 49 2 43 1 203 1 150 1 228 2 295 1 254 1 130 1 103 1 163 1 46 1 370 1 
344 1 178 1 299 1 279 1 49 2 203 1 330 1 113 1 228 2 305 1 254 1 162 1 14 1 163 1 370 1 80 1 83 2 86 1 313 1 186 1 59 1 354 1 189 1 317 1 266 1 43 1 123 1 150 1 295 1 376 1 103 1 46 1 23 1 
299 1 49 2 180 1 203 1 228 2 254 1 255 1 34 1 163 1 370 1 83 2 313 1 86 1 59 1 186 1 317 1 220 1 265 1 266 1 43 1 150 1 357 1 295 1 130 1 103 1 46 1 
136 1 301 10 71 1 6 2 49 19 228 4 254 6 77 1 332 1 163 3 370 3 83 9 214 3 233 1 20 2 164 1 313 2 59 2 167 3 188 1 317 3 266 2 171 1 268 3 22 1 153 1 65 1 194 2 103 3 46 2 
301 11 6 1 111 2 49 24 228 6 254 2 77 2 351 1 13 1 163 1 370 3 310 1 214 2 83 13 233 2 20 3 164 1 313 3 59 3 234 1 167 1 372 1 188 1 317 3 266 3 171 1 190 1 268 2 22 2 153 1 65 2 194 2 103 3 46 3 
274 1 136 1 301 17 6 1 111 1 49 32 228 6 254 5 77 2 351 1 13 1 332 1 163 3 370 4 310 1 83 15 214 4 233 1 20 3 164 1 313 3 234 1 59 3 167 2 372 1 188 1 317 4 266 3 190 1 171 1 268 4 22 3 153 1 65 3 194 4 103 4 46 3 
274 1 136 1 301 16 6 1 111 2 49 33 228 8 254 6 77 2 351 1 13 1 332 1 163 3 370 4 310 1 83 17 214 3 233 1 20 4 164 1 313 4 234 1 59 4 167 3 372 1 188 1 317 4 266 4 190 1 171 1 268 3 22 3 153 1 65 3 194 4 103 4 46 4 
301 22 108 1 6 1 111 1 140 2 49 46 228 4 254 12 77 1 307 1 351 1 13 1 332 2 163 6 287 1 370 6 310 1 119 1 83 24 214 7 289 1 233 1 20 3 164 1 313 2 234 1 59 2 167 6 372 1 188 1 317 6 266 2 267 1 190 1 171 1 268 6 22 4 153 1 65 2 194 4 103 7 46 2 
0 1 9 1 181 1 333 1 100 1 336 1 322 1 263 1 170 1 309 1 
329 1 89 1 
0 1 9 1 181 1 125 1 333 1 315 1 322 1 133 1 170 1 
0 1 231 1 232 1 362 1 120 1 333 1 39 1 336 1 225 1 263 1 170 1 159 2 181 1 9 1 346 1 132 1 322 1 309 1 
0 1 231 1 232 1 362 1 120 1 333 1 39 1 336 1 225 1 263 1 170 1 159 2 181 1 9 1 346 1 132 1 322 1 309 1 
0 1 231 1 232 1 362 1 120 1 333 1 39 1 336 1 225 1 263 1 170 1 159 2 181 1 9 1 346 1 132 1 322 1 309 1 
276 1 93 1 293 1 
276 1 93 1 293 1 
128 1 280 1 
128 1 280 1 293 1 
205 1 257 1 
0 1 362 1 363 1 299 2 137 1 179 1 106 1 225 1 158 1 159 1 9 1 181 1 329 1 205 1 255 2 34 2 257 1 231 1 86 2 333 1 334 1 89 1 168 1 220 2 170 1 132 1 322 1 
276 1 93 1 
128 1 280 1 293 1 
178 2 299 2 301 1 138 1 328 1 303 1 7 1 49 2 227 1 203 1 113 1 228 2 255 2 115 1 79 2 80 1 83 1 19 1 313 1 86 2 59 1 189 1 219 1 266 1 150 1 222 1 123 2 130 1 376 1 46 1 23 2 
17 1 247 1 217 1 2 2 185 1 178 2 300 1 3 1 262 1 319 1 123 2 113 1 347 1 162 1 244 1 376 1 35 1 273 1 23 2 
247 1 217 1 2 2 185 1 178 1 300 1 3 1 262 1 319 1 95 1 123 1 113 1 347 1 244 1 376 1 273 1 23 1 
80 1 17 1 247 1 248 1 178 1 364 1 189 1 4 1 123 1 63 1 113 1 376 1 36 1 23 1 
17 1 247 1 217 1 2 2 185 1 178 1 300 1 3 1 262 1 319 1 123 1 113 1 347 1 244 1 376 1 35 1 273 1 23 1 
238 1 
148 1 82 1 166 1 39 1 41 1 196 1 50 1 
27 1 345 1 225 1 201 1 11 1 367 1 78 1 84 1 314 1 39 2 291 1 41 1 148 1 132 1 196 1 69 1 324 1 
345 12 302 1 201 5 110 2 304 1 50 1 204 6 113 4 11 4 161 2 162 1 352 1 214 2 56 2 166 1 58 1 317 2 318 2 268 2 123 3 127 2 132 5 66 2 131 2 360 2 361 6 324 4 69 6 23 3 24 1 27 4 178 3 225 5 32 2 330 3 365 2 33 2 230 3 36 1 78 3 370 2 80 3 84 4 39 8 41 9 189 10 237 2 374 1 148 8 45 1 196 2 376 3 103 2 378 2 
27 2 345 6 225 1 201 1 204 5 11 2 13 1 78 1 370 2 310 1 214 2 84 2 353 1 234 1 39 4 372 1 41 7 317 2 237 1 190 1 148 4 268 2 22 1 65 1 132 1 194 1 361 5 196 1 324 2 69 3 103 2 
27 1 299 1 108 1 225 1 226 1 141 1 161 1 11 1 255 1 34 1 307 1 288 1 119 1 214 1 84 1 183 1 86 1 146 1 41 2 237 2 220 1 264 1 265 1 148 2 132 1 272 1 324 1 103 2 
84 1 27 1 166 1 39 1 41 1 50 1 148 1 11 1 196 1 324 1 
214 2 39 5 345 10 317 2 41 5 237 2 148 5 268 2 204 5 161 1 131 1 361 5 103 2 69 5 370 2 
39 1 132 1 225 1 201 1 196 1 78 1 
27 2 248 1 29 1 178 4 302 2 225 3 201 4 110 2 113 1 11 2 55 1 352 1 36 2 78 2 80 1 84 2 189 1 41 2 94 1 148 2 123 4 63 1 339 1 45 2 132 3 376 1 245 1 324 1 23 4 
344 1 178 1 299 3 301 1 106 1 279 1 49 1 203 1 330 1 113 1 228 2 142 1 305 1 255 2 34 2 36 1 80 1 19 1 86 3 313 1 59 1 354 1 189 1 220 2 266 1 265 2 123 1 150 1 272 1 376 1 46 1 23 1 
84 1 27 1 39 4 345 4 41 1 110 1 148 2 204 2 45 1 11 1 361 2 196 2 69 2 324 1 287 1 
9 1 322 1 116 1 
294 1 9 1 322 1 257 1 309 1 
9 1 322 1 116 1 
9 1 322 1 116 1 
281 1 9 1 322 1 
281 1 9 1 322 1 
281 1 9 1 322 1 
9 1 322 1 
0 1 170 1 
214 1 119 1 83 4 289 1 313 2 59 2 301 4 167 2 108 1 266 2 111 1 267 1 49 8 228 4 254 3 307 1 103 1 163 1 46 2 287 1 
82 1 119 1 83 3 214 1 289 1 301 3 167 2 108 1 267 1 49 6 254 2 307 1 103 1 287 1 
214 1 83 2 313 1 59 1 167 1 301 2 317 1 266 1 49 4 268 1 160 1 228 2 254 2 103 1 46 1 163 1 370 1 
214 1 83 3 167 1 301 4 317 1 49 7 268 1 22 1 65 1 254 2 194 2 103 1 332 1 163 1 370 1 
301 12 108 2 140 1 111 2 49 23 228 4 254 9 307 2 163 4 332 1 287 1 370 2 119 1 83 11 214 3 289 1 313 2 59 2 167 5 317 2 266 2 267 1 355 1 268 2 22 2 194 2 103 3 70 1 46 2 
301 1 194 1 49 1 
83 1 22 1 49 1 
83 3 214 1 313 1 59 1 301 3 167 2 317 1 266 1 49 6 268 1 160 1 228 2 254 3 131 1 103 1 46 1 163 1 370 1 
301 6 49 12 228 2 254 2 13 1 163 1 370 2 310 1 83 6 214 2 313 1 59 1 234 1 167 1 372 1 317 2 266 1 171 1 190 1 268 2 22 1 65 1 194 1 103 2 46 1 
119 1 83 3 214 1 301 3 167 1 108 1 49 6 254 2 307 1 103 1 163 1 
83 1 289 1 313 1 59 1 167 1 301 2 108 1 111 1 266 1 267 1 355 1 49 3 228 2 254 2 307 1 163 1 46 1 
288 1 83 5 119 1 214 2 313 1 59 1 167 3 301 5 108 2 266 1 171 1 49 10 228 2 254 5 307 2 103 2 46 1 163 2 
83 2 313 1 59 1 266 1 171 1 49 2 228 2 254 1 103 1 46 1 163 1 370 1 
214 1 83 2 313 1 59 1 167 1 301 2 317 1 266 1 171 1 49 4 268 1 228 2 254 2 103 1 46 1 163 1 370 1 
83 1 313 3 59 3 136 1 301 2 167 1 108 1 111 1 266 3 355 1 49 3 171 1 228 6 254 2 307 1 46 3 163 1 
301 18 136 1 108 3 111 2 49 34 160 1 228 10 254 12 331 1 307 3 332 1 163 5 287 1 370 3 119 2 83 16 214 5 289 1 313 5 59 5 167 7 317 3 266 5 267 1 355 1 171 1 268 3 124 1 22 3 270 1 65 1 194 4 103 5 46 5 
301 4 108 1 49 8 228 2 254 2 13 1 307 1 287 1 214 1 83 4 119 1 289 1 313 1 59 1 167 2 266 1 267 1 171 1 22 1 65 1 194 1 103 1 46 1 
301 5 108 1 49 11 160 1 228 4 254 3 307 1 13 1 332 1 163 1 287 1 370 1 214 1 119 1 83 6 289 1 313 2 59 2 167 2 317 1 266 2 267 1 171 1 22 1 65 1 194 2 103 2 46 2 
301 7 111 1 49 13 160 1 228 6 254 2 13 1 163 1 370 2 310 1 83 6 214 2 313 3 59 3 234 1 167 1 372 1 317 2 266 3 171 1 190 1 268 2 22 1 65 1 194 1 103 2 46 3 
301 4 111 1 49 11 160 1 228 6 254 2 13 1 163 1 370 2 310 1 83 7 214 1 313 3 59 3 234 1 167 1 372 1 317 2 266 3 171 1 190 1 268 1 22 1 65 1 194 1 103 2 46 3 
301 4 108 1 49 8 228 2 254 2 13 1 307 1 287 1 214 1 83 4 119 1 289 1 313 1 59 1 167 2 266 1 267 1 171 1 22 1 65 1 194 1 103 1 46 1 
301 6 49 12 228 2 254 2 13 1 163 1 370 2 310 1 83 6 214 2 313 1 59 1 234 1 167 1 372 1 317 2 266 1 171 1 190 1 268 2 22 1 65 1 194 1 103 2 46 1 
301 5 111 2 49 12 160 1 228 8 254 2 13 1 163 1 370 2 310 1 83 7 214 1 313 4 59 4 234 1 167 1 372 1 317 2 266 4 171 1 190 1 268 1 22 1 65 1 194 1 103 2 46 4 
301 5 136 1 111 2 49 12 228 8 254 4 13 1 163 2 370 2 310 1 83 7 214 1 313 4 59 4 234 1 167 2 372 1 317 2 266 4 171 1 190 1 268 1 22 1 65 1 194 1 103 2 46 4 
214 1 119 1 83 3 289 1 301 4 167 3 108 3 267 2 49 7 254 6 307 3 103 1 163 3 
301 5 136 1 111 2 49 12 228 8 254 2 13 1 163 1 370 2 310 1 83 7 214 1 313 4 59 4 234 1 167 1 372 1 317 2 266 4 171 1 190 1 268 1 22 1 65 1 194 1 103 2 46 4 
86 1 299 1 340 1 235 1 10 1 106 1 255 1 
312 1 81 1 86 1 290 1 299 1 335 1 235 1 106 1 340 1 10 1 255 1 271 1 
80 1 82 1 63 1 123 1 248 1 113 1 178 1 189 1 376 1 36 1 23 1 
80 1 86 2 178 1 299 2 106 1 354 1 189 1 220 1 279 1 192 1 123 1 330 1 113 1 255 1 34 1 376 1 36 1 23 1 
118 1 80 2 56 1 86 2 178 1 299 2 106 1 354 1 302 1 373 1 189 3 220 2 264 1 279 1 192 1 123 1 330 2 113 1 255 2 66 1 34 1 376 1 23 1 
178 2 299 2 106 1 302 1 330 2 113 1 255 2 34 1 80 2 118 1 56 1 165 1 86 2 354 1 189 3 373 1 220 2 264 1 123 2 192 1 337 1 66 1 376 1 23 2 
47 1 178 3 302 1 225 2 201 1 330 1 113 1 52 1 230 1 36 1 80 1 56 1 39 1 189 4 123 3 337 1 127 1 132 2 66 1 360 1 376 1 196 1 23 3 
80 1 56 1 178 3 39 1 225 2 302 1 189 4 201 1 318 1 123 3 337 1 330 1 113 1 127 1 66 1 132 2 230 1 360 1 196 1 376 1 36 1 23 3 
123 1 113 1 178 1 376 1 175 1 23 1 
80 2 177 1 178 7 298 1 90 1 189 3 262 1 122 1 21 1 326 1 374 1 7 1 123 6 330 1 113 3 162 1 376 2 175 1 36 2 79 1 23 7 
344 1 299 2 301 3 106 2 108 1 112 1 49 6 203 2 113 1 305 1 254 2 255 1 162 1 307 1 14 1 119 1 214 1 313 2 59 2 167 2 354 1 220 1 266 2 267 1 123 1 222 1 130 1 23 1 178 1 279 1 330 1 228 4 34 1 287 1 80 1 83 3 289 1 86 2 186 1 189 1 43 1 192 1 150 2 295 1 376 1 103 1 46 2 
27 2 178 1 137 1 225 3 201 2 50 1 32 1 365 1 11 2 33 1 230 1 36 1 352 1 78 1 84 2 166 1 39 1 41 1 189 2 318 1 148 1 123 1 127 1 132 3 360 1 196 1 324 2 23 1 
80 1 24 1 178 2 189 2 374 1 123 2 330 1 113 2 162 1 360 1 376 1 175 1 23 2 
80 1 248 1 178 4 260 1 189 1 123 4 63 1 337 1 113 1 162 1 376 1 36 1 23 4 
16 1 80 1 177 1 216 1 178 2 302 1 189 1 21 1 191 1 123 2 330 1 113 2 376 1 23 2 
178 1 185 1 2 1 123 1 113 1 244 1 376 1 36 1 273 1 23 1 
80 1 178 2 189 1 262 1 7 1 123 2 113 1 162 1 376 1 115 1 23 2 
80 2 248 1 178 5 298 1 302 1 90 1 260 1 189 3 7 1 63 1 123 4 113 2 162 1 376 2 36 1 23 5 
80 2 248 1 178 5 298 1 302 1 260 1 189 3 7 1 63 1 123 4 113 2 162 1 67 1 376 2 36 1 23 5 
80 1 86 2 165 1 178 1 299 2 106 1 354 1 189 1 220 1 192 1 123 1 330 1 113 1 255 1 34 1 376 1 36 1 23 1 
80 1 177 1 178 1 302 1 189 1 21 1 326 1 374 1 123 1 330 1 113 2 376 1 23 1 
25 1 275 1 86 1 299 1 138 1 219 1 303 1 341 1 255 1 
275 1 193 1 323 1 
75 1 25 1 275 1 106 1 341 1 
118 1 275 1 25 2 39 1 137 1 106 1 225 2 121 1 373 1 264 1 75 2 127 1 193 1 341 2 375 1 132 2 211 1 196 1 323 1 
198 1 82 1 259 1 61 1 
198 1 253 1 259 1 109 1 292 1 306 1 61 1 
48 1 253 1 88 1 
143 1 198 1 91 2 259 1 109 1 292 1 61 1 253 3 349 1 242 1 306 3 286 1 
198 1 184 1 253 2 348 1 259 1 109 1 292 1 306 2 61 1 
198 1 145 1 2 1 109 1 292 1 319 1 253 1 349 1 306 1 273 1 343 1 
198 1 253 1 349 1 259 1 109 1 292 1 306 1 
253 1 349 1 259 2 109 1 292 1 306 1 61 1 
198 1 8 1 253 2 349 1 259 1 109 2 156 1 292 2 306 2 369 1 
198 2 184 2 259 1 109 1 155 1 292 1 61 1 284 1 253 3 349 1 229 1 306 3 343 1 
62 1 184 1 253 1 2 2 185 1 349 1 3 1 109 1 292 1 306 2 273 1 319 1 
198 2 184 2 259 1 109 2 292 2 61 1 239 1 284 1 253 4 349 1 348 1 306 4 343 1 
198 1 253 1 349 1 259 1 109 1 292 1 306 1 61 1 
198 3 184 2 91 1 259 2 109 1 292 1 147 1 61 2 284 1 253 4 242 1 306 4 286 1 343 1 
198 1 38 1 184 1 259 1 109 1 292 1 327 1 61 1 253 2 349 1 224 1 306 2 
198 1 253 3 321 1 349 1 259 1 91 2 242 2 109 1 292 1 306 3 286 1 61 1 
198 2 308 1 202 1 42 2 
104 1 253 1 349 1 109 1 292 1 306 1 
198 1 184 1 253 2 349 1 259 1 229 1 109 1 292 1 306 2 61 1 
37 1 
198 1 253 1 349 1 259 1 109 1 292 1 306 1 61 1 
198 1 184 1 91 1 259 1 109 1 292 1 61 1 253 3 349 1 229 1 306 3 
198 1 284 1 147 1 343 1 
198 1 259 1 

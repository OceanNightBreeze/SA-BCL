#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (9,349) (9,349) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 238 117 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 342 42 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 342 42 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 342 42 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 342 42 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 342 42 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 158 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 315 75 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 315 75 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 157 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (9,349) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 85 266 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 158 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 158 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 342 (115,174) (115,174) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
91 3 140 2 259 3 340 2 77 1 209 1 99 2 371 1 300 1 318 1 112 1 187 1 283 1 
128 1 245 1 259 9 156 2 209 1 230 1 300 1 5 1 186 2 112 1 187 3 231 1 65 2 283 2 335 1 13 1 91 9 137 1 233 1 140 5 338 1 217 1 340 2 77 4 99 2 291 2 371 1 318 6 
128 1 245 1 259 9 156 2 209 1 230 1 300 1 5 1 186 2 112 1 187 3 231 1 65 2 283 2 335 1 13 1 91 9 137 1 233 1 140 5 338 1 217 1 340 2 77 4 99 2 291 2 371 1 318 6 
128 1 245 1 259 10 156 2 209 1 230 1 300 1 5 1 186 2 112 1 187 4 231 1 65 2 283 2 335 1 13 1 91 10 137 1 233 1 140 6 338 1 217 1 340 2 77 5 99 2 291 2 371 1 318 7 
128 1 245 1 259 7 156 2 209 1 230 1 300 1 5 1 186 2 112 1 187 2 231 1 65 1 283 2 335 1 13 1 91 7 137 1 140 4 338 1 217 1 340 2 77 3 99 2 291 2 371 1 318 4 
335 1 91 4 233 1 140 3 259 4 156 1 338 1 340 1 77 2 209 1 99 1 291 1 371 1 300 1 318 3 186 1 187 1 65 2 
137 1 91 2 93 1 140 1 259 2 156 1 340 1 209 1 272 1 99 1 197 1 291 1 371 1 300 1 231 1 283 1 
335 1 91 9 233 1 140 5 141 1 245 1 328 1 259 9 156 1 338 1 340 2 77 4 209 1 99 2 291 1 371 1 230 1 300 1 186 1 318 7 112 1 187 3 65 2 283 1 
335 1 91 9 233 1 140 5 141 1 245 1 328 1 259 9 156 1 338 1 340 2 77 4 209 1 99 2 291 1 371 1 230 1 300 1 186 1 318 7 112 1 187 3 65 2 283 1 
154 1 252 1 310 1 352 1 195 1 45 1 353 1 369 1 319 1 355 1 213 1 224 1 134 1 304 1 
250 1 
45 1 250 1 317 1 264 1 213 2 224 2 208 1 76 1 
287 2 69 1 250 1 244 2 207 1 208 1 3 2 330 1 45 2 234 1 317 1 161 1 264 2 149 1 213 5 333 1 9 1 224 5 349 1 
158 1 250 1 208 1 
98 2 250 1 123 1 
353 2 369 2 263 1 355 1 310 2 134 2 304 2 195 2 
239 1 153 1 203 2 204 1 2 1 25 1 327 1 294 2 295 1 28 1 276 1 354 1 353 2 31 1 263 1 59 1 60 1 211 1 355 1 134 3 89 1 303 1 304 2 285 1 306 1 363 2 309 2 310 3 143 1 195 2 367 1 219 2 369 2 146 1 81 1 200 1 83 1 
353 1 369 1 319 1 355 1 252 1 310 1 134 1 352 1 304 1 195 1 
11 1 250 1 324 1 40 1 310 1 208 1 248 1 319 1 321 1 213 1 224 1 134 1 304 1 102 1 
11 1 250 1 310 1 208 1 195 1 353 1 369 1 248 1 319 1 321 1 213 2 224 2 134 1 304 1 102 1 
45 1 264 1 242 1 213 1 224 1 
183 1 45 1 250 1 317 1 264 1 213 2 224 2 208 1 
264 1 213 1 224 1 
68 1 310 2 195 1 368 1 353 1 369 1 263 2 134 2 304 2 
216 1 50 1 232 1 
203 1 285 1 306 1 309 1 295 1 310 1 143 1 354 1 219 1 263 1 211 1 83 1 134 1 89 1 347 1 303 1 
158 1 263 1 
285 1 203 1 306 1 258 1 295 1 309 1 310 2 143 1 195 1 354 1 353 1 219 1 211 1 281 1 83 1 134 2 89 1 303 1 304 1 232 1 
68 1 324 1 258 1 226 1 310 5 312 1 195 4 353 4 369 1 263 1 281 2 84 1 134 5 304 5 
353 2 104 1 319 1 310 2 134 2 352 1 304 2 195 2 
353 3 369 1 263 1 281 1 310 3 134 3 304 3 195 3 
353 1 319 1 310 1 134 1 352 1 304 1 195 1 
368 1 353 1 68 1 369 1 319 1 310 1 134 1 304 1 195 1 
153 1 203 1 204 1 258 1 327 1 294 2 295 1 276 1 354 1 353 3 31 1 263 1 59 1 60 1 248 1 211 1 355 1 281 1 213 1 89 1 134 4 303 1 35 1 304 3 285 1 11 1 68 1 306 1 363 1 309 1 310 4 143 1 195 3 196 1 219 1 369 2 146 1 81 1 200 1 319 1 321 1 83 1 224 1 102 1 
353 1 263 1 324 1 281 1 310 2 134 2 312 1 304 2 195 1 
11 1 68 1 250 1 258 1 310 3 195 3 353 3 196 1 369 1 248 1 319 1 281 2 321 1 213 1 224 1 134 3 151 1 304 3 102 1 
353 2 68 1 369 1 281 1 50 1 310 2 134 2 304 2 195 2 232 1 
203 1 285 1 306 1 309 1 295 1 310 1 143 1 219 1 354 1 263 1 211 1 83 1 134 1 89 1 303 1 
203 1 285 1 306 1 350 1 309 1 295 1 310 1 219 1 354 1 263 1 171 1 211 1 83 1 134 1 303 1 
204 1 205 1 25 2 327 1 294 2 130 1 276 1 297 1 59 1 189 1 232 2 216 2 138 1 39 1 363 4 145 1 146 2 81 1 199 1 200 1 50 2 176 1 293 1 274 1 
353 1 104 1 319 1 310 1 134 1 102 1 304 1 195 1 
61 1 67 1 37 1 
61 2 273 1 235 1 288 1 67 2 36 1 
61 1 67 1 
61 1 67 1 
235 1 288 1 
235 1 288 1 
235 1 288 1 
61 1 173 1 67 1 
61 1 173 1 67 1 
61 1 173 1 67 1 
61 1 41 1 67 1 
61 1 41 1 67 1 
61 1 41 1 67 1 
54 1 26 1 353 2 263 1 61 1 163 1 332 1 213 1 134 2 67 1 304 2 37 1 139 1 192 1 364 1 310 2 311 1 339 1 195 2 20 1 222 1 47 1 374 1 224 1 
165 1 54 1 250 1 74 1 339 2 311 3 97 1 247 2 61 2 110 1 82 1 332 2 163 2 374 2 213 2 224 2 334 1 67 2 36 1 
93 1 186 1 94 2 156 2 348 1 
291 1 186 1 156 1 
291 1 93 1 156 1 
93 1 186 2 94 1 156 3 348 1 58 1 
93 1 186 1 94 1 8 1 156 2 348 1 
0 2 127 2 105 1 244 1 243 1 207 1 3 1 208 1 107 1 330 3 264 1 265 1 279 1 213 5 189 1 287 1 138 1 250 2 192 1 364 1 271 2 118 1 45 4 98 3 234 2 317 1 222 1 199 1 123 1 224 5 238 1 293 1 
127 2 242 3 243 1 244 2 351 1 207 1 208 1 3 2 107 1 330 3 264 4 265 1 213 7 189 1 287 2 138 1 250 3 364 2 194 3 271 2 45 5 98 3 170 1 234 2 317 1 199 1 149 1 123 1 224 7 237 1 238 1 293 1 
287 1 105 1 244 1 118 1 3 1 330 1 45 1 265 1 149 1 213 2 224 2 238 1 
287 1 105 1 244 1 117 1 118 1 3 1 330 1 265 1 149 1 213 1 224 1 238 1 
307 1 
158 1 354 1 227 1 
354 1 267 1 
285 1 354 1 303 1 
354 1 92 1 
285 1 354 1 
285 1 354 3 72 1 227 2 303 1 284 1 
240 1 342 1 363 1 25 1 142 1 42 1 
240 1 342 1 363 1 25 1 42 1 
240 1 342 1 363 1 25 1 42 1 
240 1 342 1 363 1 25 1 42 1 
240 1 342 1 363 1 25 1 42 1 
203 1 53 1 178 1 295 1 259 1 181 1 29 1 354 1 298 1 211 1 34 1 283 2 285 1 249 2 91 1 306 1 116 1 309 1 340 1 218 2 44 2 219 1 99 1 
203 1 167 1 91 1 249 1 306 1 93 1 295 1 309 1 259 1 156 2 16 1 340 1 218 1 44 1 58 1 18 1 219 1 99 1 291 1 371 1 343 1 186 1 64 1 357 1 177 1 283 1 
203 1 295 1 259 2 156 2 58 1 209 1 159 1 300 1 186 1 64 1 357 1 283 1 167 1 249 1 91 2 306 1 93 1 140 1 309 1 218 1 340 1 44 1 18 1 219 1 99 1 291 1 371 1 343 1 318 1 177 1 
203 1 155 1 295 1 259 3 156 2 58 1 29 1 209 1 300 1 186 1 64 1 357 1 283 1 167 1 249 1 91 3 306 1 93 1 140 1 309 1 16 1 218 1 340 1 44 1 219 1 99 1 291 1 343 1 318 2 177 1 
203 1 155 1 295 1 259 2 156 2 58 1 209 1 300 1 186 1 357 1 283 1 167 1 249 1 91 2 306 1 93 1 140 1 309 1 16 1 218 1 44 1 219 1 291 1 343 1 318 2 
184 1 
203 2 323 1 324 1 244 1 207 1 208 1 3 1 330 2 331 1 210 2 248 1 109 1 211 2 280 2 212 2 213 5 282 1 285 1 11 1 287 1 250 2 70 2 251 1 290 2 79 4 219 2 80 1 223 2 123 2 224 5 178 1 85 1 295 1 181 1 354 1 262 2 264 6 265 1 266 1 356 1 134 1 88 1 304 1 306 1 40 1 193 1 309 2 310 1 98 2 317 3 234 2 319 1 321 1 51 1 102 1 
11 1 323 1 251 1 324 1 40 1 310 1 79 2 80 1 248 1 264 1 280 1 319 1 321 1 356 1 213 2 224 2 134 1 102 1 51 1 304 1 
11 1 323 1 250 1 251 1 324 1 40 1 310 1 76 1 208 1 290 1 79 3 80 1 317 1 248 1 264 1 319 1 321 1 356 1 213 3 224 3 134 1 102 1 51 1 304 1 
323 1 324 1 248 1 264 2 280 1 213 3 356 1 134 1 304 1 11 1 251 1 40 1 310 1 76 1 79 3 290 1 80 1 317 1 319 1 321 1 223 1 224 3 51 1 102 1 
154 1 323 1 324 1 352 1 208 1 353 1 248 1 264 2 280 1 355 1 213 3 356 1 134 2 304 2 11 1 305 1 250 1 251 1 40 1 252 1 310 2 195 1 76 1 290 1 79 3 369 1 80 1 317 1 319 2 321 1 223 1 224 3 51 1 102 1 
323 1 324 1 244 1 207 1 3 1 208 1 330 1 248 1 210 2 109 1 212 2 280 2 213 4 282 1 11 1 287 1 251 1 70 2 250 1 79 4 290 2 80 1 123 2 223 2 224 4 262 2 264 4 356 1 134 1 304 1 40 1 193 1 310 1 98 2 234 1 317 2 319 1 321 1 102 1 51 1 
323 1 324 1 244 1 207 1 208 1 3 1 330 1 262 2 210 2 248 1 264 4 109 1 280 2 212 2 213 4 356 1 282 1 134 1 304 1 11 1 287 1 250 1 70 2 251 1 40 1 310 1 290 2 79 4 366 1 220 1 80 1 317 2 234 1 373 1 319 1 321 1 223 2 123 2 224 4 51 1 102 1 
154 1 323 1 324 1 244 1 207 1 3 1 208 1 330 1 248 1 210 2 109 1 212 2 280 2 213 4 282 1 11 1 287 1 251 1 70 2 250 1 252 1 79 4 290 2 220 1 80 1 123 2 223 2 224 4 352 1 353 1 262 2 264 4 355 1 356 1 134 2 304 2 40 1 310 2 195 1 366 1 369 1 234 1 317 2 319 2 373 1 321 1 102 1 51 1 
154 1 323 1 324 1 244 1 207 1 3 1 208 1 330 1 248 1 210 2 109 1 280 2 111 1 164 1 213 4 11 1 214 2 287 1 251 1 70 2 250 1 252 1 79 4 290 2 80 1 345 2 223 2 224 4 352 1 353 1 264 4 355 1 301 1 356 1 134 2 304 2 40 1 310 2 195 1 369 1 98 2 234 1 317 2 319 2 373 1 321 1 102 1 51 1 
154 1 323 1 324 1 244 1 207 1 3 1 208 1 330 1 248 1 210 2 109 1 280 3 212 2 213 4 282 1 11 1 287 1 251 1 70 2 250 1 252 1 290 3 79 5 220 1 80 1 223 3 123 2 224 4 352 1 353 1 262 2 264 5 87 1 355 1 356 1 134 2 304 2 40 1 310 2 195 1 366 1 369 1 234 1 317 2 319 2 373 1 321 1 102 1 51 1 
323 1 324 1 244 1 207 1 208 1 3 1 330 1 262 2 210 2 248 1 109 1 87 1 264 5 212 2 280 3 213 4 356 1 282 1 134 1 304 1 11 1 287 1 250 1 70 2 251 1 40 1 310 1 79 5 290 3 366 1 220 1 80 1 317 2 234 1 373 1 319 1 321 1 123 2 223 3 224 4 51 1 102 1 
154 1 323 1 324 1 244 1 207 1 3 1 208 1 330 1 248 1 210 2 109 1 280 2 164 1 213 4 11 1 214 2 287 1 251 1 70 2 250 1 252 1 79 4 290 2 80 1 345 2 223 2 224 4 352 1 353 1 264 4 355 1 356 1 134 2 304 2 40 1 193 1 310 2 195 1 369 1 98 2 234 1 317 2 319 2 321 1 102 1 51 1 
239 1 203 7 204 2 327 2 276 2 4 1 159 1 59 2 211 2 281 1 6 1 285 3 215 1 119 1 219 6 344 1 81 2 120 1 254 1 178 1 25 1 294 4 295 4 181 1 28 2 354 4 353 1 31 1 185 1 268 1 134 1 303 1 304 1 269 1 306 3 363 2 309 7 310 1 195 1 145 1 146 1 148 1 200 2 
204 1 25 1 327 1 294 2 130 1 276 1 108 1 107 1 353 1 59 1 134 1 304 1 189 1 232 1 68 1 216 1 138 1 363 3 310 1 195 1 369 1 146 2 81 1 199 1 200 1 236 1 176 1 50 1 293 1 
204 1 25 3 327 1 294 2 130 1 276 1 158 1 263 1 59 1 132 1 115 1 361 1 363 5 73 1 145 1 342 1 146 2 81 1 199 1 200 1 174 1 176 1 293 1 
239 1 204 2 25 8 327 2 294 4 27 1 130 1 260 1 276 2 108 1 107 2 31 1 263 1 59 2 63 1 189 1 232 11 360 1 216 11 12 1 138 2 336 3 363 14 19 3 146 6 81 1 147 1 199 2 200 2 322 1 176 2 50 4 293 1 
203 1 239 1 204 1 258 1 25 1 294 2 327 1 295 1 108 1 276 1 354 1 353 1 31 1 263 1 59 1 211 1 32 1 281 1 7 1 89 1 134 2 303 1 304 1 285 1 286 1 306 1 363 2 309 1 310 2 143 1 195 1 219 1 146 1 81 1 200 1 83 1 50 1 347 1 
239 1 203 1 204 3 327 3 276 3 108 1 107 2 59 3 162 2 60 2 211 1 281 1 113 2 285 2 115 1 216 6 73 1 219 1 342 1 81 3 121 2 174 1 83 2 124 1 176 3 293 3 258 1 25 10 294 6 295 2 130 3 353 1 354 2 31 1 228 2 263 1 132 1 134 3 89 2 303 2 304 1 189 2 232 6 361 1 306 2 138 2 363 19 309 1 310 3 143 2 195 1 146 9 372 1 199 3 200 3 50 6 
216 1 204 1 138 1 363 2 25 2 294 2 327 1 260 1 276 1 145 1 59 1 81 1 199 1 200 1 176 1 50 1 232 1 274 1 
216 1 204 1 363 2 294 2 327 1 130 1 276 1 145 1 297 1 59 1 146 2 81 1 200 1 176 1 50 1 293 1 189 1 232 1 
204 1 25 2 327 1 294 2 130 1 107 1 276 1 260 1 59 1 189 1 232 2 216 2 138 1 363 4 145 1 146 2 81 1 199 1 200 1 50 2 176 2 293 1 
216 1 204 1 138 1 363 2 25 2 294 2 327 1 260 1 276 1 59 1 81 1 199 1 254 1 200 1 176 1 50 1 232 1 274 1 
216 1 204 1 363 2 294 2 327 1 130 1 276 1 297 1 59 1 146 2 81 1 254 1 200 1 176 1 50 1 293 1 189 1 232 1 
204 1 25 2 327 1 294 2 130 1 107 1 276 1 260 1 59 1 189 1 232 2 216 2 138 1 363 4 146 2 81 1 199 1 200 1 254 1 50 2 176 2 293 1 
204 1 25 2 327 1 294 2 130 1 107 1 276 1 260 1 59 1 189 1 232 2 216 2 138 1 363 4 146 2 81 1 199 1 200 1 50 2 176 2 293 1 
239 1 203 1 204 1 25 1 294 2 327 1 295 1 276 1 354 1 31 1 263 1 60 1 59 1 211 1 89 1 134 1 303 1 285 1 306 1 363 2 309 1 310 1 143 1 219 1 146 1 81 1 200 1 83 1 
239 1 203 1 204 1 25 1 350 1 294 2 327 1 295 1 276 1 354 1 31 1 263 1 59 1 211 1 134 1 303 1 285 1 306 1 363 2 309 1 310 1 219 1 171 1 146 1 81 1 200 1 83 1 52 1 
204 1 25 2 327 1 294 2 130 1 107 1 276 1 108 1 260 1 59 1 189 1 232 2 216 2 138 1 363 4 146 2 81 1 199 1 200 1 50 2 176 2 293 1 
203 1 204 1 25 2 294 2 327 1 130 1 295 1 260 1 276 1 107 1 354 1 159 1 60 1 59 1 89 1 134 1 303 1 113 1 189 1 232 2 285 1 216 2 138 1 306 1 363 4 309 1 310 1 143 1 219 1 146 2 81 1 199 1 200 1 83 1 176 2 50 2 293 1 
204 1 25 2 327 1 294 2 260 1 276 1 108 1 107 1 353 1 59 1 134 1 189 1 304 1 232 1 68 1 216 1 138 1 363 3 310 1 195 1 96 1 369 1 146 1 81 1 199 1 200 1 176 1 50 1 293 1 
241 1 204 2 25 9 327 2 294 4 56 1 130 3 157 1 276 2 107 3 260 3 59 2 189 3 90 2 12 1 14 2 138 3 336 1 363 19 75 1 289 1 78 1 19 2 146 10 147 1 199 3 176 6 125 1 293 3 103 1 
204 3 25 14 327 3 294 6 56 1 326 1 130 2 157 1 260 2 276 3 107 3 59 3 358 1 189 2 166 1 90 1 14 4 138 3 336 2 363 26 75 2 17 1 289 1 19 2 315 1 172 2 146 12 147 2 199 3 176 4 125 2 293 2 101 1 103 1 
204 3 56 1 327 3 326 1 157 1 107 4 276 3 59 3 166 1 12 1 115 1 14 4 336 3 73 1 75 1 289 1 17 1 78 1 19 4 342 1 172 1 174 1 176 7 125 2 293 5 25 20 294 6 130 3 180 1 260 4 132 1 358 1 189 4 90 1 361 1 138 4 363 41 315 1 146 21 199 5 147 3 101 1 103 1 
204 4 25 20 326 1 327 4 294 8 56 1 130 4 180 1 157 1 276 4 107 4 260 3 59 4 132 1 358 1 189 3 166 1 90 1 361 1 115 1 12 1 14 4 138 4 336 3 363 38 73 1 75 1 17 1 289 1 78 1 342 1 19 4 315 1 172 2 146 18 147 3 199 5 174 1 176 7 125 2 293 4 101 1 103 1 
204 1 25 5 327 1 294 2 56 1 130 1 157 1 276 1 59 1 132 1 115 1 361 1 14 1 336 1 363 9 73 1 75 1 289 1 342 1 19 1 146 4 199 1 147 1 174 1 176 1 125 1 293 1 
370 1 61 1 110 1 82 1 163 1 332 1 374 1 339 1 67 1 36 1 
47 1 37 1 
191 1 314 1 61 1 179 1 163 1 332 1 374 1 339 1 67 1 
22 1 173 1 
277 1 273 1 41 1 
165 1 54 1 250 1 74 1 339 1 311 2 247 1 61 1 110 1 82 1 332 1 163 1 213 1 374 1 224 1 334 1 67 1 36 1 
165 1 54 1 250 1 74 1 339 1 311 2 247 1 61 1 110 1 82 1 332 1 163 1 213 1 374 1 224 1 334 1 67 1 36 1 
165 1 54 1 250 1 74 1 339 1 311 2 247 1 61 1 110 1 82 1 332 1 163 1 213 1 374 1 224 1 334 1 67 1 36 1 
22 1 273 1 173 1 
22 1 273 1 173 1 
277 1 41 1 
277 1 273 1 41 1 
139 1 26 1 
26 1 353 2 247 1 263 1 61 1 163 1 332 1 213 1 134 2 67 1 304 2 37 1 139 1 71 1 192 1 364 1 74 1 310 2 339 1 311 1 195 2 45 1 20 1 222 1 47 1 374 1 224 1 
203 2 239 1 204 1 86 1 25 1 294 2 327 1 295 1 182 1 28 2 108 1 276 1 354 1 31 1 59 1 134 2 304 2 135 1 285 1 190 1 38 1 306 1 363 2 309 2 310 2 119 1 219 2 146 1 81 1 148 1 200 1 
285 1 203 1 136 1 178 1 306 1 295 1 309 1 181 1 218 1 354 1 219 1 160 1 298 1 211 1 
203 1 167 1 306 1 93 1 206 1 295 1 309 1 156 2 16 1 218 1 58 1 313 1 219 1 291 1 160 1 343 1 186 1 177 1 
203 2 167 1 306 1 93 1 206 1 295 1 309 2 156 2 16 1 218 1 58 1 313 1 219 2 291 1 160 1 159 1 343 1 186 1 177 1 
203 1 167 1 306 1 93 1 206 1 309 1 295 1 156 2 16 1 218 1 58 1 261 1 219 1 291 1 343 1 186 1 177 1 
188 1 
330 1 287 1 250 1 234 1 244 1 9 1 207 1 208 1 3 1 
127 1 138 1 250 1 271 1 107 1 330 1 98 2 234 2 199 1 123 1 293 1 189 1 
250 1 317 1 264 1 213 1 224 1 208 1 
203 2 178 1 85 1 244 2 295 1 207 1 181 1 3 2 330 1 354 1 331 1 211 2 265 1 264 2 266 1 213 2 285 1 287 2 306 1 309 2 337 1 219 2 234 1 317 1 149 1 224 2 
330 1 158 1 250 1 234 1 9 1 208 1 349 1 
244 1 207 1 3 1 208 1 330 1 262 1 264 1 212 1 213 1 282 1 287 1 250 2 98 1 234 1 317 1 123 1 224 1 
203 3 325 2 244 4 246 2 57 1 207 4 208 2 3 4 107 2 330 9 331 1 159 1 211 1 213 5 9 1 284 1 285 3 11 2 287 4 250 8 337 1 219 3 21 2 346 2 123 6 224 5 293 2 24 1 349 1 255 2 127 6 225 1 295 4 227 2 354 10 228 2 265 2 264 5 267 3 303 3 189 2 270 2 306 3 138 2 362 2 92 2 308 1 309 3 271 6 43 2 98 12 317 3 234 8 199 2 
127 5 325 1 244 2 326 1 129 1 207 2 3 2 208 2 107 2 330 8 331 1 265 1 264 1 213 1 358 1 189 2 166 1 287 2 250 5 138 2 336 1 271 5 253 1 17 1 21 2 98 6 19 1 317 1 234 5 147 1 199 2 123 3 224 1 293 2 101 1 
154 1 325 1 244 1 207 1 352 1 3 1 330 2 353 1 132 1 355 1 213 1 134 1 304 1 361 1 287 1 73 1 252 1 310 1 195 1 341 1 21 2 220 1 369 1 234 2 199 2 319 1 224 1 293 1 
203 1 153 1 204 1 327 1 294 2 295 1 276 1 353 2 354 1 31 1 263 1 60 1 59 1 211 1 355 1 134 3 89 1 303 1 304 2 285 1 306 1 363 1 309 1 310 3 143 1 195 2 219 1 369 2 146 1 81 1 200 1 83 1 
287 1 127 1 250 2 244 1 271 1 207 1 3 1 208 1 330 1 342 1 98 2 331 1 234 2 265 1 123 1 
82 1 150 1 26 1 163 1 339 1 
48 1 163 1 339 1 
48 1 163 1 339 1 
48 1 163 1 339 1 
46 1 163 1 339 1 
46 1 163 1 339 1 
46 1 163 1 339 1 
163 1 339 1 
61 1 67 1 
204 1 361 2 25 5 363 10 327 1 294 2 56 1 130 3 73 1 276 1 260 2 341 1 59 1 146 5 199 2 132 2 176 5 293 2 
204 1 138 1 25 2 363 2 56 1 294 2 327 1 276 1 260 1 59 1 199 1 176 1 
204 1 138 1 25 2 363 4 56 1 294 2 327 1 130 1 276 1 107 1 260 1 146 2 59 1 199 1 176 2 293 1 189 1 
204 3 361 1 363 3 25 1 56 1 294 6 327 3 130 1 78 1 276 3 260 1 172 1 146 2 59 3 132 1 122 1 176 2 
204 4 25 11 327 4 294 8 56 1 130 2 276 4 107 2 260 2 59 4 132 1 66 1 10 1 189 2 361 1 115 1 168 1 138 2 336 3 363 21 73 1 78 1 342 1 19 3 172 1 146 10 147 1 199 3 49 1 174 1 176 4 293 3 
204 1 25 4 327 1 294 2 56 1 130 1 276 1 59 1 132 1 166 1 115 1 361 1 336 1 363 7 73 1 342 1 19 1 146 3 199 1 147 1 174 1 176 1 293 1 
204 2 25 6 56 1 327 2 294 4 130 1 276 2 107 1 260 1 59 2 132 1 10 1 166 1 361 1 115 1 12 1 138 1 336 1 363 10 73 1 342 1 19 2 146 4 147 1 199 2 174 1 176 2 293 1 
204 3 25 9 327 3 294 6 56 1 326 1 130 2 260 1 276 3 107 2 59 3 132 1 358 1 10 1 189 2 166 1 361 1 115 1 138 2 336 1 363 18 73 1 17 1 342 1 19 1 146 9 172 1 147 1 199 3 174 1 176 3 293 3 101 1 
204 3 25 10 327 3 294 6 56 1 326 1 130 2 260 2 276 3 107 2 59 3 132 1 358 1 10 1 189 1 166 1 361 1 115 1 138 2 336 1 363 16 73 1 17 1 342 1 19 1 172 1 146 6 147 1 199 3 174 1 176 4 293 2 101 1 
204 1 25 4 327 1 294 2 56 1 130 1 276 1 59 1 132 1 166 1 115 1 361 1 336 1 363 7 73 1 342 1 19 1 146 3 199 1 147 1 174 1 176 1 293 1 
204 1 25 6 327 1 294 2 56 1 326 1 130 1 260 1 276 1 107 2 59 1 358 1 189 2 166 1 138 2 336 1 363 12 17 1 19 1 146 6 147 1 199 2 176 2 293 2 101 1 
204 4 25 10 327 4 294 8 56 1 326 1 130 2 260 1 276 4 107 2 59 4 132 1 358 1 10 1 189 1 166 1 361 1 115 1 138 2 336 1 363 17 73 1 17 1 342 1 19 1 146 7 172 2 147 1 199 3 174 1 176 3 293 2 101 1 
204 4 25 9 56 1 327 4 294 8 326 1 130 3 260 3 276 4 107 3 59 4 358 1 189 2 166 1 138 3 336 1 363 16 17 1 78 1 19 1 146 7 172 2 147 1 199 3 176 6 293 2 101 1 
115 2 361 3 363 7 25 3 130 3 73 1 260 3 146 4 199 1 132 3 174 1 176 6 293 1 
204 4 25 10 56 1 327 4 294 8 326 1 130 2 260 1 276 4 107 2 59 4 132 1 358 1 189 1 166 1 361 1 115 1 138 2 336 1 363 17 73 1 17 1 78 1 342 1 19 1 146 7 172 2 147 1 199 3 174 1 176 3 293 2 101 1 
204 2 115 1 361 1 363 7 25 4 294 4 327 2 73 1 130 1 260 1 276 2 342 1 146 3 59 2 172 1 199 1 132 1 174 1 176 2 293 1 
115 1 361 1 25 3 363 5 130 1 73 1 158 1 342 1 146 2 199 1 132 1 174 1 176 1 293 1 
204 1 138 1 25 2 363 4 294 2 327 1 130 1 276 1 107 1 260 1 146 2 59 1 199 1 176 2 293 1 10 1 189 1 
12 1 138 1 336 1 363 7 25 3 130 1 107 1 260 1 19 2 146 4 147 1 199 1 176 2 293 1 189 1 
204 1 25 9 294 2 327 1 130 2 107 2 260 1 276 1 59 1 132 1 189 2 361 1 115 1 12 1 360 1 138 2 336 2 363 17 73 1 342 1 19 2 146 8 172 1 199 3 174 1 322 1 176 3 293 3 
19 1 146 1 363 1 
336 1 363 1 25 1 
204 1 138 1 363 6 25 3 327 1 294 2 130 2 276 1 107 1 260 1 228 1 59 1 146 3 199 1 176 3 10 1 293 1 189 1 
204 1 25 6 327 1 294 2 56 1 326 1 130 1 260 1 276 1 107 2 59 1 358 1 189 2 166 1 138 2 336 1 363 12 17 1 19 1 146 6 147 1 199 2 176 2 293 2 101 1 
361 1 25 3 363 6 73 1 130 1 260 1 146 3 199 1 132 1 176 2 293 1 
361 1 115 1 204 1 25 1 363 3 294 2 327 1 130 1 260 1 276 1 146 2 172 1 59 1 132 1 122 1 174 1 176 2 
263 1 324 1 23 1 310 1 134 1 304 1 312 1 
1 1 324 1 310 1 365 1 106 1 312 1 263 1 198 1 62 1 23 1 134 1 304 1 
203 4 285 1 178 1 126 1 306 1 295 1 309 4 181 1 219 4 354 1 159 1 229 1 211 1 
203 2 285 1 215 1 306 1 309 2 295 2 219 2 354 1 278 1 120 1 185 1 268 1 303 1 24 1 
203 1 167 1 219 1 291 1 306 1 211 1 93 1 295 1 309 1 156 1 
203 2 285 1 38 1 306 1 309 2 295 1 16 1 219 2 354 1 159 1 148 1 
203 5 285 2 178 1 269 1 306 2 309 5 295 2 181 1 219 4 354 3 159 1 229 1 211 1 344 1 148 1 24 1 
203 5 285 2 178 1 306 2 309 5 295 2 181 1 131 1 219 4 354 3 159 1 229 1 211 1 344 1 148 1 24 1 
285 1 158 1 203 1 354 1 219 1 178 1 306 1 211 1 295 1 309 1 181 1 
285 1 203 1 306 1 295 1 309 1 310 2 143 1 195 1 354 1 353 1 219 1 263 1 211 1 281 1 83 1 134 2 303 1 304 1 
285 2 203 1 306 1 92 1 295 1 309 1 246 1 310 2 143 1 195 2 354 3 353 1 219 1 263 1 319 1 321 1 281 1 83 1 134 2 303 2 102 1 304 2 24 1 
203 2 126 1 295 1 246 1 353 1 354 3 263 1 281 1 134 2 303 2 304 2 285 2 306 1 92 1 309 2 310 2 195 2 219 2 171 1 319 1 321 1 83 1 24 1 102 1 
11 1 285 1 203 3 256 1 126 1 250 1 306 1 92 1 295 1 309 3 227 1 246 1 208 1 219 3 354 4 211 1 264 1 320 1 213 2 267 1 224 2 303 1 24 1 
11 1 285 1 203 3 126 1 250 1 306 1 92 1 362 1 295 1 309 3 227 1 246 1 208 1 219 3 354 4 211 1 264 1 213 2 267 1 224 2 303 1 24 1 
203 1 219 1 4 1 306 1 295 1 309 1 
203 6 285 2 215 1 269 1 306 2 15 1 309 6 295 3 28 1 4 1 219 5 354 3 159 1 344 1 211 2 148 1 6 1 268 1 303 1 284 1 
203 1 204 2 25 3 294 4 327 2 130 1 295 1 108 1 276 2 354 1 353 1 263 1 159 1 59 2 162 1 60 1 132 1 281 1 134 2 89 1 303 1 113 1 304 1 285 1 190 1 361 1 115 1 306 1 363 5 73 1 309 1 310 2 143 1 195 1 219 1 342 1 146 2 81 2 199 1 200 2 174 1 83 1 176 1 293 1 
203 1 255 1 244 2 227 1 207 2 208 1 3 2 330 1 354 2 211 1 264 2 213 3 267 1 9 1 11 1 287 2 250 1 270 1 362 1 309 1 337 1 43 1 219 1 45 1 234 1 317 1 224 3 349 1 
285 1 203 2 354 2 219 2 4 1 159 1 306 1 225 1 295 2 309 2 227 1 303 1 284 1 
285 1 203 1 306 1 295 1 309 1 310 2 195 1 354 1 353 1 219 1 263 1 171 1 211 1 281 1 83 1 134 2 303 1 304 1 
203 1 285 1 215 1 306 1 15 1 309 1 295 2 219 1 354 1 268 1 303 1 24 1 284 1 
263 1 55 1 299 1 329 1 296 1 
11 1 250 1 55 2 329 2 208 1 296 2 45 1 196 1 263 1 248 1 299 1 319 1 133 1 321 1 175 1 213 2 224 2 102 1 152 1 
299 1 86 1 310 1 134 1 182 1 329 1 304 1 296 1 135 1 
299 1 175 1 152 1 
209 1 99 1 91 1 371 1 300 1 140 1 259 1 340 1 
137 1 91 4 275 1 140 3 169 1 259 4 340 1 77 1 209 2 30 1 99 1 300 2 318 2 187 1 
91 2 140 1 141 1 259 2 340 1 209 1 99 1 371 1 292 1 300 1 318 1 359 1 
91 3 137 2 275 2 140 1 259 3 340 1 144 1 209 1 30 1 99 1 371 1 300 1 
221 2 140 2 33 1 302 1 
99 1 316 1 91 1 371 1 259 1 340 1 
209 1 99 1 91 2 371 1 300 1 140 1 318 1 245 1 259 2 340 1 
100 1 
209 1 99 1 91 1 371 1 300 1 140 1 259 1 340 1 
209 1 158 1 300 1 140 1 
209 1 99 1 91 1 300 1 140 1 259 1 340 1 
259 1 283 1 44 1 
91 3 137 2 275 1 140 1 259 3 340 1 209 1 30 1 99 1 371 1 300 1 114 1 
209 1 99 1 91 2 300 1 140 1 318 1 65 1 259 2 340 1 
99 1 291 1 91 1 371 1 186 1 140 1 259 1 156 1 338 1 340 1 77 1 
209 1 99 1 91 1 371 1 140 1 259 1 340 1 
209 2 99 1 91 1 371 1 300 1 259 1 340 1 
91 2 140 1 259 2 340 2 95 1 209 1 99 2 371 1 201 1 202 1 
91 3 140 2 245 1 259 3 340 1 77 1 209 1 99 1 371 1 230 1 300 1 318 2 187 1 
91 2 93 1 140 1 257 1 259 2 156 2 340 1 58 1 209 1 99 1 291 1 371 1 300 1 186 1 318 1 
91 4 233 1 140 2 259 4 340 2 77 1 209 1 99 2 371 1 300 1 318 2 187 1 65 1 
91 3 137 1 140 1 245 1 259 3 340 1 209 1 99 1 371 1 300 1 318 1 
140 1 169 1 187 1 77 1 
209 1 140 1 

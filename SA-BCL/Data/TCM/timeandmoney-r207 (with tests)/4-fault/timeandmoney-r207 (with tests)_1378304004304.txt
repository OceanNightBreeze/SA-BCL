#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (58,115,259) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (58,115,259) 192 224 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (58,115,259) 192 342 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (58,115,259) (58,115,259) 241 7 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 18 273 (147,269) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 18 273 (235,315) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (58,115,259) 192 219 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 101 4 313 1 231 1 301 1 189 1 284 1 302 1 322 1 216 2 113 9 35 1 92 9 156 1 63 1 157 5 355 1 307 1 139 2 204 1 245 7 357 3 180 1 75 2 
322 1 216 2 113 9 22 1 101 4 313 1 35 1 92 9 156 1 355 1 157 5 63 1 231 1 307 1 204 1 139 2 245 7 301 1 189 1 357 3 284 1 180 1 302 1 75 2 
22 1 101 4 231 2 276 1 301 2 189 1 284 1 255 1 302 1 322 1 29 1 216 2 348 1 113 9 35 1 92 9 156 1 354 1 355 2 157 5 40 1 307 1 204 2 139 2 245 6 357 3 180 1 75 2 
22 1 101 4 231 2 276 1 301 2 189 1 284 1 255 1 302 1 322 1 29 1 216 2 348 1 113 9 35 1 92 9 156 1 354 1 355 2 157 5 40 1 307 1 204 2 139 2 245 6 357 3 180 1 75 2 
22 1 101 5 231 2 276 1 301 2 189 1 284 1 255 1 302 1 322 1 29 1 216 2 348 1 113 10 35 1 92 10 156 1 354 1 355 2 157 6 40 1 307 1 204 2 139 2 245 7 357 4 180 1 75 2 
22 1 101 3 231 2 276 1 301 2 189 1 284 1 255 1 302 1 322 1 29 1 216 1 348 1 113 7 35 1 92 7 354 1 355 2 157 4 40 1 307 1 204 2 139 2 245 4 357 2 180 1 75 2 
322 1 216 2 113 4 101 2 92 4 156 1 355 1 157 3 231 1 307 1 139 1 204 1 245 3 189 1 357 1 180 1 302 1 75 1 
322 1 113 2 92 2 201 1 157 1 340 1 355 1 65 1 40 1 231 1 276 1 139 1 301 1 189 1 302 1 75 1 
322 1 113 3 101 1 92 3 157 2 139 2 301 1 245 1 189 1 357 1 284 1 302 1 75 2 
118 1 20 1 317 1 
118 1 50 1 152 2 
62 2 0 1 275 2 329 2 32 2 236 1 132 2 261 2 
0 1 79 1 338 2 339 1 81 1 147 1 3 1 182 1 82 1 273 1 106 1 51 1 84 1 275 2 232 1 278 2 299 1 87 1 236 1 171 2 111 1 198 1 32 3 291 1 351 1 116 1 132 3 133 2 242 1 39 1 261 2 62 2 329 2 138 2 159 1 160 1 43 1 
62 1 89 1 275 1 329 1 32 1 146 1 236 1 71 1 132 1 261 1 
62 1 89 1 250 1 19 1 32 1 259 1 132 1 58 1 83 1 
62 1 89 1 250 1 275 1 329 1 19 1 32 1 132 1 58 1 261 1 
327 1 226 1 99 1 188 1 115 1 
118 1 226 1 289 1 99 2 163 1 188 1 115 2 20 1 
99 1 188 1 115 1 
89 1 226 1 99 1 32 1 146 1 115 1 90 1 132 1 261 1 62 1 275 1 329 1 236 1 71 1 
118 1 
118 1 226 1 289 1 130 1 99 2 188 1 115 2 20 1 
336 1 172 2 226 2 347 1 289 1 99 5 80 2 115 5 38 2 118 1 175 1 177 1 233 1 298 1 188 2 55 1 20 1 73 1 321 1 
111 1 196 1 338 1 32 2 3 1 147 1 91 1 132 2 273 1 82 1 261 1 51 1 84 1 62 1 329 1 138 1 221 1 278 1 87 1 43 1 
0 1 317 1 
0 2 32 2 33 1 132 2 261 1 62 2 275 1 329 1 178 1 
96 1 316 1 91 1 
0 1 111 1 338 1 32 1 147 1 3 1 132 1 6 1 82 1 273 1 51 1 84 1 138 1 278 1 87 1 43 1 
62 3 0 1 275 1 329 3 221 1 32 3 132 3 261 3 
62 1 89 1 329 1 32 1 146 1 132 1 261 1 
89 1 32 1 33 1 132 1 261 1 62 1 275 1 329 1 178 1 
224 1 89 1 250 1 196 1 32 2 132 2 261 2 62 2 275 1 329 2 19 1 221 1 178 1 192 1 58 1 
62 2 0 1 329 1 221 1 32 2 280 1 132 2 83 1 261 1 
62 1 89 1 250 1 196 1 329 1 19 1 342 1 221 1 32 1 132 1 192 1 58 1 261 1 
62 1 275 1 329 1 178 1 32 1 91 1 132 1 261 1 
0 1 111 1 338 1 32 1 147 1 3 1 132 1 82 1 273 1 84 1 51 1 138 1 278 1 87 1 43 1 
0 1 111 1 338 1 32 1 3 1 132 1 273 1 84 1 51 1 24 1 138 1 278 1 235 1 87 1 43 1 
96 1 79 2 316 1 351 1 91 1 182 1 116 1 133 2 202 1 185 1 232 1 67 1 12 1 159 1 299 1 171 2 129 1 170 1 13 1 
62 1 89 1 250 1 329 1 32 1 102 1 132 1 261 1 
0 1 337 1 196 1 32 5 132 5 83 1 261 4 62 5 66 1 275 1 329 4 221 2 178 1 280 1 
62 1 89 1 329 1 32 1 146 1 132 1 261 1 
330 1 334 1 
330 1 334 1 
234 1 191 1 
234 1 191 1 
234 1 191 1 
330 1 52 1 334 1 
330 1 52 1 334 1 
330 1 334 1 318 1 
330 2 217 1 234 1 191 1 334 2 44 1 
330 1 52 1 334 1 
193 1 330 1 334 1 
193 1 330 1 334 1 
193 1 330 1 334 1 
27 2 309 2 239 2 99 2 207 3 21 1 31 2 115 2 155 1 353 1 118 1 9 1 203 1 330 2 54 1 267 2 343 1 334 2 44 1 
223 1 0 1 309 1 272 1 207 1 99 1 165 1 318 1 150 1 126 1 344 1 27 1 31 1 32 2 115 1 132 2 261 2 62 2 16 1 203 1 329 2 330 1 267 1 334 1 
355 1 231 1 204 1 
355 1 340 1 231 1 
355 3 340 1 204 2 145 1 282 1 215 1 
355 2 340 1 204 1 145 1 282 1 359 1 
355 2 340 1 204 1 145 2 282 1 
226 4 272 1 1 1 99 5 98 1 80 1 50 1 185 1 149 1 126 1 150 1 168 1 12 1 233 3 187 1 188 1 109 1 152 3 286 2 321 1 172 1 258 1 30 2 289 1 200 1 115 5 38 1 175 2 118 2 20 1 94 2 77 1 
336 1 270 1 226 7 121 1 1 3 99 9 80 2 48 1 50 3 185 3 149 3 341 1 150 4 168 2 12 3 233 8 188 6 152 9 286 6 321 1 172 2 153 1 258 1 30 6 289 1 200 3 115 9 303 5 38 2 175 6 118 5 327 5 205 1 20 1 77 2 
336 1 226 2 98 1 99 3 1 1 80 1 50 2 185 1 149 1 150 1 168 1 12 1 233 3 109 1 286 2 152 4 172 1 30 2 115 3 200 1 38 1 118 3 175 2 20 1 77 1 94 1 
336 1 270 1 226 3 99 4 98 1 1 2 80 1 48 1 50 3 185 2 149 2 341 1 150 2 168 1 12 2 233 5 109 1 152 7 286 4 172 1 30 4 115 4 200 2 38 1 118 4 175 4 20 1 77 1 94 2 
51 1 190 1 317 1 
51 1 252 1 
174 1 
51 1 87 1 
51 3 111 1 87 1 190 2 254 1 213 1 
51 1 111 1 87 1 
51 1 184 1 
311 1 79 3 144 1 154 2 162 1 294 1 100 1 198 4 133 7 202 3 149 1 262 1 67 2 12 1 356 1 332 1 285 1 
311 1 79 3 144 1 154 2 162 1 294 1 100 1 198 4 133 7 202 3 149 1 262 1 67 2 12 1 356 1 332 1 285 1 
311 1 79 3 144 1 154 2 162 1 294 1 100 1 198 4 34 1 133 7 202 3 149 1 262 1 67 2 12 1 356 1 332 1 285 1 
45 4 271 1 46 1 311 1 144 1 79 15 1 3 162 1 100 1 294 2 182 1 149 4 185 3 107 1 230 1 232 1 12 4 299 1 171 2 285 2 154 3 198 16 200 3 116 1 240 1 133 31 202 10 326 3 262 5 67 5 356 2 206 1 332 2 358 1 
311 1 79 4 100 1 294 1 162 1 182 2 149 1 232 2 12 1 299 2 171 4 285 1 154 2 290 1 198 5 116 2 133 9 202 4 262 1 220 1 67 3 356 1 332 1 358 1 
225 1 338 1 3 1 148 1 84 1 340 1 231 1 253 1 278 1 301 1 189 1 302 1 214 1 215 1 322 1 113 2 131 1 92 2 157 1 136 1 355 2 264 1 138 1 204 1 266 1 139 1 68 1 69 1 245 1 75 1 
338 1 228 1 3 1 148 1 84 1 340 1 231 1 253 1 278 1 301 1 189 1 214 1 215 1 322 1 113 3 323 1 92 3 157 1 136 1 355 2 264 1 138 1 204 1 266 1 139 1 68 1 69 1 245 2 333 1 75 1 
338 1 3 1 84 1 340 1 231 1 253 1 278 1 301 1 189 1 214 1 215 1 322 1 113 2 323 1 92 2 157 1 136 1 355 2 138 1 266 1 68 1 204 1 69 1 245 2 333 1 
338 1 296 1 228 1 3 1 51 1 84 1 85 1 253 2 278 1 301 2 87 1 288 1 113 1 37 1 92 1 136 2 243 1 138 1 139 1 266 2 70 1 75 1 43 1 
338 1 3 1 148 1 84 1 340 1 231 1 253 1 278 1 301 1 302 1 214 1 215 1 113 1 131 1 92 1 136 1 355 2 264 1 138 1 204 1 266 1 139 1 68 1 69 1 333 1 75 1 
164 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
172 1 89 1 28 1 250 1 99 1 32 1 80 1 259 1 115 1 132 1 241 1 83 1 38 1 7 1 62 1 19 1 179 1 58 1 321 1 
161 1 250 1 99 2 338 2 80 1 296 1 3 1 83 1 7 1 84 1 51 1 167 1 168 1 278 2 233 1 188 2 87 1 58 1 321 1 172 1 89 1 28 1 289 1 32 1 259 1 115 2 132 1 241 1 38 1 62 1 175 1 138 2 19 1 179 1 70 1 141 1 43 2 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 2 130 1 289 1 32 1 259 1 115 2 132 1 241 1 7 1 83 1 62 1 19 1 179 1 188 1 58 1 
172 1 89 1 28 1 250 1 99 1 32 1 80 1 259 1 115 1 132 1 241 1 83 1 38 1 7 1 62 1 19 1 179 1 58 1 321 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
89 1 28 1 250 1 99 1 259 1 32 1 115 1 132 1 241 1 7 1 83 1 62 1 19 1 179 1 58 1 
0 2 311 1 79 3 162 1 294 2 100 1 198 2 351 1 182 1 116 1 133 5 317 1 202 2 149 1 232 1 67 2 12 1 159 1 299 1 171 2 332 2 13 1 
45 4 0 1 96 12 79 5 1 3 339 1 122 1 316 12 182 2 149 3 107 1 232 2 11 1 299 2 171 4 238 1 198 10 200 3 351 2 116 2 91 12 133 15 39 1 202 3 326 3 262 3 305 1 159 1 206 2 74 1 
96 1 196 1 79 1 198 1 339 1 32 1 260 1 351 1 116 1 182 1 132 1 133 2 39 1 261 1 62 1 329 1 232 1 221 1 159 1 299 1 171 2 74 1 346 1 
96 2 1 1 147 1 3 1 316 2 182 2 103 1 273 1 51 1 149 1 274 1 232 2 278 1 287 1 196 1 111 1 198 3 291 1 200 1 116 2 202 3 62 1 329 1 67 1 159 2 74 1 79 2 338 1 82 1 166 1 125 1 84 1 299 2 87 1 171 4 32 2 351 2 132 2 91 2 133 5 39 1 261 1 262 2 138 1 221 1 43 1 
143 1 79 1 338 2 295 1 339 1 296 1 3 3 182 1 84 2 51 2 232 1 278 2 299 1 87 2 171 2 195 1 111 1 198 1 325 1 351 1 116 1 133 2 242 1 39 1 138 2 159 1 268 1 70 1 140 1 43 1 
96 1 1 1 79 2 316 1 182 1 210 1 149 1 185 1 275 1 232 1 12 1 299 1 171 2 32 1 198 1 200 1 351 1 91 1 116 1 132 1 133 3 202 1 261 1 62 1 329 1 67 1 178 1 159 1 74 1 
96 1 198 2 200 1 316 1 351 1 91 1 182 1 116 1 133 2 202 1 262 1 149 1 232 1 159 1 299 1 171 2 13 1 76 1 
96 1 79 2 316 1 351 1 91 1 182 1 116 1 133 2 202 1 185 1 232 1 67 1 12 1 159 1 299 1 171 2 170 1 13 1 
96 2 1 1 79 2 316 2 182 1 149 1 185 1 232 1 12 1 299 1 171 2 13 1 198 2 200 1 351 1 116 1 91 2 133 4 202 2 262 1 67 1 159 1 
96 1 198 2 200 1 316 1 351 1 91 1 182 1 116 1 133 2 202 1 262 1 149 1 232 1 268 1 159 1 299 1 171 2 76 1 
96 1 79 2 316 1 351 1 91 1 182 1 116 1 133 2 202 1 185 1 232 1 67 1 12 1 268 1 159 1 299 1 171 2 170 1 
96 1 1 1 198 2 200 1 316 1 351 1 91 1 182 1 116 1 133 2 202 1 262 1 149 1 232 1 268 1 159 1 299 1 171 2 
96 1 1 1 198 2 200 1 316 1 351 1 91 1 182 1 116 1 133 2 202 1 262 1 149 1 232 1 159 1 299 1 171 2 
0 1 79 1 338 1 339 1 3 1 147 1 182 1 273 1 82 1 84 1 51 1 232 1 278 1 299 1 87 1 171 2 111 1 198 1 32 1 291 1 351 1 132 1 116 1 133 2 39 1 138 1 159 1 43 1 
0 1 79 1 338 1 339 1 3 1 182 1 273 1 84 1 51 1 24 1 232 1 278 1 299 1 87 1 235 1 56 1 171 2 111 1 198 1 32 1 351 1 132 1 116 1 133 2 39 1 138 1 159 1 43 1 
96 1 1 1 198 2 200 1 316 1 351 1 91 1 182 1 116 1 133 2 202 1 262 1 149 1 232 1 159 1 299 1 171 2 74 1 
96 1 225 1 1 1 338 1 3 1 147 1 316 1 182 1 273 1 82 1 149 1 84 1 51 1 232 1 278 1 299 1 87 1 171 2 287 1 111 1 198 2 32 1 200 1 291 1 351 1 91 1 132 1 116 1 133 2 202 1 262 1 138 1 159 1 
96 1 1 1 316 1 182 1 149 1 275 1 232 1 320 1 299 1 171 2 32 1 198 2 200 1 351 1 116 1 132 1 91 1 133 2 202 1 261 1 262 1 62 1 329 1 178 1 159 1 74 1 
45 2 79 10 1 3 181 1 182 2 149 3 185 3 107 1 232 2 12 3 299 2 171 4 59 2 194 1 198 9 200 3 14 2 218 1 116 2 352 1 133 19 202 6 326 1 262 3 64 1 220 1 67 3 93 1 206 1 308 1 
45 2 79 12 1 3 182 3 149 3 185 2 107 2 232 3 12 2 299 3 171 6 283 1 59 4 257 1 173 1 194 2 198 14 200 3 14 1 218 1 116 3 352 1 133 26 135 1 202 4 262 2 326 2 64 2 220 1 304 1 67 2 246 1 308 1 358 2 
45 4 311 1 1 4 100 1 181 1 182 3 185 4 149 5 107 3 232 3 186 1 12 5 283 1 59 4 194 2 154 1 198 20 200 4 14 1 116 3 202 8 326 3 64 1 67 4 206 1 246 1 332 1 79 21 294 1 162 1 299 3 171 6 257 1 173 1 218 1 133 41 352 1 135 1 262 4 220 1 304 1 308 1 358 1 
45 4 311 1 79 18 1 4 162 1 294 1 100 1 181 1 182 4 149 5 185 3 107 3 186 1 232 4 12 4 299 4 283 1 171 8 257 1 59 4 173 1 194 2 154 1 198 20 200 4 14 1 218 1 116 4 352 1 133 38 135 1 202 7 326 3 262 3 64 1 304 1 220 1 67 4 206 1 332 1 246 1 308 1 358 2 
45 4 311 1 79 25 1 7 162 1 294 1 100 1 122 2 182 2 149 8 185 7 107 2 232 2 12 8 299 2 283 1 171 4 257 1 59 4 173 1 194 1 154 1 198 27 200 7 14 1 218 1 116 2 352 1 133 52 135 1 202 14 326 4 262 7 64 1 304 1 220 1 67 7 206 2 332 1 246 1 308 1 358 1 
27 1 309 1 330 1 21 1 31 1 54 1 267 1 334 1 104 1 44 1 
223 1 318 1 
8 1 27 1 309 1 251 1 330 1 128 1 31 1 267 1 334 1 
27 1 309 1 239 1 99 1 207 2 21 1 31 1 115 1 155 1 118 1 9 1 203 1 330 1 54 1 267 1 343 1 334 1 44 1 
27 1 309 1 239 1 99 1 207 2 21 1 31 1 115 1 155 1 118 1 9 1 203 1 330 1 54 1 267 1 343 1 334 1 44 1 
27 1 309 1 239 1 99 1 207 2 21 1 31 1 115 1 155 1 118 1 9 1 203 1 330 1 54 1 267 1 343 1 334 1 44 1 
25 1 52 1 217 1 
25 1 52 1 217 1 
193 1 117 1 
193 1 117 1 217 1 
165 1 344 1 
223 1 0 1 309 1 226 1 272 1 99 1 207 1 165 1 318 1 150 1 126 1 344 1 27 1 239 1 31 1 32 2 115 1 155 1 132 2 261 2 62 2 16 1 329 2 330 1 265 1 267 1 334 1 
25 1 52 1 
193 1 117 1 217 1 
79 1 338 2 339 1 3 1 182 1 124 1 84 1 51 1 232 1 278 2 151 1 53 1 299 1 87 1 171 2 57 1 114 1 32 2 198 1 325 1 351 1 132 2 116 1 133 2 242 2 39 1 62 2 293 1 138 2 159 1 74 1 
225 1 338 2 227 1 3 1 355 2 340 1 84 1 231 1 264 1 277 1 138 2 26 1 204 1 278 2 266 1 68 1 69 1 333 1 215 1 
338 1 3 1 355 2 340 1 84 1 231 1 264 1 138 1 26 1 204 1 278 1 212 1 266 1 68 1 69 1 333 1 215 1 
338 1 296 1 3 1 84 1 51 1 10 1 243 1 277 1 138 1 278 1 266 1 70 1 87 1 43 1 
338 1 227 1 3 1 355 2 340 1 84 1 231 1 264 1 277 1 138 1 26 1 204 1 278 1 266 1 68 1 69 1 333 1 215 1 
112 1 
0 1 79 1 338 1 147 1 3 1 182 1 82 1 273 1 84 1 51 1 275 2 232 1 278 1 299 1 87 1 236 1 171 2 111 1 32 3 291 1 351 1 116 1 132 3 133 1 39 1 261 2 62 2 329 2 138 1 159 1 160 1 43 1 
172 1 30 2 154 1 80 1 50 2 38 1 175 2 118 4 167 1 168 1 233 1 20 2 286 2 152 4 321 1 
118 1 175 1 233 1 298 1 55 1 20 1 317 1 
95 1 310 1 99 1 80 1 50 1 233 1 188 1 110 1 152 1 321 1 172 1 289 1 115 1 38 1 175 1 118 2 20 1 
225 1 99 5 1 2 3 4 5 2 49 1 50 6 184 2 51 10 149 2 185 2 233 9 278 3 12 2 279 2 188 5 55 1 190 2 286 6 152 12 321 4 111 3 60 2 289 3 115 5 200 2 118 8 328 1 18 2 20 2 247 1 72 2 335 1 338 3 80 4 166 2 167 1 84 3 168 2 252 3 298 1 169 2 87 3 88 2 213 1 172 4 30 6 38 4 175 8 306 1 138 3 222 2 269 2 43 1 
45 1 99 1 1 2 80 2 5 2 50 3 167 1 149 2 185 2 107 1 168 1 233 8 12 2 188 1 283 1 152 6 286 5 321 2 172 2 257 1 173 1 289 1 30 5 349 1 115 1 200 2 36 1 135 1 38 2 118 5 326 1 175 5 304 1 20 2 72 1 
99 1 294 1 162 1 80 1 146 1 5 2 149 2 275 1 12 1 233 2 86 1 236 1 321 1 172 1 89 1 32 1 115 1 90 1 132 1 38 1 261 1 175 2 62 1 17 1 329 1 332 1 71 1 72 1 
172 1 80 1 38 1 175 1 118 1 298 1 233 1 55 1 20 1 321 1 
1 2 30 5 200 2 5 2 50 5 166 1 149 2 175 5 118 5 185 2 12 2 233 5 72 1 286 5 152 10 
118 1 99 1 289 1 188 1 115 1 20 1 
336 1 161 1 99 3 338 4 80 2 296 1 3 1 84 1 51 1 167 2 168 2 278 4 233 2 188 4 87 1 321 1 172 2 289 2 197 1 199 1 115 3 38 2 175 2 328 2 138 4 70 1 247 1 141 1 43 2 
27 1 309 1 312 1 
27 1 309 1 312 1 
27 1 309 1 21 1 165 1 249 1 
27 1 309 1 312 1 
27 1 309 1 300 1 
27 1 309 1 300 1 
27 1 309 1 300 1 
27 1 309 1 
330 1 334 1 
311 1 79 4 154 1 162 1 100 1 294 1 198 4 182 2 116 2 133 8 202 3 149 1 262 1 232 2 67 2 12 1 299 2 171 4 332 1 358 1 
311 1 79 3 154 1 100 1 294 1 162 1 198 3 133 6 317 1 202 2 149 1 67 2 12 1 332 1 
79 2 1 1 198 2 200 1 182 1 116 1 133 4 202 2 185 1 149 1 262 1 211 1 232 1 67 1 12 1 299 1 171 2 
45 2 79 4 1 1 198 3 200 1 133 7 202 2 185 1 326 1 149 1 262 1 107 1 67 1 12 1 206 1 
45 2 311 1 1 2 79 12 162 1 294 2 100 1 122 1 182 2 149 3 185 2 232 2 12 3 299 2 171 4 154 1 198 11 200 2 292 1 116 2 133 23 202 9 262 4 326 2 305 1 67 5 206 1 332 2 358 2 
45 1 79 1 133 1 
326 1 198 1 133 1 
79 3 1 1 198 3 200 1 116 1 182 1 166 1 133 6 202 3 149 1 262 1 185 1 211 1 232 1 67 2 12 1 299 1 171 2 
45 1 79 6 1 2 182 1 149 2 185 2 107 1 232 1 12 2 299 1 283 1 171 2 257 1 173 1 198 6 200 2 116 1 133 12 202 2 135 1 262 1 326 1 220 1 304 1 67 1 
79 3 162 1 294 1 198 3 133 6 202 2 149 1 262 1 67 1 12 1 332 1 
311 1 79 2 294 1 100 1 198 1 292 1 182 1 116 1 133 3 202 2 262 1 232 1 67 1 299 1 332 1 171 2 358 1 
79 5 294 2 162 1 198 5 116 1 182 1 133 10 202 5 262 2 149 2 220 1 232 1 67 3 12 2 299 1 86 1 171 2 332 2 
198 2 200 1 182 1 116 1 133 2 202 1 149 1 262 1 220 1 232 1 299 1 171 2 
79 2 1 1 198 2 200 1 182 1 116 1 133 4 202 2 185 1 149 1 262 1 220 1 232 1 67 1 12 1 299 1 171 2 
79 2 294 1 198 1 181 1 292 1 182 3 116 3 133 3 202 2 262 1 220 1 232 3 67 1 299 3 171 6 332 1 358 1 
45 4 271 1 311 1 79 18 1 3 162 2 294 3 100 1 181 1 182 5 149 5 185 3 230 1 107 1 211 1 232 5 12 5 299 5 171 10 154 1 198 16 292 1 200 3 240 1 116 5 133 34 202 12 326 3 262 5 220 1 67 7 206 1 332 3 358 2 
45 1 311 1 79 4 100 1 294 1 162 1 182 1 149 1 107 1 232 1 12 1 299 1 283 1 171 2 154 1 198 4 116 1 133 8 202 2 326 1 220 1 67 2 332 1 
45 2 311 1 79 5 1 1 162 1 294 1 100 1 182 2 149 2 107 1 211 1 232 2 12 1 299 2 283 1 171 4 154 1 198 6 200 1 116 2 133 11 202 3 326 1 262 1 220 1 67 2 206 1 332 1 
45 1 311 1 79 10 1 2 162 1 294 1 100 1 182 3 149 3 185 2 107 1 211 1 232 3 12 3 299 3 283 1 171 6 257 1 173 1 154 1 198 9 200 2 116 3 133 19 135 1 202 4 262 1 326 1 220 1 304 1 67 3 332 1 358 1 
45 1 311 1 79 7 1 2 162 1 294 1 100 1 182 3 149 3 185 1 107 1 211 1 232 3 12 2 299 3 283 1 171 6 257 1 173 1 154 1 198 10 200 2 116 3 133 17 202 5 135 1 262 2 326 1 220 1 304 1 67 3 332 1 358 1 
45 1 311 1 79 4 100 1 294 1 162 1 182 1 149 1 107 1 232 1 12 1 299 1 283 1 171 2 154 1 198 4 116 1 133 8 202 2 326 1 220 1 67 2 332 1 
45 1 79 6 1 2 182 1 149 2 185 2 107 1 232 1 12 2 299 1 283 1 171 2 257 1 173 1 198 6 200 2 116 1 133 12 202 2 135 1 262 1 326 1 220 1 304 1 67 1 
45 1 311 1 79 8 1 2 162 1 294 1 100 1 182 4 149 3 185 1 107 1 211 1 232 4 12 2 299 4 283 1 171 8 257 1 173 1 154 1 198 10 200 2 116 4 133 18 135 1 202 5 262 2 326 1 220 1 304 1 67 3 332 1 358 2 
45 1 79 7 1 3 181 1 182 4 149 3 185 2 107 1 232 4 12 2 299 4 283 1 171 8 257 1 173 1 198 9 200 3 116 4 133 16 135 1 202 6 262 3 326 1 220 1 304 1 67 3 358 2 
311 2 79 4 100 1 294 3 162 1 198 3 133 7 202 6 262 3 149 1 67 3 12 1 332 3 
45 1 311 1 79 8 1 2 162 1 294 1 100 1 181 1 182 4 149 3 185 1 107 1 232 4 12 2 299 4 283 1 171 8 257 1 173 1 154 1 198 10 200 2 116 4 133 18 135 1 202 4 262 1 326 1 220 1 304 1 67 3 332 1 358 2 
62 1 0 1 119 1 32 1 280 1 132 1 83 1 
0 1 119 1 32 1 132 1 83 1 62 1 319 1 176 1 244 1 280 1 248 1 42 1 
84 1 51 1 338 1 138 1 278 1 70 1 296 1 87 1 3 1 317 1 43 1 
0 1 111 1 338 1 32 2 3 1 147 1 132 2 273 1 261 1 51 1 62 1 84 1 329 1 138 1 221 1 278 1 87 1 43 1 
89 1 250 1 111 2 338 1 32 1 3 1 147 1 132 1 273 1 184 1 261 1 51 3 62 1 84 1 18 1 329 1 328 1 138 1 19 1 221 1 278 1 87 2 
89 1 250 1 111 2 338 1 32 1 3 1 132 1 273 1 184 1 261 1 51 3 62 1 84 1 18 1 329 1 328 1 138 1 19 1 221 1 278 1 87 2 235 1 
111 1 99 2 338 3 47 1 115 2 3 1 315 1 184 1 118 1 51 4 84 1 18 1 328 1 138 3 252 1 222 1 278 3 188 1 87 1 190 1 20 1 43 1 256 1 
111 1 99 2 338 3 47 1 115 2 3 1 184 1 118 1 51 4 84 1 18 1 328 1 138 3 252 1 222 1 278 3 188 1 87 1 269 1 190 1 20 1 43 1 
84 1 338 1 138 1 278 1 3 1 229 1 
225 1 111 1 120 1 338 7 114 1 295 1 350 1 3 3 229 1 242 1 51 3 84 2 138 6 278 7 281 1 331 1 87 2 140 1 333 1 213 1 43 2 
0 2 225 1 311 1 79 3 338 1 162 1 294 2 100 1 3 1 147 1 182 2 273 1 82 1 149 1 51 1 84 1 274 1 232 2 12 1 278 1 299 2 87 1 171 4 57 1 287 1 111 1 198 2 32 2 291 1 351 2 132 2 116 2 133 5 202 2 261 1 62 1 329 1 67 2 138 1 221 1 159 2 332 2 74 1 
226 1 99 3 338 1 80 2 51 2 252 1 233 1 298 1 278 1 169 1 188 2 55 1 190 1 88 1 321 2 172 2 60 1 289 1 115 3 38 2 118 1 175 1 138 1 222 1 269 1 20 1 247 1 43 1 
225 1 111 1 338 2 3 2 49 1 229 1 51 2 84 1 138 2 278 2 87 1 190 1 213 1 
225 1 208 1 338 4 47 1 296 1 3 1 51 1 84 1 138 4 278 4 70 1 87 1 43 1 
195 1 111 1 143 1 338 2 295 1 3 2 209 1 51 1 84 1 328 1 138 2 278 2 87 1 140 1 
355 1 340 1 84 1 231 1 338 1 138 1 278 1 69 1 3 1 43 1 
84 1 51 1 225 1 338 2 138 2 114 1 278 2 53 1 87 1 3 1 333 1 
225 1 120 1 208 1 338 5 114 1 296 1 350 1 3 2 51 3 84 2 328 1 138 4 278 5 70 1 87 2 43 1 
225 1 120 1 208 1 338 5 114 1 296 1 3 2 105 1 51 3 84 2 328 1 138 4 278 5 70 1 87 2 43 1 
0 1 111 1 338 1 32 2 3 1 132 2 273 1 261 1 51 1 62 1 84 1 329 1 138 1 221 1 278 1 87 1 235 1 43 1 
111 1 338 1 295 1 3 2 51 1 84 1 328 1 138 1 278 1 331 1 87 1 140 1 213 1 
78 1 97 1 32 1 132 1 124 1 134 1 62 1 293 1 151 1 
219 1 78 1 314 1 
0 1 78 1 97 1 61 1 134 1 
89 1 78 1 250 1 226 1 97 1 61 1 99 1 115 1 314 1 134 1 219 1 19 1 108 1 192 1 58 1 
157 1 322 1 276 1 113 3 139 1 245 1 189 1 35 1 92 3 75 1 302 1 
157 1 101 1 357 1 183 1 
157 1 189 1 
157 1 322 1 189 1 317 1 
157 1 322 1 113 1 139 1 189 1 92 1 75 1 
136 1 113 1 301 1 
322 1 113 3 2 1 4 1 123 1 92 3 157 1 276 2 139 1 189 1 302 1 75 1 
157 1 322 1 216 1 113 2 139 1 245 1 189 1 92 2 75 1 
113 1 101 1 92 1 157 1 355 1 231 1 139 1 204 1 180 1 302 1 75 1 
157 1 113 1 139 1 189 1 92 1 75 1 302 1 
322 1 113 1 139 1 189 2 92 1 75 1 302 1 
157 1 263 1 113 2 139 2 189 1 15 1 92 2 75 2 302 1 142 1 
322 1 113 3 22 1 101 1 35 1 92 3 157 2 139 1 245 2 189 1 357 1 302 1 75 1 
322 1 113 2 92 2 157 1 340 1 355 2 231 1 297 1 139 1 204 1 245 1 189 1 302 1 75 1 215 1 
322 1 216 1 113 4 101 1 92 4 156 1 157 2 139 2 245 2 189 1 357 1 302 1 75 2 
157 1 322 1 113 1 139 1 189 1 92 1 75 1 302 1 
322 2 113 4 101 1 2 1 4 1 183 1 92 4 157 3 276 1 139 1 245 2 189 2 357 1 75 1 
322 1 113 2 23 1 313 1 92 2 157 1 139 1 245 1 189 1 237 1 302 1 75 1 
322 1 113 3 2 2 4 1 92 3 157 1 276 2 127 1 139 1 189 1 302 1 75 1 
157 2 158 1 41 1 345 2 
113 1 139 1 324 1 92 1 75 1 302 1 
157 1 322 1 113 2 139 1 245 1 189 1 35 1 92 2 75 1 302 1 
137 1 
157 1 322 1 113 1 139 1 189 1 92 1 75 1 302 1 

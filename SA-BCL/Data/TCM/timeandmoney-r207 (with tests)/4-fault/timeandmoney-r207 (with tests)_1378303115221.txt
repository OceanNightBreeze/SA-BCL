#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (110,292) 222 (6,173) (6,173) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (110,292) 222 (6,173) (6,173) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (110,292) 222 (6,173) (6,173) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (110,292) 222 (6,173) (6,173) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 1 173 1 6 1 81 1 174 1 51 1 293 1 308 1 222 1 110 1 217 1 
67 1 173 1 6 1 81 1 174 1 51 1 293 1 308 1 222 1 110 1 217 1 
67 1 173 1 6 1 81 1 174 1 51 1 293 1 308 1 222 1 110 1 217 1 
67 1 173 1 6 1 81 1 174 1 51 1 293 1 308 1 222 1 110 1 217 1 
214 1 247 2 143 1 358 1 217 4 111 1 67 4 280 1 174 1 81 1 95 2 44 1 353 1 378 1 293 1 85 1 190 1 100 3 
130 1 113 1 51 1 143 1 109 1 358 1 217 2 67 2 280 1 174 1 81 1 44 1 353 1 293 1 308 1 380 1 
214 1 247 1 143 1 217 3 67 3 292 1 174 1 81 2 44 1 353 1 293 2 308 1 100 1 
155 1 214 3 247 4 143 1 52 1 205 1 358 1 217 9 111 1 67 9 280 1 292 1 174 1 81 2 95 2 352 1 44 1 353 1 378 1 293 2 85 1 308 1 190 1 100 7 
155 1 214 3 247 4 143 1 52 1 205 1 358 1 217 9 111 1 67 9 280 1 292 1 174 1 81 2 95 2 352 1 44 1 353 1 378 1 293 2 85 1 308 1 190 1 100 7 
171 1 226 1 49 1 
226 1 253 1 369 2 
13 1 356 2 376 2 257 2 182 2 36 2 74 1 359 2 
356 2 357 1 314 1 257 2 1 1 287 1 289 1 146 2 263 1 359 3 319 1 237 1 322 1 241 1 202 1 342 1 273 2 179 1 347 1 32 1 182 2 36 2 131 1 249 1 186 1 65 1 330 1 13 1 92 2 376 3 231 1 94 2 163 1 377 1 71 2 74 1 235 1 
356 1 376 1 257 1 339 1 182 1 169 1 36 1 76 1 74 1 359 1 
8 1 226 1 49 1 195 1 21 1 36 1 169 1 115 1 199 1 359 1 238 1 376 1 267 1 96 1 
226 1 356 1 49 1 257 1 182 1 21 1 36 1 169 1 115 1 199 1 359 1 238 1 376 1 267 2 96 2 
267 1 96 1 14 1 63 1 29 1 
226 1 49 1 267 2 96 2 327 1 14 1 29 1 345 1 
267 1 96 1 29 1 
356 1 257 1 182 1 169 1 36 1 76 1 359 1 161 1 376 1 267 1 96 1 14 1 339 1 74 1 
226 1 
296 1 226 1 49 1 267 2 96 2 327 1 14 1 29 1 
226 1 49 1 327 1 260 1 373 2 64 2 228 1 328 1 337 1 160 1 56 1 267 5 96 5 14 2 15 2 367 1 234 1 152 1 29 2 
171 1 13 1 
356 1 257 1 182 1 36 2 329 1 359 2 41 1 13 2 376 2 
313 1 22 1 295 1 
312 1 32 1 287 1 131 1 249 1 263 1 65 1 359 1 13 1 92 1 376 1 94 1 202 1 342 1 273 1 235 1 
356 1 287 1 32 1 182 1 36 1 131 1 349 1 22 1 249 1 65 1 263 1 359 2 68 1 92 1 376 2 94 1 202 1 342 1 273 1 235 1 
8 1 356 4 257 1 182 4 36 5 349 1 329 1 359 5 320 1 68 2 13 1 376 5 175 1 341 1 
356 2 376 2 339 1 182 2 169 1 36 2 351 1 359 2 
68 1 13 1 356 3 257 1 376 3 182 3 36 3 359 3 
356 1 376 1 339 1 182 1 169 1 36 1 359 1 
41 1 356 1 376 1 257 1 182 1 169 1 36 1 329 1 359 1 
357 1 356 3 257 2 287 1 289 1 21 1 169 1 115 1 261 1 116 1 146 2 263 1 199 1 359 4 237 1 238 1 322 1 267 1 241 1 202 1 342 1 273 1 347 1 32 1 182 3 36 3 131 1 349 1 249 1 329 1 186 1 65 1 330 1 68 1 13 1 92 1 376 4 231 1 94 1 96 1 163 1 71 1 235 1 74 1 
8 1 68 1 13 1 356 1 376 2 182 1 36 2 341 1 359 2 
226 1 356 3 257 1 182 3 21 1 169 1 36 3 349 1 115 1 329 1 116 1 199 1 359 3 68 2 238 1 376 3 281 1 267 1 96 1 
313 1 356 2 257 1 182 2 36 2 329 1 22 1 359 2 68 1 376 2 
32 1 287 1 131 1 249 1 263 1 65 1 359 1 13 1 92 1 376 1 94 1 202 1 342 1 273 1 235 1 
32 1 287 1 196 1 131 1 117 1 249 1 65 1 359 1 13 1 92 1 376 1 94 1 202 1 342 1 273 1 
313 2 3 1 22 2 146 2 237 1 322 1 25 1 241 1 365 1 295 2 370 1 179 2 224 1 297 1 347 1 204 1 276 1 301 1 186 1 230 1 330 2 231 1 332 1 71 4 
356 1 376 1 182 1 169 1 36 1 115 1 359 1 351 1 
48 1 315 1 
48 1 315 1 
162 1 79 1 
162 1 79 1 
162 1 79 1 
360 1 48 1 315 1 
360 1 48 1 315 1 
48 1 315 1 145 1 
48 2 162 1 315 2 336 1 150 1 79 1 
360 1 48 1 315 1 
48 1 315 1 316 1 
48 1 315 1 316 1 
48 1 315 1 316 1 
310 1 48 1 18 1 356 2 315 1 317 1 262 1 102 1 145 1 359 2 267 1 368 1 178 1 348 1 182 2 36 2 302 1 39 1 303 1 40 1 13 1 376 2 96 1 209 1 
193 1 48 2 226 1 315 2 167 2 336 1 317 2 264 1 39 2 303 2 40 1 267 2 137 1 96 2 120 1 27 1 233 1 368 2 209 3 
280 1 358 1 378 1 
280 1 113 1 358 1 
60 1 280 3 57 1 113 1 378 2 138 1 
60 1 280 2 57 1 113 1 378 1 124 1 
60 1 280 2 57 2 113 1 378 1 
139 1 49 1 20 1 260 3 53 1 5 1 102 1 55 2 56 2 267 5 367 1 178 1 369 3 325 1 29 1 297 1 298 2 226 2 180 1 327 1 373 1 64 1 301 1 302 1 230 1 136 1 253 1 96 5 15 1 14 4 332 1 112 2 
286 1 49 1 20 2 260 8 53 1 5 2 172 5 56 6 267 9 367 1 221 1 369 9 325 3 29 6 297 3 298 6 226 5 327 1 373 2 63 5 158 1 64 2 301 3 302 4 230 3 304 1 253 3 96 9 14 7 15 2 332 3 208 1 234 1 112 6 309 1 
49 1 20 1 260 3 5 1 55 1 267 3 56 2 369 4 325 1 297 1 226 3 298 2 180 1 373 1 64 1 301 1 302 1 230 1 136 1 253 2 96 3 14 2 15 1 332 1 234 1 112 2 
49 1 20 1 260 5 5 1 55 2 267 4 56 4 369 7 221 1 325 2 297 2 226 4 298 4 180 1 373 1 64 1 301 2 302 2 230 2 304 1 136 1 253 3 96 4 15 1 14 3 332 2 234 1 112 4 309 1 
171 1 288 1 249 1 
127 1 249 1 
80 1 
131 1 249 1 65 1 
249 1 344 1 
249 1 65 1 
126 1 288 2 131 1 198 1 249 3 65 1 
224 2 223 1 335 2 50 1 75 1 54 1 301 1 37 1 66 1 230 1 330 3 25 3 201 1 71 7 72 1 191 1 179 4 
224 2 223 1 335 2 50 1 75 1 54 1 301 1 37 1 66 1 230 1 330 3 25 3 201 1 71 7 72 1 191 1 179 4 
224 2 223 1 335 2 50 1 62 1 75 1 54 1 301 1 37 1 66 1 230 1 330 3 25 3 201 1 71 7 72 1 191 1 179 4 
354 1 335 3 50 2 75 5 258 1 54 2 146 2 237 1 104 1 25 10 201 2 241 1 325 3 343 1 179 16 223 1 297 3 224 5 89 1 156 4 10 3 301 4 186 1 37 1 66 2 230 4 330 15 231 1 332 3 232 1 72 1 71 31 191 1 16 1 
223 1 224 3 243 1 89 1 335 2 355 1 50 1 75 1 54 1 301 1 186 2 146 4 37 1 66 1 230 1 330 4 237 2 25 4 231 2 201 1 241 2 71 9 191 1 179 5 
168 1 287 1 113 1 143 1 358 1 78 1 217 2 236 1 200 1 239 1 81 1 174 1 202 1 177 1 293 1 324 1 273 1 346 1 35 1 90 1 67 2 92 1 280 2 94 1 44 1 353 1 378 1 308 1 138 1 100 1 
168 1 287 1 113 1 143 1 358 1 78 1 217 3 236 1 200 1 81 1 202 1 293 1 324 1 273 1 30 1 346 1 227 1 35 1 90 1 67 3 92 1 280 2 94 1 44 1 353 1 378 1 164 1 308 1 138 1 100 2 
168 1 287 1 113 1 143 1 358 1 217 2 200 1 202 1 324 1 273 1 30 1 346 1 227 1 35 1 90 1 67 2 92 1 280 2 94 1 44 1 353 1 378 1 308 1 138 1 100 2 
256 1 140 1 168 2 287 1 217 1 81 1 363 1 202 1 293 1 107 1 273 1 346 2 32 1 249 1 65 1 90 2 67 1 92 1 94 1 98 1 164 1 308 2 212 1 
168 1 287 1 113 1 358 1 78 1 217 1 236 1 200 1 81 1 174 1 202 1 177 1 293 1 324 1 273 1 346 1 227 1 35 1 90 1 67 1 92 1 280 2 94 1 378 1 308 1 138 1 
333 1 
0 1 49 1 285 2 287 1 195 1 101 2 199 1 103 4 338 1 238 1 56 2 202 1 340 2 107 1 59 1 8 1 157 1 246 1 64 1 249 1 65 1 253 2 15 1 17 2 256 1 20 1 260 2 21 1 169 1 115 1 119 2 359 1 265 2 362 1 267 5 367 1 28 1 369 2 29 6 273 2 226 2 32 2 327 3 33 1 373 1 372 1 36 1 92 2 376 1 94 2 96 5 43 1 282 1 379 2 283 1 
296 1 8 1 327 1 195 1 21 1 169 1 36 1 115 1 199 1 359 1 103 2 362 1 338 1 238 1 376 1 267 3 96 3 43 1 282 1 379 1 29 2 283 1 
49 1 195 1 21 1 169 1 115 1 199 1 359 1 362 1 103 3 265 1 338 1 238 1 267 3 29 1 296 1 8 1 226 1 327 1 36 1 376 1 96 3 43 1 282 1 283 1 
49 1 195 1 21 1 101 1 169 1 115 1 199 1 359 1 362 1 103 3 265 1 338 1 238 1 267 3 29 2 296 1 8 1 226 1 327 1 36 1 376 1 96 3 43 1 282 1 379 1 283 1 
49 5 285 2 195 1 101 4 199 1 103 6 338 1 238 1 105 1 56 1 340 2 296 1 8 1 246 1 64 1 253 2 15 1 17 2 21 1 260 1 169 1 115 1 119 2 359 1 362 1 265 4 24 1 267 5 367 1 270 1 29 7 226 5 327 3 373 1 33 1 36 1 185 1 376 1 96 5 42 1 43 1 282 1 379 4 283 1 
0 1 17 2 49 1 285 2 195 1 101 2 260 1 21 1 169 1 115 1 119 2 199 1 359 1 265 2 362 1 103 4 338 1 238 1 56 1 267 4 340 2 367 1 369 2 29 4 8 1 226 2 327 2 246 1 33 1 373 1 36 1 64 1 376 1 253 2 96 4 15 1 43 1 282 1 379 2 283 1 
17 2 49 1 285 2 195 1 101 2 260 1 21 1 169 1 115 1 119 2 199 1 359 1 265 2 362 1 103 4 338 1 238 1 56 1 267 4 340 2 270 1 367 1 29 4 8 1 226 1 327 2 246 1 33 1 373 1 36 1 64 1 185 1 376 1 253 2 96 4 42 1 15 1 43 1 282 1 379 2 283 1 
17 2 49 1 285 2 195 1 101 2 260 1 21 1 169 1 115 1 119 2 199 1 359 1 265 2 362 1 103 4 338 1 238 1 56 1 267 4 340 2 270 1 367 1 29 4 8 1 226 1 327 2 246 1 33 1 373 1 36 1 64 1 185 1 376 1 253 2 96 4 42 1 15 1 43 1 282 1 379 2 283 1 
19 1 49 1 285 2 216 2 195 1 101 2 260 1 21 1 169 1 115 1 119 2 199 1 359 1 265 2 362 1 103 4 338 1 238 1 149 2 56 1 267 4 270 1 367 1 369 2 29 4 8 1 226 1 327 2 33 1 373 1 36 1 34 1 64 1 134 1 376 1 96 4 15 1 43 1 282 1 379 2 283 1 
17 2 49 1 285 2 195 1 260 1 21 1 101 3 169 1 115 1 119 2 199 1 359 1 362 1 103 5 265 3 338 1 238 1 56 1 267 4 105 1 340 2 270 1 367 1 29 5 8 1 226 1 327 2 246 1 33 1 373 1 36 1 64 1 185 1 376 1 253 2 96 4 15 1 42 1 43 1 282 1 379 3 283 1 
17 2 49 1 285 2 195 1 260 1 21 1 101 3 169 1 115 1 119 2 199 1 359 1 362 1 103 5 265 3 338 1 238 1 56 1 267 4 105 1 340 2 270 1 367 1 29 5 8 1 226 1 327 2 246 1 33 1 373 1 36 1 64 1 185 1 376 1 253 2 96 4 15 1 42 1 43 1 282 1 379 3 283 1 
0 1 49 1 285 2 216 2 195 1 101 2 260 1 21 1 169 1 115 1 119 2 199 1 359 1 265 2 362 1 103 4 338 1 238 1 149 2 56 1 267 4 367 1 369 2 29 4 8 1 226 1 327 2 33 1 373 1 36 1 64 1 134 1 376 1 96 4 15 1 43 1 282 1 379 2 283 1 
313 1 335 1 50 1 22 1 146 2 171 1 237 1 322 1 25 2 241 1 295 1 179 3 223 1 224 2 347 1 204 1 301 1 186 1 66 1 37 1 230 1 330 3 13 2 231 1 71 6 191 1 
141 1 313 4 166 1 75 1 289 1 22 11 146 4 319 1 237 2 25 2 322 1 104 1 241 2 295 11 325 2 86 1 179 8 224 1 297 2 156 3 347 2 10 3 278 1 133 1 301 1 186 2 230 2 330 6 13 1 231 2 332 1 232 1 71 14 
312 1 313 1 356 1 166 1 287 1 289 1 263 1 146 2 359 2 319 1 237 1 322 1 82 1 202 1 241 1 342 1 273 1 179 1 225 1 87 1 347 1 32 1 182 1 36 1 131 1 349 1 249 1 186 1 65 1 330 1 68 1 13 1 92 1 376 2 94 1 231 1 71 2 235 1 
335 1 50 1 287 2 289 1 290 1 146 6 237 3 241 3 202 2 342 2 295 7 297 2 154 1 347 3 300 2 349 1 301 3 249 2 65 2 66 1 68 1 13 2 307 1 71 20 313 7 356 1 357 2 166 1 75 4 22 7 263 2 359 3 319 1 322 3 266 2 25 8 123 2 273 3 325 2 179 10 223 1 224 4 32 1 227 1 182 1 36 1 131 2 186 3 37 1 230 3 330 10 91 2 92 3 376 3 94 3 231 3 332 2 191 1 235 2 
256 1 356 1 194 1 314 2 287 2 289 1 146 4 359 1 319 1 237 2 239 1 322 2 83 1 202 2 241 2 271 1 107 1 273 8 179 1 326 1 204 1 347 2 32 2 227 1 277 1 182 1 36 1 350 1 249 3 186 2 65 2 330 1 68 1 92 8 376 1 94 7 231 2 99 1 71 2 
313 1 356 1 257 1 166 1 22 1 146 2 359 1 361 1 237 1 25 1 322 1 241 1 295 1 325 1 179 1 224 1 297 1 347 1 182 1 36 1 329 1 301 1 186 1 230 1 330 2 376 1 231 1 332 1 71 3 
297 1 313 1 204 1 347 1 75 1 276 1 22 1 186 1 146 2 230 1 237 1 25 1 322 1 231 1 241 1 295 1 71 2 179 2 
224 1 313 1 204 1 347 1 22 1 301 1 186 1 146 2 330 2 237 1 25 1 322 1 231 1 241 1 332 1 365 1 295 1 71 2 
224 1 297 1 313 2 204 1 347 1 75 1 301 1 22 2 186 1 146 2 230 1 330 2 237 1 25 2 322 1 231 1 332 1 241 1 295 2 71 4 325 1 179 2 
297 1 313 1 194 1 347 1 75 1 276 1 22 1 186 1 146 2 230 1 237 1 25 1 322 1 231 1 241 1 295 1 71 2 179 2 
224 1 313 1 194 1 347 1 22 1 301 1 186 1 146 2 330 2 237 1 25 1 322 1 231 1 241 1 332 1 365 1 295 1 71 2 
224 1 297 1 313 2 194 1 347 1 75 1 301 1 22 2 186 1 146 2 230 1 330 2 237 1 25 2 322 1 231 1 332 1 241 1 295 2 71 4 325 1 179 2 
224 1 297 1 313 2 347 1 75 1 301 1 22 2 186 1 146 2 230 1 330 2 237 1 25 2 322 1 231 1 332 1 241 1 295 2 71 4 325 1 179 2 
357 1 287 1 289 1 263 1 146 2 359 1 319 1 237 1 322 1 202 1 241 1 342 1 273 1 179 1 347 1 32 1 131 1 249 1 186 1 65 1 330 1 13 1 92 1 376 1 94 1 231 1 71 2 235 1 
287 1 196 1 289 1 117 1 146 2 359 1 319 1 237 1 322 1 202 1 241 1 342 1 273 1 179 1 347 1 32 1 131 1 249 1 186 1 65 1 38 1 330 1 13 1 92 1 376 1 94 1 231 1 71 2 
224 1 297 1 313 2 166 1 347 1 75 1 301 1 22 2 186 1 146 2 230 1 330 2 237 1 25 2 322 1 231 1 332 1 241 1 295 2 71 4 325 1 179 2 
313 2 357 1 75 1 287 1 22 2 263 1 146 2 359 1 237 1 25 2 266 1 239 1 322 1 202 1 241 1 342 1 295 2 273 1 325 1 179 2 224 1 297 1 347 1 131 1 301 1 249 1 186 1 65 1 230 1 330 2 92 1 376 1 94 1 231 1 332 1 71 4 235 1 
313 1 356 1 257 1 166 1 75 1 22 1 146 2 359 1 237 1 25 1 322 1 241 1 220 1 295 1 325 1 179 2 297 1 347 1 182 1 36 1 301 1 329 1 186 1 230 1 330 1 376 1 231 1 332 1 71 3 
192 1 355 1 75 1 146 4 237 2 104 1 25 2 241 2 7 1 325 1 179 4 224 1 297 1 156 2 299 1 10 1 159 1 301 1 186 2 206 1 230 1 330 5 375 1 231 2 332 1 97 1 232 1 210 1 71 9 
192 2 213 1 355 1 75 1 215 1 146 6 147 1 237 3 25 2 121 1 241 3 294 1 7 1 325 2 179 11 224 1 297 2 89 2 156 2 10 2 159 1 12 1 301 1 186 3 206 1 230 2 330 9 375 2 231 3 305 1 332 1 97 3 232 2 71 20 
192 1 355 1 75 1 146 4 237 2 104 1 25 2 121 1 241 2 7 1 325 1 179 4 224 1 297 1 156 2 10 1 159 1 301 1 186 2 206 1 230 1 330 5 375 1 231 2 332 1 97 1 232 1 210 1 71 9 
192 1 355 1 75 1 146 4 237 2 104 1 25 2 121 1 241 2 7 1 325 1 179 4 224 1 297 1 156 2 10 1 159 1 301 1 186 2 206 1 230 1 330 5 375 1 231 2 332 1 97 1 232 1 210 1 71 9 
192 1 335 1 213 1 355 1 50 1 215 1 75 6 146 4 147 1 237 2 104 2 25 12 121 1 241 2 294 1 7 1 325 6 179 24 223 1 224 6 297 6 89 1 156 4 10 4 159 1 12 1 133 2 301 7 186 2 206 1 37 1 66 1 230 7 330 22 375 1 231 2 305 1 332 6 97 3 232 2 71 46 191 1 
39 1 48 1 303 1 315 1 336 1 27 1 233 1 317 1 368 1 170 1 
262 1 145 1 
39 1 48 1 303 1 321 1 142 1 315 1 317 1 368 1 77 1 
360 1 248 1 
150 1 316 1 108 1 
193 1 48 1 226 1 315 1 167 1 336 1 317 1 39 1 40 1 303 1 267 1 137 1 96 1 120 1 27 1 233 1 368 1 209 2 
193 1 48 1 226 1 315 1 167 1 336 1 317 1 39 1 40 1 303 1 267 1 137 1 96 1 120 1 27 1 233 1 368 1 209 2 
193 1 48 1 226 1 315 1 167 1 336 1 317 1 39 1 40 1 303 1 267 1 137 1 96 1 120 1 27 1 233 1 368 1 209 2 
360 1 150 1 248 1 
360 1 150 1 248 1 
316 1 108 1 
150 1 316 1 108 1 
310 1 18 1 
310 1 48 1 18 1 356 2 315 1 167 1 317 1 262 1 102 1 145 1 359 2 267 1 120 1 368 1 178 1 348 1 182 2 36 2 302 1 39 1 303 1 13 1 376 2 96 1 69 1 14 1 209 1 
334 1 314 2 166 1 287 1 289 1 114 1 146 2 359 2 319 1 237 1 322 1 83 1 202 1 241 1 364 1 271 1 273 2 179 1 347 1 36 2 249 1 186 1 65 1 135 1 330 1 92 2 376 2 231 1 94 2 71 2 73 1 
287 1 113 1 227 1 35 1 358 1 78 1 90 1 92 2 280 2 94 2 239 1 202 1 378 1 324 1 211 1 219 1 272 1 138 1 273 2 
287 1 113 1 227 1 371 1 35 1 358 1 78 1 90 1 92 1 280 2 94 1 202 1 378 1 324 1 219 1 138 1 273 1 
256 1 140 1 287 1 32 1 249 1 65 1 90 1 92 1 94 1 202 1 272 1 107 1 273 1 153 1 
287 1 113 1 227 1 35 1 358 1 78 1 90 1 92 1 280 2 94 1 202 1 378 1 324 1 211 1 219 1 272 1 138 1 273 1 
197 1 
171 1 226 1 49 1 56 1 260 1 228 1 337 1 
17 1 226 2 49 1 327 1 246 1 373 1 260 1 64 1 267 1 56 1 96 1 253 1 15 1 340 1 367 1 369 1 29 1 
49 2 287 4 288 2 198 1 199 2 337 1 239 1 56 8 202 3 106 2 203 2 58 2 59 1 344 2 297 2 298 6 64 4 249 10 250 2 301 2 65 3 253 6 15 4 112 6 20 2 260 9 23 1 26 1 267 5 123 2 367 4 369 12 273 3 29 5 325 2 31 1 127 3 226 8 128 2 32 1 327 3 373 4 183 2 131 3 228 1 184 2 230 2 279 2 92 3 331 1 94 3 96 5 332 2 47 1 
49 2 20 1 215 1 260 8 147 1 267 1 56 5 151 1 367 2 59 1 369 6 294 1 29 1 325 2 297 2 298 5 156 1 226 5 61 1 327 1 373 2 10 1 183 2 64 2 12 1 301 2 279 1 230 2 305 1 96 1 253 3 15 2 332 2 232 1 112 5 
356 1 257 1 50 1 260 2 169 1 76 1 359 1 267 1 56 2 339 1 176 1 367 1 373 1 182 1 36 1 183 2 64 1 301 1 66 1 37 1 279 1 230 2 161 1 376 1 96 1 15 1 42 1 74 1 
226 1 49 1 373 1 260 1 64 1 228 1 337 1 56 1 15 1 367 1 
297 2 298 5 226 5 260 5 183 2 301 2 279 1 230 2 56 5 253 5 332 2 123 1 112 5 369 10 325 2 
226 1 49 1 267 1 96 1 327 1 29 1 
256 1 20 2 287 1 260 2 218 1 23 2 56 2 267 3 202 1 28 1 367 1 59 2 107 1 273 4 29 4 31 1 157 1 32 2 327 2 373 2 64 2 249 1 65 1 92 4 94 4 96 3 15 2 46 1 234 1 
356 2 357 1 257 2 287 1 289 1 146 2 263 1 359 3 237 1 322 1 202 1 241 1 342 1 273 1 347 1 32 1 182 2 36 2 131 1 249 1 186 1 65 1 330 1 13 1 92 1 376 3 231 1 94 1 163 1 71 1 74 1 235 1 
335 1 298 2 226 4 49 2 20 1 373 1 260 1 64 1 56 2 253 2 15 1 367 1 112 2 369 4 59 1 
39 1 207 1 368 1 
39 1 207 1 368 1 
39 1 18 1 233 1 368 1 252 1 
39 1 207 1 368 1 
39 1 323 1 368 1 
39 1 323 1 368 1 
39 1 323 1 368 1 
39 1 368 1 
48 1 315 1 
224 2 223 1 89 1 335 1 50 1 75 1 301 1 186 2 146 4 37 1 66 1 230 1 330 4 237 2 25 3 231 2 241 2 71 8 191 1 179 4 
230 1 224 2 223 1 171 1 330 3 335 1 25 2 50 1 301 1 71 6 191 1 179 3 37 1 66 1 
224 1 297 1 75 1 11 1 301 1 186 1 146 2 230 1 330 2 237 1 25 2 231 1 332 1 241 1 71 4 325 1 179 2 
224 1 297 1 156 2 75 1 10 1 301 1 230 1 330 4 104 1 25 2 332 1 232 1 71 7 325 1 179 3 
141 1 335 1 50 2 75 4 146 4 237 2 25 9 104 1 241 2 325 2 179 11 223 1 297 2 224 5 89 2 156 2 245 1 10 2 301 3 133 1 186 2 37 1 66 2 230 3 330 12 231 2 332 2 71 23 191 1 
330 1 156 1 71 1 
10 1 71 1 179 1 
297 1 224 2 75 1 11 1 301 1 186 1 146 2 230 1 330 3 237 1 231 1 25 3 241 1 332 1 123 1 71 6 325 1 179 3 
355 1 75 1 215 1 146 2 147 1 237 1 25 2 241 1 294 1 325 2 179 6 297 2 224 1 156 1 10 1 301 2 12 1 186 1 230 2 330 6 231 1 305 1 332 2 232 1 71 12 
224 1 50 1 75 1 301 1 37 1 66 1 230 1 330 3 25 2 71 6 179 3 
224 1 223 1 89 1 50 1 75 1 245 1 186 1 146 2 66 1 330 2 237 1 25 2 231 1 241 1 71 3 191 1 179 1 
224 3 355 1 50 2 75 2 301 2 186 1 146 2 66 2 37 1 230 2 330 5 237 1 231 1 25 5 241 1 176 1 71 10 179 5 
297 1 355 1 75 1 186 1 146 2 230 1 237 1 231 1 25 1 241 1 71 2 179 2 
224 1 297 1 355 1 75 1 301 1 186 1 146 2 230 1 330 2 237 1 25 2 231 1 332 1 241 1 71 4 325 1 179 2 
224 1 89 1 355 1 50 1 245 1 75 1 186 3 146 6 66 1 330 2 237 3 231 3 25 2 241 3 210 1 71 3 179 1 
335 1 355 1 50 3 258 1 75 5 146 10 237 5 104 1 25 12 241 5 343 1 325 3 179 16 223 1 297 3 224 7 89 2 156 4 245 1 10 3 11 1 301 5 186 5 37 2 66 3 230 5 330 18 231 5 332 3 232 1 210 1 71 34 191 1 16 1 
335 1 355 1 50 1 146 2 147 1 237 1 25 2 241 1 179 4 223 1 224 2 156 1 10 1 301 1 186 1 66 1 37 1 230 1 330 4 231 1 232 1 71 8 191 1 
335 1 355 1 50 1 75 1 146 4 147 1 237 2 104 1 25 3 241 2 325 1 179 6 224 2 223 1 297 1 156 2 10 1 11 1 301 1 186 2 37 1 66 1 230 2 330 5 231 2 232 1 71 11 191 1 
335 1 355 1 50 1 75 1 215 1 146 6 147 1 237 3 25 4 241 3 294 1 325 2 179 9 223 1 297 2 224 3 89 1 156 1 10 1 11 1 12 1 301 3 186 3 37 1 66 1 230 3 330 10 231 3 305 1 332 2 232 1 71 19 191 1 
335 1 355 1 50 1 75 2 215 1 146 6 147 1 237 3 25 5 241 3 294 1 325 2 179 10 223 1 297 2 224 3 89 1 156 1 10 1 11 1 301 2 12 1 186 3 37 1 66 1 230 3 330 7 231 3 305 1 332 1 232 1 71 17 191 1 
335 1 355 1 50 1 146 2 147 1 237 1 25 2 241 1 179 4 223 1 224 2 156 1 10 1 301 1 186 1 66 1 37 1 230 1 330 4 231 1 232 1 71 8 191 1 
355 1 75 1 215 1 146 2 147 1 237 1 25 2 241 1 294 1 325 2 179 6 297 2 224 1 156 1 10 1 301 2 12 1 186 1 230 2 330 6 231 1 305 1 332 2 232 1 71 12 
335 1 355 1 50 1 75 2 215 1 146 8 147 1 237 4 25 5 241 4 294 1 325 2 179 10 223 1 297 2 224 3 89 2 156 1 10 1 11 1 12 1 301 2 186 4 37 1 66 1 230 3 330 8 231 4 305 1 332 1 232 1 71 18 191 1 
355 1 75 3 215 1 146 8 147 1 237 4 25 6 241 4 294 1 325 3 179 9 297 3 224 3 89 2 156 1 10 1 12 1 301 2 186 4 230 3 330 7 231 4 305 1 332 2 232 1 210 1 71 16 
223 2 224 3 50 3 75 3 301 1 66 3 37 1 230 1 330 4 25 6 71 7 191 1 179 3 
335 1 355 1 50 1 75 1 215 1 146 8 147 1 237 4 25 4 241 4 294 1 325 2 179 10 223 1 297 2 224 3 89 2 156 1 10 1 12 1 301 2 186 4 37 1 66 1 230 3 330 8 231 4 305 1 332 1 232 1 210 1 71 18 191 1 
8 1 13 1 376 1 274 1 36 1 341 1 359 1 
125 1 8 1 274 1 181 1 36 1 359 1 148 1 13 1 93 1 376 1 254 1 341 1 
171 1 256 1 92 1 94 1 287 1 32 1 202 1 249 1 107 1 65 1 273 1 
356 1 287 1 32 1 182 1 36 1 131 1 249 1 65 1 263 1 359 2 68 1 13 1 92 1 376 2 94 1 202 1 342 1 273 1 
356 2 287 1 169 1 115 1 263 1 359 2 23 1 238 1 202 1 342 1 273 1 344 1 182 1 36 2 131 2 249 3 250 1 65 2 68 1 13 1 92 1 376 2 94 1 
356 2 287 1 259 1 169 1 115 1 117 1 359 2 23 1 238 1 202 1 342 1 273 2 344 1 182 1 36 2 131 2 249 3 250 1 65 2 68 1 13 1 92 2 376 2 94 2 
127 1 226 1 49 1 32 1 287 1 288 1 259 1 131 1 144 1 132 1 250 1 249 4 199 1 65 1 23 1 92 3 267 2 94 3 96 2 202 1 344 1 273 3 29 1 
127 1 226 1 49 1 128 1 32 1 287 1 288 1 259 1 131 1 250 1 249 4 199 1 65 1 23 1 92 3 267 2 94 3 96 2 202 1 344 1 273 3 29 1 
92 1 94 1 287 1 202 1 277 1 273 1 
326 1 314 1 32 2 287 3 227 1 277 1 198 1 131 1 350 1 249 3 229 1 65 2 92 7 239 1 94 6 83 1 202 2 306 1 84 1 99 1 273 7 
313 1 335 1 356 1 357 1 50 1 166 1 287 1 22 1 146 4 263 1 359 2 237 2 25 2 322 2 239 1 266 1 202 1 241 2 364 1 342 1 295 1 273 1 179 3 224 2 223 1 347 2 182 1 36 1 131 1 301 1 249 1 186 2 65 1 37 1 66 1 230 1 330 3 91 1 68 1 13 2 92 1 376 2 231 2 94 1 71 6 191 1 235 1 
49 1 288 1 260 1 199 1 337 1 56 1 267 3 106 1 58 1 203 1 367 2 273 1 29 2 31 1 127 1 226 1 128 1 32 1 327 1 373 2 64 2 228 1 249 2 92 1 94 1 96 3 15 2 14 1 
287 2 288 1 277 1 198 1 131 1 249 2 65 1 92 2 239 1 94 2 26 1 202 1 273 2 
256 1 287 1 32 1 259 1 249 1 65 1 92 4 94 4 239 1 202 1 188 1 107 1 273 4 
154 1 287 2 131 1 249 1 229 1 65 1 23 1 92 2 94 2 45 1 202 1 306 1 255 1 273 2 
92 1 280 1 94 1 287 1 32 1 113 1 202 1 358 1 324 1 273 1 
92 2 94 2 239 1 287 1 83 1 227 1 202 1 249 1 65 1 73 1 273 2 
256 1 326 1 32 1 287 2 350 1 249 3 65 2 23 1 92 5 94 4 239 1 83 1 202 2 188 1 107 1 273 5 
256 1 32 1 287 2 275 1 350 1 249 3 65 2 23 1 92 5 94 4 239 1 83 1 202 2 188 1 107 1 273 5 
356 1 287 1 32 1 182 1 36 1 131 1 249 1 117 1 65 1 359 2 68 1 13 1 92 1 376 2 94 1 202 1 342 1 273 1 
287 2 198 1 131 1 249 1 229 1 65 1 23 1 92 1 94 1 202 1 306 1 84 1 273 1 
187 1 13 1 129 1 70 1 189 1 
226 1 49 1 129 1 21 1 169 1 115 1 116 1 199 1 318 1 187 2 13 1 238 1 291 1 267 2 96 2 14 1 366 1 70 2 189 2 
334 1 129 1 36 1 114 1 359 1 135 1 187 1 376 1 189 1 
291 1 129 1 366 1 
171 1 44 1 353 1 143 1 
67 1 81 1 44 1 353 1 143 1 293 1 217 1 
67 1 168 1 308 1 
130 2 143 1 374 1 118 1 217 3 67 3 174 1 81 1 44 1 269 1 353 1 293 1 
67 2 81 1 95 1 44 1 353 1 143 1 293 1 100 1 217 2 
67 1 280 1 81 1 174 1 247 1 358 1 378 1 293 1 85 1 217 1 
67 1 81 1 174 1 44 1 353 1 293 1 217 1 
67 1 81 1 174 1 353 2 143 1 293 1 217 1 
2 1 217 2 67 2 174 1 81 2 240 1 268 1 44 1 353 1 293 2 
155 1 214 1 247 1 143 1 217 3 67 3 174 1 81 1 352 1 44 1 353 1 293 1 100 2 
113 1 143 1 358 1 217 2 67 2 280 2 174 1 81 1 44 1 353 1 378 1 293 1 242 1 138 1 100 1 
214 1 247 1 143 1 217 4 111 1 67 4 174 1 81 2 95 1 44 1 353 1 293 2 100 2 
67 1 81 1 174 1 44 1 353 1 143 1 293 1 217 1 
130 1 214 1 247 1 143 2 374 1 118 1 217 4 67 4 81 1 44 2 353 2 293 1 165 1 100 2 
88 1 9 1 205 1 143 1 217 2 67 2 174 1 81 1 44 1 353 1 293 1 100 1 
284 1 67 3 130 2 81 1 174 1 44 1 353 1 143 1 374 1 293 1 118 2 217 3 
244 1 122 1 44 2 4 2 
67 1 81 1 174 1 293 1 251 1 217 1 
155 1 67 2 81 1 174 1 44 1 353 1 143 1 293 1 100 1 217 2 
311 1 
67 1 81 1 174 1 44 1 353 1 143 1 293 1 217 1 
155 1 130 1 143 1 217 3 67 3 174 1 81 1 44 1 353 1 293 1 100 1 
67 1 214 1 247 1 217 1 100 1 
44 1 353 1 

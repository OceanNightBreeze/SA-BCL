#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) (5,97) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) 46 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (0,73,236,249) (5,97) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (0,73,236,249) (0,73,236,249) (5,97) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
210 1 56 1 179 1 38 1 131 1 152 1 253 1 41 1 204 1 206 1 334 1 154 1 233 1 91 1 
332 1 
131 2 38 2 204 1 332 1 29 1 146 1 306 1 88 1 
212 1 217 1 215 1 71 1 4 1 145 2 29 1 306 1 146 2 79 2 110 1 38 5 131 5 39 2 204 2 332 1 49 1 138 1 93 1 
43 1 332 1 29 1 
301 2 332 1 304 1 
210 2 152 2 56 1 14 1 206 2 179 2 154 2 91 2 
210 2 98 1 56 1 100 1 179 2 220 1 8 1 149 1 183 1 152 2 14 1 15 2 278 1 318 1 154 3 319 1 193 1 321 2 240 1 68 1 324 1 24 1 25 2 120 1 72 1 243 1 74 1 76 1 201 1 244 2 289 1 128 1 248 1 291 2 206 2 208 1 91 3 
210 1 152 1 253 1 56 1 206 1 179 1 334 1 154 1 233 1 91 1 
265 1 29 1 60 1 109 1 37 1 38 1 131 1 253 1 206 1 332 1 153 1 154 1 260 1 91 1 
210 1 265 1 179 1 29 1 109 1 131 2 38 2 152 1 253 1 206 1 332 1 153 1 154 1 260 1 91 1 
131 1 38 1 204 1 146 1 309 1 
131 2 38 2 252 1 204 1 332 1 29 1 146 1 306 1 
131 1 38 1 146 1 
210 1 179 1 34 1 250 1 152 1 14 2 206 2 154 2 91 2 
200 1 31 1 280 1 
25 1 98 1 243 1 100 1 289 1 7 1 128 1 149 1 14 1 15 1 278 1 154 1 208 1 91 1 321 1 240 1 
43 1 14 1 
210 1 284 1 25 1 98 1 243 1 100 1 288 1 31 1 289 1 128 1 149 1 152 1 15 1 206 1 278 1 154 2 208 1 91 2 321 1 240 1 
210 4 284 2 1 1 179 1 288 1 60 1 34 1 152 4 14 1 45 1 206 5 154 5 50 1 91 5 
210 2 152 2 253 1 57 1 206 2 334 1 154 2 91 2 
210 3 284 1 152 3 14 1 206 3 179 1 154 3 91 3 
210 1 152 1 253 1 206 1 334 1 154 1 91 1 
210 1 250 1 152 1 253 1 206 1 179 1 154 1 91 1 34 1 
210 3 265 1 98 1 100 1 56 1 179 2 220 1 109 1 149 1 183 1 152 3 14 1 15 1 278 1 153 1 154 4 193 1 321 1 240 1 24 1 284 1 25 1 120 1 157 1 72 1 243 1 74 1 76 1 201 1 288 1 244 2 289 1 128 1 248 1 34 1 291 1 38 1 131 1 253 1 206 3 208 1 260 1 297 1 91 4 
210 1 284 1 152 1 14 1 206 2 154 2 60 1 50 1 91 2 
210 3 284 2 265 1 157 1 179 1 288 1 33 1 34 1 109 1 131 1 38 1 152 3 253 1 206 3 332 1 153 1 154 3 260 1 91 3 
210 2 284 1 152 2 206 2 179 1 200 1 154 2 31 1 91 2 34 1 
25 1 98 1 100 1 243 1 289 1 128 1 149 1 14 1 15 1 278 1 154 1 208 1 91 1 321 1 240 1 
25 1 98 1 100 1 243 1 30 1 289 1 166 1 14 1 15 1 278 1 154 1 208 1 91 1 321 1 240 1 
220 2 148 1 64 1 193 1 280 2 282 1 68 2 285 1 197 1 120 1 72 1 158 1 26 1 76 1 201 1 200 2 244 2 31 2 248 1 291 4 172 1 47 1 209 1 261 1 
210 1 152 1 253 1 206 1 57 1 154 1 260 1 91 1 
161 1 48 1 89 1 
23 1 12 1 198 1 161 2 48 2 129 1 
161 1 48 1 
161 1 48 1 
198 1 129 1 
198 1 129 1 
198 1 129 1 
159 1 161 1 48 1 
159 1 161 1 48 1 
159 1 161 1 48 1 
225 1 161 1 48 1 
225 1 161 1 48 1 
225 1 161 1 48 1 
299 1 210 2 177 1 11 1 310 1 186 1 152 2 14 1 277 1 154 2 286 1 161 1 245 1 126 1 247 1 131 1 38 1 132 1 133 1 206 2 48 1 89 1 173 1 91 2 
299 2 211 1 175 2 161 2 126 2 247 3 310 2 11 2 12 1 184 1 38 2 131 2 132 1 294 1 332 1 279 1 48 2 298 1 238 1 
121 1 188 1 16 2 232 2 281 1 
232 1 237 1 281 1 
188 1 232 1 237 1 
62 1 121 1 188 1 16 1 232 3 281 2 
55 1 121 1 188 1 16 1 232 2 281 1 
301 3 217 2 4 3 145 1 304 1 146 1 306 1 61 1 271 1 107 1 148 1 186 1 19 1 235 2 156 1 285 1 158 1 29 1 245 1 79 1 203 1 39 1 131 5 38 5 169 1 204 4 133 1 135 2 332 2 47 1 90 2 138 1 
301 9 214 1 176 1 217 6 4 8 145 2 304 3 146 6 306 1 61 2 271 1 309 5 9 1 148 3 19 2 190 1 235 6 285 3 158 3 199 1 29 1 79 2 131 9 38 9 39 2 169 3 133 4 204 7 135 6 331 5 332 5 47 3 333 1 49 1 138 1 
301 4 217 2 4 3 145 1 304 2 61 1 148 1 19 1 235 2 156 1 285 1 158 1 29 1 79 1 203 1 39 1 131 3 38 3 169 1 204 2 133 1 332 3 135 2 47 1 49 1 90 1 
301 7 214 1 176 1 217 4 4 5 145 1 304 3 61 1 148 2 19 1 190 1 235 4 156 1 285 2 158 2 29 1 79 1 203 1 39 1 131 4 38 4 169 2 133 2 204 3 332 4 135 4 47 2 49 1 90 2 
117 1 
243 1 63 1 43 1 
243 1 325 1 
243 1 208 1 289 1 
293 1 243 1 
243 1 208 1 
63 2 243 3 114 1 208 1 289 1 327 1 
68 4 285 1 158 1 123 1 220 3 162 1 105 1 147 1 163 2 291 7 40 1 274 1 187 1 82 1 256 1 20 1 209 2 261 3 
302 1 267 1 220 15 105 2 305 1 147 5 181 4 148 3 274 1 187 2 13 1 20 1 193 1 68 16 285 4 119 1 120 1 72 1 75 1 158 4 123 2 76 1 162 2 244 2 163 3 80 3 291 31 82 1 169 3 256 1 47 3 209 5 87 1 261 10 
220 4 105 1 147 1 187 1 13 1 274 1 20 1 193 2 68 5 285 1 120 2 72 2 158 1 76 2 123 1 162 1 244 4 77 1 163 2 291 9 256 1 296 1 209 3 261 4 
68 4 285 1 158 1 123 1 220 3 162 1 105 1 147 1 163 2 291 7 274 1 187 1 82 1 256 1 20 1 209 2 261 3 
68 4 285 1 158 1 123 1 220 3 162 1 105 1 147 1 163 2 291 7 274 1 187 1 82 1 256 1 20 1 209 2 261 3 
0 1 73 1 5 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 46 1 103 1 236 1 
0 1 73 1 5 1 103 1 236 1 
249 1 97 1 73 1 103 1 
83 1 
94 2 265 1 98 1 99 1 100 1 3 1 4 2 270 4 104 1 109 1 112 2 15 2 113 1 115 1 192 1 194 2 25 2 124 1 29 4 38 5 131 5 39 1 37 1 206 1 208 1 138 1 300 1 141 2 301 2 217 2 219 1 145 1 304 2 306 3 146 6 61 1 60 1 226 2 153 1 231 1 154 1 321 2 240 2 242 1 243 1 79 1 78 1 164 2 251 2 253 1 171 1 332 5 260 1 92 1 91 1 
265 1 99 1 270 2 306 1 60 1 146 2 109 1 113 1 153 1 154 1 124 1 29 2 78 1 164 1 37 1 131 3 38 3 253 1 206 1 171 1 332 2 260 1 88 1 91 1 
265 1 99 1 270 3 146 1 60 1 306 1 109 1 113 1 153 1 154 1 124 1 29 3 78 1 37 1 131 3 38 3 253 1 251 1 206 1 171 1 332 3 260 1 88 1 91 1 
141 1 265 1 99 1 270 3 306 1 60 1 146 2 109 1 113 1 153 1 154 1 124 1 29 3 78 1 164 1 37 1 131 3 38 3 253 1 251 1 206 1 171 1 332 3 260 1 88 1 91 1 
300 1 94 2 141 4 265 1 99 1 217 1 4 1 58 1 145 1 304 2 270 6 60 1 146 7 306 3 109 1 185 1 226 2 112 2 113 1 153 1 154 1 194 2 242 1 122 1 124 1 29 8 79 1 78 1 164 4 39 1 37 1 131 5 38 5 42 1 251 4 253 1 206 1 171 1 332 8 207 1 260 1 88 1 91 1 138 1 
94 2 265 1 99 1 4 1 270 4 109 1 112 2 113 1 192 1 194 2 124 1 29 5 38 4 131 4 39 1 37 1 206 1 138 1 300 1 141 2 301 2 217 1 145 1 304 2 60 1 306 2 146 4 226 2 153 1 154 1 242 1 79 1 78 1 164 2 253 1 251 2 332 6 171 1 260 1 91 1 
300 1 141 2 94 2 265 1 99 1 217 1 4 1 145 1 304 2 270 4 146 4 306 2 60 1 109 1 185 1 226 2 112 2 113 1 153 1 154 1 194 2 242 1 122 1 124 1 29 5 78 1 79 1 164 2 39 1 37 1 131 4 38 4 251 2 42 1 253 1 206 1 171 1 332 5 260 1 91 1 138 1 
300 1 141 2 94 2 265 1 99 1 217 1 4 1 145 1 304 2 270 4 146 4 306 2 60 1 109 1 185 1 226 2 112 2 113 1 153 1 154 1 194 2 242 1 122 1 124 1 29 5 78 1 79 1 164 2 39 1 37 1 131 4 38 4 251 2 42 1 253 1 206 1 171 1 332 5 260 1 91 1 138 1 
141 2 301 2 265 1 99 1 217 1 4 1 145 1 270 4 146 4 306 2 60 1 106 1 109 1 112 2 113 1 153 1 191 2 154 1 116 1 194 2 67 2 242 1 124 1 29 5 78 1 79 1 164 2 39 1 37 1 131 4 38 4 251 2 42 1 253 1 206 1 171 1 332 5 257 1 260 1 91 1 138 1 
300 1 94 2 141 3 265 1 99 1 217 1 4 1 145 1 304 2 270 5 306 2 60 1 146 5 109 1 185 1 226 2 112 2 113 1 153 1 154 1 194 2 242 1 122 1 124 1 29 6 79 1 78 1 164 3 39 1 37 1 131 4 38 4 42 1 251 3 253 1 206 1 171 1 332 6 207 1 260 1 91 1 138 1 
300 1 94 2 141 3 265 1 99 1 217 1 4 1 145 1 304 2 270 5 306 2 60 1 146 5 109 1 185 1 226 2 112 2 113 1 153 1 154 1 194 2 242 1 122 1 124 1 29 6 79 1 78 1 164 3 39 1 37 1 131 4 38 4 42 1 251 3 253 1 206 1 171 1 332 6 207 1 260 1 91 1 138 1 
265 1 99 1 4 1 270 4 109 1 112 2 113 1 191 2 116 1 192 1 194 2 124 1 29 5 38 4 131 4 39 1 37 1 206 1 138 1 141 2 301 2 217 1 145 1 60 1 306 2 146 4 153 1 154 1 67 2 242 1 79 1 78 1 164 2 253 1 251 2 332 5 171 1 260 1 91 1 
210 1 98 2 100 2 143 1 219 1 220 1 307 1 228 1 152 1 15 8 154 1 231 1 319 2 193 2 321 8 240 2 282 1 241 1 68 1 69 1 284 1 324 1 24 1 25 7 120 2 243 3 72 2 76 2 201 2 244 4 127 1 248 2 291 2 206 1 258 1 259 1 208 2 91 1 52 1 
210 1 266 1 179 1 220 2 148 1 152 1 154 1 193 1 280 1 68 1 285 1 120 1 72 1 158 1 76 1 200 1 201 1 31 1 244 2 34 1 248 1 35 1 291 3 169 1 206 1 47 1 209 1 261 1 91 1 
220 3 105 1 274 1 14 2 20 1 193 1 280 1 282 1 68 3 285 1 120 1 72 1 158 1 76 1 123 1 200 1 201 1 31 1 244 2 163 1 248 1 291 6 43 1 256 1 209 2 261 2 
216 1 302 1 178 1 220 6 147 1 181 3 148 2 311 1 14 1 193 2 280 11 68 8 324 1 24 1 285 1 120 2 72 2 158 2 76 2 201 2 200 4 244 4 31 11 248 1 80 3 35 1 291 14 169 2 44 1 47 1 209 1 87 1 261 2 
54 1 210 1 98 1 100 1 220 1 6 1 7 1 149 1 152 1 14 1 15 1 278 1 154 2 193 1 321 1 240 1 68 1 284 1 24 1 324 1 25 1 120 1 243 1 72 1 76 1 200 1 201 1 288 1 289 1 244 2 128 1 248 1 35 1 291 2 206 1 295 1 208 1 91 2 
96 1 98 2 100 2 268 2 105 1 274 1 14 2 15 3 278 2 20 1 193 3 280 7 24 1 284 1 285 3 25 3 120 3 123 1 288 1 201 3 200 7 289 2 31 7 32 2 128 2 35 1 291 20 292 1 206 1 136 2 47 2 209 4 208 2 210 1 220 10 147 4 148 2 223 1 149 2 228 1 152 1 151 2 154 3 321 3 240 1 68 10 324 1 72 3 243 2 74 2 158 3 76 3 244 6 163 1 248 3 169 2 256 1 261 8 91 3 
282 1 68 2 120 1 72 1 26 1 158 1 76 1 200 1 201 1 31 1 244 2 147 1 248 1 148 1 291 2 193 1 261 1 280 1 
282 1 285 1 120 1 72 1 76 1 200 1 201 1 220 2 31 1 244 2 248 1 291 2 64 1 47 1 209 1 193 1 261 1 280 1 
220 2 147 1 148 1 193 1 280 2 282 1 68 2 285 1 120 1 72 1 158 1 76 1 201 1 200 2 244 2 31 2 248 1 291 4 169 1 47 1 209 1 261 2 
68 2 120 1 72 1 26 1 158 1 76 1 200 1 201 1 31 1 244 2 147 1 248 1 148 1 291 2 193 1 261 1 280 1 52 1 
285 1 120 1 72 1 76 1 200 1 201 1 220 2 31 1 244 2 248 1 291 2 64 1 47 1 209 1 193 1 261 1 280 1 52 1 
220 2 147 1 148 1 193 1 280 2 68 2 285 1 120 1 72 1 158 1 76 1 201 1 200 2 244 2 31 2 248 1 291 4 169 1 47 1 209 1 261 2 52 1 
68 2 285 1 120 1 72 1 158 1 76 1 200 2 201 1 220 2 31 2 244 2 147 1 248 1 148 1 291 4 169 1 47 1 209 1 193 1 261 2 280 2 
98 1 100 1 220 1 149 1 14 1 15 1 278 1 154 1 193 1 321 1 240 1 68 1 324 1 24 1 25 1 120 1 243 1 72 1 74 1 76 1 201 1 289 1 244 2 128 1 248 1 291 2 208 1 91 1 
98 1 100 1 220 1 227 1 14 1 15 1 278 1 154 1 193 1 321 1 240 1 68 1 324 1 24 1 25 1 120 1 243 1 72 1 76 1 201 1 30 1 289 1 244 2 248 1 291 2 166 1 208 1 91 1 
220 2 147 1 148 1 193 1 280 2 68 2 285 1 120 1 72 1 158 1 76 1 201 1 200 2 244 2 31 2 248 1 35 1 291 4 169 1 47 1 209 1 261 2 
98 1 100 1 220 2 147 1 148 1 149 1 15 1 278 1 154 1 193 1 280 2 321 1 68 2 241 1 285 1 25 1 120 1 243 1 72 1 158 1 74 1 76 1 200 2 201 1 31 2 289 1 244 2 128 1 248 1 291 4 169 1 47 1 136 1 209 1 208 1 261 2 91 1 
210 1 179 1 220 1 147 1 148 1 152 1 154 1 193 1 280 1 68 2 70 1 285 1 120 1 72 1 158 1 76 1 201 1 200 1 244 2 31 1 34 1 248 1 35 1 291 3 169 1 206 1 47 1 261 1 91 1 
139 1 2 1 302 1 101 2 220 10 147 3 108 2 181 2 148 3 18 1 317 1 193 2 68 9 285 3 120 2 72 2 158 3 76 2 244 4 77 1 81 1 80 1 291 19 130 1 169 3 47 3 209 3 87 1 261 6 174 1 
139 1 2 2 142 1 101 4 269 1 220 12 147 2 108 1 181 2 148 3 150 1 13 2 18 1 193 3 68 14 285 2 120 3 72 3 158 3 76 3 244 6 77 1 80 2 326 1 36 1 291 26 130 2 170 1 169 3 47 2 209 2 261 4 87 2 174 1 
2 1 101 4 269 1 105 1 181 4 108 1 13 1 274 1 20 1 18 1 193 3 285 5 120 3 123 1 291 41 36 1 130 2 47 4 209 4 139 1 142 1 302 1 220 21 147 4 148 4 150 1 315 1 68 20 72 3 158 5 76 3 244 6 77 1 163 1 80 3 326 1 81 1 169 4 170 1 256 1 261 8 87 3 174 1 
139 1 142 1 2 1 302 1 101 4 269 1 220 18 105 1 147 3 108 1 181 4 148 4 274 1 150 1 13 2 315 1 18 1 20 1 193 4 68 20 285 4 120 4 72 4 158 5 123 1 76 4 244 8 77 1 163 1 81 1 326 1 80 3 36 1 291 38 130 2 170 1 169 4 256 1 47 3 209 4 87 3 261 7 174 1 
139 1 142 1 2 1 302 2 101 4 178 2 269 1 220 25 105 1 147 7 108 1 181 4 148 7 274 1 13 1 150 1 18 1 20 1 193 2 68 27 285 8 120 2 72 2 158 8 123 1 76 2 244 4 77 1 163 1 326 1 80 4 36 1 291 52 130 1 170 1 169 7 256 1 47 7 209 7 87 2 261 14 174 1 
299 1 11 1 310 1 12 1 279 1 84 1 161 1 48 1 126 1 298 1 
286 1 89 1 
299 1 11 1 310 1 161 1 221 1 48 1 290 1 126 1 182 1 
316 1 159 1 
23 1 225 1 95 1 
299 1 211 1 175 1 161 1 126 1 247 2 310 1 11 1 12 1 184 1 38 1 131 1 132 1 332 1 279 1 48 1 298 1 238 1 
299 1 211 1 175 1 161 1 126 1 247 2 310 1 11 1 12 1 184 1 38 1 131 1 132 1 332 1 279 1 48 1 298 1 238 1 
299 1 211 1 175 1 161 1 126 1 247 2 310 1 11 1 12 1 184 1 38 1 131 1 132 1 332 1 279 1 48 1 298 1 238 1 
23 1 316 1 159 1 
23 1 316 1 159 1 
225 1 95 1 
23 1 225 1 95 1 
177 1 173 1 
299 1 210 2 175 1 177 1 11 1 310 1 186 1 152 2 14 1 277 1 229 1 154 2 238 1 286 1 161 1 245 1 126 1 247 1 131 1 38 1 204 1 133 1 206 2 48 1 89 1 173 1 91 2 
98 1 100 1 143 1 220 1 307 1 10 1 15 2 154 2 319 2 193 1 321 2 239 1 68 1 324 1 24 1 25 2 120 1 243 1 72 1 76 1 201 1 27 1 28 1 244 2 246 1 248 1 35 1 291 2 206 2 208 1 91 2 
264 1 25 1 98 1 100 1 243 1 219 1 15 1 329 1 17 1 189 1 231 1 208 1 321 1 240 1 
25 1 98 1 100 1 59 1 222 1 62 1 228 1 188 1 15 1 329 1 17 1 85 1 232 2 237 1 281 1 321 1 66 1 155 1 
241 1 25 2 98 1 100 1 59 1 222 1 62 1 228 1 188 1 15 2 329 1 17 1 85 1 232 2 237 1 281 1 321 2 66 1 155 1 
25 1 98 1 100 1 218 1 59 1 222 1 62 1 228 1 188 1 15 1 329 1 85 1 232 2 237 1 281 1 321 1 155 1 
195 1 
212 1 215 1 217 1 4 1 145 1 29 1 79 1 39 1 332 1 138 1 
323 1 301 10 285 2 217 5 268 1 158 2 4 5 304 5 148 2 169 2 135 5 332 5 47 2 235 5 320 2 
131 1 38 1 332 1 29 1 146 1 306 1 
98 1 100 1 217 2 4 2 219 1 145 2 104 1 61 2 146 4 306 2 273 1 15 4 115 2 231 1 321 4 240 2 25 4 243 1 79 2 39 2 38 3 131 3 328 2 255 1 49 1 208 1 86 1 92 1 138 1 
212 1 217 1 215 1 43 1 4 1 332 1 29 1 
300 1 94 1 301 1 217 1 4 1 145 1 304 1 306 1 146 1 226 1 29 1 79 1 39 1 38 1 131 1 332 2 138 1 
98 3 100 4 4 9 268 2 102 1 180 2 111 2 15 3 114 1 115 1 22 1 118 2 25 3 285 2 29 2 289 3 39 4 38 5 131 5 293 2 135 6 47 2 208 3 138 4 212 1 301 12 215 1 217 8 145 4 304 6 61 2 146 5 306 3 148 2 63 2 230 1 153 2 235 6 320 2 321 3 240 1 241 1 323 2 325 3 243 10 158 2 79 4 328 1 169 2 255 1 330 2 254 2 332 8 262 2 
53 1 301 6 142 1 217 5 4 8 145 2 304 3 61 1 146 1 306 1 181 1 148 2 150 1 115 1 235 5 21 1 320 2 323 1 285 2 158 2 29 2 79 2 80 1 326 1 36 1 131 1 38 1 39 2 170 1 169 2 135 5 332 5 47 2 87 1 138 2 
210 1 217 2 56 1 4 2 179 1 145 1 105 1 185 1 274 1 152 1 314 1 154 1 233 1 320 2 323 1 285 1 158 2 123 1 79 1 39 1 131 1 38 1 253 1 41 1 206 1 334 1 91 1 138 1 
210 2 98 1 56 1 100 1 179 2 220 1 149 1 183 1 152 2 14 1 15 1 278 1 154 3 193 1 321 1 240 1 24 1 25 1 120 1 72 1 243 1 74 1 76 1 201 1 244 2 289 1 128 1 248 1 291 1 206 2 208 1 91 3 
301 4 217 2 4 1 145 1 304 2 29 2 61 1 79 1 163 1 39 1 135 2 332 4 115 1 235 2 138 1 
299 1 177 1 303 1 279 1 126 1 
263 1 299 1 126 1 
263 1 299 1 126 1 
263 1 299 1 126 1 
299 1 126 1 272 1 
299 1 126 1 272 1 
299 1 126 1 272 1 
299 1 126 1 
161 1 48 1 
68 5 285 2 120 1 72 1 158 2 76 1 123 2 220 5 244 2 105 2 77 1 147 2 291 10 274 1 314 1 209 3 193 1 261 5 
68 2 120 1 72 1 158 1 76 1 244 2 77 1 147 1 148 1 291 2 193 1 261 1 
68 2 285 1 120 1 72 1 158 1 76 1 220 2 244 2 77 1 147 1 148 1 291 4 169 1 47 1 209 1 193 1 261 2 
68 1 120 3 72 3 76 3 123 1 220 2 244 6 105 1 77 1 147 1 81 1 165 1 291 3 13 1 209 1 193 3 261 2 
213 1 267 1 302 1 220 18 105 3 305 1 147 5 181 4 148 3 274 2 13 2 20 1 193 5 68 16 119 1 285 5 120 5 72 5 158 5 123 3 76 5 244 10 77 1 163 1 81 1 80 3 165 1 291 34 169 3 256 1 47 3 209 7 87 1 261 12 
142 1 220 4 105 1 181 1 274 1 20 1 193 1 68 4 285 1 120 1 72 1 158 1 76 1 123 1 244 2 77 1 163 1 80 1 291 8 256 1 209 2 87 1 261 2 
142 1 213 1 302 1 220 5 105 1 147 1 181 2 148 1 274 1 20 1 193 2 68 6 285 1 120 2 72 2 158 2 123 1 76 2 244 4 77 1 163 1 80 1 291 11 169 1 256 1 209 2 87 1 261 3 
142 1 213 1 220 10 105 1 147 1 181 1 148 2 274 1 150 1 13 1 20 1 193 3 68 9 285 3 120 3 72 3 158 3 123 1 76 3 244 6 77 1 163 1 80 1 326 1 291 19 36 1 170 1 169 2 256 1 47 2 209 3 87 1 261 4 
142 1 213 1 220 7 105 1 147 2 181 1 148 2 274 1 13 1 150 1 20 1 193 3 68 10 285 2 120 3 72 3 158 3 123 1 76 3 244 6 77 1 163 1 80 1 326 1 291 17 36 1 170 1 169 2 256 1 47 1 209 3 87 1 261 5 
142 1 220 4 105 1 181 1 274 1 20 1 193 1 68 4 285 1 120 1 72 1 158 1 76 1 123 1 244 2 77 1 163 1 80 1 291 8 256 1 209 2 87 1 261 2 
142 1 220 6 147 1 181 1 148 2 150 1 193 1 68 6 285 2 120 1 72 1 158 2 76 1 244 2 77 1 80 1 326 1 291 12 36 1 170 1 169 2 47 2 209 1 87 1 261 2 
142 1 213 1 220 8 105 1 147 2 181 1 148 2 274 1 150 1 13 2 20 1 193 4 68 10 285 2 120 4 72 4 158 3 123 1 76 4 244 8 77 1 163 1 80 1 326 1 36 1 291 18 170 1 169 2 256 1 47 1 209 3 87 1 261 5 
142 1 220 7 147 3 181 1 148 3 150 1 13 2 193 4 68 9 285 2 120 4 72 4 158 3 76 4 244 8 77 1 81 1 80 1 326 1 36 1 291 16 170 1 169 3 47 2 209 3 87 1 261 6 
68 3 285 1 158 1 123 3 220 4 105 3 147 3 291 7 274 1 256 1 20 2 209 3 261 6 
142 1 220 8 105 1 147 1 181 1 148 2 274 1 150 1 13 2 20 1 193 4 68 10 285 2 120 4 72 4 158 3 123 1 76 4 244 8 77 1 163 1 81 1 80 1 326 1 36 1 291 18 170 1 169 2 256 1 47 1 209 3 87 1 261 4 
68 4 285 1 120 2 72 2 158 1 76 2 123 1 220 4 244 4 105 1 163 1 147 1 291 8 274 1 13 1 256 1 20 1 209 2 193 2 261 3 
291 6 68 3 285 1 274 1 43 1 158 1 256 1 123 1 20 1 220 3 209 2 105 1 261 2 163 1 
68 2 285 1 120 1 213 1 72 1 158 1 76 1 220 2 244 2 147 1 148 1 291 4 169 1 47 1 209 1 193 1 261 2 
68 3 285 1 302 1 158 1 220 4 147 1 181 2 80 1 148 1 291 7 169 1 47 1 209 1 87 1 261 2 
302 1 178 1 220 12 105 2 147 4 148 2 181 2 274 1 13 2 311 1 20 1 193 2 68 11 285 3 120 2 72 2 158 3 123 2 76 2 244 4 163 1 80 2 165 1 291 23 169 2 256 1 47 2 209 5 261 9 
291 1 220 1 181 1 
291 1 68 1 80 1 
68 3 285 1 120 1 72 1 213 1 268 1 158 1 76 1 220 3 244 2 147 1 148 1 291 6 169 1 47 1 209 2 193 1 261 3 
142 1 220 6 147 1 181 1 148 2 150 1 193 1 68 6 285 2 120 1 72 1 158 2 76 1 244 2 77 1 80 1 326 1 291 12 36 1 170 1 169 2 47 2 209 1 87 1 261 2 
68 3 285 1 158 1 123 1 220 3 105 1 147 1 291 6 274 1 209 1 261 2 
68 1 120 1 72 1 123 1 76 1 220 2 105 1 244 2 147 1 165 1 291 3 13 1 256 1 20 1 209 1 193 1 261 2 
14 1 206 1 144 1 154 1 60 1 50 1 91 1 
196 1 144 1 60 1 202 1 224 1 14 1 276 1 206 1 137 1 154 1 50 1 91 1 
283 1 241 1 25 4 98 1 100 1 243 1 219 1 15 4 205 1 231 1 208 1 321 4 240 1 
25 2 98 1 243 1 100 2 287 1 289 1 223 1 167 1 328 1 275 1 15 2 208 1 51 1 321 2 
25 1 98 1 188 1 100 1 15 1 232 1 237 1 155 1 321 1 240 1 
241 1 25 2 98 1 228 1 100 1 243 1 15 2 208 1 307 1 321 2 10 1 
283 1 241 1 25 4 98 2 243 3 100 2 219 1 307 1 328 1 15 5 231 1 259 1 208 2 258 1 321 5 240 1 
283 1 241 1 25 4 98 2 243 3 100 2 219 1 307 1 328 1 15 5 313 1 231 1 208 2 258 1 321 5 240 1 
25 1 98 1 100 1 243 1 43 1 15 1 219 1 231 1 208 1 321 1 240 1 
210 1 284 1 25 1 98 1 243 1 100 1 289 1 149 1 152 1 14 1 15 1 206 1 278 1 154 2 208 1 91 2 321 1 240 1 
210 2 98 1 100 1 180 1 109 1 149 1 152 1 14 1 15 1 278 1 154 2 321 1 284 1 25 1 243 3 289 2 328 1 293 1 253 1 206 2 208 2 260 1 91 2 
210 2 98 1 100 1 180 1 109 1 152 1 14 1 15 2 278 1 154 2 321 2 284 1 25 2 243 3 30 1 289 2 328 1 293 1 253 1 205 1 206 2 208 2 260 1 91 2 
25 3 98 1 100 1 325 1 243 4 160 1 29 1 289 1 146 1 180 1 38 2 131 2 168 1 293 1 328 1 63 1 15 3 205 1 332 1 153 1 208 1 321 3 240 1 
25 3 98 1 100 1 325 1 243 4 29 1 289 1 146 1 180 1 111 1 38 2 131 2 293 1 328 1 63 1 15 3 205 1 332 1 153 1 208 1 321 3 240 1 
69 1 25 1 98 1 100 1 15 1 321 1 
241 1 69 1 25 6 98 2 243 3 100 3 287 1 289 1 127 1 307 1 308 1 228 1 15 7 114 1 319 1 258 1 259 1 208 2 51 1 321 7 240 2 
98 1 100 1 105 1 274 1 15 1 14 2 278 1 20 1 193 2 280 1 284 1 25 1 285 1 120 2 123 1 200 1 27 1 201 2 289 1 31 1 128 1 35 1 291 6 206 1 136 1 208 1 209 2 210 1 220 3 149 1 151 1 152 1 154 2 321 1 241 1 68 3 72 2 243 1 74 1 158 1 76 2 244 4 163 1 248 2 256 1 261 2 91 2 
212 1 217 1 215 1 4 1 145 2 146 2 306 1 111 1 63 1 15 1 153 1 321 1 240 1 25 1 325 1 243 2 29 1 79 2 39 2 131 3 38 3 204 1 255 1 330 1 254 1 332 1 138 2 262 1 
241 1 69 1 25 2 98 1 243 2 100 2 289 1 63 1 15 2 114 1 208 1 321 2 22 1 
210 1 284 1 25 1 98 1 243 1 100 1 30 1 289 1 152 1 14 1 15 1 206 1 278 1 154 2 208 1 91 2 321 1 240 1 
25 1 98 1 243 1 100 2 287 1 289 1 308 1 328 1 15 1 114 1 208 1 51 1 321 1 
322 1 140 1 312 1 14 1 234 1 
322 1 140 2 265 1 157 1 125 1 29 1 109 1 38 2 131 2 253 1 312 2 14 1 204 1 134 1 332 1 153 1 234 2 260 1 65 1 
322 1 140 1 206 1 28 1 154 1 234 1 246 1 91 1 239 1 
322 1 134 1 65 1 

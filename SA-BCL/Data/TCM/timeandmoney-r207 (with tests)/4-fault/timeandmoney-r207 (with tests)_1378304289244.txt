#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 4 106 2 357 2 304 1 69 5 152 1 90 9 335 2 92 1 362 6 336 1 339 1 96 9 137 1 288 2 99 2 320 1 35 1 217 1 174 3 102 1 103 1 18 1 197 1 281 2 198 2 201 1 252 1 
253 4 106 2 357 2 304 1 69 5 152 1 90 9 335 2 92 1 362 6 336 1 339 1 96 9 137 1 99 2 320 1 288 2 35 1 217 1 174 3 102 1 103 1 18 1 197 1 281 2 198 2 201 1 252 1 
253 5 106 2 357 2 304 1 69 6 152 1 90 10 335 2 92 1 362 7 336 1 339 1 96 10 137 1 99 2 320 1 288 2 35 1 217 1 174 4 102 1 103 1 18 1 197 1 281 2 198 2 201 1 252 1 
253 3 106 2 357 2 304 1 69 4 152 1 90 7 335 2 92 1 362 4 336 1 339 1 96 7 99 2 320 1 288 1 35 1 217 1 174 2 102 1 103 1 18 1 197 1 281 2 198 2 201 1 252 1 
253 2 106 1 137 1 288 2 357 1 35 1 69 3 217 1 90 4 335 1 174 1 102 1 92 1 362 3 103 1 198 1 281 1 96 4 
99 1 357 1 69 1 35 1 323 1 152 1 256 1 90 2 335 1 102 1 92 1 142 1 197 1 281 1 198 1 96 2 
253 1 99 1 357 2 35 1 69 2 90 3 174 1 102 1 92 1 362 1 336 1 281 2 96 3 
253 4 106 1 357 2 69 5 128 1 90 9 335 1 362 7 92 1 336 1 96 9 33 1 137 1 99 1 320 1 288 2 35 1 217 1 174 3 102 1 103 1 281 2 198 1 252 1 
253 4 106 1 357 2 69 5 128 1 90 9 335 1 362 7 92 1 336 1 96 9 33 1 137 1 99 1 320 1 288 2 35 1 217 1 174 3 102 1 103 1 281 2 198 1 252 1 
75 1 262 1 125 1 
262 1 166 1 31 2 
61 2 17 2 149 2 104 2 221 1 20 1 36 2 244 2 
203 1 149 2 85 1 180 2 150 2 68 1 305 1 258 1 260 1 26 1 265 1 28 1 56 2 72 1 238 2 367 1 57 1 276 2 285 1 187 1 112 1 170 1 77 1 290 1 36 2 245 1 244 3 247 1 61 2 17 2 41 1 120 1 141 1 104 3 221 1 199 1 20 1 
61 1 17 1 149 1 104 1 221 1 62 1 242 1 36 1 239 1 244 1 
356 1 205 1 303 1 359 1 242 1 262 1 244 1 17 1 326 1 104 1 19 1 316 1 317 1 125 1 
149 1 205 1 303 2 359 1 242 1 36 1 262 1 244 1 61 1 17 1 326 2 104 1 19 1 316 1 125 1 
0 1 326 1 303 1 113 1 261 1 
374 1 326 2 370 1 303 2 113 1 262 1 261 1 125 1 
326 1 303 1 261 1 
149 1 303 1 371 1 113 1 242 1 36 1 244 1 61 1 17 1 326 1 221 1 104 1 62 1 239 1 
262 1 
374 1 326 2 303 2 113 1 184 1 262 1 261 1 125 1 
23 2 303 5 113 2 262 1 261 2 374 1 295 1 268 1 234 1 326 5 121 2 162 1 315 2 364 1 109 1 338 1 202 1 251 1 125 1 
75 1 20 1 
149 1 36 1 208 1 244 2 61 1 17 2 104 2 20 2 73 1 
179 1 144 1 263 1 
203 1 187 1 112 1 85 1 180 1 290 1 26 1 244 1 264 1 41 1 104 1 56 1 20 1 72 1 238 1 367 1 
203 1 187 1 85 1 112 1 180 1 290 1 36 1 231 1 26 1 25 1 263 1 244 2 61 1 17 1 41 1 104 2 56 1 72 1 367 1 238 1 
61 3 149 1 17 3 104 3 20 1 36 3 231 1 244 3 
61 1 17 1 104 1 242 1 36 1 239 1 244 1 
61 1 17 1 149 1 104 1 242 1 36 1 208 1 244 1 73 1 
203 1 149 2 85 1 205 1 180 1 150 1 303 1 305 1 359 1 258 1 231 1 26 1 25 1 265 1 28 1 56 1 72 1 316 1 367 1 238 1 57 1 73 1 276 2 344 1 187 1 112 1 170 1 77 1 290 1 242 1 36 3 244 4 247 1 61 3 16 1 17 3 41 1 326 1 141 1 104 4 221 1 199 1 20 1 19 1 
61 1 356 1 17 2 104 2 20 1 376 1 36 1 231 1 244 2 
344 1 149 1 205 1 303 1 242 1 359 1 36 3 262 1 231 2 25 1 244 3 173 1 61 3 17 3 326 1 104 3 19 1 316 1 73 1 
61 2 17 2 149 1 179 1 104 2 36 2 231 1 263 1 244 2 73 1 
203 1 187 1 112 1 85 1 180 1 290 1 26 1 244 1 41 1 104 1 56 1 20 1 72 1 238 1 367 1 
187 1 85 1 180 1 290 1 26 1 244 1 41 1 104 1 56 1 327 1 20 1 72 1 238 1 367 1 340 1 
227 1 179 2 150 4 305 1 206 1 260 2 263 2 28 1 271 1 108 1 236 1 57 1 111 1 5 1 276 2 98 1 170 1 34 1 77 1 292 1 247 1 199 2 144 2 123 1 
61 1 17 1 160 1 104 1 242 1 316 1 36 1 244 1 
178 1 356 1 149 1 60 1 36 4 231 2 25 1 244 5 61 4 17 5 104 5 376 1 20 1 73 1 
61 2 160 1 17 2 104 2 242 1 36 2 239 1 244 2 
55 1 167 1 
55 1 167 1 
190 1 363 1 
190 1 363 1 
190 1 363 1 
55 1 87 1 167 1 
55 1 87 1 167 1 
55 1 127 1 167 1 
55 2 67 1 190 1 363 1 232 1 167 2 
55 1 87 1 167 1 
55 1 375 1 167 1 
55 1 375 1 167 1 
55 1 375 1 167 1 
84 2 138 2 289 1 303 2 255 2 358 2 207 1 259 1 232 1 262 1 15 1 55 2 40 1 133 3 326 2 350 1 79 1 378 2 167 2 
84 1 24 1 303 1 255 1 257 1 155 1 127 1 259 1 55 1 133 1 167 1 138 1 36 2 244 2 61 2 17 2 326 1 220 1 175 1 104 2 122 1 20 1 378 1 379 1 
106 1 198 1 335 1 
198 1 323 1 335 1 
106 2 297 1 10 1 29 1 198 3 323 1 
106 1 297 1 29 1 215 1 198 2 323 1 
106 1 297 1 29 2 198 2 323 1 
148 1 23 1 303 5 230 2 261 1 262 2 314 1 315 1 162 3 211 2 364 1 236 1 164 1 111 1 166 1 94 1 31 3 369 1 345 2 113 4 292 1 116 1 374 1 121 1 326 5 220 1 122 1 123 1 379 1 146 1 202 2 125 1 
0 1 149 1 303 2 282 1 261 1 262 1 239 1 277 1 371 1 113 2 242 1 36 1 244 1 61 1 17 1 326 2 221 1 104 1 62 1 22 1 125 1 
148 1 23 1 303 3 230 2 262 3 315 1 162 3 211 2 164 1 236 1 111 1 166 2 94 1 31 4 369 1 345 1 113 2 292 1 116 1 295 1 121 1 326 3 220 1 123 1 202 2 125 1 
148 1 23 1 302 1 303 4 230 4 151 1 262 4 315 1 162 5 211 4 164 1 236 2 111 2 166 3 94 2 31 7 369 1 345 2 113 3 292 2 116 1 295 1 248 1 121 1 326 4 220 2 123 2 202 4 125 1 
75 1 290 1 193 1 
290 1 274 1 
83 1 
41 1 290 1 
41 1 290 3 44 1 115 1 26 1 193 2 
41 1 290 1 26 1 
290 1 153 1 
227 2 332 1 343 1 169 1 9 1 150 7 241 1 260 4 243 1 293 1 199 3 236 1 111 1 353 1 5 3 354 1 135 2 
227 2 332 1 343 1 169 1 9 1 150 7 241 1 260 4 243 1 293 1 199 3 236 1 111 1 353 1 5 3 354 1 135 2 
227 2 332 1 343 1 169 1 9 1 150 7 241 1 260 4 293 1 243 1 199 3 236 1 111 1 353 1 5 3 354 1 47 1 135 2 
332 2 48 1 227 5 150 31 305 1 260 16 158 1 28 1 236 4 185 1 5 10 111 4 135 3 94 3 276 2 343 2 74 1 169 1 9 5 170 1 241 2 292 3 293 1 243 2 294 1 247 1 296 4 298 1 199 15 351 3 300 1 123 3 353 1 354 1 
227 3 332 1 150 9 305 2 260 5 28 2 236 1 111 1 5 4 135 2 276 4 343 1 286 1 169 1 170 2 9 1 241 1 243 1 293 1 294 1 247 2 199 4 353 1 124 1 
106 1 85 1 180 1 254 1 357 1 69 1 308 1 90 2 335 1 362 1 92 1 56 1 238 1 96 2 187 1 99 1 188 1 10 1 189 1 35 1 216 1 323 1 114 1 13 1 102 1 42 1 281 1 198 2 21 1 145 1 
106 1 85 1 180 1 254 1 357 1 69 1 90 3 335 1 362 2 56 1 238 1 96 3 240 1 187 1 10 1 99 1 188 1 189 1 35 1 216 1 323 1 114 1 373 1 102 1 42 1 281 1 198 2 249 1 21 1 145 1 
106 1 85 1 180 1 254 1 69 1 90 2 335 1 362 2 56 1 238 1 96 2 240 1 187 1 99 1 188 1 10 1 189 1 35 1 216 1 323 1 114 1 102 1 198 2 249 1 145 1 
187 1 85 1 99 2 180 1 357 1 254 2 189 2 290 1 216 2 172 1 218 1 373 1 90 1 119 1 41 1 56 1 281 1 72 1 238 1 165 1 46 1 96 1 275 1 
240 1 106 1 187 1 85 1 10 1 188 1 99 1 180 1 357 1 254 1 189 1 323 1 216 1 114 1 308 1 90 1 335 1 92 1 42 1 56 1 198 2 281 1 145 1 21 1 238 1 96 1 
89 1 
228 1 85 1 180 2 86 1 51 2 50 2 334 1 131 1 2 1 56 2 238 2 97 1 187 1 290 1 242 1 192 1 244 1 246 1 17 1 104 1 19 1 200 1 105 1 202 2 66 2 23 1 356 1 204 2 205 1 303 5 359 1 262 2 261 6 71 1 162 2 315 1 364 1 72 2 164 1 316 1 317 1 166 2 31 2 275 1 214 2 76 4 37 1 119 1 374 3 41 1 326 5 121 1 177 2 329 2 125 1 
228 1 356 1 204 1 205 1 303 3 86 1 359 1 261 2 131 1 316 1 184 1 317 1 76 2 242 1 244 1 246 1 17 1 374 1 326 3 104 1 19 1 200 1 
228 1 356 1 205 1 303 3 86 1 359 1 261 1 262 1 131 1 316 1 184 1 317 1 76 3 214 1 242 1 244 1 246 1 17 1 374 1 326 3 104 1 19 1 200 1 125 1 
228 1 356 1 204 1 205 1 303 3 86 1 359 1 261 2 262 1 131 1 316 1 184 1 317 1 76 3 214 1 242 1 244 1 246 1 374 1 17 1 326 3 104 1 19 1 200 1 66 1 125 1 
228 1 86 1 50 2 51 2 334 1 131 1 184 1 58 1 291 1 242 1 192 1 244 1 246 1 17 1 104 1 19 1 200 1 202 1 66 4 23 1 356 1 204 4 205 1 303 5 359 1 261 7 262 5 313 1 315 1 162 1 364 1 316 1 110 1 317 1 166 2 76 6 214 4 374 3 326 5 325 1 121 1 177 2 329 2 125 5 
228 1 86 1 50 2 51 2 334 1 131 1 2 1 242 1 192 1 244 1 246 1 17 1 104 1 19 1 200 1 202 1 66 2 23 1 356 1 204 2 205 1 303 4 359 1 261 4 262 2 315 1 162 1 364 1 316 1 317 1 166 2 31 2 76 4 214 2 374 2 326 4 121 1 177 2 329 2 125 1 
23 1 228 1 356 1 204 2 205 1 303 4 86 1 51 2 50 2 359 1 262 1 261 4 334 1 131 1 162 1 315 1 364 1 316 1 110 1 317 1 166 2 58 1 214 2 76 4 291 1 242 1 192 1 244 1 246 1 374 2 17 1 326 4 121 1 177 2 104 1 329 2 19 1 200 1 202 1 125 1 66 2 
23 1 228 1 356 1 204 2 205 1 303 4 86 1 51 2 50 2 359 1 262 1 261 4 334 1 131 1 162 1 315 1 364 1 316 1 110 1 317 1 166 2 58 1 214 2 76 4 291 1 242 1 192 1 244 1 246 1 374 2 17 1 326 4 121 1 177 2 104 1 329 2 19 1 200 1 202 1 125 1 66 2 
23 1 228 1 356 1 204 2 205 1 303 4 86 1 50 2 359 1 262 1 261 4 334 1 131 1 181 2 162 1 315 1 364 1 366 1 316 1 213 1 110 1 317 1 95 1 31 2 214 2 76 4 242 1 140 2 244 1 246 1 374 2 17 1 326 4 121 1 177 2 104 1 19 1 200 1 202 1 125 1 66 2 
23 1 228 1 356 1 204 3 205 1 303 4 86 1 51 2 50 2 359 1 262 1 334 1 261 5 131 1 162 1 315 1 364 1 316 1 110 1 317 1 166 2 58 1 76 5 214 3 291 1 242 1 192 1 244 1 246 1 374 2 17 1 121 1 326 4 325 1 177 2 104 1 329 2 19 1 200 1 202 1 125 1 66 3 
23 1 228 1 356 1 204 3 205 1 303 4 86 1 51 2 50 2 359 1 262 1 334 1 261 5 131 1 162 1 315 1 364 1 316 1 110 1 317 1 166 2 58 1 76 5 214 3 291 1 242 1 192 1 244 1 246 1 374 2 17 1 121 1 326 4 325 1 177 2 104 1 329 2 19 1 200 1 202 1 125 1 66 3 
228 1 86 1 50 2 334 1 131 1 2 1 181 2 242 1 140 2 244 1 246 1 17 1 104 1 19 1 200 1 202 1 66 2 23 1 356 1 204 2 205 1 303 4 359 1 261 4 262 1 315 1 162 1 364 1 366 1 316 1 317 1 31 2 76 4 214 2 374 2 326 4 121 1 177 2 125 1 
332 1 227 2 179 1 150 6 305 1 206 1 260 3 263 1 28 1 236 1 57 1 5 2 111 1 135 1 75 1 276 2 169 1 170 1 77 1 241 1 293 1 247 1 199 3 20 2 144 1 353 1 
227 1 1 1 179 4 126 1 150 14 305 2 260 8 263 11 265 1 28 2 93 1 212 1 236 2 185 1 57 1 5 2 111 1 94 2 276 4 9 1 170 2 77 2 292 1 245 1 247 2 296 3 222 1 199 6 20 1 351 3 144 11 300 1 123 2 
203 1 1 1 85 1 180 1 179 1 150 2 305 1 260 1 231 1 26 1 25 1 264 1 157 1 265 1 267 1 28 1 56 1 72 1 367 1 238 1 57 1 276 2 187 1 112 1 170 1 290 1 77 1 36 1 244 2 245 1 247 1 61 1 17 1 41 1 104 2 328 1 199 1 20 1 
332 1 227 4 1 1 333 2 85 2 180 3 179 7 231 1 56 3 235 2 236 3 238 3 57 3 5 8 135 1 94 2 240 1 187 2 9 4 290 2 241 1 292 2 293 1 245 1 244 3 12 2 247 3 61 1 17 1 196 1 104 3 199 10 20 2 144 7 353 1 203 2 150 20 305 3 258 2 260 10 25 1 26 2 263 7 265 1 269 1 28 3 161 1 72 1 367 2 111 3 276 6 169 1 112 2 170 3 77 3 36 1 41 2 223 2 123 2 
85 2 180 8 150 2 305 2 206 1 260 1 231 1 265 1 28 2 56 7 72 2 238 8 273 1 57 2 275 1 240 1 136 1 276 4 187 2 170 2 290 3 77 2 322 1 36 1 372 1 244 1 245 1 13 1 247 2 61 1 119 1 17 1 120 2 41 2 104 1 199 1 63 1 147 1 355 1 
227 1 149 1 1 1 179 1 150 3 305 1 260 1 263 1 28 1 236 1 57 1 5 1 111 1 94 1 73 1 276 2 170 1 77 1 36 1 292 1 139 1 244 1 247 1 61 1 17 1 104 1 199 2 144 1 123 1 
276 2 9 1 179 1 170 1 150 2 77 1 305 1 206 1 260 2 263 1 247 1 28 1 271 1 144 1 236 1 57 1 123 1 5 1 
227 1 276 2 179 1 170 1 150 2 34 1 77 1 305 1 206 1 292 1 263 1 247 1 28 1 199 2 144 1 57 1 5 1 111 1 
227 1 179 2 150 4 305 1 206 1 260 2 263 2 28 1 236 1 57 1 5 2 111 1 94 1 276 2 170 1 9 1 77 1 292 1 247 1 199 2 144 2 123 1 
276 2 9 1 179 1 170 1 150 2 322 1 77 1 305 1 260 2 263 1 247 1 28 1 271 1 144 1 236 1 57 1 123 1 5 1 
227 1 276 2 179 1 170 1 150 2 34 1 322 1 77 1 305 1 292 1 263 1 247 1 28 1 199 2 144 1 57 1 5 1 111 1 
227 1 179 2 150 4 305 1 260 2 263 2 28 1 236 1 57 1 5 2 111 1 94 1 276 2 170 1 9 1 77 1 322 1 292 1 247 1 199 2 144 2 123 1 
227 1 276 2 9 1 179 2 170 1 150 4 77 1 305 1 292 1 260 2 263 2 247 1 28 1 199 2 144 2 236 1 57 1 123 1 111 1 5 2 94 1 
203 1 85 1 180 1 150 2 305 1 258 1 260 1 26 1 265 1 28 1 56 1 72 1 367 1 238 1 57 1 276 2 187 1 112 1 170 1 290 1 77 1 245 1 244 1 247 1 41 1 104 1 199 1 20 1 
187 1 85 1 180 1 290 1 39 1 26 1 244 1 41 1 104 1 56 1 327 1 72 1 238 1 367 1 340 1 
227 1 1 1 179 2 150 4 305 1 260 2 263 2 28 1 236 1 57 1 5 2 111 1 94 1 276 2 170 1 9 1 77 1 292 1 247 1 199 2 144 2 123 1 
227 1 203 1 85 1 179 2 180 1 150 4 305 1 258 1 260 2 26 1 263 2 28 1 56 1 236 1 367 1 238 1 57 1 111 1 5 2 94 1 276 2 187 1 112 1 9 1 170 1 290 1 77 1 292 1 244 1 12 1 13 1 247 1 41 1 104 1 199 2 144 2 123 1 
149 1 1 1 179 1 150 3 305 1 260 2 263 1 28 1 236 1 57 1 111 1 5 1 94 1 73 1 276 2 9 1 170 1 77 1 191 1 292 1 36 1 244 1 247 1 61 1 17 1 104 1 199 1 144 1 123 1 
227 3 150 19 305 2 154 2 260 9 361 1 266 1 209 1 3 1 28 2 236 3 185 1 30 1 5 6 111 3 94 3 276 4 321 1 170 2 9 3 292 3 279 2 247 2 195 1 296 2 199 10 351 1 300 1 123 3 124 1 
227 2 150 26 305 3 154 1 260 14 361 1 266 2 3 1 28 3 365 1 236 3 185 2 5 4 111 2 30 1 94 3 276 6 9 2 321 2 170 3 100 1 292 2 294 2 279 4 247 3 296 2 176 1 199 12 331 1 351 2 123 3 225 1 124 1 65 1 
227 4 332 1 3 1 182 1 236 5 185 3 5 8 94 4 135 1 9 4 100 1 241 1 292 4 293 1 294 1 247 3 195 1 296 4 199 21 351 3 300 1 353 1 65 1 150 41 305 3 154 1 260 20 361 1 266 2 28 3 365 1 111 5 30 1 276 6 169 1 170 3 321 1 279 4 176 1 331 1 123 4 225 1 124 1 
332 1 227 4 150 38 305 4 154 1 260 20 361 1 266 2 3 1 28 4 182 1 365 1 236 5 185 3 30 1 5 7 111 4 135 1 94 4 276 8 169 1 321 1 170 4 9 3 100 1 241 1 292 3 293 1 294 2 279 4 247 4 195 1 296 4 176 1 199 18 331 1 351 3 300 1 123 4 353 1 225 1 124 1 65 1 
332 1 227 7 150 52 305 2 154 1 260 27 361 1 266 1 3 1 28 2 365 1 212 2 236 8 185 2 30 1 5 14 111 8 135 1 94 7 276 4 169 1 321 1 170 2 9 7 100 1 241 1 292 7 293 1 294 1 279 4 247 2 296 4 176 1 199 25 331 1 351 4 300 2 123 7 353 1 225 1 124 1 65 1 
15 1 55 1 40 1 84 1 138 1 255 1 232 1 378 1 167 1 380 1 
175 1 127 1 
101 1 55 1 84 1 132 1 138 1 255 1 378 1 53 1 167 1 
84 1 138 1 289 1 303 1 255 1 358 1 259 1 232 1 262 1 15 1 55 1 40 1 133 2 326 1 350 1 79 1 378 1 167 1 
84 1 138 1 289 1 303 1 255 1 358 1 259 1 232 1 262 1 15 1 55 1 40 1 133 2 326 1 350 1 79 1 378 1 167 1 
84 1 138 1 289 1 303 1 255 1 358 1 259 1 232 1 262 1 15 1 55 1 40 1 133 2 326 1 350 1 79 1 378 1 167 1 
67 1 87 1 250 1 
67 1 87 1 250 1 
375 1 310 1 
67 1 375 1 310 1 
24 1 257 1 
84 1 24 1 303 1 358 1 255 1 257 1 155 1 127 1 55 1 133 1 167 1 138 1 113 1 36 2 278 1 244 2 61 2 17 2 326 1 220 1 175 1 104 2 122 1 20 1 79 1 378 1 379 1 
87 1 250 1 
67 1 375 1 310 1 
1 1 85 1 180 2 150 2 305 1 260 1 233 1 265 1 312 1 27 1 28 1 56 2 238 2 57 1 6 1 276 2 187 1 170 1 290 1 77 1 78 1 372 1 244 2 245 1 247 1 17 2 41 1 120 2 104 2 199 1 63 1 
240 1 106 1 187 1 85 1 10 1 180 2 323 1 216 1 114 1 11 1 335 1 13 1 348 1 42 1 56 2 198 2 238 2 145 1 32 1 
240 1 106 1 187 1 85 1 10 1 180 1 323 1 216 1 114 1 309 1 335 1 42 1 56 1 198 2 238 1 145 1 32 1 
187 1 85 1 180 1 290 1 216 1 172 1 11 1 347 1 119 1 41 1 56 1 72 1 238 1 275 1 
240 1 106 1 187 1 85 1 10 1 180 1 323 1 216 1 114 1 11 1 335 1 348 1 42 1 56 1 198 2 238 1 145 1 32 1 
219 1 
75 1 234 1 162 1 109 1 262 1 202 1 125 1 
23 1 303 1 51 1 262 2 261 1 162 1 315 1 364 1 166 1 31 1 192 1 374 1 121 1 326 1 329 1 202 1 125 1 
85 3 180 3 230 6 88 2 234 1 56 3 237 2 236 2 238 3 94 2 7 1 187 4 290 10 292 2 193 2 13 1 19 2 301 2 202 8 23 4 303 5 153 2 70 2 360 1 307 1 261 5 262 8 26 3 162 9 315 4 364 4 272 1 211 6 163 2 109 1 72 1 164 2 166 6 111 2 274 3 31 12 168 2 318 1 37 1 374 3 41 3 121 4 326 5 223 2 44 1 224 2 377 2 123 2 125 2 
23 2 303 1 230 5 261 1 262 5 162 8 315 2 163 1 211 5 364 2 365 1 164 1 236 2 185 1 166 3 111 2 94 2 31 6 168 2 100 1 37 1 292 2 14 1 280 1 374 1 296 1 176 1 326 1 121 2 331 1 351 1 123 2 225 1 202 5 125 2 
332 1 23 1 149 1 303 1 315 1 162 2 163 1 364 1 236 2 239 1 111 1 58 1 168 2 371 1 241 1 242 1 36 1 244 1 61 1 17 1 121 1 326 1 104 1 221 1 62 1 226 1 353 1 202 2 
23 1 262 1 121 1 234 1 315 1 162 1 364 1 109 1 202 1 125 1 
168 2 230 5 292 2 262 5 223 1 162 5 163 1 211 5 236 2 123 2 166 5 111 2 94 2 202 5 31 10 
374 1 326 1 303 1 262 1 261 1 125 1 
23 2 85 1 180 4 303 3 261 4 54 1 315 2 56 4 162 2 364 1 72 2 164 2 238 4 97 1 275 1 7 2 318 1 187 1 290 1 37 2 119 1 295 1 374 2 41 1 121 2 326 3 43 1 105 1 202 2 
203 1 149 2 85 1 180 1 150 1 305 1 258 1 26 1 265 1 28 1 56 1 72 1 238 1 367 1 57 1 276 2 187 1 112 1 170 1 290 1 77 1 36 2 244 3 247 1 61 2 17 2 41 1 141 1 104 3 221 1 199 1 20 1 
23 1 230 2 37 1 262 4 121 1 315 1 162 1 211 2 364 1 164 1 166 2 135 1 31 4 202 2 125 2 
138 1 255 1 81 1 
138 1 255 1 81 1 
15 1 138 1 255 1 257 1 352 1 
138 1 255 1 81 1 
138 1 49 1 255 1 
138 1 49 1 255 1 
138 1 49 1 255 1 
138 1 255 1 
55 1 167 1 
227 2 276 4 332 1 169 1 9 1 170 2 150 8 305 2 241 1 260 4 293 1 294 1 247 2 28 2 199 4 236 1 111 1 353 1 5 3 135 1 
75 1 332 1 227 2 169 1 150 6 241 1 260 3 293 1 199 3 236 1 5 2 353 1 111 1 135 1 
227 1 59 1 276 2 170 1 9 1 150 4 305 1 292 1 260 2 247 1 28 1 199 2 236 1 123 1 111 1 5 2 94 1 
227 1 9 1 150 7 292 1 260 3 296 2 199 4 351 1 300 1 236 1 185 1 123 1 111 1 5 2 94 1 
332 2 227 5 150 23 126 1 305 2 260 11 28 2 212 1 236 3 5 9 111 3 135 1 94 2 276 4 169 1 9 4 170 2 241 2 292 2 293 1 294 2 247 2 296 2 349 1 199 12 351 2 300 1 123 2 353 1 
296 1 150 1 199 1 
150 1 351 1 260 1 
276 2 59 1 227 2 170 1 9 1 150 6 305 1 292 1 260 3 247 1 28 1 223 1 199 3 236 1 123 1 5 3 111 1 94 1 
227 1 150 12 305 1 260 6 28 1 365 1 236 2 185 1 111 2 5 2 94 2 276 2 9 1 170 1 100 1 292 2 247 1 296 1 176 1 199 6 351 1 331 1 123 2 225 1 124 1 
332 1 227 1 9 1 150 6 241 1 260 3 199 3 236 1 353 1 111 1 5 2 
227 1 332 1 276 2 169 1 9 1 170 1 150 3 241 1 305 1 260 1 293 1 294 1 247 1 28 1 349 1 199 2 5 2 
276 2 332 2 227 3 170 1 9 2 150 10 305 1 241 2 260 5 247 1 28 1 199 5 236 2 226 1 5 5 353 1 111 2 124 1 
276 2 170 1 9 1 150 2 305 1 260 2 247 1 28 1 236 1 123 1 5 1 124 1 
227 1 276 2 170 1 9 1 150 4 305 1 292 1 260 2 247 1 28 1 199 2 236 1 123 1 111 1 5 2 124 1 94 1 
276 6 332 1 227 1 170 3 9 1 150 3 305 3 241 1 260 1 294 1 247 3 195 1 28 3 349 1 199 2 5 2 124 1 
332 3 227 7 150 34 305 5 260 16 158 1 28 5 236 5 185 1 5 12 111 5 135 1 94 3 74 1 59 1 276 10 169 1 170 5 9 5 241 3 292 3 293 1 294 2 247 5 195 1 296 4 298 1 349 1 199 18 351 3 300 1 123 3 353 2 124 1 
332 1 227 2 150 8 305 1 260 4 28 1 236 1 185 1 111 1 5 2 135 1 276 2 169 1 170 1 241 1 293 1 247 1 296 1 199 4 351 1 225 1 353 1 124 1 
227 2 332 1 150 11 305 2 260 6 28 2 236 2 185 1 111 1 5 3 135 1 94 1 276 4 59 1 169 1 170 2 9 1 241 1 293 1 247 2 296 2 199 5 351 1 300 1 123 1 353 1 225 1 124 1 
332 1 227 3 150 19 305 3 260 9 28 3 365 1 236 3 185 1 111 3 5 4 135 1 94 2 59 1 276 6 169 1 9 1 170 3 100 1 241 1 292 2 293 1 294 1 247 3 296 1 176 1 199 10 331 1 351 1 123 2 353 1 225 1 124 1 
332 1 227 3 150 17 305 3 260 10 28 3 365 1 236 3 185 1 111 2 5 5 135 1 94 2 59 1 276 6 169 1 9 2 170 3 100 1 241 1 292 1 293 1 294 1 247 3 296 1 176 1 199 7 351 1 331 1 123 2 353 1 225 1 124 1 
332 1 227 2 150 8 305 1 260 4 28 1 236 1 185 1 111 1 5 2 135 1 276 2 169 1 170 1 241 1 293 1 247 1 296 1 199 4 351 1 225 1 353 1 124 1 
227 1 150 12 305 1 260 6 28 1 365 1 236 2 185 1 111 2 5 2 94 2 276 2 9 1 170 1 100 1 292 2 247 1 296 1 176 1 199 6 351 1 331 1 123 2 225 1 124 1 
332 1 227 3 150 18 305 4 260 10 28 4 365 1 236 3 185 1 111 2 5 5 135 1 94 2 59 1 276 8 169 1 9 2 170 4 100 1 241 1 292 1 293 1 294 2 247 4 296 1 176 1 199 8 331 1 351 1 123 2 353 1 225 1 124 1 
227 3 150 16 305 4 260 9 28 4 365 1 236 3 185 1 111 2 5 6 94 3 276 8 9 3 170 4 100 1 292 2 294 2 247 4 195 1 296 1 176 1 199 7 331 1 351 1 123 3 225 1 124 1 
332 3 227 3 169 1 9 3 150 7 241 3 260 3 293 2 199 4 236 1 111 1 5 6 353 1 
332 1 227 3 150 18 305 4 260 10 28 4 365 1 236 3 185 1 111 2 5 4 135 1 94 2 276 8 169 1 9 1 170 4 100 1 241 1 292 1 293 1 294 2 247 4 195 1 296 1 176 1 199 8 331 1 351 1 123 2 353 1 225 1 124 1 
17 1 356 1 104 1 20 1 376 1 244 1 311 1 
356 1 319 1 244 1 311 1 91 1 159 1 194 1 17 1 104 1 20 1 376 1 186 1 
75 1 119 1 187 1 85 1 41 1 180 1 56 1 290 1 72 1 238 1 275 1 
203 1 187 1 85 1 180 1 290 1 36 1 231 1 26 1 244 2 61 1 17 1 41 1 104 2 56 1 20 1 72 1 367 1 238 1 
7 1 203 1 187 1 85 1 205 1 180 1 290 3 153 1 242 1 36 1 231 1 26 2 244 2 61 2 17 2 41 2 104 2 56 1 20 1 316 1 377 1 367 1 238 1 
85 1 180 2 205 1 153 1 231 1 26 2 210 1 56 2 316 1 238 2 367 1 340 1 7 1 187 1 290 3 242 1 36 1 244 2 61 2 17 2 41 2 104 2 20 1 377 1 
149 1 85 1 180 2 303 2 153 1 261 1 262 1 26 1 56 2 72 1 238 2 239 1 274 1 7 1 187 1 371 1 290 4 242 1 36 1 244 1 193 1 61 1 17 1 41 1 326 2 104 1 221 1 62 1 19 1 80 1 377 1 82 1 125 1 
7 1 187 1 85 1 180 3 303 2 290 4 153 1 262 1 261 1 26 1 193 1 210 1 41 1 326 2 56 3 72 1 19 1 377 1 238 3 301 1 274 1 125 1 
187 1 85 1 180 1 56 1 238 1 273 1 
240 1 136 1 187 3 85 2 180 7 290 3 171 1 156 1 372 1 26 1 13 1 120 1 41 2 56 6 72 2 44 1 64 1 238 7 273 1 147 1 355 1 
332 1 227 2 1 1 85 1 179 1 180 1 231 1 56 1 235 1 236 1 238 1 57 2 5 2 135 1 187 1 290 1 241 1 293 1 244 2 12 1 13 1 247 2 61 1 17 1 104 2 199 3 20 2 144 1 353 1 203 1 150 6 305 2 258 1 260 3 26 1 263 1 312 1 28 2 367 1 111 1 276 4 169 1 112 1 170 2 77 2 36 1 41 1 
23 2 180 1 303 3 262 1 261 2 88 1 234 1 162 1 56 1 315 2 364 2 109 1 72 1 237 1 238 1 274 1 318 1 113 1 290 2 193 1 374 1 121 2 326 3 19 1 224 1 301 1 202 1 125 1 
187 2 85 1 41 1 180 2 56 2 290 2 44 1 307 1 238 2 273 1 26 1 193 1 13 1 
342 1 187 1 85 1 180 4 290 1 13 1 119 1 210 1 41 1 56 4 72 1 238 4 275 1 
7 1 187 2 85 1 180 2 290 1 171 1 156 1 324 1 26 1 269 1 270 1 41 1 56 2 238 2 
187 1 85 1 180 1 56 1 198 1 323 1 114 1 72 1 238 1 335 1 
240 1 187 1 85 1 180 2 290 1 372 1 13 1 41 1 56 2 238 2 6 1 
342 1 136 1 7 1 187 2 85 2 180 5 290 3 372 1 13 1 119 1 41 2 56 4 72 1 238 5 275 1 147 1 
342 1 136 1 7 1 187 2 85 2 180 5 290 3 372 1 13 1 119 1 41 2 56 4 299 1 72 1 238 5 275 1 
187 1 85 1 180 1 290 1 36 1 231 1 26 1 244 2 61 1 17 1 41 1 104 2 56 1 20 1 72 1 367 1 238 1 340 1 
7 1 187 2 85 1 180 1 290 1 171 1 156 1 26 1 41 1 56 1 44 1 64 1 238 1 
330 1 20 1 337 1 118 1 130 1 
344 1 205 1 303 2 113 1 242 1 359 1 38 1 262 1 130 2 118 2 326 2 330 1 183 1 20 1 19 1 316 1 337 2 125 1 284 1 
27 1 17 1 104 1 330 1 78 1 244 1 233 1 118 1 130 1 
183 1 330 1 284 1 
75 1 102 1 69 1 35 1 
102 1 357 1 69 1 35 1 281 1 96 1 90 1 
99 1 189 1 96 1 
107 1 357 1 69 1 35 1 152 2 306 1 90 3 92 1 102 1 281 1 45 1 96 3 
102 1 362 1 288 1 357 1 69 1 35 1 281 1 96 2 90 2 
253 1 106 1 357 1 69 1 90 1 335 1 92 1 103 1 281 1 198 1 96 1 
102 1 92 1 357 1 69 1 281 1 96 1 90 1 
102 2 92 1 357 1 35 1 281 1 96 1 90 1 
346 1 357 2 69 1 90 2 102 1 92 1 281 2 134 1 96 2 341 1 
253 1 320 1 357 1 35 1 69 2 90 3 174 1 102 1 92 1 362 2 281 1 96 3 252 1 
106 1 10 1 357 1 69 1 35 1 323 1 52 1 90 2 335 1 102 1 92 1 362 1 198 2 281 1 96 2 
253 1 137 1 288 1 357 2 35 1 69 2 90 4 174 1 102 1 92 1 362 2 281 2 96 4 
102 1 92 1 357 1 69 1 35 1 281 1 96 1 90 1 
253 1 107 1 357 1 35 2 69 3 152 1 306 1 90 4 174 1 102 2 362 2 281 1 4 1 96 4 
229 1 33 1 357 1 69 1 35 1 117 1 90 2 102 1 92 1 362 1 281 1 96 2 
287 1 107 1 357 1 69 1 35 1 152 2 306 2 90 3 92 1 102 1 281 1 96 3 
283 1 143 2 69 2 129 1 
92 1 357 1 281 1 368 1 96 1 90 1 
102 1 362 1 92 1 357 1 69 1 35 1 281 1 96 2 90 2 252 1 
8 1 
102 1 92 1 357 1 69 1 35 1 281 1 96 1 90 1 
357 1 35 1 69 1 152 1 90 3 362 1 92 1 102 1 281 1 96 3 252 1 
253 1 174 1 69 1 4 1 
102 1 69 1 

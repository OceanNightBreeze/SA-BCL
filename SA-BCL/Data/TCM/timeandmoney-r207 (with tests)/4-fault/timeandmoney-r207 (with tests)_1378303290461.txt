#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 2 87 1 259 1 331 2 260 1 140 1 314 1 287 2 285 4 190 9 362 1 334 2 76 1 8 2 364 2 267 1 366 1 270 9 147 1 126 6 150 1 375 1 376 1 57 1 152 2 178 3 107 5 17 1 
111 2 87 1 259 1 331 2 260 1 140 1 314 1 285 4 287 2 190 9 362 1 334 2 76 1 8 2 364 2 267 1 366 1 270 9 147 1 126 6 150 1 375 1 376 1 57 1 152 2 178 3 107 5 17 1 
111 2 87 1 259 1 331 2 260 1 140 1 314 1 285 5 287 2 190 10 362 1 334 2 76 1 8 2 364 2 267 1 366 1 270 10 147 1 126 7 150 1 375 1 376 1 57 1 152 2 178 4 107 6 17 1 
111 2 87 1 259 1 331 2 260 1 140 1 314 1 285 3 287 1 190 7 362 1 334 2 8 2 364 2 267 1 366 1 270 7 147 1 126 4 150 1 375 1 376 1 57 1 152 2 178 2 107 4 17 1 
331 1 126 3 140 1 375 1 287 2 376 1 285 2 190 4 362 1 334 1 76 1 364 1 8 1 267 1 152 1 178 1 107 3 270 4 
87 1 111 1 208 1 140 1 310 1 44 1 190 2 362 1 334 1 8 1 364 1 267 1 152 1 107 1 366 1 270 2 
111 1 147 1 126 1 140 1 285 1 190 3 362 1 8 2 267 1 152 2 178 1 107 2 270 3 
111 1 331 1 260 1 140 1 285 4 287 2 190 9 362 1 334 1 8 2 364 1 76 1 267 1 270 9 147 1 126 7 375 1 376 1 347 1 152 2 178 3 107 5 17 1 38 1 
111 1 331 1 260 1 140 1 285 4 287 2 190 9 362 1 334 1 8 2 364 1 76 1 267 1 270 9 147 1 126 7 375 1 376 1 347 1 152 2 178 3 107 5 17 1 38 1 
343 1 182 1 82 1 
6 2 186 1 182 1 
335 2 365 2 249 2 230 1 345 2 172 2 96 2 48 1 
19 1 184 1 237 1 161 1 163 1 74 1 290 2 335 3 291 2 365 2 96 2 245 1 167 1 97 1 367 1 168 1 48 1 169 2 30 2 249 2 171 1 322 1 12 2 80 1 345 3 172 2 81 1 151 1 34 1 103 1 229 1 230 1 179 1 278 1 136 1 67 1 280 1 
27 1 335 1 59 1 365 1 249 1 345 1 172 1 96 1 332 1 48 1 
344 1 357 1 345 1 265 1 82 1 332 1 173 1 361 1 335 1 182 1 37 1 96 1 220 1 381 1 
344 1 357 1 249 1 172 1 345 1 82 1 332 1 173 2 361 1 335 1 365 1 182 1 37 2 96 1 381 1 
192 1 37 1 377 1 173 1 275 1 
182 1 37 2 311 1 254 1 82 1 377 1 173 2 275 1 
37 1 377 1 173 1 
27 1 249 1 172 1 345 1 312 1 332 1 173 1 275 1 335 1 59 1 365 1 37 1 96 1 48 1 
182 1 
182 1 37 2 254 1 253 1 82 1 377 1 173 2 275 1 
342 2 355 2 99 1 261 1 254 1 82 1 227 1 173 5 377 2 275 2 336 1 75 1 5 1 177 1 276 2 218 1 182 1 37 5 379 1 
343 1 230 1 
249 1 345 2 172 1 239 1 335 2 365 1 230 2 96 2 25 1 
363 1 89 1 11 1 
272 1 169 1 30 1 184 1 171 1 322 1 345 1 34 1 335 1 291 1 229 1 230 1 136 1 97 1 168 1 280 1 
169 1 30 1 184 1 102 1 249 1 171 1 322 1 172 1 345 2 34 1 335 2 291 1 229 1 96 1 97 1 136 1 168 1 11 1 280 1 305 1 
101 1 249 4 102 1 172 4 345 5 265 1 264 1 335 5 365 1 118 1 230 1 96 5 25 1 305 2 
335 2 59 1 249 2 345 2 172 2 96 2 329 1 332 1 
335 3 365 1 249 3 230 1 345 3 172 3 96 3 305 1 
335 1 59 1 249 1 345 1 172 1 96 1 332 1 
335 1 365 1 249 1 345 1 172 1 96 1 25 1 332 1 239 1 
19 1 184 1 357 1 161 1 332 1 361 1 289 1 74 1 290 2 335 4 291 1 365 2 96 3 245 1 97 1 167 1 25 1 367 1 168 1 48 1 344 1 169 1 30 1 249 3 102 1 171 1 322 1 12 1 80 1 345 4 172 3 81 1 173 1 151 1 34 1 229 1 230 1 278 1 37 1 136 1 381 1 257 1 280 1 305 1 
335 2 249 1 230 1 118 1 345 2 172 1 96 2 265 1 305 1 
0 1 344 1 357 1 102 1 249 3 172 3 345 3 173 1 332 1 361 1 289 1 335 3 365 1 182 1 37 1 96 3 25 1 381 1 305 2 
249 2 89 1 172 2 345 2 335 2 365 1 96 2 25 1 11 1 305 1 
169 1 30 1 184 1 171 1 322 1 345 1 34 1 335 1 291 1 229 1 230 1 136 1 97 1 168 1 280 1 
169 1 30 1 322 1 345 1 43 1 34 1 335 1 175 1 291 1 229 1 230 1 136 1 97 1 168 1 280 1 
19 1 187 1 237 2 161 1 89 2 288 1 333 1 215 1 290 2 144 1 363 2 165 1 217 1 245 1 367 1 11 2 49 1 200 1 80 1 12 4 81 1 346 1 151 2 174 1 
335 1 357 1 249 1 345 1 172 1 96 1 329 1 332 1 
176 1 91 1 
176 1 91 1 
162 1 213 1 
162 1 213 1 
162 1 213 1 
176 1 91 1 225 1 
176 1 91 1 225 1 
176 1 91 1 330 1 
70 1 176 2 91 2 100 1 162 1 213 1 
176 1 91 1 225 1 
176 1 91 1 77 1 
176 1 91 1 77 1 
176 1 91 1 77 1 
281 1 2 1 284 1 212 1 335 2 91 1 96 2 368 1 122 1 249 2 127 1 172 2 131 1 345 2 252 1 173 1 176 1 62 1 230 1 63 1 181 1 37 1 109 1 330 1 
281 2 122 2 137 1 369 2 2 2 100 1 125 1 131 2 252 1 173 2 91 2 176 2 62 3 85 1 15 1 182 1 37 2 247 1 26 1 
334 1 364 1 331 1 
334 1 364 1 310 1 
248 1 364 3 331 2 320 1 226 1 310 1 
248 1 364 2 331 1 106 1 320 1 310 1 
248 1 364 2 331 1 320 2 310 1 
355 1 308 1 186 1 187 1 188 1 333 1 73 1 215 1 6 3 75 1 144 1 116 1 117 1 218 2 368 1 342 1 370 1 374 1 127 1 254 1 82 1 377 1 173 5 227 3 33 2 275 4 276 1 84 2 63 1 37 5 182 2 66 2 
355 2 308 3 186 3 187 3 160 5 188 1 113 1 114 1 4 1 333 3 73 2 5 1 215 3 6 9 75 1 144 3 116 2 192 5 218 6 339 1 79 1 342 2 148 1 127 4 254 1 82 1 377 6 173 9 227 8 33 6 275 7 276 2 37 9 182 5 66 6 
355 1 308 1 186 2 187 1 333 1 73 1 215 1 5 1 6 4 144 1 116 1 117 1 218 2 342 1 370 1 127 1 82 1 173 3 227 3 33 2 275 2 276 1 84 1 182 3 37 3 66 2 
355 1 308 2 186 3 187 2 114 1 4 1 333 2 73 1 215 2 6 7 5 1 144 2 116 1 117 1 218 4 342 1 148 1 370 1 127 2 82 1 173 4 227 5 33 4 275 3 276 1 84 2 182 4 37 4 66 4 
34 1 343 1 318 1 
34 1 321 1 
202 1 
34 1 229 1 322 1 
34 1 266 1 
34 1 322 1 
34 3 7 1 318 2 229 1 322 1 32 1 
29 1 52 2 309 1 198 1 187 1 273 1 200 2 237 4 211 1 251 1 12 7 313 1 142 1 151 3 174 3 144 1 316 1 
29 1 52 2 309 1 198 1 187 1 273 1 200 2 237 4 211 1 251 1 12 7 313 1 142 1 151 3 174 3 144 1 316 1 
29 1 52 2 198 1 309 1 187 1 273 1 200 2 237 4 211 1 251 1 12 7 313 1 142 1 151 3 174 3 144 1 316 1 338 1 
308 3 309 1 187 4 211 1 161 1 237 16 313 2 142 2 333 3 290 2 215 3 316 1 144 4 92 1 245 1 367 1 271 1 372 1 52 3 29 2 198 1 199 4 273 5 200 5 251 2 12 31 81 1 323 1 297 1 151 15 300 1 174 10 301 3 110 1 
187 1 161 2 237 5 211 1 313 1 142 1 290 4 144 1 315 1 92 1 316 1 245 2 367 2 52 2 29 1 198 1 273 1 200 3 12 9 251 1 81 2 151 4 174 4 306 1 
111 1 331 1 140 1 310 1 286 1 190 2 115 1 72 1 362 1 334 1 8 1 364 2 267 1 291 1 166 1 95 1 270 2 30 1 169 1 126 1 149 1 226 1 134 1 152 1 60 1 277 1 107 1 136 1 280 1 206 1 
111 1 331 1 3 1 310 1 286 1 190 3 115 1 72 1 362 1 334 1 8 1 364 2 267 1 291 1 166 1 95 1 244 1 270 3 294 1 30 1 169 1 126 2 226 1 149 1 152 1 277 1 107 1 136 1 280 1 206 1 
111 1 331 1 3 1 310 1 286 1 190 2 115 1 72 1 362 1 334 1 364 2 267 1 291 1 95 1 270 2 294 1 30 1 169 1 126 2 149 1 226 1 277 1 107 1 136 1 280 1 
111 2 307 1 169 1 30 1 185 1 322 1 190 1 72 2 115 2 34 1 378 1 8 1 291 1 152 1 277 2 269 1 105 1 136 1 244 1 303 1 168 1 280 1 270 1 
111 1 331 1 3 1 140 1 310 1 286 1 190 1 115 1 72 1 334 1 8 1 364 2 291 1 166 1 95 1 270 1 30 1 169 1 149 1 226 1 152 1 60 1 277 1 136 1 280 1 206 1 
197 1 
138 2 186 2 236 1 139 1 42 2 332 1 6 2 335 1 291 2 10 2 96 1 342 1 344 1 345 1 254 3 299 1 349 1 204 1 155 2 65 1 302 2 303 1 157 2 355 1 258 1 112 1 357 1 265 1 361 1 75 1 116 1 319 1 269 1 218 2 220 1 168 2 223 4 123 1 169 2 30 2 170 1 322 1 82 1 377 6 227 2 173 5 228 2 34 1 276 1 327 1 182 2 37 5 136 1 381 1 280 1 
223 2 258 1 344 1 357 1 170 1 236 1 345 1 254 1 253 1 265 1 377 2 332 1 173 3 228 1 361 1 335 1 204 1 327 1 37 3 96 1 381 1 220 1 
258 1 357 1 138 1 236 1 265 1 332 1 361 1 335 1 96 1 220 1 223 3 344 1 170 1 345 1 253 1 254 1 82 1 377 1 173 3 204 1 327 1 37 3 182 1 381 1 
258 1 357 1 138 1 236 1 265 1 332 1 361 1 335 1 96 1 220 1 223 3 344 1 170 1 345 1 254 1 253 1 82 1 173 3 377 2 228 1 204 1 155 1 327 1 37 3 182 1 381 1 
157 2 355 1 258 1 112 1 356 1 186 2 138 4 357 1 236 1 42 2 265 1 332 1 361 1 75 1 335 1 319 1 218 1 10 2 96 1 220 1 342 1 223 6 344 1 170 1 345 1 254 3 253 1 82 5 227 1 13 1 377 7 173 5 228 4 276 1 203 1 351 1 204 1 155 4 327 1 156 1 182 5 37 5 381 1 302 2 
157 2 258 1 355 1 112 1 138 2 186 2 357 1 236 1 42 2 265 1 332 1 361 1 6 2 75 1 335 1 319 1 218 1 10 2 96 1 220 1 342 1 223 4 344 1 170 1 345 1 254 2 82 1 377 4 227 1 173 4 228 2 349 1 276 1 204 1 155 2 327 1 182 2 37 4 381 1 302 2 
157 2 258 1 355 1 112 1 138 2 186 2 357 1 236 1 42 2 265 1 332 1 361 1 335 1 75 1 319 1 218 1 10 2 96 1 220 1 342 1 223 4 344 1 170 1 345 1 254 2 82 1 377 4 227 1 173 4 13 1 228 2 276 1 204 1 203 1 155 2 327 1 182 1 156 1 37 4 381 1 302 2 
157 2 258 1 355 1 112 1 138 2 186 2 357 1 236 1 42 2 265 1 332 1 361 1 335 1 75 1 319 1 218 1 10 2 96 1 220 1 342 1 223 4 344 1 170 1 345 1 254 2 82 1 377 4 227 1 173 4 13 1 228 2 276 1 204 1 203 1 155 2 327 1 182 1 156 1 37 4 381 1 302 2 
157 2 258 1 355 1 112 1 138 2 357 1 236 1 42 2 265 1 332 1 361 1 22 2 6 2 335 1 75 1 337 2 218 1 96 1 220 1 342 1 223 4 344 1 170 1 345 1 130 1 254 2 82 1 377 4 227 1 173 4 228 2 276 1 350 1 204 1 155 2 83 1 327 1 182 1 156 1 37 4 381 1 
157 2 355 1 258 1 112 1 186 2 357 1 138 3 236 1 42 2 265 1 332 1 361 1 75 1 335 1 319 1 218 1 10 2 96 1 220 1 342 1 223 5 344 1 170 1 345 1 254 2 82 1 227 1 13 1 173 4 377 5 228 3 276 1 204 1 351 1 203 1 155 3 327 1 182 1 156 1 37 4 381 1 302 2 
157 2 355 1 258 1 112 1 186 2 357 1 138 3 236 1 42 2 265 1 332 1 361 1 75 1 335 1 319 1 218 1 10 2 96 1 220 1 342 1 223 5 344 1 170 1 345 1 254 2 82 1 227 1 13 1 173 4 377 5 228 3 276 1 204 1 351 1 203 1 155 3 327 1 182 1 156 1 37 4 381 1 302 2 
157 2 258 1 355 1 112 1 138 2 357 1 236 1 42 2 265 1 332 1 361 1 22 2 6 2 75 1 335 1 337 2 218 1 96 1 220 1 342 1 223 4 344 1 170 1 345 1 254 2 82 1 377 4 227 1 173 4 228 2 349 1 276 1 204 1 350 1 155 2 327 1 182 1 37 4 381 1 
19 1 187 1 211 1 161 1 237 3 89 1 313 1 290 2 316 1 144 1 363 1 165 1 245 1 367 1 11 1 52 1 343 1 198 1 200 2 80 1 251 1 12 6 81 1 174 2 151 3 230 2 
19 1 209 1 308 2 187 2 161 2 237 8 89 4 189 1 333 2 290 4 215 1 363 11 144 1 145 1 245 2 367 2 11 11 271 1 372 1 199 3 273 1 200 1 80 2 12 14 81 2 174 2 151 6 301 3 230 1 352 1 278 1 67 1 18 1 
19 1 209 1 184 1 161 1 237 1 89 1 335 2 290 2 291 1 96 1 97 1 245 1 168 1 367 1 272 1 30 1 169 1 373 1 249 1 102 1 171 1 322 1 80 1 345 2 172 1 12 2 81 1 34 1 151 1 229 1 201 1 230 1 278 1 136 1 67 1 280 1 39 1 305 1 
184 2 187 2 237 7 89 4 333 1 290 6 335 3 144 2 291 1 96 1 245 3 97 2 246 2 11 4 340 1 52 1 198 1 102 1 249 1 200 3 251 1 345 3 12 14 151 7 67 1 69 2 305 1 19 3 209 1 308 1 211 1 161 3 313 1 215 1 316 1 363 4 167 2 120 1 168 1 367 3 221 1 222 1 30 1 169 1 171 2 322 2 172 1 80 3 81 3 174 3 34 2 229 2 230 2 278 1 136 2 280 2 
1 1 19 2 358 1 88 1 3 1 161 2 237 1 335 1 290 4 291 8 165 1 269 1 96 1 245 2 168 2 367 2 50 1 51 1 30 8 169 7 249 1 296 1 322 2 345 1 172 1 80 2 12 2 81 2 34 3 151 1 103 2 134 1 278 1 328 1 136 2 67 1 303 1 280 2 305 1 
19 1 209 1 308 1 187 1 161 1 237 1 89 1 333 1 290 2 335 1 215 1 363 1 144 1 365 1 96 1 25 1 245 1 367 1 11 1 249 1 200 1 172 1 80 1 345 1 12 3 81 1 174 1 151 2 64 1 
19 1 273 1 187 1 161 1 237 2 89 1 12 2 80 1 81 1 333 1 174 1 290 2 363 1 165 1 245 1 367 1 11 1 49 1 
19 1 200 1 161 1 89 1 12 2 80 1 81 1 288 1 174 1 151 2 290 2 215 1 363 1 144 1 165 1 245 1 367 1 11 1 
19 1 308 1 273 1 187 1 200 1 161 1 237 2 89 2 12 4 80 1 81 1 333 1 151 2 174 2 215 1 290 2 144 1 363 2 165 1 245 1 367 1 11 2 
19 1 51 1 273 1 187 1 161 1 237 2 89 1 12 2 80 1 81 1 333 1 174 1 290 2 363 1 245 1 367 1 11 1 49 1 
19 1 51 1 200 1 161 1 89 1 12 2 80 1 81 1 288 1 174 1 151 2 290 2 215 1 363 1 144 1 245 1 367 1 11 1 
19 1 51 1 308 1 273 1 187 1 200 1 161 1 237 2 89 2 12 4 80 1 81 1 333 1 151 2 174 2 215 1 290 2 144 1 363 2 245 1 367 1 11 2 
19 1 308 1 273 1 187 1 200 1 161 1 237 2 89 2 80 1 12 4 81 1 333 1 151 2 174 2 215 1 290 2 144 1 363 2 245 1 367 1 11 2 
19 1 184 1 237 1 161 1 335 1 290 2 291 1 97 1 167 1 245 1 168 1 367 1 30 1 169 1 171 1 322 1 12 2 345 1 80 1 81 1 34 1 151 1 229 1 230 1 278 1 136 1 67 1 280 1 
19 1 158 1 237 1 161 1 43 1 335 1 290 2 291 1 97 1 245 1 168 1 367 1 30 1 169 1 322 1 12 2 345 1 80 1 81 1 34 1 151 1 175 1 229 1 230 1 278 1 136 1 67 1 280 1 
19 1 209 1 308 1 273 1 187 1 200 1 161 1 237 2 89 2 12 4 80 1 81 1 333 1 151 2 174 2 215 1 290 2 144 1 363 2 245 1 367 1 11 2 
19 1 184 1 308 1 187 1 237 2 161 1 89 2 333 1 215 1 335 1 290 2 144 1 363 2 291 1 97 1 167 1 245 1 246 1 367 1 11 2 30 1 169 1 273 1 200 1 171 1 322 1 12 4 345 1 80 1 81 1 151 2 174 2 34 1 134 1 229 1 136 1 280 1 
19 1 209 1 308 1 187 1 161 1 237 2 89 1 333 1 215 1 290 2 335 1 144 1 363 1 365 1 94 1 96 1 25 1 245 1 367 1 11 1 249 1 273 1 172 1 80 1 345 1 12 3 81 1 151 1 174 1 
308 3 187 3 161 2 237 9 359 1 333 3 21 1 290 4 215 3 216 2 23 1 144 3 24 1 46 1 194 1 245 2 367 2 271 1 372 1 199 2 273 3 200 3 12 19 81 2 14 2 151 10 174 6 133 1 301 1 306 1 
71 1 308 3 187 3 161 3 237 14 141 1 359 1 333 3 290 6 215 2 216 1 92 2 144 2 23 2 24 1 46 1 245 3 367 3 341 1 271 2 199 2 273 2 200 2 250 1 12 26 81 3 55 1 14 4 298 1 174 4 151 12 133 2 301 2 306 1 
71 1 308 4 187 5 211 1 161 3 237 20 141 1 359 1 313 1 333 4 21 1 290 6 215 4 216 1 316 1 92 1 23 2 144 5 24 1 46 1 245 3 367 3 341 1 271 3 52 1 372 1 198 1 199 4 273 4 200 4 250 1 251 1 12 41 81 3 55 1 298 1 14 4 151 21 174 8 133 1 301 3 86 1 306 1 
71 1 308 4 187 5 211 1 161 4 237 20 141 1 359 1 313 1 333 4 21 1 290 8 215 3 216 1 316 1 92 2 23 2 144 4 24 1 46 1 245 4 367 4 341 1 271 3 52 1 372 1 198 1 199 4 273 3 200 4 250 1 251 1 12 38 81 4 55 1 298 1 14 4 151 18 174 7 133 1 301 3 86 1 306 1 
71 1 308 7 187 8 211 1 161 2 237 27 141 1 359 1 313 1 333 7 290 4 215 7 216 1 316 1 92 1 23 1 144 8 24 1 46 1 245 2 367 2 341 1 271 2 52 1 372 2 198 1 199 4 273 7 200 7 250 1 251 1 12 52 81 2 55 1 298 1 14 4 151 25 174 14 133 1 301 4 18 2 306 1 
122 1 281 1 146 1 176 1 91 1 2 1 100 1 131 1 247 1 26 1 
212 1 330 1 
122 1 281 1 176 1 91 1 2 1 292 1 326 1 131 1 56 1 
225 1 180 1 
70 1 77 1 47 1 
281 1 122 1 137 1 369 1 2 1 100 1 131 1 252 1 173 1 91 1 176 1 62 2 85 1 15 1 182 1 37 1 247 1 26 1 
281 1 122 1 137 1 369 1 2 1 100 1 131 1 252 1 173 1 91 1 176 1 62 2 85 1 15 1 182 1 37 1 247 1 26 1 
281 1 122 1 137 1 369 1 2 1 100 1 131 1 252 1 173 1 91 1 176 1 62 2 85 1 15 1 182 1 37 1 247 1 26 1 
70 1 225 1 180 1 
70 1 225 1 180 1 
77 1 47 1 
70 1 77 1 47 1 
181 1 109 1 
281 1 2 1 284 1 212 1 335 2 91 1 96 2 78 1 368 1 122 1 369 1 249 2 127 1 345 2 131 1 172 2 173 1 275 1 176 1 85 1 62 1 230 1 63 1 181 1 37 1 109 1 330 1 
19 1 209 1 283 1 358 1 161 1 237 1 191 1 335 2 290 2 291 2 9 1 96 2 245 1 367 1 224 1 30 2 169 2 322 1 80 1 345 2 12 2 81 1 34 1 151 1 103 2 154 1 278 1 328 1 136 1 67 1 280 1 
331 1 169 2 30 2 3 1 226 1 149 1 310 1 41 1 90 1 334 1 364 2 291 2 134 1 277 1 166 1 36 1 95 1 136 1 280 1 
331 1 169 1 30 1 3 1 226 1 149 1 310 1 90 1 334 1 364 2 291 1 277 1 166 1 135 1 95 1 136 1 280 1 
169 1 30 1 322 1 41 1 34 1 378 1 291 1 277 1 269 1 380 1 136 1 168 1 303 1 280 1 
331 1 169 1 30 1 3 1 226 1 149 1 310 1 41 1 90 1 334 1 364 2 291 1 277 1 166 1 36 1 95 1 136 1 280 1 
256 1 
336 1 99 1 343 1 218 1 182 1 82 1 227 1 
355 1 186 1 75 1 6 1 319 1 218 1 10 1 342 1 254 1 82 1 227 1 377 1 173 1 276 1 182 2 37 1 302 1 
186 6 235 1 187 2 143 2 333 2 336 1 6 12 242 1 144 2 291 3 342 4 99 1 53 2 54 2 254 3 153 2 353 1 66 6 304 2 355 4 308 2 20 2 266 2 75 4 215 2 116 2 317 1 318 2 218 8 168 1 221 2 123 1 169 3 30 3 31 2 321 3 322 3 82 2 227 9 377 5 173 5 32 1 33 6 34 10 35 1 134 1 276 4 229 3 37 5 182 8 136 3 381 2 232 2 280 4 
355 2 71 1 308 2 186 3 187 2 263 1 141 1 333 2 6 6 75 2 215 2 116 1 144 2 218 5 341 1 98 1 271 1 342 2 123 1 53 2 199 1 250 1 254 1 82 2 173 1 377 1 227 8 33 5 298 1 301 1 276 2 37 1 182 5 66 5 232 1 
355 1 187 2 313 1 312 1 332 1 335 1 75 1 316 1 144 1 365 1 218 2 96 1 48 1 342 1 27 1 53 2 249 1 345 1 251 1 172 1 13 1 173 1 227 2 59 1 276 1 37 1 232 1 233 1 
342 1 355 1 99 1 82 1 227 1 75 1 336 1 276 1 218 1 182 1 
308 2 186 5 53 2 187 2 227 5 33 5 333 2 6 10 215 2 144 2 218 5 182 5 66 5 232 1 221 1 
182 1 37 1 254 1 82 1 173 1 377 1 
355 2 235 2 139 1 5 1 75 1 242 1 116 2 291 4 269 1 218 2 168 2 342 2 371 1 30 4 169 4 123 2 128 1 322 1 254 2 227 2 377 4 173 3 34 1 276 2 37 3 65 1 136 1 303 1 280 1 
19 1 184 1 161 1 74 1 290 2 335 3 291 1 365 2 96 2 245 1 167 1 97 1 367 1 168 1 48 1 30 1 169 1 249 2 171 1 322 1 12 1 345 3 172 2 80 1 81 1 151 1 34 1 229 1 230 1 278 1 136 1 280 1 
342 1 355 1 52 1 123 1 186 2 82 2 227 1 33 2 6 4 75 1 116 1 276 1 218 2 182 4 66 2 
122 1 2 1 243 1 
122 1 2 1 243 1 
195 1 122 1 2 1 181 1 247 1 
122 1 2 1 243 1 
28 1 122 1 2 1 
28 1 122 1 2 1 
28 1 122 1 2 1 
122 1 2 1 
176 1 91 1 
52 1 198 1 187 1 273 1 200 2 237 4 161 2 211 1 12 8 251 1 81 2 313 1 151 4 174 3 290 4 144 1 316 1 92 1 245 2 367 2 
52 1 343 1 198 1 187 1 200 2 211 1 237 3 251 1 12 6 313 1 151 3 174 2 316 1 144 1 
196 1 308 1 187 1 273 1 200 1 161 1 237 2 12 4 81 1 333 1 151 2 174 2 215 1 290 2 144 1 245 1 367 1 
271 1 372 1 308 1 199 2 187 1 273 1 200 1 237 3 12 7 333 1 151 4 174 2 215 1 301 1 144 1 
282 1 308 2 187 3 211 1 237 11 161 2 313 2 189 1 333 2 215 2 290 4 316 1 144 3 92 2 245 2 367 2 52 1 372 1 198 1 199 2 273 4 200 5 251 2 12 23 81 2 174 9 151 12 301 2 18 1 
151 1 199 1 12 1 
301 1 237 1 12 1 
196 1 308 1 187 1 273 1 200 2 161 1 237 3 12 6 81 1 333 1 151 3 174 3 290 2 215 1 144 1 245 1 367 1 221 1 
71 1 308 2 187 2 161 1 237 6 141 1 333 2 290 2 215 2 144 2 245 1 367 1 341 1 271 1 199 1 273 1 200 1 250 1 12 12 81 1 298 1 151 6 174 2 301 1 306 1 
187 1 273 1 200 1 237 3 12 6 251 1 313 1 151 3 174 2 316 1 144 1 
282 1 198 1 273 1 200 1 237 1 161 1 211 1 251 1 12 3 81 1 313 1 174 2 151 2 290 2 92 1 245 1 367 1 
273 2 187 2 200 3 161 1 237 5 251 2 12 10 81 1 313 2 174 5 151 5 290 2 316 1 144 2 245 1 367 1 306 1 233 1 
187 1 273 1 161 1 237 2 12 2 81 1 333 1 174 1 290 2 245 1 367 1 306 1 
308 1 187 1 273 1 200 1 161 1 237 2 12 4 81 1 333 1 151 2 174 2 215 1 290 2 144 1 245 1 367 1 306 1 
282 1 273 1 200 1 161 3 237 1 12 3 251 1 81 3 313 1 21 1 151 2 174 2 290 6 92 1 245 3 367 3 306 1 
282 1 308 3 187 5 211 1 161 5 237 16 313 3 333 3 21 1 290 10 215 3 316 2 92 2 144 5 245 5 367 5 271 1 196 1 52 1 372 1 198 1 199 4 273 5 200 7 251 3 12 34 81 5 297 1 151 18 300 1 174 12 301 3 110 1 306 1 
187 1 161 1 237 4 211 1 313 1 290 2 144 1 316 1 245 1 367 1 341 1 271 1 52 1 198 1 199 1 200 2 12 8 251 1 81 1 151 4 174 2 301 1 306 1 
308 1 187 2 211 1 161 2 237 6 313 1 333 1 290 4 144 1 316 1 245 2 367 2 341 1 271 1 196 1 52 1 372 1 198 1 199 2 273 1 200 2 251 1 12 11 81 2 151 5 174 3 301 1 306 1 
71 1 308 2 187 3 211 1 161 3 237 9 141 1 313 1 333 2 290 6 215 2 316 1 144 3 92 1 245 3 367 3 341 1 271 1 196 1 52 1 198 1 199 1 273 1 200 3 250 1 251 1 12 19 81 3 298 1 151 10 174 4 301 1 306 1 
71 1 308 2 187 3 211 1 161 3 237 10 141 1 313 1 333 2 290 6 215 1 316 1 92 1 144 2 245 3 367 3 341 1 271 1 196 1 52 1 198 1 199 1 273 2 200 3 250 1 251 1 12 17 81 3 298 1 151 7 174 5 301 1 306 1 
187 1 161 1 237 4 211 1 313 1 290 2 144 1 316 1 245 1 367 1 341 1 271 1 52 1 198 1 199 1 200 2 12 8 251 1 81 1 151 4 174 2 301 1 306 1 
71 1 308 2 187 2 161 1 237 6 141 1 333 2 290 2 215 2 144 2 245 1 367 1 341 1 271 1 199 1 273 1 200 1 250 1 12 12 81 1 298 1 151 6 174 2 301 1 306 1 
71 1 308 2 187 3 211 1 161 4 237 10 141 1 313 1 333 2 290 8 215 1 316 1 144 2 92 2 245 4 367 4 341 1 271 1 196 1 52 1 198 1 199 1 273 2 200 3 250 1 251 1 12 18 81 4 298 1 151 8 174 5 301 1 306 1 
71 1 308 3 187 3 161 4 237 9 141 1 333 3 21 1 290 8 215 2 144 2 92 2 245 4 367 4 341 1 271 1 199 1 273 3 200 3 250 1 12 16 81 4 298 1 151 7 174 6 301 1 306 1 
198 2 273 3 187 1 200 3 211 1 237 3 12 7 251 3 313 3 151 4 174 6 144 1 316 1 
71 1 308 2 187 3 211 1 161 4 237 10 141 1 313 1 333 2 21 1 290 8 215 1 316 1 144 2 92 2 245 4 367 4 341 1 271 1 52 1 198 1 199 1 273 1 200 3 250 1 251 1 12 18 81 4 298 1 151 8 174 4 301 1 306 1 
335 1 230 1 118 1 345 1 96 1 265 1 58 1 
207 1 210 1 124 1 159 1 345 1 265 1 255 1 58 1 335 1 230 1 118 1 96 1 
34 1 343 1 291 1 30 1 169 1 269 1 322 1 136 1 303 1 168 1 280 1 
169 1 30 1 249 1 171 1 322 1 172 1 345 2 34 1 335 2 291 1 229 1 230 1 96 1 97 1 136 1 168 1 280 1 305 1 
357 1 235 1 332 1 266 1 335 2 291 1 96 2 97 1 30 1 169 1 344 1 31 1 249 2 171 1 322 2 345 2 172 1 34 3 229 2 230 1 136 1 280 1 305 1 
357 1 235 1 332 1 266 1 335 2 291 2 119 1 96 2 97 1 30 2 169 2 344 1 31 1 249 2 322 2 345 2 172 1 34 3 175 1 229 2 230 1 136 1 280 1 305 1 
31 1 169 3 30 3 321 1 235 1 322 1 82 1 173 2 377 1 266 1 34 4 291 3 229 1 318 1 268 1 193 1 182 1 37 2 119 1 381 1 136 1 168 1 280 1 
31 1 169 3 30 3 321 1 235 1 322 1 82 1 173 2 377 1 266 1 34 4 291 3 229 1 318 1 182 1 37 2 119 1 381 1 136 1 168 1 304 1 280 1 
291 1 30 1 169 1 88 1 136 1 280 1 
1 1 183 1 169 6 30 7 358 1 88 1 3 1 296 1 322 2 32 1 103 1 34 3 214 1 134 1 291 7 229 1 231 1 136 2 168 2 50 1 280 3 
19 2 209 1 184 1 187 1 237 3 211 1 161 2 89 1 313 1 191 1 335 2 290 4 363 1 144 1 316 1 291 1 96 1 97 1 245 2 167 1 367 2 246 1 11 1 52 1 169 1 30 1 198 1 249 1 200 2 171 1 322 1 12 6 251 1 80 2 345 2 172 1 81 2 151 3 174 2 34 1 134 1 229 1 230 2 136 1 280 1 69 1 305 1 
355 2 20 1 143 1 336 1 75 2 242 1 291 1 318 1 218 1 168 1 342 2 99 1 30 1 169 1 321 1 254 1 82 1 227 1 173 3 377 2 275 1 34 2 276 2 153 1 182 1 37 3 381 1 304 1 
169 2 30 2 88 1 322 1 32 1 34 2 134 1 291 2 318 1 229 1 353 1 136 1 280 2 
34 1 134 1 291 4 30 4 169 4 269 1 40 1 322 1 119 1 136 1 303 1 168 1 280 1 
354 1 169 2 30 2 235 1 322 1 238 1 34 1 214 1 291 2 229 1 164 1 231 1 136 1 280 2 
334 1 364 1 291 1 30 1 169 1 310 1 95 1 136 1 168 1 280 1 
169 2 30 2 224 1 358 1 3 1 322 1 34 1 134 1 291 2 136 1 280 1 
1 1 169 4 30 5 235 1 358 1 40 1 296 1 322 2 34 3 291 5 134 1 269 1 136 2 303 1 168 1 280 2 
169 4 30 5 235 1 358 1 40 1 296 1 322 2 34 3 241 1 291 5 134 1 269 1 136 2 303 1 168 1 280 2 
169 1 30 1 249 1 322 1 172 1 345 2 34 1 335 2 175 1 291 1 229 1 230 1 96 1 97 1 136 1 168 1 280 1 305 1 
183 1 169 1 30 1 235 1 322 1 32 1 34 1 214 1 291 1 229 1 231 1 136 1 280 2 
240 1 295 1 325 1 230 1 16 1 
312 1 332 1 335 1 45 1 365 1 293 1 96 1 48 1 27 1 249 1 172 1 345 1 82 1 173 1 275 1 325 1 59 1 61 1 182 1 37 1 
335 1 240 1 325 1 295 1 283 1 9 1 154 1 345 1 96 1 
325 1 45 1 61 1 
362 1 267 1 343 1 107 1 
362 1 8 1 267 1 152 1 107 1 190 1 270 1 
111 1 115 1 270 1 
140 1 324 1 190 3 362 1 8 1 267 1 152 1 107 1 366 2 68 1 121 1 270 3 
362 1 8 1 267 1 152 1 126 1 107 1 287 1 190 2 270 2 
331 1 140 1 376 1 285 1 190 1 334 1 8 1 364 1 152 1 107 1 270 1 
362 1 8 1 152 1 107 1 140 1 190 1 270 1 
362 2 8 1 267 1 152 1 140 1 190 1 270 1 
140 1 274 1 190 2 132 1 362 1 104 1 8 2 152 2 107 1 270 2 
260 1 126 2 140 1 285 1 190 3 362 1 8 1 267 1 152 1 178 1 107 2 17 1 270 3 
331 1 126 1 140 1 226 1 310 1 190 2 362 1 334 1 364 2 8 1 267 1 152 1 107 1 108 1 270 2 
126 2 140 1 287 1 285 1 190 4 362 1 8 2 76 1 267 1 152 2 178 1 107 2 270 4 
362 1 8 1 267 1 152 1 107 1 140 1 190 1 270 1 
126 2 324 1 285 1 190 4 362 2 8 1 267 2 152 1 178 1 107 3 366 1 279 1 121 1 270 4 
126 1 262 1 140 1 129 1 190 2 362 1 347 1 8 1 267 1 152 1 107 1 270 2 
234 1 140 1 324 2 190 3 362 1 8 1 267 1 152 1 107 1 366 2 121 1 270 3 
93 1 348 1 107 2 360 2 
8 1 152 1 219 1 140 1 190 1 270 1 
362 1 8 1 267 1 260 1 152 1 126 1 107 1 140 1 190 2 270 2 
205 1 
362 1 8 1 267 1 152 1 107 1 140 1 190 1 270 1 
362 1 8 1 267 1 260 1 152 1 126 1 107 1 140 1 366 1 190 3 270 3 
107 1 178 1 279 1 285 1 
362 1 107 1 

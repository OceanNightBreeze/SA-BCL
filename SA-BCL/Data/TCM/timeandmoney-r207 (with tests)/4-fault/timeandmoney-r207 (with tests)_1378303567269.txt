#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (259,359) (259,359) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (44,113,314) (49,201,329) (49,201,329) (49,201,329) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (44,113,314) (49,201,329) (49,201,329) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (44,113,314) (49,201,329) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (44,113,314) (49,201,329) (49,201,329) (49,201,329) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 56 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (44,113,314) (44,113,314) (44,113,314) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (44,113,314) (44,113,314) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (44,113,314) (44,113,314) (44,113,314) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 353 2 330 3 307 1 48 2 94 1 333 1 142 1 172 1 147 1 121 2 249 2 32 1 197 1 225 2 276 1 129 5 82 9 112 2 295 1 17 1 63 2 204 1 181 4 347 1 348 1 302 6 209 9 
165 1 353 2 330 3 307 1 48 2 94 1 333 1 142 1 172 1 147 1 121 2 249 2 32 1 197 1 225 2 276 1 129 5 82 9 112 2 295 1 17 1 63 2 204 1 181 4 347 1 348 1 302 6 209 9 
165 1 353 2 330 4 307 1 48 2 94 1 333 1 142 1 172 1 147 1 121 2 249 2 32 1 197 1 225 2 276 1 129 6 82 10 112 2 295 1 17 1 63 2 204 1 181 5 347 1 348 1 302 7 209 10 
165 1 353 2 330 2 307 1 48 1 94 1 333 1 142 1 172 1 147 1 121 2 249 2 32 1 197 1 225 2 276 1 129 4 82 7 112 2 295 1 17 1 63 2 204 1 181 3 348 1 302 4 209 7 
353 1 165 1 129 3 330 1 82 4 112 1 307 1 48 2 63 1 333 1 172 1 121 1 181 2 249 1 347 1 197 1 302 3 209 4 
225 1 165 1 259 1 41 1 82 1 112 1 359 1 17 1 63 1 209 1 
225 1 165 1 129 2 330 1 82 3 112 2 295 1 63 2 333 1 172 1 181 1 302 1 209 3 
225 1 353 1 165 1 129 5 330 3 82 9 307 1 112 2 295 1 48 2 84 1 63 2 333 1 142 1 172 1 121 1 181 4 249 1 290 1 347 1 348 1 197 1 302 7 209 9 
225 1 353 1 165 1 129 5 330 3 82 9 307 1 112 2 295 1 48 2 84 1 63 2 333 1 142 1 172 1 121 1 181 4 249 1 290 1 347 1 348 1 197 1 302 7 209 9 
321 1 12 1 37 1 
211 2 88 1 12 1 
281 2 53 2 219 1 22 2 324 1 370 2 261 2 150 2 
0 1 281 2 164 2 352 1 71 1 117 1 47 1 194 1 28 1 217 1 53 2 286 1 219 1 76 1 220 1 195 1 289 1 338 2 126 1 312 1 150 2 251 1 57 1 33 1 177 1 60 2 368 1 322 2 21 1 22 3 324 1 370 3 261 2 346 1 66 2 327 1 304 1 
281 1 53 1 219 1 22 1 370 1 83 1 261 1 296 1 150 1 335 1 
315 1 281 1 83 1 317 1 216 1 309 1 321 1 74 1 134 1 22 1 370 1 311 1 10 1 12 1 
281 1 83 1 317 1 216 1 309 1 321 1 74 2 134 2 53 1 22 1 370 1 261 1 10 1 12 1 150 1 
74 1 275 1 134 1 100 1 241 1 
321 1 74 2 275 1 134 2 241 1 12 1 185 1 235 1 
74 1 134 1 241 1 
275 1 281 1 83 1 296 1 335 1 74 1 134 1 53 1 231 1 219 1 22 1 370 1 261 1 150 1 
12 1 
321 1 74 2 275 1 134 2 70 1 241 1 12 1 185 1 
281 1 137 1 68 1 91 1 241 2 242 1 73 2 192 1 266 2 267 2 335 1 97 2 74 5 53 1 219 1 248 1 222 1 105 1 150 1 12 2 151 5 275 2 341 2 83 1 296 1 202 2 321 2 134 5 231 1 205 1 22 1 370 1 42 1 43 4 372 1 261 1 187 1 185 1 
324 1 37 1 
53 1 281 2 22 2 324 2 363 1 370 2 261 1 150 1 11 1 
283 1 92 1 118 1 
251 1 0 1 57 1 33 1 352 1 60 1 217 1 322 1 357 1 286 1 22 1 220 1 324 1 370 1 66 1 126 1 
251 1 0 1 283 1 33 1 281 1 57 1 352 1 60 1 217 1 322 1 286 1 220 1 287 1 148 1 22 2 370 2 261 1 66 1 126 1 150 1 
315 1 281 5 226 1 363 1 299 1 53 1 148 2 22 5 287 1 370 5 324 1 261 4 45 1 150 4 
281 2 22 2 370 2 4 1 83 1 261 2 296 1 150 2 
53 1 281 3 148 1 22 3 324 1 370 3 261 3 150 3 
281 1 22 1 370 1 83 1 261 1 296 1 150 1 
281 1 53 1 22 1 370 1 363 1 83 1 261 1 11 1 150 1 
0 1 281 3 164 2 352 1 71 1 117 1 194 1 216 1 309 1 217 1 74 1 53 2 286 1 219 1 76 1 220 1 148 1 287 1 195 1 289 1 338 1 10 1 126 1 150 3 251 1 33 1 57 1 363 1 83 1 177 1 317 1 60 1 322 1 87 1 134 1 21 1 22 4 324 1 370 4 261 3 346 1 66 1 327 1 328 1 
315 1 281 2 22 2 148 1 324 1 226 1 370 2 261 1 150 1 
281 3 363 1 83 1 317 1 298 1 309 1 216 1 74 1 53 1 134 1 287 1 148 2 22 3 370 3 261 3 10 1 12 1 150 3 328 1 
281 2 283 1 363 1 118 1 53 1 148 1 22 2 370 2 261 2 150 2 
0 1 251 1 57 1 33 1 352 1 60 1 217 1 322 1 286 1 22 1 220 1 324 1 370 1 66 1 126 1 
251 1 57 1 33 1 352 1 167 1 60 1 258 1 217 1 322 1 286 1 22 1 324 1 370 1 66 1 126 1 
283 2 164 2 190 1 71 1 331 1 117 1 92 2 194 2 118 2 266 1 97 1 146 1 336 1 195 1 9 1 338 4 199 1 153 1 109 1 177 1 343 1 346 1 327 1 304 2 
281 1 22 1 370 1 83 1 261 1 4 1 317 1 150 1 
218 1 135 1 
218 1 135 1 
99 1 15 1 
99 1 15 1 
99 1 15 1 
218 1 135 1 229 1 
218 1 135 1 229 1 
218 1 135 1 36 1 
218 2 99 1 15 1 135 2 131 1 374 1 
218 1 135 1 229 1 
218 1 252 1 135 1 
218 1 252 1 135 1 
218 1 252 1 135 1 
281 2 238 1 3 1 218 1 74 1 144 1 268 1 8 1 150 2 198 1 277 1 158 1 257 1 36 1 344 1 162 1 134 1 135 1 22 2 324 1 370 2 261 2 260 1 326 1 
136 1 253 1 156 2 344 2 215 1 218 2 74 2 162 2 134 2 268 3 135 2 77 1 260 1 374 1 12 1 326 2 127 1 292 1 198 2 
121 1 353 1 249 1 
41 1 
41 1 
41 1 
41 1 
211 3 237 1 138 2 91 1 190 1 331 1 241 1 73 1 7 1 266 1 267 1 97 1 74 5 246 1 8 1 313 1 12 2 106 1 107 2 151 2 275 4 277 1 257 1 202 1 367 1 321 1 134 5 88 1 43 3 233 2 325 1 185 1 
211 9 188 1 138 6 91 1 190 3 331 3 241 6 73 2 266 3 170 1 267 2 97 3 74 9 100 5 246 2 248 1 30 1 313 3 274 1 12 5 107 6 151 6 275 7 277 4 202 2 365 1 367 2 321 1 134 9 88 3 43 8 25 5 325 1 67 1 185 1 
237 1 211 4 138 2 190 1 331 1 73 1 266 1 267 1 74 3 97 1 246 1 248 1 12 3 313 1 106 1 151 2 107 2 275 2 277 1 202 1 367 1 321 1 134 3 88 2 43 3 233 1 
211 7 237 1 188 1 138 4 190 2 331 2 73 1 266 2 267 1 74 4 97 2 246 1 248 1 30 1 12 4 313 2 106 1 107 4 151 4 275 3 277 2 202 1 365 1 367 1 321 1 134 4 88 3 43 5 233 2 
251 1 65 1 37 1 
251 1 265 1 
376 1 
251 1 286 1 126 1 
251 1 254 1 
251 1 286 1 
251 3 120 1 65 2 286 1 221 1 126 1 
137 1 59 1 189 1 364 2 132 1 194 3 266 1 320 1 97 1 9 2 222 1 338 7 207 1 224 1 187 1 304 4 199 3 
137 1 59 1 189 1 364 2 132 1 194 3 266 1 320 1 97 1 9 2 222 1 338 7 207 1 224 1 187 1 304 4 199 3 
137 1 59 1 189 1 364 2 132 1 194 3 266 1 320 1 97 1 9 2 222 1 163 1 338 7 207 1 224 1 187 1 304 4 199 3 
137 2 164 2 189 2 71 1 331 3 190 3 192 1 140 1 194 18 50 4 266 6 334 1 97 6 123 1 9 8 195 1 271 1 104 1 222 5 338 37 224 1 313 3 199 17 59 2 364 2 132 1 203 3 318 1 320 9 159 1 207 1 346 1 327 1 187 5 304 19 
137 1 164 4 59 1 189 1 71 2 364 2 132 1 194 4 266 1 320 1 97 1 300 1 123 1 40 1 9 3 195 2 222 1 338 9 346 2 224 1 327 2 187 1 304 5 199 4 
33 1 79 1 352 1 225 1 175 1 165 1 82 1 201 1 112 1 60 1 49 1 63 1 356 1 322 1 323 1 41 1 371 1 44 1 66 1 329 1 209 1 210 1 
33 1 79 1 352 1 225 1 175 1 82 2 201 1 112 1 60 1 62 1 63 1 356 1 322 1 323 1 102 1 41 1 371 1 44 1 66 1 302 1 349 1 329 1 209 2 
33 1 79 1 352 1 225 1 82 1 201 1 60 1 62 1 356 1 322 1 323 1 41 1 371 1 44 1 66 1 302 1 349 1 209 1 
352 1 171 1 356 2 141 1 75 1 102 1 286 1 291 1 251 1 57 1 79 2 33 1 225 2 130 1 82 1 112 1 60 1 63 1 322 1 323 2 66 1 236 1 209 1 
33 1 79 1 352 1 225 1 175 1 165 1 82 1 201 1 112 1 60 1 49 1 63 1 356 1 322 1 323 1 41 1 371 1 44 1 66 1 349 1 329 1 209 1 
85 1 
281 1 91 1 139 2 241 6 46 1 6 1 286 1 288 1 149 2 10 1 12 2 151 2 251 1 57 2 155 1 342 1 60 2 202 1 61 2 22 1 66 2 115 2 305 2 211 2 351 1 352 1 168 1 306 4 73 1 267 1 216 1 309 1 74 5 269 1 125 1 311 1 33 1 315 1 130 1 83 1 317 1 133 2 367 1 230 2 321 1 322 2 134 5 369 1 88 2 370 1 43 2 183 1 185 3 375 1 236 1 
305 1 351 1 315 1 281 1 70 1 342 1 306 2 168 1 241 2 83 1 317 1 309 1 216 1 74 3 134 3 22 1 288 1 370 1 311 1 10 1 185 1 375 1 
351 1 315 1 281 1 70 1 342 1 306 3 168 1 241 1 83 1 317 1 133 1 309 1 216 1 321 1 74 3 134 3 22 1 288 1 370 1 311 1 10 1 12 1 185 1 375 1 
351 1 305 1 281 1 70 1 168 1 306 3 241 2 216 1 309 1 74 3 288 1 149 1 10 1 311 1 12 1 315 1 342 1 83 1 317 1 133 1 321 1 134 3 22 1 370 1 185 1 375 1 
281 1 91 1 139 2 241 7 247 1 288 1 149 4 337 1 10 1 12 5 151 1 340 1 342 1 202 1 61 2 22 1 115 2 305 4 351 1 70 1 306 6 168 1 73 1 309 1 216 1 267 1 74 5 269 1 125 1 311 1 315 1 360 1 83 1 317 1 178 1 133 4 230 2 321 5 134 5 88 2 370 1 43 1 185 3 375 1 
281 1 91 1 139 2 241 4 6 1 288 1 149 2 10 1 12 2 151 1 342 1 202 1 61 2 22 1 115 2 351 1 211 2 305 2 306 4 168 1 73 1 309 1 216 1 267 1 74 4 269 1 125 1 311 1 315 1 83 1 317 1 133 2 230 2 321 1 134 4 88 2 370 1 43 1 375 1 185 2 
305 2 351 1 281 1 91 1 139 2 168 1 306 4 241 4 73 1 216 1 309 1 267 1 74 4 269 1 247 1 288 1 149 2 125 1 10 1 311 1 12 1 151 1 315 1 360 1 342 1 83 1 317 1 202 1 61 2 178 1 133 2 230 2 321 1 134 4 88 2 22 1 370 1 43 1 185 2 375 1 115 2 
305 2 351 1 281 1 91 1 139 2 168 1 306 4 241 4 73 1 216 1 309 1 267 1 74 4 269 1 247 1 288 1 149 2 125 1 10 1 311 1 12 1 151 1 315 1 360 1 342 1 83 1 317 1 202 1 61 2 178 1 133 2 230 2 321 1 134 4 88 2 22 1 370 1 43 1 185 2 375 1 115 2 
56 1 351 1 315 1 281 1 342 1 306 2 168 1 83 1 317 1 309 1 216 1 74 2 134 2 22 1 288 1 370 1 311 1 10 1 375 1 
351 1 305 3 281 1 91 1 139 2 168 1 306 5 241 5 73 1 267 1 216 1 309 1 74 4 269 1 247 1 288 1 125 1 149 3 10 1 311 1 12 1 151 1 315 1 340 1 360 1 342 1 83 1 317 1 202 1 61 2 178 1 133 3 230 2 321 1 134 4 88 2 22 1 370 1 43 1 185 2 375 1 115 2 
351 1 305 3 281 1 91 1 139 2 168 1 306 5 241 5 73 1 267 1 216 1 309 1 74 4 269 1 247 1 288 1 125 1 149 3 10 1 311 1 12 1 151 1 315 1 340 1 360 1 342 1 83 1 317 1 202 1 61 2 178 1 133 3 230 2 321 1 134 4 88 2 22 1 370 1 43 1 185 2 375 1 115 2 
281 1 91 1 241 4 6 1 288 1 149 2 10 1 12 1 151 1 342 1 202 1 61 2 22 1 115 2 351 1 211 2 305 2 306 4 168 1 73 1 309 1 216 1 267 1 310 2 74 4 29 1 125 1 311 1 315 1 34 2 83 1 317 1 133 2 321 1 134 4 370 1 43 1 375 1 185 2 
283 1 164 2 137 1 71 1 117 1 92 1 118 1 194 3 266 1 97 1 336 1 195 1 9 2 222 1 338 6 224 1 199 2 364 1 177 1 132 1 37 1 324 2 346 1 327 1 187 1 304 3 
283 11 164 4 2 1 71 2 331 2 190 1 117 1 92 11 194 6 50 3 118 4 266 1 334 1 143 1 97 2 76 1 9 1 195 2 271 1 338 14 313 2 199 2 108 1 80 1 177 2 203 3 368 1 320 1 279 1 324 1 346 2 327 2 304 8 
0 1 281 1 352 1 164 2 69 1 71 1 117 1 118 1 194 1 217 1 143 1 357 1 286 1 103 1 220 1 148 1 287 1 76 1 195 1 338 2 126 1 150 1 251 1 33 1 57 1 60 1 177 1 368 1 322 1 22 2 324 1 206 1 370 2 261 1 66 1 346 1 327 1 304 1 
0 2 281 1 283 7 137 1 331 2 190 2 92 7 194 10 95 2 143 1 97 3 243 1 286 2 287 1 148 1 9 4 195 3 289 2 338 20 150 1 199 8 251 2 57 1 60 3 22 3 261 1 66 3 346 3 349 1 304 10 164 6 352 2 71 3 117 3 118 7 266 3 217 2 124 1 76 1 220 2 222 1 126 2 224 1 313 2 128 2 33 2 362 1 176 2 364 1 177 3 132 1 368 1 320 4 322 3 324 2 370 3 327 3 187 1 186 2 
27 1 281 1 352 2 164 4 71 2 117 2 194 1 169 1 173 1 336 1 286 2 148 1 76 1 195 2 338 2 150 1 312 2 251 3 154 1 33 2 57 2 130 1 255 1 60 8 177 2 368 1 322 7 180 1 22 1 370 1 261 1 66 8 346 2 327 2 349 1 280 1 304 1 236 1 210 1 
283 1 281 1 164 2 71 1 331 1 190 1 92 1 117 1 118 1 194 2 266 1 143 1 97 1 53 1 9 1 195 1 338 3 150 1 313 1 199 1 363 1 157 1 177 1 22 1 370 1 261 1 346 1 327 1 304 1 
283 1 164 2 109 1 71 1 331 1 92 1 117 1 177 1 118 1 320 1 97 1 336 1 195 1 338 2 346 1 327 1 304 2 199 1 
283 1 164 2 71 1 190 1 92 1 117 1 177 1 118 1 194 2 266 1 146 1 336 1 9 1 195 1 338 2 346 1 327 1 199 1 
283 2 164 2 331 1 71 1 190 1 117 1 92 2 118 2 194 2 266 1 97 1 336 1 195 1 9 1 338 4 313 1 199 2 177 1 320 1 346 1 327 1 304 2 
283 1 164 2 109 1 71 1 331 1 92 1 117 1 177 1 118 1 169 1 320 1 97 1 195 1 338 2 346 1 327 1 304 2 199 1 
283 1 164 2 71 1 190 1 92 1 117 1 177 1 118 1 194 2 169 1 266 1 146 1 9 1 195 1 338 2 346 1 327 1 199 1 
283 2 164 2 331 1 71 1 190 1 117 1 92 2 118 2 194 2 169 1 266 1 97 1 195 1 9 1 338 4 313 1 199 2 177 1 320 1 346 1 327 1 304 2 
283 2 164 2 331 1 71 1 190 1 117 1 92 2 118 2 194 2 266 1 97 1 195 1 9 1 338 4 313 1 199 2 177 1 320 1 346 1 327 1 304 2 
0 1 352 1 164 2 71 1 117 1 194 1 217 1 286 1 220 1 76 1 195 1 289 1 338 2 126 1 251 1 33 1 57 1 60 1 177 1 368 1 322 1 22 1 324 1 370 1 66 1 346 1 327 1 304 1 
352 1 164 2 167 1 71 1 117 1 194 1 217 1 286 1 76 1 195 1 338 2 126 1 251 1 33 1 57 1 60 1 177 1 258 1 368 1 19 1 322 1 22 1 324 1 370 1 66 1 346 1 327 1 304 1 
283 2 164 2 331 1 71 1 190 1 117 1 92 2 118 2 194 2 266 1 97 1 143 1 195 1 9 1 338 4 313 1 199 2 177 1 320 1 346 1 327 1 304 2 
0 1 283 2 352 1 164 2 190 1 331 1 71 1 92 2 117 1 194 2 118 2 266 1 217 1 97 1 286 1 220 1 9 1 195 1 289 1 338 4 126 1 313 1 128 1 199 2 251 1 33 1 60 1 177 1 320 1 322 1 22 1 370 1 66 1 346 1 327 1 304 2 210 1 
281 1 283 1 164 2 190 1 71 1 331 1 117 1 92 1 194 1 118 1 266 1 143 1 97 1 53 1 119 1 195 1 338 3 150 1 313 1 199 1 363 1 177 1 320 1 22 1 370 1 261 1 346 1 327 1 304 2 
137 1 190 4 331 4 93 1 194 21 50 4 193 1 334 1 97 5 51 1 98 1 195 3 9 4 55 2 338 41 199 8 294 1 203 3 20 1 301 4 346 3 208 1 304 20 350 1 164 6 262 1 263 1 71 3 266 5 123 1 271 3 222 1 313 4 224 1 78 1 81 1 364 1 132 1 366 1 320 4 40 1 327 3 187 1 
350 1 262 1 137 1 164 8 263 1 71 4 331 4 190 3 93 1 193 1 50 4 194 18 266 4 334 1 98 1 51 1 97 5 123 2 9 4 195 4 271 3 222 1 55 2 338 38 224 1 313 4 199 7 78 1 294 1 81 1 364 1 132 1 203 3 366 1 320 3 20 1 301 4 40 1 208 1 346 4 327 4 187 1 304 20 
262 1 137 1 164 4 263 1 2 2 71 2 331 7 190 7 93 1 50 4 194 25 266 8 334 2 98 1 51 1 97 8 123 1 9 7 195 2 271 2 222 1 55 1 338 52 224 1 313 7 199 14 78 1 294 1 81 1 364 1 132 1 203 4 366 1 320 7 20 1 301 4 40 1 208 1 346 2 327 2 187 1 304 27 
350 1 262 2 164 4 71 2 331 3 190 3 93 1 50 2 194 10 266 3 334 1 97 3 9 3 195 2 271 1 55 1 273 1 338 19 313 3 199 6 294 1 81 1 203 1 320 3 301 2 40 1 208 1 346 2 327 2 304 9 
262 1 164 6 263 1 71 3 331 3 190 2 93 1 194 12 50 2 266 2 98 1 51 1 97 3 123 2 9 2 195 3 271 2 55 2 338 26 313 3 199 4 78 1 294 1 81 1 203 2 366 1 320 2 20 1 301 4 40 1 208 2 346 3 327 3 304 14 
218 1 162 1 136 1 135 1 240 1 374 1 326 1 292 1 344 1 198 1 
158 1 36 1 
218 1 161 1 162 1 135 1 23 1 196 1 326 1 344 1 198 1 
229 1 297 1 
252 1 131 1 332 1 
136 1 253 1 156 1 344 1 215 1 74 1 218 1 134 1 162 1 268 2 135 1 77 1 260 1 374 1 12 1 326 1 292 1 198 1 
136 1 253 1 156 1 344 1 215 1 74 1 218 1 134 1 162 1 268 2 135 1 77 1 260 1 374 1 12 1 326 1 292 1 198 1 
136 1 253 1 156 1 344 1 215 1 74 1 218 1 134 1 162 1 268 2 135 1 77 1 260 1 374 1 12 1 326 1 292 1 198 1 
131 1 229 1 297 1 
131 1 229 1 297 1 
252 1 332 1 
252 1 131 1 332 1 
238 1 3 1 
281 2 238 1 3 1 215 1 74 1 218 1 144 1 268 1 8 1 150 2 198 1 275 1 156 1 277 1 316 1 158 1 257 1 36 1 344 1 134 1 162 1 135 1 22 2 324 1 370 2 261 2 326 1 
281 2 352 1 164 2 71 1 5 1 117 1 308 1 194 1 143 1 96 1 286 1 76 1 195 1 31 1 338 2 312 2 251 1 33 1 255 1 60 2 177 1 368 1 322 2 232 1 22 2 370 2 66 2 346 1 327 1 280 1 304 1 
33 1 282 1 79 1 352 1 175 1 60 2 322 2 41 1 113 1 44 1 371 1 66 2 349 1 314 1 210 1 
322 1 33 1 79 1 352 1 175 1 101 1 41 1 371 1 44 1 60 1 66 1 314 1 349 1 
251 1 33 1 57 1 282 1 79 1 352 1 130 1 60 1 141 1 322 1 284 1 286 1 66 1 236 1 
282 1 79 1 33 1 352 1 175 1 60 1 322 1 41 1 113 1 44 1 371 1 66 1 349 1 314 1 
373 1 
321 1 205 1 43 1 242 1 12 1 37 1 151 1 
211 1 91 1 139 1 241 1 73 1 267 1 74 1 269 1 12 2 151 1 202 1 230 1 321 1 134 1 88 1 43 1 185 1 
138 6 91 4 331 2 190 2 242 1 241 5 97 2 52 2 286 3 54 2 105 2 12 8 107 6 151 8 152 2 251 10 293 1 57 1 254 2 341 2 60 3 202 4 65 2 205 1 66 3 114 2 210 1 211 12 352 4 354 1 214 2 73 4 265 3 266 2 267 4 309 2 74 5 221 1 126 3 313 2 33 3 35 2 176 2 228 1 319 1 367 2 278 1 321 2 322 3 134 5 88 6 43 9 183 1 185 3 
211 6 138 5 91 2 263 1 331 2 190 2 241 1 73 2 50 1 266 2 267 2 98 1 74 1 51 1 97 2 271 1 105 1 12 5 313 2 13 1 250 1 107 5 151 5 341 2 202 2 203 1 366 1 367 1 321 2 134 1 20 1 88 3 43 8 183 1 185 1 
281 1 137 1 91 1 73 1 192 1 266 1 267 1 335 1 74 1 97 2 53 1 247 1 219 1 222 1 105 1 150 1 151 2 341 2 83 1 296 1 202 1 134 1 231 1 22 1 370 1 43 2 261 1 187 1 
91 1 242 1 73 1 202 1 267 1 321 1 205 1 43 1 12 1 151 1 
211 10 138 5 341 2 176 1 331 2 190 2 266 2 97 2 88 5 43 5 105 1 313 2 12 5 151 5 107 5 
321 1 74 1 134 1 241 1 12 1 185 1 
352 1 91 1 241 4 73 2 267 2 74 3 286 1 248 1 358 1 151 2 251 1 293 2 33 1 57 2 155 1 130 1 256 1 60 4 202 2 319 1 367 2 322 4 134 3 369 1 43 2 66 4 183 2 185 2 236 1 
0 1 281 2 164 2 352 1 71 1 117 1 194 1 217 1 53 2 219 1 286 1 76 1 220 1 195 1 289 1 338 1 126 1 150 2 251 1 57 1 33 1 60 1 177 1 322 1 21 1 22 3 324 1 370 3 261 2 346 1 66 1 327 1 
211 4 138 2 91 1 364 1 73 1 202 1 367 1 267 1 321 2 88 2 43 1 183 1 12 4 107 2 151 2 
162 1 111 1 344 1 
162 1 111 1 344 1 
162 1 136 1 238 1 355 1 344 1 
162 1 111 1 344 1 
162 1 174 1 344 1 
162 1 174 1 344 1 
162 1 174 1 344 1 
162 1 344 1 
218 1 135 1 
164 2 137 1 71 1 194 4 50 1 266 1 97 1 51 1 195 1 9 2 271 1 222 1 338 8 224 1 199 2 364 1 203 1 132 1 40 1 346 1 327 1 187 1 304 4 
137 1 164 4 71 2 331 1 194 5 50 2 266 1 334 1 51 1 97 2 245 1 9 2 195 2 271 1 222 1 338 11 224 1 313 1 199 3 364 1 132 1 203 1 320 1 40 1 346 2 327 2 187 1 304 6 
137 1 164 6 263 1 71 3 331 2 190 2 194 10 50 1 266 3 51 1 97 3 98 1 245 1 123 1 195 3 9 3 271 1 222 1 338 19 224 1 313 2 199 4 364 1 132 1 203 1 366 1 320 1 20 1 40 1 346 3 327 3 187 1 304 9 
137 1 164 6 263 1 71 3 331 2 190 1 194 7 50 1 266 2 51 1 97 3 98 1 245 1 123 1 195 3 9 3 271 1 222 1 338 17 224 1 313 2 199 5 364 1 132 1 203 1 366 1 320 2 20 1 40 1 346 3 327 3 187 1 304 10 
164 2 137 1 71 1 194 4 50 1 266 1 97 1 51 1 195 1 9 2 271 1 222 1 338 8 224 1 199 2 364 1 203 1 132 1 40 1 346 1 327 1 187 1 304 4 
164 2 263 1 190 2 331 2 71 1 203 1 366 1 50 1 194 6 266 2 320 1 98 1 97 2 51 1 20 1 40 1 9 1 195 1 271 1 346 1 338 12 313 2 327 1 304 6 199 2 
137 1 164 8 263 1 71 4 331 2 190 1 194 8 50 1 266 2 98 1 51 1 97 3 245 1 123 2 195 4 9 3 271 1 222 1 338 18 224 1 313 2 199 5 364 1 132 1 203 1 366 1 320 2 20 1 40 1 346 4 327 4 187 1 304 10 
350 1 164 8 263 1 71 4 331 3 190 2 194 7 50 1 266 2 98 1 51 1 97 3 123 2 195 4 9 3 271 1 338 16 313 3 199 6 203 1 366 1 320 3 20 1 40 1 346 4 327 4 304 9 
137 1 132 2 194 4 266 1 320 3 97 1 9 3 222 3 338 7 224 1 187 3 304 3 199 6 
350 1 137 1 164 8 263 1 71 4 331 2 190 1 194 8 50 1 266 2 98 1 51 1 97 3 123 2 195 4 9 3 271 1 222 1 338 18 224 1 313 2 199 4 364 1 132 1 203 1 366 1 320 1 20 1 40 1 346 4 327 4 187 1 304 10 
137 1 164 4 71 2 364 1 132 1 194 4 266 1 320 1 97 1 123 1 9 2 195 2 222 1 338 8 346 2 327 2 224 1 187 1 304 4 199 3 
137 1 364 1 132 1 194 3 37 1 266 1 97 1 9 2 222 1 338 6 224 1 187 1 304 3 199 2 
164 2 190 1 71 1 331 1 194 2 266 1 320 1 97 1 245 1 9 1 195 1 346 1 338 4 327 1 313 1 304 2 199 2 
190 1 331 1 203 1 50 2 194 4 266 1 334 1 320 1 97 1 9 1 271 1 338 7 313 1 304 3 199 2 
137 1 164 4 2 1 331 2 190 2 71 2 72 1 194 12 50 2 266 3 334 1 97 3 123 2 9 5 195 2 222 2 338 23 224 1 313 2 199 9 80 1 364 1 132 1 203 2 320 4 346 2 327 2 187 2 304 11 
338 1 194 1 50 1 
338 1 203 1 304 1 
164 2 176 1 71 1 331 1 190 1 194 3 266 1 320 1 97 1 245 1 195 1 9 2 346 1 338 6 327 1 313 1 304 3 199 3 
164 2 263 1 190 2 331 2 71 1 203 1 366 1 50 1 194 6 266 2 320 1 98 1 97 2 51 1 20 1 40 1 9 1 195 1 271 1 346 1 338 12 313 2 327 1 304 6 199 2 
137 1 194 3 266 1 320 1 97 1 9 1 222 1 338 6 187 1 304 3 199 2 
164 2 72 1 71 1 132 1 194 2 320 1 123 1 9 1 195 1 222 1 338 3 346 1 327 1 224 1 187 1 304 1 199 2 
164 2 137 1 71 1 192 1 194 5 266 2 320 2 97 2 40 1 195 1 9 3 222 2 346 1 338 10 327 1 187 2 304 5 199 5 
164 2 71 1 331 1 320 1 97 1 40 1 195 1 346 1 338 2 327 1 304 2 199 1 
164 2 190 1 71 1 331 1 194 2 266 1 320 1 97 1 40 1 9 1 195 1 346 1 338 4 327 1 313 1 304 2 199 2 
350 1 164 6 72 1 71 3 194 2 320 1 123 1 40 1 195 3 9 1 222 1 338 3 346 3 327 3 187 1 304 1 199 2 
350 1 137 1 164 8 71 4 331 3 190 3 140 1 194 14 50 4 266 4 334 1 97 4 245 1 123 1 195 4 9 5 271 1 222 2 338 27 224 1 313 3 199 10 364 1 132 1 318 1 203 3 159 1 320 5 40 1 346 4 327 4 187 2 304 13 
281 1 315 1 200 1 22 1 324 1 370 1 226 1 
315 1 281 1 339 1 200 1 212 1 226 1 145 1 22 1 324 1 370 1 272 1 14 1 
251 1 322 1 33 1 57 1 352 1 286 1 130 1 60 1 66 1 37 1 236 1 
251 1 281 1 57 1 33 1 352 1 60 1 217 1 322 1 286 1 148 1 22 2 220 1 324 1 370 2 261 1 66 1 126 1 150 1 
281 2 352 1 216 1 217 1 286 2 220 1 148 1 54 1 126 2 150 1 251 3 33 1 293 1 254 1 83 1 60 1 317 1 322 1 22 2 324 1 370 2 261 2 66 1 
281 2 352 1 216 1 217 1 286 2 148 1 54 1 126 2 150 1 251 3 33 1 293 1 254 1 83 1 60 2 317 1 258 1 322 2 179 1 22 2 324 1 370 2 261 2 66 2 
352 1 241 1 265 1 309 1 74 2 286 1 54 1 126 1 12 1 251 4 33 1 293 1 57 1 254 1 227 1 60 3 322 3 321 1 134 2 179 1 65 1 66 3 89 1 
251 4 57 1 293 1 33 1 254 1 352 1 241 1 60 3 265 1 309 1 321 1 74 2 322 3 134 2 179 1 65 1 286 1 54 1 66 3 126 1 12 1 152 1 
322 1 33 1 352 1 180 1 60 1 66 1 
27 1 251 3 154 1 57 2 33 2 352 3 60 7 322 6 18 1 173 1 180 1 122 1 286 2 221 1 66 7 223 1 126 1 312 1 349 1 280 1 210 1 
0 1 281 1 283 1 137 1 92 1 194 3 143 1 97 1 286 1 148 1 195 2 9 2 289 1 338 6 150 1 199 2 251 1 60 1 22 2 261 1 66 1 346 2 304 3 210 1 164 4 352 1 71 2 117 2 118 1 266 1 217 1 220 1 222 1 126 1 224 1 128 1 33 1 364 1 177 2 132 1 322 1 232 1 370 2 324 2 327 2 186 1 187 1 
91 2 214 1 242 1 241 2 73 2 265 1 267 2 309 1 74 3 12 1 151 1 152 1 275 1 251 2 57 1 35 1 60 1 202 2 319 1 321 1 322 1 134 3 65 1 205 1 43 1 66 1 114 1 185 1 
251 2 33 1 352 2 60 2 278 1 322 2 65 1 180 1 286 1 221 1 66 2 126 1 210 1 
251 1 57 1 33 1 352 1 130 1 213 1 60 4 322 4 179 1 286 1 66 4 236 1 210 1 
251 1 293 1 33 1 352 2 362 1 60 2 322 2 18 1 39 1 345 1 286 1 66 2 223 1 126 1 
322 1 33 1 57 1 352 1 41 1 371 1 60 1 66 1 
251 1 322 2 33 1 352 1 286 1 5 1 60 2 66 2 280 1 349 1 210 1 
251 3 27 1 293 1 57 1 154 1 33 2 352 2 130 1 213 1 60 5 322 4 286 2 66 5 280 1 236 1 210 1 
251 3 27 1 293 1 57 1 33 2 352 2 130 1 213 1 60 5 322 4 286 2 24 1 66 5 280 1 236 1 210 1 
251 1 281 1 57 1 33 1 352 1 60 1 258 1 217 1 322 1 286 1 148 1 22 2 324 1 370 2 261 1 66 1 126 1 150 1 
251 1 293 1 33 1 352 2 60 1 322 1 18 1 122 1 286 1 221 1 66 1 223 1 126 1 
285 1 324 1 264 1 234 1 26 1 
275 1 110 1 361 1 83 1 264 2 317 1 38 1 309 1 216 1 321 1 74 2 134 2 285 2 324 1 10 1 234 2 12 1 328 1 26 1 
96 1 281 1 285 1 22 1 370 1 264 1 31 1 308 1 26 1 
361 1 38 1 26 1 
172 1 129 1 37 1 333 1 
172 1 129 1 82 1 112 1 63 1 333 1 209 1 
225 1 356 1 209 1 
165 1 129 1 166 1 191 1 82 3 112 1 63 1 333 1 172 1 147 2 209 3 90 1 
172 1 129 1 82 2 112 1 48 1 302 1 63 1 333 1 209 2 
165 1 353 1 129 1 82 1 112 1 307 1 63 1 121 1 181 1 249 1 209 1 
172 1 165 1 129 1 82 1 112 1 63 1 209 1 
172 2 165 1 82 1 112 1 63 1 333 1 209 1 
165 1 129 1 239 1 82 2 112 2 16 1 63 2 172 1 303 1 209 2 
165 1 129 2 330 1 82 3 112 1 63 1 333 1 142 1 172 1 181 1 348 1 302 2 209 3 
58 1 165 1 41 1 82 1 112 1 63 1 209 1 
165 1 129 2 330 1 82 4 112 2 48 1 63 2 333 1 172 1 181 1 347 1 302 2 209 4 
172 1 165 1 129 1 82 1 112 1 63 1 333 1 209 1 
166 1 129 3 330 1 82 4 112 1 86 1 63 1 333 2 172 2 147 1 181 1 302 2 90 1 209 4 
172 1 165 1 129 1 270 1 182 1 82 2 290 1 112 1 302 1 63 1 333 1 209 2 
165 1 166 1 129 1 82 3 112 1 63 1 333 1 160 1 172 1 147 2 209 3 90 2 
1 1 244 1 129 2 184 2 
64 1 165 1 82 1 112 1 63 1 209 1 
172 1 165 1 129 1 82 2 112 1 348 1 302 1 63 1 333 1 209 2 
116 1 
172 1 165 1 129 1 82 1 112 1 63 1 333 1 209 1 
165 1 129 1 82 3 112 1 63 1 333 1 172 1 147 1 348 1 302 1 209 3 
129 1 181 1 330 1 86 1 
172 1 129 1 

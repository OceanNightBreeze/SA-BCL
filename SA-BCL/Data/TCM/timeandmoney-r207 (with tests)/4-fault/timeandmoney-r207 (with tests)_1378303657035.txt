#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 100 9 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 43 5 309 1 229 2 329 1 183 1 137 9 138 6 337 2 339 1 143 2 30 2 96 2 342 1 97 1 266 1 166 9 122 1 151 1 79 2 81 1 245 1 219 2 129 1 41 1 251 1 356 3 204 4 
205 1 43 5 309 1 229 2 329 1 183 1 137 9 138 6 337 2 339 1 143 2 30 2 342 1 96 2 97 1 266 1 166 9 122 1 151 1 79 2 81 1 245 1 219 2 129 1 41 1 251 1 356 3 204 4 
205 1 43 6 309 1 229 2 329 1 183 1 137 10 138 7 337 2 339 1 143 2 30 2 342 1 96 2 97 1 266 1 166 10 122 1 151 1 79 2 81 1 245 1 219 2 129 1 41 1 251 1 356 4 204 5 
205 1 43 4 309 1 229 2 329 1 183 1 137 7 138 4 337 2 339 1 143 2 30 2 342 1 96 1 97 1 266 1 166 7 122 1 79 2 81 1 245 1 219 2 129 1 41 1 251 1 356 2 204 3 
205 1 43 3 151 1 329 1 79 1 137 4 138 3 337 1 219 1 143 1 339 1 30 1 342 1 96 2 97 1 356 1 166 4 204 2 
205 1 43 1 122 1 254 1 229 1 329 1 79 1 137 2 350 1 324 1 143 1 219 1 30 1 97 1 251 1 166 2 
205 1 43 2 229 1 329 1 79 2 137 3 138 1 143 2 41 1 97 1 356 1 166 3 204 1 
205 1 43 5 309 1 229 1 329 1 137 9 138 7 337 1 143 2 339 1 30 1 341 1 342 1 96 2 97 1 166 9 151 1 79 2 129 1 219 1 199 1 41 1 356 3 204 4 
205 1 43 5 309 1 229 1 329 1 137 9 138 7 337 1 143 2 339 1 30 1 341 1 342 1 96 2 97 1 166 9 151 1 79 2 129 1 219 1 199 1 41 1 356 3 204 4 
195 1 93 1 31 1 
346 1 195 1 28 2 
354 1 78 1 262 2 360 2 200 2 87 2 54 2 91 2 
178 1 23 1 227 1 67 1 109 1 0 1 360 2 160 1 29 1 91 2 313 1 117 1 334 1 261 2 262 2 263 1 235 1 315 2 148 1 236 2 265 1 343 1 239 1 78 1 241 1 277 1 54 2 193 2 12 1 57 2 354 1 175 1 16 1 200 3 87 3 177 1 108 1 
352 1 78 1 358 1 262 1 360 1 200 1 87 1 54 1 201 1 91 1 
269 1 22 1 34 1 37 1 206 1 255 1 91 1 195 1 31 1 223 1 87 1 200 1 8 1 201 1 
269 1 22 2 34 2 37 1 206 1 255 1 360 1 54 1 91 1 195 1 262 1 31 1 87 1 200 1 201 1 
22 1 34 1 228 1 242 1 323 1 
22 2 34 2 228 1 195 1 197 1 31 1 323 1 211 1 
22 1 34 1 323 1 
22 1 34 1 78 1 358 1 228 1 360 1 125 1 54 1 91 1 352 1 262 1 87 1 200 1 201 1 
195 1 
22 2 34 2 228 1 195 1 197 1 243 1 31 1 323 1 
225 1 22 5 357 1 34 5 240 1 228 2 35 2 271 2 323 2 14 1 6 1 195 1 17 1 197 1 186 1 146 1 31 1 98 1 149 2 
354 1 93 1 
23 1 241 1 0 1 360 1 54 1 12 1 29 1 91 1 57 1 313 1 116 1 353 1 16 1 175 1 261 1 87 2 200 2 236 1 265 1 304 1 
120 1 360 1 54 1 91 2 354 2 260 1 262 1 87 2 200 2 
116 1 123 1 375 1 
23 1 241 1 0 1 29 1 12 1 57 1 313 1 354 1 175 1 16 1 261 1 61 1 200 1 87 1 236 1 265 1 
354 1 262 1 360 3 200 3 87 3 54 3 304 1 91 3 
358 1 360 1 200 1 87 1 54 1 201 1 91 1 
120 1 260 1 262 1 360 1 200 1 87 1 54 1 201 1 91 1 
178 1 22 1 23 1 206 1 67 1 255 1 0 1 360 3 160 1 29 1 91 3 313 1 117 1 47 1 260 1 261 1 262 2 263 1 235 1 315 2 148 1 236 1 265 1 343 1 269 1 34 1 78 1 241 1 37 1 171 1 54 3 193 1 12 1 57 1 354 1 353 1 16 1 175 1 200 4 87 4 177 1 201 1 304 1 108 1 
354 1 85 1 360 1 223 1 200 2 87 2 54 1 91 2 304 1 
22 1 269 1 34 1 206 1 37 1 255 1 360 3 54 3 171 1 91 3 353 1 86 1 260 1 262 1 195 1 87 3 200 3 201 1 304 2 
360 2 54 2 91 2 116 1 260 1 262 1 87 2 200 2 375 1 304 1 
23 1 241 1 0 1 29 1 12 1 57 1 313 1 354 1 175 1 16 1 261 1 200 1 87 1 236 1 265 1 
23 1 0 1 173 1 29 1 12 1 57 1 313 1 354 1 234 1 16 1 261 1 200 1 87 1 236 1 265 1 
178 1 109 2 160 1 139 1 4 1 117 1 116 2 340 1 263 2 315 2 148 1 343 1 296 1 273 1 123 2 325 1 217 1 193 4 298 1 220 1 375 2 105 1 177 1 305 1 
59 1 37 1 360 1 200 1 87 1 54 1 201 1 91 1 
360 4 54 4 91 5 354 1 353 1 85 1 260 1 262 1 210 1 223 1 87 5 200 5 304 2 368 1 
59 1 358 1 360 2 200 2 87 2 54 2 201 1 91 2 
373 1 181 1 
373 1 181 1 
134 1 363 1 
134 1 363 1 
134 1 363 1 
102 1 373 1 181 1 
373 1 181 1 19 1 
155 1 134 1 373 2 181 2 153 1 363 1 
102 1 373 1 181 1 
102 1 373 1 181 1 
135 1 373 1 181 1 
135 1 373 1 181 1 
135 1 373 1 181 1 
287 2 22 2 348 1 34 2 180 2 181 2 182 2 310 3 371 1 155 1 259 2 301 1 373 2 300 2 195 1 374 1 162 1 286 1 32 1 
22 1 287 1 34 1 150 1 181 1 182 1 10 1 310 1 360 2 54 2 126 1 112 1 91 2 259 1 354 1 355 1 314 1 373 1 300 1 104 1 200 2 87 2 32 1 19 1 
337 1 219 1 30 1 
219 1 30 1 324 1 
337 2 208 1 219 3 349 1 324 1 49 1 
337 1 208 1 219 2 324 1 63 1 49 1 
337 1 208 2 219 2 324 1 49 1 
225 2 22 5 228 4 69 2 28 3 1 1 4 1 6 3 340 1 188 1 31 1 149 1 369 1 319 1 345 1 346 1 34 5 150 1 271 1 35 1 240 1 152 2 323 1 325 1 126 1 355 1 127 1 195 2 197 1 221 1 305 1 133 2 
225 2 22 7 228 5 359 1 257 3 28 3 4 1 6 3 340 1 188 1 31 1 98 1 149 2 268 1 319 1 346 1 34 7 240 1 35 2 271 2 215 1 242 3 152 2 323 4 325 1 126 2 127 1 195 3 197 1 221 1 156 1 305 1 133 2 
22 3 225 2 228 2 69 1 1 1 28 4 4 1 6 3 340 1 188 1 31 1 98 1 149 1 319 1 345 1 346 2 34 3 271 1 35 1 152 2 325 1 126 1 127 1 195 3 305 1 133 2 
22 1 345 1 34 1 271 1 35 1 156 1 1 1 98 1 149 1 
313 1 93 1 311 1 
313 1 289 1 
270 1 
313 1 12 1 
313 3 128 1 65 1 311 2 0 1 12 1 
313 1 0 1 12 1 
313 1 290 1 
322 1 230 2 109 4 159 1 325 1 332 1 217 2 139 3 193 7 4 1 291 1 365 1 207 1 263 3 147 1 250 1 18 1 
322 1 230 2 109 4 159 1 325 1 332 1 217 2 139 3 193 7 4 1 291 1 365 1 207 1 263 3 147 1 250 1 18 1 
322 1 230 2 109 4 159 1 325 1 332 1 217 2 139 3 193 7 4 1 291 1 207 1 365 1 144 1 263 3 147 1 250 1 18 1 
178 1 230 3 68 1 44 1 109 16 159 1 160 1 332 1 3 4 139 10 4 4 46 1 291 2 207 1 336 1 365 2 340 3 263 15 315 2 147 2 343 1 75 3 77 1 322 2 53 1 325 4 217 5 193 31 127 3 283 1 250 1 177 1 18 5 305 3 
178 2 230 2 109 5 159 1 160 2 332 1 139 4 4 1 46 1 291 1 365 1 207 1 145 1 263 4 315 4 147 1 294 1 343 2 322 1 325 1 217 3 193 9 177 2 18 1 
24 1 205 1 43 1 88 1 229 1 27 1 329 1 137 2 138 1 45 1 337 1 261 1 143 1 30 1 119 1 164 1 97 1 236 1 265 1 166 2 79 1 324 1 349 1 247 1 57 1 16 1 219 2 198 1 42 1 203 1 
24 1 43 1 88 1 229 1 27 1 329 1 137 3 138 2 333 1 337 1 261 1 143 1 30 1 119 1 97 1 236 1 265 1 166 3 79 1 349 1 324 1 247 1 57 1 154 1 38 1 16 1 219 2 198 1 42 1 203 1 
24 1 43 1 88 1 229 1 27 1 329 1 137 2 138 2 337 1 261 1 30 1 119 1 97 1 236 1 265 1 166 2 324 1 349 1 247 1 57 1 154 1 38 1 16 1 219 2 198 1 
23 1 24 2 229 2 27 2 137 1 71 1 333 1 313 1 335 1 261 1 143 1 119 2 316 1 236 1 212 1 265 1 48 1 166 1 79 1 12 1 57 1 16 1 202 1 
205 1 24 1 88 1 229 1 27 1 79 1 137 1 349 1 324 1 247 1 45 1 154 1 57 1 337 1 16 1 219 2 143 1 261 1 30 1 198 1 119 1 236 1 265 1 42 1 203 1 166 1 
55 1 
225 2 226 1 288 1 136 2 90 1 91 1 6 2 335 1 142 1 236 2 8 1 237 2 48 1 149 1 297 2 346 2 103 2 240 1 52 1 12 1 57 2 13 2 16 1 195 2 197 3 200 1 201 1 22 5 23 2 206 1 26 1 255 1 70 1 28 2 364 1 313 1 261 2 31 1 265 1 33 1 319 1 269 1 34 5 35 1 271 1 36 1 37 1 275 4 323 6 83 1 84 2 280 2 218 1 223 1 87 1 
22 3 269 1 288 1 34 3 206 1 37 1 36 1 136 1 243 1 255 1 90 1 275 2 52 1 323 2 83 1 91 1 197 1 223 1 87 1 200 1 8 1 201 1 
22 3 269 1 288 1 34 3 206 1 37 1 36 1 243 1 255 1 90 1 275 3 52 1 323 1 83 1 91 1 195 1 197 1 31 1 223 1 87 1 200 1 8 1 201 1 237 1 
22 3 288 1 206 1 136 1 90 1 255 1 91 1 31 1 8 1 237 1 269 1 34 3 297 1 36 1 37 1 243 1 52 1 275 3 323 2 83 1 195 1 197 1 200 1 87 1 223 1 201 1 
225 1 288 1 136 4 90 1 91 1 6 1 8 1 237 4 149 1 295 1 297 4 346 2 240 1 103 2 243 1 52 1 13 2 195 5 197 3 200 1 201 1 22 5 206 1 255 1 70 1 31 5 269 1 34 5 168 1 35 1 271 1 37 1 36 1 169 1 275 6 323 7 82 1 83 1 84 2 280 2 218 1 282 1 87 1 223 1 
225 1 288 1 226 1 136 2 90 1 91 1 6 1 8 1 237 2 149 1 346 2 297 2 240 1 103 2 52 1 13 2 195 2 197 2 200 1 201 1 22 4 206 1 255 1 70 1 28 2 31 1 269 1 34 4 35 1 271 1 37 1 36 1 275 4 323 4 83 1 84 2 280 2 218 1 87 1 223 1 
225 1 22 4 288 1 206 1 136 2 90 1 255 1 70 1 91 1 6 1 31 1 8 1 237 2 149 1 269 1 297 2 346 2 34 4 103 2 168 1 240 1 35 1 271 1 36 1 37 1 169 1 52 1 275 4 323 4 83 1 84 2 280 2 13 2 218 1 282 1 195 1 197 2 200 1 87 1 223 1 201 1 
225 1 22 4 288 1 206 1 136 2 90 1 255 1 70 1 91 1 6 1 31 1 8 1 237 2 149 1 269 1 297 2 346 2 34 4 103 2 168 1 240 1 35 1 271 1 36 1 37 1 169 1 52 1 275 4 323 4 83 1 84 2 280 2 13 2 218 1 282 1 195 1 197 2 200 1 87 1 223 1 201 1 
225 1 22 4 288 1 206 1 136 2 90 1 255 1 312 2 28 2 91 1 6 1 72 2 31 1 8 1 237 2 267 1 149 1 269 1 297 2 34 4 240 1 35 1 271 1 36 1 37 1 169 1 52 1 275 4 323 4 83 1 280 2 13 2 299 1 218 1 195 1 197 2 285 1 200 1 87 1 223 1 201 1 
225 1 22 4 288 1 206 1 136 3 90 1 255 1 70 1 91 1 6 1 31 1 8 1 237 3 149 1 269 1 346 2 34 4 297 3 103 2 271 1 35 1 240 1 168 1 36 1 37 1 169 1 52 1 275 5 323 5 82 1 83 1 84 2 280 2 13 2 218 1 282 1 195 1 197 2 200 1 87 1 223 1 201 1 
225 1 22 4 288 1 206 1 136 3 90 1 255 1 70 1 91 1 6 1 31 1 8 1 237 3 149 1 269 1 346 2 34 4 297 3 103 2 271 1 35 1 240 1 168 1 36 1 37 1 169 1 52 1 275 5 323 5 82 1 83 1 84 2 280 2 13 2 218 1 282 1 195 1 197 2 200 1 87 1 223 1 201 1 
225 1 22 4 226 1 288 1 206 1 136 2 90 1 255 1 312 2 28 2 91 1 6 1 72 2 31 1 8 1 237 2 149 1 269 1 297 2 34 4 271 1 35 1 240 1 36 1 37 1 52 1 275 4 323 4 83 1 280 2 13 2 218 1 195 1 197 2 285 1 223 1 87 1 200 1 201 1 
178 1 230 1 109 3 159 1 160 1 332 1 139 2 4 1 116 1 117 1 291 1 207 1 93 1 263 3 315 2 148 1 343 1 322 1 123 1 325 1 217 2 193 6 298 1 354 2 375 1 177 1 
178 2 64 1 157 1 44 1 109 8 160 2 139 2 3 3 4 1 117 1 116 11 334 1 340 2 263 6 235 1 315 4 148 2 343 2 75 3 77 1 123 11 11 1 325 2 217 1 193 14 354 1 127 2 222 1 375 4 18 1 177 2 132 1 305 1 
23 1 178 1 64 1 109 1 0 1 360 1 160 1 29 1 91 1 313 1 117 1 334 1 261 1 263 1 148 1 315 2 235 1 236 1 265 1 343 1 318 1 167 1 241 1 54 1 12 1 193 2 57 1 351 1 354 1 353 1 16 1 175 1 61 1 200 2 87 2 375 1 177 1 304 1 
178 3 230 1 0 2 332 1 139 8 91 1 4 3 291 1 334 1 340 2 235 1 148 3 236 3 343 3 344 1 241 2 244 1 54 1 193 20 12 2 154 1 57 3 354 2 353 1 16 2 303 2 200 3 18 4 304 1 108 2 305 2 23 1 64 1 109 10 360 1 159 1 160 3 29 2 113 2 313 2 117 3 116 7 207 1 261 3 263 10 315 6 265 2 214 2 322 1 123 7 325 3 217 4 326 1 39 2 127 2 175 2 87 3 375 7 177 3 
23 2 178 2 232 1 109 1 360 1 160 2 330 1 91 1 313 3 117 2 334 1 335 1 261 7 263 1 164 1 315 4 148 2 235 1 236 8 265 2 48 1 343 2 101 1 54 1 277 2 193 2 12 2 154 1 298 1 57 8 15 1 16 2 200 1 87 1 252 1 177 2 107 1 304 1 20 1 
178 1 328 1 64 1 109 1 360 1 160 1 139 1 91 1 4 1 116 1 117 1 260 1 262 1 340 1 263 2 315 2 148 1 343 1 123 1 54 1 325 1 217 1 193 3 127 1 87 1 200 1 375 1 177 1 305 1 
178 1 109 2 123 1 160 1 325 1 139 1 193 2 298 1 116 1 117 1 340 1 220 1 148 1 315 2 375 1 18 1 177 1 343 1 
178 1 123 1 160 1 217 1 139 1 193 2 298 1 4 1 116 1 117 1 263 2 148 1 315 2 375 1 177 1 105 1 343 1 305 1 
178 1 109 2 160 1 139 2 4 1 117 1 116 2 340 1 263 2 315 2 148 1 343 1 123 2 325 1 217 1 193 4 298 1 127 1 375 2 177 1 18 1 305 1 
178 1 232 1 109 2 123 1 160 1 325 1 139 1 193 2 116 1 117 1 340 1 220 1 148 1 315 2 375 1 18 1 177 1 343 1 
178 1 232 1 123 1 160 1 217 1 139 1 193 2 4 1 116 1 117 1 263 2 148 1 315 2 375 1 177 1 105 1 343 1 305 1 
178 1 109 2 232 1 160 1 139 2 4 1 117 1 116 2 340 1 263 2 315 2 148 1 343 1 123 2 325 1 217 1 193 4 127 1 375 2 177 1 18 1 305 1 
178 1 109 2 160 1 139 2 4 1 117 1 116 2 340 1 263 2 315 2 148 1 343 1 123 2 325 1 217 1 193 4 127 1 375 2 177 1 18 1 305 1 
23 1 178 1 109 1 0 1 160 1 29 1 313 1 117 1 334 1 261 1 263 1 148 1 315 2 235 1 236 1 265 1 343 1 241 1 193 2 12 1 57 1 354 1 16 1 175 1 87 1 200 1 177 1 108 1 
23 1 178 1 109 1 0 1 160 1 29 1 313 1 117 1 334 1 366 1 234 1 261 1 263 1 148 1 315 2 235 1 236 1 265 1 343 1 193 2 12 1 173 1 57 1 354 1 16 1 87 1 200 1 177 1 
178 1 64 1 109 2 160 1 139 2 4 1 117 1 116 2 340 1 263 2 315 2 148 1 343 1 123 2 325 1 217 1 193 4 127 1 375 2 177 1 18 1 305 1 
178 1 109 2 0 1 160 1 139 2 29 1 113 1 4 1 313 1 116 2 117 1 261 1 340 1 263 2 164 1 148 1 315 2 236 1 265 1 343 1 241 1 123 2 325 1 217 1 193 4 12 1 57 1 127 1 16 1 175 1 87 1 200 1 375 2 18 1 177 1 305 1 108 1 
178 1 64 1 158 1 109 2 360 1 160 1 139 1 91 1 4 1 117 1 116 1 260 1 262 1 340 1 263 1 315 2 148 1 343 1 123 1 54 1 325 1 193 3 127 1 87 1 200 1 375 1 18 1 177 1 305 1 
178 3 89 1 230 1 44 3 332 1 139 8 3 4 2 1 4 5 46 1 185 1 291 1 292 1 293 4 340 4 145 1 343 3 50 1 193 41 60 1 249 1 18 4 305 4 306 2 308 1 109 20 159 1 160 3 256 1 207 1 263 21 209 1 73 1 315 6 75 3 77 1 322 1 325 5 124 1 217 4 127 4 177 3 131 1 
178 4 308 1 230 1 89 1 44 3 109 20 159 1 256 1 160 4 332 1 2 1 3 4 139 7 46 2 4 4 185 1 291 1 207 1 292 1 293 4 145 1 340 4 209 1 263 18 73 1 315 8 343 4 75 3 50 1 77 1 322 1 124 1 325 5 217 4 193 38 60 1 127 4 249 1 131 1 177 4 18 3 306 2 305 3 
178 2 308 1 230 1 89 1 44 2 109 27 159 1 256 1 160 2 332 1 2 1 3 4 139 14 46 1 4 8 185 1 291 1 207 1 292 1 293 4 145 1 340 7 209 1 263 25 73 1 315 4 343 2 75 4 50 1 77 2 322 1 11 2 325 8 217 7 193 52 60 1 127 7 131 1 177 2 18 7 306 1 305 7 
178 2 308 1 44 1 109 9 256 2 160 2 2 1 3 2 139 6 4 3 293 2 145 1 340 3 263 10 315 4 343 2 75 1 50 1 77 1 80 1 124 1 325 3 217 3 193 19 60 1 127 3 177 2 18 3 306 1 305 3 
178 3 308 2 89 1 109 14 44 2 256 1 160 3 2 1 139 4 3 2 46 2 4 2 185 1 292 1 293 4 145 1 340 3 263 12 209 1 73 1 315 6 343 3 75 2 50 1 325 3 217 2 193 26 60 1 127 3 18 2 131 1 177 3 306 2 305 2 
155 1 259 1 287 1 300 1 373 1 181 1 162 1 182 1 95 1 286 1 
10 1 19 1 
259 1 287 1 321 1 300 1 373 1 181 1 182 1 272 1 377 1 
22 1 287 1 348 1 34 1 180 1 181 1 182 1 310 2 371 1 155 1 259 1 373 1 300 1 195 1 374 1 162 1 286 1 32 1 
22 1 287 1 348 1 34 1 180 1 181 1 182 1 310 2 371 1 155 1 259 1 373 1 300 1 195 1 374 1 162 1 286 1 32 1 
22 1 287 1 348 1 34 1 180 1 181 1 182 1 310 2 371 1 155 1 259 1 373 1 300 1 195 1 374 1 162 1 286 1 32 1 
102 1 66 1 153 1 
102 1 66 1 153 1 
135 1 216 1 
135 1 216 1 153 1 
104 1 112 1 
22 1 287 1 180 1 228 1 181 1 182 1 310 1 360 2 112 1 91 2 259 1 314 1 34 1 150 1 10 1 54 2 126 1 371 1 354 1 355 1 300 1 373 1 104 1 200 2 87 2 62 1 19 1 
102 1 66 1 
135 1 216 1 153 1 
178 1 64 1 109 1 160 1 91 2 313 1 117 1 115 1 334 1 261 2 263 1 148 1 315 2 235 1 236 2 265 1 343 1 51 1 101 1 276 1 277 2 12 1 193 2 57 2 15 1 16 1 248 1 284 1 200 2 87 2 177 1 
179 1 88 1 349 1 324 1 247 1 154 1 57 2 337 1 16 1 219 2 261 2 30 1 119 1 164 1 7 1 236 2 265 1 203 1 165 1 
179 1 88 1 349 1 324 1 247 1 154 1 57 1 337 1 16 1 219 2 261 1 30 1 119 1 94 1 236 1 265 1 203 1 
23 1 327 1 12 1 57 1 313 1 335 1 16 1 261 1 119 1 236 1 212 1 265 1 48 1 165 1 
179 1 88 1 349 1 324 1 247 1 154 1 57 1 337 1 16 1 219 2 261 1 30 1 119 1 7 1 236 1 265 1 203 1 165 1 
163 1 
225 1 14 1 6 1 195 1 93 1 146 1 31 1 
22 1 225 1 34 1 346 1 103 1 240 1 35 1 271 1 323 1 70 1 28 1 84 1 6 1 195 2 197 1 31 1 149 1 
225 8 289 3 0 3 140 1 290 2 4 2 6 9 340 2 146 1 236 3 238 2 149 4 346 6 240 4 152 6 191 2 194 2 12 3 57 3 14 1 16 3 195 8 197 3 305 2 23 1 22 5 307 2 65 1 206 2 311 2 28 12 364 1 114 1 313 10 261 3 264 2 164 1 31 2 265 4 76 2 319 2 121 2 34 5 35 4 271 4 170 1 323 5 325 2 279 1 39 2 281 1 127 2 130 2 133 6 
22 1 225 5 89 1 44 1 28 6 3 1 364 1 4 2 185 1 141 1 6 8 292 1 340 2 209 1 264 1 31 2 75 1 149 2 319 1 34 1 346 3 271 2 35 2 240 2 152 5 323 1 325 2 127 2 130 2 195 5 197 1 302 1 131 1 133 5 305 2 
22 1 225 2 358 1 360 1 332 1 91 1 4 1 291 1 6 2 262 1 264 1 118 1 149 1 322 1 34 1 78 1 271 1 35 1 240 1 168 1 325 2 125 1 54 1 352 1 130 2 200 1 87 1 201 1 
225 1 240 1 35 1 271 1 14 1 6 1 195 1 146 1 31 1 149 1 
225 5 346 5 152 5 325 2 28 10 4 2 39 1 6 5 127 2 130 2 340 2 195 5 264 1 133 5 305 2 
22 1 34 1 195 1 197 1 31 1 323 1 
23 2 225 2 22 3 26 1 0 1 140 1 364 2 184 1 313 2 6 2 335 1 261 4 187 1 236 4 98 1 99 1 265 3 48 1 33 1 149 2 317 1 319 2 320 1 347 1 34 3 271 2 35 2 240 1 323 4 12 2 57 4 281 2 16 2 197 2 
23 1 178 1 67 1 360 2 0 1 160 1 29 1 91 2 313 1 117 1 261 1 262 2 263 1 235 1 315 2 148 1 236 1 265 1 343 1 78 1 241 1 54 2 193 1 12 1 57 1 354 1 175 1 16 1 200 3 87 3 177 1 108 1 
225 2 319 1 346 2 240 1 35 1 271 1 230 1 152 2 28 4 364 1 6 1 195 4 31 2 133 2 149 1 
259 1 5 1 300 1 
259 1 58 1 300 1 286 1 112 1 
259 1 5 1 300 1 
259 1 5 1 300 1 
259 1 372 1 300 1 
259 1 372 1 300 1 
259 1 372 1 300 1 
259 1 300 1 
373 1 181 1 
178 2 322 1 230 1 109 4 159 1 160 2 325 1 332 1 217 2 193 8 139 3 4 1 46 1 291 1 207 1 263 4 315 4 18 1 177 2 343 2 
322 1 230 1 109 3 159 1 325 1 217 2 332 1 139 2 193 6 4 1 291 1 207 1 93 1 263 3 
178 1 109 2 160 1 325 1 217 1 192 1 139 2 193 4 4 1 127 1 340 1 263 2 315 2 177 1 18 1 343 1 305 1 
77 1 44 1 109 3 325 1 217 1 3 2 193 7 139 2 4 1 127 1 340 1 263 4 18 1 75 1 305 1 
178 2 157 1 230 1 109 11 159 1 160 2 258 1 332 1 139 9 3 2 4 3 46 2 291 2 207 1 340 2 263 12 315 4 75 2 343 2 77 1 322 2 11 1 325 3 217 5 193 23 127 2 18 4 177 2 305 2 
263 1 193 1 3 1 
109 1 193 1 75 1 
178 1 109 3 160 1 325 1 192 1 217 2 193 6 139 3 4 1 39 1 127 1 340 1 263 3 315 2 177 1 18 1 343 1 305 1 
178 1 89 1 44 1 109 6 160 1 3 1 139 2 4 2 185 1 292 1 145 1 340 2 263 6 209 1 315 2 75 1 343 1 325 2 217 1 193 12 127 2 18 1 177 1 131 1 305 2 
322 1 109 3 325 1 332 1 217 1 193 6 139 2 4 1 291 1 263 3 18 1 
178 1 322 1 109 1 159 1 160 1 258 1 217 1 139 2 193 3 46 1 291 1 207 1 263 2 315 2 18 1 177 1 343 1 
178 1 230 1 89 1 44 1 109 4 159 1 160 1 332 1 3 1 139 2 4 1 291 1 207 1 145 1 263 4 315 2 75 1 343 1 322 1 325 1 217 2 193 8 177 1 
178 2 230 1 89 1 44 1 109 6 159 1 160 2 332 1 3 2 139 3 4 1 291 1 207 1 145 1 340 1 263 5 315 4 343 2 75 1 77 1 322 1 325 2 217 2 192 1 193 11 127 1 177 2 18 1 
178 3 230 1 89 1 44 1 109 9 159 1 160 3 332 1 3 1 139 4 4 3 46 1 185 1 291 1 207 1 292 1 145 1 340 2 263 10 209 1 315 6 75 1 343 3 322 1 325 3 192 1 217 3 193 19 127 2 18 1 177 3 131 1 305 2 
178 3 230 1 89 1 44 1 109 10 159 1 160 3 332 1 3 1 139 5 46 1 4 2 185 1 291 1 207 1 292 1 145 1 340 2 263 7 209 1 315 6 75 1 343 3 322 1 325 3 192 1 217 3 193 17 127 2 18 2 177 3 131 1 305 1 
178 1 230 1 89 1 44 1 109 4 159 1 160 1 332 1 3 1 139 2 4 1 291 1 207 1 145 1 263 4 315 2 75 1 343 1 322 1 325 1 217 2 193 8 177 1 
178 1 89 1 44 1 109 6 160 1 3 1 139 2 4 2 185 1 292 1 145 1 340 2 263 6 209 1 315 2 75 1 343 1 325 2 217 1 193 12 127 2 18 1 177 1 131 1 305 2 
178 4 230 1 89 1 44 1 109 10 159 1 160 4 332 1 3 1 139 5 4 2 46 2 185 1 291 1 207 1 292 1 145 1 340 2 263 8 209 1 315 8 343 4 75 1 322 1 325 3 192 1 217 3 193 18 127 2 18 2 131 1 177 4 305 1 
178 4 89 1 44 1 109 9 160 4 3 1 139 6 4 2 46 2 185 1 292 1 145 1 340 3 263 7 209 1 315 8 343 4 75 1 124 1 325 3 217 3 193 16 127 3 18 3 131 1 177 4 305 2 
322 3 109 3 159 1 325 1 217 3 332 1 193 7 139 6 4 1 291 3 207 2 263 4 18 3 
178 4 230 1 89 1 44 1 109 10 159 1 160 4 332 1 3 1 139 4 4 2 46 2 185 1 291 1 207 1 292 1 145 1 340 2 263 8 209 1 315 8 343 4 75 1 322 1 124 1 325 3 217 3 193 18 127 2 18 1 131 1 177 4 305 1 
178 1 322 2 109 5 160 1 325 2 217 3 332 1 139 5 193 10 4 2 291 2 145 1 263 5 118 1 315 2 177 1 18 2 343 1 
178 1 109 2 160 1 325 1 193 2 139 1 145 1 340 1 315 2 177 1 18 1 343 1 
178 1 109 2 160 1 325 1 217 1 139 2 193 4 4 1 127 1 145 1 340 1 263 2 315 2 177 1 18 1 343 1 305 1 
178 3 322 1 109 1 160 3 258 1 124 1 217 1 193 3 139 2 46 1 291 1 145 1 263 2 315 6 177 3 18 1 343 3 
178 5 230 1 68 1 44 1 109 16 159 1 160 5 258 1 332 2 3 4 139 12 46 2 4 5 291 3 207 1 336 1 145 1 340 3 263 18 315 10 343 5 75 3 77 1 322 3 124 1 325 5 192 1 217 7 193 34 127 3 283 1 177 5 18 5 305 3 
354 1 85 1 200 1 87 1 223 1 91 1 174 1 
25 1 233 1 174 1 91 1 354 1 85 1 338 1 40 1 223 1 87 1 200 1 21 1 
313 1 23 1 335 1 16 1 261 1 93 1 236 1 265 1 12 1 48 1 57 1 
23 1 241 1 0 1 360 1 54 1 12 1 29 1 91 1 57 1 313 1 354 1 16 1 261 1 87 2 200 2 236 1 265 1 304 1 
255 1 360 2 0 2 29 1 91 2 290 1 313 3 261 1 236 1 265 1 76 1 241 1 37 1 54 1 12 2 57 1 354 1 281 1 16 1 200 2 87 2 201 1 304 1 
255 1 360 2 0 2 29 1 91 2 290 1 313 3 261 2 236 2 265 1 76 1 37 1 189 1 54 1 173 1 12 2 57 2 354 1 281 1 16 1 200 2 87 2 201 1 304 1 
22 1 358 1 289 1 360 1 91 1 313 1 92 1 261 1 262 1 31 1 236 1 34 1 78 1 125 1 54 1 57 1 281 1 352 1 195 1 87 1 200 1 201 1 
23 1 22 2 34 2 121 1 206 1 189 1 0 1 289 1 311 1 323 1 12 1 57 3 290 1 313 4 281 1 16 1 261 3 195 1 31 1 236 3 265 1 76 1 
16 1 261 1 236 1 265 1 57 1 107 1 
23 2 101 1 65 1 0 1 277 1 330 1 12 2 154 1 57 7 184 1 313 3 16 2 261 6 164 1 252 1 236 7 99 1 265 3 107 1 20 1 253 1 
178 2 64 1 230 1 109 3 0 1 360 1 159 1 160 2 332 1 139 2 29 1 91 1 113 1 4 1 313 1 116 1 291 1 117 2 207 1 261 1 263 3 148 2 315 4 164 1 236 1 265 1 343 2 322 1 241 1 123 1 276 1 325 1 54 1 217 2 193 6 12 1 57 1 354 2 16 1 175 1 303 1 200 2 87 2 375 1 177 2 304 1 108 1 
225 1 23 1 22 3 228 1 206 1 289 1 311 1 140 1 313 2 6 1 261 1 146 1 31 1 236 1 149 2 238 1 34 3 121 1 271 2 35 2 240 2 323 2 191 1 194 1 57 1 14 1 195 1 197 1 
65 1 311 1 0 1 279 1 12 1 57 2 313 2 16 1 261 2 164 1 236 2 265 2 107 1 
23 1 189 1 12 1 57 4 313 1 335 1 16 1 261 4 164 1 376 1 236 4 265 1 48 1 
317 1 320 1 0 1 12 1 57 2 184 1 326 1 313 1 281 1 16 1 261 2 236 2 99 1 265 2 
23 1 88 1 16 1 219 1 261 1 30 1 324 1 236 1 265 1 57 1 
313 1 101 1 16 1 261 2 248 1 164 1 236 2 265 1 12 1 154 1 57 2 
23 1 101 1 330 1 12 2 57 5 313 3 281 1 335 1 16 2 261 4 164 1 376 1 236 5 48 1 265 2 20 1 
23 1 101 1 330 1 172 1 12 2 57 5 313 3 281 1 335 1 16 2 261 4 164 1 376 1 236 5 48 1 265 2 
23 1 0 1 360 1 54 1 12 1 29 1 173 1 91 1 57 1 313 1 354 1 16 1 261 1 87 2 200 2 236 1 265 1 304 1 
65 1 0 1 12 1 57 1 184 1 313 1 281 1 16 1 261 1 236 1 99 1 265 2 253 1 
51 1 190 1 278 1 100 1 
231 1 9 1 278 1 
51 1 190 1 100 1 278 2 
51 1 22 1 34 1 228 1 231 1 190 1 111 1 9 1 100 1 278 2 
43 1 93 1 329 1 97 1 
43 1 143 1 329 1 79 1 137 1 97 1 166 1 
24 1 229 1 137 1 
205 1 43 1 122 2 143 1 329 1 79 1 137 3 361 1 97 1 74 1 56 1 166 3 
43 1 143 1 329 1 79 1 137 2 96 1 97 1 138 1 166 2 
205 1 43 1 79 1 137 1 337 1 143 1 339 1 219 1 30 1 166 1 204 1 
205 1 43 1 143 1 79 1 137 1 97 1 166 1 
205 1 143 1 329 1 79 1 137 1 97 2 166 1 
205 1 43 1 143 2 79 2 110 1 137 2 362 1 97 1 224 1 166 2 
205 1 43 2 309 1 329 1 79 1 137 3 138 2 143 1 129 1 97 1 356 1 166 3 204 1 
205 1 43 1 329 1 79 1 137 2 324 1 349 1 138 1 337 1 219 2 143 1 30 1 97 1 367 1 166 2 
205 1 43 2 151 1 329 1 79 2 137 4 138 2 143 2 96 1 97 1 356 1 166 4 204 1 
205 1 43 1 143 1 329 1 79 1 137 1 97 1 166 1 
43 3 122 1 329 2 79 1 137 4 361 1 138 2 161 1 143 1 97 2 74 1 356 1 166 4 204 1 
205 1 43 1 370 1 143 1 329 1 79 1 137 2 199 1 97 1 138 1 213 1 166 2 
205 1 43 1 122 2 143 1 329 1 196 1 79 1 137 3 361 2 97 1 74 1 166 3 
43 2 106 1 331 2 246 1 
205 1 143 1 79 1 137 1 176 1 166 1 
205 1 43 1 129 1 143 1 329 1 79 1 137 2 97 1 138 1 166 2 
274 1 
205 1 43 1 143 1 329 1 79 1 137 1 97 1 166 1 
205 1 43 1 129 1 122 1 143 1 329 1 79 1 137 3 97 1 138 1 166 3 
43 1 161 1 356 1 204 1 
43 1 97 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 52 61 55 59 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 143 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 143 355 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 4 2 1 123 9 338 7 225 2 167 5 33 1 296 1 297 1 260 9 148 1 280 1 365 2 203 1 84 1 206 1 236 1 111 3 247 1 376 1 326 2 115 1 291 1 118 1 
253 4 2 1 123 9 338 7 225 2 167 5 33 1 296 1 297 1 260 9 148 1 280 1 365 2 203 1 84 1 206 1 236 1 111 3 247 1 376 1 326 2 115 1 291 1 118 1 
253 4 2 1 123 9 338 6 164 1 225 2 33 2 167 5 296 2 297 1 260 9 148 1 280 1 365 2 203 1 84 2 206 1 111 3 238 1 324 1 247 1 376 2 326 2 115 1 380 1 99 1 118 1 28 1 
253 4 2 1 123 9 338 6 164 1 225 2 33 2 167 5 296 2 297 1 260 9 148 1 280 1 365 2 203 1 84 2 206 1 111 3 238 1 324 1 247 1 376 2 326 2 115 1 380 1 99 1 118 1 28 1 
253 5 2 1 123 10 338 7 164 1 225 2 33 2 167 6 296 2 297 1 260 10 148 1 280 1 365 2 203 1 84 2 206 1 111 4 238 1 324 1 247 1 376 2 326 2 115 1 380 1 99 1 118 1 28 1 
253 3 2 1 123 7 338 4 164 1 225 2 33 2 167 4 296 2 297 1 260 7 148 1 280 1 365 1 203 1 84 2 206 1 111 2 238 1 324 1 376 2 326 2 115 1 380 1 99 1 118 1 28 1 
253 2 2 1 111 1 123 4 338 3 225 1 247 1 376 1 167 3 33 1 296 1 326 1 260 4 115 1 148 1 280 1 365 2 118 1 
71 1 266 1 238 1 123 2 225 1 167 1 376 1 296 1 363 1 326 1 260 2 115 1 148 1 99 1 118 1 84 1 
206 1 253 1 111 1 123 3 338 1 225 2 167 2 326 2 260 3 115 1 148 1 118 1 84 1 
265 1 347 1 161 1 
265 1 39 1 157 2 
378 2 249 2 284 2 49 2 12 2 348 1 32 1 272 2 
0 1 356 1 56 1 335 1 8 1 337 1 223 1 32 1 319 1 109 2 263 2 277 1 323 2 11 1 12 3 300 1 126 1 83 1 86 1 63 1 16 1 284 3 178 1 90 1 286 1 348 1 153 2 114 2 310 1 378 2 249 2 250 1 49 2 186 1 187 1 312 1 272 2 
276 1 378 1 249 1 284 1 49 1 12 1 348 1 240 1 215 1 272 1 
265 1 347 1 89 1 284 1 181 1 240 1 166 1 352 1 232 1 49 1 343 1 12 1 329 1 354 1 
265 1 347 1 89 1 284 1 240 1 249 1 378 1 352 1 232 1 49 1 343 2 12 1 329 1 354 2 272 1 
144 1 343 1 107 1 354 1 375 1 
265 1 347 1 343 2 107 1 130 1 267 1 354 2 375 1 
343 1 354 1 375 1 
284 1 107 1 348 1 240 1 276 1 249 1 378 1 343 1 49 1 12 1 215 1 354 1 188 1 272 1 
265 1 
265 1 347 1 343 2 107 1 130 1 360 1 354 2 375 1 
101 2 265 1 347 1 237 2 87 2 107 2 19 1 42 1 130 1 375 2 171 1 214 1 264 1 69 1 343 5 279 1 379 1 354 5 136 1 
161 1 32 1 
284 2 239 1 32 2 249 1 378 1 49 2 12 2 303 1 272 1 
141 1 36 1 330 1 
356 1 284 1 153 1 223 1 32 1 114 1 319 1 310 1 263 1 186 1 277 1 12 1 172 1 11 1 312 1 300 1 
356 1 284 2 141 1 256 1 129 1 153 1 223 1 114 1 319 1 310 1 378 1 263 1 277 1 49 1 186 1 11 1 12 2 300 1 312 1 272 1 
121 1 284 5 256 2 239 1 129 1 181 1 32 1 340 1 168 1 378 4 249 1 49 5 12 5 272 4 
378 2 284 2 49 2 12 2 240 1 215 1 234 1 272 2 
249 1 378 3 284 3 49 3 256 1 12 3 32 1 272 3 
378 1 284 1 49 1 12 1 240 1 215 1 272 1 
378 1 249 1 284 1 49 1 12 1 239 1 240 1 303 1 272 1 
356 1 72 1 256 1 8 1 337 1 223 1 32 1 319 1 109 1 263 1 232 1 277 1 343 1 323 2 11 1 12 4 300 1 126 1 86 1 63 1 89 1 178 1 284 4 90 1 179 1 239 1 286 1 129 1 348 1 153 1 240 1 114 1 310 1 352 1 249 2 378 3 250 1 49 3 186 1 187 1 329 1 312 1 354 1 272 3 
340 1 378 1 284 2 49 2 12 2 256 1 181 1 32 1 272 1 
265 1 89 1 284 3 179 1 239 1 256 2 129 1 240 1 212 1 249 1 378 3 352 1 232 1 343 1 49 3 12 3 329 1 354 1 272 3 
284 2 141 1 256 1 239 1 249 1 378 2 49 2 12 2 330 1 272 2 
356 1 284 1 153 1 223 1 32 1 114 1 319 1 310 1 263 1 186 1 277 1 12 1 11 1 312 1 300 1 
284 1 105 1 153 1 223 1 32 1 242 1 114 1 319 1 310 1 263 1 186 1 12 1 11 1 312 1 300 1 
141 2 335 2 8 1 337 1 109 4 323 2 36 2 149 1 126 1 86 1 63 1 90 2 286 1 209 1 65 1 20 1 21 1 287 1 289 1 251 1 98 1 330 2 52 1 100 1 
378 1 232 1 284 1 49 1 12 1 240 1 234 1 272 1 
333 1 245 1 
333 1 245 1 
106 1 14 1 
106 1 14 1 
106 1 14 1 
333 1 180 1 245 1 
333 1 18 1 245 1 
103 1 333 2 106 1 14 1 75 1 245 2 
333 1 180 1 245 1 
333 1 180 1 245 1 
333 1 93 1 245 1 
333 1 93 1 245 1 
333 1 93 1 245 1 
218 1 333 1 255 1 316 1 160 1 358 1 32 1 262 1 322 1 343 1 233 1 12 2 202 1 283 1 127 1 284 2 18 1 245 1 378 2 155 1 290 1 49 2 354 1 272 2 
103 1 331 1 265 1 176 1 218 2 333 2 283 2 40 2 7 1 255 3 245 2 198 1 290 2 322 1 343 2 116 1 202 2 354 2 381 1 
376 1 33 1 296 1 
376 1 296 1 266 1 
68 1 33 2 296 3 266 1 113 1 216 1 
68 1 33 1 296 2 17 1 266 1 113 1 
68 2 33 1 296 2 266 1 113 1 
101 1 1 2 107 4 227 1 362 1 262 1 342 1 61 1 343 5 233 1 64 1 15 1 265 2 87 1 237 1 347 1 39 1 130 1 375 1 289 1 185 2 351 1 155 1 96 2 214 2 69 1 157 3 98 1 354 5 52 1 136 3 100 1 
101 2 1 6 191 1 293 1 107 7 227 2 144 5 171 1 342 2 61 3 233 4 343 9 37 1 15 1 265 5 347 1 237 2 87 2 39 3 91 5 130 1 375 6 23 1 94 1 289 3 185 6 134 1 214 6 69 1 157 9 98 3 354 9 52 3 136 8 100 3 
101 1 1 2 107 2 227 1 362 1 171 1 342 1 61 1 343 3 233 1 265 3 347 1 87 1 237 1 39 2 289 1 185 2 351 1 96 1 214 2 157 4 98 1 354 3 136 3 52 1 100 1 
101 1 1 4 293 1 107 3 227 1 362 1 171 1 342 1 61 2 343 4 233 2 265 4 347 1 87 1 237 1 39 3 94 1 289 2 185 4 134 1 351 1 96 2 214 4 157 7 98 2 354 4 136 5 52 2 100 2 
319 1 196 1 161 1 
319 1 307 1 
349 1 
319 1 11 1 223 1 
319 1 132 1 
319 1 11 1 
319 3 70 1 110 1 11 1 196 2 223 1 
4 2 5 1 90 3 57 1 122 1 65 2 31 1 43 1 335 4 243 1 109 7 26 1 251 3 13 1 98 1 100 1 189 1 
4 2 5 1 90 3 57 1 122 1 65 2 31 1 43 1 335 4 243 1 109 7 26 1 251 3 13 1 98 1 100 1 189 1 
4 2 5 1 90 3 57 1 122 1 65 2 31 1 43 1 335 4 243 1 109 7 26 1 10 1 251 3 13 1 98 1 100 1 189 1 
217 1 4 3 5 1 122 1 57 5 335 16 31 2 109 31 61 3 323 2 13 1 126 1 86 1 63 1 368 3 38 1 369 1 90 15 285 1 286 1 43 2 65 5 243 2 26 1 184 1 289 3 311 4 251 10 98 4 270 1 52 3 189 2 100 4 271 1 
120 1 4 2 5 1 57 1 122 1 335 5 31 1 109 9 323 4 126 2 86 2 63 2 370 1 369 1 90 4 286 2 43 1 65 3 243 1 26 1 251 4 98 1 100 1 189 1 
123 2 338 1 225 1 167 1 33 1 296 2 263 1 260 2 231 1 146 1 148 1 300 1 346 1 84 1 174 1 367 1 266 1 128 1 371 1 153 1 22 1 114 1 376 1 377 1 326 1 115 1 312 1 252 1 118 1 216 1 
123 3 338 2 225 1 167 1 33 1 229 1 259 1 296 2 263 1 260 3 231 1 146 1 148 1 300 1 79 1 84 1 367 1 266 1 128 1 371 1 153 1 22 1 114 1 376 1 377 1 326 1 115 1 312 1 252 1 216 1 
123 2 338 2 167 1 229 1 259 1 33 1 296 2 263 1 260 2 231 1 148 1 300 1 84 1 367 1 266 1 128 1 371 1 153 1 22 1 114 1 376 1 377 1 115 1 312 1 216 1 
194 1 123 1 225 1 319 1 263 1 260 1 11 1 300 1 79 1 84 2 367 2 128 2 153 1 22 2 44 1 114 1 131 1 47 1 326 1 268 1 186 1 312 1 138 1 
123 1 225 1 33 1 229 1 296 2 263 1 260 1 231 1 146 1 300 1 84 1 174 1 367 1 266 1 128 1 371 1 153 1 22 1 114 1 376 1 377 1 326 1 312 1 252 1 118 1 216 1 
97 1 
101 1 294 2 339 1 145 2 60 2 343 4 344 1 12 2 301 3 205 1 265 1 304 1 347 1 306 1 348 1 210 3 352 1 214 1 69 1 269 5 215 1 354 4 272 1 158 1 166 1 276 1 34 1 232 1 82 1 175 1 237 1 87 1 89 1 284 2 39 2 240 2 181 1 373 1 130 2 375 5 45 1 378 1 249 1 49 2 329 1 135 3 50 2 188 1 136 1 
101 1 294 2 339 1 145 2 60 2 343 4 344 1 12 2 301 3 205 1 265 1 304 1 347 1 306 1 348 1 210 3 352 1 214 1 69 1 269 5 215 1 354 4 272 1 158 1 166 1 276 1 34 1 232 1 82 1 175 1 237 1 87 1 89 1 284 2 39 2 240 2 181 1 373 1 130 2 375 5 45 1 378 1 249 1 49 2 329 1 135 3 50 2 188 1 136 1 
139 2 101 1 339 1 145 2 261 2 60 2 343 4 12 1 344 1 301 2 205 1 265 1 347 1 210 2 352 1 214 1 69 1 269 4 157 2 354 4 158 1 274 1 166 1 34 1 232 1 82 1 237 1 87 1 89 1 284 1 240 1 181 1 130 2 375 4 246 1 49 1 329 1 135 2 136 1 
101 1 3 1 140 1 294 2 339 1 145 2 342 1 298 1 263 2 60 2 343 5 11 1 344 1 12 1 301 2 300 1 205 1 265 2 347 1 210 2 153 2 114 2 352 1 214 2 69 1 157 2 269 4 312 1 354 5 158 1 166 1 319 1 34 1 232 1 82 1 175 1 237 1 87 1 89 1 39 2 284 1 181 1 240 1 130 3 44 1 375 6 246 1 47 1 186 2 49 1 329 1 135 2 50 2 51 1 136 2 
158 1 360 1 166 1 339 1 34 1 232 1 343 3 12 1 344 1 205 1 89 1 284 1 210 1 181 1 240 1 130 1 375 2 352 1 49 1 329 1 269 2 354 3 
158 1 360 1 166 1 339 1 34 1 232 1 343 3 12 1 344 1 301 1 205 1 265 1 347 1 89 1 284 1 181 1 240 1 130 1 375 1 352 1 49 1 329 1 269 3 354 3 
158 1 360 1 166 1 339 1 34 1 232 1 343 3 12 1 344 1 301 1 205 1 265 1 347 1 89 1 284 1 210 1 181 1 240 1 130 1 375 2 352 1 49 1 329 1 269 3 135 1 354 3 
101 1 294 2 339 1 145 2 60 2 343 5 12 2 344 1 301 2 205 1 265 1 304 1 347 1 306 1 348 1 210 4 352 1 214 1 69 1 269 4 215 1 354 5 272 1 158 1 360 1 166 1 276 1 34 1 232 1 82 1 175 1 237 1 87 1 89 1 284 2 39 2 240 2 181 1 373 1 130 3 375 7 45 1 378 1 249 1 48 1 49 2 329 1 135 4 50 2 188 1 136 1 
101 1 294 2 339 1 145 2 60 2 343 4 12 1 344 1 301 2 205 1 265 2 347 1 210 2 352 1 214 1 69 1 269 4 157 2 354 4 158 1 166 1 34 1 232 1 82 1 175 1 237 1 87 1 89 1 284 1 39 2 240 1 181 1 130 2 375 4 246 1 49 1 329 1 135 2 50 2 136 1 
101 1 158 1 294 2 166 1 339 1 145 2 60 2 34 1 232 1 343 4 12 1 344 1 301 2 82 1 205 1 265 1 175 1 304 1 347 1 87 1 237 1 89 1 39 2 284 1 210 2 373 1 181 1 240 1 130 2 375 4 45 1 352 1 214 1 49 1 69 1 329 1 135 2 269 4 50 2 354 4 136 1 
101 1 158 1 294 2 166 1 339 1 145 2 60 2 34 1 232 1 343 4 12 1 344 1 301 2 82 1 205 1 265 1 175 1 304 1 347 1 87 1 237 1 89 1 39 2 284 1 210 2 373 1 181 1 240 1 130 2 375 4 45 1 352 1 214 1 49 1 69 1 329 1 135 2 269 4 50 2 354 4 136 1 
139 2 101 1 158 1 274 1 166 1 339 1 145 2 261 2 60 2 34 1 125 1 232 1 343 4 12 1 344 1 301 2 82 1 205 1 265 1 347 1 87 1 237 1 89 1 284 1 210 2 373 1 181 1 240 1 130 2 375 4 352 1 214 1 49 1 69 1 329 1 135 2 157 2 269 4 354 4 136 1 292 1 
4 1 5 1 141 1 122 1 335 3 161 1 8 1 337 1 32 2 109 6 323 2 36 1 149 1 126 1 86 1 63 1 90 3 286 1 65 2 243 1 26 1 251 2 98 1 330 1 189 1 100 1 
102 1 217 1 315 1 141 11 57 1 335 8 162 1 8 2 337 1 32 1 109 14 77 1 61 2 323 4 36 11 126 2 86 2 63 2 16 1 368 3 38 1 90 6 286 2 65 1 66 1 289 1 187 1 251 2 311 3 98 2 52 2 330 4 100 1 
356 1 256 1 335 1 223 1 8 1 337 1 32 1 9 1 319 1 109 2 263 1 321 1 277 1 11 1 172 1 12 2 323 2 300 1 126 1 63 1 86 1 16 1 284 2 90 1 286 1 153 1 129 1 114 1 66 1 46 1 310 1 378 1 186 1 49 1 187 1 312 1 330 1 272 1 
4 1 5 1 141 7 256 1 57 4 335 10 197 1 337 3 8 3 109 20 263 3 61 2 12 3 11 2 300 2 63 3 152 2 16 1 65 4 153 3 114 3 66 1 350 2 26 1 310 2 156 2 312 2 272 1 356 2 122 1 223 2 165 1 32 2 319 2 229 1 277 2 323 6 36 7 81 2 126 3 86 3 284 3 178 2 90 10 41 1 286 3 129 1 243 1 289 2 378 1 186 1 49 1 187 1 251 8 98 3 330 7 52 2 189 1 100 3 
0 2 54 1 221 1 159 1 256 1 193 1 335 1 8 2 337 2 319 3 229 1 109 2 263 8 12 1 323 4 11 2 300 2 149 1 346 1 126 2 86 2 63 2 16 1 88 1 284 1 90 1 286 2 372 1 153 8 44 1 288 1 114 7 47 1 378 1 49 1 186 2 187 1 312 2 272 1 
141 1 335 1 8 1 337 1 228 1 109 3 61 1 323 2 12 1 36 1 126 1 86 1 63 1 284 1 90 2 239 1 286 1 65 1 66 1 289 1 249 1 378 1 49 1 251 1 98 1 330 1 52 1 272 1 100 1 
63 1 86 1 141 1 57 1 286 1 20 1 335 2 337 1 8 1 109 2 323 2 251 1 36 1 98 1 149 1 330 1 126 1 52 1 
63 1 86 1 141 1 90 2 286 1 65 1 209 1 337 1 8 1 109 2 289 1 323 2 251 1 36 1 149 1 330 1 126 1 100 1 
141 2 57 1 335 2 8 1 337 1 109 4 61 1 323 2 36 2 149 1 126 1 86 1 63 1 90 2 286 1 65 1 289 1 251 2 98 1 52 1 330 2 100 1 
63 1 86 1 54 1 141 1 57 1 286 1 20 1 335 2 337 1 8 1 109 2 323 2 251 1 36 1 98 1 330 1 126 1 52 1 
63 1 86 1 54 1 141 1 90 2 286 1 65 1 209 1 337 1 8 1 109 2 289 1 323 2 251 1 36 1 330 1 126 1 100 1 
54 1 141 2 57 1 335 2 8 1 337 1 109 4 61 1 323 2 36 2 126 1 86 1 63 1 90 2 286 1 65 1 289 1 251 2 98 1 52 1 330 2 100 1 
141 2 57 1 335 2 8 1 337 1 109 4 61 1 323 2 36 2 126 1 86 1 63 1 90 2 286 1 65 1 289 1 251 2 98 1 52 1 330 2 100 1 
356 1 335 1 223 1 337 1 8 1 32 1 319 1 109 2 263 1 277 1 11 1 12 1 323 2 300 1 126 1 63 1 86 1 16 1 178 1 284 1 90 1 286 1 153 1 114 1 310 1 186 1 187 1 312 1 
105 1 335 1 223 1 337 1 8 1 32 1 319 1 109 2 263 1 11 1 12 1 323 2 300 1 126 1 63 1 86 1 16 1 284 1 90 1 286 1 153 1 242 1 114 1 310 1 27 1 186 1 187 1 312 1 
141 2 57 1 335 2 8 1 337 1 109 4 61 1 323 2 36 2 126 1 86 1 63 1 90 2 286 1 65 1 66 1 289 1 251 2 98 1 52 1 330 2 100 1 
356 1 141 2 57 1 335 2 223 1 337 1 8 1 319 1 109 4 263 1 61 1 277 1 11 1 12 1 323 2 36 2 300 1 346 1 126 1 152 1 63 1 86 1 178 1 284 1 90 2 286 1 65 1 153 1 114 1 289 1 310 1 251 2 98 1 312 1 330 2 52 1 100 1 
141 1 57 1 335 2 8 1 337 1 109 3 169 1 61 1 323 2 12 1 36 1 126 1 86 1 63 1 284 1 90 1 239 1 286 1 66 1 289 1 249 1 378 1 49 1 251 1 98 1 52 1 330 1 100 1 272 1 
120 1 217 3 219 1 55 1 4 1 29 1 5 1 122 1 57 4 142 1 335 20 108 1 275 1 109 41 61 4 278 1 323 6 201 4 147 1 126 3 86 3 63 3 368 3 177 1 38 1 112 1 369 1 90 21 286 3 65 4 374 1 243 1 26 1 133 1 289 4 311 4 251 8 98 5 353 1 52 4 189 1 313 2 100 5 
120 1 217 3 219 1 55 1 4 1 29 1 5 1 122 1 57 3 142 1 335 20 108 1 275 1 109 38 61 4 278 1 323 8 201 4 147 1 126 4 86 4 63 4 368 3 177 1 38 1 112 1 369 2 90 18 286 4 65 4 374 1 243 1 26 1 133 1 289 3 311 4 251 7 98 5 353 1 52 4 189 1 313 2 100 4 
120 1 217 2 55 1 4 1 29 1 5 1 122 1 57 7 142 1 335 27 162 2 108 1 275 1 109 52 61 7 278 1 323 4 201 4 147 1 126 2 86 2 63 2 368 4 38 2 112 1 369 1 90 25 286 2 65 7 374 1 243 1 26 1 133 1 289 7 311 4 251 14 98 8 353 1 52 7 189 1 313 1 100 8 
120 1 217 1 55 1 57 2 335 6 59 1 109 13 61 2 278 1 323 4 201 1 147 1 126 2 86 2 63 2 368 1 177 1 38 1 90 7 286 2 65 2 374 1 289 2 311 2 251 4 98 2 52 2 313 1 100 2 
120 1 217 2 55 1 29 1 57 2 142 1 335 14 108 1 275 1 109 26 61 3 278 1 323 6 201 4 147 2 126 3 86 3 63 3 368 2 112 1 369 2 90 12 286 3 65 2 374 1 133 1 289 2 251 4 311 2 98 3 353 1 52 3 100 2 313 2 
198 1 103 1 331 1 230 1 218 1 283 1 333 1 290 1 202 1 245 1 
18 1 160 1 
218 1 283 1 333 1 290 1 80 1 202 1 295 1 308 1 245 1 
180 1 195 1 
75 1 173 1 93 1 
103 1 331 1 265 1 218 1 333 1 283 1 40 1 7 1 255 2 245 1 198 1 290 1 322 1 343 1 116 1 354 1 202 1 381 1 
103 1 331 1 265 1 218 1 333 1 283 1 40 1 7 1 255 2 245 1 198 1 290 1 322 1 343 1 116 1 354 1 202 1 381 1 
103 1 331 1 265 1 218 1 333 1 283 1 40 1 7 1 255 2 245 1 198 1 290 1 322 1 343 1 116 1 354 1 202 1 381 1 
180 1 195 1 75 1 
180 1 195 1 75 1 
173 1 93 1 
75 1 173 1 93 1 
127 1 358 1 
218 1 333 1 192 1 255 1 107 1 316 1 160 1 358 1 32 1 262 1 343 1 233 1 12 2 202 1 283 1 127 1 284 2 40 1 18 1 245 1 155 1 378 2 290 1 49 2 116 1 354 1 272 2 
0 2 334 1 193 1 335 1 8 1 337 1 319 1 109 2 263 2 11 1 364 1 12 2 323 2 299 1 300 1 302 1 126 1 85 1 63 1 86 1 16 1 284 2 90 1 286 1 372 1 153 2 66 1 114 2 49 2 187 1 312 1 
367 1 266 1 30 1 371 1 153 2 114 2 376 1 33 1 229 1 296 2 377 1 263 2 300 1 312 1 281 1 346 1 252 1 216 1 53 1 
367 1 266 1 371 1 153 1 114 1 76 1 376 1 33 1 229 1 296 2 377 1 263 1 312 1 300 1 252 1 216 1 53 1 
367 1 153 1 208 1 44 1 114 1 319 1 131 1 47 1 263 1 186 1 11 1 300 1 312 1 281 1 
367 1 266 1 30 1 371 1 153 1 114 1 376 1 33 1 229 1 296 2 377 1 263 1 300 1 312 1 281 1 252 1 216 1 53 1 
357 1 
356 1 223 1 337 1 8 1 32 1 319 1 109 1 263 1 277 1 323 2 12 3 11 1 300 1 126 1 86 1 63 1 284 3 178 1 90 1 286 1 153 1 348 1 114 1 310 1 378 2 249 2 250 1 186 1 49 2 187 1 312 1 272 2 
101 1 265 4 1 2 237 1 87 1 347 2 4 1 39 2 140 1 185 2 342 1 214 2 69 1 157 4 136 1 
265 1 347 1 214 1 279 1 379 1 161 1 136 1 
101 1 265 2 175 1 347 1 237 1 87 1 39 1 294 1 130 1 375 1 214 1 343 1 69 1 157 1 50 1 354 1 136 1 
190 1 101 4 1 6 140 1 196 2 342 2 263 3 200 1 110 1 61 2 343 5 11 3 300 4 346 1 204 2 150 2 265 8 347 2 305 2 307 3 153 3 114 3 67 2 214 8 69 4 157 12 312 3 354 5 359 1 223 3 319 10 320 2 279 1 81 2 235 2 237 4 87 4 89 2 39 6 182 2 130 3 375 5 248 1 132 2 185 6 289 2 186 1 327 2 379 1 98 2 136 9 52 2 137 1 100 2 
101 2 1 5 217 1 140 1 257 1 142 1 108 1 275 1 342 1 61 2 343 1 150 1 265 5 305 2 87 2 237 2 368 1 347 2 39 3 211 1 130 1 375 1 185 5 133 1 289 2 214 5 69 2 157 6 311 1 98 2 353 1 354 1 136 8 52 2 100 2 
101 1 104 1 5 1 276 1 343 1 12 1 150 1 305 2 87 1 237 1 284 1 348 1 240 1 243 1 45 1 249 1 378 1 214 2 69 1 49 1 98 2 215 1 354 1 188 1 136 2 189 1 100 1 272 1 
101 1 265 1 237 1 87 1 347 1 214 1 69 1 379 1 279 1 136 1 
265 5 1 5 305 2 39 5 185 5 289 2 61 2 214 5 157 10 98 2 81 1 52 2 136 5 150 1 100 2 
265 1 347 1 343 1 354 1 130 1 375 1 
101 2 220 1 3 1 140 2 359 2 319 1 171 1 298 1 263 4 342 2 343 3 11 1 300 1 87 2 237 2 153 4 130 2 44 1 114 4 375 4 248 1 47 1 214 2 69 1 186 2 312 1 354 3 136 2 119 1 
218 1 283 1 117 1 
198 1 332 1 218 1 283 1 358 1 
218 1 283 1 117 1 
218 1 283 1 117 1 
95 1 218 1 283 1 
95 1 218 1 283 1 
95 1 218 1 283 1 
218 1 283 1 
333 1 245 1 
120 1 217 1 4 1 5 1 122 1 142 1 335 4 109 8 323 2 126 1 86 1 63 1 368 1 90 4 286 1 65 2 243 1 26 1 311 1 251 2 98 1 100 1 189 1 
120 1 217 1 4 1 5 1 254 1 122 1 57 1 142 1 335 6 109 11 61 1 323 4 126 2 86 2 63 2 368 1 38 1 90 5 286 2 65 2 243 1 26 1 311 2 251 3 98 2 52 1 100 1 189 1 
120 1 217 1 4 1 5 1 254 1 122 1 57 1 142 1 335 9 108 1 275 1 109 19 61 2 323 6 126 3 86 3 63 3 368 1 369 1 90 10 286 3 65 3 243 1 26 1 133 1 289 2 311 1 251 4 98 3 353 1 52 2 189 1 100 3 
120 1 217 1 4 1 5 1 254 1 122 1 57 2 142 1 335 10 108 1 275 1 109 17 61 2 323 6 126 3 86 3 63 3 368 1 369 1 90 7 286 3 65 3 243 1 26 1 133 1 289 1 311 1 251 5 98 3 353 1 52 2 189 1 100 2 
120 1 217 1 4 1 5 1 122 1 142 1 335 4 109 8 323 2 126 1 86 1 63 1 368 1 90 4 286 1 65 2 243 1 26 1 311 1 251 2 98 1 100 1 189 1 
120 1 217 1 57 1 142 1 335 6 108 1 275 1 109 12 61 2 323 2 126 1 86 1 63 1 368 1 90 6 286 1 65 1 133 1 289 2 311 1 251 2 98 2 353 1 52 2 100 2 
120 1 217 1 4 1 5 1 254 1 122 1 57 2 142 1 335 10 108 1 275 1 109 18 61 2 323 8 126 4 86 4 63 4 368 1 369 2 90 8 286 4 65 3 243 1 26 1 133 1 289 1 311 1 251 5 98 3 353 1 52 2 189 1 100 2 
120 1 217 1 57 3 142 1 335 9 108 1 275 1 109 16 61 3 323 8 126 4 86 4 63 4 368 1 177 1 369 2 90 7 286 4 65 3 133 1 289 2 311 1 251 6 98 3 353 1 52 3 100 2 
5 1 90 4 122 2 57 3 65 3 335 3 243 3 109 7 26 1 251 6 98 1 100 1 189 3 
120 1 217 1 4 1 5 1 122 1 57 1 142 1 335 10 108 1 275 1 109 18 61 2 323 8 126 4 86 4 63 4 368 1 177 1 369 2 90 8 286 4 65 3 243 1 26 1 133 1 289 1 311 1 251 4 98 3 353 1 52 2 189 1 100 2 
63 2 86 2 4 1 5 1 369 1 90 4 57 1 122 1 286 2 335 4 65 2 243 1 109 8 26 1 323 4 251 3 98 1 126 2 100 1 189 1 
109 6 26 1 4 1 5 1 90 3 122 1 251 2 335 3 98 1 65 2 161 1 243 1 100 1 189 1 
63 1 86 1 254 1 90 2 57 1 286 1 65 1 335 2 109 4 289 1 61 1 323 2 251 2 98 1 126 1 52 1 100 1 
217 1 368 1 38 1 90 4 57 1 65 1 335 3 109 7 289 1 61 1 311 2 251 2 98 1 52 1 100 1 
4 1 315 1 5 1 122 1 57 4 335 11 162 1 109 23 61 2 323 4 126 2 63 2 86 2 207 1 368 2 38 1 369 2 90 12 286 2 65 5 243 2 26 1 289 2 251 9 311 2 98 3 52 2 189 2 100 3 
109 1 90 1 311 1 
109 1 368 1 335 1 
86 1 63 1 254 1 90 3 57 1 286 1 335 3 65 2 109 6 289 1 61 1 323 2 251 3 98 1 81 1 126 1 52 1 100 1 
120 1 217 1 57 1 142 1 335 6 108 1 275 1 109 12 61 2 323 2 126 1 86 1 63 1 368 1 90 6 286 1 65 1 133 1 289 2 311 1 251 2 98 2 353 1 52 2 100 2 
5 1 90 3 57 1 335 3 65 1 243 1 109 6 251 2 98 1 100 1 189 1 
63 1 86 1 207 1 369 1 90 2 57 1 122 1 286 1 335 1 65 1 243 1 109 3 26 1 323 2 251 2 126 1 189 1 
86 1 63 1 120 1 104 1 5 1 90 5 57 2 286 1 65 3 335 5 243 2 109 10 323 2 251 5 98 2 126 1 189 2 100 2 
120 1 63 1 86 1 57 1 286 1 335 2 109 2 323 2 251 1 98 1 126 1 52 1 
120 1 63 1 86 1 90 2 57 1 286 1 65 1 335 2 109 4 289 1 61 1 323 2 251 2 98 1 126 1 52 1 100 1 
120 1 63 3 86 3 207 1 177 1 369 1 90 2 57 1 286 3 65 1 335 1 243 1 109 3 323 6 251 2 126 3 189 1 
120 1 217 1 4 1 5 2 254 1 122 1 57 5 335 16 109 34 61 3 323 10 126 5 86 5 63 5 207 1 368 3 177 1 38 1 369 2 90 18 286 5 65 7 243 3 26 1 184 1 289 3 311 4 251 12 98 5 270 1 52 3 189 3 271 1 100 5 
143 1 
226 1 325 1 170 1 345 1 355 1 143 1 
319 1 47 1 263 1 186 1 11 1 300 1 312 1 153 1 161 1 44 1 114 1 
284 2 256 1 153 1 223 1 32 1 114 1 319 1 310 1 378 1 263 1 49 1 186 1 277 1 11 1 12 2 300 1 312 1 272 1 
284 2 256 1 153 1 240 1 359 1 223 2 32 1 114 1 67 1 319 3 132 1 310 1 378 2 263 1 232 1 49 2 277 1 329 1 11 2 12 2 300 1 312 1 272 1 
256 1 359 1 223 2 32 1 124 1 319 3 263 2 232 1 12 2 11 2 300 1 284 2 153 2 240 1 242 1 114 2 67 1 132 1 310 1 378 2 49 2 329 1 312 1 272 1 
196 1 359 1 223 1 124 1 319 4 361 1 263 3 343 2 11 1 300 1 151 1 265 1 347 1 89 1 307 1 153 3 375 1 114 3 67 1 132 1 186 1 312 1 354 2 
235 1 265 1 347 1 89 1 307 1 153 3 359 1 196 1 223 1 124 1 114 3 375 1 67 1 319 4 132 1 263 3 186 1 343 2 11 1 300 1 312 1 354 2 
263 1 221 1 300 1 312 1 153 1 114 1 
0 1 88 1 221 1 159 1 372 1 153 7 223 1 241 1 288 1 114 6 244 1 319 3 229 1 309 1 263 7 110 1 186 2 11 2 312 2 300 3 346 1 
356 1 4 1 5 1 141 1 122 1 256 1 335 3 223 1 8 2 337 2 32 2 319 1 109 6 263 1 277 1 11 1 364 1 12 2 323 4 36 1 300 1 346 1 126 2 63 2 86 2 152 1 284 2 178 1 90 3 286 2 65 2 153 1 243 1 66 1 114 1 26 1 310 1 378 1 156 1 49 1 251 2 98 1 312 1 330 1 100 1 189 1 272 1 
101 2 107 1 196 1 319 2 263 1 343 3 279 1 204 1 235 1 265 1 347 1 87 2 237 2 89 1 307 1 153 1 182 1 130 1 114 1 375 2 248 1 214 1 186 1 69 2 327 1 379 1 354 3 136 1 
221 1 153 2 196 1 223 1 114 2 319 2 263 2 200 1 110 1 11 1 312 1 300 2 346 1 
153 4 44 1 124 1 114 4 319 1 47 1 263 4 186 1 328 1 11 1 300 1 312 1 346 1 
314 1 153 2 359 1 223 1 165 1 241 1 114 2 244 1 318 1 319 1 263 2 11 1 312 1 300 2 
376 1 296 1 263 1 266 1 186 1 371 1 300 1 312 1 153 1 114 1 
319 1 229 1 263 2 11 1 300 1 312 1 372 1 153 2 346 1 302 1 114 2 
88 1 159 1 153 5 372 1 359 1 44 1 114 4 319 3 47 1 263 5 186 1 328 1 11 2 312 2 300 2 346 1 
159 1 153 5 372 1 359 1 336 1 44 1 114 4 319 3 47 1 263 5 186 1 328 1 11 2 312 2 300 2 346 1 
284 2 256 1 153 1 223 1 32 1 242 1 114 1 319 1 310 1 378 1 263 1 49 1 186 1 11 1 12 2 300 1 312 1 272 1 
153 1 359 1 223 1 241 1 114 1 244 1 319 1 309 1 263 1 110 1 11 1 312 1 300 2 
85 1 341 1 334 1 284 1 49 1 12 1 299 1 78 1 258 1 
74 1 73 1 78 1 
341 1 258 1 78 1 32 1 317 1 
265 1 347 1 89 1 179 1 107 1 73 1 74 1 258 2 240 1 32 1 317 2 25 1 341 2 352 1 232 1 343 2 329 1 78 1 354 2 
167 1 297 1 260 3 326 1 115 1 148 1 123 3 338 1 99 1 225 1 118 1 
24 1 167 1 253 1 111 1 
167 1 148 1 
167 1 115 1 148 1 161 1 
167 1 260 1 326 1 115 1 148 1 123 1 225 1 
128 1 123 1 84 1 
167 1 260 3 326 1 115 1 62 1 148 1 123 3 99 2 163 1 225 1 118 1 213 1 
167 1 260 2 326 1 115 1 148 1 123 2 338 1 365 1 225 1 
376 1 33 1 167 1 253 1 296 1 260 1 326 1 280 1 123 1 225 1 118 1 
167 1 260 1 326 1 148 1 123 1 225 1 118 1 
260 1 326 1 115 1 148 2 123 1 225 1 118 1 
167 1 260 2 326 2 35 1 222 1 148 1 92 1 123 2 225 2 118 1 
253 1 111 1 123 3 338 2 225 1 167 2 297 1 326 1 260 3 115 1 148 1 203 1 118 1 
266 1 123 2 338 1 225 1 167 1 33 1 376 1 296 2 326 1 260 2 115 1 148 1 118 1 216 1 366 1 
253 1 111 1 123 4 338 2 225 2 247 1 167 2 326 2 260 4 115 1 148 1 365 1 118 1 
167 1 260 1 326 1 115 1 148 1 123 1 225 1 118 1 
253 1 111 1 123 4 338 2 163 1 225 1 24 1 167 3 260 4 326 1 115 2 62 1 148 2 99 1 
167 1 260 2 326 1 115 1 148 1 123 2 338 1 291 1 282 1 224 1 225 1 118 1 
123 3 163 1 225 1 167 1 183 1 326 1 260 3 115 1 62 2 148 1 99 2 118 1 
167 2 154 1 273 1 58 2 
260 1 326 1 6 1 123 1 225 1 118 1 
167 1 297 1 260 2 326 1 115 1 148 1 123 2 338 1 225 1 118 1 
199 1 
167 1 260 1 326 1 115 1 148 1 123 1 225 1 118 1 

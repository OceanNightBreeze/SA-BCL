#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (251,317,337) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (251,317,337) 150 34 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (251,317,337) 150 208 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (22,243) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (22,243) 46 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (22,243) 46 294 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (251,317,337) (251,317,337) 307 103 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 264 298 (176,273) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 264 298 (135,290) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (251,317,337) 150 107 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 4 220 2 223 2 299 2 146 2 184 1 9 2 268 1 10 1 312 1 314 1 279 1 198 1 113 1 74 1 203 2 77 1 31 9 32 6 163 1 248 5 332 1 128 2 333 1 252 1 286 9 287 1 258 3 
140 4 220 2 223 2 299 2 146 2 184 1 9 2 268 1 10 1 312 1 314 1 279 1 198 1 113 1 74 1 203 2 77 1 31 9 32 6 163 1 248 5 332 1 128 2 333 1 252 1 286 9 287 1 258 3 
140 5 220 2 223 2 299 2 146 2 184 1 9 2 268 1 10 1 312 1 314 1 279 1 198 1 113 1 74 1 203 2 77 1 31 10 32 7 163 1 248 6 332 1 128 2 333 1 252 1 286 10 287 1 258 4 
140 3 220 2 223 2 299 2 146 2 184 1 9 2 268 1 10 1 312 1 314 1 279 1 198 1 113 1 74 1 203 2 77 1 31 7 32 4 163 1 248 4 332 1 128 1 333 1 252 1 286 7 258 2 
140 2 74 1 220 1 223 1 299 1 31 4 32 3 146 1 248 3 268 1 9 1 332 1 128 2 333 1 286 4 287 1 312 1 258 1 
199 1 200 1 220 1 141 1 299 1 203 1 77 1 31 2 146 1 248 1 268 1 9 1 332 1 333 1 286 2 198 1 
140 1 203 1 31 3 32 1 146 2 248 2 268 1 9 2 332 1 333 1 286 3 258 1 113 1 
140 4 220 1 223 1 299 1 146 2 9 2 268 1 312 1 279 1 113 1 70 1 74 1 203 1 32 7 31 9 163 1 248 5 332 1 128 2 333 1 286 9 132 1 287 1 258 3 
140 4 220 1 223 1 299 1 146 2 9 2 268 1 312 1 279 1 113 1 70 1 74 1 203 1 32 7 31 9 163 1 248 5 332 1 128 2 333 1 286 9 132 1 287 1 258 3 
238 1 205 1 138 1 
104 2 76 1 238 1 
231 2 131 2 234 2 172 1 276 2 284 2 45 1 82 2 
177 1 298 1 145 1 302 1 95 1 267 2 100 2 54 2 56 1 230 1 231 3 185 1 234 2 273 1 237 1 239 1 66 2 276 3 23 1 73 1 161 1 29 1 284 2 82 2 210 1 129 1 130 1 131 2 257 1 41 1 169 1 172 1 171 1 292 1 45 1 340 2 261 1 
231 1 131 1 288 1 234 1 106 1 316 1 276 1 284 1 45 1 82 1 
251 1 231 1 322 1 254 1 40 1 316 1 276 1 284 1 317 1 
251 1 231 1 131 1 322 1 234 1 40 1 316 1 276 1 284 1 82 1 
48 1 309 1 65 1 246 1 337 1 
48 1 309 2 51 1 65 1 238 1 205 1 245 1 337 2 
48 1 309 1 337 1 
218 1 284 1 82 1 309 1 131 1 231 1 288 1 106 1 234 1 65 1 316 1 276 1 337 1 45 1 
238 1 
48 1 309 2 15 1 65 1 238 1 205 1 245 1 337 2 
47 2 48 2 175 1 26 1 157 1 93 1 205 1 245 1 147 1 58 1 164 1 309 5 272 2 65 2 238 1 88 2 336 1 21 1 337 5 
172 1 138 1 
281 1 284 2 82 1 231 2 131 1 234 1 20 1 276 2 172 2 
331 1 323 1 75 1 
298 1 161 1 95 1 80 1 267 1 100 1 56 1 231 1 130 1 273 1 41 1 66 1 172 1 276 1 171 1 261 1 
298 1 161 1 121 1 284 1 95 1 82 1 267 1 100 1 331 1 56 1 130 1 131 1 231 2 273 1 41 1 66 1 171 1 276 2 111 1 261 1 
231 3 131 3 234 1 121 1 172 1 276 3 284 3 82 3 
231 1 131 1 288 1 316 1 276 1 284 1 82 1 
231 1 131 1 281 1 234 1 316 1 20 1 276 1 284 1 82 1 
322 1 281 1 121 1 284 2 34 1 82 2 251 1 150 1 131 2 231 2 234 1 40 1 316 1 276 2 111 1 
231 2 131 1 254 1 121 1 172 1 304 1 276 2 284 2 82 1 
322 1 121 1 284 1 82 1 208 1 251 1 150 1 131 1 231 1 40 1 316 1 276 1 111 1 
281 1 323 1 121 1 284 2 82 2 331 1 131 2 231 2 234 1 276 2 
298 1 161 1 95 1 267 1 100 1 56 1 231 1 130 1 273 1 41 1 66 1 172 1 276 1 171 1 261 1 
116 1 298 1 161 1 95 1 267 1 100 1 56 1 231 1 130 1 135 1 66 1 172 1 276 1 171 1 261 1 
92 1 265 1 145 1 4 1 54 2 230 1 278 1 197 1 23 1 321 1 73 1 323 2 119 1 75 2 127 1 210 2 331 2 250 1 129 1 257 1 87 1 137 1 292 2 340 4 
231 1 131 1 40 1 316 1 276 1 284 1 338 1 82 1 
281 1 121 2 304 1 284 5 82 4 55 1 131 4 231 5 254 1 85 1 234 1 276 5 172 1 111 1 
231 2 131 2 288 1 316 1 276 2 284 2 338 1 82 2 
144 1 22 1 
144 1 22 1 
50 1 243 1 
50 1 243 1 
50 1 243 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 22 1 
144 1 3 1 22 1 46 1 
294 1 309 1 144 1 3 1 337 1 22 1 46 1 
220 1 223 1 299 1 
220 1 141 1 299 1 
242 1 220 3 187 1 223 2 141 1 89 1 
220 2 187 1 223 1 141 1 109 1 89 1 
220 2 223 1 187 1 141 1 89 2 
47 1 48 1 175 3 92 1 49 1 224 1 265 1 183 2 306 1 57 1 309 5 104 3 232 2 311 1 272 1 65 4 238 2 278 1 318 1 157 2 324 1 76 1 205 1 245 1 330 1 165 1 285 1 87 1 88 1 336 1 291 2 337 5 
48 6 47 2 175 8 92 3 49 4 219 1 224 2 143 1 265 3 227 1 183 6 5 5 306 2 309 9 104 9 232 6 311 3 272 2 64 1 65 7 238 5 21 1 278 3 110 1 319 1 157 6 76 3 205 1 245 1 246 5 285 1 87 3 88 2 336 1 337 9 
47 1 175 3 49 1 92 1 224 1 265 1 183 2 306 1 309 3 232 2 104 4 272 1 311 1 65 2 238 3 278 1 21 1 318 1 157 2 76 2 205 1 330 1 87 1 88 1 291 1 337 3 
47 1 175 5 49 2 92 2 224 1 143 1 265 2 227 1 183 4 306 1 309 4 104 7 232 4 272 1 311 2 65 3 238 4 278 2 21 1 110 1 318 1 157 4 76 3 205 1 330 1 87 2 88 1 291 2 337 4 
161 1 79 1 138 1 
60 1 161 1 
271 1 
161 1 171 1 
130 1 153 1 161 3 136 1 79 2 171 1 
130 1 161 1 171 1 
101 1 161 1 
91 1 321 2 92 1 225 1 204 1 300 2 206 1 207 1 265 1 4 3 209 1 210 4 14 1 16 1 292 3 112 1 340 7 
91 1 321 2 92 1 225 1 204 1 300 2 206 1 207 1 265 1 4 3 209 1 210 4 14 1 16 1 292 3 112 1 340 7 
91 1 321 2 92 1 225 1 204 1 300 2 206 1 207 1 265 1 4 3 209 1 210 4 14 1 16 1 43 1 292 3 112 1 340 7 
91 2 262 1 92 4 296 4 225 1 300 3 181 1 4 10 265 4 54 2 230 1 14 1 311 3 16 2 67 1 278 3 23 1 112 5 321 5 73 1 244 3 204 2 206 1 207 1 328 1 125 1 209 2 210 16 129 1 256 1 335 1 87 3 292 15 340 31 
91 1 92 1 300 2 265 1 4 4 54 4 230 2 14 1 16 1 275 1 23 2 112 1 321 3 73 2 204 1 207 1 206 1 209 1 210 5 129 2 37 1 256 1 292 4 340 9 
1 1 220 2 223 1 141 1 179 1 299 1 146 1 267 1 305 1 99 1 100 1 9 1 268 1 148 1 56 1 188 1 66 1 156 1 242 1 24 1 203 1 32 1 31 2 248 1 332 1 333 1 286 2 255 1 170 1 261 1 
220 2 223 1 141 1 179 1 299 1 146 1 182 1 267 1 305 1 99 1 100 1 9 1 148 1 56 1 188 1 66 1 156 1 242 1 24 1 203 1 31 3 32 2 248 1 249 1 332 1 333 1 286 3 255 1 168 1 261 1 
220 2 141 1 223 1 179 1 299 1 267 1 305 1 99 1 100 1 56 1 66 1 156 1 242 1 24 1 203 1 31 2 32 2 248 1 249 1 332 1 333 1 286 2 255 1 168 1 261 1 
156 2 24 2 158 1 297 1 180 1 325 1 161 1 283 1 203 2 78 1 31 1 95 1 182 1 146 1 267 1 9 1 100 1 99 2 56 1 286 1 66 1 171 1 261 1 
1 1 220 2 223 1 141 1 179 1 299 1 146 1 267 1 305 1 99 1 100 1 9 1 268 1 148 1 56 1 188 1 66 1 156 1 242 1 24 1 203 1 31 1 249 1 286 1 255 1 261 1 
196 1 
47 1 48 2 175 1 224 1 180 1 95 2 267 2 100 2 102 1 56 1 11 1 307 1 231 1 308 1 309 2 103 1 272 1 66 2 316 1 276 1 317 1 157 1 322 1 161 1 284 1 245 1 78 1 247 1 251 1 254 1 40 1 88 1 171 1 336 1 260 1 337 2 261 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
48 1 322 1 245 1 284 1 251 1 102 1 307 1 231 1 309 2 103 1 15 1 254 1 40 1 316 1 276 1 317 1 337 2 260 1 
47 1 322 1 284 1 251 1 102 1 307 1 231 1 309 1 103 1 254 1 272 1 40 1 88 1 316 1 276 1 336 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
322 1 284 1 102 1 251 1 307 1 309 1 231 1 103 1 254 1 40 1 316 1 276 1 317 1 337 1 260 1 
47 1 322 1 284 1 251 1 102 1 307 1 231 1 309 1 103 1 254 1 272 1 40 1 88 1 316 1 276 1 336 1 317 1 337 1 260 1 
91 1 92 1 300 1 145 1 4 2 265 1 54 2 230 1 14 1 16 1 23 1 321 2 73 1 323 1 75 1 207 1 206 1 331 1 210 3 129 1 257 1 137 1 172 2 138 1 292 3 340 6 
92 2 296 3 177 1 181 1 4 2 145 1 265 1 54 4 230 2 233 1 311 2 17 1 235 1 278 1 112 1 23 2 321 1 73 2 323 4 75 11 244 3 29 1 30 1 125 1 331 11 210 8 129 2 166 1 257 2 87 2 172 1 292 6 340 14 
0 1 177 1 298 1 95 1 145 1 267 1 228 1 100 1 54 2 56 1 230 1 13 1 231 2 273 1 66 1 276 2 111 1 23 1 73 1 323 1 161 1 121 1 29 1 284 1 80 1 82 1 210 1 129 1 130 1 131 1 166 1 41 1 257 1 172 1 171 1 292 1 261 1 340 2 
91 1 92 3 177 1 263 1 265 3 95 1 4 8 267 3 100 3 14 1 16 1 273 2 191 2 276 3 278 2 23 3 111 1 112 4 114 2 123 1 206 1 207 1 29 1 121 1 284 1 126 2 210 10 129 3 131 1 130 2 41 2 292 10 298 2 300 1 145 3 54 6 56 2 230 3 231 3 311 2 237 2 66 3 241 2 320 1 321 4 73 3 323 7 75 7 161 2 249 1 82 1 331 7 166 1 257 3 87 2 172 2 171 2 340 20 261 2 
295 1 174 1 177 1 180 1 53 1 95 2 145 2 97 1 6 1 267 7 100 7 54 4 56 3 230 2 231 1 313 1 66 6 239 2 276 1 23 2 68 1 73 2 27 1 161 4 121 1 122 1 29 1 284 1 78 1 249 1 82 1 210 1 129 2 131 1 130 1 289 1 257 2 137 1 171 3 292 1 214 1 261 4 340 2 
92 1 4 1 145 1 265 1 54 2 230 1 231 1 311 1 234 1 276 1 278 1 23 1 321 1 73 1 281 1 323 1 75 1 284 1 82 1 331 1 210 1 129 1 131 1 166 1 39 1 257 1 87 1 292 2 340 3 
73 1 92 1 323 1 75 1 4 1 145 1 331 1 54 2 210 2 129 1 230 1 257 1 87 1 137 1 197 1 112 1 23 1 340 2 
321 1 73 1 323 1 75 1 4 1 145 1 265 1 127 1 331 1 54 2 129 1 230 1 257 1 137 1 278 1 292 2 23 1 340 2 
92 1 145 1 4 2 265 1 54 2 230 1 311 1 278 1 23 1 112 1 321 1 73 1 323 2 75 2 210 2 331 2 129 1 87 1 257 1 137 1 292 2 340 4 
73 1 92 1 323 1 75 1 4 1 145 1 331 1 54 2 210 2 129 1 230 1 257 1 87 1 197 1 112 1 214 1 23 1 340 2 
321 1 73 1 323 1 75 1 4 1 145 1 265 1 127 1 331 1 54 2 129 1 230 1 257 1 278 1 292 2 214 1 23 1 340 2 
92 1 145 1 4 2 265 1 54 2 230 1 311 1 278 1 23 1 112 1 321 1 73 1 323 2 75 2 210 2 331 2 129 1 87 1 257 1 292 2 214 1 340 4 
92 1 145 1 4 2 265 1 54 2 230 1 311 1 278 1 23 1 112 1 321 1 73 1 323 2 75 2 210 2 331 2 129 1 87 1 257 1 292 2 340 4 
177 1 298 1 95 1 145 1 267 1 100 1 54 2 56 1 230 1 231 1 273 1 237 1 66 1 276 1 23 1 73 1 161 1 29 1 210 1 129 1 130 1 41 1 257 1 172 1 171 1 292 1 340 2 261 1 
177 1 298 1 95 1 145 1 267 1 100 1 54 2 56 1 230 1 231 1 270 1 66 1 276 1 23 1 116 1 73 1 161 1 29 1 210 1 129 1 130 1 257 1 135 1 172 1 171 1 292 1 340 2 261 1 
92 1 145 1 4 2 265 1 54 2 230 1 311 1 278 1 23 1 112 1 321 1 73 1 323 2 75 2 210 2 331 2 129 1 166 1 87 1 257 1 292 2 340 4 
92 1 298 1 265 1 4 2 145 1 267 1 100 1 54 2 56 1 230 1 231 1 311 1 273 1 237 1 66 1 276 1 278 1 112 1 23 1 241 1 321 1 73 1 323 2 75 2 161 1 331 2 210 2 129 1 130 1 87 1 41 1 257 1 170 1 171 1 292 2 340 4 261 1 
92 1 265 1 4 1 145 1 54 2 230 1 231 1 311 1 234 1 276 1 278 1 112 1 23 1 25 1 73 1 281 1 323 1 75 1 284 1 82 1 210 2 331 1 129 1 131 1 166 1 257 1 87 1 292 1 340 3 
92 3 296 2 181 1 4 6 265 3 54 4 230 2 311 3 275 1 190 1 193 2 195 1 155 1 278 3 23 2 112 3 69 1 321 3 73 2 118 1 244 1 125 1 210 9 129 2 36 1 38 1 87 3 292 10 139 2 340 19 
216 1 92 3 296 2 222 1 52 1 4 4 265 2 54 6 230 3 61 1 311 3 275 1 190 2 193 4 155 1 278 2 112 2 23 3 321 2 73 3 118 1 159 1 244 2 125 2 210 14 129 3 36 1 38 2 256 2 87 3 44 1 292 12 139 1 340 26 
216 1 91 1 92 5 296 4 222 1 52 1 300 1 181 1 4 8 265 5 54 6 230 3 14 1 61 1 311 4 16 1 275 1 190 2 193 4 155 1 278 4 23 3 112 4 69 1 321 4 73 3 159 1 118 1 244 3 162 1 206 1 207 1 125 3 210 20 129 3 36 1 38 1 256 1 87 4 44 1 292 21 139 1 340 41 
216 1 91 1 92 5 296 4 222 1 52 1 300 1 181 1 4 7 265 4 54 8 230 4 14 1 61 1 311 4 16 1 275 1 190 2 193 4 155 1 278 3 23 4 112 3 69 1 321 4 73 4 159 1 118 1 244 3 162 1 206 1 207 1 125 3 210 20 129 4 36 1 38 1 256 2 87 4 44 1 292 18 139 1 340 38 
216 1 91 1 92 8 296 4 222 1 52 1 300 1 181 2 4 14 265 8 54 4 230 2 14 1 61 1 311 7 16 1 17 2 275 1 190 1 193 4 155 1 278 7 23 2 112 7 321 7 73 2 159 1 118 1 244 4 206 1 207 1 125 2 210 27 129 2 36 1 38 1 256 1 87 7 44 1 292 25 139 1 340 52 
177 1 145 1 98 1 267 2 100 2 54 2 56 1 229 1 230 1 231 2 236 1 239 2 66 2 276 2 23 1 68 1 73 1 27 1 201 1 161 1 29 1 284 2 210 1 129 1 166 1 257 1 171 1 259 1 292 1 261 1 340 2 
242 1 24 1 220 2 223 1 141 1 179 1 299 1 303 1 249 1 267 2 100 2 148 1 56 1 59 1 255 1 19 1 66 2 170 1 261 1 
242 1 24 1 220 2 223 1 141 1 179 1 299 1 28 1 303 1 249 1 267 1 100 1 148 1 56 1 255 1 66 1 261 1 
24 1 297 1 180 1 161 1 95 1 78 1 267 1 100 1 56 1 59 1 189 1 66 1 171 1 261 1 
242 1 24 1 220 2 223 1 141 1 179 1 299 1 303 1 249 1 267 1 100 1 148 1 56 1 59 1 255 1 19 1 66 1 261 1 
282 1 
147 1 175 1 58 1 157 1 238 1 205 1 138 1 
47 1 48 1 175 1 94 1 149 1 309 1 104 1 272 1 238 2 115 1 157 1 76 1 205 1 245 1 88 1 336 1 337 1 
175 9 176 2 92 2 178 1 264 2 95 1 265 2 183 6 267 3 100 3 101 2 104 12 272 4 274 2 278 2 117 1 205 2 126 2 130 3 134 2 47 4 48 5 224 2 147 1 56 3 58 1 60 3 309 5 232 6 310 1 311 2 63 1 153 1 238 8 66 3 154 2 240 1 71 2 157 8 76 6 161 10 79 2 245 3 329 2 81 2 247 1 83 2 87 2 170 1 88 4 171 3 336 4 337 5 261 4 
216 1 48 1 47 2 175 8 92 2 296 1 222 1 224 1 52 1 265 2 183 5 309 1 151 1 104 6 232 5 61 1 272 2 311 2 238 5 278 2 157 5 159 1 76 3 244 1 205 2 245 1 329 2 125 1 247 1 83 1 87 2 88 2 212 1 336 2 337 1 
91 1 47 1 175 2 217 1 92 2 218 1 265 1 231 1 309 1 272 1 16 1 106 1 234 1 316 1 276 1 157 2 206 1 124 1 284 1 329 2 83 1 82 1 131 1 288 1 88 1 336 1 337 1 45 1 
47 1 175 1 157 1 205 1 147 1 58 1 272 1 238 1 88 1 336 1 
175 5 92 2 157 5 76 5 265 2 329 2 126 1 183 5 83 1 232 5 104 10 311 2 87 2 238 5 278 2 
48 1 309 1 238 1 205 1 245 1 337 1 
173 1 47 2 48 4 175 2 224 2 180 1 301 1 95 2 267 4 100 4 56 1 11 1 308 1 309 3 310 2 272 2 66 4 21 1 240 1 157 2 161 1 245 2 78 1 247 2 88 2 171 1 336 1 337 3 261 1 
298 1 95 1 302 1 145 1 267 1 100 1 54 2 56 1 230 1 231 3 234 2 273 1 237 1 66 1 276 3 23 1 73 1 161 1 29 1 284 2 82 2 129 1 131 2 130 1 41 1 257 1 172 1 171 1 292 1 45 1 340 1 261 1 
47 1 175 1 157 2 224 1 76 2 300 1 205 2 183 2 247 1 232 2 104 4 272 1 238 4 88 1 336 1 
215 1 280 1 2 1 
215 1 269 1 211 1 2 1 142 1 
215 1 280 1 2 1 
215 1 280 1 2 1 
215 1 62 1 2 1 
215 1 62 1 2 1 
215 1 62 1 2 1 
215 1 2 1 
144 1 22 1 
91 1 321 2 92 1 73 2 300 1 206 1 207 1 265 1 4 3 210 4 54 4 129 2 230 2 14 1 256 1 16 1 292 4 112 1 23 2 340 8 
91 1 321 2 92 1 300 1 207 1 206 1 4 2 265 1 210 3 14 1 16 1 292 3 138 1 340 6 
321 1 73 1 92 1 202 1 265 1 4 2 54 2 210 2 129 1 230 1 311 1 87 1 278 1 292 2 23 1 112 1 340 4 
321 1 92 1 296 2 244 1 181 1 265 1 4 2 125 1 210 3 311 1 87 1 278 1 292 4 112 1 340 7 
91 2 92 3 296 2 221 1 300 1 181 1 4 9 265 3 54 4 230 2 14 1 311 2 16 2 17 1 278 2 112 4 23 2 321 5 73 2 244 2 206 1 207 1 30 1 210 11 129 2 256 2 87 2 292 12 340 23 
296 1 292 1 340 1 
210 1 244 1 340 1 
321 2 73 1 92 1 202 1 4 3 265 1 126 1 54 2 210 3 129 1 230 1 311 1 87 1 278 1 292 3 23 1 112 1 340 6 
216 1 92 2 296 1 222 1 52 1 265 2 4 2 54 2 230 1 61 1 311 2 275 1 278 2 112 1 23 1 321 1 73 1 159 1 244 1 125 1 210 6 129 1 87 2 292 6 340 12 
91 1 321 1 92 1 206 1 265 1 4 2 210 3 16 1 292 3 112 1 340 6 
91 1 321 1 73 1 221 1 207 1 4 2 210 1 54 2 129 1 230 1 14 1 16 1 256 1 292 2 112 1 23 1 340 3 
91 2 321 3 73 1 92 2 206 1 124 1 4 5 265 2 54 2 210 5 129 1 230 1 16 2 275 1 292 5 23 1 112 2 340 10 
73 1 92 1 4 1 54 2 210 2 129 1 230 1 87 1 275 1 23 1 112 1 340 2 
321 1 73 1 92 1 265 1 4 2 54 2 210 2 129 1 230 1 311 1 87 1 275 1 278 1 292 2 23 1 112 1 340 4 
91 1 321 1 73 3 221 1 4 2 54 6 210 1 129 3 230 3 256 1 16 1 275 1 292 2 23 3 112 1 69 1 340 3 
91 3 262 1 92 5 296 4 221 1 300 1 181 1 4 12 265 5 54 10 230 5 14 1 311 3 16 3 275 1 67 1 278 3 23 5 112 5 69 1 321 7 73 5 202 1 244 3 206 2 207 1 125 1 210 16 129 5 256 2 335 1 87 3 292 18 340 34 
91 1 92 1 296 1 300 1 265 1 4 2 54 2 230 1 14 1 16 1 275 1 23 1 321 2 73 1 159 1 244 1 207 1 206 1 125 1 210 4 129 1 292 4 340 8 
91 1 92 2 296 2 300 1 181 1 265 1 4 3 54 4 230 2 14 1 311 1 16 1 275 1 23 2 112 1 321 2 73 2 159 1 202 1 244 1 206 1 207 1 125 1 210 6 129 2 87 1 292 5 340 11 
216 1 91 1 92 3 296 1 222 1 52 1 300 1 265 3 4 4 54 6 230 3 14 1 61 1 311 2 16 1 275 1 278 2 112 1 23 3 321 3 73 3 159 1 202 1 244 1 206 1 207 1 125 1 210 9 129 3 256 1 87 2 292 10 340 19 
216 1 91 1 92 3 296 1 222 1 52 1 300 1 265 2 4 5 54 6 230 3 14 1 61 1 311 2 16 1 275 1 278 1 112 2 23 3 321 3 73 3 159 1 202 1 244 1 206 1 207 1 125 1 210 10 129 3 256 1 87 2 292 7 340 17 
91 1 92 1 296 1 300 1 265 1 4 2 54 2 230 1 14 1 16 1 275 1 23 1 321 2 73 1 159 1 244 1 207 1 206 1 125 1 210 4 129 1 292 4 340 8 
216 1 92 2 296 1 222 1 52 1 265 2 4 2 54 2 230 1 61 1 311 2 275 1 278 2 112 1 23 1 321 1 73 1 159 1 244 1 125 1 210 6 129 1 87 2 292 6 340 12 
216 1 91 1 92 3 296 1 222 1 52 1 300 1 265 2 4 5 54 8 230 4 14 1 61 1 311 2 16 1 275 1 278 1 112 2 23 4 321 3 73 4 159 1 202 1 244 1 206 1 207 1 125 1 210 10 129 4 256 2 87 2 292 8 340 18 
216 1 92 3 296 1 222 1 52 1 265 2 4 6 54 8 230 4 61 1 311 3 275 1 278 2 112 3 23 4 69 1 321 3 73 4 159 1 244 1 125 1 210 9 129 4 256 2 87 3 292 7 340 16 
91 3 321 3 92 1 207 1 206 1 265 1 4 6 210 3 14 2 16 3 292 4 112 3 340 7 
216 1 91 1 92 3 296 1 222 1 52 1 300 1 265 2 4 4 54 8 230 4 14 1 61 1 311 2 16 1 275 1 278 1 112 1 23 4 69 1 321 3 73 4 159 1 244 1 206 1 207 1 125 1 210 10 129 4 256 2 87 2 292 8 340 18 
90 1 231 1 254 1 172 1 276 1 284 1 304 1 
90 1 160 1 326 1 327 1 304 1 284 1 231 1 254 1 172 1 194 1 315 1 276 1 
56 1 180 1 161 1 66 1 171 1 78 1 95 1 138 1 267 1 261 1 100 1 
298 1 161 1 121 1 284 1 95 1 82 1 267 1 100 1 56 1 130 1 131 1 231 2 273 1 66 1 172 1 171 1 276 2 261 1 
322 1 298 1 264 1 161 3 121 1 284 1 82 1 267 1 100 1 101 1 56 1 130 2 131 1 231 1 310 1 273 1 40 1 66 1 316 1 171 2 276 1 261 1 
322 1 298 1 264 1 161 3 121 1 284 1 82 1 267 1 100 1 101 1 56 1 130 2 131 1 231 1 310 1 40 1 135 1 66 1 316 1 171 2 276 1 261 1 
48 1 264 1 120 1 161 4 205 1 95 1 79 1 81 1 7 1 267 3 100 3 101 1 56 1 130 1 309 2 60 1 310 1 290 1 238 1 66 3 171 1 337 2 261 1 
48 1 176 1 264 1 161 4 205 1 95 1 79 1 81 1 7 1 267 3 100 3 101 1 56 1 130 1 309 2 60 1 310 1 238 1 66 3 171 1 337 2 261 1 
56 1 66 1 6 1 267 1 261 1 100 1 
295 1 53 1 95 2 97 1 6 1 267 6 100 6 56 2 313 1 153 1 239 1 66 5 68 1 161 3 249 1 130 1 253 1 289 1 171 2 261 3 
91 1 92 1 298 1 300 1 265 1 4 2 145 2 267 1 100 1 54 4 56 1 229 1 230 2 14 1 231 2 16 1 273 1 237 1 66 1 276 2 23 2 114 1 241 1 321 2 73 2 323 1 75 1 161 1 206 1 207 1 121 1 284 1 82 1 331 1 210 3 129 2 130 1 131 1 166 1 257 2 41 1 170 1 172 2 171 1 292 3 340 6 261 1 
47 2 48 2 175 1 176 1 95 1 267 1 100 1 147 1 58 1 309 3 60 1 272 2 274 1 65 1 238 1 66 1 154 1 240 1 71 1 157 1 161 2 205 1 79 1 245 1 81 1 88 2 336 2 337 3 
117 1 161 2 79 1 6 1 267 2 100 2 56 1 130 1 153 1 170 1 66 2 171 1 261 2 
180 1 161 1 95 1 78 1 7 1 267 4 100 4 56 1 192 1 66 4 170 1 171 1 261 1 
295 1 174 1 161 1 123 1 122 1 267 2 100 2 56 1 130 1 310 1 289 1 66 2 171 1 261 2 
56 1 220 1 255 1 141 1 299 1 66 1 95 1 267 1 261 1 100 1 
161 1 98 1 267 2 249 1 100 2 56 1 170 1 66 2 171 1 68 1 261 1 
180 1 161 3 53 1 78 1 95 1 97 1 267 5 100 5 56 2 310 1 192 1 66 4 170 1 171 2 68 1 261 2 
180 1 161 3 78 1 95 1 97 1 267 5 100 5 56 2 334 1 310 1 192 1 66 4 170 1 171 2 68 1 261 2 
298 1 161 1 121 1 284 1 95 1 82 1 267 1 100 1 56 1 130 1 131 1 231 2 135 1 66 1 172 1 171 1 276 2 261 1 
295 1 161 1 267 1 100 1 56 1 253 1 130 1 310 1 289 1 153 1 66 1 171 1 261 2 
72 1 231 1 201 1 236 1 42 1 276 1 284 1 108 1 259 1 
42 1 107 1 226 1 
72 1 86 1 42 1 172 1 108 1 
72 1 322 1 226 1 35 1 251 1 150 1 309 1 40 1 86 1 42 1 65 1 107 1 316 1 108 1 337 1 
332 1 333 1 138 1 248 1 
332 1 333 1 286 1 31 1 146 1 248 1 9 1 
156 1 286 1 203 1 
31 3 33 1 146 1 248 1 268 1 9 1 332 1 333 1 286 3 18 1 277 1 198 2 
332 1 128 1 333 1 286 2 32 1 31 2 146 1 248 1 9 1 
140 1 74 1 220 1 223 1 299 1 31 1 146 1 248 1 268 1 9 1 286 1 
333 1 286 1 31 1 146 1 248 1 9 1 268 1 
332 1 333 2 286 1 31 1 146 1 9 1 268 1 
31 2 266 1 146 2 248 1 268 1 9 2 333 1 286 2 152 1 293 1 
140 1 31 3 32 2 163 1 146 1 248 2 268 1 9 1 332 1 333 1 286 3 258 1 279 1 
242 1 220 2 141 1 223 1 299 1 31 2 96 1 32 1 146 1 248 1 268 1 9 1 332 1 333 1 286 2 
140 1 31 4 32 2 146 2 248 2 268 1 9 2 332 1 128 1 333 1 286 4 287 1 258 1 
332 1 333 1 286 1 31 1 146 1 248 1 9 1 268 1 
140 1 32 2 31 4 33 1 146 1 248 3 9 1 332 2 333 2 286 4 258 1 277 1 198 1 339 1 
31 2 32 1 146 1 248 1 268 1 9 1 332 1 333 1 84 1 286 2 186 1 70 1 
31 3 33 2 146 1 248 1 268 1 9 1 332 1 333 1 286 3 133 1 277 1 198 2 
12 1 167 1 248 2 8 2 
286 1 31 1 213 1 146 1 9 1 268 1 
332 1 333 1 286 2 32 1 31 2 279 1 146 1 248 1 9 1 268 1 
105 1 
332 1 333 1 286 1 31 1 146 1 248 1 9 1 268 1 
32 1 31 3 146 1 248 1 268 1 9 1 332 1 333 1 286 3 279 1 198 1 
140 1 258 1 339 1 248 1 
333 1 248 1 

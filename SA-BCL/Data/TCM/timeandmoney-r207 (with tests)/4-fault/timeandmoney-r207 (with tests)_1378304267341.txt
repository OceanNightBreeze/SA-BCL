#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 1 5 1 257 1 103 2 33 1 242 1 81 1 215 1 59 5 16 1 15 7 308 3 307 9 60 4 176 2 18 1 105 9 312 1 86 1 68 1 269 1 347 1 320 1 296 2 
352 1 5 1 257 1 103 2 33 1 242 1 81 1 215 1 59 5 16 1 15 7 308 3 307 9 60 4 176 2 18 1 105 9 312 1 86 1 68 1 269 1 347 1 320 1 296 2 
352 2 5 1 257 2 8 1 33 1 103 2 242 1 81 1 215 2 59 5 16 1 15 6 307 9 308 3 60 4 176 2 18 2 104 1 19 1 105 9 86 1 220 1 116 1 68 1 269 1 272 1 320 1 296 2 
352 2 5 1 257 2 8 1 33 1 103 2 242 1 81 1 215 2 59 5 16 1 15 6 307 9 308 3 60 4 176 2 18 2 104 1 19 1 105 9 86 1 220 1 116 1 68 1 269 1 272 1 320 1 296 2 
352 2 5 1 257 2 8 1 33 1 103 2 242 1 81 1 215 2 59 6 16 1 15 7 307 10 308 4 60 5 176 2 18 2 104 1 19 1 105 10 86 1 220 1 116 1 68 1 269 1 272 1 320 1 296 2 
352 2 5 1 257 2 8 1 33 1 103 1 242 1 81 1 215 2 59 4 16 1 15 4 307 7 308 2 60 3 176 2 18 2 104 1 19 1 105 7 220 1 116 1 68 1 269 1 272 1 320 1 296 2 
86 1 352 1 5 1 257 1 103 2 33 1 242 1 269 1 59 3 16 1 15 3 308 1 307 4 60 2 176 1 296 1 18 1 105 4 
112 1 257 1 8 1 172 1 242 1 269 1 59 1 215 1 16 1 272 1 307 2 176 1 296 1 246 1 18 1 105 2 
242 1 269 1 215 1 59 2 16 1 320 1 15 1 307 3 308 1 60 1 176 2 296 2 105 3 
175 1 367 1 79 1 
322 1 231 2 79 1 
158 2 335 1 152 2 339 2 321 2 369 2 333 2 80 1 
120 2 193 1 48 1 98 2 279 1 280 2 213 1 12 1 80 1 53 1 282 1 152 2 306 1 17 1 84 1 333 3 107 1 155 1 335 1 219 2 338 1 339 2 63 1 369 3 185 1 370 1 344 1 208 1 222 1 253 1 70 1 158 2 319 1 71 1 189 2 321 2 349 1 
334 1 158 1 335 1 152 1 339 1 321 1 216 1 369 1 357 1 333 1 
334 1 339 1 41 1 99 1 300 1 150 1 79 1 369 1 356 1 175 1 160 1 161 1 333 1 74 1 
334 1 41 2 339 1 99 1 300 1 150 2 79 1 369 1 158 1 175 1 152 1 161 1 321 1 333 1 74 1 
121 1 30 1 41 1 36 1 150 1 
121 1 175 1 41 2 36 1 131 1 150 2 79 1 345 1 
121 1 41 1 150 1 
334 1 335 1 41 1 339 1 150 1 369 1 357 1 158 1 152 1 36 1 295 1 216 1 321 1 333 1 
79 1 
121 1 328 1 175 1 41 2 36 1 150 2 79 1 345 1 
38 1 134 1 121 2 41 5 88 1 204 1 205 1 183 2 150 5 79 1 171 1 345 1 361 1 175 1 36 2 348 1 26 2 378 2 163 1 
367 1 80 1 
154 1 339 2 203 1 369 2 80 2 158 1 152 1 321 1 333 2 
239 1 362 1 265 1 
120 1 98 1 279 1 324 1 280 1 369 1 185 1 370 1 80 1 222 1 282 1 306 1 319 1 17 1 349 1 333 1 
120 1 339 1 98 1 279 1 280 1 185 1 369 2 370 1 265 1 222 1 127 1 158 1 282 1 306 1 319 1 17 1 321 1 374 1 349 1 333 2 
127 1 158 3 152 1 339 3 321 3 369 3 333 3 80 1 
334 1 158 1 339 1 321 1 369 1 357 1 333 1 
154 1 334 1 158 1 152 1 339 1 203 1 321 1 369 1 333 1 
0 1 120 1 193 1 48 1 99 1 98 1 279 1 300 1 280 1 150 1 12 1 80 1 53 1 329 1 127 1 282 1 152 2 306 1 17 1 84 1 333 4 155 1 334 1 335 1 219 1 338 1 339 3 41 1 203 1 63 1 185 1 369 4 370 1 222 1 253 1 70 1 158 3 161 1 319 1 189 2 321 3 374 1 349 1 74 1 
158 1 127 1 160 1 339 2 321 1 369 2 247 1 333 2 80 1 
0 1 334 1 41 1 339 3 203 1 99 1 300 1 150 1 206 1 79 1 369 3 127 2 158 3 152 1 161 1 321 3 374 1 333 3 74 1 
339 2 203 1 369 2 265 1 127 1 158 2 152 1 321 2 362 1 333 2 
120 1 98 1 279 1 280 1 369 1 185 1 370 1 80 1 222 1 282 1 306 1 319 1 17 1 349 1 333 1 
120 1 334 1 98 1 278 1 280 1 222 1 80 1 199 1 
193 1 48 1 239 2 213 2 360 1 197 1 285 1 84 1 362 2 39 1 155 1 262 1 338 1 219 4 63 1 341 1 184 1 265 2 157 1 67 1 142 1 70 2 189 2 73 1 
334 1 158 1 57 1 161 1 339 1 321 1 369 1 333 1 
313 1 339 5 203 1 368 1 369 5 80 1 127 2 158 4 152 1 160 1 321 4 374 1 247 1 333 5 
334 1 57 1 158 2 339 2 321 2 369 2 357 1 333 2 
132 1 201 1 
132 1 201 1 
137 1 223 1 
137 1 223 1 
137 1 223 1 
132 1 286 1 201 1 
164 1 132 1 201 1 
314 1 137 1 264 1 132 2 201 2 223 1 
132 1 286 1 201 1 
132 1 286 1 201 1 
128 1 132 1 201 1 
128 1 132 1 201 1 
128 1 132 1 201 1 
218 2 22 1 41 2 353 1 299 2 42 2 355 1 264 1 150 2 79 1 240 2 124 1 141 3 332 1 132 2 27 1 178 2 350 1 201 2 
273 1 164 1 2 1 299 1 355 1 100 1 150 1 240 1 80 1 55 1 132 1 201 1 333 2 202 1 218 1 287 1 41 1 339 2 42 1 369 2 141 1 158 2 271 1 321 2 
352 1 257 1 18 1 
257 1 18 1 172 1 
173 1 352 2 234 1 18 3 29 1 172 1 
352 1 276 1 234 1 18 2 29 1 172 1 
352 1 234 2 18 2 29 1 172 1 
322 1 273 1 2 1 121 1 231 3 96 1 211 1 166 1 50 2 150 5 52 1 79 2 360 1 361 2 175 1 36 4 39 1 38 1 180 2 287 1 41 5 250 1 88 3 184 1 341 1 183 1 345 1 292 1 144 1 26 1 226 2 378 1 
322 3 273 4 121 6 192 5 231 9 96 1 166 3 30 5 277 1 50 6 150 9 79 5 360 3 304 1 361 6 175 1 36 7 39 3 38 1 41 9 288 1 250 2 88 8 184 3 341 3 183 2 24 1 345 1 292 2 117 1 26 2 162 1 226 6 378 2 163 1 
322 2 273 1 231 4 211 1 166 1 50 2 150 3 79 3 360 1 361 2 175 1 36 2 39 1 180 1 41 3 250 1 88 3 184 1 183 1 341 1 292 1 144 1 26 1 226 2 378 1 163 1 
322 3 273 2 231 7 211 1 166 2 277 1 50 4 150 4 79 4 360 2 304 1 361 4 175 1 36 3 39 2 180 2 41 4 250 1 88 5 184 2 183 1 341 2 292 1 117 1 144 1 26 1 226 4 378 1 163 1 
367 1 319 1 212 1 
195 1 319 1 
174 1 
319 1 279 1 
282 1 319 3 279 1 309 1 310 1 212 2 
282 1 319 1 279 1 
319 1 365 1 
262 3 219 5 235 1 184 1 341 1 213 3 156 1 291 1 209 2 70 2 151 1 372 1 210 1 197 2 260 1 200 1 85 1 
262 3 219 5 235 1 184 1 341 1 213 3 156 1 291 1 209 2 70 2 151 1 372 1 210 1 197 2 260 1 200 1 85 1 
262 3 219 5 235 1 31 1 184 1 341 1 213 3 156 1 291 1 209 2 70 2 151 1 372 1 210 1 197 2 260 1 200 1 85 1 
46 4 166 3 235 2 193 1 149 1 213 15 11 1 360 3 151 1 258 1 260 2 197 5 84 1 200 2 85 1 39 3 155 1 181 3 262 10 338 1 219 29 182 1 341 4 184 4 290 1 371 1 156 2 209 3 291 5 70 14 372 1 210 1 189 2 93 1 
193 2 235 1 213 4 305 1 260 1 197 3 84 2 200 1 85 1 155 2 262 4 338 2 219 7 182 1 184 1 341 1 156 1 209 2 291 1 70 3 318 1 372 1 210 1 189 4 
120 1 122 1 352 1 98 1 237 1 280 1 257 1 302 1 172 1 242 1 214 1 173 1 34 1 59 1 215 1 16 1 15 1 307 2 17 1 176 1 18 2 311 1 105 2 364 1 113 1 370 1 187 1 269 1 72 1 296 1 
120 1 122 1 147 1 352 1 98 1 237 1 280 1 256 1 257 1 302 1 172 1 214 1 173 1 82 1 34 1 59 1 215 1 16 1 15 2 307 3 17 1 176 1 18 2 105 3 364 1 370 1 187 1 269 1 72 1 296 1 
120 1 122 1 147 1 352 1 98 1 280 1 256 1 257 1 172 1 214 1 173 1 34 1 59 1 215 1 16 1 15 2 307 2 17 1 18 2 105 2 364 1 370 1 187 1 269 1 72 1 
120 1 122 2 47 1 98 1 279 1 280 1 214 2 82 1 83 1 215 2 17 1 307 1 176 1 217 1 363 1 105 1 62 1 370 1 222 1 187 2 268 1 319 1 296 1 
120 1 122 1 147 1 352 1 98 1 237 1 280 1 257 1 370 1 302 1 172 1 242 1 187 1 214 1 173 1 34 1 215 1 72 1 17 1 307 1 176 1 296 1 18 2 311 1 364 1 105 1 
380 1 
322 2 121 5 97 2 99 1 300 1 78 1 150 4 79 1 326 1 356 1 170 1 56 1 361 1 175 1 284 1 61 1 333 1 38 1 248 3 334 1 336 1 40 2 263 1 339 1 41 4 88 1 183 1 369 1 186 1 345 2 66 2 140 3 160 1 161 1 44 2 143 3 26 1 378 1 28 1 74 1 379 5 351 1 
322 2 121 5 97 2 99 1 300 1 78 1 150 4 79 1 356 1 326 1 170 1 56 1 361 1 175 1 284 1 61 1 333 1 38 1 248 3 334 1 336 1 40 2 263 1 339 1 41 4 88 1 183 1 369 1 186 1 345 2 66 2 140 3 160 1 161 1 44 2 143 3 26 1 378 1 28 1 74 1 379 5 351 1 
121 4 231 2 99 1 300 1 78 1 150 4 79 1 356 1 170 1 361 1 175 1 61 1 333 1 248 2 38 1 334 1 336 1 40 2 263 1 41 4 339 1 88 1 183 1 90 2 369 1 140 2 345 2 66 2 224 2 160 1 161 1 143 2 26 1 190 1 376 1 378 1 28 1 74 1 379 4 
322 2 231 2 97 2 98 2 99 1 279 1 280 2 150 5 56 1 17 1 61 1 333 1 248 2 334 1 336 1 339 1 340 1 289 1 66 2 345 3 292 1 160 1 161 1 26 1 28 1 74 1 121 6 120 2 300 1 78 1 79 2 356 1 170 1 83 1 361 2 175 1 38 1 40 2 263 1 41 5 88 2 183 1 89 1 369 1 370 1 140 2 222 2 268 1 143 2 44 2 319 1 190 1 378 1 229 1 379 4 
121 2 334 1 336 1 263 1 41 3 339 1 99 1 300 1 78 1 150 3 369 1 356 1 170 1 345 1 140 1 328 1 161 1 160 1 61 1 379 2 333 1 74 1 
248 1 121 1 334 1 336 1 263 1 41 3 339 1 99 1 300 1 78 1 150 3 79 1 369 1 356 1 170 1 345 1 328 1 175 1 161 1 160 1 61 1 379 3 333 1 74 1 
121 2 99 1 300 1 78 1 150 3 79 1 356 1 170 1 328 1 175 1 61 1 333 1 248 1 334 1 336 1 263 1 339 1 41 3 369 1 345 1 140 1 160 1 161 1 143 1 74 1 379 3 
322 2 97 2 99 1 150 5 326 1 328 1 56 1 284 1 61 1 333 1 248 4 334 1 336 1 339 1 345 3 66 2 161 1 160 1 26 1 28 1 74 1 351 1 121 7 300 1 78 1 79 5 356 1 170 1 361 1 175 5 129 1 38 1 263 1 40 2 41 5 88 1 183 1 369 1 186 1 140 4 143 4 44 2 378 1 379 6 
322 2 121 4 231 2 97 2 99 1 300 1 78 1 150 4 79 2 356 1 170 1 56 1 361 1 175 1 61 1 333 1 248 2 38 1 334 1 336 1 40 2 263 1 41 4 339 1 88 1 183 1 369 1 140 2 345 2 66 2 160 1 161 1 143 2 44 2 26 1 190 1 378 1 28 1 74 1 379 4 
322 2 121 4 97 2 99 1 300 1 78 1 150 4 79 1 356 1 326 1 170 1 56 1 361 1 175 1 284 1 61 1 333 1 248 2 38 1 334 1 336 1 40 2 263 1 339 1 41 4 88 1 183 1 369 1 140 2 345 2 66 2 160 1 161 1 143 2 44 2 26 1 378 1 28 1 74 1 379 4 351 1 
322 2 121 4 97 2 99 1 300 1 78 1 150 4 79 1 356 1 326 1 170 1 56 1 361 1 175 1 284 1 61 1 333 1 248 2 38 1 334 1 336 1 40 2 263 1 339 1 41 4 88 1 183 1 369 1 140 2 345 2 66 2 160 1 161 1 143 2 44 2 26 1 378 1 28 1 74 1 379 4 351 1 
121 4 231 2 99 1 300 1 78 1 150 4 79 1 356 1 170 1 361 1 175 1 284 1 61 1 333 1 248 2 38 1 334 1 336 1 40 2 263 1 339 1 41 4 88 1 111 1 183 1 90 2 369 1 207 1 140 2 345 2 66 2 224 2 160 1 161 1 143 2 26 1 376 1 378 1 28 1 74 1 379 4 
193 1 48 1 235 1 239 1 213 2 80 1 197 2 84 1 362 1 200 1 85 1 155 1 262 2 367 1 338 1 219 4 63 1 341 1 184 1 265 1 209 1 142 1 70 2 372 1 210 1 189 2 
46 3 166 2 193 2 48 1 239 11 213 8 80 1 53 1 360 1 13 1 197 1 84 2 37 1 362 4 39 2 107 1 249 1 155 2 262 2 181 3 338 2 219 14 23 1 63 2 341 2 184 1 371 1 265 11 291 1 70 6 91 1 189 4 93 1 
120 1 98 1 193 1 48 1 279 1 280 1 324 1 213 1 125 1 80 1 53 1 127 1 282 1 306 1 17 1 84 1 362 1 333 2 155 1 107 1 339 1 338 1 219 2 63 1 185 1 369 2 370 1 222 1 69 1 158 1 70 1 91 1 319 1 321 1 189 2 374 1 349 1 191 1 
120 1 193 1 48 1 98 1 280 1 53 1 127 1 84 1 333 1 155 1 219 1 339 1 338 1 63 1 114 1 369 1 222 1 158 1 70 1 91 1 321 1 189 2 374 1 
255 1 120 8 147 1 98 8 193 2 48 2 354 1 76 1 279 2 301 1 280 7 213 1 53 1 127 1 83 1 17 2 84 2 333 1 155 2 107 1 339 1 338 2 219 2 63 2 138 1 113 1 369 1 251 1 370 2 222 2 142 1 268 1 158 1 70 1 293 1 319 3 71 2 321 1 189 4 
4 1 166 1 193 1 48 1 239 1 213 1 360 1 152 1 197 1 84 1 362 1 333 1 39 1 155 1 262 1 338 1 339 1 219 3 203 1 63 1 341 1 184 1 369 1 265 1 158 1 70 2 91 1 321 1 189 2 
39 1 155 1 262 1 219 2 338 1 48 1 193 1 63 1 341 1 239 1 213 2 265 1 67 1 291 1 142 1 189 2 84 1 362 1 
155 1 262 1 219 2 338 1 48 1 193 1 63 1 184 1 239 1 265 1 157 1 142 1 360 1 70 2 197 1 189 2 84 1 362 1 
166 1 193 1 48 1 239 2 213 2 360 1 197 1 84 1 362 2 39 1 155 1 262 2 338 1 219 4 63 1 341 1 184 1 265 2 291 1 142 1 70 2 189 2 
39 1 155 1 262 1 219 2 338 1 48 1 193 1 63 1 76 1 341 1 239 1 213 2 265 1 67 1 291 1 189 2 84 1 362 1 
155 1 262 1 219 2 338 1 48 1 193 1 63 1 76 1 184 1 239 1 265 1 157 1 360 1 70 2 197 1 189 2 84 1 362 1 
166 1 193 1 48 1 76 1 239 2 213 2 360 1 197 1 84 1 362 2 39 1 155 1 262 2 338 1 219 4 63 1 341 1 184 1 265 2 291 1 70 2 189 2 
39 1 155 1 262 2 338 1 166 1 219 4 48 1 193 1 63 1 184 1 341 1 239 2 213 2 265 2 291 1 360 1 70 2 197 1 189 2 84 1 362 2 
120 1 98 1 48 1 193 1 279 1 280 1 213 1 12 1 80 1 53 1 282 1 306 1 17 1 84 1 333 1 107 1 155 1 219 2 338 1 63 1 185 1 369 1 370 1 222 1 70 1 319 1 189 2 349 1 
120 1 155 1 334 1 219 1 338 1 98 1 48 1 193 1 278 1 63 1 280 1 80 1 222 1 53 1 70 1 270 1 189 2 84 1 199 1 
166 1 193 1 48 1 239 2 213 2 360 1 197 1 84 1 362 2 39 1 155 1 262 2 338 1 219 4 63 1 341 1 184 1 265 2 291 1 70 2 91 1 189 2 
120 1 166 1 98 1 48 1 193 1 279 1 280 1 239 2 213 2 32 1 12 1 360 1 282 1 306 1 197 1 17 1 84 1 362 2 333 1 39 1 155 1 262 2 219 4 338 1 63 1 184 1 341 1 113 1 185 1 369 1 370 1 265 2 291 1 70 2 319 1 189 2 349 1 
166 1 193 1 48 1 239 1 213 2 10 1 360 1 152 1 84 1 362 1 333 1 39 1 155 1 262 1 338 1 339 1 219 3 203 1 63 1 184 1 341 1 369 1 265 1 291 1 70 1 158 1 91 1 321 1 189 2 
165 1 3 1 46 4 166 4 235 1 236 1 193 3 77 1 7 1 213 19 358 1 360 4 305 1 244 1 331 1 197 4 84 3 200 1 85 1 39 4 155 3 181 3 262 8 337 4 338 3 219 39 182 1 341 5 184 5 221 1 43 1 371 3 209 1 291 4 346 1 70 20 372 1 210 1 189 6 225 1 92 2 227 1 93 1 
165 1 3 1 46 4 166 4 235 1 236 1 193 4 77 1 7 1 213 19 358 1 360 3 305 1 244 1 331 1 197 4 84 4 200 1 85 1 39 4 155 4 181 3 262 7 337 4 338 4 219 36 182 2 341 5 184 4 221 1 43 1 371 3 209 1 291 3 346 1 70 17 372 1 210 1 189 8 225 1 92 2 227 1 93 1 
165 1 3 1 46 4 166 7 235 1 236 1 193 2 7 1 213 26 360 7 305 1 244 1 331 1 197 7 84 2 200 1 85 1 39 7 155 2 181 4 262 14 337 4 338 2 219 50 23 2 182 1 341 8 184 8 221 1 43 1 371 2 209 1 291 7 346 1 70 24 372 1 210 1 189 4 225 1 92 1 227 1 93 2 
165 1 46 2 166 3 193 2 7 1 213 9 358 1 360 3 305 1 244 2 197 3 198 1 84 2 39 3 155 2 181 1 262 6 337 2 338 2 219 19 341 3 184 3 43 1 371 1 291 3 346 1 70 10 189 4 92 1 93 1 
165 1 3 1 46 2 166 3 236 1 193 3 7 1 213 14 360 2 305 1 244 1 331 1 197 2 84 3 39 3 155 3 262 4 181 2 337 4 338 3 219 26 182 2 184 2 341 3 221 1 43 1 371 2 291 2 70 12 346 2 189 6 225 1 92 2 227 1 
218 1 42 1 299 1 264 1 132 1 27 1 240 1 350 1 201 1 266 1 
164 1 55 1 
298 1 218 1 14 1 42 1 299 1 132 1 240 1 201 1 133 1 
218 1 41 1 353 1 299 1 42 1 355 1 264 1 150 1 79 1 240 1 124 1 141 2 332 1 132 1 27 1 178 1 350 1 201 1 
218 1 41 1 353 1 299 1 42 1 355 1 264 1 150 1 79 1 240 1 124 1 141 2 332 1 132 1 27 1 178 1 350 1 201 1 
218 1 41 1 353 1 299 1 42 1 355 1 264 1 150 1 79 1 240 1 124 1 141 2 332 1 132 1 27 1 178 1 350 1 201 1 
314 1 102 1 286 1 
314 1 102 1 286 1 
128 1 45 1 
128 1 314 1 45 1 
271 1 100 1 
273 1 164 1 2 1 299 1 100 1 150 1 124 1 240 1 80 1 55 1 36 1 132 1 178 1 201 1 333 2 202 1 218 1 287 1 41 1 339 2 42 1 369 2 141 1 25 1 158 2 271 1 321 2 
102 1 286 1 
128 1 314 1 45 1 
120 2 98 2 48 1 193 1 354 1 279 1 301 1 280 2 213 1 359 1 53 1 303 1 35 1 17 1 84 1 333 2 155 1 107 1 339 2 338 1 219 2 63 1 342 1 369 2 370 1 252 1 70 1 91 1 319 1 71 2 189 2 
21 1 120 2 147 1 352 1 98 2 237 1 280 2 113 1 257 1 370 1 172 1 214 1 173 1 34 1 118 1 153 1 72 1 17 1 18 2 
120 1 147 1 352 1 98 1 237 1 280 1 257 1 370 1 172 1 214 1 173 1 243 1 34 1 153 1 72 1 17 1 18 2 
120 1 98 1 279 1 280 1 370 1 222 1 214 1 268 1 83 1 330 1 319 1 118 1 17 1 363 1 
21 1 120 1 147 1 352 1 98 1 237 1 280 1 257 1 370 1 172 1 214 1 173 1 34 1 118 1 153 1 72 1 17 1 18 2 
6 1 
120 1 193 1 98 1 48 1 279 1 280 1 12 1 80 1 53 1 152 2 282 1 306 1 17 1 84 1 333 3 155 1 335 1 219 1 338 1 339 2 63 1 369 3 185 1 370 1 222 1 253 1 70 1 158 2 319 1 189 2 321 2 349 1 
322 2 38 1 231 4 88 1 50 2 183 1 79 4 209 1 361 2 292 1 175 2 26 1 226 2 378 1 229 1 
134 1 361 1 175 1 367 1 88 1 205 1 79 1 
322 1 121 1 231 1 97 1 150 1 79 2 56 1 361 1 175 1 38 1 41 1 88 1 183 1 345 1 44 1 26 1 378 1 
322 6 274 2 94 1 232 1 231 12 233 2 98 3 99 2 279 3 280 3 50 6 150 5 51 1 54 2 195 3 282 3 283 2 17 4 20 1 205 1 113 1 341 2 343 2 345 3 292 2 26 4 120 3 121 5 166 2 167 1 79 8 212 2 360 2 361 8 175 2 310 1 261 2 365 2 38 4 39 2 134 1 41 5 88 9 183 4 184 2 370 3 222 1 267 2 319 10 145 2 226 6 378 4 377 2 229 1 
274 1 322 3 121 1 231 6 3 1 46 1 166 2 236 1 50 5 150 1 79 5 360 2 361 5 175 2 245 1 106 1 38 2 39 2 181 1 41 1 88 8 183 2 341 2 184 2 221 1 343 2 371 1 345 1 292 1 26 2 225 1 226 5 227 1 378 2 229 1 
274 1 235 1 150 1 357 1 361 2 152 1 216 1 200 1 333 1 38 1 334 1 335 1 41 1 339 1 109 1 88 2 183 1 341 2 184 1 369 1 343 2 158 1 372 1 26 1 295 1 321 1 378 1 351 1 
38 1 134 1 88 1 205 1 183 1 79 1 361 1 175 1 26 1 378 1 
274 1 39 2 322 5 231 10 166 2 88 5 341 2 50 5 184 2 79 5 343 2 360 2 361 5 283 1 226 5 
121 1 175 1 41 1 150 1 79 1 345 1 
275 1 94 2 120 4 121 4 98 4 167 1 279 1 280 4 150 3 361 2 83 1 17 1 179 1 38 1 41 3 88 2 340 1 183 2 89 1 370 1 222 2 345 2 268 1 292 2 319 1 26 2 378 2 229 2 163 1 
373 1 42 1 299 1 
271 1 42 1 299 1 325 1 27 1 
373 1 42 1 299 1 
373 1 42 1 299 1 
159 1 42 1 299 1 
159 1 42 1 299 1 
159 1 42 1 299 1 
42 1 299 1 
132 1 201 1 
46 1 193 1 235 1 213 3 305 1 197 2 84 1 200 1 85 1 155 1 181 1 262 2 219 6 338 1 184 1 341 1 371 1 209 1 70 3 372 1 210 1 189 2 227 1 
46 2 166 1 235 1 193 2 213 5 305 1 197 2 84 2 200 1 85 1 39 1 155 2 108 1 181 1 262 3 219 9 338 2 184 1 341 2 371 1 209 1 291 1 70 4 372 1 210 1 189 4 227 1 93 1 
3 1 46 1 166 2 235 1 193 3 236 1 213 8 360 2 305 1 197 3 84 3 200 1 85 1 39 2 155 3 108 1 181 1 262 4 219 17 338 3 182 1 341 3 184 3 221 1 371 1 209 1 291 1 70 9 372 1 210 1 189 6 225 1 227 1 
46 1 3 1 166 2 235 1 193 3 236 1 213 9 360 1 305 1 197 3 84 3 200 1 85 1 39 2 155 3 108 1 181 1 262 5 219 15 338 3 182 1 341 3 184 2 221 1 371 1 209 1 291 2 70 6 372 1 210 1 189 6 225 1 227 1 
46 1 193 1 235 1 213 3 305 1 197 2 84 1 200 1 85 1 155 1 181 1 262 2 219 6 338 1 184 1 341 1 371 1 209 1 70 3 372 1 210 1 189 2 227 1 
46 1 3 1 166 2 193 1 236 1 213 6 360 2 305 1 197 1 84 1 39 2 155 1 181 1 262 2 219 12 338 1 341 2 184 2 221 1 371 1 291 1 70 6 189 2 225 1 227 1 
3 1 46 1 166 2 235 1 236 1 193 4 213 9 360 1 305 1 197 3 84 4 200 1 85 1 39 2 155 4 108 1 181 1 262 5 219 16 338 4 182 2 341 3 184 2 221 1 371 1 209 1 291 2 70 7 372 1 210 1 189 8 225 1 227 1 
3 1 46 1 166 3 236 1 193 4 213 9 358 1 360 2 305 1 197 3 84 4 39 3 155 4 181 1 262 6 219 16 338 4 182 2 341 3 184 2 221 1 371 1 291 3 70 7 189 8 225 1 227 1 
262 7 219 9 109 1 235 2 184 3 341 3 213 5 209 1 291 3 70 4 372 2 210 1 197 4 200 2 85 1 
3 1 46 1 166 2 235 1 236 1 193 4 213 9 358 1 360 1 305 1 197 3 84 4 200 1 85 1 39 2 155 4 181 1 262 4 219 16 338 4 182 2 341 3 184 2 221 1 371 1 209 1 291 1 70 7 372 1 210 1 189 8 225 1 227 1 
155 2 262 3 219 6 338 2 193 2 235 1 182 1 184 1 341 1 213 3 209 1 291 1 70 3 372 1 210 1 197 2 189 4 84 2 200 1 85 1 
209 1 262 2 70 2 219 4 372 1 367 1 235 1 210 1 197 2 184 1 341 1 213 2 200 1 85 1 
39 1 155 1 262 2 108 1 338 1 166 1 219 4 193 1 184 1 341 1 213 2 291 1 360 1 70 2 197 1 189 2 84 1 
39 1 181 1 262 2 46 2 219 7 166 1 184 1 341 1 213 3 371 1 291 1 360 1 70 4 197 1 93 1 
46 2 166 2 235 2 193 2 213 10 360 2 197 5 84 2 200 2 85 1 39 2 249 1 155 2 262 9 181 2 136 1 219 21 338 2 23 1 182 2 341 3 184 3 209 1 291 4 70 11 372 1 210 1 189 4 93 1 
70 1 46 1 219 1 
181 1 219 1 213 1 
39 1 155 1 108 1 262 3 338 1 219 6 166 1 193 1 341 1 184 1 213 3 291 1 360 1 70 3 283 1 189 2 197 2 84 1 
46 1 3 1 166 2 193 1 236 1 213 6 360 2 305 1 197 1 84 1 39 2 155 1 181 1 262 2 219 12 338 1 341 2 184 2 221 1 371 1 291 1 70 6 189 2 225 1 227 1 
70 1 219 2 372 1 184 1 341 1 213 1 
155 1 262 2 136 1 219 3 338 1 235 1 193 1 182 1 213 1 291 1 70 2 210 1 197 1 189 2 84 1 200 1 85 1 
155 1 262 4 338 1 219 8 193 1 109 1 235 1 341 2 184 2 213 4 291 2 70 4 305 1 372 1 189 2 197 2 84 1 200 1 
39 1 155 1 262 1 338 1 219 2 193 1 341 1 213 2 291 1 305 1 189 2 84 1 
39 1 155 1 262 2 338 1 166 1 219 4 193 1 184 1 341 1 213 2 291 1 360 1 70 2 305 1 197 1 189 2 84 1 
155 3 262 2 136 1 219 3 338 3 193 3 235 1 182 1 213 1 358 1 291 1 70 2 305 1 189 6 197 1 84 3 200 1 
46 4 166 3 235 2 193 5 213 14 11 1 358 1 360 3 258 1 305 1 197 6 84 5 200 2 85 1 39 3 155 5 108 1 181 3 262 11 136 1 338 5 219 30 182 2 341 5 184 5 290 1 371 1 209 1 291 5 70 16 372 2 210 1 189 10 93 1 
146 1 339 1 160 1 369 1 247 1 333 1 80 1 
146 1 135 1 339 1 315 1 369 1 101 1 327 1 80 1 160 1 294 1 247 1 333 1 
268 1 120 1 83 1 367 1 319 1 98 1 17 1 279 1 280 1 370 1 222 1 
120 1 339 1 98 1 279 1 280 1 369 2 185 1 370 1 80 1 222 1 127 1 158 1 282 1 306 1 319 1 17 1 321 1 333 2 
94 1 120 1 334 1 339 2 98 1 300 1 279 2 280 1 369 2 185 1 370 1 80 1 127 1 158 2 282 2 161 1 306 1 319 3 145 1 17 1 321 1 333 2 365 1 
94 1 120 2 334 1 339 2 366 1 98 2 300 1 279 2 280 2 369 2 370 1 80 1 317 1 127 1 158 2 282 2 161 1 306 1 319 3 145 1 17 1 321 1 333 2 365 1 
94 1 120 3 121 1 41 2 99 1 98 3 279 1 280 3 150 2 79 1 64 1 212 1 370 1 222 1 195 1 317 1 175 1 282 1 259 1 319 4 145 1 17 1 365 1 
94 1 120 3 121 1 41 2 99 1 98 3 279 1 280 3 150 2 79 1 212 1 370 1 222 1 54 1 195 1 317 1 175 1 282 1 319 4 145 1 17 1 365 1 
120 1 255 1 98 1 17 1 280 1 370 1 
1 1 255 1 120 7 147 1 98 7 138 1 194 1 279 2 301 1 113 1 280 6 251 1 370 2 222 2 293 1 282 1 58 1 71 1 319 3 17 3 310 1 
98 1 48 2 193 2 235 1 279 1 280 1 239 1 12 1 282 1 17 1 197 2 200 1 333 2 155 2 338 2 339 1 63 2 113 1 341 1 209 1 158 1 70 2 210 1 349 1 120 1 32 1 213 2 80 1 303 1 127 1 306 1 177 1 84 2 362 1 85 1 262 2 219 4 184 1 185 1 369 2 370 1 265 1 91 1 372 1 319 1 189 4 321 1 
120 1 121 2 233 1 98 1 99 1 167 1 280 1 150 3 79 1 212 1 54 1 195 1 361 1 175 1 36 1 261 1 38 2 134 1 41 3 88 1 205 1 183 2 222 1 345 1 267 1 319 2 26 2 378 2 
20 1 255 1 120 2 98 2 279 1 113 1 280 2 212 1 370 1 282 1 319 2 17 2 310 1 
120 4 98 4 279 1 280 4 113 1 370 1 65 1 222 1 268 1 317 1 83 1 319 1 17 1 
1 1 94 1 120 2 98 2 279 1 280 2 281 1 370 1 241 1 282 1 58 1 319 1 17 2 375 1 
120 1 34 1 98 1 17 1 280 1 257 1 18 1 370 1 172 1 222 1 
120 2 147 1 35 1 319 1 98 2 17 1 279 1 301 1 280 2 113 1 370 1 
94 1 120 5 98 5 279 2 280 4 113 1 301 1 370 2 251 1 65 1 222 1 268 1 83 1 293 1 319 3 17 2 
94 1 120 5 254 1 98 5 279 2 280 4 113 1 301 1 370 2 251 1 65 1 222 1 268 1 83 1 319 3 17 2 
120 1 339 1 366 1 98 1 279 1 280 1 369 2 370 1 80 1 222 1 127 1 158 1 282 1 306 1 319 1 17 1 321 1 333 2 
1 1 94 1 120 1 98 1 194 1 279 1 280 1 370 1 282 1 58 1 319 1 17 2 310 1 
339 1 110 1 49 1 342 1 238 1 369 1 252 1 333 1 359 1 
238 1 316 1 115 1 
130 1 110 1 49 1 238 1 80 1 
0 1 334 1 41 2 99 1 148 1 49 2 110 2 300 1 238 1 150 2 79 1 316 1 115 1 80 1 175 1 161 1 36 1 130 2 74 1 
8 1 242 1 68 1 269 1 59 1 15 1 16 1 307 3 176 1 296 1 105 3 
196 1 59 1 308 1 60 1 
59 1 16 1 
269 1 367 1 59 1 16 1 
269 1 59 1 16 1 307 1 296 1 176 1 105 1 
122 1 215 1 307 1 
168 1 8 2 242 1 126 1 269 1 59 1 16 1 307 3 176 1 296 1 228 1 105 3 
269 1 59 1 16 1 15 1 307 2 296 1 176 1 103 1 105 2 
352 1 257 1 33 1 242 1 59 1 307 1 60 1 176 1 296 1 18 1 105 1 
242 1 59 1 16 1 307 1 296 1 176 1 105 1 
242 1 269 1 16 2 307 1 296 1 176 1 105 1 
242 1 188 1 59 1 16 1 307 2 123 1 296 2 176 2 169 1 105 2 
242 1 81 1 68 1 269 1 59 2 16 1 15 2 307 3 308 1 60 1 176 1 296 1 105 3 
352 1 323 1 257 1 172 1 242 1 173 1 269 1 59 1 16 1 15 1 307 2 176 1 296 1 18 2 105 2 
86 1 103 1 242 1 269 1 59 2 16 1 15 2 307 4 308 1 60 1 176 2 296 2 105 4 
242 1 269 1 59 1 16 1 307 1 296 1 176 1 105 1 
168 1 8 1 126 1 269 2 196 1 59 3 16 2 15 2 307 4 308 1 60 1 176 1 296 1 105 4 
312 1 242 1 269 1 59 1 16 1 15 1 307 2 176 1 296 1 119 1 105 2 297 1 
95 1 168 2 8 2 242 1 126 1 269 1 59 1 16 1 307 3 176 1 296 1 105 3 
230 2 59 2 139 1 9 1 
242 1 307 1 296 1 176 1 75 1 105 1 
68 1 242 1 269 1 59 1 16 1 15 1 307 2 296 1 176 1 105 2 
87 1 
242 1 269 1 59 1 16 1 307 1 296 1 176 1 105 1 

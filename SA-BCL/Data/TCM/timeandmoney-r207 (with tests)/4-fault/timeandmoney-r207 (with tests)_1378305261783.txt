#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (40,166) 33 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (40,166) 33 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 310 258 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (108,340) (23,126) (23,126) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (108,340) (108,340) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (108,340) (23,126) (23,126) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (108,340) (23,126) (23,126) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (108,340) (23,126) (23,126) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 310 258 276 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 301 2 279 2 84 1 40 1 166 1 110 2 62 1 195 1 220 2 168 3 286 2 6 2 128 1 319 1 320 1 149 1 201 9 295 1 357 1 135 9 21 1 273 5 228 6 329 1 330 1 28 2 188 4 
332 1 301 2 279 2 84 1 40 1 166 1 110 2 62 1 195 1 220 2 168 3 6 2 286 2 128 1 319 1 320 1 149 1 201 9 295 1 357 1 135 9 21 1 273 5 228 6 329 1 330 1 28 2 188 4 
332 1 301 2 279 2 84 1 40 1 166 1 110 2 62 1 195 1 220 2 168 4 6 2 286 2 128 1 319 1 320 1 149 1 201 10 295 1 357 1 135 10 21 1 273 6 228 7 329 1 330 1 28 2 188 5 
332 1 301 1 279 2 84 1 40 1 166 1 110 2 195 1 220 2 168 2 6 2 286 2 128 1 319 1 320 1 149 1 201 7 295 1 357 1 135 7 21 1 273 4 228 4 329 1 330 1 28 2 188 3 
332 1 301 2 201 4 279 1 357 1 135 4 62 1 168 1 220 1 228 3 273 3 286 1 6 1 329 1 319 1 28 1 320 1 188 2 
302 1 149 1 201 2 357 1 279 1 84 1 135 2 325 1 110 1 196 1 220 1 273 1 286 1 329 1 319 1 28 1 
201 3 357 1 135 3 166 1 110 1 220 2 168 1 273 2 228 1 286 2 329 1 319 1 188 1 
166 1 201 1 33 1 174 1 220 1 286 1 357 1 135 1 
166 1 201 1 33 1 174 1 220 1 286 1 357 1 135 1 
269 1 187 1 86 1 
277 2 103 1 187 1 
16 2 12 2 305 1 77 1 88 2 89 2 244 2 245 2 
158 1 12 2 157 2 31 1 305 1 36 1 142 1 254 1 280 2 87 1 125 1 61 1 257 1 147 1 88 2 89 3 66 2 346 2 16 3 92 1 292 1 97 1 204 1 244 2 245 2 246 1 179 1 297 1 249 1 210 1 227 1 77 1 300 1 214 2 53 1 364 1 26 1 
16 1 12 1 160 1 77 1 88 1 89 1 186 1 244 1 245 1 49 1 
16 1 262 1 12 1 120 1 60 1 358 1 269 1 226 1 197 1 185 1 89 1 186 1 187 1 68 1 
16 1 12 1 120 1 60 1 358 2 245 1 244 1 269 1 197 2 88 1 185 1 89 1 186 1 187 1 68 1 
197 1 116 1 5 1 259 1 358 1 
269 1 197 2 116 1 259 1 318 1 187 1 358 2 98 1 
197 1 259 1 358 1 
16 1 12 1 140 1 160 1 358 1 245 1 244 1 49 1 197 1 116 1 77 1 88 1 89 1 186 1 
187 1 
269 1 197 2 235 1 116 1 259 1 318 1 187 1 358 2 
29 1 190 1 334 1 1 1 94 1 121 2 358 5 314 1 269 1 197 5 4 2 116 2 259 2 318 1 212 1 187 1 215 1 199 1 67 2 
305 1 86 1 
16 2 12 2 305 2 245 1 244 1 88 1 89 2 261 1 171 1 
115 1 191 1 239 1 
16 1 157 1 31 1 158 1 305 1 356 1 142 1 280 1 246 1 179 1 87 1 249 1 89 1 214 1 53 1 364 1 
16 2 158 1 31 1 12 1 157 1 290 1 142 1 280 1 244 1 246 1 179 1 87 1 249 1 315 1 88 1 89 2 239 1 364 1 214 1 53 1 
16 5 12 5 290 1 192 1 305 1 244 4 245 1 361 1 315 2 226 1 183 1 88 4 89 5 261 1 
16 2 12 2 322 1 88 2 89 2 186 1 244 2 49 1 
16 3 12 3 315 1 305 1 88 3 89 3 245 1 244 3 
16 1 12 1 88 1 89 1 186 1 244 1 49 1 
16 1 12 1 88 1 89 1 186 1 261 1 171 1 244 1 245 1 
158 1 31 1 12 3 157 1 305 1 120 1 142 1 60 1 255 1 254 1 280 1 87 1 257 1 315 1 198 1 197 1 88 3 89 4 261 1 66 2 346 1 68 1 16 4 290 1 292 1 97 1 204 1 358 1 245 2 244 3 246 1 179 1 297 1 249 1 210 1 227 1 77 1 185 1 300 1 186 1 364 1 53 1 214 1 26 1 
16 2 12 2 361 1 315 1 226 1 305 1 88 1 89 2 244 1 
16 3 12 3 290 1 120 1 60 1 255 1 358 1 245 1 244 3 315 2 197 1 88 3 185 1 89 3 186 1 154 1 261 1 187 1 68 1 
16 2 12 2 315 1 191 1 88 2 89 2 239 1 261 1 244 2 245 1 
16 1 157 1 31 1 158 1 305 1 142 1 280 1 179 1 246 1 87 1 249 1 89 1 214 1 53 1 364 1 
16 1 157 1 158 1 9 1 305 1 142 1 280 1 179 1 246 1 87 1 249 1 251 1 89 1 214 1 364 1 
191 2 304 1 82 1 57 1 56 1 141 1 162 1 257 1 147 2 345 1 239 2 66 2 346 4 292 1 242 1 97 2 204 1 205 1 297 1 50 1 208 1 115 2 300 1 26 1 
16 1 12 1 322 1 185 1 88 1 89 1 186 1 244 1 
63 1 
63 1 
43 1 248 1 
43 1 248 1 
43 1 248 1 
63 1 
63 1 
43 1 248 1 63 2 
63 1 
63 1 
63 1 
63 1 
63 1 
16 1 12 1 263 1 152 1 308 1 310 1 358 1 244 1 180 1 165 1 256 1 41 1 63 1 258 1 197 1 219 1 88 1 89 1 240 1 
263 2 152 2 308 2 358 2 180 1 267 1 340 1 126 1 63 2 23 1 219 2 197 2 169 1 187 1 240 2 
6 1 279 1 28 1 
196 1 279 1 28 1 
173 1 54 1 196 1 6 2 279 3 274 1 
54 1 196 1 362 1 6 1 279 2 274 1 
54 2 196 1 6 1 279 2 274 1 
30 1 12 1 190 1 82 1 140 1 160 1 58 2 121 1 162 1 337 1 165 1 122 1 4 1 197 5 88 1 89 1 259 1 318 1 199 2 67 1 16 1 94 1 265 1 358 5 46 1 244 1 245 1 206 1 247 1 49 1 269 1 116 4 77 1 186 1 78 1 187 1 
30 1 190 1 12 1 80 2 82 1 81 1 140 1 160 1 121 1 162 1 337 1 165 1 218 1 4 1 197 5 5 2 88 1 259 3 89 1 318 1 199 2 67 1 16 1 94 1 265 1 46 1 358 5 245 1 244 1 206 1 247 1 49 1 269 1 116 4 77 1 186 1 187 1 
12 1 30 1 82 1 140 1 160 1 58 1 121 1 162 1 122 1 165 1 337 1 4 1 197 3 88 1 89 1 67 1 199 2 16 1 94 1 265 1 358 3 244 1 245 1 247 1 206 1 49 1 269 1 116 2 77 1 186 1 78 1 212 1 187 1 
30 1 82 1 58 1 121 1 162 1 122 1 165 1 337 1 4 1 197 2 7 1 67 1 199 2 94 1 265 1 358 2 206 1 247 1 116 1 212 1 78 1 
86 1 246 1 231 1 
354 1 246 1 
363 1 
158 1 249 1 246 1 
246 1 27 1 
158 1 246 1 
158 1 249 1 233 1 246 3 155 1 231 2 
17 1 159 1 242 3 93 1 133 1 141 2 97 3 309 1 194 1 243 1 177 1 176 2 162 1 147 4 299 1 345 1 346 7 
17 1 159 1 242 3 93 1 133 1 141 2 97 3 309 1 194 1 243 1 177 1 176 2 162 1 147 4 299 1 345 1 346 7 
17 1 159 1 242 3 93 1 133 1 141 2 97 3 309 1 194 1 243 1 177 1 47 1 176 2 162 1 147 4 299 1 345 1 346 7 
159 2 82 3 141 5 309 2 194 1 85 1 162 4 337 3 257 1 111 1 167 1 147 16 285 3 345 4 66 2 346 31 130 1 17 1 133 1 93 2 242 10 114 1 97 15 72 1 204 1 243 2 205 3 176 3 177 5 297 1 101 4 299 1 211 1 26 1 
287 1 17 1 159 1 93 1 133 1 242 4 114 1 141 3 309 1 97 4 204 2 194 1 294 1 243 1 177 1 176 2 162 1 297 2 257 2 147 5 345 1 66 4 26 2 346 9 
157 1 333 1 335 1 278 1 279 2 38 1 280 1 164 1 110 1 196 1 341 1 220 1 112 1 6 1 286 1 319 1 172 1 173 1 201 2 357 1 135 2 179 1 136 1 273 1 228 1 329 1 214 1 213 1 364 1 28 1 
157 1 333 1 106 1 278 1 279 2 38 1 280 1 164 1 110 1 339 1 196 1 341 1 220 1 6 1 286 1 319 1 172 1 173 1 201 3 135 3 179 1 136 1 360 1 273 1 228 2 329 1 214 1 213 1 364 1 28 1 
157 1 333 1 106 1 279 2 38 1 280 1 164 1 110 1 196 1 341 1 6 1 319 1 172 1 173 1 201 2 135 2 179 1 360 1 273 1 228 2 329 1 214 1 213 1 364 1 28 1 
157 1 158 1 333 2 13 1 143 1 38 2 280 1 87 1 110 2 339 1 220 1 286 1 172 2 347 1 289 1 201 1 350 1 135 1 179 1 246 1 225 1 214 1 364 1 
157 1 333 1 335 1 278 1 279 2 38 1 280 1 164 1 110 1 196 1 341 1 220 1 6 1 286 1 172 1 173 1 201 1 357 1 135 1 179 1 136 1 360 1 214 1 213 1 364 1 28 1 
293 1 
158 1 30 1 157 2 3 1 120 1 121 1 163 1 39 1 87 2 4 1 127 2 221 2 259 6 89 1 318 3 129 1 45 2 262 1 94 2 134 4 179 1 269 1 226 1 103 2 270 1 185 1 186 1 187 2 190 1 12 1 277 2 60 1 280 2 144 1 145 1 238 2 146 2 197 5 15 1 64 1 199 2 67 1 68 1 16 1 70 2 347 1 288 1 350 1 352 1 358 5 246 1 250 2 298 1 214 2 364 1 
16 1 262 1 12 1 235 1 3 1 352 1 120 1 134 2 60 1 358 3 163 1 197 3 15 1 226 1 127 1 298 1 185 1 259 2 89 1 318 1 186 1 68 1 
12 1 3 1 235 1 120 1 60 1 163 1 15 1 197 3 259 1 89 1 318 1 68 1 16 1 262 1 45 1 352 1 134 3 358 3 226 1 269 1 298 1 185 1 186 1 187 1 
12 1 235 1 3 1 120 1 60 1 163 1 238 1 15 1 197 3 127 1 89 1 259 2 318 1 68 1 16 1 262 1 45 1 352 1 134 3 358 3 226 1 269 1 298 1 185 1 186 1 187 1 
3 1 120 1 252 1 121 1 163 1 4 1 127 4 221 2 89 1 259 7 318 3 262 1 45 4 94 1 134 6 226 1 269 5 270 1 103 2 185 1 186 1 187 5 105 1 12 1 190 1 14 1 235 1 236 1 60 1 144 1 238 4 146 2 197 5 15 1 344 1 67 1 199 1 68 1 16 1 70 2 352 1 358 5 250 2 298 1 
190 1 12 1 277 2 3 1 120 1 121 1 60 1 163 1 144 1 238 2 146 2 15 1 4 1 197 4 127 2 221 2 259 4 89 1 318 2 199 1 67 1 68 1 16 1 70 2 288 1 45 2 262 1 352 1 94 1 134 4 358 4 250 2 269 1 226 1 103 2 270 1 298 1 185 1 186 1 187 2 
105 1 12 1 190 1 14 1 3 1 120 1 236 1 121 1 60 1 144 1 163 1 238 2 146 2 15 1 197 4 4 1 127 2 221 2 259 4 89 1 318 2 199 1 67 1 68 1 16 1 70 2 45 2 262 1 352 1 94 1 134 4 358 4 250 2 269 1 226 1 103 2 270 1 298 1 185 1 186 1 187 1 
105 1 12 1 190 1 14 1 3 1 120 1 236 1 121 1 60 1 144 1 163 1 238 2 146 2 15 1 197 4 4 1 127 2 221 2 259 4 89 1 318 2 199 1 67 1 68 1 16 1 70 2 45 2 262 1 352 1 94 1 134 4 358 4 250 2 269 1 226 1 103 2 270 1 298 1 185 1 186 1 187 1 
12 1 190 1 277 2 3 1 120 1 253 1 236 1 121 1 60 1 163 1 238 2 15 1 197 4 4 1 127 2 342 2 259 4 89 1 318 2 199 1 67 1 68 1 16 1 70 2 45 2 262 1 352 1 94 1 353 1 95 2 134 4 358 4 10 1 250 2 269 1 226 1 270 1 298 1 185 1 186 1 187 1 
105 1 190 1 12 1 14 1 3 1 120 1 252 1 236 1 121 1 60 1 144 1 163 1 146 2 238 3 4 1 15 1 197 4 221 2 127 3 89 1 259 5 318 2 199 1 67 1 68 1 16 1 70 2 262 1 45 3 352 1 94 1 134 5 358 4 250 2 269 1 226 1 103 2 270 1 298 1 185 1 186 1 187 1 
105 1 190 1 12 1 14 1 3 1 120 1 252 1 236 1 121 1 60 1 144 1 163 1 146 2 238 3 4 1 15 1 197 4 221 2 127 3 89 1 259 5 318 2 199 1 67 1 68 1 16 1 70 2 262 1 45 3 352 1 94 1 134 5 358 4 250 2 269 1 226 1 103 2 270 1 298 1 185 1 186 1 187 1 
190 1 12 1 277 2 3 1 120 1 121 1 60 1 163 1 238 2 15 1 4 1 197 4 127 2 342 2 259 4 89 1 318 2 199 1 67 1 68 1 16 1 70 2 288 1 45 2 262 1 352 1 94 1 95 2 134 4 358 4 10 1 250 2 269 1 226 1 270 1 298 1 185 1 186 1 187 1 
17 1 191 1 292 1 305 2 242 2 93 1 133 1 141 2 97 3 309 1 204 1 194 1 176 1 86 1 162 1 297 1 115 1 208 1 257 1 147 3 345 1 300 1 239 1 66 2 26 1 346 6 
191 4 82 2 305 1 141 1 161 1 162 2 337 2 257 2 111 1 284 1 147 8 285 3 345 1 239 11 66 4 346 14 92 1 200 1 292 1 242 2 97 6 204 2 205 1 177 1 266 1 297 2 115 11 101 3 224 1 227 1 211 1 300 2 26 2 
158 1 31 1 157 1 12 1 119 1 191 1 305 1 142 1 280 1 87 1 315 1 257 1 147 1 88 1 89 2 66 2 346 2 16 2 290 1 92 1 292 1 175 1 71 1 356 1 97 1 204 1 244 1 246 1 179 1 297 1 249 1 224 1 227 1 300 1 364 1 53 1 214 1 26 1 
157 3 31 2 158 2 82 2 305 2 309 1 162 3 87 1 257 3 315 1 88 1 89 3 92 1 93 1 133 1 97 10 176 1 177 4 179 2 51 2 137 1 224 1 227 1 53 2 12 1 191 7 141 4 59 1 142 2 194 1 280 3 237 2 337 2 147 10 345 3 239 7 66 6 346 20 16 3 17 1 290 1 292 3 241 2 242 8 204 3 205 2 244 1 246 2 153 2 297 3 249 2 115 7 360 1 210 2 76 1 300 3 214 3 364 2 26 3 
0 1 12 1 157 7 158 2 280 8 87 2 338 1 125 2 315 1 257 2 170 1 147 1 343 1 112 1 88 1 89 1 66 4 346 2 16 1 347 1 92 1 292 2 350 1 97 1 204 2 296 1 244 1 48 1 179 2 246 3 297 2 208 1 268 1 360 1 227 1 300 2 364 2 214 8 26 2 
12 1 191 1 82 1 141 1 162 1 337 1 257 1 147 1 88 1 89 1 345 1 239 1 261 1 66 2 346 3 16 1 292 1 242 1 97 2 204 1 205 1 245 1 244 1 297 1 115 1 224 1 181 1 300 1 26 1 
191 1 292 1 82 1 242 1 204 1 177 1 162 1 297 1 50 1 115 1 208 1 257 1 147 2 300 1 239 1 66 2 26 1 346 2 
191 1 292 1 242 1 57 1 141 1 97 2 204 1 205 1 297 1 115 1 208 1 257 1 300 1 345 1 239 1 66 2 26 1 346 2 
191 2 82 1 141 1 162 1 337 1 257 1 147 2 345 1 239 2 66 2 346 4 292 1 242 2 97 2 204 1 205 1 177 1 297 1 208 1 115 2 300 1 26 1 
0 1 191 1 292 1 82 1 242 1 204 1 177 1 162 1 297 1 50 1 115 1 257 1 147 2 300 1 239 1 66 2 26 1 346 2 
0 1 191 1 292 1 242 1 57 1 141 1 97 2 204 1 205 1 297 1 115 1 257 1 300 1 345 1 239 1 66 2 26 1 346 2 
0 1 191 2 82 1 141 1 162 1 337 1 257 1 147 2 345 1 239 2 66 2 346 4 292 1 242 2 97 2 204 1 205 1 177 1 297 1 115 2 300 1 26 1 
191 2 292 1 82 1 242 2 141 1 97 2 204 1 205 1 177 1 162 1 297 1 337 1 115 2 257 1 147 2 345 1 300 1 239 2 66 2 26 1 346 4 
158 1 31 1 157 1 305 1 142 1 280 1 87 1 257 1 147 1 89 1 66 2 346 2 16 1 92 1 292 1 97 1 204 1 179 1 246 1 297 1 249 1 210 1 227 1 300 1 364 1 53 1 214 1 26 1 
16 1 157 1 158 1 92 1 292 1 9 1 305 1 97 1 204 1 142 1 280 1 246 1 179 1 297 1 87 1 249 1 257 1 251 1 147 1 227 1 300 1 89 1 104 1 214 1 364 1 26 1 66 2 346 2 
191 2 82 1 141 1 162 1 337 1 257 1 147 2 345 1 239 2 66 2 346 4 292 1 242 2 97 2 204 1 205 1 177 1 297 1 115 2 224 1 300 1 26 1 
31 1 157 1 158 1 191 2 82 1 141 1 142 1 280 1 162 1 337 1 257 1 147 2 112 1 345 1 89 1 239 2 66 2 346 4 16 1 292 1 242 2 97 2 204 1 205 1 177 1 179 1 246 1 297 1 51 1 115 2 249 1 210 1 300 1 364 1 53 1 214 1 26 1 
12 1 191 1 82 1 162 1 337 1 257 1 147 2 88 1 65 1 345 1 89 1 239 1 261 1 66 2 346 3 16 1 292 1 242 1 97 1 204 1 205 1 177 1 245 1 244 1 297 1 115 1 224 1 300 1 26 1 
189 1 82 3 141 3 37 1 162 3 337 3 313 1 257 2 111 1 147 9 285 1 345 3 66 4 346 19 287 1 242 6 18 1 355 2 97 10 204 2 205 3 177 3 359 1 297 2 75 1 101 2 211 1 229 2 26 2 365 1 
189 2 82 3 306 1 141 2 37 2 162 3 312 1 337 3 313 1 257 3 147 14 345 2 285 2 66 6 346 26 287 1 321 1 348 1 242 4 132 1 114 2 355 4 97 12 204 3 205 2 177 2 359 1 297 3 22 1 101 2 211 2 229 1 26 3 365 1 
189 1 82 4 306 1 141 4 309 1 194 1 37 2 162 5 312 1 337 4 313 1 257 3 111 1 147 20 285 3 345 5 66 6 346 41 287 1 321 1 17 1 348 1 93 1 133 1 132 1 242 8 18 1 114 1 355 4 97 21 204 3 205 4 176 1 177 4 359 1 297 3 326 1 22 1 101 4 211 3 229 1 26 3 365 1 
189 1 82 4 306 1 141 4 309 1 194 1 37 2 162 5 312 1 337 4 313 1 257 4 111 1 147 20 285 3 345 4 66 8 346 38 287 1 321 1 17 1 348 1 93 1 133 1 132 1 242 7 18 1 114 2 355 4 97 18 204 4 205 3 176 1 177 3 359 1 297 4 326 1 22 1 101 4 211 3 229 1 26 4 365 1 
189 1 82 7 306 1 141 7 309 1 194 1 37 1 162 8 312 1 337 7 313 1 257 2 111 2 147 27 285 4 345 8 66 4 346 52 287 1 321 1 17 1 348 1 200 2 93 1 133 1 132 1 242 14 114 1 355 4 97 25 204 2 205 7 176 1 177 7 359 1 297 2 22 1 101 4 211 2 229 1 26 2 365 1 
340 1 63 1 219 1 263 1 152 1 108 1 240 1 
310 1 
63 1 219 1 263 1 152 1 90 1 240 1 
32 1 
52 1 
263 1 152 1 308 2 358 1 180 1 267 1 340 1 126 1 63 1 23 1 197 1 219 1 169 1 187 1 240 1 
263 1 152 1 308 2 358 1 180 1 267 1 340 1 126 1 63 1 23 1 197 1 219 1 169 1 187 1 240 1 
263 1 152 1 308 2 358 1 180 1 267 1 340 1 126 1 63 1 23 1 197 1 219 1 169 1 187 1 240 1 
32 1 
32 1 
52 1 
52 1 
55 1 69 1 
276 1 263 1 152 1 308 1 310 1 358 1 165 1 256 1 267 1 41 1 63 1 258 1 219 1 197 1 169 1 116 1 240 1 
79 1 158 1 12 2 157 2 234 1 280 2 338 1 125 2 257 1 283 1 147 1 343 1 89 2 66 2 346 2 16 2 148 1 92 1 292 1 97 1 204 1 19 1 179 1 246 1 297 1 224 1 227 1 300 1 364 1 214 2 26 1 
172 1 157 2 173 1 303 1 203 1 223 1 278 1 279 2 280 2 179 1 164 1 360 1 196 1 112 1 6 1 364 1 214 2 213 1 28 1 
172 1 157 1 173 1 223 1 278 1 279 2 280 1 179 1 164 1 360 1 196 1 138 1 6 1 214 1 213 1 364 1 28 1 
172 1 347 1 158 1 157 1 303 1 13 1 350 1 280 1 179 1 246 1 20 1 87 1 364 1 214 1 
172 1 157 1 173 1 303 1 203 1 223 1 278 1 279 2 280 1 179 1 164 1 360 1 196 1 6 1 214 1 213 1 364 1 28 1 
24 1 
29 1 269 1 94 1 187 1 215 1 86 1 199 1 
190 1 277 1 94 1 121 1 358 1 144 1 146 1 269 1 197 1 4 1 221 1 103 1 259 1 318 1 187 2 67 1 199 1 
157 1 190 2 158 1 30 1 82 1 107 1 121 2 280 1 162 1 337 1 237 1 87 1 109 1 197 2 4 2 259 2 318 1 199 3 67 2 68 1 349 1 113 1 354 2 94 2 265 2 358 2 206 2 323 1 246 4 179 2 249 1 11 1 184 1 214 1 364 1 155 1 231 1 
190 1 82 4 306 1 277 3 121 1 162 4 312 1 337 4 111 1 4 1 285 2 345 4 67 1 199 7 321 1 200 1 132 1 94 11 265 8 205 4 206 8 22 1 101 2 103 3 211 1 327 2 
190 1 12 1 14 1 140 1 160 1 309 1 121 1 194 1 162 2 4 1 197 1 88 1 89 1 345 1 67 1 199 2 16 1 93 1 151 1 94 2 358 1 245 1 244 1 49 1 271 1 77 1 327 2 186 1 
29 1 190 1 94 1 121 1 4 1 269 1 187 1 215 1 67 1 199 1 
337 1 82 1 265 1 206 1 199 2 162 1 
269 1 197 1 259 1 318 1 187 1 358 1 
158 1 190 1 157 4 30 2 121 2 280 4 39 1 87 2 145 2 4 2 197 3 64 1 259 4 318 2 67 2 199 2 8 1 347 1 91 1 131 1 350 1 94 2 358 3 179 1 246 1 324 2 212 1 364 1 214 4 
157 1 12 2 31 1 158 1 305 1 142 1 254 1 280 1 87 1 257 1 88 2 89 3 66 2 346 1 16 3 292 1 97 1 204 1 244 2 245 2 179 1 246 1 297 1 249 1 210 1 227 1 77 1 300 1 214 1 53 1 364 1 26 1 
190 1 30 1 94 1 121 1 206 1 145 1 4 1 269 1 187 1 199 1 67 1 
118 1 219 1 240 1 
219 1 307 1 96 1 240 1 69 1 
118 1 219 1 240 1 
118 1 219 1 240 1 
219 1 336 1 240 1 
219 1 336 1 240 1 
219 1 336 1 240 1 
219 1 240 1 
63 1 
17 1 242 3 133 1 93 1 114 1 141 2 97 4 309 1 204 2 194 1 176 1 177 1 162 1 297 2 257 2 147 4 345 1 66 4 26 2 346 8 
17 1 133 1 93 1 242 2 141 2 97 3 309 1 194 1 176 1 86 1 162 1 147 3 345 1 346 6 
82 1 242 2 141 1 97 2 204 1 205 1 281 1 177 1 162 1 297 1 337 1 257 1 147 2 345 1 66 2 26 1 346 4 
82 1 242 2 141 1 97 4 205 1 177 1 162 1 337 1 101 2 111 1 147 3 211 1 345 1 285 1 346 7 
82 2 141 5 309 2 194 1 162 3 282 1 337 2 111 1 257 2 284 1 147 11 285 2 345 3 66 4 346 23 17 1 200 1 93 2 133 1 242 9 114 2 97 12 204 2 205 2 176 1 177 4 297 2 101 2 26 2 
101 1 97 1 346 1 
147 1 285 1 346 1 
82 1 242 3 141 2 97 3 204 1 205 1 281 1 177 1 162 1 297 1 237 1 337 1 257 1 147 3 345 1 26 1 66 2 346 6 
82 2 306 1 141 1 162 2 312 1 337 2 257 1 147 6 285 1 345 2 66 2 346 12 287 1 321 1 132 1 242 2 97 6 204 1 205 2 177 1 297 1 101 1 22 1 211 1 26 1 
93 1 242 2 141 1 97 3 309 1 194 1 177 1 162 1 147 3 345 1 346 6 
17 1 242 2 93 1 133 1 114 1 141 1 309 1 97 2 204 1 177 1 282 1 297 1 257 1 147 1 66 2 26 1 346 3 
287 1 151 1 93 2 242 5 141 3 309 2 97 5 204 1 194 1 177 2 162 2 297 1 257 1 147 5 345 2 26 1 66 2 346 10 
287 1 82 1 242 1 204 1 177 1 162 1 297 1 257 1 147 2 66 2 26 1 346 2 
287 1 82 1 242 2 141 1 97 2 204 1 205 1 177 1 162 1 297 1 337 1 257 1 147 2 345 1 66 2 26 1 346 4 
287 1 93 1 242 2 114 1 18 1 141 1 97 2 309 1 204 3 177 1 282 1 297 3 257 3 147 1 66 6 26 3 346 3 
82 3 141 7 309 3 194 2 281 1 282 1 162 5 337 3 167 1 257 5 111 1 147 16 285 3 345 5 66 10 346 34 130 1 287 1 17 1 93 3 133 1 242 12 114 2 18 1 72 1 97 18 204 5 205 3 176 1 177 5 297 5 101 4 211 1 26 5 
306 1 141 2 309 1 194 1 162 1 257 1 147 4 345 1 285 1 66 2 346 8 287 1 17 1 133 1 93 1 242 2 97 4 204 1 176 1 297 1 101 1 211 1 26 1 
82 1 306 1 141 2 309 1 194 1 281 1 162 2 337 1 257 2 111 1 147 6 345 1 285 1 66 4 346 11 287 1 17 1 93 1 133 1 242 3 97 5 204 2 176 1 177 1 297 2 101 2 211 1 26 2 
82 2 306 1 141 3 309 1 194 1 281 1 162 3 312 1 337 2 257 3 147 9 285 1 345 3 66 6 346 19 287 1 321 1 17 1 93 1 133 1 132 1 242 4 114 1 97 10 204 3 205 2 176 1 177 1 297 3 101 1 22 1 211 1 26 3 
82 2 306 1 141 3 309 1 194 1 281 1 162 3 312 1 337 2 257 3 147 10 285 1 345 2 66 6 346 17 287 1 321 1 17 1 93 1 133 1 132 1 242 5 114 1 97 7 204 3 205 1 176 1 177 2 297 3 101 1 22 1 211 1 26 3 
306 1 141 2 309 1 194 1 162 1 257 1 147 4 345 1 285 1 66 2 346 8 287 1 17 1 133 1 93 1 242 2 97 4 204 1 176 1 297 1 101 1 211 1 26 1 
82 2 306 1 141 1 162 2 312 1 337 2 257 1 147 6 285 1 345 2 66 2 346 12 287 1 321 1 132 1 242 2 97 6 204 1 205 2 177 1 297 1 101 1 22 1 211 1 26 1 
82 2 306 1 141 3 309 1 194 1 281 1 162 3 312 1 337 2 257 4 147 10 285 1 345 2 66 8 346 18 287 1 321 1 17 1 93 1 133 1 132 1 242 5 114 2 97 8 204 4 205 1 176 1 177 2 297 4 22 1 101 1 211 1 26 4 
82 3 306 1 141 3 162 3 312 1 337 3 257 4 147 9 285 1 345 2 66 8 346 16 287 1 321 1 132 1 242 6 18 1 114 2 97 7 204 4 205 2 177 3 297 4 22 1 101 1 211 1 26 4 
17 1 133 2 93 3 242 6 141 3 97 4 309 3 194 1 177 3 162 1 147 3 345 1 346 7 
82 2 306 1 141 3 309 1 194 1 162 3 312 1 337 2 257 4 147 10 285 1 345 2 66 8 346 18 287 1 321 1 17 1 93 1 133 1 132 1 242 4 18 1 114 2 97 8 204 4 205 1 176 1 177 1 297 4 22 1 101 1 211 1 26 4 
16 1 12 1 361 1 316 1 226 1 305 1 89 1 
16 1 12 1 305 1 83 1 316 1 361 1 226 1 272 1 89 1 260 1 216 1 232 1 
87 1 347 1 158 1 157 1 350 1 364 1 280 1 214 1 86 1 179 1 246 1 
16 2 158 1 12 1 157 1 31 1 305 1 142 1 280 1 244 1 246 1 179 1 87 1 249 1 315 1 88 1 89 2 214 1 364 1 
16 2 158 2 12 2 157 1 31 1 305 1 202 1 60 1 142 1 280 1 244 2 246 3 179 1 324 1 249 2 315 1 185 1 88 1 89 2 186 1 214 1 364 1 27 1 
157 2 12 2 158 2 305 1 142 1 60 1 280 2 315 1 88 1 89 2 16 2 351 1 9 1 202 1 244 2 179 1 246 3 324 1 249 2 185 1 186 1 364 1 214 2 27 1 
158 1 157 3 351 1 2 1 202 1 354 1 358 2 280 3 179 1 246 4 87 1 324 1 249 1 269 1 197 2 42 1 259 1 187 1 214 3 364 1 27 1 68 1 231 1 
158 1 157 3 351 1 202 1 354 1 358 2 280 3 179 1 246 4 87 1 324 1 249 1 269 1 197 2 11 1 259 1 187 1 214 3 364 1 27 1 68 1 231 1 
157 1 268 1 364 1 280 1 214 1 179 1 
44 1 157 6 158 2 296 1 280 7 178 1 48 1 246 3 179 3 87 2 125 1 249 1 268 1 360 1 182 1 170 1 343 1 112 1 214 7 364 2 155 1 
79 1 158 1 12 1 157 1 31 1 191 1 305 2 141 2 309 1 142 1 194 1 280 1 162 1 315 1 257 2 147 3 88 1 112 1 345 1 89 2 239 1 66 4 346 6 16 2 17 1 292 2 242 2 93 1 133 1 241 1 97 3 204 2 176 1 244 1 246 1 179 1 297 2 51 1 115 1 249 1 224 1 210 1 300 2 364 1 214 1 53 1 26 2 
29 1 157 1 190 2 107 1 121 2 280 1 87 1 4 2 197 3 259 2 318 1 199 1 67 2 68 1 131 1 113 1 94 1 354 1 358 3 246 2 269 1 11 1 116 1 184 1 187 1 214 1 215 1 231 1 
158 1 249 1 157 2 268 1 112 1 364 1 280 2 214 2 179 2 246 2 155 1 323 1 231 1 
347 1 157 4 158 1 351 1 350 1 280 4 179 1 246 1 87 1 112 1 230 1 214 4 364 1 
156 1 44 1 157 2 158 1 59 1 280 2 178 1 246 1 179 2 324 1 249 1 328 1 214 2 364 1 
87 1 157 1 196 1 279 1 364 1 213 1 280 1 214 1 179 1 28 1 
158 1 148 1 157 2 360 1 343 1 112 1 364 1 280 2 214 2 179 1 246 1 
347 1 157 4 158 2 350 1 280 5 48 1 246 3 179 2 324 1 87 1 170 1 343 1 112 1 230 1 214 5 364 2 
156 1 44 1 157 2 158 2 350 1 280 2 178 1 99 1 246 2 179 3 87 1 249 1 343 1 112 1 328 1 214 2 364 2 
16 2 158 1 12 1 157 1 9 1 305 1 142 1 280 1 244 1 246 1 179 1 87 1 249 1 315 1 88 1 89 2 214 1 364 1 
324 1 44 1 158 1 249 1 157 1 182 1 364 1 280 1 214 1 178 1 179 2 246 1 155 1 
209 1 150 1 305 1 35 1 222 1 
291 1 150 2 305 1 120 1 35 2 60 1 255 1 358 2 74 1 209 1 269 1 197 2 102 1 116 1 185 1 186 1 187 1 222 2 68 1 
16 1 12 1 234 1 35 1 19 1 209 1 283 1 89 1 222 1 
209 1 291 1 102 1 
273 1 329 1 319 1 86 1 
201 1 220 1 273 1 286 1 329 1 135 1 319 1 
110 1 38 1 135 1 
201 3 264 1 193 1 357 1 135 3 84 2 124 1 220 1 273 1 286 1 329 1 319 1 
301 1 201 2 220 1 273 1 228 1 286 1 329 1 135 2 319 1 
201 1 220 1 273 1 6 1 286 1 279 1 357 1 135 1 28 1 188 1 320 1 
201 1 220 1 273 1 286 1 357 1 329 1 135 1 
201 1 220 1 286 1 357 1 329 2 135 1 319 1 
275 1 201 2 34 1 357 1 135 2 220 2 117 1 273 1 286 2 329 1 
201 3 357 1 135 3 21 1 195 1 220 1 168 1 228 2 273 2 286 1 329 1 319 1 188 1 
173 1 201 2 279 2 357 1 311 1 135 2 196 1 220 1 273 1 228 1 286 1 6 1 329 1 319 1 28 1 
301 1 201 4 357 1 135 4 62 1 220 2 168 1 228 2 273 2 286 2 329 1 319 1 188 1 
201 1 220 1 273 1 286 1 357 1 329 1 135 1 319 1 
201 4 264 1 84 1 135 4 124 1 123 1 220 1 168 1 228 2 273 3 286 1 329 2 319 2 188 1 
201 1 174 1 217 1 357 1 135 1 123 1 207 1 220 1 286 1 329 1 319 1 
201 3 264 2 357 1 135 3 84 2 124 1 220 1 273 1 25 1 286 1 329 1 319 1 
317 2 139 1 273 2 331 1 
100 1 201 1 220 1 286 1 357 1 135 1 
195 1 201 2 220 1 273 1 228 1 286 1 357 1 329 1 135 2 319 1 
73 1 
201 1 220 1 273 1 286 1 357 1 329 1 135 1 319 1 
201 3 357 1 135 3 84 1 195 1 220 1 228 1 273 1 286 1 329 1 319 1 
123 1 168 1 273 1 188 1 
273 1 329 1 

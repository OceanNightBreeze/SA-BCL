#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (122,196) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (122,196) (122,196) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 102 (85,124,271) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (122,196) (122,196) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 323 292 354 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (122,196) (122,196) 1 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
278 1 45 5 252 2 47 1 337 2 259 1 121 1 69 6 260 1 73 1 99 1 72 2 197 1 50 9 310 2 239 1 222 1 170 1 268 9 172 2 152 2 174 3 225 4 175 1 90 1 91 2 179 1 113 1 
278 1 45 5 252 2 47 1 337 2 259 1 121 1 69 6 260 1 73 1 99 1 72 2 197 1 50 9 310 2 239 1 222 1 170 1 268 9 172 2 152 2 174 3 225 4 175 1 90 1 91 2 179 1 113 1 
278 1 45 6 252 2 47 1 337 2 259 1 121 1 69 7 260 1 73 1 99 1 72 2 197 1 50 10 310 2 239 1 222 1 170 1 268 10 172 2 152 2 174 4 225 5 175 1 90 1 91 2 179 1 113 1 
278 1 45 4 252 2 337 1 259 1 121 1 69 4 260 1 73 1 99 1 72 2 197 1 50 7 310 2 239 1 222 1 170 1 268 7 172 2 152 2 174 2 225 3 175 1 90 1 91 2 179 1 113 1 
239 1 222 1 45 3 268 4 47 1 152 1 172 1 174 1 337 2 225 2 175 1 69 3 91 1 73 1 72 1 197 1 50 4 310 1 
239 1 45 1 268 2 252 1 152 1 175 1 90 1 259 1 176 1 91 1 73 1 72 1 352 1 307 1 50 2 310 1 
239 1 45 2 268 3 252 1 174 1 225 1 175 1 121 1 69 1 73 1 72 2 50 3 310 2 
115 1 45 5 252 1 47 1 337 2 121 1 69 7 260 1 73 1 72 2 197 1 50 9 310 2 239 1 222 1 240 1 268 9 172 1 152 1 225 4 174 3 175 1 91 1 113 1 
115 1 45 5 252 1 47 1 337 2 121 1 69 7 260 1 73 1 72 2 197 1 50 9 310 2 239 1 222 1 240 1 268 9 172 1 152 1 225 4 174 3 175 1 91 1 113 1 
277 1 258 1 101 1 
277 1 366 1 269 2 
224 2 329 2 30 1 376 2 360 2 204 2 246 2 166 1 
0 1 329 2 43 1 297 1 116 1 162 1 163 1 95 2 360 3 66 1 185 2 335 1 120 2 306 1 22 1 215 1 145 1 49 1 77 1 373 1 166 1 78 1 148 1 263 2 374 1 30 1 221 1 376 2 267 1 204 2 316 1 58 2 87 1 224 2 89 1 227 1 246 3 
122 1 
277 1 11 1 128 1 360 1 223 1 241 1 224 1 48 1 258 1 5 1 244 1 177 1 40 1 246 1 
329 1 277 1 376 1 128 2 11 1 360 1 223 1 204 1 224 1 48 2 258 1 5 1 244 1 177 1 246 1 
48 1 332 1 128 1 83 1 188 1 
48 2 277 1 258 1 159 1 332 1 16 1 128 2 83 1 
48 1 332 1 128 1 
48 1 122 1 196 1 128 1 83 1 
277 1 
48 2 277 1 258 1 331 1 159 1 332 1 128 2 83 1 
169 1 277 1 184 1 200 1 159 1 117 1 332 2 118 1 128 5 83 2 318 2 20 2 48 5 255 1 258 1 136 1 71 1 261 1 41 2 
30 1 101 1 
311 1 224 2 329 1 30 2 376 1 105 1 360 2 204 1 246 2 
143 1 251 1 280 1 
0 1 374 1 30 1 116 1 95 1 163 1 360 1 66 1 316 1 335 1 120 1 215 1 145 1 246 1 355 1 263 1 
0 1 100 1 329 1 374 1 116 1 376 1 163 1 95 1 66 1 360 2 280 1 316 1 335 1 214 1 224 1 120 1 215 1 145 1 246 2 263 1 
224 3 329 3 30 1 376 3 360 3 204 1 246 3 214 1 
224 1 329 1 125 1 376 1 223 1 360 1 246 1 
224 1 311 1 329 1 376 1 105 1 223 1 360 1 204 1 246 1 
0 1 329 3 297 1 116 1 163 1 95 1 66 1 360 4 185 2 335 1 214 1 48 1 120 1 215 1 5 1 22 1 145 1 25 1 49 1 77 1 373 1 166 1 78 1 263 1 311 1 374 1 100 1 30 1 221 1 376 3 267 1 11 1 128 1 223 1 204 2 316 1 58 1 87 1 224 3 244 1 177 1 227 1 246 4 63 1 
224 2 329 1 30 1 376 1 294 1 40 1 360 2 246 2 214 1 
311 1 100 1 329 3 277 1 376 3 128 1 11 1 223 1 360 3 204 1 214 2 153 1 48 1 224 3 5 1 244 1 177 1 246 3 63 1 
311 1 329 2 143 1 376 2 360 2 204 1 280 1 214 1 224 2 246 2 
0 1 374 1 30 1 116 1 95 1 163 1 360 1 66 1 316 1 335 1 120 1 215 1 145 1 246 1 263 1 
0 1 30 1 116 1 95 1 163 1 360 1 66 1 212 1 316 1 335 1 120 1 215 1 341 1 246 1 263 1 
297 1 157 1 143 2 162 2 301 1 251 2 185 2 280 2 213 1 361 1 254 1 364 1 49 1 77 2 51 1 373 1 78 1 221 1 10 1 267 1 58 4 59 1 108 1 62 1 
224 1 329 1 330 1 5 1 376 1 223 1 360 1 246 1 
311 1 329 4 100 1 30 1 376 4 360 5 204 1 214 2 224 5 294 1 40 1 246 5 64 1 139 1 
224 2 329 2 330 1 125 1 376 2 223 1 360 2 246 2 
85 1 165 1 
85 1 165 1 
271 1 102 1 
271 1 102 1 
271 1 102 1 
359 1 85 1 165 1 
359 1 85 1 165 1 
271 1 102 1 85 1 165 1 
124 1 85 1 165 1 
359 1 85 1 165 1 
289 1 85 1 165 1 
289 1 85 1 165 1 
289 1 85 1 165 1 
150 2 277 1 9 1 265 2 128 2 333 3 85 2 283 1 206 1 48 2 33 1 144 2 135 2 365 1 24 2 367 1 371 1 165 2 114 1 
356 1 329 2 298 1 333 1 360 2 48 1 191 1 144 1 164 1 24 1 233 1 165 1 150 1 124 1 30 1 376 2 128 1 85 1 224 2 135 1 324 1 246 2 114 1 327 1 
91 1 152 1 172 1 
91 1 307 1 152 1 
299 1 23 1 91 3 137 1 307 1 172 2 
299 1 314 1 91 2 137 1 307 1 172 1 
299 1 91 2 137 2 307 1 172 1 
181 1 157 1 277 2 159 1 332 1 301 1 118 1 20 1 48 5 191 1 258 1 164 1 194 1 366 1 71 3 147 1 167 1 169 2 103 2 151 1 346 2 10 1 128 5 83 4 269 3 129 2 59 1 173 1 318 1 324 1 110 1 41 1 
277 1 158 1 332 1 128 2 334 1 83 2 188 1 48 2 258 1 122 1 196 1 198 1 
181 1 277 3 157 1 301 1 20 1 48 3 258 1 164 1 194 1 366 2 71 3 167 1 169 2 103 2 346 1 128 3 10 1 83 2 269 4 129 2 59 1 318 1 173 1 136 1 110 1 41 1 
181 1 277 4 157 2 301 2 229 1 20 1 21 1 48 4 338 1 258 1 164 2 194 1 366 3 71 5 167 1 169 4 103 4 346 2 128 4 10 2 83 3 269 7 129 4 59 2 318 1 173 2 136 1 110 1 41 1 
101 1 369 1 335 1 
182 1 335 1 
247 1 
163 1 335 1 
116 1 201 1 163 1 369 2 378 1 335 3 
116 1 163 1 335 1 
88 1 335 1 
149 1 248 1 126 1 301 1 10 1 300 1 162 4 3 1 58 7 19 1 108 3 254 2 336 1 36 1 291 1 274 2 77 3 
149 1 248 1 126 1 301 1 10 1 300 1 162 4 3 1 58 7 19 1 108 3 254 2 336 1 36 1 291 1 274 2 77 3 
149 1 248 1 126 1 301 1 10 1 300 1 162 4 3 1 58 7 19 1 108 3 254 2 336 1 36 1 291 1 274 2 237 1 77 3 
248 2 157 3 162 16 300 2 301 4 3 1 185 2 19 1 336 1 254 5 49 1 218 1 76 1 77 15 373 1 78 1 149 1 28 1 126 2 127 4 57 1 202 1 267 1 10 4 86 1 58 31 59 3 173 3 108 10 319 1 36 2 291 5 274 3 178 3 
248 1 301 1 162 5 300 1 3 1 185 4 19 1 254 3 49 2 77 4 373 2 79 1 78 2 149 1 28 1 126 1 10 1 267 2 58 9 108 4 36 1 291 1 274 2 92 1 
0 1 2 1 211 1 250 1 95 1 45 1 66 1 252 1 120 1 302 1 69 1 23 1 73 1 72 1 7 1 26 1 307 1 50 2 263 1 310 1 239 1 313 1 287 1 268 2 152 1 172 1 175 1 155 1 109 1 91 2 
0 1 183 1 211 1 250 1 95 1 45 1 66 1 252 1 120 1 302 1 69 2 23 1 73 1 72 1 7 1 26 1 307 1 50 3 263 1 310 1 239 1 168 1 313 1 268 3 152 1 172 1 155 1 109 1 91 2 180 1 
0 1 183 1 211 1 250 1 95 1 45 1 66 1 252 1 120 1 302 1 69 2 23 1 73 1 26 1 307 1 50 2 263 1 239 1 313 1 268 2 172 1 152 1 109 1 91 2 180 1 
0 1 168 1 55 1 313 2 163 1 95 1 66 1 268 1 316 1 252 2 335 1 284 1 13 1 120 1 363 1 109 2 72 1 295 1 26 2 50 1 310 1 263 1 262 1 
0 1 211 1 250 1 95 1 66 1 252 1 120 1 302 1 23 1 72 1 7 1 26 1 307 1 50 1 263 1 310 1 313 1 287 1 268 1 152 1 172 1 175 1 155 1 109 1 91 2 180 1 
370 1 
181 1 0 1 141 4 277 2 332 6 95 2 282 1 335 1 284 1 48 5 5 1 146 1 8 1 234 2 285 2 343 1 54 2 11 1 241 1 242 2 12 2 244 1 15 1 209 2 246 1 17 1 296 1 159 3 160 1 163 1 118 1 66 1 360 1 20 1 120 2 305 2 258 1 363 1 70 1 366 2 71 2 368 1 308 1 263 2 169 2 128 5 223 1 269 2 316 2 318 1 224 1 226 1 177 1 40 1 41 1 
17 1 296 1 141 2 331 1 159 1 332 2 360 1 48 3 5 1 285 1 368 1 308 1 343 1 11 1 128 3 223 1 241 1 224 1 244 1 177 1 40 1 246 1 
17 1 296 1 141 3 277 1 331 1 159 1 332 1 360 1 48 3 305 1 5 1 258 1 368 1 308 1 343 1 11 1 128 3 223 1 241 1 224 1 244 1 177 1 40 1 246 1 
17 1 296 1 141 3 277 1 331 1 159 1 332 2 360 1 48 3 305 1 5 1 258 1 285 1 368 1 308 1 343 1 11 1 128 3 223 1 241 1 224 1 244 1 177 1 40 1 209 1 246 1 
141 6 277 5 331 1 332 7 44 1 48 5 5 1 234 2 285 4 343 1 54 2 11 1 241 1 242 2 12 2 244 1 15 1 209 4 246 1 17 1 296 1 159 3 118 1 360 1 20 1 304 1 305 4 256 1 258 5 366 2 71 1 368 1 308 1 27 1 169 1 128 5 223 1 318 1 224 1 226 1 177 1 40 1 41 1 42 1 
141 4 277 2 332 4 48 4 5 1 234 2 8 1 285 2 343 1 54 2 11 1 241 1 242 2 12 2 244 1 15 1 209 2 246 1 17 1 296 1 159 2 118 1 360 1 20 1 305 2 258 1 366 2 71 1 368 1 308 1 169 1 128 4 223 1 269 2 318 1 224 1 226 1 177 1 40 1 41 1 
17 1 296 1 141 4 277 1 159 2 332 4 44 1 118 1 360 1 20 1 48 4 304 1 305 2 256 1 258 1 5 1 366 2 71 1 234 2 285 2 368 1 308 1 343 1 169 1 54 2 11 1 128 4 223 1 241 1 242 2 12 2 318 1 224 1 226 1 244 1 15 1 177 1 40 1 209 2 41 1 246 1 
17 1 296 1 141 4 277 1 159 2 332 4 44 1 118 1 360 1 20 1 48 4 304 1 305 2 256 1 258 1 5 1 366 2 71 1 234 2 285 2 368 1 308 1 343 1 169 1 54 2 11 1 128 4 223 1 241 1 242 2 12 2 318 1 224 1 226 1 244 1 15 1 177 1 40 1 209 2 41 1 246 1 
17 1 296 1 141 4 277 1 159 2 332 4 161 1 118 1 360 1 20 1 48 4 230 2 305 2 256 1 258 1 5 1 71 1 234 2 285 2 368 1 308 1 343 1 169 1 53 2 11 1 128 4 223 1 241 1 269 2 12 2 107 1 318 1 224 1 290 1 244 1 15 1 177 1 40 1 209 2 41 1 246 1 
17 1 296 1 141 5 277 1 159 2 332 5 118 1 44 1 360 1 20 1 48 4 304 1 256 1 305 3 258 1 5 1 366 2 71 1 234 2 285 3 368 1 308 1 343 1 27 1 169 1 54 2 11 1 128 4 223 1 241 1 242 2 12 2 318 1 224 1 226 1 244 1 15 1 177 1 40 1 41 1 209 3 246 1 
17 1 296 1 141 5 277 1 159 2 332 5 118 1 44 1 360 1 20 1 48 4 304 1 256 1 305 3 258 1 5 1 366 2 71 1 234 2 285 3 368 1 308 1 343 1 27 1 169 1 54 2 11 1 128 4 223 1 241 1 242 2 12 2 318 1 224 1 226 1 244 1 15 1 177 1 40 1 41 1 209 3 246 1 
141 4 277 1 332 4 48 4 230 2 5 1 234 2 8 1 285 2 343 1 53 2 11 1 241 1 12 2 244 1 15 1 209 2 246 1 17 1 296 1 159 2 161 1 118 1 360 1 20 1 305 2 258 1 71 1 368 1 308 1 169 1 128 4 223 1 269 2 318 1 224 1 177 1 40 1 41 1 
149 1 248 1 30 2 221 1 297 1 101 1 126 1 143 1 301 1 162 3 10 1 267 1 251 1 3 1 185 2 280 1 58 6 19 1 108 2 254 2 274 1 62 1 49 1 77 3 373 1 78 1 
328 1 297 2 157 2 143 4 162 8 301 1 251 11 185 4 280 11 67 1 254 1 306 1 192 1 193 1 342 1 49 2 77 6 76 1 373 2 78 2 30 1 221 1 57 1 127 3 267 2 10 2 58 14 87 1 59 1 173 2 108 2 291 1 178 3 
0 1 329 1 297 1 116 1 143 1 163 1 95 1 162 1 66 1 360 2 185 2 46 1 335 1 214 1 120 1 215 1 306 1 216 1 145 1 342 1 49 1 77 1 373 1 263 1 78 1 374 1 100 1 30 1 221 1 376 1 267 1 316 1 58 2 87 1 224 1 245 1 246 2 355 1 
0 2 329 1 143 7 95 3 3 1 185 6 280 7 335 2 145 2 342 1 49 3 52 2 149 1 100 1 10 3 58 20 59 2 108 8 14 1 291 4 112 1 246 3 248 1 357 2 297 3 157 2 116 2 301 3 163 2 162 10 360 3 66 2 251 7 19 1 214 1 254 4 120 3 306 1 215 2 77 10 373 3 263 3 78 3 374 2 30 2 221 3 126 1 376 1 267 3 316 1 87 1 317 2 173 2 224 1 272 1 274 1 275 2 227 2 180 1 
0 2 94 1 2 1 329 1 297 2 228 1 95 8 162 1 163 2 360 1 66 2 185 4 214 1 335 3 120 7 284 1 257 1 306 1 363 1 219 1 49 2 77 1 373 2 263 8 78 2 123 1 221 2 376 1 267 2 316 2 58 2 87 1 224 1 154 1 132 1 89 2 62 1 246 1 180 1 
329 1 297 1 157 1 143 1 162 1 301 1 251 1 360 1 185 2 280 1 189 1 254 1 342 1 49 1 77 2 373 1 78 1 311 1 221 1 376 1 267 1 10 1 204 1 58 3 59 1 173 1 108 1 224 1 246 1 
221 1 297 1 157 1 143 1 267 1 10 1 162 2 251 1 185 2 280 1 213 1 58 2 108 1 291 1 62 1 49 1 373 1 78 1 
221 1 297 1 143 1 267 1 301 1 251 1 185 2 280 1 58 2 59 1 108 1 254 1 62 1 49 1 77 2 373 1 51 1 78 1 
157 1 297 1 143 2 162 2 301 1 251 2 185 2 280 2 254 1 49 1 77 2 373 1 78 1 221 1 10 1 267 1 58 4 59 1 173 1 108 2 291 1 62 1 
221 1 297 1 157 1 143 1 267 1 10 1 162 2 251 1 185 2 280 1 213 1 58 2 108 1 132 1 291 1 49 1 373 1 78 1 
221 1 297 1 143 1 267 1 301 1 251 1 185 2 280 1 58 2 59 1 108 1 254 1 132 1 49 1 77 2 373 1 51 1 78 1 
157 1 297 1 143 2 162 2 301 1 251 2 185 2 280 2 254 1 49 1 77 2 373 1 78 1 221 1 10 1 267 1 58 4 59 1 173 1 108 2 132 1 291 1 
157 1 297 1 143 2 162 2 301 1 251 2 185 2 280 2 254 1 49 1 77 2 373 1 78 1 221 1 10 1 267 1 58 4 59 1 173 1 108 2 291 1 
0 1 297 1 116 1 162 1 163 1 95 1 66 1 360 1 185 2 335 1 120 1 306 1 215 1 145 1 49 1 77 1 373 1 263 1 78 1 374 1 30 1 221 1 267 1 316 1 58 2 87 1 227 1 246 1 
0 1 297 1 116 1 162 1 163 1 95 1 66 1 360 1 212 1 185 2 335 1 120 1 306 1 215 1 341 1 49 1 77 1 373 1 263 1 78 1 30 1 221 1 267 1 316 1 58 2 87 1 326 1 246 1 
157 1 297 1 143 2 162 2 301 1 251 2 185 2 280 2 254 1 342 1 49 1 77 2 373 1 78 1 221 1 10 1 267 1 58 4 59 1 173 1 108 2 291 1 
0 1 2 1 357 1 157 1 297 1 116 1 143 2 301 1 162 2 95 1 163 1 251 2 66 1 360 1 185 2 280 2 335 1 254 1 120 1 215 1 145 1 49 1 77 2 373 1 263 1 78 1 374 1 221 1 10 1 267 1 58 4 59 1 173 1 108 2 291 1 227 1 246 1 
329 1 297 1 157 1 143 1 301 1 162 2 360 1 251 1 185 2 280 1 362 1 342 1 49 1 77 1 373 1 78 1 311 1 221 1 376 1 267 1 10 1 204 1 58 3 59 1 173 1 108 1 224 1 291 1 246 1 
140 1 249 2 157 3 162 9 301 3 185 4 254 3 49 2 77 10 76 1 373 2 309 1 78 2 127 2 57 1 267 2 10 3 171 1 106 1 377 1 58 19 379 1 32 1 59 3 173 3 130 2 108 6 291 3 178 1 92 1 
249 4 157 3 301 2 162 14 185 6 254 2 49 3 77 12 373 3 309 1 78 3 28 2 57 2 127 2 267 3 10 3 106 1 377 1 58 26 379 2 32 2 59 2 173 3 130 1 108 4 291 2 323 1 350 1 292 1 351 1 325 1 178 2 92 1 354 1 
140 1 3 1 185 6 49 3 149 1 57 3 10 5 106 1 58 41 59 4 108 8 291 4 350 1 292 1 351 1 354 1 249 4 248 1 157 4 301 5 162 20 19 1 254 4 76 1 77 21 309 1 373 3 78 3 28 1 126 1 127 4 267 3 377 1 32 1 379 2 173 4 130 1 322 1 323 1 274 1 325 1 178 3 92 1 
140 1 248 1 249 4 157 4 162 20 301 4 3 1 185 8 19 1 254 4 49 4 77 18 76 1 373 4 309 1 78 4 149 1 28 2 126 1 127 4 57 3 267 4 10 5 106 1 377 1 58 38 379 2 32 1 59 3 173 4 130 1 108 7 322 1 323 1 350 1 291 3 274 1 292 1 351 1 325 1 178 3 92 1 354 1 
248 1 249 4 157 7 162 27 301 8 3 1 185 4 67 2 19 1 254 7 49 2 77 25 76 2 373 2 309 1 78 2 149 1 28 1 126 1 127 4 57 2 267 2 10 8 106 1 377 1 58 52 379 1 32 1 59 7 173 7 130 1 108 14 323 1 350 1 291 7 274 1 292 1 351 1 325 1 178 4 92 1 354 1 
150 1 135 1 144 1 9 1 365 1 24 1 85 1 367 1 205 1 165 1 
124 1 298 1 
303 1 348 1 150 1 135 1 144 1 345 1 24 1 85 1 165 1 
150 1 277 1 9 1 265 1 128 1 333 2 85 1 283 1 206 1 48 1 33 1 144 1 135 1 365 1 24 1 367 1 114 1 165 1 
150 1 277 1 9 1 265 1 128 1 333 2 85 1 283 1 206 1 48 1 33 1 144 1 135 1 365 1 24 1 367 1 114 1 165 1 
150 1 277 1 9 1 265 1 128 1 333 2 85 1 283 1 206 1 48 1 33 1 144 1 135 1 365 1 24 1 367 1 114 1 165 1 
320 1 231 1 359 1 
320 1 231 1 359 1 
289 1 75 1 
320 1 289 1 75 1 
356 1 327 1 
356 1 329 2 298 1 360 2 333 1 283 1 4 1 48 1 191 1 144 1 164 1 24 1 233 1 165 1 150 1 124 1 30 1 265 1 376 2 128 1 83 1 85 1 224 2 135 1 324 1 246 2 327 1 
231 1 359 1 
320 1 289 1 75 1 
0 1 94 1 297 1 163 1 95 2 162 1 66 1 360 2 185 2 335 1 97 1 120 2 257 1 306 1 6 1 195 1 342 1 238 1 49 1 77 1 373 1 263 2 78 1 221 1 267 1 58 2 87 1 224 2 89 2 111 1 246 2 
0 1 2 1 211 1 250 1 65 1 95 2 66 1 152 1 172 1 120 2 37 1 339 1 23 1 91 2 7 1 26 1 307 1 180 1 263 2 
0 1 211 1 250 1 264 1 65 1 95 1 66 1 152 1 172 1 120 1 23 1 91 2 7 1 26 1 307 1 180 1 263 1 
0 1 55 1 163 1 95 1 66 1 316 1 335 1 120 1 284 1 37 1 363 1 39 1 26 1 263 1 
0 1 211 1 250 1 65 1 95 1 66 1 152 1 172 1 120 1 37 1 339 1 23 1 91 2 7 1 26 1 307 1 180 1 263 1 
68 1 
169 1 277 1 258 1 184 1 101 1 200 1 71 1 
169 1 277 2 54 1 159 1 332 1 128 1 118 1 269 1 242 1 318 1 20 1 48 1 226 1 258 1 366 1 71 1 41 1 
181 2 0 4 2 1 182 3 184 1 277 8 332 5 95 3 279 2 335 10 48 5 340 2 98 2 103 6 200 1 201 1 10 2 59 2 243 1 207 1 244 2 60 2 293 1 156 1 157 2 116 3 159 3 163 3 118 4 301 2 66 3 18 2 20 4 120 3 258 2 70 1 366 6 71 9 369 2 263 3 29 1 169 8 375 2 128 5 84 2 316 1 269 12 129 6 317 2 318 4 173 2 34 2 88 2 41 4 
277 4 157 1 159 1 332 1 118 2 301 1 20 2 48 1 258 1 366 3 71 5 169 3 103 4 127 1 57 1 128 1 10 1 269 6 129 4 59 1 318 2 173 1 323 1 350 1 292 1 61 1 60 1 325 1 178 1 41 2 354 1 
1 1 248 1 169 1 126 1 301 1 10 1 128 1 44 1 118 1 3 1 318 1 20 1 48 1 122 1 60 2 196 1 71 2 41 1 
169 1 184 1 277 1 200 1 118 1 318 1 20 1 258 1 71 1 41 1 
169 5 157 2 277 5 103 5 10 2 301 2 18 1 269 10 129 5 317 1 59 2 173 2 60 2 366 5 71 5 
48 1 277 1 258 1 159 1 332 1 128 1 
181 2 0 1 159 2 160 1 332 4 163 1 118 1 95 4 66 1 335 1 20 2 120 4 48 3 284 1 363 1 70 2 146 1 71 2 263 4 344 1 169 2 82 1 128 3 316 2 318 2 207 2 136 1 41 2 156 1 
0 1 329 2 297 1 116 1 95 1 163 1 360 3 66 1 185 2 335 1 120 1 22 1 215 1 145 1 49 1 77 1 373 1 166 1 263 1 78 1 374 1 30 1 221 1 376 2 267 1 204 2 316 1 58 1 87 1 224 2 227 1 246 3 
181 1 169 2 277 4 103 2 118 1 269 4 129 2 318 1 20 1 258 2 274 1 70 1 366 2 71 1 41 1 
150 1 135 1 38 1 
150 1 135 1 38 1 
356 1 150 1 135 1 142 1 365 1 
150 1 135 1 38 1 
133 1 150 1 135 1 
133 1 150 1 135 1 
133 1 150 1 135 1 
150 1 135 1 
85 1 165 1 
149 1 28 1 248 1 126 1 301 1 10 1 162 4 267 2 3 1 185 4 58 8 19 1 108 3 254 2 291 1 274 1 49 2 77 4 373 2 78 2 
149 1 248 1 101 1 126 1 10 1 162 3 301 1 3 1 58 6 19 1 254 2 108 2 274 1 77 3 
157 1 301 1 267 1 10 1 162 2 185 2 270 1 58 4 59 1 173 1 254 1 108 2 291 1 49 1 77 2 373 1 78 1 
157 1 57 1 127 2 301 1 162 3 10 1 58 7 59 1 173 1 254 1 108 2 291 1 178 1 77 4 76 1 
248 2 157 2 162 11 301 3 3 1 185 4 96 1 67 1 19 1 254 5 192 1 49 2 76 1 77 12 373 2 78 2 149 1 28 2 126 2 127 2 10 3 267 2 58 23 59 2 173 2 108 9 291 4 274 1 178 2 
127 1 58 1 77 1 
162 1 178 1 58 1 
157 1 267 1 10 1 162 3 301 1 185 2 270 1 58 6 317 1 59 1 173 1 108 3 254 2 291 1 49 1 77 3 373 1 78 1 
157 2 162 6 301 2 185 2 254 1 49 1 77 6 373 1 78 1 127 1 57 1 267 1 10 2 58 12 59 2 173 2 108 2 291 1 350 1 323 1 292 1 325 1 178 1 92 1 354 1 
248 1 126 1 10 1 162 3 301 1 3 1 58 6 254 1 108 2 291 1 77 3 
149 1 28 1 248 1 126 1 162 1 267 1 185 2 96 1 58 3 19 1 108 2 254 1 291 1 49 1 77 2 373 1 78 1 
1 1 248 2 126 2 267 1 162 5 10 2 301 2 3 1 185 2 58 10 254 3 108 5 291 2 92 1 49 1 77 5 373 1 78 1 
157 1 267 1 10 1 162 2 185 2 58 2 108 1 291 1 92 1 49 1 373 1 78 1 
157 1 301 1 267 1 10 1 162 2 185 2 58 4 59 1 173 1 254 1 108 2 291 1 92 1 49 1 77 2 373 1 78 1 
28 1 140 1 248 1 126 1 267 3 162 1 185 6 96 1 58 3 254 1 108 2 291 1 92 1 49 3 77 2 373 3 78 3 
248 3 140 1 157 3 162 16 301 5 3 2 185 10 96 1 19 1 254 7 218 1 49 5 77 18 76 1 373 5 78 5 149 1 28 2 126 3 127 4 57 1 202 1 267 5 10 5 270 1 58 34 59 3 173 3 319 1 108 12 291 5 274 1 178 3 92 1 
248 1 301 1 162 4 3 1 185 2 19 1 254 2 49 1 77 4 373 1 78 1 149 1 126 1 127 1 57 1 10 1 267 1 58 8 108 2 274 1 178 1 92 1 354 1 
248 1 157 1 301 1 162 6 3 1 185 4 19 1 254 2 49 2 77 5 76 1 373 2 78 2 149 1 126 1 127 2 57 1 267 2 10 2 58 11 270 1 173 1 108 3 291 1 274 1 178 1 92 1 354 1 
248 1 157 2 162 9 301 3 3 1 185 6 19 1 254 3 49 3 77 10 373 3 78 3 149 1 28 1 126 1 127 1 57 1 267 3 10 3 270 1 58 19 59 2 173 2 108 4 291 1 323 1 350 1 274 1 292 1 325 1 178 1 92 1 354 1 
248 1 157 2 162 10 301 2 3 1 185 6 19 1 254 3 49 3 77 7 373 3 78 3 149 1 28 1 126 1 127 1 57 1 267 3 10 3 270 1 58 17 59 1 173 2 108 5 291 2 350 1 323 1 274 1 292 1 325 1 178 1 92 1 354 1 
248 1 301 1 162 4 3 1 185 2 19 1 254 2 49 1 77 4 373 1 78 1 149 1 126 1 127 1 57 1 10 1 267 1 58 8 108 2 274 1 178 1 92 1 354 1 
157 2 162 6 301 2 185 2 254 1 49 1 77 6 373 1 78 1 127 1 57 1 267 1 10 2 58 12 59 2 173 2 108 2 291 1 350 1 323 1 292 1 325 1 178 1 92 1 354 1 
248 1 157 2 162 10 301 2 3 1 185 8 19 1 254 3 49 4 77 8 373 4 78 4 149 1 28 2 126 1 127 1 57 1 267 4 10 3 58 18 270 1 59 1 173 2 108 5 291 2 323 1 350 1 274 1 292 1 325 1 178 1 92 1 354 1 
140 1 157 3 162 9 301 2 185 8 254 3 49 4 77 7 373 4 78 4 28 2 127 1 57 1 267 4 10 3 58 16 59 2 173 3 108 6 291 3 323 1 350 1 292 1 325 1 178 1 92 1 354 1 
149 1 248 3 126 3 301 1 10 1 162 3 3 1 58 7 19 2 254 3 108 6 291 3 77 4 
248 1 140 1 157 2 162 10 301 2 3 1 185 8 19 1 254 3 49 4 77 8 373 4 78 4 149 1 28 2 126 1 127 1 57 1 267 4 10 3 58 18 59 1 173 2 108 4 291 1 323 1 350 1 274 1 292 1 325 1 178 1 92 1 354 1 
224 1 349 1 30 1 294 1 360 1 40 1 246 1 
81 1 30 1 360 1 347 1 119 1 224 1 349 1 35 1 294 1 40 1 276 1 246 1 
284 1 120 1 0 1 363 1 101 1 163 1 95 1 66 1 316 1 335 1 263 1 
0 1 329 1 30 1 116 1 376 1 163 1 95 1 360 2 66 1 316 1 335 1 214 1 224 1 120 1 215 1 145 1 246 2 263 1 
0 1 329 1 30 1 116 2 376 2 163 2 95 1 223 1 360 2 66 1 335 3 214 1 224 2 120 1 88 1 34 1 5 1 215 1 207 1 177 1 145 1 246 2 263 1 
0 1 329 1 116 2 95 2 163 2 66 1 360 2 214 1 335 3 120 2 215 1 5 1 341 1 263 2 30 1 266 1 376 2 223 1 224 2 34 1 88 1 207 1 177 1 246 2 
0 1 182 1 277 1 116 1 332 1 95 3 163 1 66 1 335 4 120 3 48 2 258 1 369 1 372 1 263 3 56 1 266 1 128 2 316 1 34 1 88 1 207 1 244 1 
0 1 182 1 277 1 116 1 266 1 375 1 332 1 163 1 128 2 95 3 66 1 316 1 335 4 48 2 120 3 88 1 34 1 258 1 207 1 244 1 369 1 263 3 
120 1 0 1 228 1 95 1 66 1 263 1 
123 1 0 3 94 1 2 1 358 1 116 1 228 1 201 1 95 7 163 2 66 2 316 2 281 1 335 3 120 6 154 1 89 1 74 1 180 1 219 1 263 7 
0 1 248 1 329 1 2 1 357 1 297 2 116 1 143 1 301 1 162 3 163 1 95 1 251 1 3 1 66 1 360 2 185 4 280 1 19 1 335 1 214 1 254 2 120 1 215 1 6 1 145 1 342 1 49 2 77 3 373 2 52 1 78 2 263 1 149 1 374 1 30 2 221 2 126 1 376 1 10 1 267 2 58 6 108 2 224 1 274 1 227 1 246 2 
182 1 277 1 184 1 159 1 332 2 118 2 95 1 279 1 20 2 335 2 120 1 48 3 258 1 340 1 71 1 369 1 263 1 169 1 200 1 375 1 128 3 83 1 84 1 316 1 318 2 244 1 41 2 156 1 
0 2 2 1 116 1 228 1 201 1 95 2 163 1 66 1 335 2 120 2 293 1 369 1 263 2 
0 1 2 1 266 1 95 4 163 1 66 1 316 1 335 1 120 4 284 1 288 1 363 1 263 4 
0 2 358 1 199 1 116 1 95 2 163 1 66 1 281 1 335 1 120 2 207 1 112 1 220 1 263 2 
120 1 0 1 211 1 91 1 95 1 66 1 307 1 316 1 152 1 263 1 
120 2 0 1 94 1 2 1 163 1 95 2 66 1 111 1 180 1 335 1 263 2 
0 2 2 1 94 1 95 5 163 2 66 2 316 1 335 3 284 1 120 4 288 1 154 1 207 1 363 1 219 1 263 5 
0 2 2 1 94 1 104 1 95 5 163 2 66 2 316 1 335 3 284 1 120 4 288 1 154 1 207 1 363 1 263 5 
0 1 329 1 30 1 116 1 376 1 163 1 95 1 360 2 66 1 316 1 335 1 214 1 224 1 120 1 215 1 341 1 246 2 263 1 
0 2 358 1 116 1 201 1 95 1 163 1 66 1 281 1 335 1 120 1 207 1 74 1 263 1 
210 1 30 1 286 1 217 1 186 1 
210 2 30 1 277 1 286 1 128 2 11 1 223 1 83 1 186 2 187 1 48 2 321 1 258 1 5 1 208 1 244 1 177 1 217 2 63 1 
224 1 286 1 195 1 217 1 360 1 246 1 238 1 186 1 97 1 
208 1 286 1 187 1 
239 1 101 1 45 1 73 1 
239 1 45 1 73 1 72 1 268 1 50 1 310 1 
313 1 268 1 252 1 
239 1 45 1 268 3 31 1 175 1 134 1 90 2 72 1 73 1 138 1 50 3 310 1 
337 1 239 1 69 1 45 1 73 1 72 1 268 2 50 2 310 1 
222 1 45 1 268 1 172 1 152 1 225 1 175 1 91 1 72 1 50 1 310 1 
175 1 45 1 73 1 72 1 268 1 50 1 310 1 
239 1 175 1 73 2 72 1 268 1 50 1 310 1 
45 1 268 2 253 1 175 1 73 1 72 2 353 1 93 1 50 2 310 2 
239 1 45 2 268 3 174 1 225 1 175 1 69 2 260 1 73 1 72 1 113 1 50 3 310 1 
239 1 312 1 45 1 268 2 172 1 152 1 175 1 69 1 23 1 91 2 73 1 72 1 307 1 50 2 310 1 
239 1 45 2 268 4 47 1 337 1 174 1 225 1 175 1 69 2 73 1 72 2 50 4 310 2 
239 1 175 1 45 1 73 1 72 1 268 1 50 1 310 1 
239 2 45 3 268 4 31 1 174 1 225 1 90 1 134 1 69 2 73 2 72 1 236 1 50 4 310 1 
239 1 240 1 45 1 315 1 268 2 190 1 175 1 69 1 73 1 72 1 50 2 310 1 
239 1 45 1 268 3 31 2 175 1 134 1 90 2 273 1 72 1 73 1 50 3 310 1 
80 1 131 2 45 2 235 1 
175 1 203 1 72 1 268 1 50 1 310 1 
239 1 175 1 69 1 260 1 45 1 73 1 72 1 268 2 50 2 310 1 
232 1 
239 1 175 1 45 1 73 1 72 1 268 1 50 1 310 1 
239 1 175 1 90 1 69 1 260 1 45 1 73 1 72 1 268 3 50 3 310 1 
225 1 174 1 45 1 236 1 
45 1 73 1 

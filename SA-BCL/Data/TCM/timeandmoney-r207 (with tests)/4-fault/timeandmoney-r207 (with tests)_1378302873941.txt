#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 41 (29,286) (29,286) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 41 (29,286) (29,286) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 41 (29,286) (29,286) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 41 (29,286) (29,286) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 41 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 41 28 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 41 28 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 190 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 131 142 344 231 224 35 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 131 142 344 231 224 35 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 131 142 344 231 224 35 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 131 142 344 231 224 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 131 142 344 231 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 190 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 2 313 1 311 1 236 2 290 1 29 1 163 9 242 1 100 2 363 2 198 1 106 2 199 1 296 4 298 1 174 1 151 1 369 9 41 1 253 3 91 6 45 1 184 4 185 2 70 2 286 1 
234 2 313 1 311 1 236 2 290 1 29 1 163 9 242 1 100 2 363 2 198 1 106 2 199 1 296 4 298 1 174 1 151 1 369 9 41 1 253 3 91 6 45 1 184 4 185 2 70 2 286 1 
234 2 313 1 311 1 236 2 290 1 29 1 163 9 242 1 100 2 363 2 198 1 106 2 199 1 296 4 298 1 174 1 151 1 369 9 41 1 253 3 91 6 45 1 184 4 185 2 70 2 286 1 
106 2 234 2 311 1 313 1 296 3 199 1 151 1 174 1 236 2 369 7 290 1 41 1 163 7 29 1 253 2 242 1 45 1 91 4 184 3 100 2 363 1 185 2 70 2 198 1 286 1 
106 1 234 1 253 1 296 2 199 1 91 3 298 1 184 2 369 4 236 1 290 1 363 2 185 1 41 1 70 1 163 4 
106 1 61 1 311 1 296 1 199 1 236 1 369 2 118 1 163 2 19 1 97 1 262 1 242 1 100 1 185 1 70 1 
199 1 296 2 151 1 236 2 369 3 118 1 163 3 253 1 262 1 91 1 100 1 184 1 70 2 
106 1 234 1 1 1 296 4 199 1 298 1 151 1 236 2 369 9 290 1 28 1 41 1 163 9 253 3 45 1 91 7 100 1 184 4 363 2 185 1 70 2 198 1 
106 1 234 1 1 1 296 4 199 1 298 1 151 1 236 2 369 9 290 1 28 1 41 1 163 9 253 3 45 1 91 7 100 1 184 4 363 2 185 1 70 2 198 1 
328 1 289 1 372 1 
289 1 266 2 126 1 
145 2 330 1 205 1 139 2 147 2 3 2 238 2 105 2 
93 2 139 2 356 1 49 1 357 2 258 1 3 2 238 3 76 1 216 1 96 1 95 1 7 1 335 1 145 3 32 1 122 2 320 1 147 2 323 2 339 1 105 2 81 1 270 2 297 1 149 1 128 1 350 1 226 1 330 1 205 1 353 1 227 1 22 1 377 1 230 1 187 1 
71 1 145 1 330 1 139 1 147 1 322 1 3 1 58 1 238 1 105 1 
80 1 289 1 221 1 83 1 108 1 130 1 238 1 372 1 374 1 145 1 146 1 362 1 58 1 105 1 
80 2 139 1 289 1 3 1 108 1 130 1 238 1 372 1 374 1 145 1 146 2 147 1 362 1 58 1 105 1 
80 1 309 1 146 1 327 1 370 1 
80 2 309 1 146 2 289 1 271 1 370 1 252 1 372 1 
80 1 146 1 370 1 
309 1 80 1 71 1 139 1 3 1 52 1 238 1 330 1 145 1 146 1 322 1 147 1 58 1 105 1 
289 1 
269 1 80 2 309 1 146 2 289 1 370 1 252 1 372 1 
309 2 80 5 366 2 326 1 289 1 85 2 252 1 370 2 372 1 66 2 225 1 303 1 90 1 351 1 146 5 44 1 9 1 246 1 324 1 
328 1 205 1 
139 1 3 1 238 2 145 2 205 2 147 1 77 1 112 1 105 2 
69 1 332 1 338 1 
93 1 49 1 357 1 128 1 238 1 95 1 7 1 350 1 145 1 205 1 320 1 323 1 227 1 22 1 377 1 11 1 
93 1 49 1 139 1 357 1 128 1 3 1 238 2 120 1 350 1 7 1 95 1 145 2 320 1 227 1 323 1 78 1 22 1 377 1 332 1 105 1 
145 3 205 1 139 3 147 1 3 3 78 1 238 3 105 3 
71 1 145 1 139 1 3 1 58 1 238 1 105 1 
145 1 139 1 147 1 3 1 77 1 112 1 58 1 238 1 105 1 
93 1 49 1 139 3 357 1 258 1 3 3 238 4 76 1 120 1 7 1 95 1 96 1 335 1 145 4 146 1 122 2 320 1 147 2 323 1 78 1 362 1 58 1 339 1 105 3 81 1 80 1 220 1 270 1 297 1 149 1 128 1 108 1 130 1 350 1 374 1 204 1 330 1 205 1 353 1 227 1 22 1 377 1 112 1 187 1 
341 1 145 2 205 1 139 1 221 1 3 1 78 1 238 2 105 2 
80 1 139 3 289 1 3 3 130 1 108 1 238 3 120 1 374 1 145 3 204 1 146 1 147 1 78 2 362 1 112 1 285 1 58 1 105 3 
139 2 3 2 238 2 145 2 147 1 78 1 112 1 332 1 338 1 105 2 
93 1 49 1 357 1 128 1 238 1 95 1 7 1 350 1 145 1 205 1 320 1 323 1 227 1 22 1 377 1 
93 1 173 1 49 1 357 1 238 1 7 1 350 1 144 1 145 1 205 1 320 1 323 1 227 1 22 1 377 1 
114 1 258 1 318 1 241 1 335 1 122 2 168 1 339 1 338 2 81 1 270 4 297 1 149 1 274 1 202 1 131 1 347 1 282 1 69 2 332 2 230 2 187 2 186 1 257 1 
36 1 145 1 139 1 3 1 108 1 58 1 238 1 105 1 
341 1 172 1 139 4 221 1 3 4 42 1 238 5 120 1 145 5 205 1 147 1 78 2 112 1 105 5 
36 1 71 1 145 2 139 2 3 2 58 1 238 2 105 2 
215 1 281 1 
215 1 281 1 
334 1 72 1 
334 1 72 1 
334 1 72 1 
215 1 281 1 193 1 
215 1 281 1 4 1 
215 2 334 1 166 1 72 1 281 2 18 1 
215 1 281 1 193 1 
215 1 281 1 193 1 
215 1 281 1 25 1 
215 1 281 1 25 1 
215 1 281 1 25 1 
80 2 314 1 188 3 289 1 333 1 259 1 140 1 301 2 54 1 215 2 121 2 166 1 281 2 146 2 21 2 265 1 304 2 256 1 152 2 
307 1 188 1 139 2 3 2 333 1 4 1 238 2 237 1 215 1 145 2 146 1 243 1 57 1 105 2 80 1 301 1 87 1 68 1 205 1 281 1 21 1 304 1 152 1 306 1 
106 1 234 1 185 1 
106 1 61 1 185 1 
234 2 61 1 27 1 50 1 185 3 228 1 
234 1 61 1 336 1 27 1 185 2 228 1 
234 1 61 1 27 2 185 2 228 1 
307 1 309 4 137 1 289 2 117 2 237 1 142 1 218 2 241 1 8 1 146 5 266 3 126 1 325 1 366 1 80 5 13 1 326 2 82 2 222 1 85 1 370 1 252 1 202 1 131 1 372 1 87 1 67 1 66 1 90 1 351 3 282 1 
309 7 289 5 116 1 237 4 361 1 142 3 218 6 292 1 241 3 8 1 146 9 266 9 324 1 126 3 325 2 12 1 80 9 366 2 13 2 326 6 82 6 200 1 327 5 85 2 370 6 252 1 202 3 131 3 372 1 373 1 66 2 90 1 351 8 282 3 352 5 
309 2 137 1 289 3 117 1 237 1 142 1 218 2 241 1 146 3 266 4 126 2 324 1 325 1 366 1 80 3 13 1 326 2 82 2 222 1 85 1 202 1 131 1 372 1 66 1 351 3 282 1 
309 3 137 1 289 4 116 1 117 2 237 2 142 2 218 4 292 1 241 2 146 4 266 7 126 3 324 1 325 1 366 1 80 4 13 1 326 4 82 4 200 1 222 1 85 1 202 2 131 2 372 1 66 1 351 5 282 2 
328 1 377 1 260 1 
355 1 377 1 
56 1 
320 1 377 1 
232 1 350 1 180 1 320 1 260 2 377 3 
350 1 320 1 377 1 
31 1 377 1 
249 1 295 1 0 1 270 7 261 1 202 1 360 1 318 3 241 1 20 2 254 1 182 1 170 1 187 3 186 2 230 4 127 1 
249 1 295 1 0 1 270 7 261 1 202 1 360 1 318 3 241 1 20 2 254 1 182 1 170 1 187 3 186 2 230 4 127 1 
249 1 295 1 0 1 270 7 73 1 261 1 202 1 360 1 318 3 241 1 20 2 254 1 182 1 170 1 187 3 186 2 230 4 127 1 
0 2 261 2 315 1 360 1 318 10 5 4 142 3 30 1 241 4 263 3 122 2 170 2 127 1 339 1 249 1 81 1 295 5 270 31 297 1 149 1 39 1 129 1 299 1 131 3 202 4 88 1 20 3 254 1 182 2 282 3 283 1 187 15 230 16 186 5 
0 1 261 1 315 1 359 1 360 1 318 4 217 1 241 1 122 4 170 1 339 2 81 2 249 1 295 1 270 9 297 2 149 2 202 1 20 2 254 1 182 1 230 5 187 4 186 3 
233 1 234 1 48 1 93 1 357 1 26 1 236 1 118 1 291 1 50 1 163 2 7 1 262 1 245 1 123 1 323 1 100 1 337 1 106 1 61 1 296 1 199 1 345 1 369 2 278 1 91 1 227 1 111 1 185 2 70 1 
233 1 234 1 48 1 93 1 357 1 26 1 236 1 118 1 50 1 160 1 163 3 7 1 262 1 245 1 123 1 323 1 100 1 106 1 61 1 296 1 345 1 369 3 86 1 278 1 91 2 227 1 284 1 111 1 185 2 70 1 
233 1 234 1 48 1 93 1 357 1 26 1 118 1 50 1 163 2 7 1 262 1 245 1 100 1 323 1 106 1 61 1 296 1 345 1 369 2 86 1 278 1 91 2 227 1 284 1 185 2 
154 1 93 1 48 2 189 1 357 1 2 1 236 1 160 1 163 1 7 1 320 1 245 2 323 1 100 2 16 1 345 2 369 1 272 1 227 1 22 1 377 1 70 1 210 1 
233 1 234 1 48 1 93 1 357 1 26 1 236 1 50 1 163 1 7 1 245 1 123 1 323 1 100 1 337 1 106 1 61 1 199 1 345 1 369 1 86 1 278 1 227 1 111 1 185 2 70 1 
113 1 
47 2 93 2 289 2 238 1 7 1 6 1 145 1 146 5 293 4 98 1 58 1 105 1 60 1 16 1 300 1 17 2 252 3 108 1 66 1 351 2 206 2 22 2 154 1 310 1 24 1 357 2 74 1 212 2 319 2 321 2 320 1 323 2 169 1 266 2 362 1 126 2 33 1 325 1 79 1 80 5 366 1 326 2 221 1 368 2 83 1 85 1 370 6 177 1 130 1 372 1 374 1 90 1 376 1 227 1 377 1 
74 1 238 1 6 1 319 1 145 1 146 3 293 2 362 1 33 1 58 1 105 1 79 1 269 1 80 3 221 1 83 1 177 1 370 2 252 1 108 1 130 1 374 1 
289 1 74 1 238 1 6 1 145 1 146 3 293 3 362 1 33 1 58 1 105 1 79 1 269 1 80 3 221 1 83 1 370 1 177 1 17 1 252 1 108 1 130 1 372 1 374 1 
289 1 74 1 212 1 238 1 6 1 319 1 145 1 146 3 293 3 362 1 33 1 58 1 105 1 269 1 79 1 80 3 221 1 83 1 252 1 177 1 370 2 17 1 108 1 130 1 372 1 374 1 
47 2 289 5 238 1 6 1 145 1 146 5 293 6 58 1 105 1 248 1 252 3 17 4 108 1 66 1 351 1 206 2 156 1 24 1 74 1 212 4 319 4 321 2 362 1 33 1 126 2 267 1 269 1 79 1 80 5 366 1 326 1 221 1 83 1 368 2 85 1 176 1 370 7 177 1 130 1 372 5 374 1 90 1 376 1 135 1 
47 2 289 2 238 1 6 1 145 1 146 4 293 4 58 1 105 1 60 1 252 2 17 2 108 1 66 1 351 1 206 2 24 1 74 1 212 2 319 2 321 2 362 1 266 2 33 1 126 2 79 1 80 4 366 1 326 1 221 1 83 1 368 2 85 1 177 1 370 4 130 1 372 1 374 1 90 1 376 1 
47 2 156 1 24 1 289 1 74 1 212 2 238 1 6 1 319 2 145 1 146 4 321 2 293 4 362 1 126 2 33 1 58 1 105 1 79 1 80 4 248 1 366 1 326 1 221 1 368 2 83 1 85 1 17 2 370 4 252 2 177 1 108 1 130 1 372 1 66 1 374 1 90 1 351 1 376 1 206 2 135 1 
47 2 156 1 24 1 289 1 74 1 212 2 238 1 6 1 319 2 145 1 146 4 321 2 293 4 362 1 126 2 33 1 58 1 105 1 79 1 80 4 248 1 366 1 326 1 221 1 368 2 83 1 85 1 17 2 370 4 252 2 177 1 108 1 130 1 372 1 66 1 374 1 90 1 351 1 376 1 206 2 135 1 
156 1 24 1 289 1 74 1 212 2 238 1 6 1 319 2 145 1 146 4 293 4 266 2 362 1 33 1 58 1 105 1 79 1 80 4 366 1 326 1 64 1 221 1 368 2 83 1 85 1 17 2 370 4 252 2 177 1 108 1 130 1 40 1 372 1 276 2 66 1 374 1 349 1 90 1 351 1 206 2 331 2 
47 2 156 1 24 1 289 1 74 1 212 3 238 1 6 1 319 3 145 1 146 4 321 2 293 5 362 1 126 2 33 1 58 1 267 1 105 1 79 1 366 1 248 1 80 4 326 1 221 1 368 2 83 1 85 1 252 2 177 1 370 5 17 3 108 1 130 1 372 1 66 1 374 1 90 1 351 1 376 1 206 2 135 1 
47 2 156 1 24 1 289 1 74 1 212 3 238 1 6 1 319 3 145 1 146 4 321 2 293 5 362 1 126 2 33 1 58 1 267 1 105 1 79 1 366 1 248 1 80 4 326 1 221 1 368 2 83 1 85 1 252 2 177 1 370 5 17 3 108 1 130 1 372 1 66 1 374 1 90 1 351 1 376 1 206 2 135 1 
289 1 238 1 6 1 145 1 146 4 293 4 58 1 105 1 60 1 64 1 252 2 17 2 108 1 66 1 351 1 206 2 24 1 74 1 212 2 319 2 362 1 266 2 33 1 79 1 80 4 366 1 326 1 221 1 83 1 368 2 85 1 177 1 370 4 130 1 372 1 276 2 374 1 90 1 331 2 
258 1 261 1 360 1 318 2 241 1 335 1 122 2 338 1 339 1 81 1 249 1 270 6 297 1 149 1 202 1 328 1 347 1 20 1 254 1 205 2 182 1 69 1 332 1 186 2 230 3 187 3 
258 1 318 2 119 1 76 1 5 3 142 2 196 1 241 2 335 2 263 3 32 1 122 4 339 2 338 4 268 1 294 1 81 2 295 1 270 14 297 2 149 2 129 1 275 1 131 2 202 1 88 1 205 1 282 1 69 11 332 11 186 1 187 6 230 8 
93 1 49 1 139 1 357 1 258 1 3 1 238 2 120 1 76 1 7 1 95 1 335 1 145 2 320 1 122 2 32 1 323 1 78 1 247 1 364 1 11 1 338 1 339 1 105 1 81 1 270 2 128 1 149 1 297 1 275 1 350 1 179 1 205 1 227 1 22 1 377 1 187 1 230 1 
93 3 139 1 49 2 3 1 238 3 142 2 96 2 95 2 7 2 241 3 145 3 335 3 339 3 338 7 105 1 249 1 62 2 295 4 297 3 149 3 202 3 348 2 350 2 20 1 254 1 205 2 22 1 69 7 153 2 357 3 258 3 159 1 261 1 360 1 318 8 76 1 120 1 32 1 122 6 320 2 323 3 78 1 81 3 270 20 128 2 38 1 275 1 86 1 223 1 131 2 375 2 182 1 282 2 227 2 377 2 332 7 186 4 187 10 230 10 
154 1 93 3 190 1 139 1 357 3 3 1 258 2 291 1 238 1 76 1 216 1 7 1 145 1 335 2 122 4 244 1 32 1 320 1 323 3 78 1 339 2 105 1 81 2 270 2 297 2 149 2 16 1 347 1 329 1 227 1 22 1 377 1 230 1 187 1 
139 1 3 1 258 1 238 1 318 1 142 1 241 1 335 1 145 1 147 1 122 2 338 1 339 1 105 1 81 1 270 3 297 1 149 1 275 1 371 1 131 1 202 1 282 1 69 1 112 1 332 1 186 1 230 1 187 2 
81 1 295 1 270 2 149 1 297 1 258 1 131 1 318 1 347 1 241 1 335 1 122 2 168 1 69 1 332 1 338 1 339 1 230 2 
81 1 270 2 149 1 297 1 258 1 202 1 318 1 347 1 335 1 122 2 282 1 69 1 332 1 186 1 338 1 339 1 187 2 257 1 
81 1 295 1 270 4 149 1 297 1 258 1 202 1 131 1 318 2 347 1 142 1 241 1 335 1 282 1 122 2 69 2 332 2 186 1 187 2 338 2 339 1 230 2 
81 1 295 1 270 2 149 1 297 1 258 1 131 1 318 1 329 1 241 1 335 1 122 2 168 1 69 1 332 1 338 1 339 1 230 2 
81 1 270 2 149 1 297 1 258 1 202 1 318 1 329 1 335 1 122 2 282 1 69 1 332 1 186 1 338 1 339 1 187 2 257 1 
81 1 295 1 270 4 149 1 297 1 258 1 202 1 131 1 318 2 329 1 142 1 241 1 335 1 282 1 122 2 69 2 332 2 186 1 187 2 338 2 339 1 230 2 
81 1 295 1 270 4 149 1 297 1 258 1 202 1 131 1 318 2 142 1 241 1 335 1 282 1 122 2 69 2 332 2 186 1 187 2 338 2 339 1 230 2 
93 1 49 1 357 1 258 1 238 1 76 1 7 1 95 1 96 1 145 1 335 1 32 1 320 1 122 2 323 1 339 1 81 1 270 2 128 1 149 1 297 1 350 1 205 1 227 1 22 1 377 1 230 1 187 1 
93 1 49 1 357 1 258 1 238 1 76 1 7 1 144 1 145 1 335 1 32 1 320 1 122 2 323 1 339 1 81 1 270 2 173 1 149 1 297 1 350 1 205 1 227 1 22 1 208 1 377 1 230 1 187 1 
81 1 295 1 270 4 149 1 297 1 258 1 275 1 202 1 131 1 318 2 142 1 241 1 335 1 282 1 122 2 69 2 332 2 186 1 187 2 338 2 339 1 230 2 
93 1 49 1 357 1 258 1 291 1 238 1 318 2 142 1 7 1 95 1 96 1 241 1 145 1 335 1 320 1 122 2 323 1 338 2 339 1 81 1 295 1 270 4 128 1 149 1 297 1 202 1 131 1 350 1 282 1 227 1 69 2 377 1 332 2 186 1 187 2 230 2 153 1 
139 1 3 1 258 1 238 1 318 1 142 1 241 1 335 1 145 1 147 1 122 2 339 1 338 1 105 1 81 1 295 1 270 3 297 1 149 1 150 1 275 1 202 1 131 1 282 1 112 1 69 1 332 1 187 1 230 2 
138 2 358 1 158 1 316 3 318 3 5 4 217 1 142 3 241 3 263 3 122 4 35 1 339 2 81 2 295 2 344 1 270 24 297 2 149 2 129 3 273 1 109 1 224 1 131 3 202 2 277 1 88 1 181 1 282 2 231 1 186 1 187 12 230 12 
138 2 358 1 158 1 316 3 318 4 5 4 217 1 142 3 241 3 263 3 122 4 35 1 339 2 81 2 295 2 344 1 270 24 297 2 149 2 129 3 273 1 109 1 224 1 131 3 202 2 277 1 88 1 181 1 282 2 231 1 186 2 187 12 230 12 
138 1 158 1 261 1 360 1 316 2 318 9 5 4 217 1 142 5 196 2 241 6 263 4 122 2 35 1 339 1 249 1 81 1 295 4 344 1 270 36 297 1 149 1 129 2 224 1 131 5 202 5 277 1 88 2 20 1 254 1 182 1 282 4 231 1 186 5 187 17 230 19 
138 1 213 1 316 2 318 6 5 2 217 1 142 3 241 3 263 1 122 4 35 1 339 2 81 2 295 3 270 19 297 2 149 2 129 1 273 1 109 2 224 1 131 3 202 3 277 1 88 1 181 1 282 3 186 3 187 10 230 9 
81 1 344 1 270 11 138 2 158 1 149 1 297 1 129 2 131 1 224 2 316 2 277 1 142 1 5 2 217 1 241 1 263 2 122 2 231 1 230 6 339 1 35 1 187 5 
215 1 166 1 314 1 281 1 21 1 259 1 304 1 301 1 152 1 65 1 
4 1 306 1 
215 1 250 1 281 1 21 1 304 1 103 1 346 1 301 1 152 1 
80 1 314 1 188 2 289 1 333 1 259 1 301 1 54 1 215 1 121 1 166 1 146 1 281 1 21 1 265 1 304 1 256 1 152 1 
80 1 314 1 188 2 289 1 333 1 259 1 301 1 54 1 215 1 121 1 166 1 146 1 281 1 21 1 265 1 304 1 256 1 152 1 
80 1 314 1 188 2 289 1 333 1 259 1 301 1 54 1 215 1 121 1 166 1 146 1 281 1 21 1 265 1 304 1 256 1 152 1 
193 1 10 1 18 1 
193 1 10 1 18 1 
165 1 25 1 
165 1 25 1 18 1 
68 1 57 1 
309 1 307 1 188 1 139 2 3 2 4 1 238 2 237 1 215 1 121 1 145 2 146 1 243 1 57 1 148 1 265 1 105 2 80 1 301 1 87 1 68 1 205 1 281 1 21 1 304 1 152 1 306 1 
193 1 10 1 
165 1 25 1 18 1 
93 2 357 2 258 1 192 1 238 2 76 1 216 2 7 1 335 1 145 2 320 1 122 2 244 1 32 1 323 2 34 1 339 1 105 2 81 1 270 2 149 1 297 1 175 1 275 1 132 1 255 1 227 1 377 1 92 1 230 1 187 1 
106 1 233 1 234 1 115 1 61 1 93 2 48 1 357 2 50 1 291 1 86 1 278 1 7 1 203 1 227 1 323 2 111 1 185 2 305 1 
106 1 233 1 234 1 115 1 61 1 93 1 48 1 357 1 50 1 86 1 278 1 7 1 323 1 227 1 111 1 185 2 365 1 
154 1 93 1 48 1 189 1 357 1 16 1 53 1 7 1 203 1 320 1 227 1 323 1 22 1 377 1 
106 1 233 1 234 1 115 1 61 1 93 1 48 1 357 1 50 1 86 1 278 1 203 1 7 1 227 1 323 1 111 1 185 2 305 1 
157 1 
328 1 326 1 351 1 289 1 9 1 246 1 372 1 
80 1 47 1 366 1 326 1 289 2 85 1 370 1 252 1 372 1 66 1 90 1 146 1 376 1 351 1 321 1 266 1 126 1 
287 1 93 3 289 8 291 1 195 1 239 1 142 2 7 3 241 2 146 5 9 1 98 1 246 1 59 2 62 2 14 2 251 1 252 3 302 2 202 2 66 4 350 3 351 9 22 1 23 2 355 3 357 3 260 2 164 2 75 1 218 6 320 3 31 2 167 2 323 3 125 2 266 12 126 6 325 2 366 4 80 5 326 8 82 6 85 4 370 5 130 2 131 2 372 2 90 4 279 2 180 1 282 2 227 4 377 10 
289 1 158 1 214 1 5 1 142 2 143 1 218 4 241 2 263 1 266 2 126 1 366 1 344 1 326 4 82 4 129 1 85 1 131 2 202 2 66 1 90 1 351 6 282 2 231 1 
59 1 80 1 248 1 366 1 85 1 261 1 66 1 90 1 146 1 182 1 136 1 
366 1 326 1 289 1 85 1 372 1 66 1 90 1 351 1 9 1 246 1 
59 2 62 1 326 5 82 5 289 5 131 2 202 2 142 2 218 5 241 2 351 5 167 1 282 2 266 10 126 5 
80 1 146 1 289 1 370 1 252 1 372 1 
154 1 287 2 93 4 357 4 195 1 7 1 146 3 320 1 98 2 169 1 323 4 324 1 325 2 171 1 366 2 80 3 326 2 16 1 300 1 85 2 370 4 252 2 66 2 90 1 351 2 227 1 22 2 377 1 209 1 
93 1 139 2 49 1 357 1 3 2 258 1 238 3 76 1 96 1 95 1 7 1 145 3 335 1 122 2 147 2 320 1 323 1 339 1 105 2 81 1 270 1 297 1 128 1 149 1 350 1 330 1 205 1 353 1 227 1 22 1 377 1 187 1 
366 1 326 2 82 2 289 4 85 1 372 2 66 1 218 2 20 1 90 1 351 1 98 1 266 4 126 2 325 1 
21 1 235 1 301 1 
68 1 21 1 259 1 219 1 301 1 
21 1 235 1 301 1 
21 1 235 1 301 1 
134 1 21 1 301 1 
134 1 21 1 301 1 
134 1 21 1 301 1 
21 1 301 1 
215 1 281 1 
261 1 360 1 318 2 5 1 217 1 241 1 263 1 122 2 339 1 81 1 249 1 270 8 297 1 149 1 129 1 202 1 20 1 254 1 182 1 187 4 231 1 230 4 186 2 
94 1 261 1 360 1 318 3 5 2 217 1 142 1 241 2 263 1 122 4 339 2 249 1 81 2 295 1 270 11 297 2 149 2 129 1 202 1 131 1 88 1 20 1 254 1 182 1 186 2 187 5 231 1 230 6 
81 1 344 1 270 5 158 1 149 1 297 1 129 1 131 1 142 1 217 1 5 1 241 1 263 1 122 2 230 3 339 1 231 1 187 2 
81 1 344 1 270 5 158 1 149 1 297 1 129 1 131 1 142 1 217 1 5 1 241 1 263 1 122 2 230 3 339 1 231 1 187 2 
261 1 360 1 318 2 5 1 217 1 241 1 263 1 122 2 339 1 81 1 249 1 270 8 297 1 149 1 129 1 202 1 20 1 254 1 182 1 187 4 231 1 230 4 186 2 
81 1 344 1 270 5 158 1 149 1 297 1 129 1 131 1 142 1 217 1 5 1 241 1 263 1 122 2 230 3 339 1 231 1 187 2 
81 2 344 1 270 5 158 1 149 2 297 2 129 1 94 1 131 1 142 1 217 1 5 1 241 1 263 1 122 4 230 3 339 2 231 1 187 2 
81 2 344 1 270 5 158 1 149 2 297 2 129 1 131 1 142 1 217 1 5 1 241 1 263 1 181 1 122 4 230 3 339 2 231 1 187 2 
249 1 295 3 270 7 261 3 202 1 360 1 318 6 241 1 254 2 182 3 187 4 186 3 230 3 
81 2 344 1 270 5 158 1 149 2 297 2 129 1 131 1 142 1 217 1 5 1 241 1 263 1 181 1 122 4 230 3 339 2 231 1 187 2 
249 1 81 2 295 1 270 8 149 2 297 2 261 1 202 1 315 1 360 1 318 3 20 1 241 1 254 1 122 4 182 1 187 4 230 4 186 2 339 2 
249 1 270 6 261 1 202 1 360 1 328 1 318 2 20 1 241 1 254 1 182 1 187 3 186 2 230 3 
81 1 295 1 270 4 149 1 297 1 94 1 202 1 131 1 318 2 142 1 241 1 282 1 122 2 186 1 187 2 339 1 230 2 
295 1 270 7 129 1 202 1 131 1 318 2 5 2 88 1 142 1 241 1 263 1 282 1 186 1 187 4 230 3 
261 2 315 2 360 1 318 9 142 2 5 2 241 3 196 1 263 2 122 4 339 2 294 1 249 1 81 2 367 1 295 4 270 23 149 2 297 2 131 2 202 3 88 1 20 1 254 1 182 2 282 2 230 11 187 12 186 5 
5 1 270 1 187 1 
270 1 263 1 230 1 
81 1 62 1 295 1 270 6 297 1 149 1 94 1 131 1 202 1 318 3 142 1 241 1 122 2 282 1 339 1 187 3 230 3 186 2 
81 1 344 1 270 5 158 1 149 1 297 1 129 1 131 1 142 1 217 1 5 1 241 1 263 1 122 2 230 3 339 1 231 1 187 2 
249 1 295 1 270 6 261 1 202 1 318 2 241 1 182 1 230 3 187 3 186 1 
367 1 81 1 295 1 270 3 149 1 297 1 261 1 315 1 360 1 318 2 254 1 182 1 122 2 230 1 186 1 187 2 339 1 
318 1 182 1 261 1 186 1 136 1 
81 1 295 1 270 2 149 1 297 1 131 1 318 1 217 1 241 1 122 2 339 1 230 2 
81 1 295 1 270 4 149 1 297 1 202 1 131 1 318 2 217 1 142 1 241 1 282 1 122 2 186 1 187 2 339 1 230 2 
367 1 81 3 295 1 270 3 149 3 297 3 261 1 315 1 318 2 217 1 181 1 122 6 182 1 187 2 339 3 186 1 230 1 
94 1 261 3 315 2 360 1 318 12 5 4 217 1 142 3 30 1 241 5 263 3 122 10 339 5 249 2 367 1 81 5 295 5 270 34 297 5 149 5 39 1 129 1 131 3 202 5 88 1 20 1 254 1 181 1 182 3 282 3 283 1 187 18 230 16 186 7 
341 1 155 1 145 1 205 1 221 1 238 1 105 1 
341 1 342 1 155 1 145 1 205 1 133 1 221 1 124 1 51 1 238 1 229 1 105 1 
328 1 154 1 7 1 93 1 320 1 357 1 227 1 16 1 323 1 22 1 377 1 
93 1 49 1 139 1 357 1 3 1 238 2 350 1 95 1 7 1 145 2 205 1 320 1 227 1 323 1 78 1 22 1 377 1 105 1 
287 1 93 1 49 1 139 2 357 1 3 1 108 1 238 2 350 2 95 1 7 1 279 1 145 2 205 1 31 1 320 2 227 1 323 1 362 1 78 1 377 3 58 1 105 2 
287 1 93 2 139 2 49 1 357 2 3 1 238 2 7 1 144 1 145 2 320 2 31 1 323 2 78 1 362 1 58 1 105 2 108 1 350 2 110 1 279 1 205 1 227 1 377 3 
46 1 80 2 355 1 287 1 93 3 289 1 357 3 191 1 370 1 260 1 130 1 372 1 350 1 7 1 110 1 279 1 146 2 31 1 320 1 227 1 323 3 22 1 377 4 
80 2 355 1 287 1 93 3 14 1 289 1 357 3 370 1 260 1 130 1 372 1 350 1 7 1 110 1 279 1 146 2 31 1 320 1 227 1 323 3 22 1 377 4 
7 1 93 1 357 1 227 1 323 1 99 1 
93 2 190 1 357 2 291 1 194 1 161 1 350 1 7 1 180 1 320 1 323 2 227 2 22 1 264 1 377 1 
93 1 139 1 49 1 3 1 291 1 238 2 95 1 96 1 7 1 241 1 145 2 335 2 338 1 339 2 105 1 249 1 297 2 149 2 202 1 350 1 20 1 254 1 205 2 69 1 153 1 357 1 258 2 261 1 360 1 318 2 122 4 320 1 323 1 78 1 81 2 270 6 128 1 275 1 375 1 182 1 227 1 377 1 92 1 332 1 186 2 230 3 187 3 
309 1 23 1 355 1 93 1 289 1 357 1 260 1 195 1 164 1 146 3 9 1 246 1 323 1 125 1 366 2 80 3 326 1 14 1 85 2 370 2 252 1 130 1 372 1 66 2 90 2 351 1 22 1 377 2 
93 2 357 2 291 1 260 1 239 1 350 1 7 1 180 1 320 1 99 1 323 2 227 2 377 2 
154 1 93 4 357 4 16 1 291 1 7 1 110 1 320 1 227 1 323 4 101 1 22 1 377 1 
287 1 288 1 93 2 357 2 38 1 194 1 350 1 7 1 320 1 323 2 227 2 264 1 377 1 354 1 
106 1 278 1 61 1 7 1 93 1 357 1 227 1 323 1 22 1 185 1 
7 1 93 2 255 1 320 1 357 2 227 1 323 2 377 1 291 1 34 1 86 1 
154 1 287 1 93 5 357 4 15 1 16 1 291 1 240 1 7 2 255 1 320 2 323 5 227 2 101 1 22 1 377 3 
154 1 287 1 93 5 211 1 357 4 15 1 16 1 291 1 7 2 255 1 320 2 323 5 227 2 101 1 22 1 377 3 
93 1 49 1 139 1 357 1 3 1 238 2 350 1 7 1 144 1 145 2 205 1 320 1 227 1 323 1 78 1 22 1 377 1 105 1 
287 1 93 1 357 1 194 1 161 1 350 1 7 1 180 1 320 1 323 1 227 2 264 1 377 1 
317 1 308 1 205 1 207 1 162 1 
309 1 80 2 308 2 289 1 84 1 130 1 108 1 372 1 162 2 317 2 374 1 204 1 205 1 146 2 207 1 362 1 58 1 378 1 340 1 
317 1 308 1 132 1 145 1 175 1 207 1 192 1 238 1 105 1 
207 1 378 1 340 1 
328 1 296 1 262 1 118 1 
296 1 262 1 369 1 236 1 118 1 70 1 163 1 
245 1 100 1 369 1 
312 1 311 2 296 1 199 1 236 1 369 3 118 1 55 1 141 1 163 3 262 1 70 1 
296 1 262 1 91 1 369 2 236 1 118 1 363 1 70 1 163 2 
106 1 234 1 199 1 296 1 236 1 369 1 290 1 163 1 184 1 185 1 70 1 
296 1 262 1 199 1 369 1 236 1 70 1 163 1 
262 2 199 1 369 1 236 1 118 1 70 1 163 1 
296 1 199 1 107 1 236 2 369 2 163 2 178 1 262 1 183 1 70 2 
199 1 296 2 236 1 369 3 118 1 163 3 253 1 262 1 45 1 91 2 184 1 70 1 198 1 
106 1 234 1 61 1 343 1 296 1 199 1 236 1 369 2 118 1 50 1 163 2 262 1 91 1 185 2 70 1 
199 1 296 2 298 1 236 2 369 4 118 1 163 4 253 1 262 1 91 2 184 1 363 1 70 2 
296 1 262 1 199 1 369 1 236 1 118 1 70 1 163 1 
311 1 312 1 296 3 369 4 236 1 118 2 55 1 163 4 253 1 262 2 91 2 184 1 102 1 70 1 
1 1 63 1 296 1 199 1 236 1 369 2 118 1 163 2 43 1 262 1 91 1 70 1 
312 1 311 2 37 1 296 1 199 1 236 1 369 3 118 1 55 2 163 3 262 1 70 1 
89 1 296 2 201 1 197 2 
199 1 369 1 236 1 70 1 104 1 163 1 
296 1 262 1 199 1 91 1 369 2 236 1 118 1 70 1 198 1 163 2 
280 1 
296 1 262 1 199 1 369 1 236 1 118 1 70 1 163 1 
311 1 296 1 262 1 199 1 91 1 369 3 236 1 118 1 70 1 198 1 163 3 
253 1 296 1 184 1 102 1 
296 1 262 1 

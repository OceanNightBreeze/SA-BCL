#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 208 160 357 51 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 128 1 274 1 326 1 363 1 254 2 25 4 80 1 351 1 135 2 136 2 238 1 29 9 63 6 288 1 287 3 265 1 289 2 67 2 266 1 323 1 120 1 122 1 184 1 299 9 250 2 155 5 272 2 
0 1 128 1 274 1 326 1 363 1 254 2 25 4 80 1 351 1 135 2 136 2 238 1 29 9 63 6 288 1 287 3 265 1 67 2 289 2 266 1 323 1 120 1 122 1 184 1 299 9 250 2 155 5 272 2 
0 1 128 1 274 1 326 1 363 1 254 2 25 5 80 1 351 1 135 2 136 2 238 1 29 10 63 7 288 1 287 4 265 1 67 2 289 2 266 1 323 1 120 1 122 1 184 1 299 10 250 2 155 6 272 2 
0 1 128 1 274 1 326 1 363 1 254 2 25 3 80 1 351 1 135 2 136 2 238 1 29 7 63 4 288 1 287 2 265 1 67 2 289 1 266 1 323 1 120 1 122 1 299 7 250 2 155 4 272 2 
0 1 326 1 363 1 25 2 63 3 351 1 287 1 135 1 67 1 136 1 289 2 120 1 184 1 299 4 29 4 250 1 155 3 272 1 
0 1 274 1 363 1 254 1 351 1 15 1 67 1 136 1 44 1 323 1 299 2 29 2 302 1 250 1 155 1 272 1 
0 1 128 1 363 1 254 1 25 1 63 1 351 1 287 1 67 2 136 2 299 3 29 3 155 2 
0 1 128 1 326 1 363 1 254 1 25 4 80 1 351 1 135 1 136 2 283 1 29 9 63 7 287 3 67 2 289 2 120 1 122 1 100 1 299 9 184 1 250 1 155 5 272 1 
0 1 128 1 326 1 363 1 254 1 25 4 80 1 351 1 135 1 136 2 283 1 29 9 63 7 287 3 67 2 289 2 120 1 122 1 100 1 299 9 184 1 250 1 155 5 272 1 
372 1 246 1 258 1 
208 1 
306 1 247 2 331 2 66 1 318 2 347 2 314 2 354 2 
350 1 275 1 306 1 307 2 1 1 191 1 331 3 334 1 141 1 313 1 314 3 354 2 261 1 221 2 222 1 93 1 285 1 144 1 39 1 177 1 66 1 318 2 201 1 69 2 70 2 49 1 295 1 228 1 345 1 247 2 268 1 185 2 210 1 347 2 102 1 54 1 212 1 
306 1 132 1 247 1 331 1 318 1 347 1 322 1 314 1 377 1 354 1 
372 1 244 1 64 1 132 1 236 1 331 1 359 1 95 1 169 1 196 1 72 1 246 1 314 1 354 1 
372 1 244 1 64 1 132 1 236 2 331 1 318 1 95 1 169 1 196 2 246 1 247 1 347 1 314 1 354 1 
196 1 176 1 236 1 220 1 165 1 
167 1 372 1 196 2 246 1 176 1 237 1 236 2 165 1 
196 1 176 1 236 1 
306 1 132 1 236 1 14 1 331 1 165 1 318 1 322 1 196 1 247 1 347 1 377 1 314 1 354 1 
246 1 
372 1 196 2 246 1 176 1 237 1 236 2 163 1 165 1 
372 1 188 2 36 1 308 1 176 2 264 1 237 1 236 5 165 2 3 1 352 1 84 1 137 2 217 2 294 1 196 5 246 1 231 1 371 1 
258 1 66 1 
40 1 331 2 162 1 66 2 318 1 247 1 347 1 314 2 354 2 
286 1 249 1 166 1 
261 1 307 1 1 1 191 1 177 1 331 1 66 1 69 1 49 1 282 1 185 1 210 1 102 1 314 1 54 1 212 1 
247 1 107 1 331 3 66 1 318 3 347 3 314 3 354 3 
132 1 331 1 318 1 347 1 322 1 314 1 354 1 
132 1 247 1 40 1 331 1 162 1 318 1 347 1 314 1 354 1 
77 1 350 1 275 1 306 1 1 1 307 1 132 1 191 1 107 1 236 1 162 1 331 4 334 1 169 1 196 1 171 1 141 1 313 1 314 4 354 3 261 1 221 2 93 1 244 1 64 1 144 1 39 1 177 1 117 1 66 1 318 3 69 1 70 1 95 1 49 1 295 1 228 1 247 2 185 1 210 1 102 1 347 3 54 1 212 1 
359 1 361 1 107 1 331 2 66 1 318 1 347 1 314 2 354 2 
77 1 244 1 132 1 64 1 236 1 107 2 117 1 162 1 331 3 318 3 292 1 95 1 196 1 169 1 246 1 247 1 347 3 314 3 354 3 
107 1 286 1 162 1 331 2 318 2 247 1 249 1 347 2 314 2 354 2 
261 1 307 1 1 1 191 1 177 1 331 1 66 1 69 1 49 1 185 1 210 1 102 1 314 1 54 1 212 1 
261 1 307 1 177 1 331 1 66 1 69 1 49 1 185 1 210 1 312 1 102 1 314 1 54 1 339 1 212 1 
275 2 233 1 278 1 334 1 166 2 59 1 8 1 338 1 313 1 89 1 221 2 93 1 144 1 39 1 286 2 149 1 70 4 374 1 295 1 345 2 52 1 248 1 249 2 303 1 
79 1 132 1 64 1 331 1 318 1 347 1 314 1 354 1 
77 1 261 1 307 1 1 1 191 1 286 1 177 1 107 1 331 2 318 1 69 1 49 1 185 1 210 1 102 1 347 1 54 1 314 2 212 1 354 1 
77 1 107 2 331 5 162 1 66 1 318 4 359 1 368 1 324 1 361 1 247 1 347 4 314 5 354 5 
79 1 132 1 331 2 318 2 347 2 322 1 314 2 354 2 
37 1 342 1 
37 1 342 1 
333 1 320 1 
333 1 320 1 
333 1 320 1 
37 1 342 1 240 1 
94 1 37 1 342 1 
22 1 37 2 333 1 342 2 320 1 56 1 
37 1 342 1 240 1 
37 1 342 1 240 1 
37 1 342 1 30 1 
37 1 342 1 30 1 
37 1 342 1 30 1 
199 1 364 1 328 1 37 2 236 2 342 2 277 2 16 2 293 1 255 1 196 2 96 3 246 1 74 1 375 1 230 2 270 2 56 1 32 2 
94 1 276 1 37 1 13 1 236 1 331 2 342 1 277 1 66 1 318 2 321 1 46 1 293 1 196 1 96 1 257 1 230 1 270 1 347 2 115 1 314 2 187 1 354 2 32 1 
135 1 250 1 272 1 
250 1 272 1 44 1 
291 1 92 1 135 2 376 1 272 3 44 1 
291 1 92 1 38 1 135 1 272 2 44 1 
291 1 92 2 135 1 272 2 44 1 
188 1 306 1 233 1 189 2 132 1 237 1 236 5 331 1 278 1 165 4 352 2 137 1 194 1 217 1 280 1 196 5 369 1 218 1 115 1 314 1 354 1 372 1 243 2 242 2 176 1 264 3 14 1 149 1 318 1 322 1 226 2 71 1 294 1 246 3 208 4 247 1 52 1 186 1 347 1 377 1 
188 1 306 1 233 1 189 2 132 1 237 1 236 5 331 1 278 1 165 4 352 2 137 1 217 1 280 1 196 5 369 1 311 1 218 1 220 2 115 1 314 1 354 1 372 1 243 2 176 3 264 3 14 1 149 1 318 1 322 1 226 2 71 1 294 1 182 2 246 3 208 4 153 1 247 1 52 1 347 1 377 1 
188 1 306 1 233 1 189 2 132 1 308 1 236 3 331 1 278 1 165 2 352 2 194 1 137 1 217 1 196 3 369 1 218 1 314 1 115 1 354 1 372 1 242 1 243 2 14 1 264 3 149 1 318 1 322 1 226 2 71 1 246 3 247 1 208 4 52 1 186 1 347 1 377 1 
188 1 233 1 189 2 308 1 236 2 278 1 165 1 352 2 137 1 194 1 217 1 196 2 239 1 369 1 218 1 115 1 243 2 242 1 264 3 149 1 226 2 71 1 246 2 208 4 52 1 186 1 
60 1 177 1 258 1 
177 1 42 1 
127 1 
177 1 210 1 
206 1 60 2 330 1 177 3 210 1 54 1 
177 1 210 1 54 1 
204 1 177 1 
275 3 133 1 278 1 224 1 215 1 374 2 256 1 70 7 367 1 345 4 52 1 101 1 338 3 156 1 75 1 142 2 104 1 
275 3 133 1 278 1 224 1 215 1 374 2 256 1 70 7 367 1 345 4 52 1 101 1 338 3 156 1 75 1 142 2 104 1 
275 3 133 1 278 1 224 1 215 1 216 1 374 2 256 1 70 7 367 1 345 4 52 1 101 1 338 3 156 1 75 1 142 2 104 1 
275 15 57 1 233 3 161 3 133 1 278 4 215 2 334 1 256 2 58 1 367 1 110 1 338 10 313 1 284 1 142 3 355 4 221 2 93 1 144 1 149 3 224 1 121 1 70 31 374 5 71 3 99 1 297 1 345 16 52 4 101 2 75 2 156 5 104 1 
221 4 275 4 93 2 133 1 144 2 147 1 278 1 224 1 119 1 215 1 334 2 256 1 374 3 70 9 367 1 110 1 345 5 52 1 101 1 338 4 313 2 156 1 75 1 142 2 
0 1 253 1 307 1 363 1 254 1 235 1 351 1 135 1 164 1 136 1 195 1 111 1 88 1 29 2 113 1 174 1 261 1 63 1 67 1 44 1 267 1 69 1 299 2 185 1 250 1 20 1 155 1 102 1 376 1 272 2 
0 1 253 1 307 1 130 1 254 1 235 1 351 1 135 1 136 1 195 1 111 1 88 1 29 3 113 1 261 1 63 2 200 1 41 1 67 1 44 1 267 1 69 1 299 3 185 1 250 1 20 1 155 1 376 1 102 1 272 2 
0 1 253 1 307 1 130 1 254 1 235 1 351 1 135 1 111 1 88 1 29 2 261 1 63 2 200 1 44 1 267 1 69 1 299 2 185 1 20 1 250 1 155 1 102 1 376 1 272 2 
261 1 253 2 307 1 254 2 235 2 177 1 41 1 67 1 136 1 225 1 69 1 49 1 183 1 111 2 299 1 185 1 210 1 139 1 29 1 126 1 102 1 114 1 76 1 
253 1 307 1 363 1 254 1 235 1 135 1 164 1 136 1 195 1 111 1 88 1 29 1 113 1 261 1 200 1 67 1 44 1 267 1 69 1 299 1 185 1 250 1 20 1 102 1 376 1 272 2 
50 1 
307 2 160 1 352 2 217 1 6 1 169 1 218 1 260 1 314 1 354 1 261 1 176 2 64 1 264 2 177 1 359 1 69 2 72 1 269 1 185 2 126 1 21 1 76 1 325 1 188 1 23 1 189 1 132 1 237 1 236 3 331 1 137 1 335 1 337 1 366 1 196 3 244 1 146 1 203 1 48 1 95 1 294 1 49 2 246 1 208 1 210 1 301 2 102 1 55 1 349 1 
244 1 176 2 132 1 64 1 237 1 236 3 146 1 163 1 331 1 335 1 359 1 95 1 337 1 169 1 196 3 72 1 301 2 260 1 252 1 314 1 325 1 354 1 
132 1 236 3 237 1 331 1 163 1 335 1 337 1 196 3 169 1 260 1 314 1 354 1 372 1 244 1 176 1 64 1 146 1 359 1 151 1 95 1 72 1 246 1 301 3 325 1 
132 1 237 1 236 3 163 1 331 1 335 1 337 1 196 3 169 1 260 1 314 1 354 1 90 1 372 1 244 1 64 1 176 2 146 1 359 1 151 1 95 1 72 1 246 1 301 3 252 1 325 1 
160 1 163 1 352 1 217 1 169 1 6 2 260 1 314 1 354 1 64 1 176 7 264 1 357 1 68 1 359 1 72 1 269 2 325 1 188 1 131 2 189 2 132 1 236 5 237 3 331 1 134 1 335 1 137 1 337 1 366 1 196 5 90 4 372 5 244 1 146 1 151 4 95 1 48 2 294 1 97 1 246 5 209 1 301 6 252 4 
188 1 189 1 160 1 132 1 236 2 331 1 352 1 335 1 137 1 217 1 337 1 366 1 6 1 196 2 169 1 260 1 314 1 354 1 244 1 64 1 264 1 146 1 359 1 203 1 48 1 95 1 294 1 72 1 246 1 208 1 269 1 301 2 325 1 
188 1 131 2 189 2 160 1 132 1 237 2 236 4 331 1 134 1 352 1 137 1 335 1 217 1 366 1 337 1 6 2 196 4 169 1 260 1 314 1 354 1 372 1 90 2 244 1 176 4 64 1 264 1 146 1 357 1 151 2 359 1 48 2 95 1 294 1 72 1 246 1 269 2 209 1 301 4 252 2 325 1 
188 1 131 2 189 2 160 1 132 1 237 2 236 4 331 1 134 1 352 1 137 1 335 1 217 1 366 1 337 1 6 2 196 4 169 1 260 1 314 1 354 1 372 1 90 2 244 1 176 4 64 1 264 1 146 1 357 1 151 2 359 1 48 2 95 1 294 1 72 1 246 1 269 2 209 1 301 4 252 2 325 1 
188 1 160 1 132 1 236 2 331 1 352 1 137 1 335 1 217 1 337 1 6 1 196 2 169 1 259 1 260 1 314 1 354 1 244 1 64 1 264 1 146 1 357 1 45 1 150 1 359 1 48 1 95 1 294 1 72 1 51 1 208 1 301 2 325 1 
188 1 131 2 189 2 160 1 132 1 237 2 236 4 331 1 134 1 352 1 137 1 335 1 217 1 366 1 337 1 6 2 196 4 169 1 260 1 314 1 354 1 372 1 90 3 244 1 64 1 176 5 264 1 146 1 357 1 359 1 151 3 48 2 95 1 294 1 72 1 97 1 246 1 269 2 209 1 301 5 252 3 325 1 
188 1 131 2 189 2 160 1 132 1 237 2 236 4 331 1 134 1 352 1 137 1 335 1 217 1 366 1 337 1 6 2 196 4 169 1 260 1 314 1 354 1 372 1 90 3 244 1 64 1 176 5 264 1 146 1 357 1 359 1 151 3 48 2 95 1 294 1 72 1 97 1 246 1 269 2 209 1 301 5 252 3 325 1 
160 1 352 1 217 1 169 1 6 2 260 1 259 2 314 1 354 1 64 1 176 4 264 1 359 1 72 1 325 1 188 1 132 1 236 4 237 2 331 1 81 2 137 1 335 1 337 1 196 4 90 2 372 1 244 1 146 1 150 1 151 2 203 1 95 1 48 2 294 1 246 1 208 2 301 4 252 2 
275 3 133 1 278 1 334 1 215 1 166 1 256 1 367 1 258 1 338 2 313 1 89 1 142 1 221 2 93 1 144 1 286 1 39 1 66 2 224 1 374 2 70 6 295 1 345 3 52 1 249 1 
158 1 275 6 57 1 233 2 161 3 278 1 334 2 166 11 338 2 141 1 313 2 355 3 221 4 91 1 93 2 144 2 373 1 39 2 286 11 149 1 66 1 118 1 201 1 121 1 374 1 70 14 71 2 295 1 345 8 52 2 249 4 232 1 156 1 
77 1 275 1 1 1 307 1 191 1 107 1 331 2 334 1 336 1 282 1 313 1 141 1 140 1 314 2 354 1 261 1 221 2 62 1 91 1 93 1 144 1 177 1 39 1 66 1 318 1 201 1 69 1 70 2 49 1 295 1 345 1 185 1 210 1 249 1 102 1 347 1 54 1 212 1 
213 2 307 3 1 2 107 1 215 1 166 7 256 1 313 3 314 3 354 1 261 2 221 6 177 2 66 2 224 1 318 1 181 2 69 3 70 20 71 2 19 1 228 2 185 3 77 1 129 1 275 10 233 2 133 1 191 2 331 3 278 3 334 3 367 1 338 8 141 1 142 1 340 1 91 1 93 3 144 3 39 3 286 7 200 1 149 2 201 1 374 4 49 1 295 3 345 10 52 3 210 2 53 2 249 7 347 1 102 2 54 2 348 2 156 4 212 2 
275 1 307 8 190 1 107 1 331 1 334 2 138 1 174 1 89 1 313 2 141 1 314 1 354 1 261 2 221 4 93 2 285 2 317 1 144 2 177 3 39 2 200 1 318 1 201 1 290 1 69 7 70 2 49 2 245 1 295 2 345 1 185 8 210 2 126 1 347 1 102 2 362 1 103 1 76 1 
275 2 233 1 162 1 331 1 278 1 334 1 166 1 338 1 313 1 314 1 354 1 221 2 91 1 35 1 93 1 144 1 286 1 39 1 149 1 318 1 374 1 70 3 71 1 295 1 247 1 345 1 52 1 249 1 347 1 
221 2 233 1 93 1 144 1 286 1 39 1 334 1 166 1 70 2 295 1 345 2 52 1 338 1 249 1 89 1 313 1 156 1 303 1 
221 2 275 2 93 1 144 1 286 1 39 1 149 1 278 1 334 1 166 1 374 1 70 2 59 1 295 1 338 1 249 1 89 1 313 1 
275 2 233 1 278 1 334 1 166 2 338 2 313 1 89 1 221 2 93 1 144 1 39 1 286 2 149 1 70 4 374 1 71 1 295 1 345 2 52 1 249 2 156 1 
221 2 233 1 93 1 144 1 286 1 39 1 334 1 166 1 138 1 70 2 295 1 345 2 52 1 338 1 249 1 313 1 156 1 303 1 
221 2 275 2 93 1 144 1 286 1 39 1 149 1 278 1 334 1 166 1 138 1 374 1 70 2 59 1 295 1 338 1 249 1 313 1 
275 2 233 1 278 1 334 1 166 2 138 1 338 2 313 1 221 2 93 1 144 1 39 1 286 2 149 1 70 4 374 1 71 1 295 1 345 2 52 1 249 2 156 1 
275 2 233 1 278 1 334 1 166 2 338 2 313 1 221 2 93 1 144 1 39 1 286 2 149 1 70 4 374 1 71 1 295 1 345 2 52 1 249 2 156 1 
275 1 1 1 307 1 191 1 331 1 334 1 313 1 141 1 314 1 261 1 221 2 93 1 144 1 177 1 39 1 66 1 201 1 69 1 70 2 49 1 295 1 228 1 345 1 185 1 210 1 102 1 54 1 212 1 
275 1 307 1 331 1 334 1 4 1 312 1 313 1 141 1 314 1 339 1 261 1 221 2 93 1 144 1 177 1 39 1 66 1 201 1 69 1 70 2 49 1 295 1 345 1 185 1 210 1 102 1 54 1 212 1 
275 2 233 1 278 1 334 1 166 2 338 2 313 1 221 2 91 1 93 1 144 1 39 1 286 2 149 1 70 4 374 1 71 1 295 1 345 2 52 1 249 2 156 1 
275 2 233 1 1 1 307 1 191 1 331 1 278 1 334 1 166 2 338 2 174 1 313 1 314 1 261 1 221 2 93 1 144 1 286 2 177 1 39 1 149 1 69 1 374 1 70 4 71 1 295 1 228 1 345 2 52 1 185 1 210 1 249 2 53 1 102 1 156 1 54 1 212 1 
275 1 233 1 162 1 331 1 278 1 334 1 166 1 338 1 313 1 314 1 354 1 221 2 91 1 93 1 144 1 39 1 286 1 149 1 318 1 17 1 70 3 71 1 295 1 247 1 345 2 52 1 249 1 347 1 156 1 
106 1 275 10 57 1 233 3 161 1 278 3 334 2 279 1 173 1 338 6 313 2 355 2 221 4 263 2 93 2 116 1 144 2 149 3 119 1 121 1 374 3 205 1 70 19 360 1 71 3 207 2 345 9 52 3 346 1 156 3 
105 1 275 12 57 2 233 3 161 2 26 1 278 2 334 3 279 1 85 1 110 2 87 1 338 2 173 1 313 3 31 1 355 2 221 6 263 1 93 3 144 3 149 2 119 1 227 1 374 1 205 2 70 26 360 2 71 3 207 4 345 14 52 3 346 1 156 1 
105 1 106 1 57 3 161 3 215 1 256 1 110 1 173 1 313 3 355 4 221 6 263 1 119 1 224 1 121 1 70 41 227 1 71 4 360 2 275 21 233 4 26 1 133 1 278 5 334 3 193 1 279 1 85 1 367 1 87 1 338 7 31 1 142 1 93 3 144 3 149 4 205 1 374 3 207 4 345 20 52 5 346 1 156 4 
105 1 106 1 57 3 161 3 215 1 256 1 110 2 173 1 313 4 355 4 221 8 263 1 119 1 224 1 121 1 70 38 227 1 71 4 360 2 275 18 233 4 26 1 133 1 278 4 334 4 193 1 279 1 85 1 367 1 87 1 338 7 31 1 142 1 93 4 144 4 149 3 205 1 374 4 207 4 345 20 52 5 346 1 156 3 
105 1 275 25 57 2 233 7 161 4 133 1 26 1 278 8 215 1 334 2 279 1 85 1 256 1 367 1 110 1 87 1 173 1 338 14 313 2 142 1 31 1 355 4 221 4 263 1 93 2 144 2 373 2 149 7 224 1 119 1 121 2 227 1 374 7 205 1 70 52 360 1 71 7 207 4 345 27 52 8 346 1 156 7 
47 1 199 1 364 1 37 1 342 1 277 1 270 1 230 1 56 1 32 1 
94 1 46 1 
241 1 234 1 37 1 192 1 342 1 277 1 270 1 230 1 32 1 
199 1 364 1 37 1 236 1 342 1 277 1 16 1 293 1 255 1 196 1 96 2 246 1 74 1 375 1 230 1 270 1 56 1 32 1 
199 1 364 1 37 1 236 1 342 1 277 1 16 1 293 1 255 1 196 1 96 2 246 1 74 1 375 1 230 1 270 1 56 1 32 1 
199 1 364 1 37 1 236 1 342 1 277 1 16 1 293 1 255 1 196 1 96 2 246 1 74 1 375 1 230 1 270 1 56 1 32 1 
22 1 332 1 240 1 
22 1 332 1 240 1 
296 1 30 1 
22 1 296 1 30 1 
257 1 13 1 
276 1 236 1 331 2 277 1 165 1 255 1 196 1 257 1 314 2 115 1 32 1 354 2 37 1 94 1 13 1 342 1 66 1 179 1 318 2 321 1 46 1 16 1 96 1 270 1 230 1 347 2 187 1 
332 1 240 1 
22 1 296 1 30 1 
275 1 307 2 331 2 334 1 86 1 353 1 313 1 141 1 314 2 354 2 261 1 221 2 91 1 93 1 285 2 144 1 177 1 39 1 145 1 201 1 69 2 70 2 245 1 295 1 345 1 185 2 300 1 210 1 125 1 102 1 103 1 
305 1 261 1 307 2 329 1 135 1 200 1 44 1 195 1 69 2 111 1 123 1 88 1 185 2 250 1 20 1 376 1 102 1 174 1 272 2 
261 1 307 1 34 1 135 1 200 1 44 1 195 1 69 1 111 1 123 1 88 1 185 1 250 1 20 1 376 1 102 1 272 2 
305 1 261 1 69 1 307 1 49 1 111 1 9 1 177 1 185 1 210 1 126 1 102 1 225 1 76 1 
305 1 261 1 307 1 329 1 135 1 200 1 44 1 195 1 69 1 111 1 123 1 88 1 185 1 250 1 20 1 376 1 102 1 272 2 
82 1 
372 1 36 1 246 1 264 1 258 1 352 1 84 1 
188 1 189 1 264 1 352 1 137 1 217 1 366 1 294 1 246 1 208 1 269 1 
307 1 214 1 309 1 352 7 217 3 60 2 218 2 112 1 261 2 176 5 264 8 177 6 319 2 226 6 69 1 71 2 185 1 188 3 233 2 189 6 330 1 236 5 237 3 27 2 278 2 137 3 365 2 196 5 372 1 33 2 243 6 42 3 149 2 95 2 294 3 49 1 98 2 246 7 208 12 52 2 210 1 102 1 304 2 54 1 348 2 349 1 
188 2 57 1 233 2 189 3 161 1 26 1 236 1 237 1 278 2 352 5 137 2 365 2 85 1 217 2 196 1 87 1 218 1 170 1 172 1 198 1 31 1 355 1 372 2 243 5 176 1 264 8 149 2 226 5 227 1 294 2 71 2 246 5 208 6 52 2 349 1 
188 1 306 1 132 1 236 1 331 1 278 1 215 1 352 2 137 1 365 2 217 1 256 1 196 1 367 1 170 1 314 1 354 1 264 2 14 1 318 1 322 1 294 1 152 1 247 1 209 1 52 2 347 1 377 1 
188 1 372 1 36 1 264 1 352 1 84 1 137 1 217 1 294 1 246 1 
233 1 243 2 189 2 264 2 149 1 278 1 352 2 226 2 365 1 71 1 246 2 208 4 52 1 
372 1 196 1 246 1 176 1 236 1 237 1 
188 2 23 1 307 4 308 1 237 2 236 3 83 1 352 2 137 2 217 2 196 3 218 2 261 1 11 1 262 2 176 4 177 1 264 2 358 1 69 4 294 1 49 2 185 4 210 1 126 1 102 1 55 1 349 2 76 1 
350 1 275 1 306 1 307 1 1 1 191 1 331 3 334 1 141 1 313 1 314 3 354 2 261 1 221 2 93 1 144 1 177 1 39 1 66 1 318 2 69 1 70 1 49 1 295 1 228 1 247 2 185 1 210 1 347 2 102 1 54 1 212 1 
188 1 372 2 189 2 243 2 264 1 352 2 226 2 137 1 217 1 294 1 246 4 208 4 218 1 142 1 349 1 
124 1 277 1 270 1 
199 1 257 1 10 1 277 1 270 1 
124 1 277 1 270 1 
124 1 277 1 270 1 
73 1 277 1 270 1 
73 1 277 1 270 1 
73 1 277 1 270 1 
277 1 270 1 
37 1 342 1 
221 4 275 4 93 2 144 2 133 1 278 1 224 1 334 2 215 1 70 8 374 2 256 1 367 1 110 1 345 4 52 1 338 3 313 2 142 1 156 1 
275 3 133 1 278 1 224 1 215 1 256 1 374 2 70 6 367 1 258 1 345 3 52 1 338 2 142 1 
159 1 221 2 275 2 233 1 93 1 144 1 278 1 149 1 334 1 374 1 70 4 71 1 345 2 52 1 338 2 313 1 156 1 
355 2 275 4 57 1 233 1 161 1 278 1 149 1 121 1 374 1 70 7 71 1 345 3 52 1 338 2 156 1 
275 12 233 2 161 2 133 1 278 3 215 2 334 2 256 2 367 1 110 2 338 9 313 2 142 1 355 2 221 4 93 2 144 2 373 1 149 2 118 1 224 1 121 1 70 23 374 5 71 2 345 11 52 3 251 1 156 4 
355 1 70 1 275 1 
70 1 161 1 345 1 
221 2 159 1 275 3 233 1 93 1 144 1 149 1 278 1 334 1 70 6 374 2 71 1 345 3 52 1 338 3 313 1 348 1 156 1 
275 6 57 1 233 2 161 1 26 1 278 2 334 1 85 1 87 1 338 2 313 1 31 1 355 1 221 2 93 1 144 1 149 2 119 1 70 12 374 1 227 1 71 2 345 6 52 2 156 1 
275 3 278 1 215 1 70 6 256 1 374 1 367 1 345 3 52 1 338 2 156 1 
221 2 275 2 93 1 133 1 144 1 224 1 215 1 334 1 374 1 256 1 70 3 110 1 345 1 338 2 251 1 313 1 156 1 
221 2 275 5 93 1 144 1 278 2 119 1 334 1 215 2 256 2 374 3 70 10 367 1 152 1 345 5 52 2 338 5 313 1 156 2 
221 2 233 1 93 1 144 1 119 1 334 1 70 2 345 2 52 1 338 1 313 1 156 1 
221 2 275 2 233 1 93 1 144 1 278 1 149 1 119 1 334 1 374 1 70 4 71 1 345 2 52 1 338 2 313 1 156 1 
221 6 106 1 275 2 93 3 144 3 119 1 334 3 215 1 70 3 256 1 374 1 110 1 345 1 338 2 251 1 313 3 156 1 
159 1 275 18 106 1 57 1 233 3 161 3 133 1 278 5 215 3 334 5 256 3 58 1 367 2 110 2 338 12 313 5 142 1 355 4 221 10 93 5 144 5 149 3 224 1 119 1 121 1 70 34 374 7 71 3 99 1 297 1 345 16 52 5 251 1 156 5 
275 4 57 1 161 1 133 1 278 1 334 1 215 1 256 1 367 1 338 2 313 1 142 1 31 1 355 1 221 2 93 1 144 1 119 1 224 1 70 8 374 2 345 4 52 1 
159 1 275 5 57 1 233 1 161 1 133 1 278 1 215 1 334 2 256 1 367 1 338 3 313 2 142 1 31 1 355 2 221 4 93 2 144 2 224 1 119 1 121 1 374 2 70 11 71 1 345 6 52 2 156 1 
159 1 275 10 57 1 233 2 161 1 133 1 26 1 278 3 215 1 334 3 85 1 256 1 367 1 110 1 87 1 338 4 313 3 142 1 31 1 355 1 221 6 93 3 144 3 149 2 224 1 119 1 227 1 70 19 374 3 71 2 345 9 52 3 156 1 
159 1 275 7 57 1 233 2 161 1 133 1 26 1 278 2 215 1 334 3 85 1 256 1 367 1 110 1 87 1 338 5 313 3 142 1 31 1 355 1 221 6 93 3 144 3 149 1 224 1 119 1 70 17 374 3 227 1 71 2 345 10 52 3 156 2 
275 4 57 1 161 1 133 1 278 1 334 1 215 1 256 1 367 1 338 2 313 1 142 1 31 1 355 1 221 2 93 1 144 1 119 1 224 1 70 8 374 2 345 4 52 1 
275 6 57 1 233 2 161 1 26 1 278 2 334 1 85 1 87 1 338 2 313 1 31 1 355 1 221 2 93 1 144 1 149 2 119 1 70 12 374 1 227 1 71 2 345 6 52 2 156 1 
159 1 275 8 57 1 233 2 161 1 133 1 26 1 278 2 215 1 334 4 85 1 256 1 367 1 110 2 87 1 338 5 313 4 142 1 31 1 355 1 221 8 93 4 144 4 149 1 224 1 119 1 227 1 70 18 374 3 71 2 345 10 52 3 156 2 
275 7 106 1 57 1 233 3 161 1 26 1 278 2 334 4 85 1 110 2 87 1 338 6 313 4 31 1 355 1 221 8 93 4 144 4 149 2 119 1 227 1 70 16 374 3 71 3 345 9 52 3 156 3 
275 4 133 2 278 1 224 1 215 3 70 7 256 3 374 3 367 1 345 3 52 1 338 6 156 3 
275 8 106 1 57 1 233 2 161 1 133 1 26 1 278 2 215 1 334 4 85 1 256 1 367 1 110 2 87 1 338 4 313 4 142 1 31 1 355 1 221 8 93 4 144 4 149 1 224 1 119 1 227 1 70 18 374 3 71 2 345 10 52 3 156 1 
359 1 109 1 361 1 331 1 66 1 314 1 354 1 
316 1 331 1 66 1 359 1 202 1 168 1 109 1 361 1 219 1 197 1 314 1 354 1 
261 1 69 1 307 1 49 1 177 1 258 1 185 1 210 1 126 1 102 1 76 1 
261 1 307 1 191 1 177 1 107 1 331 2 66 1 318 1 69 1 49 1 185 1 210 1 347 1 102 1 54 1 314 2 212 1 354 1 
261 1 307 1 262 1 132 1 64 1 191 1 177 3 107 1 331 2 66 1 318 2 204 1 69 1 169 1 281 1 185 1 210 2 347 1 102 1 54 2 314 2 212 1 354 2 
307 2 132 1 107 1 331 2 169 1 281 1 312 1 314 2 354 2 261 1 262 1 64 1 177 3 343 1 66 1 318 2 204 1 69 2 185 2 210 2 102 1 347 1 54 2 212 1 
261 1 372 1 307 3 262 1 176 1 236 2 178 1 177 4 42 1 343 1 204 1 344 1 69 3 95 1 196 2 49 1 281 1 60 1 246 1 185 3 210 1 102 1 54 1 
261 1 372 1 33 1 307 3 262 1 176 1 236 2 177 4 42 1 343 1 204 1 69 3 95 1 196 2 49 1 281 1 60 1 246 1 185 3 210 1 102 1 54 1 
261 1 69 1 307 1 190 1 185 1 102 1 
261 3 307 7 143 1 285 1 190 1 317 1 65 1 330 1 177 3 200 1 290 1 69 6 49 2 245 1 185 7 210 2 174 1 154 1 102 2 54 1 362 1 
213 1 1 1 307 1 107 1 215 1 166 1 256 1 174 1 313 2 314 2 354 1 261 1 221 4 177 1 66 2 318 1 224 1 69 1 70 6 228 1 185 1 275 3 191 1 133 1 331 2 278 1 334 2 367 1 338 2 142 1 91 1 93 2 144 2 39 2 286 1 374 2 295 2 345 3 300 1 52 1 210 1 249 1 53 1 347 1 102 1 54 1 212 1 
188 2 307 1 236 3 237 1 27 1 165 1 352 1 84 1 137 2 217 2 196 3 60 1 372 1 33 1 36 1 176 2 264 1 177 2 42 1 358 1 319 1 69 1 95 1 294 2 49 1 246 1 185 1 304 1 
261 2 307 2 190 1 214 1 330 1 177 2 69 2 60 1 185 2 210 1 174 1 102 1 54 1 
261 1 307 4 177 1 343 1 69 4 310 1 49 1 185 4 210 1 126 1 174 1 102 1 76 1 
261 2 129 1 78 1 307 2 143 1 262 1 177 1 69 2 28 1 185 2 210 1 154 1 102 1 54 1 
261 1 69 1 307 1 49 1 88 1 185 1 250 1 102 1 272 1 44 1 
261 1 307 2 177 1 200 1 69 2 245 1 353 1 185 2 210 1 174 1 102 1 
261 2 307 5 262 1 177 3 290 1 69 4 310 1 49 1 245 1 185 5 210 2 126 1 174 1 102 2 76 1 362 1 
261 2 307 5 262 1 177 3 290 1 69 4 310 1 49 1 245 1 185 5 229 1 210 2 126 1 174 1 102 2 76 1 
261 1 307 1 177 1 107 1 331 2 66 1 318 1 69 1 49 1 185 1 210 1 312 1 347 1 102 1 54 1 314 2 212 1 354 1 
261 2 307 1 143 1 262 1 65 1 330 1 177 1 69 1 185 1 210 1 154 1 102 1 54 1 
223 1 2 1 145 1 331 1 86 1 125 1 157 1 314 1 354 1 
341 1 2 1 180 1 
18 1 223 1 2 1 66 1 157 1 
372 1 61 1 341 1 2 1 223 2 244 1 132 1 64 1 236 2 117 1 66 1 165 1 180 1 18 2 95 1 169 1 196 2 246 1 157 2 
0 1 351 1 258 1 155 1 
0 1 351 1 299 1 29 1 155 1 136 1 67 1 
254 1 235 1 299 1 
0 1 363 1 351 1 67 1 136 1 323 2 108 1 298 1 299 3 29 3 271 1 155 1 
0 1 63 1 351 1 299 2 29 2 155 1 289 1 136 1 67 1 
120 1 363 1 25 1 299 1 135 1 29 1 250 1 155 1 136 1 67 1 272 1 
0 1 363 1 299 1 29 1 155 1 136 1 67 1 
0 2 363 1 351 1 299 1 29 1 136 1 67 1 
0 1 12 1 363 1 327 1 67 2 136 2 299 2 29 2 211 1 155 1 
0 1 363 1 25 1 80 1 63 2 351 1 287 1 67 1 136 1 122 1 299 3 29 3 155 2 
0 1 363 1 63 1 351 1 135 1 67 1 136 1 44 1 5 1 299 2 29 2 250 1 155 1 376 1 272 2 
0 1 363 1 25 1 63 2 351 1 287 1 67 2 136 2 289 1 299 4 184 1 29 4 155 2 
0 1 363 1 351 1 299 1 29 1 155 1 136 1 67 1 
0 2 25 1 63 2 351 2 287 1 67 1 136 1 323 1 108 1 7 1 299 4 271 1 29 4 155 3 
0 1 356 1 363 1 315 1 63 1 351 1 67 1 136 1 299 2 29 2 283 1 155 1 
0 1 363 1 351 1 43 1 67 1 136 1 323 2 108 1 299 3 29 3 271 2 155 1 
24 1 148 2 155 2 370 1 
175 1 363 1 299 1 29 1 136 1 67 1 
0 1 363 1 122 1 63 1 351 1 299 2 29 2 155 1 136 1 67 1 
273 1 
0 1 363 1 351 1 299 1 29 1 155 1 136 1 67 1 
0 1 363 1 122 1 63 1 351 1 299 3 29 3 155 1 136 1 67 1 323 1 
25 1 7 1 287 1 155 1 
0 1 155 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) 194 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 106 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) 194 235 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 123 294 243 (182,282) 0 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 78 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 305 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 123 294 108 70 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 123 294 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 165 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 123 216 164 (116,154) (130,230) (130,230) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 123 216 164 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 106 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) (121,349) (55,112) 27 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 123 216 164 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 123 294 243 (182,282) 0 206 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) (121,349) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 354 319 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 354 224 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 354 224 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 354 224 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 354 224 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 123 133 256 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 123 216 164 (116,154) (116,154) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 294 108 289 186 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 123 216 164 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) 194 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 78 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 123 294 243 (182,282) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 305 (182,282) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 305 (174,325) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 123 294 108 336 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 123 294 243 (174,325) 103 (121,349) (121,349) (55,112) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 305 (174,325) 63 205 (55,112) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 123 294 108 289 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 123 216 164 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 123 294 334 318 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 123 133 256 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 123 133 4 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 123 133 365 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 123 294 243 (182,282) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 123 294 108 336 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
180 5 183 1 156 2 67 1 26 1 48 1 332 1 90 2 72 2 358 1 261 1 110 1 138 4 361 2 295 1 170 6 316 9 36 2 77 3 217 1 173 9 58 1 150 1 19 1 176 2 223 2 120 1 302 1 
180 5 183 1 156 2 67 1 26 1 48 1 332 1 90 2 72 2 358 1 261 1 110 1 138 4 361 2 295 1 170 6 316 9 36 2 77 3 217 1 173 9 58 1 150 1 19 1 176 2 223 2 120 1 302 1 
180 6 183 1 156 2 67 1 26 1 48 1 332 1 90 2 72 2 358 1 261 1 110 1 138 5 361 2 295 1 170 7 316 10 36 2 77 4 217 1 173 10 58 1 150 1 19 1 176 2 223 2 120 1 302 1 
180 4 183 1 156 2 67 1 26 1 48 1 332 1 90 2 72 2 358 1 261 1 110 1 138 3 361 1 295 1 170 4 316 7 36 2 77 2 217 1 173 7 58 1 19 1 176 2 223 2 120 1 302 1 
261 1 180 3 138 2 183 1 156 1 361 2 170 3 316 4 67 1 36 1 77 1 173 4 150 1 176 1 223 1 72 1 358 1 120 1 
180 1 183 1 156 1 316 2 56 1 172 1 36 1 332 1 173 2 90 1 176 1 19 1 223 1 358 1 120 1 348 1 
180 2 110 1 138 1 183 1 156 2 170 1 316 3 77 1 173 3 90 1 176 2 358 1 120 1 
261 1 180 5 110 1 138 4 315 1 183 1 361 2 156 2 170 7 67 1 316 9 198 1 36 1 217 1 77 3 48 1 173 9 90 1 150 1 176 2 223 1 72 1 358 1 120 1 
261 1 180 5 110 1 138 4 315 1 183 1 361 2 156 2 170 7 67 1 316 9 198 1 36 1 217 1 77 3 48 1 173 9 90 1 150 1 176 2 223 1 72 1 358 1 120 1 
157 1 78 1 177 1 
157 1 75 2 104 1 
246 2 107 2 139 2 74 1 17 2 118 1 192 2 277 2 
123 1 246 1 325 1 83 1 277 1 329 1 107 1 281 1 192 1 284 1 194 1 139 1 74 1 167 2 93 1 294 1 296 2 243 1 17 1 103 1 80 1 321 2 349 1 
246 1 107 1 139 1 74 1 347 1 17 1 192 1 277 1 342 1 73 1 
290 1 288 1 246 1 262 1 31 1 94 1 229 1 157 1 277 1 342 1 88 1 115 1 17 1 177 1 
290 1 288 1 246 1 139 1 94 2 31 2 229 1 157 1 277 1 342 1 88 1 107 1 17 1 192 1 177 1 
94 1 31 1 238 1 241 1 171 1 
94 2 31 2 238 1 157 1 241 1 177 1 5 1 1 1 
94 1 31 1 241 1 
246 1 74 1 139 1 238 1 31 1 94 1 277 1 342 1 269 1 107 1 347 1 17 1 192 1 73 1 
157 1 
203 1 94 2 31 2 238 1 157 1 241 1 177 1 5 1 
60 1 293 1 238 2 31 5 94 5 275 2 168 1 157 1 85 1 42 2 241 2 47 1 209 1 16 2 201 1 79 1 177 1 91 1 5 1 
118 1 78 1 
246 2 314 1 139 1 292 1 277 2 107 1 17 2 118 2 192 1 
124 1 291 1 320 1 
123 1 325 1 167 1 243 1 106 1 294 1 281 1 103 1 284 1 329 1 296 1 321 1 
246 3 107 3 139 3 220 1 17 3 118 1 192 1 277 3 
246 1 107 1 139 1 17 1 277 1 342 1 73 1 
246 1 107 1 314 1 139 1 292 1 17 1 192 1 277 1 342 1 
123 1 246 3 325 1 229 1 277 3 329 1 88 1 107 3 281 1 192 2 284 1 235 1 290 1 288 1 194 1 314 1 139 3 74 1 167 1 31 1 94 1 294 1 342 1 296 1 243 1 220 1 18 1 17 3 117 1 103 1 349 1 321 1 
9 1 246 2 262 1 107 1 139 1 220 1 17 2 118 1 277 2 
288 1 290 1 246 3 314 1 139 3 94 1 31 1 229 1 157 1 277 3 342 1 88 1 107 3 89 1 220 2 117 1 17 3 18 1 192 1 
246 2 124 1 107 2 314 1 139 2 220 1 17 2 192 1 277 2 320 1 
123 1 325 1 167 1 243 1 294 1 281 1 103 1 284 1 329 1 296 1 321 1 
0 1 123 1 182 1 167 1 243 1 294 1 281 1 284 1 329 1 296 1 321 1 
350 1 124 2 125 1 247 4 40 1 249 1 328 1 252 2 24 1 65 1 28 1 191 1 312 1 210 1 140 1 291 2 142 2 35 1 13 1 270 1 200 2 20 1 202 1 320 2 
246 1 107 1 139 1 229 1 17 1 277 1 54 1 342 1 
123 1 246 1 325 1 139 1 167 1 294 1 277 1 329 1 296 1 107 1 243 1 220 1 117 1 17 1 281 1 103 1 284 1 321 1 
9 1 246 5 262 1 314 1 139 4 43 1 277 5 107 4 220 2 29 1 17 5 117 1 118 1 192 1 
246 2 107 2 139 2 17 2 54 1 277 2 342 1 73 1 
69 1 166 1 
69 1 166 1 
253 1 257 1 
253 1 257 1 
253 1 257 1 
69 1 166 1 195 1 
69 1 166 1 195 1 
69 1 166 1 128 1 
145 1 69 2 166 2 253 1 257 1 119 1 
69 1 166 1 195 1 
69 1 166 1 255 1 
69 1 166 1 255 1 
69 1 166 1 255 1 
322 1 137 2 166 2 82 2 31 2 94 2 227 3 355 2 86 1 157 1 111 1 144 2 69 2 14 2 346 1 101 1 119 1 178 1 274 1 
151 1 246 2 227 1 128 1 355 1 277 2 44 1 45 1 69 1 107 2 254 1 166 1 137 1 139 2 94 1 31 1 52 1 111 1 213 1 144 1 14 1 218 1 17 2 118 1 
36 1 223 1 72 1 
36 1 223 1 348 1 
207 1 221 1 97 1 72 2 223 3 348 1 
221 1 97 1 72 1 223 2 21 1 348 1 
221 1 72 1 97 2 223 2 348 1 
151 1 350 1 226 1 248 2 275 1 42 1 85 1 157 2 44 1 45 1 208 1 91 2 5 1 136 1 313 2 140 1 94 5 31 5 238 4 293 3 362 1 75 3 241 1 143 1 35 1 272 2 149 1 16 1 20 1 177 1 104 1 179 1 
226 2 275 2 85 1 42 2 277 1 45 4 330 1 47 1 192 1 5 1 91 6 7 1 136 3 140 3 139 1 238 6 94 8 293 8 241 5 342 1 347 1 16 2 17 1 301 4 20 3 104 3 350 3 246 1 248 6 23 1 157 5 107 1 208 1 73 1 313 6 74 1 31 8 362 2 75 9 171 4 114 1 35 3 269 1 271 1 219 1 177 1 
350 1 226 1 275 1 248 2 157 3 42 1 45 1 47 1 91 2 136 1 313 2 140 1 238 2 94 3 31 3 293 3 362 1 75 4 143 1 35 1 272 1 16 1 177 1 20 1 104 2 179 1 
226 1 275 1 42 1 277 1 45 2 47 1 192 1 91 4 7 1 136 2 140 2 139 1 238 2 293 5 94 3 342 1 143 1 347 1 16 1 17 1 20 2 104 3 350 2 246 1 248 4 157 4 107 1 73 1 313 4 74 1 31 3 362 1 75 7 35 2 114 1 269 1 271 1 272 1 177 1 179 1 
38 1 78 1 
305 1 
122 1 
123 1 
123 1 70 1 294 1 108 1 
123 1 294 1 
165 1 
350 1 135 1 62 2 247 7 251 1 131 1 240 1 142 3 24 2 252 4 214 1 344 1 312 3 20 1 245 1 225 1 8 1 
350 1 135 1 62 2 247 7 251 1 131 1 240 1 142 3 24 2 252 4 214 1 344 1 312 3 20 1 245 1 225 1 8 1 
350 1 135 1 62 2 247 7 251 1 131 1 240 1 142 3 24 2 252 4 214 1 344 1 335 1 312 3 20 1 245 1 225 1 8 1 
350 4 61 1 62 3 181 3 247 31 249 1 131 2 251 5 278 4 252 16 24 5 3 1 233 1 191 1 312 10 8 1 135 2 136 3 211 1 340 1 140 3 240 2 142 15 169 1 214 1 344 2 35 3 13 1 100 1 200 2 245 1 20 4 225 1 202 1 
350 1 62 2 247 9 249 2 131 1 251 1 252 5 24 3 191 2 312 4 8 1 135 1 240 1 197 1 142 4 169 1 214 1 344 1 13 2 200 4 20 1 300 1 225 1 202 2 
180 1 304 1 155 1 183 1 185 1 356 1 156 1 279 1 329 1 207 1 90 1 281 1 72 1 358 1 167 1 170 1 296 1 316 2 99 1 113 1 36 1 37 1 173 2 199 1 176 1 299 1 223 2 120 1 348 1 321 1 
180 1 155 1 183 1 185 1 356 1 156 1 84 1 279 1 329 1 207 1 90 1 281 1 72 1 193 1 167 1 170 2 296 1 316 3 99 1 34 1 36 1 37 1 173 3 199 1 176 1 299 1 223 2 120 1 348 1 321 1 
180 1 155 1 183 1 185 1 279 1 329 1 207 1 90 1 281 1 72 1 193 1 167 1 170 2 296 1 316 2 99 1 34 1 36 1 37 1 173 2 299 1 223 2 120 1 348 1 321 1 
152 1 123 1 167 1 130 1 185 2 84 1 156 1 316 1 296 1 230 1 99 2 216 1 37 2 116 1 173 1 90 2 176 1 284 1 164 1 321 1 
304 1 155 1 185 1 356 1 156 1 279 1 329 1 207 1 90 1 281 1 72 1 358 1 193 1 167 1 296 1 316 1 99 1 36 1 37 1 173 1 199 1 176 1 299 1 223 2 348 1 321 1 
98 1 
123 1 226 1 167 2 293 1 31 2 94 2 275 1 85 1 42 1 241 2 66 1 296 2 216 1 231 1 16 1 189 1 284 2 164 1 5 1 91 1 321 2 
203 1 288 1 290 1 246 1 303 2 262 1 31 3 94 3 229 1 141 1 241 2 277 1 342 1 297 1 88 1 115 1 333 1 259 1 17 1 244 1 5 1 109 1 
203 1 246 1 303 3 229 1 157 1 277 1 88 1 333 1 259 1 5 1 109 1 290 1 288 1 262 1 264 1 94 3 31 3 141 1 241 1 342 1 115 1 17 1 244 1 177 1 
203 1 246 1 303 3 229 1 157 1 277 1 88 1 333 1 259 1 5 1 109 1 290 1 288 1 262 1 264 1 94 3 31 3 95 1 141 1 241 2 342 1 297 1 115 1 17 1 244 1 177 1 
203 1 246 1 303 6 353 1 275 1 229 1 276 1 42 1 85 1 157 5 277 1 25 1 88 1 159 1 134 2 333 1 311 2 259 1 260 2 91 1 5 3 109 1 290 1 288 1 262 1 264 4 293 1 94 5 31 5 265 1 95 4 141 1 96 2 241 7 342 1 297 4 345 1 115 1 16 1 17 1 244 1 102 1 177 5 104 2 
246 1 303 4 353 1 275 1 229 1 157 2 42 1 85 1 277 1 25 1 88 1 134 2 333 1 311 2 259 1 260 2 337 1 5 2 91 1 109 1 290 1 288 1 262 1 264 2 293 1 94 4 31 4 95 2 141 1 96 2 75 2 241 4 342 1 297 2 115 1 16 1 17 1 244 1 177 1 104 2 
246 1 303 4 353 1 275 1 229 1 276 1 157 1 42 1 85 1 277 1 25 1 88 1 159 1 134 2 333 1 311 2 259 1 260 2 5 2 91 1 109 1 290 1 288 1 262 1 264 2 293 1 94 4 31 4 95 2 141 1 96 2 241 4 342 1 297 2 115 1 16 1 17 1 244 1 102 1 177 1 104 2 
246 1 303 4 353 1 275 1 229 1 276 1 157 1 42 1 85 1 277 1 25 1 88 1 159 1 134 2 333 1 311 2 259 1 260 2 5 2 91 1 109 1 290 1 288 1 262 1 264 2 293 1 94 4 31 4 95 2 141 1 96 2 241 4 342 1 297 2 115 1 16 1 17 1 244 1 102 1 177 1 104 2 
22 2 246 1 303 4 353 1 275 1 229 1 276 1 157 1 42 1 85 1 277 1 308 1 68 2 88 1 333 1 311 2 259 1 260 2 162 1 5 2 91 1 109 1 290 1 288 1 262 1 264 2 293 1 94 4 31 4 95 2 141 1 75 2 241 4 342 1 297 2 12 1 115 1 16 1 17 1 244 1 177 1 
246 1 303 5 353 1 275 1 229 1 276 1 157 1 42 1 85 1 277 1 25 1 88 1 159 1 134 2 333 1 311 2 259 1 260 2 5 2 91 1 109 1 290 1 288 1 262 1 264 3 293 1 94 4 31 4 95 3 141 1 96 2 241 5 342 1 297 3 345 1 115 1 16 1 17 1 244 1 102 1 177 1 104 2 
246 1 303 5 353 1 275 1 229 1 276 1 157 1 42 1 85 1 277 1 25 1 88 1 159 1 134 2 333 1 311 2 259 1 260 2 5 2 91 1 109 1 290 1 288 1 262 1 264 3 293 1 94 4 31 4 95 3 141 1 96 2 241 5 342 1 297 3 345 1 115 1 16 1 17 1 244 1 102 1 177 1 104 2 
275 1 229 1 85 1 42 1 277 1 88 1 333 1 337 1 91 1 5 2 288 1 290 1 94 4 293 1 95 2 141 1 241 4 342 1 297 2 16 1 17 1 244 1 246 1 22 2 303 4 353 1 157 1 68 2 259 1 311 2 260 2 162 1 109 1 262 1 264 2 31 4 75 2 115 1 177 1 
350 1 124 1 62 1 125 1 247 6 40 1 249 1 24 2 252 3 191 1 312 2 8 1 210 1 135 1 291 1 142 3 214 1 344 1 13 1 200 2 118 2 78 1 20 1 225 1 320 1 202 1 
350 1 124 11 61 1 247 14 181 3 40 1 249 2 251 1 306 1 24 1 278 3 307 1 252 8 2 1 309 1 71 1 232 1 191 2 312 2 210 2 136 2 140 1 291 11 142 6 35 2 13 2 317 1 100 1 200 4 118 1 20 2 202 2 320 4 
123 1 246 1 247 2 325 1 40 1 106 1 249 1 228 1 306 1 307 1 277 1 252 1 329 1 107 1 281 1 191 1 284 1 338 1 210 1 139 1 167 1 294 1 239 1 142 1 296 1 13 1 317 1 243 1 220 1 17 1 117 1 200 2 103 1 321 1 320 1 202 1 
121 1 123 1 246 1 247 1 325 1 40 1 249 1 306 1 307 1 277 1 329 1 107 1 27 1 281 1 191 1 284 1 210 1 139 1 167 1 294 1 142 1 55 1 296 1 13 1 243 1 220 1 17 1 117 1 200 2 103 1 349 1 202 1 321 1 
123 1 247 2 40 1 167 2 249 1 83 1 306 1 142 1 53 1 252 1 296 2 13 1 216 1 317 1 215 1 200 2 191 1 284 1 164 1 210 1 202 1 321 2 
350 1 246 1 124 1 247 3 40 1 249 1 24 1 307 1 277 1 252 1 107 1 280 1 192 1 191 1 312 1 210 1 136 1 314 1 139 1 140 1 291 1 142 2 35 1 13 1 200 2 17 1 20 1 320 1 202 1 
124 1 247 2 125 1 40 1 291 1 249 1 251 1 252 2 35 1 13 1 28 1 200 2 191 1 312 1 20 1 320 1 210 1 202 1 
350 1 124 1 247 2 125 1 40 1 140 1 291 1 249 1 142 2 24 1 65 1 13 1 200 2 191 1 312 1 320 1 210 1 202 1 
350 1 124 2 125 1 247 4 40 1 249 1 251 1 252 2 24 1 191 1 312 2 210 1 136 1 140 1 291 2 142 2 35 1 13 1 200 2 20 1 202 1 320 2 
124 1 247 2 40 1 291 1 249 1 251 1 252 2 35 1 13 1 215 1 28 1 200 2 191 1 312 1 20 1 320 1 210 1 202 1 
350 1 124 1 247 2 40 1 140 1 291 1 249 1 142 2 24 1 65 1 13 1 215 1 200 2 191 1 312 1 320 1 210 1 202 1 
350 1 124 2 247 4 40 1 249 1 251 1 252 2 24 1 191 1 312 2 210 1 136 1 140 1 291 2 142 2 35 1 13 1 215 1 200 2 20 1 202 1 320 2 
350 1 136 1 124 2 247 4 140 1 40 1 291 2 249 1 251 1 142 2 24 1 252 2 35 1 13 1 200 2 191 1 312 2 20 1 320 2 210 1 202 1 
123 1 325 1 167 1 243 1 294 1 281 1 103 1 284 1 329 1 296 1 349 1 321 1 
0 1 123 1 182 1 167 1 243 1 294 1 281 1 284 1 329 1 206 1 296 1 321 1 
350 1 124 2 247 4 40 1 249 1 251 1 252 2 307 1 24 1 191 1 312 2 210 1 136 1 140 1 291 2 142 2 35 1 13 1 200 2 20 1 202 1 320 2 
121 1 123 1 325 1 167 1 243 1 294 1 281 1 103 1 329 1 296 1 349 1 321 1 113 1 
350 1 59 1 246 1 124 1 247 3 40 1 249 1 251 1 307 1 277 1 252 2 107 1 192 1 191 1 312 1 210 1 136 1 314 1 140 1 139 1 291 1 142 1 35 1 13 1 200 2 17 1 20 1 202 1 320 1 
350 1 61 1 247 9 181 1 354 1 249 2 251 1 24 1 278 2 252 4 188 1 258 1 191 2 312 2 287 1 286 1 359 1 136 1 339 1 140 1 197 1 142 5 35 1 13 2 100 1 200 4 20 1 319 1 202 2 
350 1 351 1 247 20 181 2 354 1 249 3 251 1 24 1 252 11 278 2 50 1 258 3 191 3 51 1 312 2 287 1 286 1 359 2 136 2 339 2 140 1 32 1 169 2 142 9 197 1 35 2 268 1 13 3 15 1 100 2 200 6 224 1 20 2 202 3 
350 1 61 1 247 9 181 1 354 1 249 2 251 1 24 1 278 2 252 4 188 1 258 1 191 2 312 2 287 1 286 1 359 1 136 1 339 1 140 1 197 1 142 5 35 1 13 2 100 1 200 4 224 1 20 1 202 2 
350 1 61 1 247 9 181 1 354 1 249 2 251 1 24 1 278 2 252 4 188 1 258 1 191 2 312 2 287 1 286 1 359 1 136 1 339 1 140 1 197 1 142 5 35 1 13 2 100 1 200 4 224 1 20 1 202 2 
351 1 350 7 62 1 61 2 247 46 181 4 354 1 249 2 251 6 24 6 278 4 252 24 2 2 50 1 258 3 191 2 51 1 312 12 8 1 135 1 287 1 286 1 359 1 136 6 339 1 140 6 32 1 169 1 197 1 142 22 214 1 344 1 35 6 268 1 13 2 15 1 100 2 200 4 224 1 20 7 225 1 202 2 
144 1 69 1 166 1 137 1 14 1 148 1 355 1 86 1 119 1 178 1 
218 1 128 1 
144 1 69 1 166 1 137 1 323 1 14 1 355 1 327 1 363 1 
137 1 166 1 82 1 31 1 94 1 227 2 355 1 86 1 157 1 111 1 144 1 69 1 14 1 346 1 101 1 119 1 178 1 274 1 
137 1 166 1 82 1 31 1 94 1 227 2 355 1 86 1 157 1 111 1 144 1 69 1 14 1 346 1 101 1 119 1 178 1 274 1 
137 1 166 1 82 1 31 1 94 1 227 2 355 1 86 1 157 1 111 1 144 1 69 1 14 1 346 1 101 1 119 1 178 1 274 1 
145 1 195 1 41 1 
145 1 195 1 41 1 
255 1 161 1 
145 1 255 1 161 1 
52 1 213 1 
151 1 246 2 82 1 227 1 128 1 355 1 277 2 44 1 45 1 69 1 107 2 254 1 166 1 137 1 139 2 94 1 31 1 238 1 52 1 267 1 213 1 144 1 14 1 218 1 17 2 101 1 118 1 
195 1 41 1 
145 1 255 1 161 1 
123 1 246 2 247 2 40 1 326 1 249 1 83 2 306 1 307 1 277 2 252 1 133 1 256 1 191 1 163 1 210 1 236 1 167 2 53 1 142 1 296 2 13 1 317 1 298 1 17 2 200 2 202 1 321 2 
193 1 167 2 155 1 185 1 33 1 329 1 296 2 266 1 113 1 36 1 207 1 199 1 234 1 281 1 72 1 223 2 299 1 348 1 321 2 
193 1 167 1 155 1 185 1 296 1 329 1 36 1 207 1 199 1 175 1 234 1 281 1 72 1 223 2 299 1 348 1 321 1 
123 1 154 1 167 1 185 1 296 1 266 1 216 1 116 1 284 1 164 1 321 1 
193 1 167 1 155 1 185 1 33 1 296 1 266 1 329 1 36 1 207 1 199 1 234 1 281 1 72 1 223 2 299 1 348 1 321 1 
324 1 
293 1 168 1 157 1 79 1 78 1 177 1 91 1 
275 1 42 1 85 1 157 2 25 1 134 1 91 1 5 1 293 1 31 1 94 1 75 1 96 1 241 1 16 1 177 1 104 1 
289 1 123 1 167 1 275 1 294 1 85 1 42 1 296 1 186 1 16 1 284 1 108 1 321 1 
351 1 350 2 226 1 153 1 181 1 248 5 275 2 42 2 85 2 157 5 278 1 66 1 46 1 50 1 5 1 91 5 136 2 313 5 140 2 212 1 94 1 31 1 293 8 32 1 75 6 241 1 76 2 35 2 268 1 15 1 100 1 16 2 20 2 177 2 104 3 
350 1 246 1 153 1 275 1 42 1 85 1 277 1 159 1 107 1 192 1 30 1 91 2 73 1 135 1 74 1 139 1 94 1 31 1 293 2 342 1 76 2 344 1 269 1 347 1 16 1 17 1 20 2 225 1 
275 1 293 1 168 1 85 1 42 1 157 1 16 1 79 1 177 1 91 1 
350 2 136 2 313 5 153 1 140 2 248 5 293 5 75 10 157 5 76 2 35 2 147 1 20 2 91 5 104 5 
94 1 31 1 157 1 241 1 177 1 5 1 
123 1 226 1 263 1 167 2 94 1 31 1 293 1 275 1 85 1 42 1 241 2 66 1 296 2 216 1 231 1 16 1 189 1 284 2 164 1 5 1 91 1 321 2 
123 1 194 1 246 1 325 1 74 1 139 1 167 1 294 1 277 1 329 1 296 1 107 1 243 1 17 1 281 1 192 1 103 1 284 1 349 1 321 1 
313 2 62 1 226 1 248 2 275 1 293 1 75 4 85 1 42 1 157 4 66 1 16 1 177 2 104 2 91 2 
144 1 14 1 190 1 
144 1 14 1 190 1 
144 1 14 1 52 1 86 1 87 1 
144 1 14 1 190 1 
144 1 14 1 132 1 
144 1 14 1 132 1 
144 1 14 1 132 1 
144 1 14 1 
69 1 166 1 
350 1 135 1 62 1 247 8 249 2 251 1 142 4 169 1 252 4 24 2 214 1 344 1 13 2 200 4 191 2 312 3 20 1 225 1 202 2 8 1 
135 1 350 1 62 1 247 6 142 3 24 2 252 3 214 1 344 1 78 1 312 2 20 1 225 1 8 1 
350 1 136 1 247 4 140 1 129 1 249 1 251 1 142 2 24 1 252 2 35 1 13 1 200 2 191 1 312 2 20 1 202 1 
350 1 136 1 61 1 247 7 181 1 140 1 251 1 142 4 24 1 278 2 252 3 35 1 100 1 312 2 20 1 
350 3 62 1 61 1 181 2 247 23 249 2 251 4 252 11 278 2 24 5 309 1 2 1 191 2 312 9 8 1 135 2 136 2 140 2 142 12 169 2 196 1 214 1 344 2 35 2 13 2 200 4 20 3 225 1 202 2 
247 1 142 1 278 1 
247 1 181 1 252 1 
350 1 136 1 247 6 140 1 249 1 129 1 251 1 142 3 252 3 24 2 35 1 13 1 147 1 200 2 191 1 312 3 20 1 202 1 
351 1 350 2 181 1 247 12 249 1 251 1 278 1 252 6 24 1 50 1 191 1 312 2 136 2 140 2 32 1 142 6 197 1 35 2 13 1 268 1 15 1 100 1 200 2 20 2 202 1 
350 1 135 1 247 6 251 1 142 3 252 3 24 1 344 1 312 2 20 1 225 1 
135 1 247 3 249 1 251 1 196 1 142 2 169 1 252 1 24 1 214 1 344 1 13 1 200 2 191 1 312 2 202 1 8 1 
135 2 350 2 247 10 249 1 251 2 197 1 142 5 24 3 252 5 344 2 13 1 200 2 191 1 312 5 20 2 30 1 225 1 202 1 
247 2 249 1 251 1 197 1 252 2 35 1 13 1 200 2 191 1 312 1 20 1 202 1 
350 1 136 1 247 4 140 1 249 1 251 1 142 2 197 1 24 1 252 2 35 1 13 1 200 2 191 1 312 2 20 1 202 1 
135 1 247 3 249 3 251 1 169 1 196 1 142 2 197 1 24 1 252 1 344 1 13 3 188 1 200 6 191 3 312 2 202 3 
350 5 62 1 61 1 247 34 181 3 129 1 249 5 251 5 278 4 252 16 24 7 188 1 233 1 191 5 312 12 8 1 135 3 136 3 211 1 340 1 140 3 196 1 169 2 142 18 197 1 214 1 344 3 35 3 13 5 100 1 200 10 20 5 225 2 202 5 
350 1 62 1 181 1 247 8 249 1 278 1 252 4 24 2 191 1 312 2 8 1 135 1 142 4 197 1 214 1 344 1 13 1 15 1 100 1 200 2 20 1 225 1 202 1 
350 1 62 1 61 1 247 11 181 1 249 2 129 1 251 1 24 2 278 2 252 6 191 2 312 3 8 1 135 1 136 1 142 5 197 1 214 1 344 1 35 1 13 2 15 1 100 1 200 4 20 2 225 1 202 2 
351 1 350 3 62 1 181 1 247 19 129 1 249 3 251 1 278 1 252 9 24 3 50 1 191 3 312 4 8 1 135 1 136 2 140 2 32 1 142 10 197 1 169 1 214 1 344 1 35 2 268 1 13 3 15 1 100 1 200 6 20 3 225 1 202 3 
351 1 350 2 62 1 181 1 247 17 129 1 249 3 251 2 278 1 252 10 24 3 50 1 191 3 312 5 8 1 135 1 136 2 140 1 32 1 169 1 142 7 197 1 214 1 344 1 35 2 13 3 268 1 15 1 100 1 200 6 20 3 225 1 202 3 
350 1 62 1 181 1 247 8 249 1 278 1 252 4 24 2 191 1 312 2 8 1 135 1 142 4 197 1 214 1 344 1 13 1 15 1 100 1 200 2 20 1 225 1 202 1 
351 1 350 2 181 1 247 12 249 1 251 1 278 1 252 6 24 1 50 1 191 1 312 2 136 2 140 2 32 1 142 6 197 1 35 2 13 1 268 1 15 1 100 1 200 2 20 2 202 1 
351 1 350 2 62 1 247 18 181 1 129 1 249 4 251 2 278 1 252 10 24 3 50 1 191 4 312 5 8 1 135 1 136 2 140 1 32 1 142 8 197 1 169 2 214 1 344 1 35 2 268 1 13 4 15 1 100 1 200 8 20 3 225 1 202 4 
351 1 350 2 247 16 181 1 249 4 251 3 278 1 252 9 24 3 188 1 50 1 191 4 312 6 136 3 140 2 32 1 142 7 197 1 169 2 35 3 268 1 13 4 15 1 100 1 200 8 20 3 202 4 
350 1 135 3 247 7 251 3 142 4 24 3 252 3 214 2 344 3 312 6 20 1 225 1 8 1 
351 1 350 2 62 1 247 18 181 1 249 4 251 1 278 1 252 10 24 3 188 1 50 1 191 4 312 4 8 1 135 1 136 2 140 1 32 1 142 8 197 1 169 2 214 1 344 1 35 2 268 1 13 4 15 1 100 1 200 8 20 3 225 1 202 4 
9 1 246 1 262 1 277 1 342 1 17 1 118 1 222 1 285 1 
9 1 246 1 262 1 184 1 357 1 277 1 342 1 10 1 49 1 160 1 17 1 118 1 222 1 285 1 
123 1 216 1 167 1 78 1 284 1 164 1 296 1 321 1 
123 1 246 1 139 1 325 1 167 1 294 1 277 1 296 1 329 1 107 1 243 1 220 1 17 1 281 1 284 1 321 1 
123 1 246 1 139 1 325 1 167 1 294 1 277 1 296 1 329 1 107 1 243 1 220 1 17 1 281 1 283 1 321 1 
123 1 246 1 139 1 182 1 167 1 294 1 277 1 296 1 329 1 107 1 243 1 220 1 17 1 281 1 283 1 321 1 
167 1 94 1 31 1 305 1 282 1 283 1 296 1 321 1 
167 1 174 1 94 1 31 1 305 1 283 1 296 1 321 1 
167 1 310 1 281 1 329 1 296 1 321 1 
123 1 167 1 294 1 336 1 284 1 108 1 296 1 321 1 
121 1 123 1 246 1 40 1 325 1 326 1 249 1 307 1 277 1 329 1 107 1 281 1 191 1 210 1 139 1 167 1 294 1 296 1 55 1 113 1 13 1 243 1 220 1 17 1 200 2 103 1 202 1 321 1 349 1 
205 1 263 1 167 1 238 1 31 1 94 1 275 1 305 1 85 1 42 1 63 1 112 1 296 1 174 1 16 1 284 1 321 1 
289 1 123 1 167 1 310 1 294 1 108 1 296 1 321 1 
123 1 216 1 167 2 284 1 164 1 296 2 113 1 321 2 
123 1 331 1 167 1 294 1 318 1 334 1 296 1 321 1 
36 1 167 1 281 1 223 1 299 1 284 1 348 1 329 1 296 1 321 1 
193 1 123 1 133 1 167 2 256 1 296 2 321 2 113 1 
123 1 133 1 167 2 284 1 4 1 296 2 113 1 321 2 
123 1 133 1 167 2 365 1 284 1 296 2 113 1 321 2 
123 1 246 1 139 1 182 1 167 1 294 1 277 1 296 1 329 1 107 1 243 1 220 1 17 1 281 1 284 1 321 1 
123 1 167 1 294 1 336 1 283 1 108 1 296 1 321 1 
204 1 146 1 237 1 118 1 64 1 
288 1 290 1 237 2 204 2 238 1 31 2 94 2 229 1 157 1 64 1 342 1 364 1 88 1 146 2 18 1 118 1 177 1 81 1 6 1 
236 1 237 1 246 1 64 1 277 1 146 1 298 1 17 1 163 1 
64 1 6 1 81 1 
180 1 183 1 78 1 120 1 
180 1 183 1 173 1 156 1 176 1 120 1 316 1 
90 1 316 1 99 1 
180 1 352 1 360 1 183 1 156 1 316 3 332 2 173 3 39 1 176 1 358 1 120 1 
180 1 183 1 173 2 361 1 156 1 176 1 170 1 120 1 316 2 
180 1 138 1 156 1 316 1 67 1 36 1 173 1 176 1 72 1 223 1 358 1 
180 1 173 1 156 1 176 1 358 1 120 1 316 1 
183 1 173 1 156 1 176 1 358 1 120 2 316 1 
180 1 156 2 242 1 316 2 343 1 173 2 176 2 358 1 120 1 105 1 
180 2 138 1 183 1 156 1 170 2 316 3 217 1 77 1 48 1 173 3 176 1 358 1 120 1 
92 1 180 1 183 1 156 1 170 1 316 2 36 1 207 1 173 2 176 1 223 2 72 1 358 1 120 1 348 1 
180 2 138 1 183 1 156 2 361 1 170 2 316 4 77 1 173 4 176 2 150 1 358 1 120 1 
180 1 183 1 173 1 156 1 176 1 358 1 120 1 316 1 
180 3 138 1 360 1 183 2 156 1 170 2 316 4 77 1 332 1 57 1 173 4 39 1 176 1 120 2 
180 1 315 1 126 1 183 1 156 1 170 1 316 2 173 2 273 1 176 1 358 1 120 1 
180 1 360 2 127 1 183 1 156 1 316 3 332 2 173 3 39 1 176 1 358 1 120 1 
11 1 180 2 250 1 158 2 
187 1 173 1 156 1 176 1 358 1 316 1 
180 1 48 1 183 1 173 2 156 1 176 1 170 1 358 1 120 1 316 2 
341 1 
180 1 183 1 173 1 156 1 176 1 358 1 120 1 316 1 
180 1 48 1 332 1 183 1 173 3 156 1 176 1 170 1 358 1 120 1 316 3 
180 1 138 1 77 1 57 1 
180 1 120 1 

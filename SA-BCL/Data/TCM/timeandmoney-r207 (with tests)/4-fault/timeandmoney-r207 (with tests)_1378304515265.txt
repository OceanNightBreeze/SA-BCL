#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 1 29 3 67 1 366 3 376 1 44 1 356 2 228 1 142 1 276 2 292 1 324 2 219 1 
75 2 266 1 29 9 77 1 366 9 311 1 245 2 177 1 82 2 5 1 228 2 351 1 276 2 324 5 93 4 67 6 376 1 44 1 184 1 17 1 46 1 356 2 188 1 336 1 304 2 142 1 292 1 219 3 
75 2 266 1 29 9 77 1 366 9 311 1 245 2 177 1 82 2 5 1 228 2 351 1 276 2 324 5 93 4 67 6 376 1 44 1 184 1 17 1 46 1 356 2 188 1 336 1 304 2 142 1 292 1 219 3 
75 2 266 1 29 10 77 1 366 10 311 1 245 2 177 1 82 2 5 1 228 2 351 1 276 2 324 6 93 5 67 7 376 1 44 1 184 1 17 1 46 1 356 2 188 1 336 1 304 2 142 1 292 1 219 4 
75 1 266 1 29 7 77 1 366 7 311 1 245 2 177 1 82 2 5 1 228 2 351 1 276 2 324 4 93 3 67 4 376 1 44 1 184 1 46 1 356 2 188 1 336 1 304 2 142 1 292 1 219 2 
75 2 93 2 29 4 67 3 366 4 376 1 44 1 245 1 184 1 17 1 356 1 177 1 82 1 304 1 142 1 276 1 324 3 219 1 
279 1 29 2 77 1 308 1 366 2 376 1 44 1 245 1 356 1 46 1 333 1 228 1 304 1 142 1 276 1 324 1 
75 2 93 4 29 9 282 1 67 7 366 9 376 1 44 1 245 1 184 1 17 1 177 1 356 2 81 1 82 1 188 1 228 1 336 1 304 1 142 1 276 2 324 5 292 1 219 3 
75 2 93 4 29 9 282 1 67 7 366 9 376 1 44 1 245 1 184 1 17 1 177 1 356 2 81 1 82 1 188 1 228 1 336 1 304 1 142 1 276 2 324 5 292 1 219 3 
136 1 148 1 225 1 199 1 138 1 153 1 162 1 186 1 114 1 170 1 249 1 124 1 277 1 305 1 
214 1 
150 1 114 2 272 1 1 1 214 1 79 1 124 2 249 1 
148 1 125 1 149 1 151 1 1 2 225 1 364 1 309 4 79 1 199 1 153 1 114 5 269 1 154 1 370 1 272 2 85 1 10 2 249 2 277 1 136 1 13 1 326 1 42 2 41 1 138 1 287 2 162 1 186 1 377 2 357 2 358 1 102 2 214 2 170 1 124 5 305 1 105 5 
208 1 272 1 214 1 
214 1 215 1 275 2 
148 2 170 2 291 1 138 2 199 2 153 2 305 2 162 1 
265 1 148 3 173 1 110 1 176 1 365 2 310 1 298 1 199 2 153 3 59 1 203 1 313 2 315 2 38 1 39 1 352 1 89 1 182 1 353 1 375 1 328 1 97 2 355 1 118 1 139 1 138 2 16 1 162 1 164 2 47 1 258 1 170 2 189 1 291 1 305 2 338 1 
186 1 148 1 136 1 225 1 170 1 138 1 199 1 153 1 305 1 162 1 
296 1 74 1 148 1 367 1 138 1 153 1 254 1 186 1 114 1 272 1 214 1 124 1 145 1 325 1 
296 1 74 1 148 1 367 1 199 1 138 1 153 1 186 1 114 2 272 1 214 1 170 1 124 2 145 1 305 1 
114 1 1 1 343 1 124 1 249 1 
114 2 272 1 1 1 214 1 169 1 79 1 124 2 249 1 
114 1 1 1 124 1 
148 2 138 2 199 1 153 2 163 1 84 1 170 1 291 2 305 1 
299 1 72 1 20 1 
148 1 110 1 365 1 375 1 139 1 153 1 313 1 164 1 47 1 258 1 50 1 189 1 291 1 352 1 338 1 182 1 
148 2 284 1 110 1 375 1 365 1 139 1 138 1 153 2 313 1 299 1 47 1 164 1 258 1 170 1 189 1 352 1 181 1 305 1 338 1 182 1 
208 1 291 1 
148 3 284 1 170 3 199 1 291 1 138 3 153 3 305 3 
186 1 148 1 225 1 170 1 138 1 153 1 305 1 
186 1 148 1 163 1 84 1 170 1 138 1 199 1 153 1 305 1 
296 1 74 1 265 1 148 4 110 1 176 1 365 1 367 1 298 1 200 1 199 2 153 4 59 1 203 1 313 1 114 1 315 1 38 1 39 1 352 1 181 1 182 1 284 1 375 1 328 1 97 2 355 1 118 1 139 1 138 3 98 1 162 1 163 1 186 1 47 1 164 1 258 1 170 3 189 1 124 1 291 1 145 1 338 1 305 3 
148 2 284 1 170 1 291 1 138 2 153 2 305 1 201 1 254 1 
296 1 74 1 148 3 284 2 327 1 367 1 199 1 138 3 200 1 153 3 163 1 186 1 114 1 214 1 170 3 124 1 181 1 145 1 305 3 
299 1 148 2 163 1 284 1 170 2 72 1 138 2 199 1 153 2 305 2 
148 1 110 1 365 1 375 1 139 1 153 1 313 1 164 1 47 1 258 1 189 1 291 1 352 1 338 1 182 1 
148 1 110 1 365 1 375 1 139 1 153 1 313 1 314 1 164 1 258 1 189 1 291 1 352 1 373 1 182 1 
265 1 174 1 128 1 176 1 33 1 195 1 198 1 59 1 299 2 315 4 273 1 38 2 374 1 328 1 97 2 355 1 15 1 118 1 287 1 16 2 377 1 259 1 20 2 72 2 
74 1 186 1 148 1 194 1 170 1 138 1 153 1 305 1 
163 1 148 5 284 2 321 1 78 1 170 4 181 1 291 1 199 1 138 5 153 5 305 4 201 1 254 1 
186 1 148 2 194 1 225 1 170 2 138 2 153 2 305 2 
247 1 323 1 241 1 
131 1 122 1 274 1 64 1 323 2 241 2 
323 1 241 1 
323 1 241 1 
131 1 64 1 
131 1 64 1 
131 1 64 1 
24 1 323 1 241 1 
24 1 323 1 241 1 
24 1 323 1 241 1 
197 1 323 1 241 1 
197 1 323 1 241 1 
197 1 323 1 241 1 
306 1 294 1 26 1 280 1 69 2 120 1 255 3 114 2 167 1 205 2 318 2 214 1 274 1 132 1 360 2 124 2 323 2 11 2 241 2 
148 2 108 1 28 1 153 2 369 1 114 1 318 1 205 1 247 1 323 1 229 1 11 1 69 1 96 1 138 2 253 1 120 1 255 1 334 1 170 2 124 1 291 1 305 2 241 1 
82 1 308 1 361 1 22 2 245 2 
82 1 304 1 245 1 
304 1 308 1 245 1 
82 2 83 1 308 1 361 1 22 1 245 3 
82 1 256 1 308 1 361 1 22 1 245 2 
1 1 195 1 309 3 79 1 202 1 227 2 114 5 272 1 248 1 275 3 249 4 322 2 42 1 41 1 230 1 96 1 253 1 287 1 100 1 377 1 357 1 18 1 334 1 236 1 102 1 215 1 359 2 214 2 259 1 124 5 105 2 220 1 
149 1 109 1 1 6 195 3 309 8 343 5 79 1 202 1 227 6 114 9 272 1 275 9 249 7 322 6 41 1 42 2 230 2 231 1 96 4 232 5 287 3 45 1 377 3 357 2 337 1 236 3 102 2 215 3 214 5 103 1 259 3 124 9 240 1 105 6 220 2 
149 1 309 3 195 1 227 2 114 3 272 1 248 1 249 2 275 4 322 2 42 1 230 1 96 1 287 1 18 1 357 1 377 1 236 1 102 1 214 3 215 2 359 1 259 1 124 3 220 1 105 2 
149 1 109 1 309 5 195 2 227 4 114 4 272 1 248 1 275 7 249 3 322 4 42 1 230 1 231 1 96 2 287 2 357 1 18 1 377 2 337 1 236 2 102 1 214 4 215 3 359 2 259 2 124 4 220 1 105 4 
137 1 
208 1 117 1 182 1 
278 1 182 1 
139 1 182 1 
117 2 155 1 189 1 139 1 73 1 182 3 
189 1 139 1 182 1 
362 1 182 1 
147 1 125 1 221 1 128 3 151 1 301 1 233 1 198 2 287 1 16 4 377 1 315 7 347 1 85 1 7 1 38 3 216 2 21 1 
147 2 125 2 265 1 192 1 128 10 151 2 176 1 195 3 198 5 2 1 226 4 315 31 347 1 85 1 7 1 8 1 38 15 354 1 328 1 301 2 97 2 233 5 118 1 287 4 16 16 377 4 288 1 101 3 236 3 379 1 216 3 49 1 21 1 259 3 
147 1 125 1 265 2 128 4 151 1 176 2 301 1 328 2 97 4 233 1 198 3 118 2 287 1 16 5 377 1 315 9 347 1 379 1 289 1 85 1 38 4 216 2 171 1 21 1 
147 1 125 1 128 3 151 1 301 1 233 1 198 2 287 1 16 4 377 1 315 7 347 1 85 1 7 1 38 3 216 2 21 1 
147 1 125 1 128 3 151 1 301 1 233 1 198 2 287 1 16 4 377 1 315 7 347 1 85 1 7 1 38 3 216 2 21 1 
340 2 29 1 110 1 365 1 366 1 344 2 345 1 313 1 113 1 228 2 206 1 276 1 371 1 182 1 250 1 375 1 285 2 139 1 356 1 164 1 335 1 258 1 260 1 
340 1 25 1 222 1 29 1 31 1 308 1 365 1 366 1 344 1 245 2 313 1 82 1 178 1 83 1 228 1 276 1 116 1 161 1 375 1 285 1 356 1 211 1 164 1 304 1 142 1 258 1 
340 1 25 1 29 2 31 1 308 1 365 1 366 2 57 1 344 1 245 2 313 1 82 1 178 1 83 1 228 1 276 1 324 1 116 1 67 1 161 1 375 1 376 1 285 1 44 1 356 1 211 1 164 1 304 1 142 1 258 1 
340 1 25 1 222 1 29 3 30 1 308 1 365 1 366 3 344 1 245 2 313 1 82 1 113 1 178 1 83 1 228 1 276 1 324 1 116 1 67 2 161 1 375 1 376 1 285 1 44 1 356 1 211 1 164 1 304 1 258 1 
340 1 25 1 222 1 29 2 30 1 308 1 365 1 366 2 344 1 245 2 313 1 82 1 83 1 228 1 324 1 116 1 67 2 161 1 375 1 376 1 285 1 44 1 164 1 304 1 258 1 
312 1 
296 1 191 2 148 1 1 6 110 2 56 2 342 1 153 1 4 2 114 5 346 1 65 1 250 1 14 1 254 1 119 1 357 1 164 2 214 2 215 2 258 1 124 5 217 1 263 2 220 1 74 1 267 2 309 2 365 2 32 1 367 1 79 3 313 2 272 1 87 2 275 2 88 1 180 1 371 1 325 1 182 1 94 1 41 1 42 1 95 2 375 1 139 1 138 1 99 1 186 1 102 1 51 1 145 1 239 4 105 2 
74 1 296 1 65 1 148 1 150 1 94 1 1 2 95 1 367 1 79 1 138 1 153 1 254 1 186 1 114 3 346 1 124 3 51 1 217 1 239 2 145 1 325 1 
74 1 296 1 65 1 148 1 150 1 94 1 1 1 56 1 367 1 79 1 138 1 153 1 254 1 186 1 114 3 346 1 272 1 214 1 124 3 51 1 217 1 239 3 145 1 325 1 
296 1 74 1 148 1 150 1 1 2 56 1 367 1 79 1 153 1 4 1 346 1 114 3 272 1 325 1 65 1 94 1 95 1 138 1 254 1 186 1 214 1 51 1 124 3 145 1 239 3 217 1 
296 1 74 1 191 2 148 1 150 1 267 2 1 7 309 1 56 4 367 1 79 3 153 1 4 4 346 1 114 5 272 5 6 1 87 2 9 1 88 1 325 1 65 1 94 1 42 1 41 1 95 4 138 1 286 1 119 1 254 1 332 1 186 1 357 1 102 1 215 2 214 5 51 1 124 5 145 1 239 6 217 1 263 2 264 1 105 1 
296 1 148 1 191 2 1 4 56 2 153 1 4 2 114 4 346 1 65 1 119 1 254 1 357 1 215 2 214 2 124 4 217 1 263 2 74 1 267 2 309 1 367 1 79 2 272 1 87 2 88 1 275 2 325 1 94 1 41 1 42 1 95 2 138 1 99 1 186 1 102 1 51 1 239 4 145 1 105 1 
296 1 74 1 191 2 148 1 1 4 267 2 309 1 56 2 367 1 79 2 153 1 4 2 346 1 114 4 272 1 6 1 87 2 88 1 325 1 65 1 94 1 41 1 42 1 95 2 138 1 119 1 254 1 332 1 186 1 357 1 102 1 214 1 215 2 51 1 124 4 145 1 239 4 217 1 263 2 264 1 105 1 
296 1 74 1 191 2 148 1 1 4 267 2 309 1 56 2 367 1 79 2 153 1 4 2 346 1 114 4 272 1 6 1 87 2 88 1 325 1 65 1 94 1 41 1 42 1 95 2 138 1 119 1 254 1 332 1 186 1 357 1 102 1 214 1 215 2 51 1 124 4 145 1 239 4 217 1 263 2 264 1 105 1 
296 1 74 1 191 2 148 1 1 4 267 2 309 1 56 2 367 1 79 2 58 1 153 1 4 2 346 1 114 4 204 2 272 1 6 1 275 2 88 1 157 1 325 1 159 2 65 1 94 1 41 1 42 1 95 2 329 1 138 1 254 1 186 1 357 1 102 1 214 1 51 1 124 4 145 1 239 4 217 1 105 1 
296 1 74 1 191 2 148 1 267 2 1 5 309 1 56 3 367 1 79 2 153 1 4 3 346 1 114 4 272 1 6 1 87 2 88 1 325 1 65 1 94 1 42 1 41 1 95 3 138 1 286 1 119 1 254 1 332 1 186 1 357 1 102 1 214 1 215 2 51 1 124 4 145 1 239 5 217 1 263 2 264 1 105 1 
296 1 74 1 191 2 148 1 267 2 1 5 309 1 56 3 367 1 79 2 153 1 4 3 346 1 114 4 272 1 6 1 87 2 88 1 325 1 65 1 94 1 42 1 41 1 95 3 138 1 286 1 119 1 254 1 332 1 186 1 357 1 102 1 214 1 215 2 51 1 124 4 145 1 239 5 217 1 263 2 264 1 105 1 
296 1 74 1 191 2 148 1 1 4 267 2 309 1 56 2 367 1 79 2 153 1 4 2 346 1 114 4 204 2 272 1 275 2 88 1 157 1 325 1 159 2 65 1 94 1 42 1 41 1 95 2 138 1 254 1 99 1 186 1 357 1 102 1 214 1 51 1 124 4 145 1 239 4 217 1 105 1 
107 1 148 1 0 1 55 1 110 2 57 1 298 1 153 1 59 2 63 1 250 1 355 2 118 2 16 1 164 7 71 1 258 3 170 1 262 1 305 1 265 2 173 1 307 1 176 2 365 6 313 7 315 2 273 1 38 1 86 1 371 1 89 2 182 4 284 1 375 4 328 2 97 4 139 3 138 1 330 1 331 1 141 1 189 1 
265 1 148 1 128 1 176 1 195 1 198 1 199 1 153 1 59 1 299 1 315 3 38 2 328 1 97 2 355 1 252 1 118 1 138 1 287 1 16 1 163 1 377 1 236 1 170 1 380 1 72 1 20 1 259 1 305 1 
265 1 125 1 128 2 151 1 176 1 198 2 59 1 299 1 315 6 347 1 273 1 85 1 38 3 208 1 328 1 97 2 355 1 118 1 287 1 16 3 377 1 216 1 72 1 21 1 20 1 291 2 
265 2 173 1 128 2 176 2 195 2 196 1 198 1 298 1 2 1 59 1 226 3 299 11 316 1 315 14 8 1 38 6 328 2 97 4 233 1 355 2 252 1 118 2 287 1 16 8 185 1 377 2 101 3 236 2 19 1 20 11 72 4 259 1 291 1 
148 2 265 1 173 1 110 1 176 1 365 1 298 1 153 2 59 1 313 1 315 2 38 1 352 1 181 1 182 1 284 1 375 1 328 1 97 2 355 1 252 1 139 1 118 1 138 1 16 1 47 1 164 1 257 1 258 1 104 1 50 1 170 1 189 1 72 1 291 1 338 1 305 1 146 1 
148 3 151 1 110 1 195 2 198 4 298 1 153 3 59 3 299 7 347 1 349 2 352 2 68 2 252 1 355 3 118 3 16 10 164 3 258 2 216 1 170 1 21 1 20 7 72 7 259 2 305 1 125 1 265 3 173 1 222 1 128 8 176 3 365 3 368 1 313 3 315 20 85 1 38 10 39 2 181 1 372 2 134 2 182 2 90 1 284 1 375 2 328 3 97 6 233 4 138 1 139 2 287 3 47 2 377 3 236 2 189 2 291 2 53 1 338 2 
265 1 128 1 176 1 195 1 328 1 97 2 233 1 355 1 15 1 118 1 59 1 16 2 299 1 377 1 315 2 273 1 72 1 20 1 
265 1 128 1 176 1 33 1 328 1 97 2 198 1 355 1 118 1 287 1 59 1 299 1 315 2 273 1 38 2 72 1 20 1 259 1 
265 1 128 2 176 1 195 1 198 1 59 1 299 2 315 4 273 1 38 2 328 1 97 2 355 1 233 1 118 1 287 1 16 2 377 1 236 1 20 2 72 2 259 1 
265 1 128 1 176 1 195 1 328 1 97 2 233 1 355 1 15 1 118 1 330 1 59 1 16 2 299 1 377 1 315 2 72 1 20 1 
265 1 128 1 176 1 33 1 328 1 97 2 198 1 355 1 118 1 330 1 287 1 59 1 299 1 315 2 38 2 72 1 20 1 259 1 
265 1 128 2 176 1 195 1 198 1 59 1 299 2 315 4 38 2 328 1 97 2 355 1 233 1 118 1 330 1 287 1 16 2 377 1 236 1 20 2 72 2 259 1 
265 1 128 2 176 1 195 1 198 1 59 1 299 2 315 4 38 2 328 1 97 2 355 1 233 1 118 1 287 1 16 2 377 1 236 1 20 2 72 2 259 1 
148 1 265 1 173 1 110 1 176 1 365 1 298 1 153 1 59 1 313 1 315 2 39 1 38 1 352 1 182 1 375 1 328 1 97 2 355 1 139 1 118 1 16 1 47 1 164 1 258 1 189 1 291 1 338 1 
148 1 265 1 173 1 193 1 110 1 176 1 365 1 298 1 153 1 59 1 313 1 314 1 315 2 38 1 352 1 373 1 182 1 375 1 328 1 97 2 355 1 139 1 118 1 16 1 164 1 258 1 189 1 291 1 
265 1 128 2 176 1 195 1 198 1 59 1 299 2 315 4 38 2 328 1 97 2 355 1 252 1 233 1 118 1 287 1 16 2 377 1 236 1 20 2 72 2 259 1 
148 1 265 1 128 2 176 1 195 1 365 1 57 1 198 1 153 1 59 1 313 1 299 2 315 4 38 2 39 1 352 1 372 1 182 1 375 1 328 1 97 2 233 1 355 1 139 1 118 1 287 1 16 2 377 1 47 1 164 1 236 1 258 1 259 1 72 2 20 2 189 1 338 1 
265 1 148 1 128 1 176 1 195 1 199 1 153 1 59 1 299 1 315 3 38 1 283 1 328 1 97 2 233 1 355 1 252 1 118 1 138 1 287 1 16 2 163 1 377 1 236 1 170 1 259 1 20 1 72 1 305 1 
265 2 76 1 128 6 176 2 195 3 198 3 2 1 226 2 315 19 317 2 8 1 179 1 38 10 158 1 66 1 328 2 97 4 233 3 118 2 287 3 16 9 303 1 377 3 289 1 101 1 236 3 237 2 259 3 363 1 293 1 
265 3 76 1 243 1 128 4 224 1 176 3 195 3 198 2 226 2 315 26 317 1 8 2 38 12 179 2 133 1 66 1 300 1 328 3 97 6 233 2 118 3 287 2 302 1 16 14 303 2 377 3 379 2 289 1 101 2 236 3 237 4 144 1 259 2 363 1 
125 1 265 3 76 1 243 1 128 8 224 1 151 1 176 3 195 4 297 1 198 4 2 1 226 4 315 41 347 1 317 1 85 1 8 3 179 2 38 21 133 1 158 1 66 1 300 1 328 3 97 6 233 4 118 3 302 1 287 5 16 20 303 1 377 5 379 1 289 1 101 3 236 4 216 1 237 4 144 1 21 1 259 4 363 1 
125 1 265 4 76 1 243 1 128 7 224 1 151 1 176 4 195 4 297 1 198 4 2 1 226 4 315 38 347 1 317 1 85 1 8 3 179 2 38 18 133 1 158 1 66 1 300 1 328 4 97 8 233 3 118 4 302 1 287 4 16 20 303 1 377 5 379 2 289 1 101 3 236 4 216 1 237 4 144 1 21 1 259 3 363 1 
125 1 265 2 76 1 243 1 128 14 224 1 151 1 176 2 195 7 198 7 2 2 226 4 315 52 347 1 317 1 85 1 8 2 179 1 38 25 133 1 66 1 300 1 328 2 97 4 233 7 118 2 302 1 287 8 16 27 303 1 377 8 379 1 289 1 101 4 236 7 216 1 237 4 19 2 144 1 21 1 259 7 363 1 
306 1 318 1 205 1 274 1 132 1 69 1 323 1 190 1 11 1 241 1 
28 1 247 1 
341 1 318 1 205 1 43 1 69 1 323 1 11 1 207 1 241 1 
306 1 294 1 280 1 69 1 120 1 255 2 114 1 167 1 205 1 318 1 214 1 274 1 132 1 360 1 124 1 323 1 11 1 241 1 
306 1 294 1 280 1 69 1 120 1 255 2 114 1 167 1 205 1 318 1 214 1 274 1 132 1 360 1 124 1 323 1 11 1 241 1 
306 1 294 1 280 1 69 1 120 1 255 2 114 1 167 1 205 1 318 1 214 1 274 1 132 1 360 1 124 1 323 1 11 1 241 1 
24 1 122 1 319 1 
24 1 122 1 319 1 
197 1 290 1 
122 1 197 1 290 1 
229 1 369 1 
294 1 148 2 108 1 28 1 153 2 369 1 114 1 318 1 205 1 247 1 249 1 323 1 229 1 11 1 69 1 96 1 253 1 138 2 255 1 334 1 360 1 170 2 124 1 291 1 305 2 54 1 241 1 
24 1 319 1 
122 1 197 1 290 1 
148 2 265 1 126 1 307 1 173 1 55 1 176 1 365 2 298 1 153 2 59 1 313 2 246 1 315 2 271 1 38 1 89 2 182 1 375 1 328 1 251 1 97 2 355 1 252 1 139 1 118 1 138 2 16 1 164 2 187 1 258 1 
250 1 110 1 160 1 183 1 375 1 365 1 344 1 139 1 313 1 164 1 258 1 260 1 371 1 182 1 
25 1 222 1 308 1 183 1 375 1 365 1 161 1 344 1 245 2 313 1 82 1 178 1 164 1 83 1 166 1 304 1 258 1 350 1 
25 1 222 1 308 1 183 1 375 1 365 2 161 1 57 1 344 1 245 2 313 2 82 1 178 1 164 2 83 1 166 1 304 1 258 1 350 1 
25 1 222 1 308 1 365 1 161 1 375 1 344 1 245 2 313 1 82 1 178 1 164 1 83 1 166 1 304 1 258 1 261 1 
270 1 
41 1 42 1 309 1 358 1 357 1 269 1 272 1 102 1 214 1 105 1 
13 1 195 2 309 5 287 2 227 5 377 2 236 2 215 5 214 5 10 2 275 10 259 2 322 5 134 1 105 5 
114 1 272 1 1 1 214 1 124 1 79 1 
172 1 149 1 110 2 1 4 32 1 365 4 309 2 342 2 152 2 79 2 313 4 114 3 320 1 371 1 182 1 250 1 14 1 42 2 41 1 375 1 209 1 139 1 357 2 164 4 102 2 258 1 124 3 220 2 105 2 
208 1 269 1 358 1 272 1 309 1 214 1 105 1 
1 1 309 1 79 1 114 1 272 1 87 1 275 1 42 1 41 1 119 1 357 1 102 1 215 1 214 2 124 1 263 1 105 1 
295 1 242 2 110 1 1 5 195 2 57 1 342 1 152 1 114 5 115 2 155 1 348 1 62 2 10 2 13 2 117 2 209 1 358 1 357 4 164 3 258 1 215 6 214 8 124 5 259 2 220 2 127 1 309 9 365 3 367 2 79 3 313 3 227 6 269 1 272 2 275 12 322 6 134 2 182 6 278 3 41 4 42 4 375 2 139 1 287 2 377 2 236 2 102 4 143 2 189 1 52 2 105 8 
243 1 224 1 1 1 309 8 195 2 342 1 79 1 129 1 226 1 227 5 114 1 272 2 8 1 10 2 275 6 322 5 13 1 92 1 300 1 42 2 41 2 302 1 287 2 357 2 377 2 101 1 236 2 102 2 215 3 214 5 144 1 124 1 259 2 220 1 105 5 
148 1 125 1 151 1 225 1 309 2 199 1 153 1 114 1 154 1 85 1 10 2 277 1 136 1 13 1 42 1 41 1 138 1 287 1 162 1 332 1 186 1 357 1 377 2 102 1 170 1 124 1 305 1 105 2 
265 1 148 3 110 1 176 1 365 1 298 1 199 2 153 3 203 1 59 1 313 1 315 1 38 1 39 1 352 1 182 1 375 1 328 1 97 2 355 1 138 2 139 1 118 1 162 1 164 1 47 1 258 1 170 2 189 1 291 1 305 2 338 1 
41 1 42 1 309 1 342 1 227 2 357 1 272 2 102 1 215 2 214 4 216 1 275 4 322 2 105 2 220 1 
306 1 234 1 318 1 205 1 229 1 
91 1 318 1 205 1 
91 1 318 1 205 1 
91 1 318 1 205 1 
318 1 205 1 210 1 
318 1 205 1 210 1 
318 1 205 1 210 1 
318 1 205 1 
323 1 241 1 
265 1 125 2 128 5 151 2 176 1 328 1 97 2 198 3 233 2 118 1 287 2 16 5 377 2 154 1 315 10 289 1 85 1 38 5 
265 1 128 1 176 1 195 1 328 1 97 2 233 1 118 1 16 2 377 1 315 2 289 1 
265 1 128 2 176 1 195 1 328 1 97 2 198 1 233 1 118 1 287 1 16 2 377 1 315 4 289 1 236 1 38 2 259 1 
265 3 125 1 281 1 128 2 151 1 176 3 328 3 97 6 198 1 233 1 118 3 16 1 315 3 379 1 289 1 38 2 158 1 
125 3 265 5 128 12 151 3 176 5 195 3 198 7 2 1 226 4 315 34 347 1 85 2 8 1 38 18 158 1 281 1 354 1 328 5 97 10 233 5 118 5 287 5 16 16 288 1 377 5 379 2 289 1 101 3 236 3 213 1 216 1 49 1 21 1 259 3 
265 2 125 1 128 3 151 1 176 2 328 2 97 4 233 1 198 2 118 2 287 1 16 4 377 1 315 8 347 1 379 1 85 1 38 4 216 1 21 1 
125 1 208 1 377 1 315 6 128 2 347 1 151 1 85 1 38 3 216 1 198 2 21 1 287 1 16 3 
265 1 128 2 176 1 195 1 328 1 97 2 198 1 233 1 118 1 287 1 16 2 377 1 315 4 236 1 213 1 38 2 259 1 
128 2 195 1 198 1 233 1 2 1 287 1 16 3 226 2 377 1 315 7 101 1 236 1 8 1 38 4 259 1 
125 2 265 2 128 9 151 2 176 2 195 2 198 5 2 1 226 2 315 23 347 1 85 1 38 12 281 1 328 2 97 4 233 4 118 2 287 3 16 11 185 1 377 3 236 2 101 2 379 2 216 1 19 1 21 1 259 2 
315 1 38 1 226 1 
315 1 101 1 16 1 
265 1 128 3 176 1 195 1 328 1 97 2 233 1 198 2 118 1 287 1 16 3 377 1 315 6 236 1 213 1 38 3 259 1 134 1 
265 1 128 2 243 1 224 1 176 1 195 2 198 1 226 1 315 12 8 1 38 6 300 1 328 1 97 2 233 1 118 1 302 1 287 2 16 6 377 2 101 1 289 1 236 2 144 1 259 2 
125 1 128 2 151 1 198 1 233 1 287 1 16 3 377 1 315 6 85 1 38 3 
125 1 265 1 128 2 281 1 151 1 176 1 328 1 97 2 233 1 198 1 118 1 16 1 315 3 347 1 379 1 38 2 21 1 
265 1 125 1 128 2 151 1 176 1 198 2 226 1 315 8 347 1 8 1 85 1 38 4 328 1 97 2 118 1 287 1 16 4 377 1 101 1 289 1 216 1 144 1 21 1 
125 1 265 2 128 3 151 1 176 2 195 1 198 2 2 1 226 2 315 11 347 1 85 1 8 1 38 5 328 2 97 4 233 1 118 2 287 1 16 6 377 2 289 1 101 1 236 1 213 1 216 1 144 1 21 1 
125 1 265 3 128 4 243 1 224 1 151 1 176 3 195 2 198 3 226 1 315 19 347 1 85 1 8 1 38 10 300 1 328 3 97 6 233 1 118 3 302 1 287 3 16 9 377 3 101 1 289 1 236 2 379 1 213 1 216 1 144 1 21 1 259 2 
125 1 265 3 128 5 243 1 224 1 151 1 176 3 195 2 198 3 226 1 315 17 347 1 85 1 8 1 38 7 300 1 328 3 97 6 233 2 118 3 302 1 287 2 16 10 377 3 379 1 101 1 289 1 236 2 213 1 216 1 144 1 21 1 259 1 
265 1 125 1 128 2 151 1 176 1 198 2 226 1 315 8 347 1 8 1 85 1 38 4 328 1 97 2 118 1 287 1 16 4 377 1 101 1 289 1 216 1 144 1 21 1 
265 1 128 2 243 1 224 1 176 1 195 2 198 1 226 1 315 12 8 1 38 6 300 1 328 1 97 2 233 1 118 1 302 1 287 2 16 6 377 2 101 1 289 1 236 2 144 1 259 2 
125 1 265 4 243 1 128 5 224 1 151 1 176 4 195 2 198 3 226 1 315 18 347 1 85 1 8 1 38 8 300 1 328 4 97 8 233 2 118 4 302 1 287 2 16 10 377 3 289 1 101 1 236 2 379 2 213 1 216 1 144 1 21 1 259 1 
265 4 243 1 128 6 224 1 176 4 195 3 198 3 226 1 315 16 8 1 38 7 158 1 300 1 328 4 97 8 233 3 118 4 302 1 287 2 16 9 377 3 289 1 101 1 236 3 379 2 144 1 259 2 
125 3 128 6 151 3 198 3 233 3 287 1 16 3 377 1 315 7 347 1 85 1 38 4 21 2 
125 1 265 4 243 1 128 4 224 1 151 1 176 4 195 2 198 3 226 1 315 18 347 1 85 1 8 1 38 8 158 1 300 1 328 4 97 8 233 1 118 4 302 1 287 2 16 10 377 3 289 1 101 1 236 2 379 2 216 1 144 1 21 1 259 1 
148 1 112 1 291 1 138 1 153 1 201 1 254 1 
148 1 111 1 112 1 244 1 138 1 153 1 201 1 254 1 3 1 37 1 291 1 23 1 
250 1 110 1 34 1 375 1 365 4 57 1 139 1 80 1 313 4 164 4 258 1 371 1 182 1 
107 1 365 2 375 2 152 1 139 1 313 2 71 1 164 2 86 1 63 1 258 1 189 1 53 1 182 1 
25 1 164 1 110 1 304 1 308 1 375 1 258 1 365 1 245 1 313 1 
222 1 55 1 365 2 375 1 57 1 251 1 139 1 313 2 164 2 258 1 182 1 
0 1 55 1 250 1 110 1 34 1 365 4 375 2 57 1 152 1 139 2 313 5 164 5 141 1 258 2 371 1 182 3 
0 1 55 1 250 1 110 1 34 1 365 4 375 2 57 1 152 1 36 1 139 2 313 5 164 5 258 2 371 1 182 3 
208 1 164 1 250 1 110 1 375 1 258 1 365 1 139 1 371 1 182 1 313 1 
148 2 284 1 110 1 375 1 365 1 139 1 138 1 153 2 313 1 164 1 47 1 258 1 170 1 189 1 291 1 352 1 305 1 182 1 
74 1 148 2 365 1 152 1 153 2 130 1 313 1 352 1 182 3 284 1 375 1 138 2 139 2 186 1 47 1 164 1 258 1 170 1 189 2 291 1 145 1 305 2 362 1 
74 1 148 2 365 2 152 1 153 2 80 1 130 1 313 2 314 1 352 1 182 3 284 1 375 1 138 2 139 2 186 1 164 2 258 1 170 1 189 2 291 1 145 1 305 2 362 1 
148 1 225 1 365 1 152 1 199 1 153 1 313 1 114 1 272 1 277 1 182 1 136 1 278 1 138 1 162 1 186 1 140 1 164 1 214 1 170 1 124 1 305 1 
148 1 225 1 365 1 152 1 199 1 153 1 313 1 114 1 272 1 277 1 182 1 136 1 278 1 138 1 162 1 186 1 164 1 214 1 143 1 170 1 124 1 305 1 
164 1 375 1 258 1 365 1 262 1 313 1 
0 1 55 1 110 2 365 5 57 1 313 6 155 1 63 1 89 1 182 3 375 3 139 2 212 1 331 1 164 6 71 1 141 1 258 2 189 1 262 1 
148 2 151 1 57 1 198 2 153 2 59 2 299 1 347 1 352 1 68 1 252 1 355 2 118 2 16 3 164 1 258 1 216 1 170 1 72 1 21 1 20 1 305 1 265 2 125 1 128 2 176 2 365 1 313 1 315 6 271 1 85 1 39 1 38 3 372 1 182 1 284 1 375 1 328 2 97 4 138 1 139 1 287 1 47 1 377 1 189 1 291 2 338 1 
110 1 1 2 309 1 365 1 367 1 79 1 313 1 269 1 114 3 115 1 272 1 62 1 249 1 182 2 278 1 117 1 42 2 41 2 209 1 358 1 164 1 357 2 102 2 214 1 143 1 124 3 52 1 105 1 
117 1 365 2 375 2 57 1 139 1 313 2 164 2 155 1 348 1 258 1 189 1 262 1 182 2 
148 2 284 1 110 1 375 1 365 1 139 1 138 1 153 2 313 1 314 1 164 1 258 1 170 1 189 1 291 1 352 1 305 1 182 1 
365 1 375 2 152 1 139 1 212 1 313 1 71 1 164 1 155 1 63 1 258 1 189 1 182 1 
168 1 35 1 238 1 291 1 268 1 
74 1 296 1 35 2 367 1 268 1 200 1 186 1 114 2 61 1 272 1 378 1 168 2 214 1 156 1 249 1 124 2 238 2 291 1 145 1 
148 1 126 1 35 1 268 1 138 1 153 1 246 1 187 1 238 1 
61 1 156 1 268 1 
29 1 366 1 142 1 376 1 44 1 276 1 324 1 356 1 
339 1 93 1 67 2 29 4 77 1 366 4 376 2 44 2 356 1 165 1 276 1 40 1 324 3 219 1 
27 1 29 2 282 1 67 1 366 2 376 1 44 1 356 1 121 1 142 1 276 1 324 1 
29 3 77 2 175 1 366 3 376 1 44 1 356 1 165 2 142 1 276 1 40 1 324 1 
106 1 48 1 324 2 70 2 
235 1 29 1 366 1 142 1 276 1 356 1 
67 1 188 1 29 2 366 2 142 1 376 1 44 1 276 1 324 1 356 1 
135 1 
29 1 366 1 142 1 376 1 44 1 276 1 324 1 356 1 
208 1 376 1 44 1 324 1 
29 1 366 1 376 1 44 1 276 1 324 1 356 1 
340 1 228 1 29 1 
29 3 77 2 366 3 376 1 44 1 356 1 60 1 165 1 142 1 276 1 324 1 40 1 
75 1 67 1 29 2 366 2 376 1 44 1 276 1 324 1 356 1 
93 1 29 1 366 1 245 1 356 1 177 1 82 1 304 1 142 1 276 1 324 1 
29 1 366 1 142 1 44 1 276 1 324 1 356 1 
29 1 366 1 142 1 376 1 44 2 276 1 356 1 
223 1 29 2 366 2 44 1 356 2 142 1 276 2 324 1 218 1 12 1 
93 1 29 3 67 2 366 3 376 1 44 1 356 1 188 1 336 1 142 1 276 1 324 2 219 1 
29 2 67 1 308 1 366 2 376 1 44 1 245 2 356 1 82 1 83 1 304 1 142 1 123 1 276 1 324 1 
75 1 93 1 29 4 67 2 366 4 376 1 44 1 356 2 17 1 142 1 276 2 324 2 219 1 
67 1 29 3 77 1 366 3 376 1 44 1 356 1 188 1 142 1 276 1 324 1 
339 1 93 1 324 1 219 1 
44 1 324 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 106 (125,282) 237 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 106 307 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 106 (125,282) 237 317 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 279 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (58,71,149) (124,256,321) (124,256,321) (124,256,321) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (58,71,149) (124,256,321) (124,256,321) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (58,71,149) (124,256,321) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (198,304) (34,338) (34,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (58,71,149) (124,256,321) (124,256,321) (124,256,321) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 38 212 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 106 307 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 106 (125,282) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 279 95 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 106 (125,282) (125,282) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (58,71,149) (58,71,149) (58,71,149) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (58,71,149) (58,71,149) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (198,304) (198,304) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (58,71,149) (58,71,149) (58,71,149) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 38 212 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 106 (125,282) 237 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 143 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
299 2 4 1 261 1 12 6 103 1 264 2 191 1 193 2 312 9 277 1 162 9 316 2 318 1 197 1 278 5 168 1 167 3 239 1 66 4 119 1 285 1 242 1 83 2 213 2 180 1 33 2 181 1 217 1 
299 2 4 1 261 1 12 6 103 1 264 2 191 1 193 2 312 9 277 1 162 9 316 2 318 1 197 1 278 5 168 1 167 3 239 1 66 4 119 1 285 1 242 1 83 2 213 2 180 1 33 2 181 1 217 1 
299 2 4 1 261 1 12 7 103 1 264 2 191 1 193 2 312 10 277 1 162 10 316 2 318 1 197 1 278 6 168 1 167 4 239 1 66 5 119 1 285 1 242 1 83 2 213 2 180 1 33 2 181 1 217 1 
299 2 4 1 261 1 12 4 103 1 264 1 191 1 193 2 312 7 277 1 162 7 316 2 318 1 197 1 278 4 167 2 239 1 66 3 119 1 285 1 242 1 83 2 213 2 180 1 33 2 181 1 217 1 
167 1 168 1 239 1 66 2 299 1 242 1 12 3 103 1 264 2 191 1 83 1 213 1 312 4 316 1 33 1 162 4 181 1 278 3 
65 1 299 1 242 1 241 1 103 1 191 1 193 1 83 1 312 2 315 1 318 1 33 1 162 2 316 1 278 1 197 1 
167 1 66 1 119 1 242 1 12 1 103 1 191 1 193 1 83 2 312 3 33 2 162 3 278 2 
299 1 12 7 103 1 264 2 191 1 193 1 312 9 162 9 316 1 278 5 167 3 168 1 66 4 239 1 119 1 285 1 242 1 171 1 244 1 83 2 213 1 33 2 181 1 217 1 
299 1 12 7 103 1 264 2 191 1 193 1 312 9 162 9 316 1 278 5 167 3 168 1 66 4 239 1 119 1 285 1 242 1 171 1 244 1 83 2 213 1 33 2 181 1 217 1 
64 1 143 1 24 1 
176 2 24 1 88 1 
93 2 22 2 238 2 192 2 155 1 337 2 273 1 137 2 
1 1 238 1 22 1 93 1 201 1 117 2 125 1 192 1 106 1 155 1 337 1 30 1 320 1 237 1 137 1 
93 1 22 1 238 1 192 1 155 1 81 1 116 1 292 1 337 1 137 1 
64 1 0 1 140 1 93 1 22 1 310 1 81 1 109 1 159 1 24 1 50 1 77 1 137 1 76 1 
64 1 0 1 238 1 22 1 93 1 140 1 24 1 50 2 77 2 192 1 310 1 109 1 81 1 337 1 137 1 
156 1 82 1 226 1 50 1 77 1 
64 1 156 1 82 1 142 1 24 1 204 1 50 2 77 2 
82 1 50 1 77 1 
238 1 22 1 93 1 116 1 50 1 77 1 13 1 192 1 156 1 155 1 81 1 292 1 337 1 137 1 
24 1 
64 1 156 1 82 1 269 1 142 1 24 1 50 2 77 2 
64 1 113 2 220 1 169 1 98 1 330 1 142 1 24 1 47 1 50 5 77 5 246 2 309 1 152 1 156 2 82 2 164 2 62 1 322 1 
1 1 93 1 22 1 238 1 106 1 240 1 117 1 337 1 206 1 137 1 
143 1 273 1 
325 1 22 2 93 2 238 1 97 1 192 1 337 1 273 2 137 2 
150 1 37 1 17 1 
307 1 1 1 106 1 117 1 
93 3 22 3 238 3 192 1 240 1 337 3 273 1 137 3 
93 1 22 1 238 1 81 1 116 1 337 1 137 1 
325 1 93 1 22 1 238 1 192 1 97 1 81 1 337 1 137 1 
0 1 1 1 238 3 22 3 93 3 140 1 97 1 69 1 240 1 117 1 125 1 206 1 50 1 77 1 192 2 106 1 155 1 310 1 81 1 109 1 337 3 317 1 237 1 137 3 
93 2 22 2 238 1 240 1 337 1 273 1 31 1 76 1 137 2 
0 1 238 3 22 3 93 3 140 1 97 1 69 1 254 1 240 2 24 1 206 1 50 1 77 1 192 1 310 1 81 1 109 1 337 3 137 3 
238 2 22 2 93 2 97 1 240 1 150 1 192 1 337 2 17 1 137 2 
1 1 106 1 117 1 
1 1 117 1 279 1 
37 2 182 2 183 2 42 1 225 1 187 1 259 1 150 2 54 1 107 1 194 1 16 1 59 4 17 2 61 1 19 2 324 1 21 1 203 1 202 1 118 1 215 1 35 1 346 1 
174 1 0 1 93 1 22 1 238 1 81 1 337 1 137 1 
238 4 22 5 93 5 97 1 240 2 287 1 206 1 76 1 192 1 311 1 337 4 273 1 31 1 137 5 
174 1 93 2 22 2 238 2 81 1 116 1 337 2 137 2 
27 1 18 1 
27 1 18 1 
210 1 300 1 
210 1 300 1 
210 1 300 1 
27 1 40 1 18 1 
27 1 175 1 18 1 
308 1 27 2 210 1 105 1 300 1 18 2 
27 1 40 1 18 1 
27 1 40 1 18 1 
27 1 178 1 18 1 
27 1 178 1 18 1 
27 1 178 1 18 1 
2 2 70 1 327 1 121 2 24 1 50 2 75 1 77 2 308 1 27 2 336 1 247 3 85 1 18 2 87 2 135 2 89 2 111 1 252 1 
93 2 296 1 146 1 50 1 273 1 18 1 165 1 200 1 238 2 22 2 327 1 23 1 121 1 286 1 77 1 27 1 175 1 337 2 247 1 87 1 133 1 135 1 89 1 137 2 
299 1 213 1 316 1 
299 1 316 1 241 1 
185 1 213 2 248 1 189 1 316 3 241 1 
185 1 213 1 189 1 316 2 241 1 293 1 
213 1 185 1 189 2 316 2 241 1 
142 1 144 1 8 2 259 1 146 1 50 5 11 2 229 1 194 1 15 1 156 4 56 1 158 1 164 1 165 1 62 3 322 1 324 1 113 1 64 1 169 2 203 1 286 1 24 2 25 1 77 5 246 1 82 1 176 3 339 1 88 1 136 2 
94 5 226 5 142 1 8 6 259 3 146 4 50 9 232 1 194 3 15 3 156 7 56 2 268 1 158 1 236 1 164 2 62 8 323 1 322 1 324 3 64 1 113 2 169 6 203 3 329 1 330 1 24 5 77 9 246 2 82 6 29 1 176 9 339 2 88 3 136 6 
144 1 8 2 259 1 146 1 50 3 11 1 156 2 56 1 15 1 194 1 164 1 62 3 324 1 64 1 113 1 169 2 203 1 330 1 24 3 25 1 77 3 246 1 176 4 339 1 88 2 136 2 
144 1 8 4 259 2 146 2 50 4 11 2 232 1 56 1 156 3 15 2 194 2 164 1 62 5 323 1 324 2 64 1 113 1 169 4 203 2 329 1 330 1 24 4 25 1 77 4 246 1 176 7 339 1 88 3 136 4 
115 1 143 1 280 1 
115 1 270 1 
145 1 
230 1 115 1 
230 1 80 1 115 3 305 1 251 1 280 2 
230 1 115 1 305 1 
115 1 260 1 
39 1 48 1 173 1 128 1 262 1 306 1 79 1 335 1 211 1 59 1 215 1 35 2 19 1 
39 1 48 1 173 1 128 1 262 1 306 1 79 1 335 1 211 1 59 1 215 1 35 2 19 1 
39 1 48 1 173 1 128 1 262 1 306 1 79 1 335 1 57 1 211 1 59 1 215 1 35 2 19 1 
182 12 297 3 39 1 183 2 255 1 7 1 48 1 259 3 262 1 306 2 266 4 54 1 107 1 15 3 194 3 235 1 59 25 61 1 199 1 19 13 21 1 324 3 203 3 284 1 74 1 173 2 128 2 79 2 335 5 211 2 340 1 215 4 35 9 
182 1 255 1 170 1 183 4 48 1 173 1 262 1 128 1 306 1 54 2 79 1 107 2 130 1 335 1 211 1 59 3 215 2 61 2 35 3 19 2 21 2 
256 1 331 1 100 1 117 1 257 1 124 1 103 1 193 1 83 1 196 1 58 1 312 1 33 1 162 1 342 1 321 1 
256 1 331 1 117 1 257 1 12 1 14 1 193 1 83 1 196 1 58 1 312 2 33 1 162 2 342 1 341 1 321 1 20 1 
14 1 193 1 331 1 196 1 117 1 58 1 257 1 312 1 162 1 341 1 321 1 12 1 
1 1 331 2 117 1 257 2 172 1 193 2 83 1 196 2 338 1 312 1 34 1 33 1 162 1 198 1 20 1 
256 1 331 1 117 1 257 1 124 1 103 1 14 1 193 1 83 1 196 1 58 1 312 1 33 1 162 1 342 1 321 1 
344 1 
113 1 1 1 38 1 169 1 142 1 117 1 50 2 77 2 53 1 246 1 82 2 212 1 164 1 322 1 
0 1 93 1 140 1 142 1 301 1 50 3 310 1 109 1 269 1 159 1 110 1 281 1 22 1 76 1 208 1 77 3 129 2 288 1 28 1 81 1 82 2 137 1 
0 1 140 1 93 1 142 1 46 1 50 3 310 1 109 1 269 1 159 1 110 1 281 1 64 1 22 1 24 1 76 1 208 1 77 3 129 3 288 1 28 1 82 1 81 1 137 1 
0 1 140 1 93 1 142 1 301 1 46 1 50 3 310 1 269 1 109 1 159 1 110 1 281 1 64 1 22 1 24 1 76 1 208 1 77 3 129 3 288 1 28 1 81 1 82 2 134 1 137 1 
0 1 93 1 9 1 109 1 269 1 110 1 281 1 113 1 22 1 114 1 120 1 24 5 129 6 208 1 288 1 28 1 134 4 137 1 138 1 139 1 140 1 221 2 301 4 142 3 45 2 46 4 303 2 228 1 50 5 310 1 159 1 164 1 62 1 322 1 64 5 169 1 77 5 76 1 246 1 81 1 82 7 179 1 249 2 88 2 
0 1 93 1 109 1 110 1 281 1 113 1 22 1 24 2 129 4 208 1 288 1 28 1 134 2 137 1 138 1 140 1 221 2 142 2 301 2 45 2 46 2 303 2 228 1 50 4 310 1 159 1 164 1 163 1 62 1 322 1 64 1 169 1 76 1 77 4 246 1 81 1 82 4 176 2 249 2 88 2 
139 1 138 1 0 1 140 1 93 1 221 2 301 2 142 2 45 2 46 2 303 2 228 1 50 4 310 1 109 1 159 1 110 1 164 1 62 1 322 1 281 1 64 1 113 1 22 1 169 1 114 1 24 1 76 1 208 1 77 4 129 4 288 1 246 1 28 1 82 4 81 1 249 2 179 1 88 2 134 2 137 1 
139 1 138 1 0 1 140 1 93 1 221 2 301 2 142 2 45 2 46 2 303 2 228 1 50 4 310 1 109 1 159 1 110 1 164 1 62 1 322 1 281 1 64 1 113 1 22 1 169 1 114 1 24 1 76 1 208 1 77 4 129 4 288 1 246 1 28 1 82 4 81 1 249 2 179 1 88 2 134 2 137 1 
139 1 0 1 140 1 93 1 221 2 301 2 142 2 45 2 46 2 228 1 50 4 148 1 233 2 310 1 109 1 159 1 110 1 164 1 62 1 322 1 281 1 64 1 113 1 22 1 169 1 24 1 127 2 332 1 76 1 208 1 77 4 129 4 288 1 209 1 246 1 28 1 82 4 81 1 176 2 134 2 137 1 
139 1 138 1 0 1 140 1 93 1 221 2 142 2 301 3 45 2 46 3 303 2 228 1 9 1 50 4 310 1 109 1 159 1 164 1 110 1 62 1 322 1 281 1 64 1 113 1 22 1 169 1 114 1 24 1 76 1 208 1 77 4 129 5 288 1 246 1 28 1 81 1 82 5 249 2 179 1 88 2 134 3 137 1 
139 1 138 1 0 1 140 1 93 1 221 2 142 2 301 3 45 2 46 3 303 2 228 1 9 1 50 4 310 1 109 1 159 1 164 1 110 1 62 1 322 1 281 1 64 1 113 1 22 1 169 1 114 1 24 1 76 1 208 1 77 4 129 5 288 1 246 1 28 1 81 1 82 5 249 2 179 1 88 2 134 3 137 1 
0 1 93 1 109 1 110 1 281 1 113 1 22 1 24 1 127 2 129 4 208 1 288 1 209 1 28 1 134 2 137 1 140 1 221 2 142 2 301 2 45 2 46 2 228 1 50 4 233 2 310 1 159 1 164 1 163 1 62 1 322 1 64 1 169 1 76 1 77 4 246 1 81 1 82 4 176 2 
42 1 183 2 143 1 187 1 48 1 173 1 262 1 306 1 54 1 107 1 215 1 61 1 35 1 346 1 21 1 
37 11 182 6 297 3 183 4 42 2 43 1 101 1 259 1 266 3 150 11 54 2 107 2 15 2 194 2 235 1 59 14 273 1 275 1 314 1 17 4 61 2 19 8 21 2 324 1 203 2 126 1 289 1 335 1 215 1 340 1 343 1 35 2 346 1 
1 1 93 1 182 1 42 1 183 2 43 1 307 1 54 1 106 1 107 1 59 2 275 1 17 1 314 1 61 1 19 1 21 1 22 1 238 1 326 1 240 1 117 1 122 1 206 1 334 1 337 1 346 1 137 1 
182 1 1 1 238 1 22 1 93 1 183 2 42 1 240 1 117 1 206 1 54 1 107 1 59 1 337 1 275 1 314 1 61 1 36 1 137 1 346 1 21 1 
93 1 1 2 182 1 183 4 42 2 43 1 100 1 187 1 258 1 54 2 107 2 153 1 59 2 314 1 61 2 319 1 19 1 21 2 238 1 22 1 201 1 240 1 117 4 337 1 346 2 137 1 
37 1 93 1 182 2 97 1 183 2 42 1 259 1 150 1 54 1 192 1 107 1 15 1 194 1 59 3 275 1 17 1 61 1 19 1 21 1 324 1 238 1 22 1 203 1 245 1 337 1 215 1 35 1 346 1 137 1 
37 1 42 1 183 2 202 1 203 1 187 1 150 1 54 1 107 1 335 1 194 1 59 2 17 1 61 1 35 1 19 2 346 1 21 1 
37 1 182 2 42 1 183 2 118 1 187 1 259 1 150 1 54 1 107 1 59 2 215 1 17 1 61 1 35 1 346 1 21 1 324 1 
37 2 182 2 183 2 42 1 187 1 259 1 150 2 54 1 107 1 194 1 15 1 59 4 17 2 61 1 19 2 21 1 324 1 203 1 335 1 215 1 35 2 346 1 
37 1 42 1 183 2 202 1 203 1 150 1 54 1 107 1 335 1 194 1 59 2 17 1 61 1 319 1 35 1 19 2 346 1 21 1 
37 1 182 2 42 1 183 2 118 1 259 1 150 1 54 1 107 1 59 2 215 1 17 1 61 1 319 1 35 1 346 1 21 1 324 1 
37 2 182 2 183 2 42 1 259 1 150 2 54 1 107 1 194 1 15 1 59 4 17 2 61 1 319 1 19 2 21 1 324 1 203 1 335 1 215 1 35 2 346 1 
37 2 182 2 183 2 42 1 259 1 150 2 54 1 107 1 194 1 15 1 59 4 17 2 61 1 19 2 21 1 324 1 203 1 335 1 215 1 35 2 346 1 
1 1 106 1 117 1 125 1 
95 1 1 1 117 1 279 1 
37 2 182 2 183 2 42 1 259 1 150 2 54 1 107 1 194 1 15 1 59 4 275 1 17 2 61 1 19 2 21 1 324 1 203 1 335 1 215 1 35 2 346 1 
282 1 106 1 117 1 100 1 125 1 
37 1 182 1 93 1 97 1 183 2 42 1 259 1 150 1 54 1 192 1 107 1 15 1 194 1 59 3 275 1 17 1 61 1 19 2 324 1 21 1 238 1 22 1 203 1 335 1 337 1 86 1 35 1 346 1 137 1 
182 19 183 6 255 1 188 1 259 4 262 1 263 1 266 4 104 4 107 3 194 4 15 4 108 2 19 17 21 3 203 4 205 1 207 1 131 1 215 3 35 7 297 3 224 1 48 1 306 1 54 3 55 1 154 1 235 3 59 36 61 3 324 4 166 1 170 1 73 1 173 1 78 1 335 4 340 1 250 1 91 1 
182 16 183 8 255 2 188 1 259 3 262 1 263 1 266 4 104 4 107 4 194 4 15 4 108 2 19 17 21 4 203 4 205 1 207 1 131 1 215 4 35 7 297 3 224 1 48 1 306 1 54 4 55 1 154 1 235 3 59 33 61 4 324 3 166 1 170 1 73 1 173 1 78 1 335 3 340 1 250 1 91 1 
182 23 297 4 255 1 183 4 224 1 101 2 188 1 48 1 259 7 262 1 306 1 263 1 266 4 104 4 54 2 107 2 154 1 108 1 15 7 194 7 235 2 59 47 61 2 19 24 166 1 21 2 324 7 170 1 203 7 73 1 173 1 207 1 205 1 78 1 335 7 131 1 215 6 340 2 35 13 91 1 
182 10 297 1 183 4 224 1 188 1 259 3 147 1 263 1 266 2 104 2 54 2 107 2 108 1 15 3 194 3 235 1 59 19 61 2 19 9 21 2 324 3 170 1 203 3 73 1 78 2 335 3 215 3 340 1 250 1 35 6 
182 12 297 2 255 2 183 6 224 1 188 2 259 2 263 1 266 2 104 4 54 3 107 3 108 2 154 1 15 3 194 3 235 2 59 26 61 3 19 14 21 3 166 1 324 2 170 1 203 3 73 1 207 1 205 1 78 1 335 2 131 1 215 2 35 4 91 1 
308 1 27 1 70 1 99 1 121 1 87 1 18 1 135 1 89 1 111 1 
175 1 133 1 
27 1 223 1 121 1 302 1 87 1 18 1 135 1 216 1 89 1 
2 1 70 1 327 1 121 1 24 1 50 1 75 1 77 1 308 1 27 1 336 1 247 2 18 1 87 1 135 1 89 1 111 1 252 1 
2 1 70 1 327 1 121 1 24 1 50 1 75 1 77 1 308 1 27 1 336 1 247 2 18 1 87 1 135 1 89 1 111 1 252 1 
2 1 70 1 327 1 121 1 24 1 50 1 75 1 77 1 308 1 27 1 336 1 247 2 18 1 87 1 135 1 89 1 111 1 252 1 
92 1 105 1 40 1 
92 1 105 1 40 1 
178 1 190 1 
105 1 178 1 190 1 
200 1 296 1 
93 2 2 1 296 1 146 1 50 1 156 1 273 1 160 1 18 1 165 1 200 1 22 2 238 2 23 1 121 1 286 1 77 1 27 1 336 1 175 1 247 1 337 2 87 1 133 1 135 1 89 1 137 2 
92 1 40 1 
105 1 178 1 190 1 
182 1 22 2 93 2 201 2 183 2 42 1 43 1 117 2 258 1 102 1 51 1 52 1 54 1 107 1 59 2 271 1 275 1 314 1 61 1 19 1 21 1 137 2 346 1 
14 1 331 1 100 1 117 2 58 1 71 1 44 1 342 1 149 1 
14 1 331 1 117 1 58 1 71 1 274 1 342 1 
1 1 331 1 117 1 44 1 198 1 304 1 
14 1 331 1 117 1 58 1 71 1 44 1 342 1 149 1 
195 1 
64 1 220 1 169 1 143 1 24 1 47 1 62 1 
138 1 142 1 303 1 50 1 164 1 62 1 322 1 113 1 64 1 169 1 24 2 77 1 246 1 82 1 176 1 249 1 88 1 
113 1 1 1 246 1 267 1 117 1 164 1 322 1 
298 1 297 1 142 1 8 5 259 2 50 1 53 1 266 1 56 1 154 1 15 2 194 2 235 1 272 2 164 2 63 1 62 8 322 2 166 1 324 2 113 2 64 2 68 1 169 5 203 2 24 5 207 1 205 1 77 1 246 2 82 1 176 6 131 1 88 3 136 5 
93 1 298 1 186 1 259 1 50 1 306 1 13 1 192 1 155 1 272 2 313 1 164 1 62 2 322 1 113 1 22 1 238 1 169 2 203 2 116 1 173 1 77 1 246 1 81 1 292 1 337 1 179 1 137 1 
113 1 64 1 220 1 169 1 47 1 24 1 246 1 164 1 62 1 322 1 
298 1 169 5 203 2 8 5 24 5 259 2 15 2 194 2 272 2 176 10 214 1 88 5 62 5 136 5 324 2 
64 1 82 1 142 1 24 1 50 1 77 1 
113 1 1 1 38 1 169 1 142 1 117 1 50 1 77 1 53 1 246 1 82 2 212 1 84 1 164 1 322 1 
1 1 93 1 22 1 238 1 192 1 106 1 155 1 117 1 337 1 125 1 237 1 137 1 
113 1 64 2 169 2 8 2 24 4 53 1 246 1 79 1 56 1 176 4 88 2 164 1 62 1 136 2 322 1 
87 1 333 1 89 1 
296 1 161 1 87 1 89 1 111 1 
87 1 333 1 89 1 
87 1 333 1 89 1 
87 1 89 1 294 1 
87 1 89 1 294 1 
87 1 89 1 294 1 
87 1 89 1 
27 1 18 1 
182 1 297 1 170 1 183 2 48 1 173 1 205 1 262 1 306 1 266 1 54 1 107 1 235 1 59 2 215 1 61 1 35 1 19 1 21 1 
182 2 297 1 183 4 48 1 262 1 306 1 266 2 54 2 107 2 15 1 194 1 235 1 59 5 61 2 276 1 19 3 21 2 170 1 203 1 173 1 205 1 335 1 215 1 340 1 35 2 
182 7 297 1 183 6 255 1 48 1 259 2 262 1 306 1 266 1 54 3 107 3 154 1 15 2 194 2 235 1 59 13 276 1 61 3 19 6 21 3 166 1 324 2 170 1 203 2 173 1 207 1 205 1 335 1 131 1 215 2 35 3 
182 4 297 1 255 1 183 6 48 1 259 1 262 1 306 1 266 1 54 3 107 3 154 1 15 2 194 2 235 1 59 11 276 1 61 3 19 7 21 3 166 1 324 1 170 1 203 2 173 1 205 1 207 1 335 2 131 1 215 2 35 4 
182 1 297 1 170 1 183 2 48 1 173 1 205 1 262 1 306 1 266 1 54 1 107 1 235 1 59 2 215 1 61 1 35 1 19 1 21 1 
182 6 297 1 183 2 259 2 266 1 54 1 107 1 154 1 15 2 194 2 235 1 59 12 61 1 19 6 21 1 166 1 324 2 170 1 203 2 205 1 207 1 335 1 131 1 215 1 35 2 
182 5 297 1 183 8 255 2 48 1 259 1 262 1 306 1 266 1 54 4 107 4 154 1 15 2 194 2 235 1 59 12 276 1 61 4 19 7 21 4 166 1 324 1 170 1 203 2 173 1 207 1 205 1 335 2 131 1 215 2 35 4 
182 7 297 1 183 8 255 2 259 2 266 1 54 4 107 4 154 1 15 3 194 3 235 1 59 16 61 4 19 9 21 4 166 1 324 2 170 1 203 3 207 1 205 1 335 3 131 1 215 3 250 1 35 6 
182 1 48 2 173 2 262 1 306 2 335 2 59 2 215 2 35 4 19 1 
182 5 297 1 183 8 255 2 48 1 259 1 262 1 306 1 266 1 54 4 107 4 154 1 15 2 194 2 235 1 59 12 61 4 19 7 21 4 166 1 324 1 170 1 203 2 173 1 207 1 205 1 335 1 131 1 215 2 250 1 35 3 
182 1 183 4 255 1 48 1 173 1 262 1 306 1 54 2 107 2 335 1 59 2 215 1 61 2 19 1 35 2 21 2 
143 1 215 1 48 1 173 1 35 1 262 1 306 1 
182 2 183 2 203 1 259 1 54 1 107 1 15 1 194 1 335 1 59 4 215 1 276 1 61 1 35 2 19 2 324 1 21 1 
182 4 297 1 203 1 259 1 266 2 15 1 194 1 335 1 235 1 59 7 215 1 340 1 19 3 35 2 324 1 
182 14 297 2 255 2 183 4 101 1 186 1 48 1 259 3 262 1 306 4 266 2 54 2 107 2 194 2 15 2 157 1 59 27 313 1 61 2 19 13 324 2 21 2 203 3 126 1 173 4 79 1 335 5 340 1 215 6 35 11 
266 1 182 1 59 1 
297 1 59 1 19 1 
182 3 183 2 203 1 259 1 54 1 107 1 15 1 194 1 335 1 59 6 214 1 215 2 61 1 276 1 19 3 35 3 21 1 324 1 
182 6 297 1 183 2 259 2 266 1 54 1 107 1 154 1 15 2 194 2 235 1 59 12 61 1 19 6 21 1 166 1 324 2 170 1 203 2 205 1 207 1 335 1 131 1 215 1 35 2 
182 3 203 1 186 1 259 1 173 1 306 1 335 1 59 6 215 1 19 3 35 2 
182 6 183 2 255 1 186 1 48 1 259 1 262 1 306 3 54 1 107 1 157 1 59 12 313 1 61 1 19 6 21 1 203 1 173 3 79 1 335 3 215 3 35 6 
182 5 183 2 170 1 203 2 186 1 259 2 173 2 306 2 54 1 107 1 335 2 59 10 313 1 215 3 61 1 35 5 19 5 21 1 
170 1 183 2 203 1 54 1 107 1 194 1 335 1 59 2 61 1 19 2 35 1 21 1 
182 2 170 1 183 2 203 1 259 1 54 1 107 1 15 1 194 1 335 1 59 4 215 1 61 1 35 2 19 2 324 1 21 1 
182 2 255 1 170 1 183 6 173 1 306 1 54 3 107 3 335 1 157 1 59 3 215 1 61 3 250 1 35 2 19 1 21 3 
182 15 297 3 255 2 183 10 186 1 7 1 48 1 259 4 262 1 306 3 266 4 54 5 107 5 15 3 194 3 157 1 235 1 59 28 276 1 61 5 199 1 19 13 21 5 324 3 170 1 203 4 284 1 173 3 335 5 340 1 215 6 250 1 35 11 
93 1 22 1 222 1 81 1 273 1 31 1 32 1 137 1 76 1 
3 1 22 1 93 1 222 1 41 1 72 1 76 1 290 1 81 1 273 1 32 1 31 1 218 1 137 1 
1 1 117 1 143 1 
1 1 93 1 22 1 238 1 240 1 117 1 337 1 137 1 
93 1 22 1 238 1 240 1 117 1 337 1 243 1 137 1 
93 1 22 1 238 1 240 1 117 1 337 1 243 1 137 1 
117 1 243 1 50 1 77 1 
117 1 243 1 50 1 77 1 
117 1 123 1 
1 1 117 1 
238 1 22 1 93 1 183 2 42 1 240 1 117 1 100 1 51 1 54 1 107 1 337 1 275 1 61 1 137 1 346 1 21 1 
113 1 1 1 246 1 156 1 117 1 84 1 164 1 322 1 50 1 77 1 
117 1 123 1 
231 1 1 1 100 1 117 4 90 1 
141 1 117 1 
1 1 117 1 
14 1 117 2 100 1 
1 1 100 1 117 2 
1 1 100 1 117 2 
1 1 93 1 22 1 238 1 240 1 117 1 337 1 137 1 
117 1 243 1 
93 1 22 1 96 1 271 1 102 1 49 1 137 1 52 1 345 1 
96 1 328 1 5 1 
96 1 273 1 49 1 10 1 345 1 
64 1 0 1 96 1 140 1 253 1 69 1 5 1 328 1 24 1 49 2 10 2 50 2 77 2 310 1 156 1 81 1 109 1 273 1 345 2 
191 1 143 1 242 1 278 1 
191 1 83 1 312 1 242 1 162 1 33 1 278 1 
193 1 257 1 162 1 
184 1 242 1 103 1 151 1 191 1 83 1 60 1 312 3 33 1 162 3 318 2 278 1 
264 1 191 1 83 1 312 2 242 1 162 2 33 1 278 1 12 1 
239 1 66 1 299 1 103 1 83 1 213 1 312 1 33 1 162 1 316 1 278 1 
83 1 312 1 242 1 162 1 33 1 278 1 103 1 
191 1 83 1 312 1 242 2 162 1 33 1 103 1 
283 1 242 1 227 1 103 1 83 2 312 2 33 2 162 2 278 1 219 1 
167 1 66 1 285 1 242 1 12 2 103 1 191 1 83 1 312 3 33 1 162 3 278 2 217 1 
299 1 242 1 241 1 12 1 103 1 191 1 234 1 83 1 213 1 312 2 248 1 316 2 33 1 162 2 278 1 
168 1 167 1 66 1 242 1 12 2 103 1 264 1 191 1 83 2 312 4 33 2 162 4 278 2 
191 1 83 1 312 1 242 1 162 1 33 1 278 1 103 1 
167 1 66 1 184 1 242 2 12 2 151 1 191 2 83 1 312 4 318 1 162 4 33 1 278 3 112 1 
242 1 171 1 12 1 103 1 265 1 191 1 83 1 312 2 177 1 33 1 162 2 278 1 
295 1 184 1 242 1 103 1 151 2 191 1 83 1 312 3 33 1 162 3 318 2 278 1 
67 1 291 2 278 2 26 1 
83 1 132 1 312 1 162 1 33 1 103 1 
191 1 285 1 83 1 312 2 242 1 162 2 33 1 278 1 12 1 103 1 
6 1 
191 1 83 1 312 1 242 1 162 1 33 1 278 1 103 1 
191 1 285 1 83 1 312 3 242 1 318 1 162 3 33 1 278 1 12 1 103 1 
167 1 66 1 278 1 112 1 
242 1 278 1 

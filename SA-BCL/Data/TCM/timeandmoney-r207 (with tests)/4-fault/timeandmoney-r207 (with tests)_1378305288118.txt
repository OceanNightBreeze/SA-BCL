#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 9 175 19 152 374 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 9 175 19 152 374 362 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 9 175 19 152 374 362 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 9 175 19 152 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 9 175 19 152 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 9 175 19 152 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 2 351 4 256 6 24 2 25 9 3 2 181 1 293 1 156 1 7 1 132 2 267 2 223 5 268 1 297 1 11 1 273 1 367 1 368 3 369 2 68 1 278 2 116 9 172 1 195 1 284 1 148 1 309 1 
288 2 351 4 256 6 24 2 25 9 3 2 181 1 293 1 156 1 7 1 132 2 267 2 223 5 268 1 297 1 11 1 273 1 367 1 368 3 369 2 68 1 278 2 116 9 172 1 195 1 284 1 148 1 309 1 
288 2 351 5 256 7 24 2 25 10 3 2 181 1 293 1 156 1 7 1 132 2 267 2 223 6 268 1 297 1 11 1 273 1 367 1 368 4 369 2 68 1 278 2 116 10 172 1 195 1 284 1 148 1 309 1 
288 2 351 3 256 4 24 2 25 7 3 2 181 1 293 1 156 1 7 1 132 2 267 2 223 4 268 1 297 1 11 1 273 1 368 2 369 1 68 1 278 2 116 7 172 1 195 1 284 1 148 1 309 1 
288 1 11 1 351 2 256 3 25 4 3 1 368 1 367 1 369 2 68 1 278 1 293 1 116 4 172 1 132 1 267 1 223 3 148 1 
97 1 24 1 25 2 3 1 68 1 278 1 293 1 116 2 132 1 267 1 223 1 59 1 297 1 309 1 148 1 318 1 
351 1 256 1 24 1 25 3 368 1 68 1 278 2 293 1 116 3 7 1 132 2 223 2 148 1 
288 1 351 4 256 7 24 1 25 9 3 1 181 1 202 1 293 1 156 1 7 1 105 1 132 2 267 1 223 5 11 1 368 3 367 1 369 2 68 1 278 2 116 9 172 1 148 1 
288 1 351 4 256 7 24 1 25 9 3 1 181 1 202 1 293 1 156 1 7 1 105 1 132 2 267 1 223 5 11 1 368 3 367 1 369 2 68 1 278 2 116 9 172 1 148 1 
342 1 71 1 366 1 
13 1 71 1 370 2 
169 1 149 2 265 2 119 2 164 2 163 2 95 2 227 1 
51 1 52 1 178 1 22 1 259 1 149 3 356 1 154 2 102 1 334 1 204 1 265 2 32 1 205 1 338 1 164 3 163 2 109 1 227 1 320 1 300 2 169 1 322 1 89 1 42 1 303 1 69 1 234 2 323 1 346 1 119 2 120 1 376 1 324 1 348 2 95 2 21 2 
149 1 265 1 135 1 20 1 119 1 164 1 163 1 95 1 227 1 242 1 
149 2 366 1 304 1 142 1 242 1 344 1 295 1 265 1 135 1 71 1 119 2 20 2 163 1 164 2 162 1 95 1 379 1 227 1 
149 2 366 1 153 1 304 1 142 1 242 1 295 1 265 2 135 1 71 1 119 2 20 2 163 2 164 2 162 1 95 2 227 1 62 1 
244 1 294 1 254 1 153 1 62 1 
239 1 244 1 254 1 75 1 71 1 366 1 153 2 62 2 
254 1 153 1 62 1 
149 1 153 1 142 1 242 1 244 1 265 1 135 1 20 1 119 1 163 1 164 1 95 1 62 1 227 1 
71 1 
239 1 244 1 254 1 71 1 366 1 58 1 153 2 62 2 
239 1 189 1 2 1 168 1 99 2 76 1 366 1 153 5 331 1 28 1 244 2 117 2 254 2 71 1 197 1 377 1 94 1 213 2 62 5 
342 1 169 1 
230 1 149 2 169 2 67 1 265 1 119 2 164 2 163 1 95 1 
31 1 365 1 292 1 
320 1 300 1 52 1 259 1 169 1 149 1 322 1 303 1 154 1 334 1 335 1 346 1 324 1 205 1 164 1 348 1 
315 1 230 1 169 1 149 5 265 4 119 5 375 2 108 1 84 1 164 5 163 4 95 1 379 1 139 1 
149 2 265 2 135 1 20 1 119 2 296 1 164 2 163 2 
320 1 300 1 52 1 259 1 149 2 322 1 292 1 303 1 154 1 334 1 265 1 346 1 375 1 119 1 324 1 205 1 84 1 163 1 164 2 348 1 
169 1 149 3 265 3 375 1 119 3 164 3 163 3 95 1 
149 1 265 1 135 1 20 1 119 1 164 1 163 1 
230 1 149 1 265 1 20 1 119 1 164 1 163 1 95 1 67 1 
12 1 230 1 149 2 304 1 308 1 295 1 265 2 20 1 375 1 119 2 84 1 163 2 164 2 162 1 95 1 
169 1 149 2 265 1 119 2 375 1 164 2 163 1 379 1 139 1 
149 1 304 1 358 1 308 1 295 1 265 1 20 1 375 1 119 1 84 1 163 1 164 1 162 1 
230 1 149 2 292 1 31 1 265 2 375 1 119 2 163 2 164 2 95 1 
320 1 300 1 52 1 259 1 169 1 149 1 322 1 303 1 154 1 334 1 346 1 324 1 205 1 164 1 348 1 
320 1 300 1 52 1 169 1 149 1 322 1 303 1 154 1 194 1 373 1 346 1 324 1 205 1 164 1 348 1 
51 1 98 1 356 1 292 2 201 1 31 2 204 1 32 1 338 1 317 1 340 1 248 1 188 1 9 1 365 2 89 1 115 1 66 1 69 2 234 4 174 1 323 2 347 1 21 2 
149 1 265 1 20 1 119 1 304 1 164 1 163 1 296 1 
332 1 226 1 
332 1 226 1 
291 1 49 1 
291 1 49 1 
291 1 49 1 
332 1 131 1 226 1 
332 1 131 1 226 1 
332 1 182 1 226 1 
332 2 209 1 211 1 291 1 49 1 226 2 
332 1 131 1 226 1 
332 1 245 1 226 1 
332 1 245 1 226 1 
332 1 245 1 226 1 
149 2 77 1 153 1 101 1 128 1 332 1 182 1 265 2 247 1 81 1 161 1 163 2 164 2 226 1 62 1 169 1 43 1 253 1 17 1 119 2 93 1 121 1 325 1 237 1 
209 1 112 1 125 1 41 1 153 2 101 1 128 3 6 2 332 2 236 1 360 1 247 2 71 1 325 2 121 2 161 2 226 2 378 1 62 2 
288 1 267 1 3 1 
267 1 59 1 3 1 
288 2 124 1 59 1 3 3 147 1 171 1 
288 1 87 1 124 1 59 1 3 2 171 1 
288 1 124 2 59 1 3 2 171 1 
177 2 239 1 328 1 99 1 76 3 153 5 220 2 331 1 30 1 244 4 81 1 136 2 340 1 317 1 9 1 62 5 13 1 38 1 366 1 115 1 370 3 144 1 17 1 117 1 345 1 254 1 71 2 197 2 175 1 237 1 213 1 286 1 
177 6 239 1 23 1 289 1 99 2 76 8 153 9 331 1 30 1 244 7 294 5 266 5 81 4 136 6 225 1 340 3 317 3 9 3 62 9 13 3 168 1 366 1 115 3 370 9 144 2 117 2 70 1 145 1 254 6 71 5 197 6 175 3 238 1 213 2 286 2 
177 2 99 1 76 3 153 3 220 1 244 2 81 1 136 2 340 1 317 1 9 1 62 3 13 2 168 1 38 1 366 1 115 1 370 4 144 1 117 1 345 1 71 3 175 1 197 2 213 1 286 1 
177 4 23 1 99 1 76 5 153 4 220 2 244 3 81 2 136 4 340 2 317 2 9 2 62 4 13 3 168 1 38 1 366 1 115 2 370 7 144 1 117 1 70 1 345 1 71 4 175 2 197 4 238 1 213 1 286 1 
52 1 342 1 185 1 
52 1 133 1 
329 1 
52 1 346 1 303 1 
52 1 53 1 
52 1 346 1 
52 3 104 1 240 1 346 1 185 2 303 1 
287 1 36 1 111 2 229 1 354 1 262 1 69 3 234 7 107 1 323 4 159 1 347 3 283 1 340 1 317 1 248 2 319 1 
287 1 36 1 111 2 229 1 354 1 262 1 69 3 234 7 107 1 323 4 159 1 347 3 283 1 340 1 317 1 248 2 319 1 
287 1 36 1 229 1 111 2 354 1 262 1 357 1 69 3 234 7 107 1 323 4 159 1 347 3 283 1 340 1 317 1 248 2 319 1 
287 2 51 1 354 1 262 2 204 1 246 1 184 4 32 1 107 1 33 1 159 5 317 4 340 4 248 5 319 2 9 3 36 1 229 1 272 1 111 3 40 1 89 1 170 1 250 1 115 3 307 1 69 15 234 31 281 3 323 16 347 10 283 2 175 3 21 2 
287 1 51 2 262 1 157 1 204 2 246 1 32 2 107 1 159 1 340 1 317 1 248 3 319 1 36 1 111 2 229 1 275 1 89 2 69 4 234 9 323 5 347 4 283 1 21 4 
288 1 256 1 24 1 25 2 263 1 3 2 154 1 293 1 243 1 55 1 132 1 359 1 267 1 223 1 59 1 337 1 205 1 300 1 15 1 210 1 141 1 45 1 68 1 278 1 116 2 92 1 324 1 348 1 147 1 148 1 
288 1 256 2 24 1 25 3 263 1 3 2 154 1 129 1 293 1 243 1 132 1 359 1 267 1 158 1 223 1 59 1 337 1 205 1 300 1 321 1 15 1 141 1 45 1 68 1 278 1 116 3 92 1 324 1 147 1 348 1 
288 1 256 2 24 1 25 2 263 1 3 2 154 1 129 1 293 1 243 1 359 1 267 1 223 1 59 1 205 1 300 1 321 1 15 1 141 1 68 1 116 2 92 1 324 1 348 1 147 1 
320 1 300 1 52 1 96 1 207 1 274 1 24 2 25 1 141 2 127 1 154 1 278 1 243 2 103 1 116 1 282 1 132 1 158 1 92 2 346 1 324 1 205 1 348 1 
288 1 300 1 321 1 24 1 15 1 25 1 3 2 263 1 141 1 154 1 45 1 278 1 55 1 243 1 116 1 132 1 359 1 267 1 92 1 59 1 324 1 205 1 337 1 147 1 348 1 148 1 
301 1 
239 3 52 1 149 1 99 1 151 1 153 4 331 1 154 2 103 1 295 1 336 1 205 1 164 1 162 1 165 1 62 4 206 2 13 2 300 2 65 1 304 1 344 1 117 1 18 2 254 6 71 1 346 1 118 1 119 1 20 1 349 2 348 2 214 2 213 1 310 2 74 1 352 2 76 2 219 1 222 1 320 2 228 1 274 1 192 1 277 2 233 1 370 2 235 1 324 1 197 2 327 2 286 1 379 1 
239 1 228 1 149 1 151 1 192 1 153 2 219 1 304 1 344 1 336 1 295 1 254 2 58 1 20 1 119 1 164 1 162 1 327 1 379 1 62 2 
228 1 352 1 149 1 151 1 192 1 153 1 219 1 304 1 344 1 336 1 295 1 20 1 119 1 349 1 164 1 162 1 379 1 62 1 
239 1 352 1 149 1 151 1 219 1 153 2 295 1 336 1 58 1 162 1 164 1 62 2 228 1 192 1 304 1 344 1 18 1 254 2 119 1 20 1 349 1 327 1 379 1 
239 3 149 2 151 1 99 1 153 4 331 1 242 1 336 1 295 1 58 1 163 1 162 1 164 2 62 4 206 2 13 2 65 1 304 1 344 1 117 1 18 4 254 7 71 2 20 2 119 2 349 3 176 1 213 1 214 2 310 2 217 1 352 3 76 1 219 1 126 1 316 1 265 1 135 1 227 1 228 1 276 1 192 1 366 2 277 2 233 1 142 1 197 1 327 4 95 1 379 1 
239 2 352 2 149 1 151 1 99 1 76 1 219 1 153 3 331 1 295 1 336 1 222 1 164 1 162 1 62 3 206 2 228 1 13 2 366 1 192 1 277 2 65 1 304 1 233 1 370 2 344 1 117 1 18 2 254 4 71 2 119 1 20 1 349 2 197 1 327 2 214 2 213 1 310 2 379 1 
239 2 352 2 149 1 151 1 99 1 76 1 219 1 153 3 331 1 316 1 295 1 336 1 162 1 164 1 62 3 206 2 228 1 13 2 276 1 366 1 192 1 277 2 65 1 304 1 233 1 344 1 117 1 18 2 254 4 71 1 119 1 20 1 349 2 197 1 327 2 176 1 214 2 213 1 310 2 379 1 
239 2 352 2 149 1 151 1 99 1 76 1 219 1 153 3 331 1 316 1 295 1 336 1 162 1 164 1 62 3 206 2 228 1 13 2 276 1 366 1 192 1 277 2 65 1 304 1 233 1 344 1 117 1 18 2 254 4 71 1 119 1 20 1 349 2 197 1 327 2 176 1 214 2 213 1 310 2 379 1 
239 2 352 2 123 2 149 1 151 1 99 1 76 1 219 1 153 3 200 2 331 1 316 1 295 1 336 1 162 1 164 1 269 1 60 1 62 3 206 2 228 1 39 1 366 1 192 1 304 1 233 1 370 2 344 1 117 1 18 2 254 4 71 1 119 1 20 1 349 2 197 1 327 2 213 1 310 2 379 1 
239 2 352 3 149 1 99 1 151 1 76 1 219 1 153 3 126 1 331 1 316 1 295 1 336 1 162 1 164 1 62 3 206 2 228 1 13 2 276 1 366 1 192 1 277 2 65 1 304 1 233 1 344 1 117 1 18 3 254 5 71 1 119 1 20 1 197 1 349 3 327 3 176 1 214 2 213 1 310 2 379 1 
239 2 352 3 149 1 99 1 151 1 76 1 219 1 153 3 126 1 331 1 316 1 295 1 336 1 162 1 164 1 62 3 206 2 228 1 13 2 276 1 366 1 192 1 277 2 65 1 304 1 233 1 344 1 117 1 18 3 254 5 71 1 119 1 20 1 197 1 349 3 327 3 176 1 214 2 213 1 310 2 379 1 
239 2 352 2 123 2 149 1 151 1 99 1 76 1 219 1 153 3 200 2 331 1 295 1 336 1 222 1 164 1 162 1 269 1 62 3 206 2 228 1 366 1 192 1 304 1 233 1 370 2 344 1 117 1 18 2 254 4 71 1 119 1 20 1 349 2 197 1 327 2 213 1 310 2 379 1 
51 1 356 1 262 1 292 1 31 1 204 1 32 1 107 1 338 1 248 2 317 1 340 1 319 1 36 1 229 1 111 1 342 1 169 2 365 1 89 1 66 1 69 3 234 6 323 3 347 2 21 2 
51 2 178 1 290 1 356 1 292 11 31 4 264 1 204 2 184 3 32 2 159 1 338 2 248 1 317 2 340 1 9 2 363 1 169 1 14 1 365 11 89 2 250 1 44 1 115 1 307 1 69 6 234 14 281 3 323 8 120 1 347 2 175 2 21 4 
51 1 312 1 52 1 178 1 259 1 149 2 356 1 154 1 334 1 31 1 335 1 204 1 265 1 32 1 83 1 205 1 338 1 164 2 163 1 84 1 320 1 300 1 169 1 322 1 89 1 303 1 193 1 44 1 69 1 234 2 346 1 119 1 375 1 323 1 324 1 120 1 348 1 21 2 
51 3 52 2 149 3 292 7 154 3 334 2 204 3 107 1 159 4 205 2 163 1 164 3 338 3 248 4 340 3 9 2 300 3 111 1 169 2 303 2 115 2 69 10 173 2 119 1 346 2 120 1 347 8 348 3 175 2 21 6 178 1 353 1 258 2 22 2 259 2 262 1 356 3 29 2 130 1 31 7 265 1 32 3 82 2 84 1 317 3 319 1 320 1 36 1 364 1 229 1 321 1 322 2 365 7 89 3 44 1 234 20 375 1 323 10 324 2 
51 2 52 3 1 1 178 1 149 1 356 2 154 8 80 1 27 1 103 1 204 2 265 1 32 2 34 1 205 2 164 1 163 1 338 2 110 1 320 2 300 7 274 1 321 1 210 1 89 2 343 1 66 1 69 1 46 1 234 2 119 1 375 1 323 1 346 2 324 2 120 1 376 2 348 8 21 4 
51 1 149 1 356 1 292 1 31 1 204 1 265 1 32 1 134 1 338 1 163 1 164 1 248 1 317 1 340 1 9 1 230 1 365 1 89 1 44 1 115 1 69 2 234 3 119 1 323 1 347 1 175 1 95 1 21 2 
51 1 365 1 89 1 356 1 292 1 66 1 31 1 234 2 204 1 174 1 32 1 323 2 347 1 159 1 338 1 317 1 9 1 21 2 
51 1 98 1 365 1 89 1 356 1 292 1 115 1 66 1 69 2 31 1 234 2 204 1 32 1 347 1 338 1 248 1 340 1 21 2 
51 1 356 1 292 2 31 2 204 1 32 1 159 1 338 1 317 1 340 1 248 1 9 1 365 2 89 1 115 1 66 1 69 2 234 4 323 2 347 2 175 1 21 2 
51 1 365 1 89 1 356 1 292 1 31 1 234 2 46 1 204 1 174 1 32 1 323 2 347 1 159 1 338 1 317 1 9 1 21 2 
51 1 98 1 365 1 89 1 356 1 292 1 115 1 69 2 31 1 234 2 46 1 204 1 32 1 347 1 338 1 248 1 340 1 21 2 
51 1 365 2 89 1 356 1 292 2 115 1 69 2 31 2 234 4 46 1 204 1 32 1 323 2 347 2 159 1 338 1 175 1 248 1 340 1 317 1 9 1 21 2 
51 1 365 2 89 1 356 1 292 2 115 1 69 2 31 2 234 4 204 1 32 1 323 2 347 2 159 1 338 1 175 1 248 1 340 1 317 1 9 1 21 2 
51 1 52 1 178 1 259 1 22 1 149 1 356 1 154 1 334 1 204 1 32 1 205 1 164 1 338 1 320 1 300 1 169 1 322 1 89 1 303 1 69 1 234 2 323 1 346 1 324 1 120 1 348 1 21 2 
51 1 122 1 52 1 178 1 149 1 356 1 154 1 204 1 32 1 205 1 164 1 338 1 320 1 300 1 169 1 322 1 89 1 303 1 69 1 234 2 194 1 373 1 323 1 346 1 324 1 120 1 348 1 21 2 
51 1 365 2 89 1 356 1 292 2 115 1 44 1 69 2 31 2 234 4 204 1 32 1 323 2 347 2 159 1 338 1 175 1 248 1 340 1 317 1 9 1 21 2 
51 1 52 1 259 1 22 1 258 1 149 1 356 1 292 2 154 1 31 2 334 1 204 1 32 1 159 1 205 1 164 1 338 1 248 1 340 1 317 1 9 1 300 1 322 1 365 2 210 1 89 1 303 1 115 1 69 2 234 4 323 2 346 1 347 2 324 1 348 1 175 1 21 2 
51 1 149 1 356 1 292 1 31 1 204 1 265 1 32 1 159 1 338 1 163 1 164 1 340 1 317 1 9 1 230 1 365 1 89 1 115 1 44 1 305 1 69 1 234 3 119 1 323 2 347 1 175 1 95 1 21 2 
198 2 216 1 51 2 241 1 157 1 204 2 184 2 32 2 159 3 339 2 248 3 317 3 340 3 362 1 9 3 86 1 64 1 89 2 251 1 250 1 115 3 307 1 69 10 234 19 281 1 374 1 323 9 347 6 175 3 21 4 
51 1 216 2 198 2 64 1 152 1 89 1 250 2 69 5 234 11 157 1 281 2 204 1 184 2 32 1 19 1 323 6 374 2 175 1 317 1 9 1 270 1 362 1 21 2 
198 3 216 2 51 2 152 1 157 1 204 2 184 4 32 2 159 2 224 1 339 1 248 1 317 3 340 2 270 1 362 1 9 3 86 1 64 1 89 2 251 1 250 3 115 2 307 1 69 12 234 24 281 3 19 1 374 1 323 12 347 3 175 3 21 4 
198 3 216 2 51 2 152 1 157 1 204 2 184 4 32 2 159 2 224 1 339 1 248 2 317 3 340 2 270 1 362 1 9 3 86 1 64 1 89 2 251 1 250 3 115 2 307 1 69 12 234 24 281 3 19 1 374 1 323 12 347 4 175 3 21 4 
198 4 216 1 51 2 152 1 262 1 330 1 157 1 246 1 264 2 204 2 184 4 32 2 107 1 159 7 339 1 248 7 317 8 340 8 319 1 270 1 362 1 9 7 36 1 111 1 229 1 64 1 249 1 88 1 89 2 251 1 250 2 115 7 307 2 69 25 234 52 281 4 19 1 374 1 323 27 347 14 175 7 21 4 
332 1 209 1 360 1 247 1 121 1 325 1 161 1 114 1 226 1 378 1 
182 1 43 1 
332 1 257 1 183 1 247 1 160 1 121 1 325 1 161 1 226 1 
131 1 100 1 
299 1 245 1 211 1 
209 1 112 1 125 1 101 1 153 1 128 2 6 1 332 1 236 1 360 1 247 1 71 1 325 1 121 1 161 1 226 1 378 1 62 1 
209 1 112 1 125 1 101 1 153 1 128 2 6 1 332 1 236 1 360 1 247 1 71 1 325 1 121 1 161 1 226 1 378 1 62 1 
209 1 112 1 125 1 101 1 153 1 128 2 6 1 332 1 236 1 360 1 247 1 71 1 325 1 121 1 161 1 226 1 378 1 62 1 
131 1 211 1 100 1 
131 1 211 1 100 1 
299 1 245 1 
299 1 245 1 211 1 
253 1 77 1 
73 1 149 2 77 1 153 1 128 1 6 1 332 1 244 1 182 1 265 2 247 1 81 1 161 1 164 2 163 2 226 1 62 1 169 1 43 1 253 1 17 1 236 1 93 1 119 2 121 1 325 1 237 1 
51 1 52 1 1 1 178 1 149 2 356 1 154 2 56 1 204 1 32 1 205 1 338 1 164 2 187 1 166 1 300 2 190 1 89 1 44 1 343 1 69 1 234 2 346 1 119 2 323 1 324 1 120 1 376 2 348 2 215 1 21 2 
288 1 300 2 321 1 210 1 3 2 263 1 154 2 45 1 243 1 359 1 267 1 91 1 59 1 324 1 205 1 147 1 348 2 72 1 350 1 
288 1 300 1 321 1 261 1 3 2 263 1 154 1 45 1 243 1 359 1 267 1 59 1 324 1 205 1 147 1 348 1 350 1 
320 1 300 1 52 1 274 1 127 1 154 1 243 1 279 1 103 1 91 1 346 1 324 1 205 1 348 1 
288 1 300 1 321 1 3 2 263 1 154 1 45 1 243 1 359 1 267 1 91 1 59 1 324 1 205 1 147 1 348 1 72 1 350 1 
50 1 
342 1 2 1 76 1 71 1 366 1 197 1 28 1 
239 1 99 1 76 1 153 1 331 1 62 1 13 1 366 1 277 1 65 1 370 1 117 1 254 1 71 2 197 1 214 1 213 1 
239 3 52 10 53 2 2 1 99 4 153 5 331 4 154 3 5 2 333 1 104 1 106 2 205 3 165 1 340 2 9 2 167 2 62 5 300 3 341 1 13 6 208 1 302 2 210 1 303 3 115 2 117 4 212 2 254 5 71 8 346 3 348 3 175 2 213 4 311 2 177 6 255 1 76 9 28 1 133 3 82 2 185 2 136 6 317 2 320 1 366 2 140 1 370 12 47 2 372 2 146 2 324 4 197 8 286 2 
177 5 99 1 76 6 152 1 330 1 331 1 184 1 136 5 317 2 340 2 270 1 9 2 13 2 249 1 250 1 115 2 370 4 117 1 281 1 71 2 19 1 197 4 175 2 213 1 
149 1 99 1 76 2 153 1 262 1 331 1 242 1 265 1 135 1 164 1 163 1 317 2 340 1 319 1 167 2 62 1 227 1 36 1 276 1 142 1 252 1 117 1 47 1 20 1 119 1 197 2 213 1 95 1 
2 1 99 1 366 1 76 1 331 1 28 1 117 1 71 1 197 1 213 1 
177 5 13 5 76 5 115 2 370 10 47 1 82 1 71 5 136 5 175 2 197 5 317 2 340 2 9 2 167 2 
239 1 254 1 71 1 366 1 153 1 62 1 
239 2 52 1 74 1 99 2 76 2 153 3 78 1 331 1 154 4 333 1 103 1 205 1 138 1 165 2 62 3 320 2 300 4 208 2 274 1 168 1 117 2 254 4 346 1 118 1 324 1 348 4 197 2 213 2 286 2 
51 1 52 1 22 1 259 1 149 3 356 1 154 1 334 1 204 1 265 2 32 1 205 1 164 3 163 2 338 1 109 1 227 1 320 1 300 1 169 1 322 1 89 1 303 1 69 1 234 1 119 2 346 1 120 1 324 1 348 1 95 2 21 2 
177 2 13 2 111 1 99 1 76 1 366 2 331 1 370 4 117 1 71 4 136 2 197 2 213 1 165 1 286 1 
121 1 79 1 161 1 
121 1 79 1 161 1 
113 1 77 1 121 1 161 1 378 1 
121 1 79 1 161 1 
121 1 161 1 4 1 
121 1 161 1 4 1 
121 1 161 1 4 1 
121 1 161 1 
332 1 226 1 
36 1 51 2 111 1 229 1 89 2 262 1 69 4 234 8 204 2 246 1 32 2 107 1 323 4 159 1 347 3 340 1 317 1 248 2 319 1 21 4 
36 1 111 1 229 1 342 1 262 1 69 3 234 6 107 1 323 3 347 2 248 2 317 1 340 1 319 1 
51 1 89 1 115 1 69 2 234 4 371 1 204 1 32 1 323 2 347 2 159 1 175 1 248 1 340 1 317 1 9 1 21 2 
250 1 115 1 307 1 69 4 234 7 281 1 184 2 323 3 159 1 347 2 175 1 248 1 340 1 317 1 9 1 
51 2 262 2 264 1 246 2 204 2 184 2 32 2 107 1 159 4 317 3 340 3 248 5 85 1 319 2 9 2 36 1 363 1 111 1 229 1 89 2 115 2 307 1 69 12 234 23 281 2 323 11 347 9 175 2 21 4 
69 1 234 1 184 1 
234 1 281 1 323 1 
51 1 89 1 115 1 69 3 234 6 204 1 371 1 32 1 82 1 323 3 159 1 347 3 175 1 317 1 340 1 248 2 9 1 21 2 
51 1 152 1 330 1 157 1 204 1 184 1 32 1 159 1 317 2 340 2 248 1 270 1 9 2 249 1 89 1 250 1 115 2 69 6 234 12 281 1 19 1 323 6 347 2 175 2 21 2 
36 1 262 1 69 3 234 6 323 3 347 2 159 1 317 1 340 1 248 1 319 1 
51 1 229 1 89 1 262 1 69 2 234 3 246 1 204 1 32 1 107 1 323 1 159 1 347 2 248 1 85 1 319 1 21 2 
51 1 36 1 89 1 262 2 252 1 69 5 157 1 234 10 204 1 32 1 323 5 347 5 159 2 248 3 317 2 340 2 319 2 21 2 
51 1 89 1 157 1 234 2 204 1 32 1 323 2 159 1 347 1 317 1 9 1 21 2 
51 1 89 1 115 1 69 2 157 1 234 4 204 1 32 1 323 2 347 2 159 1 175 1 248 1 340 1 317 1 9 1 21 2 
86 1 51 3 89 3 262 1 69 2 234 3 157 1 246 1 204 3 32 3 323 1 347 2 159 1 85 1 248 1 319 1 21 6 
51 5 262 3 157 1 246 2 204 5 184 4 32 5 107 1 33 1 159 5 85 1 317 5 340 5 248 7 319 3 9 3 36 2 86 1 111 1 229 1 40 1 170 1 89 5 250 1 115 3 307 1 69 18 234 34 371 1 281 3 323 16 347 12 175 3 21 10 
51 1 152 1 262 1 157 1 204 1 184 1 32 1 107 1 340 1 317 1 248 2 319 1 36 1 111 1 229 1 89 1 250 1 69 4 234 8 281 1 323 4 347 2 21 2 
51 2 152 1 262 1 157 1 204 2 184 2 32 2 107 1 159 1 340 1 248 2 317 2 319 1 9 1 36 1 111 1 229 1 89 2 250 1 307 1 69 5 234 11 371 1 281 1 323 6 347 3 175 1 21 4 
51 1 152 1 89 1 250 1 69 2 157 1 234 5 204 1 281 1 32 1 184 1 19 1 323 3 175 1 317 1 9 1 270 1 21 2 
51 3 152 1 262 1 330 1 157 1 246 1 204 3 184 1 32 3 107 1 159 2 317 3 340 2 248 3 319 1 270 1 9 2 36 1 111 1 229 1 249 1 89 3 250 1 115 1 69 7 234 17 371 1 281 1 19 1 323 10 347 5 175 2 21 6 
51 1 152 1 262 1 157 1 204 1 184 1 32 1 107 1 340 1 317 1 248 2 319 1 36 1 111 1 229 1 89 1 250 1 69 4 234 8 281 1 323 4 347 2 21 2 
51 1 152 1 330 1 157 1 204 1 184 1 32 1 159 1 317 2 340 2 248 1 270 1 9 2 249 1 89 1 250 1 115 2 69 6 234 12 281 1 19 1 323 6 347 2 175 2 21 2 
51 2 152 1 89 2 250 1 69 2 157 1 234 5 281 1 204 2 371 1 32 2 184 1 19 1 323 3 175 1 317 1 9 1 270 1 21 4 
51 4 152 1 330 1 157 1 204 4 246 2 184 1 32 4 159 3 317 3 340 2 248 3 270 1 9 3 86 1 249 1 89 4 250 1 115 2 69 7 234 16 281 1 19 1 323 9 347 6 175 3 21 8 
36 1 229 2 262 3 69 4 234 7 107 1 323 3 347 6 159 3 340 1 248 3 317 1 319 3 
86 1 51 2 152 1 89 2 250 1 69 2 157 1 234 5 281 1 204 2 32 2 184 1 19 1 323 3 175 1 317 1 9 1 270 1 21 4 
199 1 169 1 149 1 119 1 164 1 379 1 139 1 
199 1 169 1 149 1 221 1 143 1 8 1 119 1 164 1 361 1 285 1 379 1 139 1 
320 1 103 1 300 1 52 1 274 1 342 1 346 1 324 1 205 1 348 1 154 1 
320 1 300 1 52 1 259 1 169 1 149 2 322 1 303 1 154 1 265 1 346 1 375 1 119 1 324 1 205 1 163 1 164 2 348 1 
52 3 53 1 259 1 149 2 154 1 5 1 295 1 265 1 205 1 164 2 163 2 300 1 208 1 169 1 322 1 303 2 304 1 119 2 375 1 346 2 20 1 324 1 348 1 
52 3 53 1 149 2 313 1 154 2 5 1 295 1 265 1 205 1 164 2 163 2 300 2 208 1 169 1 322 1 303 2 304 1 194 1 119 2 375 1 346 2 20 1 324 1 348 2 
52 4 53 1 313 1 260 1 153 2 154 3 5 1 133 1 205 1 185 1 62 2 320 1 300 3 208 1 366 1 303 1 212 1 254 1 196 1 71 1 346 1 324 1 348 3 
320 1 300 3 208 1 52 4 53 1 313 1 366 1 153 2 303 1 154 3 5 1 212 1 372 1 133 1 254 1 71 1 346 1 324 1 185 1 205 1 348 3 62 2 
300 1 324 1 205 1 348 1 154 1 110 1 
320 2 300 6 52 3 218 1 321 1 54 1 210 1 303 1 154 7 80 1 27 1 343 1 104 1 346 2 376 1 34 1 324 3 205 2 348 7 298 1 110 1 
51 2 52 1 149 2 292 1 154 1 334 1 56 1 204 2 107 1 205 1 163 1 164 2 338 2 248 2 340 1 300 1 111 1 169 2 210 1 303 1 69 3 119 1 346 1 347 2 348 1 21 4 259 1 22 1 258 1 356 2 262 1 29 1 31 1 265 1 32 2 317 1 319 1 36 1 229 1 322 1 365 1 89 2 44 1 234 6 375 1 323 3 324 1 
239 1 52 2 2 1 99 2 76 1 153 3 331 2 154 1 28 1 333 1 244 1 133 1 185 1 62 3 320 1 300 1 302 1 366 1 117 2 212 1 372 1 254 2 71 1 146 1 197 1 348 1 213 2 311 1 
300 2 341 1 52 2 210 1 303 1 154 2 104 1 346 1 324 2 185 1 205 1 348 2 110 1 
320 1 300 4 52 1 63 1 274 1 313 1 210 1 154 4 103 1 346 1 324 1 205 1 348 4 
300 2 208 1 52 1 364 1 218 1 355 1 303 1 154 2 346 1 324 2 205 1 348 2 186 1 298 1 
320 1 300 1 359 1 267 1 59 1 3 1 324 1 205 1 348 1 154 1 
300 2 52 1 321 1 210 1 154 2 343 1 346 1 324 1 205 1 348 2 187 1 
320 1 300 4 208 1 52 3 63 1 274 1 210 1 154 5 80 1 343 1 103 1 346 2 324 2 34 1 205 2 348 5 
320 1 300 4 208 1 52 3 63 1 274 1 210 1 154 5 232 1 343 1 103 1 346 2 324 2 34 1 205 2 348 5 
320 1 300 1 52 1 169 1 149 2 322 1 303 1 154 1 194 1 265 1 346 1 375 1 119 1 324 1 205 1 163 1 164 2 348 1 
300 1 208 1 52 1 218 1 54 1 303 1 154 1 104 1 346 1 324 2 205 1 348 1 298 1 
169 1 179 1 35 1 326 1 306 1 
149 1 179 1 153 1 242 1 244 1 295 1 265 1 135 1 35 1 164 1 163 1 162 1 62 1 227 1 191 1 366 1 304 1 142 1 306 1 308 1 90 1 48 1 71 1 119 1 20 2 326 1 95 1 
190 1 149 1 179 1 119 1 35 1 164 1 326 1 215 1 166 1 
90 1 191 1 179 1 
293 1 342 1 223 1 68 1 
293 1 116 1 132 1 223 1 25 1 68 1 278 1 
116 1 24 1 92 1 
293 1 116 3 280 1 132 1 223 1 25 3 231 1 309 2 314 1 148 1 68 1 278 1 
293 1 116 2 256 1 132 1 223 1 25 2 369 1 68 1 278 1 
288 1 11 1 351 1 25 1 3 1 278 1 116 1 132 1 267 1 223 1 148 1 
293 1 116 1 132 1 223 1 25 1 148 1 278 1 
293 2 116 1 132 1 25 1 148 1 68 1 278 1 
293 1 116 2 132 2 223 1 25 2 26 1 137 1 155 1 148 1 278 2 
351 1 256 2 25 3 368 1 181 1 68 1 278 1 293 1 116 3 156 1 132 1 223 2 148 1 
288 1 256 1 25 2 3 2 16 1 68 1 278 1 293 1 116 2 132 1 267 1 223 1 59 1 147 1 148 1 
351 1 256 2 25 4 367 1 368 1 369 1 68 1 278 2 293 1 116 4 132 2 223 2 148 1 
293 1 116 1 132 1 223 1 25 1 148 1 68 1 278 1 
351 1 256 2 180 1 25 4 231 1 368 1 314 1 68 2 278 1 293 2 116 4 132 1 223 3 309 1 
293 1 271 1 116 2 256 1 105 1 132 1 150 1 223 1 25 2 148 1 68 1 278 1 
25 3 231 2 314 1 278 1 68 1 293 1 116 3 132 1 223 1 148 1 309 2 10 1 
0 2 203 1 223 2 61 1 
116 1 37 1 132 1 25 1 148 1 278 1 
293 1 116 2 256 1 132 1 223 1 25 2 148 1 181 1 68 1 278 1 
57 1 
293 1 116 1 132 1 223 1 25 1 148 1 68 1 278 1 
293 1 116 3 256 1 132 1 223 1 25 3 309 1 148 1 181 1 68 1 278 1 
351 1 180 1 223 1 368 1 
293 1 223 1 

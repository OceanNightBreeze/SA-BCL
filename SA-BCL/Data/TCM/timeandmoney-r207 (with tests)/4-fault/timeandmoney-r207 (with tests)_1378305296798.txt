#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 297 166 206 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 2 254 2 43 1 60 1 209 2 94 1 312 1 198 3 287 1 260 1 252 3 367 1 235 1 
43 1 334 1 94 1 118 1 77 1 54 1 286 1 171 2 312 2 198 9 30 2 287 4 272 1 252 9 367 1 235 6 81 2 289 5 254 2 130 1 60 1 209 2 132 1 89 1 255 2 373 1 110 1 260 3 
43 1 334 1 94 1 118 1 77 1 54 1 286 1 171 2 312 2 198 9 30 2 287 4 272 1 252 9 367 1 235 6 81 2 289 5 254 2 130 1 60 1 209 2 132 1 89 1 255 2 373 1 110 1 260 3 
43 1 334 1 94 1 118 1 77 1 54 1 286 1 171 2 312 2 198 10 30 2 287 5 272 1 252 10 367 1 235 7 81 2 289 6 254 2 130 1 60 1 209 2 132 1 89 1 255 2 373 1 110 1 260 4 
43 1 334 1 94 1 118 1 77 1 54 1 286 1 171 2 312 2 198 7 30 2 287 3 272 1 252 7 367 1 235 4 81 2 289 4 254 2 130 1 60 1 209 2 132 1 89 1 255 1 373 1 260 2 
81 1 289 3 254 1 43 1 60 1 209 1 94 1 118 1 255 2 54 1 110 1 171 1 30 1 198 4 287 2 260 1 252 4 235 3 
289 1 81 1 254 1 261 1 43 1 60 1 209 1 94 1 77 1 20 1 249 1 312 1 198 2 30 1 272 1 252 2 
43 1 334 1 94 1 118 1 362 1 54 1 312 1 171 1 287 4 198 9 30 1 252 9 367 1 235 7 289 5 81 1 254 2 130 1 15 1 60 1 209 2 255 2 110 1 260 3 
43 1 334 1 94 1 118 1 362 1 54 1 312 1 171 1 287 4 198 9 30 1 252 9 367 1 235 7 289 5 81 1 254 2 130 1 15 1 60 1 209 2 255 2 110 1 260 3 
26 1 264 1 330 1 3 1 85 1 282 1 17 1 238 1 107 1 256 1 230 1 92 1 188 1 70 1 
332 1 
170 1 151 1 337 1 264 2 332 1 136 1 92 2 238 1 
32 1 281 1 264 5 168 1 332 1 223 1 52 2 73 1 238 2 121 1 170 1 150 2 336 1 151 2 136 1 92 5 200 2 138 1 59 1 
170 1 332 1 69 1 
332 1 360 2 273 1 
107 2 256 2 26 2 265 1 230 2 282 2 85 2 188 1 
26 2 244 1 142 1 265 1 190 2 45 1 282 2 76 1 119 1 196 1 230 3 233 1 288 1 158 1 85 2 237 1 86 1 276 1 295 2 350 1 372 2 182 1 107 2 256 3 320 1 375 1 111 2 279 1 187 1 164 1 165 1 354 1 25 1 188 1 114 1 218 1 93 2 
107 1 256 1 26 1 230 1 282 1 85 1 3 1 17 1 188 1 70 1 
264 1 332 1 282 1 17 1 308 1 170 1 256 1 278 1 353 1 271 1 363 1 230 1 67 1 92 1 
26 1 264 2 332 1 85 1 282 1 17 1 107 1 308 1 170 1 256 1 278 1 363 1 230 1 67 1 92 2 
151 1 189 1 264 1 92 1 238 1 
170 1 116 1 151 1 264 2 332 1 136 1 92 2 238 1 
151 1 264 1 92 1 
288 1 26 1 190 1 159 1 282 1 237 1 86 1 119 1 372 1 107 1 149 1 256 2 55 1 230 2 165 1 354 1 233 1 114 1 218 1 93 1 
26 1 265 2 282 2 85 1 148 1 107 1 256 2 163 1 230 2 
149 1 195 1 342 1 
288 1 156 1 265 1 190 1 237 1 86 1 119 1 372 1 256 1 230 1 165 1 354 1 233 1 114 1 218 1 93 1 
265 1 69 1 
26 4 265 1 159 1 282 5 85 1 49 1 335 1 267 1 148 1 107 4 256 5 55 2 271 1 230 5 
107 2 256 2 26 2 230 2 282 2 303 1 17 1 70 1 
107 3 256 3 26 3 265 1 55 1 85 1 230 3 282 3 
107 1 256 1 26 1 230 1 282 1 17 1 70 1 
107 1 256 1 26 1 163 1 230 1 282 1 85 1 17 1 148 1 
26 3 244 1 142 1 265 1 264 1 190 1 282 3 148 1 119 1 308 1 196 1 55 1 363 1 230 4 233 1 288 1 158 1 159 1 85 2 17 1 237 1 86 1 295 1 350 1 182 1 37 1 372 1 161 1 107 3 256 4 320 1 375 1 278 1 111 2 279 1 165 1 354 1 67 1 25 1 92 1 188 1 114 1 218 1 93 1 
107 1 256 2 26 1 265 1 55 1 271 1 230 2 282 2 267 1 
26 3 264 1 159 1 85 1 332 1 282 3 179 1 17 1 148 1 107 3 161 1 308 1 256 3 278 1 55 2 363 1 230 3 67 1 92 1 
107 2 149 1 256 2 26 2 55 1 230 2 282 2 85 1 148 1 342 1 
288 1 265 1 190 1 237 1 86 1 119 1 372 1 256 1 230 1 165 1 354 1 233 1 218 1 114 1 93 1 
288 1 265 1 190 1 237 1 318 1 372 1 256 1 230 1 165 1 354 1 233 1 218 1 114 1 93 1 202 1 
1 1 244 1 142 1 333 1 195 2 149 2 196 1 342 2 102 1 83 1 203 1 204 1 316 1 158 1 276 2 106 1 295 4 350 1 322 1 111 2 279 1 298 1 24 1 25 2 
308 1 107 1 256 1 26 1 230 1 282 1 303 1 17 1 
176 1 147 1 62 1 
176 2 368 1 346 1 259 1 62 2 343 1 
176 1 62 1 
176 1 62 1 
259 1 343 1 
259 1 343 1 
259 1 343 1 
176 1 120 1 62 1 
176 1 120 1 62 1 
176 1 120 1 62 1 
176 1 46 1 62 1 
176 1 46 1 62 1 
176 1 46 1 62 1 
219 1 26 2 265 1 263 1 264 1 282 2 147 1 27 1 284 1 248 1 7 1 338 1 230 2 153 1 176 1 178 1 17 1 62 1 19 1 36 1 107 2 108 1 256 2 374 1 324 1 92 1 
176 2 219 1 356 2 104 1 368 1 263 2 264 2 143 1 47 1 332 1 317 1 27 2 62 2 284 2 108 3 68 1 199 1 92 2 153 2 
290 2 249 1 310 1 171 1 30 2 
81 1 171 1 30 1 
81 1 249 1 30 1 
239 1 290 1 249 1 310 1 171 2 30 3 
290 1 249 1 310 1 171 1 30 2 152 1 
140 2 281 2 264 5 222 1 333 1 332 2 52 1 360 3 306 1 121 3 150 1 170 1 151 1 200 1 341 1 273 1 102 1 174 1 204 1 32 1 345 2 316 1 238 4 36 1 134 1 162 1 374 1 65 1 136 1 324 1 137 2 92 5 
281 6 189 5 264 9 144 1 358 1 222 2 359 1 333 3 332 5 52 2 75 1 360 9 121 8 170 1 150 2 151 6 101 5 200 2 341 1 59 1 273 3 102 3 174 3 204 3 32 1 345 6 316 3 238 7 319 1 374 4 65 2 136 1 137 6 300 1 92 9 
140 1 264 3 281 2 222 1 332 3 333 1 52 1 306 1 360 4 121 3 170 1 150 1 200 1 273 2 59 1 102 1 174 1 204 1 345 2 316 1 238 2 162 1 374 1 65 1 137 2 92 3 
140 2 264 4 281 4 222 1 332 4 359 1 333 2 52 1 75 1 360 7 306 1 121 5 170 1 150 1 200 1 273 3 59 1 102 2 174 2 204 2 345 4 316 2 238 3 319 1 162 1 374 2 65 1 137 4 92 4 
0 1 
211 1 114 1 69 1 
258 1 114 1 
288 1 114 1 218 1 
72 1 114 1 
114 1 218 1 
288 1 307 1 211 2 352 1 114 3 218 1 
102 1 154 1 203 2 333 1 302 1 246 1 276 4 295 7 184 1 351 1 322 3 240 1 339 1 323 1 25 3 355 1 80 1 253 2 
244 1 142 1 302 1 196 1 339 1 126 1 253 1 80 1 154 2 203 1 88 1 276 3 295 6 184 1 350 1 109 1 351 1 322 2 297 1 111 2 23 1 166 1 40 1 25 3 
244 2 142 2 333 1 227 1 196 2 229 1 339 1 253 2 80 1 102 1 154 1 203 3 276 5 295 9 350 2 184 1 351 1 322 4 240 1 111 4 23 1 323 1 25 4 355 1 
102 1 154 1 203 2 333 1 302 1 276 4 295 7 184 1 351 1 322 3 240 1 339 1 323 1 25 3 355 1 80 1 253 2 
102 1 154 1 203 2 333 1 302 1 276 4 295 7 184 1 351 1 322 3 240 1 339 1 323 1 25 3 355 1 80 1 253 2 
327 1 254 1 105 1 190 1 209 1 237 1 212 1 372 1 9 1 312 2 172 1 198 1 165 1 354 1 91 2 313 2 114 1 218 1 325 1 252 1 234 1 115 2 93 1 
190 1 48 1 74 1 249 1 171 1 312 1 198 1 30 2 13 1 313 1 252 1 81 1 254 1 344 1 60 1 209 1 293 1 237 1 239 1 372 1 354 1 91 1 216 1 115 1 93 1 326 1 
43 1 190 1 48 1 169 1 94 1 74 1 249 1 171 1 312 1 198 2 30 2 13 1 313 1 252 2 235 1 289 1 81 1 254 1 344 1 60 1 209 1 237 1 239 1 372 1 354 1 91 1 216 1 115 1 93 1 326 1 
43 1 190 1 48 1 94 1 74 1 249 1 171 1 312 1 198 3 30 2 13 1 313 1 252 3 235 2 289 1 81 1 254 1 105 1 209 1 16 1 293 1 237 1 239 1 372 1 354 1 91 1 216 1 115 1 93 1 326 1 
43 1 190 1 94 1 74 1 249 1 312 1 171 1 198 2 30 2 13 1 313 1 252 2 235 2 289 1 81 1 16 1 293 1 237 1 239 1 372 1 354 1 91 1 115 1 93 1 326 1 
377 1 
327 1 328 2 281 2 190 2 332 2 145 2 282 1 51 1 52 1 5 1 150 1 6 1 151 6 99 1 56 1 200 1 58 1 17 1 256 1 353 1 165 2 354 1 67 1 215 2 218 1 114 1 71 1 357 2 264 5 222 1 360 2 121 2 308 1 170 1 122 1 309 1 124 1 271 1 363 1 172 1 230 1 366 1 273 2 173 4 33 2 32 1 315 2 180 2 237 1 38 1 372 2 278 1 136 3 92 5 93 2 
264 3 328 1 282 1 5 1 308 1 6 1 309 1 151 2 337 1 271 1 363 1 230 1 366 1 58 1 173 2 17 1 256 1 278 1 353 1 136 1 67 1 92 3 
264 3 282 1 332 1 5 1 308 1 170 1 6 1 309 1 151 1 337 1 271 1 363 1 230 1 366 1 58 1 173 3 17 1 256 1 278 1 353 1 136 1 67 1 92 3 215 1 
264 3 328 1 282 1 332 1 5 1 308 1 170 1 6 1 309 1 151 2 337 1 271 1 363 1 230 1 366 1 58 1 173 3 17 1 180 1 256 1 278 1 353 1 136 1 67 1 92 3 215 1 
328 4 281 1 282 1 332 5 145 2 51 1 52 1 5 1 150 1 6 1 151 7 8 1 337 1 200 1 58 1 208 1 17 1 256 1 353 1 67 1 299 1 215 4 357 2 264 5 308 1 121 1 170 5 309 1 124 1 363 1 271 1 230 1 366 1 173 6 273 2 32 1 33 2 315 2 131 1 180 4 186 1 278 1 136 3 92 5 
357 2 328 2 281 1 264 4 332 2 145 2 282 1 51 1 52 1 360 2 5 1 121 1 308 1 170 1 150 1 6 1 309 1 151 4 124 1 271 1 363 1 230 1 366 1 200 1 273 2 58 1 173 4 33 2 32 1 315 2 17 1 180 2 38 1 256 1 278 1 353 1 136 2 67 1 215 2 92 4 
357 2 328 2 281 1 264 4 332 1 145 2 282 1 51 1 52 1 5 1 121 1 308 1 170 1 150 1 6 1 309 1 151 4 124 1 8 1 271 1 363 1 230 1 366 1 200 1 273 2 58 1 173 4 33 2 32 1 315 2 208 1 17 1 180 2 186 1 256 1 278 1 353 1 136 2 67 1 215 2 92 4 
357 2 328 2 281 1 264 4 332 1 145 2 282 1 51 1 52 1 5 1 121 1 308 1 170 1 150 1 6 1 309 1 151 4 124 1 8 1 271 1 363 1 230 1 366 1 200 1 273 2 58 1 173 4 33 2 32 1 315 2 208 1 17 1 180 2 186 1 256 1 278 1 353 1 136 2 67 1 215 2 92 4 
328 2 281 1 264 4 332 1 145 2 282 1 51 1 193 1 50 1 52 1 360 2 5 1 121 1 308 1 269 1 170 1 150 1 6 1 309 1 151 4 271 1 363 1 230 1 366 1 200 1 58 1 173 4 33 2 32 1 17 1 180 2 133 2 186 1 256 1 278 1 296 2 353 1 136 2 67 1 215 2 92 4 
357 2 281 1 264 4 328 3 332 1 145 2 282 1 51 1 52 1 5 1 121 1 308 1 170 1 150 1 6 1 309 1 124 1 151 5 8 1 271 1 363 1 230 1 366 1 200 1 273 2 58 1 173 5 33 2 32 1 315 2 208 1 17 1 180 3 186 1 256 1 278 1 353 1 136 2 67 1 299 1 92 4 215 3 
357 2 281 1 264 4 328 3 332 1 145 2 282 1 51 1 52 1 5 1 121 1 308 1 170 1 150 1 6 1 309 1 124 1 151 5 8 1 271 1 363 1 230 1 366 1 200 1 273 2 58 1 173 5 33 2 32 1 315 2 208 1 17 1 180 3 186 1 256 1 278 1 353 1 136 2 67 1 299 1 92 4 215 3 
328 2 281 1 264 4 332 1 145 2 282 1 51 1 193 1 52 1 360 2 5 1 121 1 308 1 170 1 150 1 6 1 309 1 151 4 271 1 363 1 230 1 366 1 200 1 58 1 173 4 33 2 32 1 17 1 180 2 133 2 38 1 256 1 278 1 296 2 353 1 136 2 67 1 215 2 92 4 
220 1 327 1 26 1 244 2 142 2 190 7 169 1 282 1 76 2 196 2 55 1 172 1 230 1 340 1 83 1 158 2 177 1 61 1 293 1 371 1 237 2 210 1 276 1 295 2 372 8 350 2 107 1 256 1 277 1 375 1 111 4 279 2 164 1 165 2 354 2 25 1 114 3 218 2 93 8 
26 1 244 1 142 1 282 1 333 1 195 1 148 1 149 1 196 1 230 1 342 1 174 1 102 1 203 1 204 1 158 1 207 1 316 1 85 1 276 1 348 1 295 3 350 1 107 1 256 1 322 1 111 2 279 1 25 2 
244 1 142 1 265 2 333 1 195 1 149 1 196 1 342 1 80 1 253 1 102 1 83 1 203 2 158 1 276 3 295 6 350 1 351 1 240 1 322 2 111 2 279 1 323 1 25 3 69 1 355 1 
244 2 142 2 265 1 333 2 195 6 28 1 149 6 196 2 231 1 232 1 342 2 174 2 102 1 203 1 204 2 158 2 207 1 316 1 292 1 17 1 19 1 88 2 276 7 295 12 350 2 375 1 322 1 111 4 279 1 297 2 164 1 25 5 217 1 
26 1 42 1 244 1 142 1 265 1 190 1 282 1 119 1 196 1 55 1 230 2 12 1 233 1 342 1 288 1 156 1 158 1 207 1 159 1 18 1 237 1 86 1 276 1 295 2 372 1 350 1 107 1 256 2 375 1 279 1 111 2 164 1 165 1 354 1 25 1 114 1 218 1 93 1 
243 1 244 3 142 3 190 3 282 1 333 3 95 2 195 7 149 7 196 3 55 1 10 1 339 4 253 1 342 7 102 3 288 2 203 4 204 2 207 1 158 3 159 1 293 1 295 20 350 3 107 1 256 3 351 1 111 6 164 1 165 1 112 2 354 2 25 10 355 1 218 2 114 2 26 1 262 2 265 2 119 2 230 3 127 2 233 2 80 1 174 2 82 1 316 2 237 2 86 2 276 10 372 3 182 2 240 1 375 1 322 8 279 3 323 1 93 3 
83 1 204 1 244 1 142 1 158 1 333 1 195 1 276 2 295 2 350 1 149 1 322 1 196 1 279 1 111 2 339 1 24 1 342 1 
102 1 203 1 83 1 1 1 244 1 142 1 158 1 316 1 195 1 295 2 350 1 149 1 322 1 196 1 279 1 111 2 25 2 342 1 
102 1 174 1 203 1 83 1 204 1 244 1 142 1 316 1 158 1 333 1 195 2 276 2 295 4 350 1 149 2 322 2 196 1 279 1 111 2 339 1 25 2 342 2 
204 1 244 1 142 1 158 1 333 1 195 1 276 2 295 2 350 1 149 1 322 1 196 1 279 1 111 2 339 1 340 1 24 1 342 1 
102 1 203 1 1 1 244 1 142 1 158 1 316 1 195 1 295 2 350 1 149 1 322 1 196 1 279 1 111 2 340 1 25 2 342 1 
102 1 174 1 203 1 204 1 244 1 142 1 316 1 158 1 333 1 195 2 276 2 295 4 350 1 149 2 322 2 196 1 279 1 111 2 339 1 340 1 25 2 342 2 
102 1 174 1 203 1 204 1 244 1 142 1 316 1 158 1 333 1 195 2 276 2 295 4 350 1 149 2 322 2 196 1 279 1 111 2 339 1 25 2 342 2 
244 1 142 1 265 1 190 1 119 1 196 1 230 1 233 1 288 1 158 1 237 1 86 1 276 1 295 2 182 1 372 1 350 1 256 1 375 1 279 1 111 2 164 1 165 1 354 1 25 1 218 1 114 1 93 1 
244 1 142 1 265 1 190 1 196 1 230 1 233 1 202 1 288 1 158 1 237 1 276 1 318 1 295 2 183 1 372 1 350 1 256 1 375 1 279 1 111 2 164 1 165 1 354 1 25 1 218 1 114 1 93 1 
102 1 174 1 203 1 204 1 244 1 142 1 316 1 207 1 158 1 333 1 195 2 276 2 295 4 350 1 149 2 322 2 196 1 279 1 111 2 339 1 25 2 342 2 
262 1 244 1 142 1 190 1 333 1 169 1 195 2 119 1 149 2 196 1 339 1 230 1 233 1 342 2 102 1 288 1 174 1 203 1 204 1 316 1 158 1 237 1 86 1 276 2 295 4 182 1 372 1 350 1 256 1 322 2 279 1 111 2 354 1 25 2 218 1 114 1 93 1 
26 1 244 1 142 1 331 1 282 1 333 1 195 1 148 1 149 1 196 1 339 1 230 1 342 1 102 1 174 1 204 1 316 1 158 1 207 1 85 1 276 2 295 3 350 1 107 1 256 1 322 1 111 2 279 1 25 1 
244 2 142 2 44 1 224 1 333 3 28 1 29 1 227 1 228 1 196 2 339 2 174 3 102 3 203 3 204 3 157 1 206 1 316 3 87 4 88 3 276 12 295 25 349 2 160 1 350 2 322 5 22 1 111 4 297 2 166 2 113 1 25 13 
244 3 142 3 44 1 224 2 333 3 227 1 196 3 339 2 102 2 174 3 203 2 204 3 157 1 206 1 316 2 84 1 369 1 87 4 276 14 88 2 64 1 295 26 349 1 160 2 350 3 213 1 322 4 22 1 111 6 297 2 23 2 166 2 113 1 25 12 
244 3 142 3 44 1 224 1 333 5 28 1 227 1 228 1 196 3 339 3 253 1 80 1 174 4 102 5 203 4 204 4 157 1 206 1 316 4 84 1 291 1 369 1 87 4 64 1 88 4 276 20 295 41 349 1 160 2 350 3 351 1 240 1 213 1 322 7 22 1 111 6 297 3 323 1 23 1 166 3 113 1 25 21 355 1 
244 4 142 4 44 1 224 1 333 5 28 1 227 1 228 1 196 4 339 2 253 1 80 1 174 4 102 4 203 4 204 4 157 1 206 1 316 3 84 1 291 1 369 1 87 4 64 1 88 4 276 20 295 38 349 1 160 2 350 4 351 1 240 1 213 1 322 6 22 1 111 8 297 3 323 1 23 2 166 3 113 1 25 18 355 1 
244 2 142 2 44 1 224 1 333 8 28 1 227 1 196 2 339 5 253 3 80 3 174 5 102 8 203 7 204 5 157 1 206 1 316 5 84 1 369 1 87 4 64 1 88 3 276 28 295 52 349 1 160 1 350 2 351 3 240 3 213 1 322 12 22 1 111 4 297 3 323 3 23 1 166 2 113 1 25 24 355 3 217 1 
176 1 368 1 125 1 263 1 47 1 317 1 62 1 27 1 284 1 153 1 
178 1 147 1 
176 1 97 1 263 1 62 1 27 1 284 1 361 1 153 1 314 1 
120 1 181 1 
346 1 46 1 347 1 
219 1 176 1 356 1 368 1 264 1 263 1 143 1 47 1 332 1 317 1 27 1 62 1 284 1 108 2 68 1 199 1 92 1 153 1 
219 1 176 1 356 1 368 1 264 1 263 1 143 1 47 1 332 1 317 1 27 1 62 1 284 1 108 2 68 1 199 1 92 1 153 1 
219 1 176 1 356 1 368 1 264 1 263 1 143 1 47 1 332 1 317 1 27 1 62 1 284 1 108 2 68 1 199 1 92 1 153 1 
120 1 346 1 181 1 
120 1 346 1 181 1 
46 1 347 1 
346 1 46 1 347 1 
7 1 338 1 
356 1 26 2 265 1 143 1 264 1 263 1 282 2 147 1 27 1 284 1 248 1 7 1 338 1 230 2 11 1 153 1 176 1 178 1 17 1 62 1 19 1 238 1 36 1 107 2 256 2 108 1 374 1 324 1 92 1 
220 1 244 1 142 1 190 2 282 2 194 1 76 2 196 1 311 1 230 2 129 1 34 1 158 1 207 1 61 1 237 1 276 1 295 2 372 2 350 1 256 2 321 1 375 1 279 1 111 2 164 1 354 1 25 1 114 1 218 1 93 2 
327 1 190 1 237 1 305 1 372 1 90 1 172 1 165 1 354 1 114 1 218 1 325 1 93 1 115 1 
81 1 190 1 48 1 293 1 294 1 237 1 305 1 239 1 372 1 249 1 21 1 171 1 30 2 354 1 13 1 93 1 115 1 326 1 
81 1 190 2 48 1 169 1 293 1 294 1 237 1 305 1 239 1 372 2 249 1 21 1 171 1 30 2 354 1 13 1 93 2 115 1 326 1 
81 1 14 1 190 1 48 1 293 1 294 1 237 1 239 1 372 1 249 1 171 1 30 2 354 1 13 1 93 1 115 1 326 1 
135 1 
32 1 281 1 168 1 332 1 52 1 121 1 150 1 170 1 336 1 200 1 
174 2 102 2 236 1 204 2 345 5 281 5 316 2 333 2 332 5 360 10 121 5 123 2 127 1 137 5 273 5 
170 1 151 1 264 1 332 1 136 1 92 1 
71 2 327 1 191 1 190 4 281 2 264 3 301 1 222 2 146 2 52 2 285 1 121 2 122 1 150 2 151 4 197 1 172 1 56 1 200 2 59 1 31 1 288 1 32 1 237 3 35 1 372 4 39 1 165 2 136 2 354 2 92 3 114 2 218 2 93 4 
121 1 170 1 336 1 281 1 168 1 332 1 69 1 
357 1 281 1 264 1 332 2 52 1 360 1 121 1 150 1 170 1 124 1 151 1 200 1 273 1 32 1 315 1 136 1 92 1 
280 1 190 3 281 8 332 8 333 2 146 1 52 4 4 1 247 2 150 4 336 1 151 5 250 1 200 4 201 2 288 3 102 2 204 2 345 6 211 2 352 1 258 3 165 1 354 3 214 2 114 10 218 3 71 1 264 5 168 1 222 2 169 1 72 2 304 2 360 12 226 2 121 9 170 2 123 2 363 2 127 2 79 2 273 6 174 2 32 4 236 2 316 2 237 4 372 3 39 1 136 3 137 6 92 5 93 3 
32 1 206 1 345 1 281 1 332 1 52 1 360 2 88 1 121 1 150 1 297 1 166 1 137 1 200 1 273 1 
26 1 264 1 281 2 330 1 333 2 3 1 282 1 52 1 121 2 150 1 123 2 230 1 200 1 80 1 102 1 236 1 32 1 208 1 85 1 17 1 107 1 256 1 351 1 66 1 92 1 188 1 355 1 70 1 
26 2 244 1 142 1 265 1 190 1 282 2 119 1 196 1 230 3 233 1 288 1 158 1 85 2 237 1 86 1 295 1 372 1 182 1 350 1 107 2 256 3 320 1 375 1 111 2 279 1 165 1 354 1 25 1 188 1 218 1 114 1 93 1 
71 1 32 1 345 2 281 2 222 1 332 4 52 1 360 4 121 1 150 1 170 2 137 2 200 1 253 1 273 2 
7 1 263 1 284 1 
263 1 364 1 284 1 
263 1 364 1 284 1 
263 1 364 1 284 1 
185 1 263 1 284 1 
185 1 263 1 284 1 
185 1 263 1 284 1 
263 1 284 1 
176 1 62 1 
102 2 203 3 244 1 142 1 333 2 276 5 295 10 350 1 227 1 351 2 196 1 322 5 111 2 339 2 66 1 25 5 355 1 80 2 
204 1 244 1 142 1 333 1 276 2 295 2 350 1 227 1 196 1 322 1 111 2 339 1 
102 1 174 1 203 1 204 1 244 1 142 1 316 1 333 1 276 2 295 4 350 1 227 1 322 2 196 1 111 2 339 1 25 2 
203 1 244 3 142 3 276 1 295 3 350 3 227 1 109 1 351 1 228 1 196 3 322 2 111 6 23 1 339 1 25 2 80 1 
141 1 244 4 142 4 333 2 227 1 228 1 196 4 339 3 80 2 102 2 203 3 88 1 276 7 295 15 350 4 109 1 351 2 322 6 240 1 111 8 297 1 23 1 323 1 66 1 166 1 40 1 25 8 355 1 
244 2 142 2 333 5 227 1 196 2 339 4 253 1 80 2 174 2 102 4 203 5 204 2 206 1 316 1 84 1 369 1 88 1 276 14 64 1 295 24 350 2 351 2 240 1 322 9 213 1 297 1 111 4 323 1 23 1 66 1 166 1 25 10 355 2 
141 1 244 3 142 3 333 3 227 1 196 3 339 1 253 1 80 1 174 2 102 2 203 3 204 2 206 1 316 1 84 1 369 1 88 1 276 10 64 1 295 17 350 3 351 1 240 1 213 1 322 4 111 6 297 1 323 1 23 1 166 1 25 7 355 1 
141 1 244 3 142 3 333 3 227 1 196 3 339 1 253 1 80 1 174 2 102 3 203 3 204 2 206 1 316 2 84 1 369 1 88 1 276 9 64 1 295 19 350 3 351 1 240 1 213 1 322 4 297 1 111 6 323 1 23 1 166 1 25 10 355 1 
141 1 244 3 142 3 333 3 227 1 196 3 339 2 253 1 80 1 174 2 102 2 203 3 204 2 206 1 316 1 84 1 369 1 88 1 276 10 64 1 295 17 350 3 351 1 240 1 322 5 213 1 297 1 111 6 323 1 23 1 166 1 25 7 355 1 
244 2 142 2 333 5 227 1 196 2 339 4 253 1 80 2 174 2 102 4 203 5 204 2 206 1 316 1 84 1 369 1 88 1 276 14 64 1 295 24 350 2 351 2 240 1 322 9 213 1 297 1 111 4 323 1 23 1 66 1 166 1 25 10 355 2 
244 1 142 1 333 2 227 1 196 1 339 1 174 2 102 2 203 1 204 2 206 1 316 2 84 1 369 1 88 1 276 6 64 1 295 12 350 1 322 2 213 1 297 1 111 2 166 1 25 6 
141 1 244 4 142 4 333 3 227 1 196 4 339 2 253 1 80 1 174 2 102 2 203 3 204 2 206 1 316 1 84 1 369 1 88 1 276 10 64 1 295 18 350 4 351 1 240 1 213 1 322 5 111 8 297 1 323 1 23 2 166 1 25 8 355 1 
244 4 142 4 333 3 227 1 196 4 228 1 339 3 174 3 102 2 203 3 204 3 206 1 316 2 84 1 369 1 88 1 276 9 64 1 295 16 350 4 213 1 322 6 111 8 297 1 23 2 166 1 25 7 
102 1 203 3 333 1 276 3 295 7 351 3 240 1 322 6 323 2 339 3 25 4 355 1 80 3 
244 4 142 4 333 3 227 1 196 4 228 1 339 1 253 1 80 1 174 2 102 2 203 3 204 2 206 1 316 1 84 1 369 1 88 1 276 10 64 1 295 18 350 4 351 1 240 1 213 1 322 4 111 8 297 1 323 1 23 2 166 1 25 8 355 1 
102 1 203 2 244 2 142 2 333 1 276 4 295 8 350 2 351 1 322 3 196 2 240 1 111 4 339 1 23 1 323 1 25 4 355 1 253 1 80 1 
102 1 203 2 333 1 276 3 295 6 351 1 240 1 322 2 323 1 25 3 69 1 355 1 253 1 80 1 
102 1 174 1 203 1 141 1 204 1 244 1 142 1 316 1 333 1 276 2 295 4 350 1 322 2 196 1 111 2 339 1 25 2 
295 2 297 1 166 1 25 1 276 1 88 1 
244 1 142 1 333 5 28 1 196 1 339 2 253 1 80 2 102 5 174 2 203 5 204 2 316 2 292 1 276 13 88 2 295 26 350 1 351 2 240 1 322 7 297 2 111 2 323 1 23 1 66 1 25 13 355 2 217 1 
295 1 25 1 88 1 
295 1 297 1 276 1 
174 1 102 1 203 2 141 1 204 1 244 1 142 1 316 1 333 1 276 3 295 6 350 1 196 1 322 3 111 2 339 1 127 1 25 3 
244 1 142 1 333 2 227 1 196 1 339 1 174 2 102 2 203 1 204 2 206 1 316 2 84 1 369 1 88 1 276 6 64 1 295 12 350 1 322 2 213 1 297 1 111 2 166 1 25 6 
102 1 203 1 333 1 276 3 295 6 351 1 322 2 339 1 25 3 355 1 80 1 
203 1 244 1 142 1 276 1 295 3 350 1 351 1 109 1 322 2 196 1 240 1 111 2 339 1 323 1 23 1 25 2 80 1 
256 1 265 1 271 1 230 1 282 1 167 1 267 1 
274 1 265 1 329 1 117 1 275 1 282 1 267 1 256 1 271 1 230 1 57 1 167 1 
327 1 190 4 169 1 237 1 372 4 268 1 172 1 165 1 354 1 218 1 114 1 139 1 93 4 
288 1 191 1 190 2 301 1 146 1 237 2 285 1 372 2 10 1 354 1 218 1 114 1 93 2 31 1 
81 1 372 1 249 1 190 1 30 1 165 1 354 1 13 1 237 1 93 1 
220 1 372 2 190 2 169 1 354 1 293 1 194 1 237 1 114 1 218 1 93 2 
327 1 220 1 190 4 177 1 169 1 146 1 237 2 372 5 277 1 172 1 165 1 354 2 218 2 114 3 139 1 93 5 
327 1 220 1 190 4 177 1 169 1 146 1 237 2 372 5 172 1 165 1 354 2 251 1 218 2 114 3 139 1 93 5 
327 1 372 1 190 1 172 1 165 1 354 1 237 1 114 1 218 1 69 1 93 1 
288 1 26 1 265 1 190 1 282 1 237 1 86 1 372 1 107 1 256 2 55 1 230 2 165 1 354 1 233 1 114 1 218 1 93 1 
26 1 265 1 190 1 282 2 72 1 146 1 308 1 55 1 230 2 233 1 201 1 288 2 17 1 237 1 86 1 372 1 107 2 256 2 354 1 67 1 218 2 114 3 93 1 
26 1 265 1 190 2 282 2 72 1 146 1 268 1 308 1 55 1 230 2 233 1 201 1 202 1 288 2 17 1 237 1 372 2 107 2 256 2 354 1 67 1 218 2 114 3 93 2 
288 1 175 1 264 2 190 3 332 1 72 1 146 1 237 1 63 1 372 3 211 1 268 1 170 1 151 1 363 1 165 1 258 1 354 1 92 2 218 1 201 1 114 4 93 3 
288 1 264 2 190 3 332 1 72 1 146 1 237 1 226 1 372 3 211 1 268 1 170 1 151 1 363 1 165 1 258 1 354 1 92 2 218 1 201 1 114 4 93 3 
372 1 190 1 354 1 371 1 237 1 93 1 
220 1 288 1 191 1 190 6 177 1 301 1 169 1 293 1 371 1 237 3 210 1 76 1 372 7 277 1 352 1 165 2 354 2 242 1 218 2 114 3 93 7 
244 2 142 2 190 1 282 1 333 1 95 1 195 1 149 1 196 2 55 1 342 1 253 1 288 1 102 1 203 2 207 1 158 2 295 6 350 2 107 1 256 2 351 1 111 4 354 1 25 3 218 1 114 1 355 1 26 1 262 1 265 2 169 1 119 1 230 2 233 1 129 1 80 1 237 1 86 1 276 3 182 1 372 1 240 1 322 2 279 2 323 1 93 1 
281 1 190 1 264 3 168 1 332 1 52 2 226 1 247 1 121 1 170 1 150 2 336 1 151 2 363 1 200 2 79 1 32 2 238 1 372 1 211 1 39 1 165 1 258 1 136 1 214 1 92 3 114 2 93 1 
288 1 190 2 169 1 371 1 237 2 4 1 211 1 372 2 352 1 354 1 218 1 114 2 93 2 
288 1 26 1 265 1 190 1 282 1 237 1 372 1 107 1 256 2 55 1 230 2 165 1 354 1 233 1 114 1 218 1 93 1 202 1 
288 1 191 1 190 1 301 1 146 1 237 2 372 1 352 1 354 1 242 1 218 1 114 1 93 1 
265 1 257 1 221 1 128 1 41 1 
103 1 155 1 265 1 264 2 221 1 332 1 17 1 238 1 308 1 161 1 170 1 278 1 363 1 257 2 67 1 100 1 128 2 92 2 41 2 
256 1 34 1 321 1 311 1 221 1 257 1 230 1 282 1 128 1 
155 1 221 1 100 1 
289 1 254 1 43 1 60 1 198 1 209 1 94 1 252 1 
289 3 254 1 43 2 245 1 209 1 370 1 94 2 225 1 77 1 198 4 287 1 260 1 252 4 235 2 
289 1 254 1 43 1 60 1 2 1 15 1 209 1 94 1 53 1 198 2 252 2 235 1 
289 1 254 1 60 1 43 1 209 1 370 2 94 1 225 1 77 2 98 1 198 3 252 3 
289 2 266 2 270 1 96 1 
254 1 60 1 198 1 209 1 78 1 252 1 
289 1 254 1 130 1 43 1 60 1 198 2 209 1 94 1 252 2 235 1 
283 1 
289 1 254 1 43 1 60 1 198 1 209 1 94 1 252 1 
289 1 43 1 94 1 69 1 
289 1 254 1 43 1 198 1 209 1 94 1 252 1 
312 1 91 1 252 1 
289 1 254 1 60 1 43 1 209 1 370 1 94 1 225 1 77 2 241 1 198 3 252 3 
289 1 255 1 254 1 43 1 198 2 209 1 94 1 252 2 235 1 
289 1 81 1 254 1 60 1 209 1 54 1 171 1 198 1 287 1 30 1 252 1 
289 1 254 1 43 1 60 1 198 1 209 1 252 1 
254 1 43 2 60 1 198 1 209 1 94 1 252 1 
289 1 254 2 43 1 60 1 209 2 192 1 376 1 198 2 365 1 252 2 
289 2 254 1 130 1 43 1 60 1 209 1 334 1 94 1 198 3 287 1 260 1 252 3 235 2 
289 1 81 1 254 1 205 1 43 1 60 1 209 1 94 1 239 1 249 1 171 1 30 2 198 2 252 2 235 1 
289 2 254 2 43 1 60 1 209 2 94 1 255 1 110 1 198 4 287 1 260 1 252 4 235 2 
289 1 77 1 254 1 130 1 43 1 60 1 198 3 209 1 94 1 252 3 235 1 
289 1 245 1 287 1 260 1 
289 1 43 1 

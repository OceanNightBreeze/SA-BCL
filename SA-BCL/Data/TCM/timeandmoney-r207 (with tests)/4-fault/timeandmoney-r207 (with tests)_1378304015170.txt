#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 172 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 18 1 99 1 58 9 119 4 225 5 250 1 197 9 22 2 360 1 126 1 151 2 339 2 291 1 44 1 366 1 84 1 159 6 368 1 106 1 66 3 110 2 372 1 321 2 15 2 218 2 141 1 73 1 
31 1 18 1 99 1 58 9 119 4 225 5 250 1 197 9 22 2 360 1 126 1 151 2 339 2 291 1 44 1 366 1 84 1 159 6 368 1 106 1 66 3 110 2 372 1 321 2 15 2 218 2 141 1 73 1 
31 1 18 1 99 1 58 10 119 5 225 6 250 1 197 10 22 2 360 1 126 1 151 2 339 2 291 1 44 1 366 1 84 1 159 7 368 1 106 1 66 4 110 2 372 1 321 2 15 2 218 2 141 1 73 1 
31 1 18 1 99 1 58 7 119 3 225 4 250 1 197 7 22 2 360 1 126 1 151 2 339 2 291 1 44 1 84 1 159 4 368 1 106 1 66 2 110 2 372 1 321 2 15 1 218 2 141 1 73 1 
366 1 84 1 159 3 368 1 66 1 58 4 119 2 225 3 321 1 372 1 197 4 15 2 22 1 360 1 218 1 151 1 141 1 339 1 
180 1 84 1 118 1 106 1 58 2 225 1 110 1 372 1 197 2 321 1 360 1 218 1 151 1 240 1 73 1 339 1 
44 1 84 1 159 1 58 3 66 1 119 1 225 2 110 1 372 1 197 3 360 1 218 2 339 2 
74 1 58 9 119 4 225 5 250 1 197 9 22 1 360 1 334 1 151 1 339 2 291 1 44 1 366 1 84 1 159 7 368 1 66 3 110 1 372 1 321 1 15 2 218 2 141 1 
74 1 58 9 119 4 225 5 250 1 197 9 22 1 360 1 334 1 151 1 339 2 291 1 44 1 366 1 84 1 159 7 368 1 66 3 110 1 372 1 321 1 15 2 218 2 141 1 
156 1 172 1 38 1 
156 1 133 2 289 1 
252 1 345 2 132 2 124 2 9 1 16 2 242 2 143 2 
276 1 2 2 280 1 307 1 148 1 354 1 282 1 60 1 37 1 194 1 175 1 252 1 226 2 198 1 178 2 124 3 287 1 103 1 207 1 342 1 132 2 265 1 9 1 319 1 160 2 68 1 345 3 50 1 373 1 71 1 142 2 16 2 242 2 171 1 93 1 349 1 143 2 
129 1 268 1 345 1 132 1 124 1 9 1 362 1 16 1 242 1 143 1 
340 1 156 1 293 1 283 1 38 1 285 1 345 1 268 1 139 1 168 1 124 1 219 1 16 1 8 1 
340 2 156 1 132 1 293 1 38 1 285 1 345 1 268 1 139 1 124 1 219 2 242 1 16 1 143 1 8 1 
340 1 51 1 219 1 185 1 231 1 
340 2 156 1 51 1 347 1 355 1 219 2 231 1 38 1 
340 1 51 1 219 1 
340 1 129 1 132 1 308 1 9 1 268 1 345 1 124 1 219 1 231 1 362 1 242 1 16 1 143 1 
156 1 
340 2 156 1 51 1 166 1 355 1 219 2 231 1 38 1 
204 1 145 1 340 5 104 1 205 1 156 1 158 1 355 1 38 1 41 1 269 1 229 2 346 2 51 2 219 5 239 2 231 2 350 1 301 1 
252 1 172 1 
132 1 267 1 252 2 345 2 125 1 124 2 16 2 242 1 143 1 
294 1 75 1 105 1 
276 1 280 1 354 1 319 1 252 1 226 1 68 1 345 1 373 1 178 1 124 1 71 1 142 1 93 1 349 1 56 1 
252 1 345 3 332 1 132 1 124 3 16 3 242 3 143 3 
268 1 345 1 124 1 362 1 16 1 242 1 143 1 
268 1 345 1 132 1 125 1 124 1 16 1 242 1 143 1 267 1 
276 1 2 1 280 1 307 1 148 1 354 1 282 1 60 1 37 1 194 1 252 1 285 1 226 1 332 1 178 1 124 4 287 1 316 1 8 1 103 1 340 1 25 1 207 1 132 2 293 1 265 1 9 1 319 1 160 2 267 1 68 1 345 4 268 1 373 1 139 1 90 1 71 1 219 1 142 1 349 1 93 1 16 3 242 3 143 3 
252 1 345 2 332 1 124 2 35 1 283 1 16 2 242 1 143 1 
340 1 156 1 25 1 132 1 293 1 267 1 285 1 268 1 345 3 238 1 332 2 139 1 90 1 124 3 219 1 242 3 16 3 8 1 143 3 
345 2 332 1 132 1 294 1 124 2 75 1 16 2 242 2 143 2 267 1 
276 1 280 1 354 1 319 1 252 1 226 1 68 1 345 1 373 1 178 1 124 1 71 1 142 1 93 1 349 1 
276 1 280 1 354 1 357 1 319 1 252 1 226 1 345 1 178 1 124 1 23 1 71 1 142 1 93 1 349 1 
103 1 154 1 2 2 294 1 307 1 34 1 75 1 105 1 148 1 265 1 282 1 136 1 37 2 160 2 140 1 333 1 287 1 375 1 337 1 
268 1 345 1 293 1 234 1 124 1 16 1 242 1 143 1 
276 1 280 1 294 1 354 1 319 1 226 1 68 1 345 2 373 1 332 1 178 1 90 1 124 2 71 1 142 1 349 1 93 1 242 1 16 1 143 1 
132 1 35 1 283 1 267 1 252 1 345 5 177 1 332 2 90 1 124 5 55 1 242 4 16 5 143 4 
268 1 345 2 234 1 124 2 362 1 16 2 242 2 143 2 
356 1 107 1 
356 1 107 1 
137 1 323 1 
137 1 323 1 
137 1 323 1 
292 1 356 1 107 1 
292 1 356 1 107 1 
262 1 356 1 107 1 
137 1 24 1 323 1 54 1 356 2 107 2 
292 1 356 1 107 1 
356 1 107 1 320 1 
356 1 107 1 320 1 
356 1 107 1 320 1 
82 2 340 2 279 1 222 1 156 1 26 1 192 1 356 2 343 1 309 2 107 2 77 1 120 3 28 2 52 2 217 2 54 1 62 1 219 2 
17 1 192 1 356 1 120 1 252 1 253 1 40 1 124 2 82 1 340 1 262 1 107 1 181 1 28 1 345 2 270 1 52 1 271 1 217 1 219 1 242 2 16 2 221 1 143 2 
321 1 22 1 151 1 
321 1 180 1 151 1 
0 1 321 3 298 1 180 1 22 2 94 1 
0 1 321 2 180 1 22 1 367 1 94 1 
0 1 321 2 180 1 22 1 94 2 
302 1 145 3 17 1 277 1 117 1 355 1 38 1 41 1 311 1 229 1 81 2 200 1 101 1 289 1 231 4 128 2 203 1 154 1 340 5 64 1 156 2 133 3 266 2 271 1 346 1 51 1 215 1 375 1 239 1 219 5 350 2 221 1 
302 3 145 8 277 3 117 1 20 1 355 1 38 1 41 1 311 2 229 2 101 3 289 3 231 7 290 1 128 6 7 1 154 3 340 9 206 1 156 5 133 9 86 1 266 6 69 1 269 1 51 6 346 2 215 2 375 3 374 5 219 9 239 2 185 5 350 6 221 4 
302 1 145 3 277 1 38 1 311 1 229 1 81 1 101 1 289 2 231 2 128 2 203 1 154 1 340 3 64 1 156 3 133 4 266 2 269 1 346 1 215 1 375 1 239 1 219 3 221 1 350 2 
302 2 145 5 277 2 20 1 38 1 311 1 229 1 81 2 101 2 289 3 231 3 128 4 7 1 203 1 154 2 340 4 64 1 156 4 206 1 133 7 266 4 269 1 346 1 215 1 375 2 239 1 219 4 221 2 350 4 
276 1 172 1 144 1 
276 1 188 1 
170 1 
276 1 71 1 
276 3 335 1 71 1 319 1 173 1 144 2 
276 1 71 1 319 1 
276 1 3 1 
154 1 179 2 277 1 190 1 2 7 306 1 147 1 246 1 136 2 11 1 37 3 198 4 237 1 100 1 199 1 127 1 337 3 
154 1 179 2 277 1 190 1 2 7 306 1 147 1 246 1 136 2 11 1 37 3 198 4 237 1 100 1 199 1 127 1 337 3 
154 1 179 2 277 1 190 1 2 7 306 1 147 1 246 1 248 1 136 2 11 1 37 3 198 4 237 1 100 1 199 1 127 1 337 3 
302 3 277 4 2 31 190 2 19 1 306 1 147 2 246 5 148 1 282 1 37 15 196 1 198 16 100 2 43 1 80 1 199 1 287 1 101 3 127 1 361 1 337 10 154 4 260 1 179 3 130 3 265 1 11 2 136 5 160 2 237 1 29 4 375 3 92 1 
244 1 277 1 2 9 190 1 306 1 147 1 246 1 148 2 282 2 37 4 198 5 227 1 100 1 199 1 287 2 127 1 337 4 154 1 179 2 265 2 136 3 11 1 160 4 92 1 
245 1 280 1 58 2 149 1 225 1 226 1 197 2 42 1 178 1 22 1 360 1 151 1 339 1 180 1 157 1 84 1 159 1 110 1 297 1 162 1 182 1 111 1 372 1 321 2 112 1 298 1 218 1 142 1 93 1 187 1 
115 1 245 1 280 1 58 3 149 1 225 1 226 1 197 3 42 1 178 1 22 1 360 1 151 1 339 1 180 1 317 1 84 1 159 2 296 1 110 1 297 1 162 1 182 1 111 1 321 2 298 1 218 1 142 1 93 1 187 1 
115 1 245 1 280 1 58 2 149 1 225 1 226 1 197 2 42 1 178 1 22 1 360 1 151 1 180 1 317 1 84 1 159 2 110 1 162 1 182 1 111 1 321 2 298 1 142 1 93 1 
276 1 57 1 96 1 280 1 354 1 58 1 5 1 296 1 149 2 110 2 226 1 39 1 182 2 197 1 111 2 178 1 150 1 258 1 71 1 218 1 142 1 93 1 339 1 
115 1 245 1 180 1 280 1 157 1 58 1 149 1 162 1 297 1 110 1 226 1 321 2 372 1 197 1 111 1 182 1 298 1 42 1 178 1 22 1 218 1 151 1 142 1 93 1 187 1 339 1 
161 1 
276 1 116 1 280 1 328 4 283 1 38 1 285 1 226 2 330 1 41 1 229 1 178 2 124 1 289 2 8 1 340 5 133 2 134 1 293 1 344 2 12 2 88 1 345 1 51 6 346 1 139 1 239 1 142 2 350 2 300 1 93 1 16 1 95 2 189 2 145 2 303 2 96 1 97 1 353 1 355 3 354 2 358 1 21 2 258 1 156 2 264 1 108 1 370 1 67 1 213 2 268 1 215 1 168 1 71 1 219 5 
116 1 353 1 328 2 355 1 283 1 285 1 330 1 124 1 8 1 340 3 134 1 293 1 108 1 345 1 268 1 213 1 139 1 51 2 166 1 168 1 219 3 16 1 
116 1 353 1 328 3 355 1 283 1 38 1 285 1 330 1 124 1 8 1 340 3 156 1 134 1 293 1 344 1 108 1 345 1 268 1 51 1 139 1 166 1 168 1 219 3 16 1 
95 1 116 1 353 1 355 1 328 3 283 1 38 1 285 1 330 1 124 1 8 1 340 3 156 1 134 1 293 1 344 1 108 1 345 1 268 1 213 1 166 1 139 1 51 2 168 1 219 3 16 1 
116 1 328 6 283 1 38 5 285 1 330 1 41 1 229 1 124 1 289 2 8 1 340 5 293 1 134 1 344 4 12 2 345 1 139 1 51 7 346 1 239 1 16 1 350 1 95 4 145 1 189 2 303 2 352 1 353 1 355 3 21 2 201 1 156 5 210 1 108 1 370 1 67 1 213 4 268 1 212 1 166 1 168 1 219 5 275 1 
116 1 328 4 283 1 38 1 285 1 330 1 41 1 229 1 124 1 289 2 8 1 340 4 133 2 293 1 134 1 344 2 12 2 345 1 139 1 346 1 51 4 239 1 16 1 350 1 95 2 145 1 189 2 303 2 353 1 355 2 21 2 156 2 264 1 108 1 370 1 67 1 268 1 213 2 168 1 219 4 
95 2 189 2 145 1 303 2 116 1 352 1 353 1 355 2 328 4 283 1 38 1 285 1 330 1 41 1 21 2 229 1 124 1 289 2 201 1 8 1 340 4 156 1 210 1 134 1 293 1 344 2 12 2 108 1 370 1 67 1 213 2 345 1 268 1 51 4 346 1 139 1 168 1 219 4 239 1 350 1 16 1 
95 2 189 2 145 1 303 2 116 1 352 1 353 1 355 2 328 4 283 1 38 1 285 1 330 1 41 1 21 2 229 1 124 1 289 2 201 1 8 1 340 4 156 1 210 1 134 1 293 1 344 2 12 2 108 1 370 1 67 1 213 2 345 1 268 1 51 4 346 1 139 1 168 1 219 4 239 1 350 1 16 1 
95 2 189 2 145 1 303 2 116 1 353 1 355 2 328 4 283 1 193 2 38 1 285 1 330 1 41 1 229 1 124 1 202 1 8 1 340 4 156 1 133 2 210 1 134 1 293 1 46 2 344 2 108 1 67 1 87 1 213 2 345 1 268 1 51 4 346 1 139 1 168 1 219 4 239 1 220 1 350 1 16 1 
95 3 189 2 145 1 303 2 116 1 352 1 353 1 355 2 328 5 283 1 38 1 285 1 330 1 41 1 21 2 229 1 124 1 289 2 201 1 8 1 340 4 156 1 210 1 134 1 293 1 344 3 12 2 108 1 370 1 67 1 345 1 268 1 212 1 213 3 346 1 139 1 51 5 168 1 239 1 219 4 350 1 16 1 
95 3 189 2 145 1 303 2 116 1 352 1 353 1 355 2 328 5 283 1 38 1 285 1 330 1 41 1 21 2 229 1 124 1 289 2 201 1 8 1 340 4 156 1 210 1 134 1 293 1 344 3 12 2 108 1 370 1 67 1 345 1 268 1 212 1 213 3 346 1 139 1 51 5 168 1 239 1 219 4 350 1 16 1 
116 1 328 4 283 1 38 1 285 1 330 1 41 1 229 1 124 1 8 1 340 4 133 2 293 1 134 1 46 2 344 2 345 1 139 1 346 1 51 4 239 1 16 1 350 1 95 2 145 1 189 2 303 2 353 1 355 2 193 2 202 1 156 1 264 1 108 1 67 1 268 1 213 2 168 1 219 4 
277 1 2 6 306 1 147 1 307 1 172 1 34 1 75 1 148 1 282 1 37 3 252 2 198 3 199 1 287 1 127 1 337 2 103 1 154 1 179 1 294 1 265 1 105 1 11 1 136 2 160 2 
302 3 277 3 2 17 246 2 307 1 76 1 148 2 75 3 282 2 60 1 37 7 195 1 175 1 252 1 196 2 198 10 287 2 101 3 337 2 363 1 154 1 103 2 260 1 130 3 294 13 265 2 105 13 369 1 160 4 29 4 375 1 70 1 
276 1 2 2 280 1 307 1 354 1 75 1 148 1 282 1 60 1 37 1 252 1 175 1 226 1 198 1 178 1 332 1 124 2 287 1 364 1 103 1 45 1 265 1 211 1 319 1 369 1 160 2 68 1 345 2 373 1 90 1 71 1 142 1 349 1 93 1 16 1 242 1 56 1 143 1 
276 1 277 1 2 5 280 1 75 2 282 2 329 1 37 2 226 1 178 1 332 1 124 2 287 2 232 1 337 2 294 2 138 1 345 2 90 1 142 1 242 1 16 1 93 1 349 1 143 1 302 1 246 2 307 2 354 1 148 2 60 1 194 1 310 1 198 3 101 1 103 2 265 2 105 2 369 1 319 1 160 4 68 1 373 1 71 1 72 1 
276 3 115 1 2 2 96 1 224 1 4 1 280 2 307 2 34 1 354 2 148 2 282 2 59 1 60 1 37 1 175 1 226 8 198 1 332 1 178 7 124 1 287 2 258 1 103 2 265 2 160 4 345 1 112 1 322 1 50 2 273 1 325 1 71 2 186 1 142 8 16 1 242 1 93 2 143 1 
302 1 277 1 2 3 307 1 75 1 148 1 282 1 37 2 198 1 124 1 287 1 101 1 337 1 103 1 154 1 65 1 132 1 294 1 105 1 265 1 369 1 136 1 160 2 267 1 345 1 375 1 242 1 16 1 143 1 
103 1 277 1 2 2 246 1 294 1 307 1 34 1 75 1 105 1 148 1 265 1 282 1 160 2 198 2 114 1 287 1 101 1 337 1 
103 1 154 1 2 2 294 1 307 1 34 1 75 1 105 1 148 1 265 1 282 1 136 1 160 2 37 2 333 1 287 1 375 1 337 1 
302 1 277 1 2 4 246 1 307 1 34 1 148 1 75 2 282 1 37 2 198 2 287 1 101 1 337 2 103 1 154 1 294 2 265 1 105 2 136 1 160 2 375 1 
103 1 277 1 2 2 246 1 294 1 307 1 75 1 105 1 148 1 265 1 282 1 160 2 198 2 114 1 287 1 325 1 101 1 337 1 
103 1 154 1 2 2 294 1 307 1 75 1 105 1 148 1 265 1 282 1 136 1 160 2 37 2 333 1 287 1 375 1 325 1 337 1 
103 1 302 1 277 1 2 2 246 1 294 1 307 1 75 1 105 1 148 1 265 1 282 1 160 2 198 2 287 1 325 1 101 1 337 1 
103 1 302 1 277 1 2 2 246 1 294 1 307 1 75 1 105 1 148 1 265 1 282 1 160 2 198 2 287 1 101 1 337 1 
276 1 2 2 280 1 307 1 354 1 148 1 282 1 60 1 194 1 37 1 175 1 252 1 226 1 198 1 178 1 124 1 287 1 103 1 265 1 319 1 160 2 68 1 345 1 373 1 71 1 142 1 349 1 93 1 
276 1 2 2 280 1 307 1 354 1 148 1 357 1 282 1 60 1 37 1 175 1 252 1 226 1 198 1 256 1 178 1 23 1 124 1 287 1 103 1 265 1 319 1 160 2 345 1 71 1 142 1 349 1 93 1 
103 1 302 1 277 1 2 2 246 1 294 1 307 1 75 1 105 1 148 1 265 1 369 1 282 1 160 2 198 2 287 1 101 1 337 1 
276 1 302 1 277 1 2 2 246 1 280 1 307 1 75 1 148 1 282 1 329 1 194 1 226 1 198 2 178 1 124 1 287 1 101 1 337 1 103 1 294 1 105 1 265 1 319 1 160 2 68 1 345 1 112 1 373 1 71 1 142 1 349 1 93 1 
302 1 277 1 2 2 246 1 307 1 148 1 75 1 282 1 198 2 124 1 287 1 101 1 337 1 103 1 132 1 83 1 294 1 265 1 105 1 369 1 160 2 267 1 345 1 242 1 16 1 143 1 
302 3 277 3 2 19 223 1 246 3 148 2 282 2 37 10 359 1 196 1 198 9 227 1 287 2 101 3 337 6 63 1 154 3 260 1 131 1 130 1 265 2 136 3 160 4 163 1 89 1 29 2 183 2 113 2 375 3 379 1 
302 3 277 3 2 26 223 1 246 2 148 3 282 3 37 12 198 14 227 1 287 3 101 3 337 4 154 2 260 2 131 1 130 2 265 3 47 1 136 2 109 1 160 6 14 1 163 2 89 2 29 2 183 1 113 4 184 1 375 2 92 2 327 1 379 1 243 1 
277 5 2 41 223 1 282 3 37 21 227 1 287 3 127 1 337 8 179 1 130 3 131 1 47 1 136 4 11 1 14 1 89 2 184 1 183 1 92 1 243 1 302 4 306 1 147 1 246 4 148 3 196 1 198 20 199 1 101 4 154 5 63 1 260 3 265 3 160 6 109 1 163 1 29 4 113 4 216 1 375 4 327 1 379 1 
302 4 277 5 2 38 306 1 223 1 147 1 246 3 148 4 282 4 37 18 196 1 198 20 227 1 199 1 287 4 101 4 127 1 337 7 63 1 154 4 179 1 260 3 131 1 130 3 47 1 265 4 11 1 136 4 109 1 160 8 14 1 163 1 89 2 29 4 183 1 184 1 113 4 216 1 375 3 92 2 327 1 379 1 243 1 
302 7 277 8 2 52 306 1 223 1 147 1 246 7 148 2 282 2 37 25 196 2 198 27 227 1 199 1 287 2 101 7 127 1 337 14 363 2 154 8 179 1 260 2 131 1 130 4 47 1 265 2 11 1 136 7 109 1 160 4 14 1 163 1 89 1 29 4 183 1 184 1 113 4 375 7 92 1 327 1 379 1 243 1 
28 1 82 1 222 1 52 1 26 1 217 1 54 1 356 1 169 1 107 1 
262 1 270 1 
28 1 82 1 52 1 257 1 217 1 272 1 356 1 107 1 299 1 
340 1 82 1 222 1 156 1 26 1 192 1 356 1 343 1 309 1 107 1 77 1 120 2 28 1 52 1 217 1 54 1 62 1 219 1 
340 1 82 1 222 1 156 1 26 1 192 1 356 1 343 1 309 1 107 1 77 1 120 2 28 1 52 1 217 1 54 1 62 1 219 1 
340 1 82 1 222 1 156 1 26 1 192 1 356 1 343 1 309 1 107 1 77 1 120 2 28 1 52 1 217 1 54 1 62 1 219 1 
24 1 292 1 167 1 
24 1 292 1 167 1 
312 1 320 1 
24 1 312 1 320 1 
40 1 253 1 
17 1 309 1 356 1 120 1 252 1 253 1 40 1 124 2 231 1 340 1 82 1 262 1 343 1 107 1 181 1 28 1 345 2 164 1 270 1 52 1 271 1 217 1 219 1 221 1 242 2 16 2 143 2 
292 1 167 1 
24 1 312 1 320 1 
276 1 2 2 280 1 247 1 307 1 148 1 282 1 59 1 60 1 37 1 174 1 175 1 226 2 198 1 178 2 123 1 124 2 287 1 365 1 103 1 318 1 265 1 369 1 160 2 345 2 50 2 71 1 186 1 142 2 93 1 16 2 
115 1 245 1 180 1 280 1 281 1 27 1 135 1 297 1 226 2 321 2 182 1 298 1 112 1 42 1 178 2 22 1 151 1 142 2 93 1 
115 1 245 1 180 1 280 1 295 1 27 1 297 1 226 1 321 2 182 1 298 1 42 1 178 1 22 1 151 1 142 1 93 1 
276 1 226 1 182 1 96 1 178 1 280 1 258 1 281 1 354 1 71 1 326 1 5 1 142 1 93 1 
115 1 245 1 180 1 280 1 281 1 27 1 135 1 297 1 226 1 321 2 182 1 298 1 42 1 178 1 22 1 151 1 142 1 93 1 
152 1 
204 1 145 1 156 1 158 1 172 1 38 1 350 1 
145 1 355 1 38 1 41 1 21 1 229 1 289 1 340 1 156 2 133 1 12 1 370 1 346 1 51 1 239 1 219 1 350 1 
276 4 277 1 1 1 280 2 173 1 226 1 41 2 229 2 178 1 232 1 289 3 336 1 128 3 8 1 340 2 133 6 236 1 346 2 51 2 239 2 142 1 93 1 350 3 144 1 188 2 302 1 145 4 354 1 355 1 101 1 154 1 156 3 209 1 319 1 266 3 214 1 215 1 30 1 375 1 71 1 219 2 377 1 
302 2 145 8 277 2 355 1 38 2 41 2 176 1 78 1 229 2 315 1 101 2 289 3 233 2 128 5 154 2 340 1 260 1 130 1 156 5 133 6 47 1 109 1 266 5 29 1 51 1 346 2 184 1 215 1 375 2 219 1 239 2 327 1 300 1 350 5 243 1 
145 2 277 2 306 1 147 1 308 1 41 1 176 1 229 1 124 1 362 1 233 2 201 1 154 1 340 1 129 1 155 1 132 1 9 1 11 1 268 1 345 1 346 1 239 1 219 1 350 2 242 1 16 1 143 1 
204 1 145 1 156 1 158 1 38 1 41 1 229 1 346 1 239 1 350 1 
302 1 154 1 145 2 277 1 156 2 133 4 266 2 375 1 101 1 289 2 350 2 128 2 
340 1 156 1 51 1 355 1 219 1 38 1 
276 1 145 2 96 1 97 1 98 2 280 1 354 2 355 2 284 1 226 4 41 1 229 2 178 4 258 1 340 3 341 1 85 1 88 1 269 1 346 2 51 4 215 2 71 1 239 2 219 3 142 4 93 1 300 2 350 2 
276 1 2 1 280 1 307 1 354 1 148 1 282 1 60 1 37 1 194 1 252 1 226 1 178 1 124 3 287 1 103 1 207 1 132 2 265 1 9 1 319 1 160 2 68 1 345 3 373 1 71 1 142 1 16 2 242 2 93 1 349 1 143 2 
145 1 156 2 133 2 38 1 41 1 229 1 346 1 215 1 239 1 289 1 128 1 350 1 300 1 
28 1 82 1 304 1 
28 1 82 1 304 1 
28 1 82 1 40 1 26 1 288 1 
28 1 82 1 304 1 
28 1 82 1 49 1 
28 1 82 1 49 1 
28 1 82 1 49 1 
28 1 82 1 
356 1 107 1 
154 1 179 1 277 1 2 8 306 1 147 1 246 1 148 2 265 2 282 2 136 2 11 1 37 4 160 4 198 4 199 1 287 2 92 1 127 1 337 3 
154 1 179 1 198 3 277 1 2 6 306 1 147 1 199 1 172 1 136 2 11 1 127 1 337 2 37 3 
154 1 302 1 32 1 277 1 2 4 246 1 148 1 265 1 282 1 136 1 37 2 160 2 198 2 375 1 287 1 101 1 337 2 
154 1 302 1 260 1 277 1 2 7 130 1 246 1 136 1 37 4 196 1 198 3 29 2 375 1 101 1 337 2 
302 2 277 3 2 23 306 1 147 2 246 4 148 2 282 2 37 12 196 1 61 1 198 11 199 1 287 2 101 2 127 1 337 9 363 1 154 3 179 1 130 2 265 2 11 2 136 5 160 4 29 2 375 2 70 1 92 2 
2 1 29 1 37 1 
198 1 2 1 130 1 
302 1 154 1 32 1 277 1 2 6 246 1 265 1 148 1 282 1 136 2 160 2 37 3 198 3 287 1 375 1 101 1 232 1 337 3 
302 2 277 2 2 12 246 1 148 1 282 1 37 6 198 6 227 1 287 1 101 2 337 2 154 2 260 1 130 1 265 1 47 1 136 1 160 2 109 1 29 1 184 1 375 2 327 1 243 1 
154 1 277 1 2 6 306 1 147 1 246 1 11 1 136 1 37 3 198 3 337 2 
2 3 147 1 246 1 148 1 265 1 282 1 136 1 11 1 37 2 160 2 61 1 198 1 199 1 287 1 92 1 127 1 337 2 
154 2 277 2 155 1 2 10 306 1 147 2 246 2 265 1 148 1 282 1 11 2 136 3 160 2 37 5 198 5 227 1 287 1 337 5 
277 1 2 2 246 1 148 1 265 1 282 1 160 2 198 2 227 1 287 1 101 1 337 1 
154 1 302 1 277 1 2 4 246 1 148 1 265 1 282 1 136 1 37 2 160 2 198 2 227 1 375 1 287 1 101 1 337 2 
63 1 2 3 147 1 246 1 148 3 265 3 282 3 11 1 136 1 37 2 160 6 61 1 198 1 227 1 287 3 92 1 337 2 
302 3 32 1 277 5 19 1 2 34 306 2 147 3 246 5 148 5 282 5 37 18 196 1 61 1 198 16 227 1 80 1 199 1 287 5 101 3 127 1 361 1 337 12 63 1 154 5 179 1 260 1 130 3 265 5 11 3 136 7 160 10 29 4 375 3 92 2 
277 1 2 8 306 1 147 1 148 1 282 1 37 4 198 4 227 1 199 1 287 1 127 1 337 2 154 1 179 1 260 1 130 1 265 1 11 1 136 2 160 2 29 1 327 1 
302 1 32 1 277 2 2 11 306 1 147 1 246 1 148 2 282 2 37 5 196 1 198 6 227 1 199 1 287 2 101 1 127 1 337 3 154 1 179 1 260 1 130 1 265 2 136 2 11 1 160 4 29 2 327 1 
302 2 32 1 277 3 2 19 306 1 147 1 246 1 148 3 282 3 37 10 198 9 227 1 199 1 287 3 101 2 127 1 337 4 154 3 179 1 260 1 130 1 265 3 47 1 11 1 136 3 109 1 160 6 29 1 184 1 375 2 327 1 92 1 243 1 
302 2 32 1 277 3 2 17 306 1 147 1 246 2 148 3 282 3 37 7 198 10 227 1 199 1 287 3 101 2 127 1 337 5 154 2 179 1 260 1 130 1 265 3 47 1 11 1 136 3 160 6 109 1 29 1 184 1 375 1 92 1 327 1 243 1 
277 1 2 8 306 1 147 1 148 1 282 1 37 4 198 4 227 1 199 1 287 1 127 1 337 2 154 1 179 1 260 1 130 1 265 1 11 1 136 2 160 2 29 1 327 1 
302 2 277 2 2 12 246 1 148 1 282 1 37 6 198 6 227 1 287 1 101 2 337 2 154 2 260 1 130 1 265 1 47 1 136 1 160 2 109 1 29 1 184 1 375 2 327 1 243 1 
302 2 32 1 277 3 2 18 306 1 147 1 246 2 148 4 282 4 37 8 198 10 227 1 199 1 287 4 101 2 127 1 337 5 154 2 179 1 260 1 130 1 265 4 47 1 11 1 136 3 109 1 160 8 29 1 184 1 375 1 327 1 92 2 243 1 
302 3 277 3 2 16 246 3 148 4 282 4 37 7 198 9 227 1 287 4 101 3 337 6 63 1 154 2 260 1 130 1 265 4 47 1 136 3 109 1 160 8 29 1 184 1 375 2 327 1 92 2 243 1 
154 1 277 1 2 7 306 1 147 3 246 3 11 3 136 3 37 4 198 3 199 1 127 2 337 6 
302 2 277 3 2 18 306 1 147 1 246 1 148 4 282 4 37 8 198 10 227 1 199 1 287 4 101 2 127 1 337 4 63 1 154 2 179 1 260 1 130 1 265 4 47 1 11 1 136 3 109 1 160 8 29 1 184 1 375 1 327 1 92 2 243 1 
252 1 345 1 124 1 35 1 283 1 13 1 16 1 
146 1 35 1 10 1 283 1 13 1 252 1 345 1 79 1 124 1 241 1 16 1 338 1 
276 1 226 1 96 1 178 1 280 1 172 1 258 1 354 1 71 1 142 1 93 1 
276 1 280 1 354 1 319 1 252 1 226 1 345 2 373 1 332 1 178 1 124 2 71 1 142 1 349 1 242 1 16 1 93 1 143 1 
276 3 3 1 98 1 280 1 252 1 285 1 226 1 178 1 332 1 124 2 263 1 293 1 319 2 345 2 268 1 373 1 71 2 142 1 93 1 16 2 242 2 349 1 143 1 
276 3 3 1 98 1 280 1 249 1 252 1 285 1 226 2 178 2 332 1 23 1 124 2 263 1 293 1 319 2 345 2 268 1 71 2 142 2 93 1 16 2 242 2 349 1 143 1 
188 1 276 4 263 1 340 2 33 1 156 1 3 1 280 1 98 1 354 1 319 1 249 1 38 1 226 3 254 1 178 3 51 1 71 1 219 2 142 3 93 1 8 1 144 1 
188 1 276 4 263 1 340 2 156 1 3 1 280 1 98 1 354 1 319 1 249 1 38 1 226 3 178 3 51 1 30 1 71 1 219 2 142 3 93 1 8 1 144 1 
226 1 178 1 4 1 280 1 142 1 93 1 
276 3 115 1 224 1 4 1 280 3 354 2 319 1 173 1 331 1 226 7 112 1 165 1 50 1 322 1 178 6 273 1 71 2 274 1 186 1 142 7 93 2 
276 1 277 3 2 14 280 1 75 1 282 2 329 1 37 7 226 1 178 1 332 1 124 2 287 2 127 1 337 5 179 1 294 1 11 2 136 4 138 1 345 2 142 1 242 1 16 1 93 1 349 1 143 1 306 2 147 2 246 1 247 1 307 2 148 2 194 1 252 3 198 7 199 1 103 2 154 3 261 1 155 1 265 2 105 1 369 1 319 1 160 4 68 1 268 1 112 1 373 1 71 1 
188 1 276 2 145 1 1 1 354 1 355 1 38 1 226 1 41 2 178 1 229 2 231 1 336 1 8 1 204 1 340 3 156 1 158 1 85 1 236 1 346 2 51 2 30 1 239 2 219 3 142 1 350 1 144 1 
276 2 226 2 112 1 214 1 178 2 4 1 280 2 71 1 319 1 173 1 142 2 93 1 144 1 
276 1 278 1 96 1 280 1 354 1 249 1 226 4 112 1 178 4 258 1 71 1 142 4 93 1 
276 1 98 1 208 1 280 2 319 1 331 1 226 2 178 2 230 1 71 1 274 1 153 1 142 2 93 1 
226 1 321 1 180 1 42 1 178 1 280 1 354 1 151 1 142 1 93 1 
365 1 276 1 115 1 280 1 226 2 112 1 178 2 71 1 186 1 142 2 93 1 
276 3 278 1 96 1 98 1 280 2 354 1 226 5 112 1 322 1 178 4 258 1 71 2 273 1 186 1 142 5 93 2 
276 3 278 1 96 1 98 1 280 2 354 1 371 1 226 5 112 1 178 4 258 1 71 2 273 1 186 1 142 5 93 2 
276 1 280 1 354 1 319 1 252 1 226 1 345 2 332 1 178 1 124 2 23 1 71 1 142 1 349 1 242 1 16 1 93 1 143 1 
276 1 98 1 280 2 319 1 173 1 331 1 226 1 165 1 178 1 71 1 274 1 142 1 93 1 
174 1 259 1 251 1 345 1 318 1 122 1 123 1 124 1 16 1 
259 1 53 1 36 1 
252 1 251 1 259 1 122 1 6 1 
259 1 340 2 156 1 25 1 293 1 36 1 38 1 6 2 252 1 285 1 251 2 268 1 255 1 122 2 139 1 53 1 219 2 231 1 8 1 
360 1 172 1 84 1 225 1 
197 1 360 1 84 1 218 1 58 1 225 1 339 1 
110 1 111 1 197 1 
84 1 58 3 235 1 225 1 372 1 197 3 314 1 313 1 360 1 218 1 73 2 339 1 
197 2 15 1 360 1 84 1 159 1 218 1 58 2 225 1 339 1 
321 1 197 1 372 1 22 1 368 1 218 1 151 1 58 1 225 1 119 1 339 1 
197 1 372 1 84 1 218 1 58 1 225 1 339 1 
197 1 372 1 360 1 84 2 218 1 58 1 339 1 
84 1 58 2 225 1 372 1 197 2 286 1 348 1 218 2 376 1 339 2 
84 1 159 2 58 3 66 1 250 1 119 1 225 2 372 1 197 3 360 1 218 1 339 1 291 1 
180 1 305 1 84 1 159 1 58 2 225 1 321 2 372 1 197 2 298 1 22 1 360 1 218 1 151 1 339 1 
366 1 84 1 159 2 58 4 66 1 119 1 225 2 372 1 197 4 15 1 360 1 218 2 339 2 
197 1 372 1 360 1 84 1 218 1 58 1 225 1 339 1 
84 2 159 2 235 1 58 4 66 1 119 1 225 3 121 1 197 4 313 1 360 2 218 1 73 1 339 1 
74 1 84 1 159 1 58 2 225 1 372 1 197 2 360 1 218 1 378 1 91 1 339 1 
84 1 58 3 235 2 225 1 372 1 197 3 228 1 313 1 360 1 218 1 73 2 339 1 
102 1 191 1 324 2 225 2 
197 1 372 1 218 1 58 1 48 1 339 1 
197 2 372 1 360 1 84 1 159 1 218 1 58 2 225 1 250 1 339 1 
351 1 
197 1 372 1 360 1 84 1 218 1 58 1 225 1 339 1 
159 1 84 1 58 3 225 1 250 1 372 1 197 3 360 1 218 1 73 1 339 1 
121 1 66 1 225 1 119 1 
84 1 225 1 

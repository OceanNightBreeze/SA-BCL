#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 323 17 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 2 220 3 232 1 187 3 234 2 279 1 45 2 20 1 8 1 115 1 316 1 170 1 54 1 
26 1 44 2 232 1 306 1 187 9 234 5 45 2 31 1 72 2 95 1 213 1 8 1 192 1 77 1 316 6 53 1 168 1 170 2 54 1 318 2 14 2 319 2 220 9 279 4 284 1 20 3 115 1 66 1 
26 1 44 2 232 1 306 1 187 9 234 5 45 2 31 1 72 2 95 1 213 1 8 1 192 1 77 1 316 6 53 1 168 1 170 2 54 1 318 2 14 2 319 2 220 9 279 4 284 1 20 3 115 1 66 1 
26 1 44 2 232 1 306 1 187 10 234 6 45 2 31 1 72 2 95 1 213 1 8 1 192 1 77 1 316 7 53 1 168 1 170 2 54 1 318 2 14 2 319 2 220 10 279 5 284 1 20 4 115 1 66 1 
26 1 44 2 232 1 306 1 187 7 234 4 45 2 31 1 72 2 95 1 8 1 192 1 77 1 316 4 53 1 168 1 170 2 54 1 318 2 14 1 319 2 220 7 279 3 284 1 20 2 115 1 66 1 
318 1 14 2 220 4 319 1 44 1 232 1 187 4 234 3 279 2 45 1 72 1 213 1 284 1 20 1 8 1 316 3 168 1 54 1 
318 1 220 2 44 1 232 1 234 1 187 2 29 1 45 1 31 1 92 1 72 1 8 1 139 1 53 1 170 1 54 1 
14 2 318 2 319 1 220 9 44 1 232 1 234 5 187 9 279 4 45 2 236 1 72 1 213 1 284 1 20 3 8 1 77 1 115 1 66 1 316 7 168 1 149 1 170 1 54 1 
14 2 318 2 319 1 220 9 44 1 232 1 234 5 187 9 279 4 45 2 236 1 72 1 213 1 284 1 20 3 8 1 77 1 115 1 66 1 316 7 168 1 149 1 170 1 54 1 
1 1 249 1 331 1 277 1 320 1 260 1 199 1 210 1 263 1 343 1 358 1 6 1 21 1 150 1 
366 1 
1 1 277 2 6 2 366 1 52 1 215 1 270 1 47 1 
36 2 174 1 1 2 277 5 366 1 106 2 161 1 355 1 280 1 47 2 337 1 6 5 253 1 52 1 215 1 65 1 180 1 123 1 379 2 
366 1 215 1 101 1 
366 1 112 2 9 1 
343 2 358 1 233 1 320 2 21 2 199 2 150 2 263 2 
233 1 90 2 188 1 259 1 93 1 263 2 51 1 310 1 358 1 239 1 267 1 268 1 338 1 243 1 166 2 104 2 169 1 150 3 55 1 217 1 219 1 194 1 320 2 176 1 199 2 58 1 224 1 343 2 110 2 63 1 326 1 21 3 87 1 23 1 25 1 184 2 206 1 
343 1 358 1 249 1 331 1 320 1 21 1 199 1 260 1 150 1 263 1 
249 1 277 1 366 1 333 1 199 1 357 1 19 1 241 1 6 1 215 1 21 1 347 1 257 1 150 1 
277 2 249 1 320 1 366 1 333 1 199 1 263 1 343 1 357 1 241 1 6 2 215 1 21 1 347 1 150 1 
1 1 277 1 164 1 6 1 47 1 
1 1 208 1 277 2 6 2 366 1 52 1 215 1 47 1 
277 1 6 1 47 1 
246 1 320 1 233 2 199 2 71 1 263 1 343 1 21 2 150 2 
167 1 223 1 97 1 
194 1 233 1 90 1 259 1 93 1 58 1 110 1 268 1 267 1 243 1 21 1 87 1 150 1 206 1 184 1 12 1 
287 1 28 1 320 4 233 1 199 5 71 1 263 4 343 1 325 1 21 5 34 2 257 1 150 5 11 1 
249 1 331 1 320 2 190 1 21 2 199 2 150 2 263 2 
233 1 101 1 
194 1 28 1 320 1 90 1 259 1 93 1 199 1 58 1 263 1 110 1 267 1 268 1 243 1 21 2 87 1 34 1 167 1 150 2 206 1 184 1 
343 1 233 1 320 3 21 3 34 1 199 3 150 3 263 3 
249 1 331 1 320 1 21 1 199 1 150 1 263 1 
343 1 246 1 249 1 320 1 21 1 199 1 71 1 150 1 263 1 
28 1 233 1 333 1 90 1 188 1 259 1 93 1 307 1 71 1 263 3 51 1 357 1 358 1 239 1 267 1 268 1 241 1 6 1 338 1 243 1 166 2 34 1 104 1 169 1 150 4 55 1 219 1 194 1 79 1 249 1 277 1 320 3 199 3 58 1 343 2 110 1 63 1 326 1 21 4 87 1 347 1 25 1 206 1 184 1 
287 1 233 1 320 1 21 2 34 1 199 2 257 1 150 2 263 1 
79 1 277 1 249 1 28 1 320 3 366 1 333 1 127 1 71 1 199 3 263 3 343 1 357 1 6 1 241 1 21 3 34 2 347 1 150 3 
320 2 71 1 199 2 97 1 263 2 343 1 21 2 34 1 167 1 150 2 
194 1 233 1 90 1 259 1 93 1 58 1 110 1 268 1 267 1 243 1 21 1 87 1 150 1 206 1 184 1 
194 1 233 1 90 1 93 1 110 1 99 1 313 1 268 1 267 1 243 1 21 1 87 1 150 1 206 1 184 1 
209 1 188 1 335 1 97 2 98 1 51 2 5 1 239 1 166 2 272 1 167 2 104 4 55 1 219 1 15 1 298 1 223 2 224 2 371 1 63 1 254 1 326 1 229 1 380 1 
357 1 249 1 320 1 190 1 21 1 199 1 150 1 263 1 
145 1 374 1 134 1 
359 1 374 2 134 2 160 1 345 1 304 1 
374 1 134 1 
374 1 134 1 
359 1 345 1 
359 1 345 1 
359 1 345 1 
374 1 134 1 329 1 
374 1 134 1 329 1 
374 1 134 1 329 1 
373 1 374 1 134 1 
373 1 374 1 134 1 
373 1 374 1 134 1 
159 1 233 1 68 1 96 1 263 2 4 1 6 1 145 1 242 1 150 2 125 1 277 1 320 2 80 1 199 2 60 1 285 1 374 1 134 1 327 1 21 2 22 1 88 1 138 1 
274 1 56 1 277 2 2 1 80 2 160 1 366 1 141 1 322 1 96 2 82 1 60 2 134 2 374 2 6 2 242 1 327 3 22 2 317 2 
319 1 44 2 42 2 92 1 153 1 
319 1 44 1 72 1 
44 1 92 1 72 1 
319 2 44 3 203 1 42 1 92 1 153 1 
319 1 44 2 42 1 299 1 92 1 153 1 
1 4 355 2 261 1 47 1 94 1 356 1 98 1 5 1 6 5 52 1 215 1 102 2 9 1 125 1 15 1 36 1 174 1 277 5 366 2 106 1 198 1 280 3 201 2 285 1 112 3 254 1 255 1 183 1 379 1 138 1 352 2 351 1 
1 6 332 4 355 4 47 5 94 2 308 1 98 2 5 2 164 4 6 8 214 1 52 1 215 1 102 4 9 2 295 1 124 1 15 2 36 2 174 1 277 8 366 4 106 2 198 1 280 6 375 1 112 6 254 2 65 1 183 2 138 4 379 2 352 4 351 2 116 1 
1 2 331 1 355 2 260 1 261 1 94 1 263 1 210 1 98 1 358 1 5 1 6 3 215 1 102 2 9 2 150 1 15 1 36 1 249 1 277 3 320 1 366 3 106 1 199 1 280 3 343 1 201 1 254 1 112 4 21 1 65 1 255 1 379 1 138 1 183 1 351 1 352 2 
1 1 355 2 261 1 94 1 98 1 5 1 6 2 102 2 9 2 124 1 15 1 36 1 277 2 366 2 106 1 280 3 201 1 112 4 254 1 65 1 255 1 379 1 138 1 183 1 352 2 351 1 
84 1 
267 1 243 1 87 1 
87 1 282 1 
62 1 87 1 101 1 
27 1 87 1 
243 1 87 1 
62 2 267 1 243 1 87 3 157 1 156 1 
89 1 15 1 91 1 339 1 178 1 162 1 224 4 51 3 98 1 227 1 314 1 303 1 315 1 349 2 104 7 229 3 172 1 380 2 
89 1 288 1 91 2 188 1 162 5 189 1 238 4 51 15 98 4 5 3 314 1 7 3 166 2 315 1 216 1 104 31 172 2 55 1 219 1 15 4 339 1 178 2 340 1 222 1 59 1 224 16 227 2 254 3 326 1 181 1 183 3 349 3 229 10 380 5 
186 1 91 1 188 2 290 1 162 1 98 1 51 4 314 1 166 4 315 1 104 9 172 1 55 2 219 2 15 1 178 1 339 1 224 5 227 1 326 2 181 1 349 2 229 4 380 3 
89 1 15 1 91 1 339 1 178 1 162 1 224 4 51 3 98 1 227 1 314 1 315 1 349 2 104 7 229 3 172 1 380 2 
89 1 15 1 91 1 339 1 178 1 162 1 224 4 51 3 98 1 227 1 314 1 315 1 349 2 104 7 229 3 172 1 380 2 
194 1 318 1 220 1 90 1 187 1 128 1 45 1 93 1 336 2 212 2 110 1 100 1 243 1 87 1 137 1 346 1 348 1 182 2 170 2 361 1 206 1 184 1 151 1 
44 2 232 1 90 1 187 1 119 1 45 1 93 1 92 1 72 1 46 1 262 1 336 1 212 1 293 1 170 1 194 1 318 1 247 1 319 1 220 1 276 1 110 1 203 1 328 1 182 1 184 1 
44 2 232 1 90 1 234 1 187 2 119 1 45 1 93 1 92 1 72 1 262 1 336 1 212 1 8 1 293 1 316 1 170 1 54 1 194 1 318 1 247 1 319 1 220 2 276 1 110 1 132 1 203 1 328 1 182 1 184 1 
44 2 90 1 234 1 187 3 119 1 45 1 93 1 92 1 72 1 46 1 262 1 336 1 212 1 8 1 293 1 316 2 170 1 54 1 194 1 318 1 247 1 319 1 220 3 197 1 110 1 203 1 328 1 348 1 182 1 184 1 
44 2 90 1 234 1 187 2 119 1 93 1 92 1 46 1 262 1 72 1 336 1 212 1 8 1 316 2 170 1 54 1 194 1 220 2 319 1 197 1 110 1 203 1 328 1 182 1 184 1 
133 1 
185 1 330 1 90 2 3 1 333 1 93 1 47 6 94 1 49 1 100 1 292 2 291 4 6 5 241 1 243 1 52 3 9 2 103 1 150 1 194 1 248 2 249 1 106 1 199 1 110 2 19 1 112 2 21 1 347 1 206 2 257 1 355 2 73 1 211 1 264 1 357 1 311 1 215 1 122 2 273 2 364 2 36 1 174 1 277 5 177 1 366 2 128 1 221 2 280 2 129 2 225 1 83 1 87 1 379 1 184 2 
3 1 333 1 47 2 49 1 211 1 357 1 311 1 291 2 6 3 241 1 52 1 270 1 150 1 277 3 249 1 221 1 199 1 225 1 19 1 21 1 347 1 257 1 
3 1 333 1 47 1 49 1 211 1 357 1 311 1 291 3 6 3 241 1 52 1 215 1 270 1 150 1 364 1 277 3 249 1 366 1 199 1 225 1 19 1 21 1 347 1 257 1 
3 1 333 1 47 2 49 1 211 1 357 1 311 1 291 3 6 3 241 1 52 1 270 1 215 1 122 1 150 1 364 1 277 3 249 1 366 1 221 1 199 1 225 1 19 1 21 1 347 1 257 1 
331 1 3 1 333 1 260 1 47 2 49 1 263 1 210 1 211 1 358 1 357 1 311 1 291 2 6 3 241 1 52 1 215 1 270 1 122 1 150 2 277 3 249 2 320 1 366 1 221 1 199 2 343 1 225 1 19 1 21 2 347 1 378 1 257 1 
330 1 333 1 3 1 47 4 49 1 291 4 292 2 241 1 6 4 52 2 9 2 150 1 249 1 248 2 106 1 199 1 19 1 112 2 21 1 347 1 257 1 355 1 211 1 357 1 311 1 215 1 122 2 273 2 36 1 364 2 174 1 277 4 177 1 366 2 221 2 280 1 129 2 225 1 83 1 379 1 
330 1 3 1 333 1 355 1 47 4 49 1 211 1 163 1 357 1 311 1 292 2 291 4 6 4 241 1 52 2 215 1 122 2 9 2 273 2 150 1 364 2 36 1 174 1 248 2 277 4 249 1 366 1 106 1 221 2 38 1 280 1 199 1 129 2 225 1 83 1 19 1 21 1 286 1 347 1 379 1 257 1 
330 1 3 1 333 1 355 1 47 4 49 1 211 1 163 1 357 1 311 1 292 2 291 4 6 4 241 1 52 2 215 1 122 2 9 2 273 2 150 1 364 2 36 1 174 1 248 2 277 4 249 1 366 1 106 1 221 2 38 1 280 1 199 1 129 2 225 1 83 1 19 1 21 1 286 1 347 1 379 1 257 1 
353 1 330 1 3 1 333 1 355 1 70 2 120 1 47 4 49 1 211 1 75 2 163 1 357 1 311 1 291 4 6 4 241 1 52 2 215 1 122 2 273 2 150 1 218 1 364 2 36 1 174 1 248 2 277 4 249 1 366 1 106 1 221 2 280 1 199 1 225 1 19 1 112 2 21 1 347 1 379 1 257 1 
330 1 3 1 333 1 355 1 47 5 49 1 211 1 163 1 357 1 311 1 292 2 291 5 6 4 241 1 52 2 215 1 122 3 9 2 273 2 150 1 36 1 364 3 174 1 248 2 277 4 249 1 366 1 106 1 38 1 221 3 280 1 199 1 129 2 225 1 83 1 19 1 113 1 21 1 286 1 347 1 379 1 257 1 
330 1 3 1 333 1 355 1 47 5 49 1 211 1 163 1 357 1 311 1 292 2 291 5 6 4 241 1 52 2 215 1 122 3 9 2 273 2 150 1 36 1 364 3 174 1 248 2 277 4 249 1 366 1 106 1 38 1 221 3 280 1 199 1 129 2 225 1 83 1 19 1 113 1 21 1 286 1 347 1 379 1 257 1 
330 1 333 1 3 1 47 4 49 1 291 4 241 1 6 4 52 2 150 1 249 1 248 2 106 1 199 1 19 1 112 2 21 1 347 1 257 1 355 1 70 2 211 1 75 2 357 1 311 1 215 1 122 2 273 2 218 1 36 1 364 2 174 1 277 4 177 1 366 1 221 2 280 1 225 1 379 1 
209 1 90 8 142 1 188 2 30 1 93 2 46 1 263 1 51 1 310 2 239 2 100 1 243 2 34 1 166 4 104 2 169 1 150 1 245 1 55 2 194 2 219 2 217 1 320 1 128 1 199 1 369 1 130 1 224 1 283 1 110 8 132 1 63 2 326 2 21 1 87 3 184 7 206 2 158 1 
231 1 188 1 71 1 97 1 263 1 98 1 51 2 5 1 239 1 166 2 167 1 104 3 150 1 55 1 219 1 15 1 297 1 320 1 223 1 199 1 224 1 343 1 63 1 254 1 326 1 21 1 183 1 229 1 380 1 
209 1 233 2 91 1 188 1 97 1 98 1 51 3 239 1 314 1 101 1 166 2 167 1 315 1 104 6 172 1 55 1 219 1 15 1 339 1 223 1 224 3 63 1 326 1 349 1 229 2 380 2 
233 1 188 2 162 1 97 4 238 3 51 6 98 2 5 1 239 1 7 3 271 1 166 4 167 11 148 1 169 1 104 14 55 2 217 1 13 1 219 2 15 1 297 1 222 1 223 11 340 1 224 8 63 2 254 2 179 1 326 2 183 2 229 2 380 1 
28 1 233 1 90 1 188 1 259 1 93 1 97 1 263 1 51 1 239 1 267 1 268 1 243 1 34 1 166 2 169 1 104 2 150 2 12 1 55 1 194 1 219 1 217 1 35 1 297 1 320 1 199 1 58 1 224 1 110 1 324 1 63 1 326 1 21 2 87 1 256 1 184 1 206 1 
233 2 90 3 91 1 188 3 93 2 46 1 48 1 97 7 51 10 98 3 5 2 239 3 243 2 104 20 150 3 10 2 55 3 194 2 15 3 297 1 339 1 199 1 58 2 110 3 63 3 202 2 254 2 21 3 25 2 349 1 206 1 258 1 28 1 354 2 259 2 162 4 263 1 268 2 267 2 314 1 166 6 34 1 315 1 167 7 169 1 172 1 217 1 219 3 320 1 368 1 223 7 224 10 326 3 85 2 87 2 183 2 184 3 229 8 380 4 
219 1 209 1 188 1 223 1 162 1 97 1 224 2 98 1 239 1 63 1 254 1 326 1 166 2 272 1 167 1 104 2 229 1 55 1 
219 1 15 1 209 1 188 1 298 1 223 1 97 1 51 2 5 1 239 1 63 1 326 1 166 2 167 1 104 2 229 1 380 1 55 1 
209 1 188 1 162 1 97 2 98 1 51 2 5 1 239 1 166 2 167 2 104 4 55 1 219 1 15 1 223 2 224 2 63 1 254 1 326 1 183 1 229 2 380 1 
219 1 188 1 223 1 369 1 162 1 97 1 224 2 98 1 239 1 63 1 254 1 326 1 166 2 272 1 167 1 104 2 229 1 55 1 
219 1 15 1 188 1 298 1 223 1 369 1 97 1 51 2 5 1 239 1 63 1 326 1 166 2 167 1 104 2 229 1 380 1 55 1 
188 1 162 1 97 2 98 1 51 2 5 1 239 1 166 2 167 2 104 4 55 1 219 1 15 1 369 1 223 2 224 2 63 1 254 1 326 1 183 1 229 2 380 1 
219 1 15 1 188 1 223 2 162 1 97 2 224 2 51 2 98 1 5 1 239 1 63 1 254 1 326 1 166 2 167 2 183 1 104 4 229 2 380 1 55 1 
233 1 90 1 188 1 259 1 93 1 51 1 239 1 267 1 268 1 243 1 166 2 104 2 169 1 150 1 55 1 217 1 194 1 219 1 58 1 224 1 110 1 63 1 326 1 21 1 87 1 25 1 184 1 206 1 
233 1 90 1 188 1 93 1 51 1 99 1 239 1 267 1 268 1 313 1 243 1 166 2 104 2 169 1 150 1 55 1 217 1 194 1 219 1 224 1 40 1 110 1 63 1 326 1 21 1 87 1 184 1 206 1 
188 1 162 1 97 2 98 1 51 2 5 1 239 1 166 2 167 2 104 4 55 1 219 1 15 1 297 1 223 2 224 2 63 1 254 1 326 1 183 1 229 2 380 1 
90 1 188 1 259 1 93 1 162 1 97 2 51 2 98 1 5 1 239 1 267 1 268 1 243 1 166 2 167 2 104 4 150 1 55 1 194 1 219 1 15 1 223 2 58 1 224 2 110 1 132 1 202 1 63 1 254 1 326 1 21 1 87 1 25 1 183 1 229 2 184 1 380 1 
188 1 71 1 162 1 97 1 263 1 51 1 98 1 5 1 239 1 166 2 167 1 104 3 150 1 55 1 219 1 15 1 297 1 320 1 199 1 223 1 224 2 343 1 344 1 63 1 254 1 326 1 21 1 183 1 229 1 
188 2 235 1 290 1 162 3 238 2 51 10 98 3 5 3 312 1 7 1 166 4 104 19 55 2 219 2 15 3 278 2 222 1 340 1 370 1 17 1 224 9 323 2 18 1 254 3 326 2 135 1 377 1 183 3 229 6 380 3 
188 3 290 1 162 1 238 2 51 11 98 3 143 1 5 2 312 1 7 2 191 1 360 1 166 6 104 24 55 3 219 3 15 2 78 1 195 1 278 3 222 2 370 2 17 1 224 13 39 1 323 1 18 1 254 3 326 3 181 2 377 2 183 3 229 2 380 1 
305 1 188 3 290 1 162 3 238 4 51 17 98 4 143 1 5 4 312 1 191 1 7 3 360 1 166 6 104 32 55 3 219 3 78 1 15 4 195 1 278 3 222 3 340 1 370 1 17 1 224 15 39 1 323 1 18 1 254 4 326 3 135 1 181 1 377 2 183 4 229 5 380 2 
305 1 188 4 290 1 162 3 238 4 51 16 98 4 143 1 5 3 312 1 191 1 7 3 360 1 166 8 104 33 55 4 219 4 78 1 15 3 195 1 278 4 222 3 340 1 370 1 17 1 224 17 39 1 323 1 18 1 254 4 326 4 135 1 181 2 377 2 183 4 229 6 380 3 
91 1 188 2 290 1 162 6 238 4 51 22 98 7 143 1 5 6 312 1 314 1 191 1 7 4 360 1 166 4 315 1 104 46 172 1 55 2 13 2 219 2 78 1 15 7 195 1 278 3 339 1 222 2 340 2 370 1 17 1 224 24 39 1 323 1 18 1 254 6 326 2 181 1 377 1 183 6 349 1 229 12 380 6 
56 1 60 1 2 1 80 1 374 1 134 1 160 1 22 1 50 1 96 1 
159 1 145 1 
131 1 60 1 144 1 80 1 374 1 134 1 69 1 22 1 96 1 
329 1 24 1 
230 1 373 1 304 1 
274 1 56 1 277 1 2 1 80 1 160 1 366 1 141 1 96 1 82 1 60 1 6 1 134 1 374 1 242 1 327 2 22 1 317 1 
274 1 56 1 277 1 2 1 80 1 160 1 366 1 141 1 96 1 82 1 60 1 6 1 134 1 374 1 242 1 327 2 22 1 317 1 
274 1 56 1 277 1 2 1 80 1 160 1 366 1 141 1 96 1 82 1 60 1 6 1 134 1 374 1 242 1 327 2 22 1 317 1 
329 1 24 1 304 1 
329 1 24 1 304 1 
230 1 373 1 
230 1 373 1 304 1 
4 1 68 1 
159 1 1 1 233 1 68 1 141 1 96 1 263 2 4 1 6 1 145 1 269 1 317 1 150 2 125 1 277 1 80 1 320 2 199 2 60 1 285 1 374 1 134 1 21 2 327 1 22 1 88 1 138 1 
90 2 188 1 30 1 93 1 33 1 51 1 310 2 265 1 239 1 243 1 166 2 104 2 169 1 150 2 55 1 194 1 219 1 217 1 297 1 16 1 199 2 130 1 224 1 110 2 226 1 63 1 326 1 41 1 21 2 87 1 184 2 
194 1 250 1 90 1 128 1 93 1 212 1 110 1 100 1 243 1 87 1 165 1 206 1 184 1 361 1 
194 1 247 1 319 1 44 2 250 1 90 1 119 1 92 1 281 1 93 1 72 1 46 1 309 1 212 1 110 1 203 1 328 1 184 1 
194 1 247 1 319 1 44 2 250 1 90 2 119 1 92 1 93 1 281 1 72 1 46 1 309 1 212 1 110 2 132 1 203 1 328 1 184 2 
194 1 247 1 319 1 44 2 90 1 119 1 92 1 281 1 93 1 72 1 46 1 212 1 372 1 110 1 203 1 328 1 184 1 
193 1 
36 1 174 1 366 1 106 1 161 1 355 1 280 1 215 1 123 1 379 1 
15 2 366 5 107 1 355 5 289 2 280 5 98 2 5 2 254 2 112 10 85 1 102 5 183 2 9 5 352 5 
277 1 6 1 366 1 52 1 215 1 47 1 
185 2 90 4 355 2 93 1 94 2 47 4 264 1 100 1 6 3 243 1 52 2 103 1 171 1 194 1 36 2 275 2 174 1 277 3 106 2 128 1 321 1 280 2 110 4 65 1 87 1 379 2 184 4 206 2 43 1 
366 1 215 1 161 1 355 1 101 1 123 1 280 1 
36 1 174 1 277 1 366 2 106 1 355 1 280 1 47 1 129 1 83 1 292 1 6 1 112 1 52 1 215 1 379 1 9 1 
185 1 90 3 289 2 93 3 334 2 94 2 47 5 237 1 98 2 5 2 240 2 241 2 6 5 243 3 52 3 102 6 9 6 194 4 15 2 106 4 107 2 152 1 300 2 110 3 62 2 154 2 112 12 254 2 114 1 157 1 204 2 206 1 352 6 117 2 27 3 161 1 355 8 267 3 215 2 123 1 171 1 36 4 275 1 174 4 277 5 366 8 280 9 282 2 132 1 85 2 87 10 379 4 183 2 184 3 
355 4 289 1 47 1 238 1 98 2 143 1 5 2 6 1 52 1 191 1 7 1 215 1 360 1 102 5 9 3 36 2 78 1 15 2 174 2 277 1 366 4 106 2 280 7 222 1 39 1 112 6 254 2 228 1 379 2 183 2 352 5 
0 1 331 1 91 1 355 2 289 2 260 1 210 1 263 1 98 2 358 1 6 1 150 1 172 1 36 1 15 1 174 1 249 1 277 1 320 1 106 1 107 1 339 1 38 1 280 2 199 1 343 1 21 1 379 1 
233 1 90 1 188 1 259 1 93 1 263 2 51 1 358 1 239 1 268 1 267 1 338 1 243 1 166 2 104 1 169 1 150 3 55 1 219 1 194 1 320 2 199 2 58 1 343 2 110 1 63 1 326 1 21 3 87 1 25 1 184 1 206 1 
36 1 185 1 174 1 366 4 106 1 355 2 280 1 94 1 112 4 215 2 102 2 9 2 379 1 349 1 352 2 
4 1 2 1 80 1 205 1 96 1 
80 1 76 1 96 1 
80 1 76 1 96 1 
80 1 76 1 96 1 
296 1 80 1 96 1 
296 1 80 1 96 1 
296 1 80 1 96 1 
80 1 96 1 
374 1 134 1 
219 1 15 2 0 1 91 2 339 1 188 1 290 1 162 2 224 5 51 5 98 2 326 1 166 2 104 10 172 2 229 5 55 1 380 3 
219 1 188 1 290 1 162 1 224 2 98 1 254 1 326 1 166 2 104 2 229 1 55 1 
219 1 15 1 188 1 290 1 162 1 224 2 51 2 98 1 5 1 254 1 326 1 166 2 183 1 104 4 229 2 380 1 55 1 
219 3 91 1 188 3 290 1 162 1 224 1 51 2 326 3 135 1 181 1 166 6 350 1 104 3 172 1 229 2 55 3 380 1 
288 1 91 3 188 5 290 1 162 5 189 1 238 4 51 18 98 5 5 3 314 1 7 3 166 10 315 1 104 34 172 3 55 5 219 5 15 5 339 2 222 1 340 1 59 1 224 16 111 1 254 3 326 5 135 1 181 2 183 3 349 1 350 1 229 12 380 7 
219 2 15 1 91 1 339 1 188 2 162 1 224 4 98 1 51 4 326 2 314 1 181 1 166 4 315 1 349 1 104 8 229 3 172 1 380 2 55 2 
15 1 91 1 339 1 224 3 51 3 98 1 314 1 101 1 315 1 349 1 104 6 172 1 229 2 380 2 
219 1 15 1 188 1 162 1 224 2 51 2 98 1 5 1 111 1 254 1 326 1 166 2 183 1 104 4 229 2 380 1 55 1 
15 1 222 1 340 1 162 1 224 3 238 2 51 4 98 1 5 1 254 1 7 1 183 1 104 7 229 2 380 1 
91 2 188 2 162 4 238 2 98 3 51 12 5 2 314 1 7 2 166 4 315 1 104 23 172 2 55 2 13 1 219 2 15 3 339 1 340 1 224 11 254 2 179 1 326 2 181 2 183 2 349 1 350 1 229 9 380 5 
238 1 51 1 104 1 
7 1 104 1 224 1 
219 1 15 1 188 1 162 1 224 3 51 3 98 1 5 1 111 1 254 1 326 1 85 1 166 2 183 1 104 6 229 3 55 1 380 2 
188 1 290 1 162 1 238 1 51 6 98 2 5 2 143 1 7 1 191 1 360 1 166 2 104 12 55 1 219 1 78 1 15 2 222 1 224 6 39 1 254 2 326 1 183 2 229 2 380 1 
15 1 91 1 339 1 162 1 224 3 98 1 51 3 104 6 172 1 229 2 380 1 
219 1 91 1 188 1 162 1 224 1 51 2 326 1 314 1 181 1 166 2 315 1 350 1 104 3 229 2 172 1 380 1 55 1 
91 1 188 1 290 1 238 1 98 1 51 4 314 1 7 1 191 1 166 2 315 1 104 8 172 1 55 1 219 1 15 1 339 1 222 1 224 4 326 1 349 1 229 2 380 2 
91 1 188 2 290 1 162 1 238 2 51 5 98 2 314 1 191 1 7 1 166 4 315 1 104 11 172 1 55 2 219 2 15 1 339 1 222 1 340 1 224 6 111 1 254 1 326 2 183 1 349 1 229 3 380 2 
188 3 290 1 162 1 238 1 51 7 98 2 5 2 143 1 7 1 191 1 360 1 166 6 104 13 55 3 219 3 78 1 15 2 222 1 224 6 39 1 111 1 254 2 326 3 181 1 183 2 229 2 380 1 
188 3 290 1 162 1 238 1 51 4 98 2 5 1 143 1 7 1 191 1 360 1 166 6 104 11 55 3 219 3 78 1 15 1 222 1 224 7 39 1 111 1 254 2 326 3 181 1 183 2 229 2 380 1 
91 1 188 1 290 1 238 1 98 1 51 4 314 1 7 1 191 1 166 2 315 1 104 8 172 1 55 1 219 1 15 1 339 1 222 1 224 4 326 1 349 1 229 2 380 2 
188 1 290 1 162 1 238 1 51 6 98 2 5 2 143 1 7 1 191 1 360 1 166 2 104 12 55 1 219 1 78 1 15 2 222 1 224 6 39 1 254 2 326 1 183 2 229 2 380 1 
188 4 290 1 162 1 238 1 51 5 98 2 143 1 5 1 191 1 7 1 360 1 166 8 104 12 55 4 219 4 78 1 15 1 222 1 224 7 39 1 111 1 254 2 326 4 181 2 183 2 229 2 380 1 
188 4 290 1 162 2 238 1 51 5 98 2 143 1 5 1 191 1 7 1 360 1 166 8 104 12 55 4 219 4 78 1 15 1 222 1 224 7 39 1 254 2 326 4 135 1 181 2 183 2 229 4 380 2 
15 1 91 3 339 1 162 3 224 3 51 4 98 1 314 1 315 2 104 7 172 3 229 6 380 3 
188 4 290 1 162 1 238 1 51 5 98 2 143 1 5 1 191 1 7 1 360 1 166 8 104 12 55 4 219 4 78 1 15 1 222 1 224 7 39 1 254 2 326 4 135 1 181 2 183 2 229 2 380 1 
287 1 233 1 21 1 244 1 199 1 150 1 257 1 
126 1 287 1 175 1 233 1 121 1 199 1 302 1 155 1 21 1 244 1 257 1 150 1 
194 1 57 1 90 4 128 1 93 1 110 4 132 1 100 1 243 1 86 1 87 1 206 1 184 4 
362 1 194 2 275 1 173 1 365 1 90 2 93 1 48 1 110 2 267 1 64 1 243 1 87 1 184 2 
194 1 110 1 44 1 90 1 328 1 92 1 93 1 72 1 184 1 206 1 
194 1 90 2 30 1 93 1 46 1 110 2 132 1 265 1 243 1 87 1 184 2 
194 2 275 1 90 5 128 1 142 1 30 1 93 2 110 5 100 1 132 1 243 2 86 1 87 3 206 1 184 4 245 1 
194 2 275 1 90 5 196 1 128 1 142 1 30 1 93 2 110 5 100 1 132 1 243 2 86 1 87 3 206 1 184 4 
194 1 233 1 320 1 90 1 199 1 93 1 263 1 110 1 99 1 267 1 268 1 243 1 21 2 87 1 34 1 150 2 206 1 184 1 
194 2 275 1 365 1 90 1 118 1 93 1 110 1 267 1 64 1 243 1 157 1 87 1 184 1 
194 1 110 1 100 1 90 1 243 1 128 1 87 1 101 1 93 1 184 1 206 1 
194 1 233 1 320 1 90 1 199 1 93 1 58 1 263 1 110 1 267 1 268 1 243 1 21 2 87 1 34 1 150 2 206 1 184 1 
233 1 90 1 333 1 93 1 263 1 357 1 268 1 267 2 243 2 34 1 150 2 194 1 275 1 249 1 320 2 199 2 300 1 58 1 282 1 110 1 21 2 87 3 184 1 
233 1 90 2 333 1 93 1 263 1 357 1 99 1 268 1 267 2 243 2 34 1 150 2 194 1 275 1 57 1 249 1 320 2 199 2 300 1 282 1 110 2 21 2 87 3 184 2 
27 1 67 1 90 3 93 1 47 1 6 2 267 1 241 1 243 1 215 1 194 1 275 1 57 1 277 2 366 1 300 1 301 1 282 1 110 3 62 1 87 4 184 3 206 1 
194 1 275 1 57 1 277 2 27 1 366 1 90 3 300 1 93 1 47 1 282 1 110 3 62 1 241 1 267 1 6 2 243 1 215 1 204 1 87 4 206 1 184 3 
194 1 283 1 110 1 90 1 93 1 184 1 
194 3 365 1 90 7 118 1 142 1 30 1 93 2 46 1 310 1 283 1 110 7 132 1 267 1 64 1 243 2 157 1 87 3 206 2 184 6 245 1 158 1 
233 2 90 1 91 1 188 2 259 1 93 1 33 1 97 1 263 1 51 3 98 1 239 2 267 1 268 1 314 1 243 1 34 1 166 4 167 1 315 1 104 6 172 1 150 2 10 1 55 2 194 1 219 2 15 1 297 1 320 1 339 1 223 1 199 1 58 1 224 3 110 1 132 1 63 2 202 1 326 2 21 2 87 1 25 1 349 1 229 2 184 1 380 2 
1 1 27 1 90 1 161 1 355 1 334 1 47 2 240 1 6 3 241 1 52 1 215 1 123 1 171 1 36 2 174 2 277 3 366 1 106 2 280 1 110 1 62 1 154 1 204 1 87 2 379 2 184 1 206 1 
194 2 90 2 152 1 93 1 283 1 110 2 132 1 62 1 267 1 243 1 157 1 87 2 184 2 
74 1 233 1 105 1 108 1 341 1 
79 1 1 1 249 1 277 2 233 1 366 1 333 1 251 1 105 2 108 2 341 1 342 1 109 1 74 2 357 1 241 1 6 2 215 1 347 1 
16 1 199 1 108 1 341 1 74 1 226 1 41 1 21 1 150 1 
251 1 342 1 341 1 
318 1 220 1 232 1 234 1 187 1 8 1 45 1 54 1 
318 1 220 4 187 4 234 3 367 1 279 1 45 1 31 1 266 1 20 1 8 2 136 1 316 2 54 2 
318 1 220 2 232 1 234 1 187 2 45 1 236 1 252 1 200 1 8 1 316 1 54 1 
363 1 318 1 220 3 232 1 234 1 187 3 367 1 45 1 31 2 8 1 136 2 54 1 
140 2 207 1 234 2 376 1 
318 1 220 1 232 1 187 1 45 1 294 1 
318 1 220 2 232 1 234 1 187 2 8 1 66 1 45 1 316 1 54 1 
32 1 
318 1 220 1 232 1 234 1 187 1 8 1 45 1 54 1 
234 1 8 1 101 1 54 1 
318 1 220 1 234 1 187 1 8 1 45 1 54 1 
220 1 182 1 170 1 
318 1 220 3 232 1 234 1 187 3 367 1 45 1 31 2 8 1 136 1 147 1 54 1 
14 1 318 1 220 2 234 1 187 2 8 1 45 1 316 1 54 1 
318 1 220 1 319 1 44 1 232 1 187 1 234 1 279 1 45 1 72 1 284 1 
318 1 220 1 232 1 234 1 187 1 8 1 45 1 
318 1 220 1 232 1 187 1 8 2 45 1 54 1 
318 2 220 2 37 1 232 1 234 1 187 2 45 2 81 1 8 1 146 1 
318 1 220 3 232 1 187 3 234 2 279 1 45 1 20 1 8 1 77 1 66 1 316 2 54 1 
318 1 220 2 319 1 44 2 232 1 234 1 187 2 45 1 92 1 72 1 61 1 203 1 8 1 316 1 54 1 
318 2 14 1 220 4 232 1 187 4 234 2 279 1 45 2 213 1 20 1 8 1 316 2 54 1 
318 1 220 3 232 1 187 3 234 1 45 1 31 1 8 1 66 1 316 1 54 1 
266 1 234 1 20 1 279 1 
234 1 8 1 

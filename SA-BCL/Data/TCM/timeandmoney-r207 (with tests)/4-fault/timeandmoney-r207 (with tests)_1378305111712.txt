#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 93 (8,38) (8,38) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 280 261 244 359 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 280 261 244 359 45 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 280 261 244 359 45 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 280 261 244 359 45 31 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 172 244 359 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 280 261 244 359 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 1 13 1 
214 1 37 1 
214 1 37 1 
214 1 37 1 
214 1 37 1 
214 1 10 1 
214 1 38 1 93 1 8 1 123 1 178 1 
214 1 113 1 
214 1 113 1 
42 1 298 1 54 1 53 1 128 1 56 1 181 1 327 1 274 1 236 1 313 1 48 1 324 1 50 1 
319 1 
220 1 319 1 366 1 313 2 42 1 362 1 148 1 54 2 
51 1 319 1 229 1 42 2 362 1 54 5 105 1 336 1 1 1 337 2 328 2 97 1 193 1 220 1 108 2 313 5 162 1 148 2 89 1 
319 1 362 1 168 1 
365 1 319 1 230 2 
274 2 236 2 7 1 53 2 128 2 324 2 327 2 50 1 
228 1 203 1 231 1 79 1 53 2 128 3 327 2 311 1 33 2 5 1 131 1 274 2 236 2 208 1 237 1 238 1 275 1 7 1 294 1 9 1 163 1 138 1 40 2 116 1 68 1 192 1 16 1 98 1 144 1 20 2 175 1 119 1 49 2 324 3 251 1 50 1 225 2 
274 1 236 1 298 1 53 1 128 1 56 1 324 1 181 1 327 1 50 1 
319 1 362 1 53 1 54 1 128 1 355 1 272 1 70 1 181 1 330 1 313 1 331 1 324 1 64 1 
319 1 362 1 53 1 54 2 128 1 272 1 70 1 327 1 181 1 330 1 274 1 236 1 313 2 324 1 64 1 
313 1 42 1 148 1 308 1 54 1 
220 1 319 1 313 2 42 1 83 1 362 1 148 1 54 2 
313 1 148 1 54 1 
255 1 53 2 128 2 327 1 274 1 236 1 7 2 209 1 324 2 
292 1 96 1 339 1 
40 1 116 1 68 1 128 1 16 1 20 1 131 1 175 1 275 1 7 1 294 1 324 1 251 1 62 1 225 1 138 1 
7 1 168 1 
40 1 116 1 68 1 96 1 53 1 128 2 16 1 327 1 131 1 20 1 175 1 301 1 257 1 274 1 275 1 294 1 324 2 251 1 225 1 138 1 
257 1 274 3 236 1 7 1 53 3 128 3 324 3 327 3 
274 1 53 1 128 1 56 1 324 1 181 1 327 1 
274 1 236 1 255 1 209 1 53 1 128 1 324 1 181 1 327 1 
228 1 231 1 255 1 79 1 53 3 54 1 128 4 272 1 327 3 181 1 311 1 33 2 131 1 330 1 274 3 257 1 236 2 237 1 275 1 313 1 7 1 294 1 86 1 9 1 163 1 90 1 138 1 64 1 40 1 116 1 68 1 192 1 16 1 70 1 144 1 20 1 175 1 301 1 119 1 49 1 324 4 251 1 50 1 225 1 
274 1 257 1 7 1 331 1 53 2 128 2 324 2 233 1 327 1 
0 1 319 1 255 1 54 1 53 3 128 3 272 1 70 1 181 1 327 3 330 1 301 1 257 2 274 3 236 1 313 1 86 1 324 3 64 1 
255 1 53 2 96 1 128 2 327 2 339 1 257 1 274 2 236 1 324 2 
40 1 116 1 68 1 128 1 16 1 20 1 131 1 175 1 275 1 7 1 294 1 324 1 251 1 225 1 138 1 
40 1 116 1 68 1 128 1 57 1 16 1 20 1 290 1 175 1 275 1 7 1 324 1 251 1 225 1 138 1 
228 1 231 1 154 1 3 1 311 1 33 2 159 1 208 2 237 2 292 2 109 1 9 1 163 1 317 1 188 1 92 1 280 1 96 2 144 1 339 2 367 1 49 4 25 1 325 1 
274 1 53 1 128 1 70 1 324 1 88 1 181 1 327 1 
255 1 53 5 128 5 233 1 327 4 21 1 301 1 6 1 257 2 274 4 236 1 331 1 7 1 324 5 
274 2 53 2 128 2 56 1 324 2 88 1 181 1 327 2 
194 1 224 1 18 1 
249 1 224 2 332 1 347 1 18 2 267 1 
224 1 18 1 
224 1 18 1 
332 1 347 1 
332 1 347 1 
332 1 347 1 
160 1 224 1 18 1 
160 1 224 1 18 1 
160 1 224 1 18 1 
126 1 224 1 18 1 
126 1 224 1 18 1 
126 1 224 1 18 1 
278 1 319 1 169 2 54 2 18 2 130 1 267 1 99 1 219 3 248 2 313 2 291 1 47 1 85 1 224 2 286 2 132 2 110 2 125 1 
54 1 53 2 128 2 327 2 274 2 313 1 291 1 7 1 210 1 110 1 211 1 240 1 166 1 169 1 264 1 18 1 174 1 219 1 248 1 194 1 286 1 224 1 324 2 200 1 
223 2 260 1 123 2 178 1 356 1 
335 1 123 1 260 1 
335 1 123 1 178 1 
223 1 260 2 123 3 178 1 368 1 356 1 
223 1 260 1 123 2 178 1 190 1 356 1 
230 3 78 1 127 1 54 5 105 2 154 1 81 1 328 1 3 1 108 1 313 5 162 1 261 1 239 2 165 1 240 1 277 2 92 1 115 2 280 1 42 4 319 2 362 1 264 1 336 3 337 1 365 1 220 1 148 1 322 1 344 1 200 1 
53 1 54 9 154 3 105 6 56 1 327 1 329 1 328 2 3 3 206 5 108 2 162 1 261 3 298 1 264 4 336 8 217 1 337 2 220 1 344 1 29 1 270 1 230 9 78 2 308 5 128 1 181 1 234 1 274 1 236 1 313 9 239 6 89 1 277 6 92 3 319 5 42 7 280 3 362 1 365 3 48 1 148 6 322 2 324 1 198 1 50 1 
230 4 78 1 127 1 54 3 154 1 105 2 328 1 3 1 108 1 313 3 261 1 239 2 165 1 89 1 277 2 92 1 115 1 319 3 42 2 280 1 362 1 264 1 336 3 337 1 365 2 322 1 
230 8 78 1 127 1 54 4 154 2 105 4 328 1 3 2 234 1 108 1 313 4 261 2 239 4 165 1 89 1 277 4 92 2 115 2 319 5 42 3 280 2 362 1 264 2 336 5 217 1 337 1 365 4 322 1 198 1 
199 1 
293 1 168 1 251 1 
251 1 273 1 
251 1 175 1 
293 2 187 1 16 1 251 3 158 1 175 1 
16 1 251 1 175 1 
251 1 157 1 
76 1 215 1 43 1 154 1 170 1 142 1 159 3 237 3 185 1 208 4 121 1 357 1 49 7 262 2 188 2 241 1 91 1 92 1 
76 1 228 1 154 4 155 1 3 3 311 1 33 2 159 10 235 1 185 2 237 15 208 16 134 4 261 3 9 1 163 1 262 3 188 5 241 1 114 1 91 2 92 4 280 3 215 1 43 2 12 1 243 1 170 1 142 2 302 1 121 5 49 31 346 1 227 3 
228 2 76 1 154 1 155 1 311 2 33 4 159 4 208 5 237 4 185 1 133 1 9 2 163 2 212 1 262 2 188 3 241 1 91 1 92 1 43 1 215 1 142 1 121 1 49 9 
76 1 215 1 43 1 154 1 170 1 142 1 159 3 237 3 185 1 208 4 121 1 49 7 262 2 188 2 241 1 91 1 92 1 
76 1 215 1 43 1 154 1 170 1 142 1 159 3 237 3 185 1 208 4 121 1 49 7 262 2 188 2 241 1 91 1 92 1 
40 1 66 1 116 1 254 1 68 1 129 1 80 1 256 2 156 2 288 2 73 2 20 1 175 1 218 1 246 1 275 1 111 1 112 1 251 1 252 1 225 1 242 1 150 1 
40 1 214 1 156 1 225 1 58 1 20 1 
40 1 214 1 52 1 156 1 225 1 20 1 
305 1 205 1 129 3 256 1 288 1 156 1 58 1 275 1 161 1 260 1 136 1 39 1 40 1 116 1 335 1 140 1 266 1 73 1 20 1 246 3 218 1 120 2 123 2 178 1 368 1 252 1 225 1 226 1 102 1 150 1 
305 1 205 1 129 2 256 1 288 1 156 1 58 1 275 1 260 1 136 1 39 1 40 1 116 1 140 1 335 1 266 1 73 1 20 1 246 2 120 2 123 2 178 1 368 1 225 1 102 1 
213 1 
254 1 54 5 53 1 105 2 326 1 328 1 330 1 108 1 331 1 259 1 162 1 112 1 61 1 295 1 64 1 263 2 116 1 68 2 117 2 69 4 336 2 70 1 337 1 173 1 20 2 175 1 220 3 176 2 343 1 348 2 225 2 230 2 271 1 78 1 128 1 355 1 272 1 181 1 313 5 275 1 135 1 318 2 40 2 360 1 319 2 362 1 363 1 143 1 282 1 247 2 365 2 46 2 148 6 324 1 251 1 
53 1 54 3 128 1 355 1 272 1 326 1 181 1 330 1 313 3 331 1 61 1 295 1 64 1 363 1 69 2 70 1 247 1 220 1 366 1 148 2 343 1 324 1 
53 1 54 3 128 1 355 1 272 1 326 1 181 1 330 1 313 3 331 1 61 1 295 1 64 1 319 1 362 1 363 1 69 3 70 1 220 1 176 1 366 1 148 1 343 1 324 1 
53 1 54 3 128 1 355 1 272 1 326 1 181 1 330 1 313 3 331 1 61 1 295 1 64 1 319 1 362 1 363 1 117 1 69 3 70 1 220 1 247 1 366 1 176 1 148 2 343 1 324 1 
54 5 53 1 105 1 326 1 328 1 330 1 108 1 331 1 259 1 162 1 61 1 295 1 64 1 263 2 117 4 265 1 69 6 70 1 336 1 300 1 337 1 220 3 176 4 343 1 348 2 128 1 355 1 272 1 181 1 313 5 318 2 319 5 139 1 361 1 362 5 363 1 143 1 247 4 365 2 321 1 46 2 366 1 148 7 324 1 
230 2 54 4 53 1 105 1 128 1 355 1 272 1 326 1 328 1 181 1 330 1 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 360 1 263 2 319 2 362 1 363 1 117 2 69 4 336 1 70 1 143 1 337 1 247 2 220 2 365 2 46 2 176 2 148 4 343 1 324 1 348 2 
53 1 54 4 105 1 128 1 355 1 272 1 326 1 181 1 328 1 330 1 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 263 2 319 1 361 1 362 1 363 1 117 2 265 1 69 4 336 1 143 1 70 1 300 1 337 1 247 2 220 2 365 2 46 2 176 2 148 4 343 1 324 1 348 2 
53 1 54 4 105 1 128 1 355 1 272 1 326 1 181 1 328 1 330 1 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 263 2 319 1 361 1 362 1 363 1 117 2 265 1 69 4 336 1 143 1 70 1 300 1 337 1 247 2 220 2 365 2 46 2 176 2 148 4 343 1 324 1 348 2 
151 2 230 2 30 1 53 1 54 4 105 1 128 1 355 1 272 1 326 1 181 1 328 1 330 1 35 2 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 263 2 319 1 362 1 363 1 117 2 69 4 336 1 70 1 300 1 337 1 247 2 220 2 145 1 176 2 147 1 148 4 343 1 324 1 
53 1 54 4 105 1 128 1 355 1 272 1 326 1 328 1 181 1 330 1 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 263 2 319 1 139 1 361 1 362 1 363 1 117 3 265 1 69 5 336 1 143 1 70 1 300 1 337 1 220 2 365 2 247 3 46 2 176 3 148 5 343 1 324 1 348 2 
53 1 54 4 105 1 128 1 355 1 272 1 326 1 328 1 181 1 330 1 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 263 2 319 1 139 1 361 1 362 1 363 1 117 3 265 1 69 5 336 1 143 1 70 1 300 1 337 1 220 2 365 2 247 3 46 2 176 3 148 5 343 1 324 1 348 2 
151 2 230 2 54 4 53 1 105 1 128 1 355 1 272 1 326 1 328 1 181 1 330 1 35 2 108 1 313 4 331 1 259 1 162 1 61 1 295 1 318 2 64 1 360 1 263 2 319 1 362 1 363 1 117 2 69 4 336 1 70 1 337 1 247 2 220 2 145 1 176 2 148 4 343 1 324 1 
228 2 52 1 254 1 231 2 77 1 53 1 128 1 327 1 58 1 311 2 33 4 207 1 274 1 257 1 275 2 208 1 237 1 238 2 109 1 9 2 163 2 112 1 40 8 116 2 320 1 68 2 15 1 192 1 72 1 98 1 144 2 20 7 175 2 100 1 195 1 49 2 324 1 251 3 225 8 
228 1 255 1 231 1 53 1 128 1 154 1 327 1 3 1 311 1 33 2 159 1 274 1 236 1 292 1 208 1 237 2 315 1 261 1 9 1 163 1 188 1 92 1 280 1 96 1 144 1 339 1 49 3 324 1 27 1 
76 1 228 1 231 1 154 1 311 1 33 2 159 2 185 1 208 3 237 3 292 1 109 1 7 2 9 1 163 1 262 1 188 2 241 1 92 1 43 1 215 1 168 1 96 1 144 1 339 1 49 6 
228 2 231 1 154 2 106 1 3 1 311 2 33 4 159 2 258 1 237 6 292 11 208 8 7 1 134 3 261 2 9 2 163 2 188 1 92 1 65 1 280 2 96 11 192 1 98 1 144 2 339 4 302 1 121 1 49 14 346 1 27 1 349 1 227 3 
228 1 287 1 231 1 53 1 128 2 327 1 311 1 131 1 33 2 274 1 257 1 275 1 237 1 208 1 7 1 294 1 9 1 163 1 62 1 138 1 40 1 116 1 68 1 94 1 16 1 192 1 299 1 98 1 144 1 20 1 339 1 175 1 301 1 49 2 324 2 251 1 27 1 225 1 
53 1 154 3 327 1 3 2 58 1 59 2 159 8 257 1 292 7 208 10 7 2 294 2 261 2 9 3 163 3 262 1 296 1 116 2 215 1 68 1 171 1 16 2 20 3 339 7 301 1 175 2 268 1 121 4 269 2 27 1 225 3 76 1 228 3 231 3 79 2 128 3 311 3 33 6 131 2 274 1 185 1 237 10 275 2 188 4 241 1 92 3 138 2 40 3 280 2 43 1 96 7 192 1 98 1 144 3 283 2 49 20 324 3 197 2 251 2 
228 1 280 1 231 1 96 1 154 1 144 1 311 1 339 1 33 2 159 1 292 1 208 2 109 1 121 1 9 1 49 2 25 1 163 1 
228 1 231 1 96 1 3 1 144 1 311 1 339 1 33 2 159 1 292 1 237 2 109 1 9 1 49 2 367 1 163 1 188 1 92 1 
228 1 231 1 154 1 3 1 311 1 33 2 159 2 208 2 292 2 237 2 109 1 261 1 9 1 163 1 188 1 92 1 280 1 96 2 144 1 339 2 121 1 49 4 
228 1 280 1 77 1 231 1 96 1 154 1 144 1 311 1 339 1 33 2 159 1 292 1 208 2 121 1 9 1 49 2 25 1 163 1 
228 1 77 1 231 1 96 1 3 1 144 1 311 1 339 1 33 2 159 1 292 1 237 2 9 1 49 2 367 1 163 1 188 1 92 1 
228 1 231 1 77 1 154 1 3 1 311 1 33 2 159 2 208 2 292 2 237 2 261 1 9 1 163 1 188 1 92 1 280 1 96 2 144 1 339 2 121 1 49 4 
228 1 280 1 231 1 96 2 154 1 3 1 144 1 311 1 339 2 33 2 159 2 237 2 292 2 208 2 121 1 261 1 9 1 49 4 163 1 188 1 92 1 
228 1 231 1 79 1 128 1 311 1 131 1 33 2 208 1 275 1 237 1 7 1 294 1 9 1 163 1 138 1 40 1 116 1 68 1 16 1 192 1 98 1 144 1 20 1 175 1 49 2 324 1 251 1 225 1 
228 1 231 1 128 1 57 1 311 1 33 2 290 1 208 1 275 1 237 1 7 1 9 1 163 1 138 1 40 1 116 1 68 1 16 1 192 1 98 1 144 1 20 1 175 1 221 1 49 2 324 1 251 1 225 1 
228 1 231 1 154 1 3 1 311 1 33 2 159 2 208 2 292 2 237 2 261 1 9 1 163 1 188 1 92 1 280 1 96 2 144 1 339 2 121 1 49 4 27 1 
228 1 52 1 231 1 79 1 154 1 128 1 3 1 311 1 131 1 59 1 33 2 159 2 237 2 292 2 208 2 275 1 294 1 261 1 9 1 163 1 188 1 92 1 138 1 40 1 280 1 116 1 96 2 16 1 144 1 339 2 20 1 175 1 121 1 49 4 324 1 251 1 225 1 
228 1 255 1 231 1 53 1 128 1 154 1 327 1 3 1 311 1 33 2 159 1 274 1 236 1 237 1 208 2 292 1 261 1 9 1 163 1 92 1 280 1 96 1 144 1 339 1 121 1 342 1 49 3 324 1 27 1 
228 2 306 2 31 1 154 3 179 1 310 1 3 3 311 2 33 4 159 6 237 10 208 9 134 2 133 1 261 3 9 2 163 2 188 3 92 3 280 3 44 2 45 1 302 1 121 3 24 1 49 19 26 1 346 1 227 1 28 1 
228 2 31 1 154 2 155 1 3 1 311 2 33 4 159 1 237 8 208 9 133 1 134 2 261 2 9 2 163 2 188 1 92 1 359 1 41 1 280 2 44 2 244 1 172 1 45 2 245 1 24 2 49 17 26 1 346 2 227 2 
228 3 306 1 31 1 154 4 155 1 310 1 3 3 311 3 33 6 159 4 237 15 208 15 134 4 133 1 261 4 9 3 163 3 188 2 359 1 92 3 41 1 280 4 44 3 244 1 172 1 45 1 245 1 302 1 121 2 24 2 49 30 26 1 149 1 346 3 227 3 28 1 
228 3 306 1 31 1 154 4 155 1 310 1 3 3 311 3 33 6 159 5 237 15 208 15 134 4 133 1 261 4 9 3 163 3 188 3 359 1 92 3 41 1 280 4 44 3 244 1 172 1 45 1 245 1 302 1 121 2 24 2 49 30 26 1 149 1 346 3 227 3 28 1 
76 1 228 1 31 1 154 7 106 2 3 5 311 1 33 2 159 10 185 1 237 19 208 22 134 4 133 1 261 6 9 1 163 1 262 1 188 6 241 1 359 1 92 6 41 1 280 6 215 1 43 1 44 2 244 1 172 1 45 1 245 1 302 2 121 4 24 1 49 41 26 1 346 2 227 4 
248 1 47 1 286 1 224 1 169 1 110 1 101 1 18 1 130 1 267 1 
194 1 174 1 
248 1 286 1 224 1 169 1 110 1 358 1 2 1 18 1 63 1 
319 1 169 1 54 1 18 1 130 1 267 1 99 1 219 2 248 1 291 1 313 1 47 1 85 1 224 1 286 1 132 1 110 1 125 1 
319 1 169 1 54 1 18 1 130 1 267 1 99 1 219 2 248 1 291 1 313 1 47 1 85 1 224 1 286 1 132 1 110 1 125 1 
319 1 169 1 54 1 18 1 130 1 267 1 99 1 219 2 248 1 291 1 313 1 47 1 85 1 224 1 286 1 132 1 110 1 125 1 
350 1 249 1 160 1 
350 1 249 1 160 1 
126 1 222 1 
126 1 249 1 222 1 
166 1 210 1 
54 1 53 2 128 2 309 1 327 2 274 2 313 1 7 1 85 1 132 1 210 1 110 1 211 1 240 1 166 1 42 1 169 1 264 1 18 1 174 1 219 1 248 1 194 1 286 1 224 1 324 2 200 1 
350 1 160 1 
126 1 249 1 222 1 
228 1 231 1 53 2 128 2 311 1 33 2 312 1 275 1 208 1 237 1 238 2 9 1 163 1 137 1 40 2 116 1 15 1 17 1 192 1 98 1 144 1 20 2 175 1 22 1 250 1 100 1 49 2 324 2 251 1 27 1 225 2 
40 1 116 1 254 1 68 1 232 1 73 1 20 1 175 1 275 1 112 1 251 1 225 1 103 1 242 1 
40 1 116 1 335 1 140 1 141 1 58 1 73 1 20 1 275 1 161 1 260 1 123 2 178 1 304 1 368 1 39 1 225 1 103 1 
40 2 116 1 52 1 335 1 140 1 141 1 58 1 73 1 20 2 275 1 161 1 260 1 123 2 178 1 304 1 368 1 39 1 225 2 103 1 
40 1 116 1 335 1 140 1 180 1 58 1 73 1 20 1 275 1 161 1 260 1 123 2 178 1 304 1 368 1 39 1 225 1 
118 1 
229 1 319 1 362 1 105 1 336 1 337 1 328 1 193 1 108 1 162 1 
281 1 280 2 230 10 319 5 154 2 105 5 336 5 3 2 365 5 261 2 197 1 196 2 239 5 277 5 92 2 
220 1 319 1 313 1 362 1 54 1 148 1 
351 1 307 1 254 1 78 2 54 3 104 2 105 2 328 2 108 2 275 1 313 3 162 1 135 1 112 1 89 1 40 4 334 1 116 1 68 2 336 2 282 1 337 2 173 2 20 4 175 1 220 2 148 4 251 1 225 4 
319 1 229 1 362 1 168 1 105 1 336 1 193 1 
230 1 54 1 105 1 328 1 108 1 313 1 162 1 319 2 362 1 336 1 143 1 337 1 365 1 220 1 46 1 148 1 348 1 
52 1 54 5 104 1 154 2 105 8 328 4 289 2 3 2 157 2 158 1 330 2 108 4 293 2 162 4 261 2 297 1 116 3 68 1 14 2 336 9 16 3 338 2 337 4 173 1 20 3 175 3 220 3 74 2 345 2 225 3 351 1 229 1 230 12 78 2 32 1 273 3 275 4 36 1 313 5 239 6 277 6 92 2 40 3 319 8 280 2 281 2 362 2 95 2 193 1 365 6 148 5 196 2 197 2 251 10 
230 6 54 1 105 3 154 1 328 2 3 1 108 2 313 1 162 2 134 1 261 1 239 4 277 4 359 1 92 1 41 1 319 4 280 1 362 1 336 5 244 1 172 1 337 2 245 1 220 1 365 3 148 1 196 1 346 1 227 1 201 1 
54 1 53 1 128 1 154 2 105 2 56 1 181 1 328 1 327 1 274 1 108 1 236 1 185 1 313 1 162 1 92 1 281 1 43 1 361 1 215 1 298 1 336 2 337 1 284 1 48 1 324 1 196 2 50 1 
228 1 231 1 79 1 53 2 128 3 327 2 311 1 33 2 131 1 274 2 236 2 237 1 275 1 7 1 294 1 9 1 163 1 138 1 40 1 116 1 68 1 192 1 16 1 144 1 20 1 119 1 175 1 49 1 324 3 50 1 251 1 225 1 
230 4 319 4 78 1 362 2 105 2 336 1 337 1 328 1 173 1 365 2 108 1 162 1 239 2 262 1 277 2 
166 1 286 1 110 1 130 1 82 1 
286 1 110 1 191 1 
286 1 110 1 191 1 
286 1 110 1 191 1 
152 1 286 1 110 1 
152 1 286 1 110 1 
152 1 286 1 110 1 
286 1 110 1 
224 1 18 1 
228 1 43 2 215 1 154 2 311 1 284 1 33 2 159 5 185 2 208 5 237 5 121 2 133 1 9 1 49 10 163 1 188 3 92 2 
228 1 280 1 154 1 311 1 33 2 159 1 208 2 121 1 133 1 9 1 49 2 163 1 
228 1 280 1 154 1 3 1 311 1 33 2 159 2 237 2 208 2 121 1 133 1 261 1 9 1 49 4 163 1 188 1 92 1 
228 3 43 1 155 1 311 3 33 6 159 2 107 1 237 2 185 1 208 1 121 1 133 1 9 3 49 3 163 3 188 1 28 1 
76 1 228 5 154 5 155 2 3 3 311 5 33 10 159 12 107 1 235 1 185 3 237 18 208 16 134 4 133 1 261 3 9 5 163 5 262 1 188 7 241 1 114 1 92 5 280 3 215 2 43 3 243 1 302 1 121 5 177 1 49 34 346 1 227 3 28 1 
228 1 76 1 154 1 311 1 33 2 159 2 237 4 208 4 185 1 134 1 133 1 9 1 163 1 262 1 188 2 241 1 92 1 359 1 43 1 215 1 49 8 346 1 227 1 
76 1 228 2 154 2 311 2 33 4 159 3 185 1 237 5 208 6 134 2 133 1 261 1 9 2 163 2 262 1 188 2 241 1 92 1 359 1 280 1 215 1 43 1 302 1 121 1 177 1 49 11 346 1 227 1 
228 2 154 2 155 1 3 1 311 2 33 4 159 1 237 5 208 6 134 1 133 1 261 2 9 2 163 2 188 1 359 1 92 1 41 1 280 2 244 1 172 1 245 1 49 11 346 1 227 1 
228 1 41 1 280 2 154 2 244 1 172 1 3 1 311 1 33 2 159 1 245 1 208 6 237 4 261 2 133 1 134 1 9 1 49 10 163 1 346 1 188 1 227 1 92 1 359 1 
228 1 76 1 154 1 311 1 33 2 159 2 237 4 208 4 185 1 134 1 133 1 9 1 163 1 262 1 188 2 241 1 92 1 359 1 43 1 215 1 49 8 346 1 227 1 
228 1 41 1 280 2 154 2 244 1 172 1 3 1 311 1 33 2 159 1 245 1 208 6 237 4 261 2 133 1 134 1 9 1 49 10 163 1 346 1 188 1 227 1 92 1 359 1 
228 3 154 2 155 1 3 1 311 3 33 6 159 1 237 5 208 6 134 1 133 1 261 2 9 3 163 3 188 1 359 1 92 1 41 1 280 2 244 1 172 1 245 1 177 1 49 11 346 1 227 1 
228 3 154 2 155 1 3 1 311 3 33 6 159 2 237 5 208 6 134 1 133 1 261 2 9 3 163 3 188 2 359 1 92 1 41 1 280 2 244 1 172 1 245 1 49 11 346 1 227 1 28 1 
76 1 43 3 215 1 154 1 159 6 237 4 185 3 208 3 121 3 49 7 188 3 241 2 92 1 
228 3 154 2 155 1 3 1 311 3 33 6 159 1 237 5 208 6 134 1 133 1 261 2 9 3 163 3 188 1 359 1 92 1 41 1 280 2 244 1 172 1 245 1 49 11 346 1 227 1 28 1 
228 2 76 1 215 1 43 1 154 1 155 1 311 2 33 4 159 3 237 4 208 4 185 1 121 1 9 2 49 8 163 2 262 1 188 2 241 1 92 1 
76 1 43 1 215 1 168 1 154 1 159 2 237 3 185 1 208 3 49 6 262 1 188 2 241 1 92 1 
228 1 280 1 154 1 3 1 311 1 33 2 159 2 237 2 208 2 121 1 177 1 261 1 9 1 49 4 163 1 188 1 92 1 
280 1 154 1 3 1 159 2 237 4 208 3 302 1 121 1 134 2 261 1 49 7 346 1 188 1 227 1 92 1 
76 1 228 2 154 3 155 2 3 2 106 1 311 2 33 4 159 9 107 1 185 2 208 11 237 12 261 2 134 2 9 2 163 2 262 1 188 5 241 1 92 3 65 1 280 2 215 1 43 2 302 1 121 4 49 23 227 2 
237 1 134 1 49 1 
208 1 49 1 227 1 
228 1 280 1 154 1 3 1 311 1 33 2 159 3 237 3 208 3 121 1 177 1 261 1 9 1 49 6 163 1 197 1 188 2 92 1 
228 1 41 1 280 2 154 2 244 1 172 1 3 1 311 1 33 2 159 1 245 1 208 6 237 4 261 2 133 1 134 1 9 1 49 10 163 1 346 1 188 1 227 1 92 1 359 1 
215 1 43 1 154 1 159 2 208 3 237 3 185 1 121 1 49 6 188 1 92 1 
228 1 76 1 43 1 155 1 311 1 33 2 159 2 107 1 208 1 185 1 237 2 121 1 9 1 49 3 163 1 188 1 241 1 
7 1 331 1 53 1 128 1 186 1 324 1 233 1 
352 1 353 1 216 1 53 1 128 1 55 1 233 1 340 1 7 1 331 1 186 1 324 1 
40 4 52 1 254 1 116 1 68 1 20 4 175 1 285 1 275 1 124 1 112 1 251 1 225 4 
40 2 11 1 116 1 104 1 16 1 20 2 364 1 175 1 275 2 122 1 303 1 251 1 225 2 296 1 
40 1 275 1 116 1 335 1 140 1 68 1 123 1 178 1 225 1 20 1 
40 2 52 1 116 1 58 1 20 2 175 1 275 1 100 1 251 1 137 1 225 2 
40 5 254 1 52 1 116 2 320 1 68 1 104 1 20 4 175 2 285 1 275 2 100 1 195 1 112 1 251 3 225 5 
40 5 254 1 52 1 116 2 320 1 68 1 189 1 104 1 20 4 175 2 285 1 275 2 100 1 112 1 251 3 225 5 
40 1 275 1 116 1 254 1 168 1 68 1 112 1 251 1 225 1 20 1 175 1 
40 1 116 1 68 1 53 1 128 2 16 1 327 1 20 1 131 1 175 1 257 1 274 1 275 1 7 1 324 2 251 1 225 1 138 1 
40 1 116 1 53 2 128 2 104 1 70 1 272 1 16 2 181 1 327 2 289 1 157 1 20 1 131 1 175 2 257 1 274 1 275 1 7 1 324 2 251 3 225 1 138 1 
40 2 116 1 53 2 128 2 104 1 57 1 70 1 272 1 16 2 181 1 327 2 289 1 157 1 20 2 175 2 257 1 274 1 275 1 7 1 124 1 324 2 251 3 225 2 138 1 
40 3 319 1 116 1 68 1 362 1 54 2 104 1 16 1 289 1 157 1 273 1 20 3 330 1 175 1 275 1 313 2 293 1 75 1 148 1 124 1 251 4 333 1 225 3 
40 3 319 1 116 1 68 1 362 1 54 2 104 1 16 1 289 1 157 1 273 1 20 3 330 1 175 1 275 1 313 2 74 1 293 1 148 1 124 1 251 4 225 3 
40 1 275 1 116 1 72 1 225 1 20 1 
40 7 52 1 116 2 320 1 68 2 16 1 72 1 58 1 20 6 158 1 364 1 175 2 207 1 183 1 238 1 275 3 100 1 122 1 195 1 251 3 225 7 
52 1 53 1 154 1 327 1 59 1 159 2 257 1 208 3 292 1 7 2 294 1 9 2 163 2 262 1 116 1 215 1 17 1 16 1 339 1 20 1 175 1 27 1 225 1 228 2 76 1 231 2 79 1 128 2 311 2 131 1 33 4 274 1 275 1 185 1 237 3 188 2 241 1 138 1 92 1 40 1 43 1 96 1 283 1 144 2 49 6 324 2 251 1 
351 1 229 1 54 3 105 1 328 2 273 1 330 1 108 2 313 3 293 1 162 2 40 1 319 1 42 1 362 1 68 1 95 1 336 1 337 2 338 1 193 1 20 1 220 1 74 1 148 2 345 1 251 2 225 1 
40 2 52 1 116 1 16 1 72 1 20 2 158 1 175 1 275 2 293 1 251 2 225 2 297 1 
40 1 116 1 68 1 53 1 128 2 57 1 16 1 327 1 20 1 175 1 257 1 274 1 275 1 7 1 324 2 251 1 225 1 138 1 
40 1 116 1 104 1 16 1 20 1 158 1 364 1 175 1 183 1 275 2 122 1 251 1 225 1 
7 1 164 1 182 1 369 1 4 1 
279 1 319 1 42 1 354 1 362 1 54 2 70 1 272 1 181 1 182 1 4 2 330 1 313 2 7 1 86 1 323 1 164 2 369 2 64 1 
53 1 128 1 182 1 4 1 312 1 22 1 250 1 324 1 369 1 
279 1 354 1 182 1 
214 1 67 1 
305 2 67 1 129 4 153 1 266 3 71 1 246 4 218 1 146 1 120 2 84 1 276 1 136 2 150 1 
202 1 214 1 67 1 129 1 184 1 246 1 120 1 314 1 
214 1 67 1 129 1 34 1 246 1 84 1 276 1 
60 1 23 2 266 2 19 1 
214 1 
246 1 214 1 67 1 120 1 204 1 129 1 
167 1 
214 1 
305 1 168 1 266 1 136 1 
305 1 246 1 218 1 129 1 266 1 136 1 150 1 
246 1 256 1 288 1 
214 1 67 1 129 1 246 1 146 1 84 1 276 1 
305 1 246 2 218 1 120 1 129 2 266 1 136 1 87 1 150 1 
214 1 
214 1 
214 1 
214 1 253 1 
214 1 67 1 204 1 129 2 153 1 266 1 71 1 246 2 120 2 316 1 
214 1 123 1 178 1 
214 1 67 1 129 2 153 1 266 1 71 1 341 1 246 2 120 2 87 1 
246 1 214 1 67 1 129 1 276 1 
67 1 153 1 266 1 71 1 
266 1 136 1 

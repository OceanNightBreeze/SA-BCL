#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (329,353) 259 (87,162) (87,162) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (329,353) 259 (87,162) (87,162) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (329,353) 259 (87,162) (87,162) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (329,353) 259 (87,162) (87,162) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 1 77 1 190 2 238 3 329 1 79 1 331 2 147 1 62 1 266 1 199 2 36 1 381 3 
259 1 162 1 87 1 62 1 77 1 190 1 378 1 238 1 353 1 381 1 331 1 
259 1 162 1 87 1 62 1 77 1 190 1 378 1 238 1 353 1 381 1 331 1 
259 1 162 1 87 1 62 1 77 1 190 1 378 1 238 1 353 1 381 1 331 1 
259 1 162 1 87 1 62 1 77 1 190 1 378 1 238 1 353 1 381 1 331 1 
229 1 11 2 21 1 39 2 76 1 287 1 190 1 238 4 79 3 132 1 147 1 331 1 255 1 62 1 266 1 199 3 36 1 381 4 
229 1 77 1 190 1 238 2 46 1 132 1 331 1 135 1 62 1 266 1 199 1 208 1 347 1 378 1 36 1 381 2 
21 1 23 1 175 1 76 1 287 1 77 1 329 1 79 7 238 9 132 1 331 2 62 1 266 1 363 1 36 1 11 2 229 1 39 4 190 2 147 3 255 1 344 1 199 5 381 9 
21 1 23 1 175 1 76 1 287 1 77 1 329 1 79 7 238 9 132 1 331 2 62 1 266 1 363 1 36 1 11 2 229 1 39 4 190 2 147 3 255 1 344 1 199 5 381 9 
282 1 312 1 163 1 249 1 368 1 26 1 193 1 289 1 223 1 272 1 81 1 136 1 102 1 219 1 
137 1 
37 1 282 2 163 2 137 1 136 1 215 1 320 1 267 1 
104 1 37 1 306 1 282 5 281 1 163 5 286 2 152 1 308 1 100 1 342 2 159 1 137 1 136 2 185 1 276 1 318 2 320 2 267 1 
37 1 137 1 206 1 
137 1 271 2 149 1 
312 2 26 2 289 2 193 2 241 1 223 2 219 2 272 1 
279 1 20 1 220 1 202 1 307 2 124 2 327 1 154 1 205 1 26 2 289 3 241 1 223 2 224 2 309 1 332 1 61 1 31 1 336 1 186 1 338 1 312 3 142 1 367 1 70 1 253 1 71 1 13 2 314 2 14 1 193 2 48 1 272 1 315 1 118 1 53 1 219 2 
81 1 312 1 249 1 102 1 26 1 289 1 193 1 223 1 219 1 272 1 
37 1 312 1 282 1 163 1 172 1 269 1 26 1 289 1 51 1 158 1 137 1 102 1 290 1 257 1 
37 1 312 1 282 2 163 2 269 1 26 1 193 1 289 1 223 1 51 1 137 1 102 1 290 1 257 1 219 1 
282 1 163 1 136 1 320 1 296 1 
37 1 282 2 163 2 137 1 136 1 212 1 320 1 267 1 
282 1 163 1 320 1 
312 2 75 1 109 1 26 2 289 2 193 1 223 1 241 2 219 1 
22 1 41 1 304 1 
312 1 279 1 20 1 220 1 205 1 154 1 13 1 314 1 14 1 289 1 241 1 224 1 332 1 232 1 61 1 338 1 
279 1 312 2 20 1 220 1 22 1 154 1 205 1 153 1 13 1 26 1 14 1 314 1 72 1 193 1 289 2 223 1 224 1 332 1 61 1 338 1 
206 1 241 1 
312 3 153 1 26 3 289 3 193 3 219 1 241 1 223 3 
81 1 312 1 102 1 26 1 289 1 193 1 223 1 
312 1 75 1 102 1 109 1 26 1 289 1 193 1 223 1 219 1 
279 1 282 1 20 1 220 1 75 1 202 1 307 1 176 1 124 2 327 1 154 1 205 1 153 1 155 1 26 3 289 4 241 1 223 3 224 1 309 1 332 1 61 1 31 1 102 1 290 1 338 1 312 4 163 1 142 1 269 1 367 1 70 1 253 1 13 1 14 1 314 1 193 3 72 1 315 1 272 1 51 1 53 1 257 1 219 2 
312 2 158 1 138 1 153 1 26 2 289 2 193 1 241 1 223 1 
282 1 312 3 163 1 75 1 269 1 176 1 153 2 26 3 72 1 193 3 289 3 223 3 51 1 137 1 32 1 102 1 290 1 257 1 219 1 
312 2 75 1 22 1 153 1 26 2 193 2 289 2 223 2 304 1 219 1 
312 1 279 1 20 1 220 1 205 1 154 1 13 1 314 1 14 1 289 1 241 1 224 1 332 1 61 1 338 1 
312 1 279 1 220 1 205 1 154 1 13 1 314 1 14 1 289 1 241 1 224 1 332 1 16 1 338 1 141 1 
97 1 202 1 22 2 99 1 307 4 124 2 327 1 352 1 130 1 309 1 31 2 103 1 67 1 366 1 41 2 367 1 70 1 253 1 298 1 48 2 50 1 217 1 304 2 94 1 
312 1 294 1 102 1 26 1 257 1 289 1 193 1 223 1 
312 5 75 1 153 2 26 5 193 4 289 5 72 1 223 4 241 1 273 1 158 1 138 1 340 1 219 1 
81 1 312 2 294 1 102 1 26 2 289 2 193 2 223 2 
134 1 302 1 180 1 
260 1 134 2 302 2 18 1 179 1 28 1 
134 1 302 1 
134 1 302 1 
18 1 28 1 
18 1 28 1 
18 1 28 1 
134 1 302 1 117 1 
134 1 302 1 117 1 
134 1 302 1 117 1 
134 1 302 1 184 1 
134 1 302 1 184 1 
134 1 302 1 184 1 
65 2 282 2 1 3 163 2 260 1 261 2 57 1 166 1 24 1 370 1 222 1 297 2 78 2 310 1 134 2 137 1 83 1 302 2 63 2 
1 1 282 1 261 1 56 1 180 1 78 1 26 2 289 2 241 1 223 2 101 1 134 1 63 1 64 1 65 1 312 2 163 1 40 1 370 1 193 2 302 1 196 1 303 1 197 1 
135 1 285 2 287 1 4 1 132 2 
229 1 287 1 132 1 
229 1 135 1 132 1 
55 1 135 1 285 1 287 2 4 1 132 3 
135 1 285 1 144 1 287 1 4 1 132 2 
282 5 99 1 286 1 177 1 25 1 152 1 328 1 130 1 101 1 159 2 33 1 136 4 137 2 335 2 362 2 103 1 267 1 37 1 104 3 163 5 40 1 271 3 43 1 110 2 342 1 374 1 318 1 196 1 320 1 217 1 149 1 200 1 
282 9 284 1 120 1 99 3 286 2 25 3 152 1 128 5 130 3 159 6 136 7 137 5 185 1 335 6 103 3 267 1 209 1 37 1 104 8 163 9 105 1 40 4 68 1 271 9 296 5 43 1 110 6 342 2 374 2 275 1 318 2 320 6 217 3 149 3 200 2 
282 3 99 1 286 1 328 1 25 1 130 1 159 2 137 3 136 2 33 1 185 1 362 1 335 2 103 1 37 1 104 3 163 3 40 1 271 4 110 2 342 1 374 1 318 1 217 1 149 2 200 1 
282 4 120 1 99 2 286 1 328 1 25 2 130 2 159 4 137 4 33 1 136 3 185 1 335 4 362 2 103 2 209 1 37 1 104 5 163 4 105 1 40 2 271 7 110 4 342 1 374 1 318 1 217 2 149 3 200 1 
96 1 
332 1 84 1 206 1 
332 1 380 1 
332 1 279 1 
332 3 279 1 84 2 88 1 154 1 34 1 
332 1 279 1 154 1 
332 1 188 1 
99 1 307 7 89 1 156 1 126 1 352 2 27 1 112 1 48 4 330 1 31 3 227 1 8 1 217 1 94 3 201 2 246 1 364 1 
307 31 99 4 124 2 327 1 25 3 156 1 126 2 27 2 352 5 240 1 29 4 130 3 330 2 354 1 309 1 31 15 227 2 103 3 160 3 246 1 364 1 10 1 66 1 367 1 70 1 213 1 89 1 112 5 191 1 48 16 195 1 217 4 94 10 201 3 
99 1 307 9 124 4 327 2 126 1 352 3 27 1 330 1 309 2 31 4 227 1 246 1 364 1 367 2 70 2 213 1 89 1 113 1 112 1 48 5 316 1 217 1 94 4 201 2 
99 1 307 7 156 1 89 1 126 1 352 2 27 1 112 1 48 4 330 1 31 3 227 1 217 1 94 3 201 2 246 1 364 1 
99 1 307 7 156 1 89 1 126 1 352 2 27 1 112 1 48 4 330 1 31 3 227 1 217 1 94 3 201 2 246 1 364 1 
279 1 283 1 220 1 250 1 230 1 77 2 13 1 190 1 14 1 238 1 314 1 331 1 224 1 332 1 355 1 265 1 226 2 358 2 17 2 207 1 338 1 235 1 381 1 
55 1 258 1 220 1 326 1 287 1 77 1 238 1 132 2 224 1 331 1 226 1 133 1 358 1 135 1 62 1 229 1 13 1 190 1 314 1 14 1 115 1 116 1 17 1 377 1 216 1 381 1 
55 1 258 1 220 1 326 1 287 1 77 1 79 1 238 2 132 2 224 1 331 1 226 1 358 1 135 1 62 1 266 1 36 1 229 1 167 1 13 1 190 1 314 1 14 1 115 1 116 1 17 1 377 1 216 1 199 1 381 2 
55 1 258 1 220 1 326 1 287 1 77 1 238 3 79 2 132 2 224 1 331 1 226 1 133 1 358 1 135 1 266 1 207 1 36 1 229 1 12 1 13 1 190 1 314 1 14 1 115 1 17 1 377 1 216 1 199 1 381 3 
55 1 258 1 220 1 287 1 77 1 238 2 79 2 132 2 224 1 226 1 133 1 358 1 135 1 266 1 36 1 229 1 12 1 13 1 314 1 14 1 17 1 377 1 216 1 199 1 381 2 
254 1 
279 1 282 5 98 2 3 2 286 1 152 1 239 1 289 1 332 1 157 1 159 2 158 1 102 1 290 1 338 2 245 2 104 2 163 5 106 2 210 1 295 4 13 2 14 1 342 1 343 1 257 1 220 1 172 1 173 1 122 1 182 1 26 1 224 2 30 1 355 1 137 2 361 1 267 3 35 2 37 1 312 1 86 1 269 1 230 1 270 1 271 2 44 2 314 2 49 2 374 1 51 1 194 1 318 1 320 6 149 2 
282 3 312 1 163 3 86 1 172 1 269 1 295 2 270 1 122 1 26 1 239 1 289 1 157 1 51 1 158 1 102 1 215 1 290 1 320 2 267 1 257 1 245 1 
37 1 282 3 312 1 163 3 86 1 172 1 269 1 98 1 295 3 270 1 122 1 26 1 239 1 289 1 157 1 51 1 158 1 137 1 102 1 215 1 290 1 320 1 267 1 257 1 
282 3 172 1 98 1 122 1 26 1 239 1 289 1 157 1 158 1 137 1 102 1 290 1 267 1 245 1 312 1 37 1 163 3 86 1 269 1 295 3 270 1 44 1 51 1 215 1 320 2 257 1 
282 3 203 1 286 1 152 1 239 1 289 2 157 1 158 1 159 1 102 2 290 1 245 2 104 1 163 3 249 1 295 2 342 1 215 1 257 1 219 1 172 1 174 1 122 1 123 1 26 2 223 1 81 1 137 1 361 1 267 1 312 2 37 1 86 1 187 1 269 1 270 1 368 1 44 2 193 1 272 1 51 1 318 1 320 3 
282 4 172 1 173 1 98 2 3 2 122 1 286 1 152 1 182 1 26 1 239 1 289 1 157 1 159 1 158 1 137 2 361 1 102 1 290 1 267 2 245 2 35 2 37 1 104 1 312 1 163 4 86 1 269 1 106 2 295 4 270 1 271 2 44 2 49 2 342 1 51 1 318 1 320 4 257 1 149 2 
282 2 172 1 203 1 122 1 286 1 123 1 152 1 26 2 239 1 289 2 223 1 81 1 157 1 159 1 158 1 137 1 361 1 102 2 290 1 37 1 104 1 312 2 163 2 86 1 249 1 269 1 295 2 368 1 270 1 193 1 272 1 342 1 51 1 318 1 257 1 219 1 
282 2 172 1 203 1 122 1 286 1 123 1 152 1 26 2 239 1 289 2 223 1 81 1 157 1 159 1 158 1 137 1 361 1 102 2 290 1 37 1 104 1 312 2 163 2 86 1 249 1 269 1 295 2 368 1 270 1 193 1 272 1 342 1 51 1 318 1 257 1 219 1 
282 4 172 1 98 2 3 2 122 1 286 1 152 1 182 1 26 1 239 1 289 1 157 1 159 1 158 1 137 1 242 1 102 1 290 1 267 2 245 2 35 2 37 1 104 1 312 1 163 4 365 2 86 1 269 1 295 4 270 1 271 2 44 2 111 2 45 1 342 1 51 1 318 1 320 4 321 1 256 1 257 1 
282 2 203 1 98 1 286 1 152 1 239 1 289 2 157 1 158 1 159 1 102 2 290 1 245 1 104 1 163 2 249 1 295 3 342 1 257 1 219 1 172 1 122 1 123 1 26 2 223 1 81 1 137 1 361 1 312 2 37 1 187 1 86 1 269 1 270 1 368 1 44 1 193 1 272 1 51 1 318 1 320 1 
282 2 203 1 98 1 286 1 152 1 239 1 289 2 157 1 158 1 159 1 102 2 290 1 245 1 104 1 163 2 249 1 295 3 342 1 257 1 219 1 172 1 122 1 123 1 26 2 223 1 81 1 137 1 361 1 312 2 37 1 187 1 86 1 269 1 270 1 368 1 44 1 193 1 272 1 51 1 318 1 320 1 
282 4 172 1 173 1 98 2 3 2 122 1 286 1 152 1 182 1 26 1 239 1 289 1 157 1 159 1 158 1 137 1 102 1 290 1 267 2 245 2 35 2 37 1 104 1 312 1 163 4 365 2 86 1 269 1 295 4 270 1 271 2 44 2 111 2 342 1 51 1 318 1 320 4 321 1 257 1 
279 2 220 2 202 2 307 2 153 1 124 4 327 2 26 1 289 1 223 1 224 8 80 1 332 3 309 2 5 1 355 1 133 1 31 1 336 1 338 2 186 2 85 1 312 1 366 1 230 1 367 2 42 1 167 1 70 2 253 2 13 7 299 1 14 2 314 8 193 1 48 1 233 1 345 1 53 1 
75 1 202 1 22 1 307 3 99 1 124 2 327 1 25 1 352 1 26 1 289 1 130 1 223 1 309 1 31 2 6 1 103 1 312 1 41 1 367 1 70 1 253 1 193 1 47 1 48 1 304 1 217 1 94 1 219 1 
202 1 22 1 307 6 99 1 124 2 327 1 27 1 352 2 206 1 241 2 330 1 309 1 31 3 246 1 364 1 366 1 41 1 367 1 70 1 253 1 89 1 48 3 304 1 217 1 94 2 201 1 
202 2 22 11 307 14 99 1 262 1 124 4 327 2 25 2 352 1 29 3 130 1 241 1 309 2 31 6 359 1 6 1 7 1 336 1 103 2 160 3 66 1 41 11 367 2 70 2 253 1 112 1 48 8 274 1 195 1 217 2 304 4 53 1 94 2 
279 1 20 1 220 1 202 1 307 2 154 1 205 1 327 1 153 1 124 2 26 1 289 2 241 1 223 1 224 1 332 1 309 1 61 1 31 1 6 1 336 1 338 1 312 2 367 1 107 1 70 1 253 1 13 1 14 1 314 1 193 1 72 1 48 1 146 1 232 1 73 1 304 1 53 1 
279 2 202 3 99 3 153 1 327 3 205 2 154 2 237 2 289 3 241 2 330 1 332 2 61 2 6 1 336 1 338 1 103 2 246 1 293 1 69 2 70 3 253 3 13 3 14 2 72 1 112 4 114 1 304 7 217 3 20 2 220 2 22 7 307 20 124 6 25 2 27 1 352 4 26 1 130 2 223 1 224 3 309 3 133 1 357 1 31 10 360 2 364 1 312 3 41 7 367 3 89 1 314 3 193 1 192 2 48 10 315 2 53 1 94 8 201 1 
97 1 202 1 22 1 41 1 366 1 307 2 367 1 70 1 253 1 327 1 124 2 112 1 48 2 309 1 304 1 217 1 103 1 94 1 
202 1 67 1 22 1 41 1 366 1 307 2 367 1 99 1 70 1 253 1 327 1 124 2 352 1 130 1 309 1 31 2 304 1 94 1 
202 1 22 2 307 4 99 1 25 1 124 2 327 1 352 1 130 1 309 1 31 2 103 1 366 1 41 2 367 1 70 1 253 1 112 1 48 2 217 1 304 2 94 2 
97 1 202 1 22 1 41 1 307 2 367 1 70 1 253 1 327 1 124 2 299 1 112 1 48 2 309 1 304 1 217 1 103 1 94 1 
202 1 67 1 22 1 41 1 307 2 367 1 99 1 70 1 253 1 327 1 124 2 352 1 299 1 130 1 309 1 31 2 304 1 94 1 
202 1 22 2 307 4 99 1 25 1 124 2 327 1 352 1 130 1 309 1 31 2 103 1 41 2 367 1 70 1 253 1 299 1 112 1 48 2 217 1 304 2 94 2 
202 1 22 2 307 4 99 1 25 1 124 2 327 1 352 1 130 1 309 1 31 2 103 1 41 2 367 1 70 1 253 1 112 1 48 2 217 1 304 2 94 2 
279 1 20 1 220 1 202 1 307 2 154 1 205 1 327 1 124 2 289 1 241 1 224 1 332 1 309 1 61 1 31 1 336 1 338 1 312 1 367 1 70 1 253 1 13 1 14 1 314 1 48 1 315 1 53 1 
279 1 220 1 202 1 307 2 154 1 205 1 327 1 124 2 289 1 241 1 224 1 332 1 309 1 31 1 336 1 338 1 141 1 38 1 312 1 367 1 70 1 253 1 13 1 14 1 314 1 48 1 16 1 53 1 
202 1 22 2 307 4 99 1 25 1 124 2 327 1 352 1 130 1 309 1 31 2 6 1 103 1 41 2 367 1 70 1 253 1 112 1 48 2 217 1 304 2 94 2 
279 1 20 1 220 1 202 1 22 2 99 1 307 4 154 1 205 1 327 1 124 2 25 1 352 1 130 1 289 1 224 1 332 1 309 1 61 1 31 2 103 1 312 1 41 2 367 1 167 1 70 1 253 1 13 1 14 1 314 1 112 1 192 1 48 2 315 1 304 2 217 1 94 2 
75 1 202 1 22 1 99 1 307 3 124 2 327 1 25 1 26 1 130 1 289 1 223 1 309 1 31 1 6 1 103 1 312 1 41 1 367 1 70 1 253 1 112 1 193 1 48 2 217 1 304 1 94 1 219 1 348 1 
305 1 307 19 99 3 325 1 124 4 327 2 25 3 178 1 288 2 352 3 29 2 130 3 309 2 31 10 103 3 160 1 228 1 248 2 66 1 143 1 252 1 367 2 70 2 112 3 48 9 316 1 195 1 278 1 217 3 94 6 
305 1 150 1 221 1 99 2 307 26 325 1 124 6 327 3 25 3 178 1 288 4 352 2 29 2 130 2 131 1 309 3 31 12 103 3 160 2 244 1 228 2 248 1 367 3 70 3 213 2 169 1 112 2 48 14 316 1 170 1 195 2 278 2 217 3 94 4 
305 1 150 1 221 1 307 41 99 5 325 1 124 6 327 3 25 4 178 1 288 4 27 1 352 4 29 4 130 4 131 1 330 1 309 3 31 21 103 4 160 3 244 1 268 1 246 1 228 2 364 1 248 1 66 1 252 1 367 3 70 3 213 1 89 1 169 1 112 4 48 20 170 1 316 1 195 3 278 1 217 5 94 8 201 1 
305 1 150 1 221 1 307 38 99 4 325 1 124 8 327 4 25 4 178 1 288 4 27 1 352 4 29 4 130 3 131 1 330 1 309 4 31 18 103 4 160 3 244 1 268 1 246 1 228 2 364 1 248 1 66 1 252 1 367 4 70 4 213 2 89 1 169 1 112 3 48 20 170 1 316 1 195 3 278 1 217 5 94 7 201 1 
305 1 150 1 221 1 307 52 99 8 325 1 124 4 327 2 25 7 178 1 288 4 27 1 352 7 29 4 130 7 131 1 330 1 309 2 31 25 103 7 160 4 244 1 246 1 228 1 364 1 248 1 66 2 367 2 70 2 213 1 89 1 169 1 112 7 48 27 274 2 170 1 316 1 195 2 278 1 217 8 94 14 201 1 
65 1 260 1 134 1 261 1 302 1 166 1 2 1 24 1 63 1 78 1 
56 1 180 1 
65 1 356 1 134 1 261 1 302 1 63 1 351 1 322 1 78 1 
282 1 65 1 1 2 163 1 260 1 261 1 166 1 24 1 370 1 222 1 297 1 78 1 310 1 134 1 137 1 83 1 302 1 63 1 
282 1 65 1 1 2 163 1 260 1 261 1 166 1 24 1 370 1 222 1 297 1 78 1 310 1 134 1 137 1 83 1 302 1 63 1 
282 1 65 1 1 2 163 1 260 1 261 1 166 1 24 1 370 1 222 1 297 1 78 1 310 1 134 1 137 1 83 1 302 1 63 1 
117 1 179 1 231 1 
117 1 179 1 231 1 
184 1 349 1 
184 1 179 1 349 1 
197 1 303 1 
282 1 1 1 261 1 56 1 180 1 78 1 26 2 289 2 241 1 223 2 59 1 310 1 101 1 134 1 136 1 63 1 64 1 312 2 65 1 163 1 40 1 297 1 193 2 302 1 196 1 303 1 197 1 
117 1 231 1 
184 1 179 1 349 1 
279 1 220 1 202 1 324 1 307 2 327 1 124 2 26 2 289 2 224 2 332 1 309 1 31 1 6 1 336 1 186 2 247 1 312 2 367 1 42 1 70 1 253 1 13 2 14 1 314 2 48 1 301 1 148 1 233 1 19 1 53 1 
279 1 0 1 220 1 230 1 13 1 14 1 314 1 224 1 332 1 226 1 355 1 338 1 243 1 235 1 
55 1 229 1 220 1 287 1 13 1 125 1 314 1 14 1 132 2 115 1 224 1 226 1 133 1 135 1 377 1 216 1 198 1 243 1 
55 1 229 1 220 1 167 1 287 1 13 2 125 1 14 1 314 2 132 2 115 1 224 2 226 1 133 1 135 1 377 1 216 1 198 1 243 1 
55 1 229 1 220 1 287 1 13 1 314 1 14 1 132 2 115 1 224 1 226 1 133 1 135 1 377 1 216 1 292 1 198 1 
52 1 
104 1 37 1 306 1 159 1 137 1 286 1 318 1 152 1 100 1 342 1 
104 5 99 2 25 2 271 10 110 5 130 2 300 2 159 5 137 5 360 1 171 1 335 5 217 2 103 2 149 5 
37 1 282 1 163 1 137 1 320 1 267 1 
279 1 282 3 220 1 286 2 152 1 224 4 332 1 30 1 355 1 159 2 185 1 338 2 267 2 104 2 163 3 210 1 230 1 108 2 13 4 341 1 14 1 314 4 90 1 342 2 374 2 194 2 319 1 318 2 320 4 
104 1 37 1 306 1 159 1 137 1 100 1 206 1 
282 1 286 1 152 1 159 1 137 2 361 1 267 1 104 1 37 1 163 1 106 1 271 1 49 1 342 1 318 1 320 1 149 1 
279 3 282 5 323 1 286 4 99 2 154 3 152 4 100 1 332 10 159 8 335 6 338 1 103 2 161 2 104 9 163 5 251 2 108 1 165 2 167 1 13 3 110 6 14 3 300 2 342 4 171 2 346 1 119 2 217 2 306 1 220 4 121 1 25 2 130 2 224 3 137 8 360 2 84 2 267 3 34 1 37 2 188 2 271 12 314 3 90 1 374 2 51 2 194 1 318 4 320 5 93 2 380 3 149 6 54 2 
282 1 221 1 286 2 99 2 152 2 25 2 29 1 130 2 131 1 159 5 137 5 335 5 267 1 103 2 160 1 244 1 104 8 37 2 163 1 369 1 271 6 169 1 110 5 374 1 300 2 342 2 91 1 194 1 170 1 195 1 171 1 318 2 320 1 217 2 149 3 
282 1 204 1 286 1 99 1 123 1 152 1 27 1 26 1 289 1 223 1 330 1 81 1 159 2 102 1 364 1 312 1 104 2 163 1 249 1 368 1 193 1 300 2 342 1 272 1 171 1 318 1 217 2 219 1 
279 1 20 1 220 1 202 1 307 1 124 2 327 1 205 1 154 1 26 2 289 3 241 1 223 2 224 1 309 1 332 1 61 1 31 1 338 1 312 3 142 1 367 1 70 1 253 1 13 1 314 1 14 1 193 2 272 1 315 1 53 1 219 2 
104 1 37 2 286 1 152 1 271 4 110 2 342 1 374 1 159 2 194 1 137 4 318 1 335 2 201 1 149 2 
24 1 63 1 197 1 78 1 372 1 
63 1 78 1 60 1 
63 1 78 1 60 1 
63 1 78 1 60 1 
225 1 63 1 78 1 
225 1 63 1 78 1 
225 1 63 1 78 1 
63 1 78 1 
134 1 302 1 
204 1 367 1 307 10 99 2 70 1 124 2 327 1 27 2 352 3 112 2 48 5 330 2 309 1 31 5 316 1 217 2 94 5 364 1 
367 1 307 2 70 1 327 1 124 2 112 1 48 2 309 1 316 1 217 1 103 1 94 1 
99 1 367 1 307 4 70 1 327 1 124 2 25 1 352 1 130 1 112 1 48 2 309 1 31 2 316 1 217 1 103 1 94 2 
280 1 252 1 307 3 367 3 70 3 213 1 327 3 124 6 27 1 352 1 112 1 48 1 330 1 309 3 31 2 316 1 94 2 
280 1 307 34 99 5 124 10 327 5 25 3 27 3 352 7 29 4 130 3 330 3 354 1 309 5 31 18 103 3 160 3 246 1 364 2 10 1 66 1 252 1 367 5 70 5 213 2 89 1 191 1 112 5 15 1 48 16 316 1 195 1 217 5 94 12 201 1 
99 1 307 8 124 2 327 1 27 1 352 2 29 1 330 1 309 1 31 4 160 1 246 1 364 1 367 1 70 1 89 1 48 4 170 1 316 1 195 1 217 1 94 2 201 1 
99 1 307 11 124 4 327 2 25 1 352 2 27 1 29 2 330 1 309 2 31 5 103 1 160 1 246 1 364 1 66 1 367 2 70 2 89 1 112 1 15 1 48 6 170 1 316 1 195 1 217 2 94 3 201 1 
221 1 307 19 99 3 124 6 327 3 25 2 27 1 352 3 29 1 130 2 131 1 330 1 309 3 31 10 103 2 160 1 244 1 246 1 364 1 367 3 70 3 213 1 89 1 169 1 112 1 15 1 48 9 170 1 316 1 195 1 217 3 94 4 201 1 
221 1 307 17 99 2 124 6 327 3 25 2 27 1 352 3 29 1 130 1 131 1 330 1 309 3 31 7 103 2 160 1 244 1 246 1 364 1 367 3 70 3 213 1 89 1 169 1 112 2 15 1 48 10 170 1 316 1 195 1 217 3 94 5 201 1 
99 1 307 8 124 2 327 1 27 1 352 2 29 1 330 1 309 1 31 4 160 1 246 1 364 1 367 1 70 1 89 1 48 4 170 1 316 1 195 1 217 1 94 2 201 1 
221 1 307 12 99 2 124 2 327 1 25 2 352 1 29 1 130 2 131 1 309 1 31 6 103 2 160 1 244 1 367 1 70 1 169 1 112 1 48 6 170 1 316 1 195 1 217 2 94 2 
221 1 307 18 99 2 124 8 327 4 25 2 27 1 352 3 29 1 130 1 131 1 330 1 309 4 31 8 103 2 160 1 244 1 246 1 364 1 367 4 70 4 213 2 89 1 169 1 112 2 15 1 48 10 170 1 316 1 195 1 217 3 94 5 201 1 
221 1 307 16 99 2 124 8 327 4 25 3 352 3 29 1 130 2 131 1 309 4 31 7 103 3 160 1 244 1 367 4 252 1 70 4 213 2 169 1 112 3 48 9 170 1 316 1 195 1 217 3 94 6 
99 1 307 7 89 2 27 3 352 3 112 3 48 3 330 3 31 4 217 1 94 6 246 1 364 1 
221 1 307 18 99 2 124 8 327 4 25 2 27 1 352 3 29 1 130 1 131 1 330 1 309 4 31 8 103 2 160 1 244 1 246 1 364 1 367 4 252 1 70 4 213 2 89 1 169 1 112 1 48 10 170 1 316 1 195 1 217 3 94 4 201 1 
99 1 307 8 367 2 70 2 327 2 124 4 213 1 89 1 352 2 27 1 112 1 48 4 330 1 309 2 31 4 217 1 94 3 201 1 246 1 364 1 
307 6 99 1 89 1 27 1 352 2 206 1 48 3 330 1 31 3 217 1 94 2 201 1 246 1 364 1 
99 1 367 1 307 4 70 1 327 1 124 2 25 1 352 1 130 1 112 1 15 1 48 2 309 1 31 2 217 1 103 1 94 2 
66 1 99 1 307 7 25 1 352 1 130 1 29 2 112 1 48 3 31 4 195 1 217 1 103 1 160 1 94 2 
280 1 307 23 99 3 25 2 327 2 124 4 27 2 352 5 29 2 130 2 330 2 309 2 31 12 7 1 103 2 160 2 246 1 364 1 66 1 367 2 70 2 213 2 89 1 112 4 48 11 274 1 217 3 94 9 201 1 
31 1 307 1 29 1 
307 1 160 1 48 1 
367 1 307 6 99 1 70 1 124 2 327 1 25 1 352 2 112 1 130 1 15 1 48 3 309 1 31 3 360 1 217 1 103 1 94 3 
221 1 307 12 99 2 124 2 327 1 25 2 352 1 29 1 130 2 131 1 309 1 31 6 103 2 160 1 244 1 367 1 70 1 169 1 112 1 48 6 170 1 316 1 195 1 217 2 94 2 
307 6 99 1 27 1 352 1 112 1 48 3 330 1 31 3 217 1 94 2 364 1 
280 1 307 3 367 1 70 1 213 1 327 1 124 2 89 1 352 1 27 1 112 1 48 1 330 1 309 1 31 2 94 2 246 1 
312 1 158 1 138 1 127 1 26 1 289 1 241 1 
312 1 127 1 26 1 129 1 289 1 241 1 158 1 138 1 139 1 291 1 339 1 9 1 
332 1 279 1 355 1 220 1 189 1 230 1 333 1 167 1 13 4 338 1 14 1 314 4 224 4 
279 1 220 2 108 1 211 1 214 1 154 1 13 2 314 2 14 1 264 1 114 1 224 2 332 1 379 1 
229 1 220 1 135 1 216 1 13 1 338 1 14 1 314 1 132 1 224 1 
279 1 220 1 167 1 42 1 13 2 314 2 14 1 224 2 332 1 133 1 19 1 
279 2 220 2 189 1 230 1 108 1 167 1 42 1 13 4 314 5 14 2 224 5 332 3 80 1 355 1 5 1 338 1 
279 2 220 2 189 1 230 1 108 1 145 1 167 1 42 1 13 4 314 5 14 2 224 5 332 3 80 1 355 1 338 1 
332 1 279 1 355 1 220 1 230 1 13 1 338 1 14 1 314 1 206 1 224 1 
279 1 312 2 220 1 154 1 205 1 153 1 13 1 26 1 314 1 14 1 193 1 289 2 241 1 223 1 224 1 332 1 61 1 338 1 
279 2 220 1 153 1 205 1 154 2 26 2 289 2 241 1 223 2 224 1 332 3 61 1 102 1 290 1 312 2 188 1 108 1 165 1 13 1 14 1 314 1 193 1 257 1 
279 2 220 1 153 1 205 1 154 2 26 2 289 2 241 1 223 2 224 2 332 3 333 1 102 1 290 1 141 1 312 2 188 1 108 1 165 1 13 2 14 1 314 2 193 1 257 1 
282 2 279 1 220 1 154 1 224 3 332 4 137 1 333 1 84 1 338 1 37 1 163 2 188 1 164 1 108 1 165 1 13 3 14 1 314 3 375 1 51 1 320 1 380 1 
37 1 279 1 282 2 163 2 220 1 188 1 165 1 108 1 154 1 13 3 314 3 14 1 224 3 332 4 51 1 137 1 333 1 84 1 320 1 338 1 161 1 380 1 
220 1 345 1 13 1 14 1 314 1 224 1 
279 2 220 3 42 1 167 1 154 1 13 6 314 7 14 2 264 1 224 7 80 1 332 3 5 1 133 1 345 1 186 1 338 2 379 1 34 1 85 1 311 1 
279 1 202 2 324 1 99 1 153 1 327 2 205 1 154 1 289 2 241 2 330 1 332 1 61 1 6 1 246 1 69 1 167 1 70 2 253 2 13 1 14 1 304 1 217 1 20 1 220 1 22 1 307 6 124 4 26 1 27 1 352 2 223 1 224 1 309 2 31 3 364 1 312 2 41 1 367 2 89 1 314 1 192 1 193 1 48 3 315 1 94 2 201 1 
306 1 282 3 286 2 152 2 100 1 224 1 332 2 159 1 137 1 136 1 84 1 338 1 267 1 161 1 104 1 37 1 163 3 251 1 13 1 314 1 90 1 342 2 51 1 318 2 320 2 93 1 380 1 54 1 
279 1 323 1 220 2 167 1 154 1 13 2 314 2 14 1 224 2 332 2 84 1 345 1 34 1 
279 1 312 2 220 1 154 1 205 1 153 1 13 1 26 1 314 1 14 1 193 1 289 2 241 1 223 1 224 1 332 1 338 1 141 1 
279 1 220 2 108 1 154 1 13 1 314 1 14 1 264 1 224 1 332 1 379 1 34 1 311 1 
168 1 234 1 371 1 337 1 241 1 
37 1 282 2 163 2 269 1 350 1 176 1 168 1 236 1 371 2 241 1 51 1 137 1 136 1 102 1 290 1 337 2 234 2 257 1 74 1 
312 1 168 1 371 1 26 1 289 1 301 1 148 1 337 1 247 1 
350 1 168 1 74 1 
62 1 266 1 190 1 199 1 238 1 36 1 381 1 331 1 
39 1 151 1 181 1 190 1 58 1 79 2 238 4 331 1 147 1 266 2 208 1 199 3 36 2 381 4 
23 1 190 1 238 2 79 1 331 1 82 1 62 1 266 1 277 1 199 1 381 2 36 1 
181 1 190 1 238 3 58 2 331 1 62 1 266 1 334 1 199 1 208 2 381 3 36 1 
92 1 313 1 263 2 199 2 
376 1 62 1 190 1 238 1 381 1 331 1 
62 1 266 1 190 1 199 1 79 1 238 2 363 1 36 1 381 2 331 1 
95 1 
62 1 266 1 190 1 199 1 238 1 36 1 381 1 331 1 
266 1 199 1 206 1 36 1 
266 1 190 1 199 1 238 1 36 1 381 1 331 1 
358 1 77 1 381 1 
190 1 181 1 238 3 58 1 331 1 317 1 62 1 266 1 199 1 208 2 381 3 36 1 
11 1 266 1 190 1 199 1 79 1 238 2 36 1 381 2 331 1 
229 1 39 1 76 1 287 1 190 1 238 1 132 1 331 1 62 1 199 1 381 1 
62 1 266 1 190 1 199 1 238 1 381 1 331 1 
62 1 266 2 190 1 238 1 36 1 381 1 331 1 
190 2 238 2 331 2 183 1 62 1 266 1 199 1 218 1 381 2 140 1 
39 1 190 1 238 3 79 2 331 1 147 1 62 1 344 1 266 1 199 2 363 1 36 1 381 3 
55 1 229 1 287 1 190 1 238 2 79 1 132 2 373 1 331 1 135 1 62 1 266 1 199 1 36 1 381 2 
11 1 21 1 39 1 190 2 238 4 79 2 331 2 147 1 62 1 266 1 199 2 36 1 381 4 
190 1 79 1 238 3 331 1 62 1 266 1 208 1 199 1 363 1 381 3 36 1 
39 1 151 1 199 1 147 1 
266 1 199 1 

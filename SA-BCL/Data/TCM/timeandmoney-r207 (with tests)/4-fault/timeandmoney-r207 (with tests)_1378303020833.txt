#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 2 350 4 159 1 161 1 35 1 208 1 327 9 60 9 210 1 105 2 42 1 270 1 171 2 19 1 339 2 20 1 113 1 136 1 90 1 227 1 27 1 274 1 294 2 317 5 347 6 31 3 374 2 260 2 
319 2 350 4 159 1 161 1 35 1 208 1 327 9 60 9 210 1 105 2 42 1 270 1 171 2 19 1 339 2 20 1 113 1 136 1 90 1 227 1 27 1 274 1 294 2 317 5 347 6 31 3 374 2 260 2 
319 2 350 5 159 1 161 1 35 1 208 1 327 10 60 10 210 1 105 2 42 1 270 1 171 2 19 1 339 2 20 1 113 1 136 1 90 1 227 1 27 1 274 1 294 2 317 6 347 7 31 4 374 2 260 2 
319 2 350 3 159 1 161 1 35 1 208 1 327 7 60 7 210 1 105 2 42 1 270 1 171 2 19 1 339 1 20 1 113 1 136 1 90 1 227 1 27 1 294 2 317 4 347 4 31 2 374 2 260 2 
319 1 171 1 350 2 19 1 339 2 113 1 161 1 327 4 60 4 210 1 42 1 274 1 294 1 317 3 347 3 31 1 374 1 260 1 
319 1 77 1 19 1 113 1 159 1 208 1 327 2 60 2 239 1 210 1 105 1 119 1 294 1 317 1 374 1 260 1 
350 1 19 1 113 1 327 3 60 3 90 1 210 1 105 1 317 2 347 1 31 1 374 2 260 2 
319 1 350 4 161 1 327 9 58 1 60 9 210 1 105 1 42 1 171 1 19 1 339 2 113 1 88 1 136 1 90 1 27 1 294 1 274 1 317 5 347 7 31 3 374 2 260 2 
319 1 350 4 161 1 327 9 58 1 60 9 210 1 105 1 42 1 171 1 19 1 339 2 113 1 88 1 136 1 90 1 27 1 294 1 274 1 317 5 347 7 31 3 374 2 260 2 
177 1 214 1 145 1 
214 1 174 1 7 2 
190 1 206 2 371 2 141 2 124 2 280 2 194 2 336 1 
96 1 206 2 278 1 323 2 237 1 79 1 78 1 124 3 280 3 328 2 150 1 190 1 265 1 41 2 9 1 243 1 129 1 194 2 219 1 336 1 287 1 46 1 288 1 16 1 197 1 224 2 69 1 366 1 253 1 138 1 368 1 293 1 345 1 372 1 371 2 141 2 122 2 
206 1 280 1 124 1 371 1 141 1 43 1 194 1 169 1 336 1 
12 1 220 1 67 1 101 1 280 1 124 1 175 1 103 1 177 1 149 1 214 1 141 1 131 1 108 1 
12 2 220 1 67 1 206 1 280 1 124 1 175 1 103 1 177 1 149 1 214 1 371 1 141 1 108 2 194 1 
12 1 38 1 179 1 108 1 238 1 
12 2 38 1 177 1 255 1 179 1 214 1 139 1 108 2 
12 1 179 1 108 1 
12 1 206 1 2 1 280 1 124 1 38 1 371 1 43 1 141 1 108 1 194 1 169 1 336 1 
214 1 
12 2 231 1 38 1 177 1 255 1 179 1 214 1 108 2 
157 1 12 5 154 2 55 2 365 1 47 1 209 1 38 2 116 2 189 1 177 1 255 1 73 1 332 1 179 2 214 1 268 1 108 5 170 1 
190 1 145 1 
206 1 340 1 280 2 124 2 40 1 190 2 371 1 141 2 194 1 
153 1 285 1 301 1 
205 1 323 1 224 1 69 1 78 1 79 1 366 1 124 1 280 1 253 1 368 1 293 1 190 1 9 1 129 1 122 1 
206 1 323 1 224 1 69 1 79 1 78 1 366 1 280 2 124 2 253 1 301 1 368 1 293 1 8 1 273 1 9 1 129 1 141 1 194 1 122 1 
190 1 273 1 206 3 371 1 141 3 124 3 280 3 194 3 
206 1 43 1 141 1 124 1 280 1 194 1 
40 1 206 1 340 1 371 1 141 1 175 1 124 1 280 1 194 1 
206 3 278 1 323 1 79 1 78 1 160 1 124 4 280 4 328 1 103 1 40 1 150 1 149 1 190 1 8 1 265 1 41 2 9 1 243 1 129 1 194 3 108 1 219 1 336 1 12 1 288 1 220 1 67 1 16 1 196 1 197 1 69 1 224 1 366 1 175 1 253 1 368 1 293 1 345 1 273 1 372 1 371 2 141 3 122 1 
190 1 206 1 273 1 121 1 141 2 124 2 280 2 131 1 194 1 
12 1 67 1 233 1 220 1 196 1 206 3 175 1 280 3 124 3 103 1 40 1 149 1 8 1 273 2 371 1 214 1 141 3 108 1 194 3 
206 2 280 2 124 2 301 1 40 1 273 1 371 1 141 2 285 1 194 2 
323 1 224 1 69 1 78 1 79 1 366 1 124 1 280 1 253 1 368 1 293 1 190 1 9 1 129 1 122 1 
14 1 323 1 224 1 311 1 78 1 79 1 366 1 124 1 280 1 368 1 293 1 190 1 9 1 129 1 122 1 
96 2 97 1 278 2 158 1 162 1 328 4 301 2 150 1 41 2 167 1 243 1 305 1 285 2 219 1 45 1 83 1 13 1 153 2 288 1 16 1 173 1 345 1 275 1 318 1 
149 1 206 1 322 1 141 1 175 1 124 1 280 1 194 1 
206 4 57 1 280 5 124 5 40 1 127 1 273 2 190 1 8 1 371 1 121 1 141 5 131 1 194 4 
206 1 43 1 141 1 124 1 280 1 194 1 
142 1 200 1 
142 1 200 1 
286 1 106 1 
286 1 106 1 
286 1 106 1 
250 1 142 1 200 1 
250 1 142 1 200 1 
286 1 166 1 106 1 75 1 142 2 200 2 
181 1 142 1 200 1 
250 1 142 1 200 1 
66 1 142 1 200 1 
66 1 142 1 200 1 
66 1 142 1 200 1 
53 1 12 2 123 1 84 2 54 1 100 2 251 1 36 1 200 2 188 1 292 2 303 1 151 2 214 1 216 2 75 1 142 2 108 2 185 3 
123 1 297 1 234 1 206 2 100 1 280 2 124 2 125 1 302 1 190 1 61 1 151 1 216 1 246 1 194 2 108 1 12 1 84 1 200 1 256 1 181 1 141 2 142 1 185 1 
319 1 171 1 294 1 
319 1 294 1 239 1 
171 2 319 3 356 1 22 1 183 1 239 1 
171 1 319 2 356 1 22 1 23 1 239 1 
171 1 319 2 356 2 22 1 239 1 
157 2 297 1 55 1 236 1 144 1 300 2 209 3 7 3 302 1 148 1 38 4 189 1 61 1 167 1 214 2 305 1 217 1 108 5 45 1 12 5 154 1 133 1 17 2 174 1 86 1 116 1 255 1 177 1 179 1 92 1 275 1 348 2 
157 6 320 1 95 1 55 2 236 3 279 1 326 1 144 2 300 6 209 8 7 9 238 5 38 7 39 5 189 1 61 4 167 3 214 5 305 3 217 2 108 9 170 1 45 3 12 9 154 2 21 1 225 1 174 3 86 1 116 2 177 1 255 1 179 6 275 3 348 6 
157 2 55 1 236 1 144 1 209 3 300 2 7 4 38 2 148 1 61 1 167 1 214 3 305 1 217 1 108 3 170 1 45 1 12 3 154 1 133 1 17 1 174 2 116 1 177 1 275 1 348 2 
157 4 95 1 55 1 236 2 279 1 326 1 144 1 300 4 209 5 7 7 148 1 38 3 61 2 167 2 214 4 305 2 217 1 108 4 170 1 45 2 12 4 154 1 133 1 17 2 174 3 116 1 177 1 275 2 348 4 
293 1 299 1 145 1 
293 1 11 1 
357 1 
293 1 79 1 
299 2 293 3 98 1 79 1 78 1 261 1 
293 1 79 1 78 1 
293 1 37 1 
13 2 96 4 289 1 222 1 362 2 278 3 341 1 173 3 252 1 328 7 291 1 167 1 370 1 51 1 305 1 306 1 193 1 
13 2 96 4 289 1 222 1 362 2 278 3 341 1 173 3 252 1 328 7 291 1 167 1 370 1 51 1 305 1 306 1 193 1 
13 2 96 4 289 1 222 1 362 2 278 3 341 1 173 3 252 1 328 7 291 1 167 1 370 1 51 1 305 1 306 1 193 1 32 1 
96 16 235 3 278 15 236 3 328 31 41 2 167 4 243 1 305 4 306 5 358 1 193 1 45 3 219 1 13 5 110 1 288 1 16 1 289 2 362 3 222 2 341 1 134 4 173 10 310 1 252 2 70 1 114 1 135 1 291 1 51 1 370 2 118 1 275 3 
337 1 13 3 96 5 288 2 289 1 16 2 222 1 362 2 341 1 173 4 278 4 252 1 328 9 313 1 41 4 167 1 370 1 51 1 243 2 118 1 305 1 306 1 193 1 219 2 
319 2 321 1 323 1 102 1 327 2 147 1 60 2 239 1 104 1 330 1 210 1 105 1 264 1 9 1 171 1 19 1 113 1 224 1 366 1 254 1 226 1 343 1 178 1 294 1 317 1 347 1 183 1 122 1 374 1 260 1 
34 1 319 2 232 1 323 1 102 1 327 3 147 1 60 3 239 1 330 1 105 1 264 1 9 1 171 1 19 1 113 1 224 1 366 1 254 1 176 1 226 1 343 1 178 1 294 1 317 1 347 2 183 1 122 1 374 1 260 1 
319 2 232 1 323 1 102 1 327 2 147 1 60 2 239 1 105 1 9 1 171 1 19 1 113 1 224 1 366 1 254 1 176 1 226 1 343 1 178 1 294 1 317 1 347 2 183 1 122 1 
34 1 323 1 207 1 79 1 102 2 327 1 60 1 147 2 105 2 9 1 129 1 195 1 224 1 198 1 366 1 342 1 343 2 315 1 293 1 228 1 122 1 374 1 260 1 
319 2 232 1 323 1 102 1 327 1 147 1 60 1 239 1 104 1 330 1 210 1 105 1 264 1 9 1 171 1 224 1 366 1 254 1 226 1 343 1 178 1 294 1 183 1 122 1 374 1 260 1 
111 1 
55 1 323 2 101 1 280 1 7 2 329 2 103 1 189 1 149 1 9 1 245 2 283 1 108 5 107 1 12 5 15 1 154 1 67 1 198 1 342 1 290 2 115 1 116 1 255 3 156 1 293 1 74 2 122 2 157 2 352 1 79 1 124 1 209 2 128 1 212 1 214 2 304 1 129 2 130 4 217 1 44 2 131 1 308 1 220 1 361 2 224 2 174 2 366 1 175 1 369 2 177 1 179 6 140 1 182 1 141 1 
12 3 231 1 67 1 220 1 352 1 101 1 175 1 280 1 124 1 103 1 255 1 149 1 212 1 128 1 179 2 245 1 130 2 140 1 283 1 141 1 108 3 131 1 
12 3 231 1 67 1 220 1 352 1 361 1 101 1 175 1 280 1 124 1 103 1 255 1 177 1 149 1 212 1 128 1 179 1 214 1 130 3 140 1 283 1 141 1 108 3 131 1 
231 1 352 1 101 1 124 1 280 1 103 1 149 1 128 1 212 1 214 1 130 3 245 1 283 1 44 1 131 1 108 3 12 3 220 1 67 1 361 1 175 1 255 1 177 1 179 2 140 1 141 1 
231 1 55 1 101 1 280 1 146 1 329 2 103 1 189 1 149 1 245 4 283 1 63 1 108 5 12 5 15 1 338 1 67 1 154 1 290 2 116 1 255 3 74 2 33 1 157 1 352 1 124 1 209 1 212 1 128 1 214 5 130 6 44 4 131 1 308 1 172 1 220 1 361 4 174 2 175 1 369 2 177 5 179 7 140 1 141 1 
55 1 101 1 280 1 329 2 7 2 103 1 189 1 149 1 245 2 283 1 108 4 12 4 15 1 67 1 154 1 290 2 116 1 255 2 74 2 157 1 352 1 124 1 209 1 212 1 128 1 304 1 214 2 130 4 44 2 131 1 308 1 220 1 361 2 174 2 175 1 369 2 177 1 179 4 140 1 141 1 
157 1 352 1 55 1 101 1 124 1 280 1 146 1 209 1 329 2 103 1 189 1 149 1 128 1 212 1 214 1 245 2 130 4 283 1 44 2 131 1 108 4 12 4 15 1 308 1 172 1 220 1 67 1 154 1 361 2 174 2 175 1 290 2 116 1 369 2 177 1 255 2 74 2 179 4 140 1 141 1 33 1 
157 1 352 1 55 1 101 1 124 1 280 1 146 1 209 1 329 2 103 1 189 1 149 1 128 1 212 1 214 1 245 2 130 4 283 1 44 2 131 1 108 4 12 4 15 1 308 1 172 1 220 1 67 1 154 1 361 2 174 2 175 1 290 2 116 1 369 2 177 1 255 2 74 2 179 4 140 1 141 1 33 1 
157 1 76 2 0 1 352 1 55 1 324 2 101 1 124 1 280 1 209 1 7 2 329 2 103 1 189 1 149 1 128 1 212 1 214 1 245 2 130 4 283 1 44 2 131 1 108 4 12 4 15 1 220 1 67 1 154 1 361 2 175 1 116 1 177 1 255 2 74 2 179 4 140 1 120 1 141 1 30 1 33 1 
157 1 55 1 352 1 101 1 124 1 280 1 146 1 209 1 329 2 103 1 189 1 149 1 128 1 212 1 214 1 130 5 245 3 283 1 63 1 44 3 131 1 108 4 12 4 15 1 308 1 172 1 154 1 220 1 67 1 361 3 174 2 175 1 290 2 116 1 369 2 177 1 255 2 74 2 179 5 140 1 141 1 33 1 
157 1 55 1 352 1 101 1 124 1 280 1 146 1 209 1 329 2 103 1 189 1 149 1 128 1 212 1 214 1 130 5 245 3 283 1 63 1 44 3 131 1 108 4 12 4 15 1 308 1 172 1 154 1 220 1 67 1 361 3 174 2 175 1 290 2 116 1 369 2 177 1 255 2 74 2 179 5 140 1 141 1 33 1 
0 1 55 1 324 2 101 1 280 1 329 2 7 2 103 1 189 1 149 1 245 2 283 1 108 4 12 4 15 1 67 1 154 1 116 1 255 2 74 2 157 1 76 2 352 1 124 1 209 1 212 1 128 1 304 1 214 1 130 4 44 2 131 1 220 1 361 2 175 1 177 1 179 4 140 1 141 1 
13 2 153 1 96 3 288 1 16 1 362 1 278 3 341 1 173 2 158 1 145 1 252 1 328 6 301 1 150 1 190 2 345 1 41 2 167 1 243 1 51 1 370 1 305 1 285 1 193 1 219 1 
96 8 235 3 278 6 236 2 328 14 301 11 150 1 190 1 41 4 167 1 242 1 243 2 305 2 306 1 285 4 219 2 45 2 13 1 153 11 110 1 288 2 16 2 173 2 134 3 310 1 24 1 138 1 344 1 345 2 372 1 275 1 296 1 204 1 
205 1 96 1 206 1 323 1 278 1 79 1 78 1 124 2 280 2 328 2 150 1 190 1 8 1 81 1 41 2 9 1 333 1 129 1 243 1 215 1 285 1 194 1 219 1 288 1 16 1 69 1 224 1 366 1 253 1 368 1 138 1 293 1 345 1 273 1 372 1 141 1 296 1 122 1 
232 1 96 10 278 10 323 3 236 2 280 3 328 20 331 1 150 3 190 2 8 1 9 2 243 3 285 7 193 1 194 1 13 4 153 7 288 3 16 3 18 2 341 1 197 2 69 2 252 1 199 2 253 2 201 1 293 2 345 3 296 1 122 3 349 2 206 1 78 2 79 2 124 3 301 7 41 6 167 3 129 1 305 3 306 4 219 3 45 2 132 2 362 1 173 8 224 3 366 2 138 1 368 2 273 1 370 1 51 1 372 1 141 1 275 2 94 1 
232 1 96 1 321 1 56 1 206 1 323 8 278 1 158 1 237 2 79 2 124 1 280 1 328 2 282 1 150 2 41 4 9 2 129 2 243 2 152 1 194 1 219 2 288 2 16 2 363 1 224 8 198 1 366 2 342 1 312 1 138 1 89 1 293 3 25 1 273 1 345 2 372 1 141 1 122 7 
96 1 206 1 236 1 278 2 280 1 124 1 328 3 301 1 165 1 40 1 150 1 41 2 167 1 243 1 305 1 285 1 194 1 219 1 45 1 13 1 153 1 288 1 16 1 173 1 345 1 371 1 141 1 275 1 296 1 
153 1 96 2 288 1 16 1 173 1 158 1 328 2 301 1 150 1 345 1 41 2 243 1 305 1 306 1 318 1 285 1 219 1 45 1 
13 1 83 1 153 1 288 1 16 1 173 1 278 2 158 1 328 2 301 1 150 1 345 1 41 2 167 1 243 1 275 1 285 1 219 1 
96 2 236 1 278 2 158 1 328 4 301 2 150 1 41 2 167 1 243 1 305 1 306 1 285 2 45 1 219 1 13 1 153 2 288 1 16 1 173 2 345 1 275 1 
153 1 96 2 288 1 16 1 173 1 328 2 301 1 282 1 150 1 345 1 41 2 243 1 305 1 306 1 318 1 285 1 219 1 45 1 
13 1 83 1 153 1 288 1 16 1 173 1 278 2 328 2 301 1 282 1 150 1 345 1 41 2 167 1 243 1 275 1 285 1 219 1 
96 2 236 1 278 2 328 4 301 2 282 1 150 1 41 2 167 1 243 1 305 1 306 1 285 2 45 1 219 1 13 1 153 2 288 1 16 1 173 2 345 1 275 1 
13 1 153 2 96 2 288 1 16 1 278 2 173 2 236 1 328 4 301 2 150 1 345 1 41 2 167 1 243 1 305 1 275 1 306 1 285 2 219 1 45 1 
96 1 323 1 278 1 79 1 78 1 280 1 124 1 328 2 150 1 190 1 41 2 9 1 129 1 243 1 219 1 288 1 16 1 197 1 69 1 224 1 366 1 253 1 138 1 368 1 293 1 345 1 372 1 122 1 
96 1 323 1 278 1 79 1 78 1 280 1 124 1 328 2 150 1 190 1 41 2 9 1 129 1 243 1 219 1 14 1 288 1 16 1 224 1 311 1 366 1 138 1 368 1 293 1 345 1 202 1 372 1 122 1 
96 2 236 1 278 2 328 4 301 2 150 1 41 2 167 1 243 1 305 1 306 1 285 2 45 1 219 1 13 1 153 2 288 1 16 1 173 2 345 1 275 1 296 1 
96 2 321 1 278 2 323 1 236 1 78 1 79 1 280 1 124 1 328 4 301 2 150 1 41 2 167 1 9 1 243 1 305 1 306 1 285 2 45 1 219 1 13 1 153 2 288 1 16 1 18 1 173 2 197 1 69 1 224 1 366 1 253 1 368 1 293 1 345 1 275 1 122 1 
96 2 206 1 278 1 236 1 280 1 124 1 328 3 301 1 40 1 150 1 41 2 167 1 243 1 305 1 306 1 285 1 194 1 219 1 45 1 153 1 288 1 16 1 173 1 345 1 371 1 141 1 275 1 373 1 296 1 
96 9 235 1 278 10 236 3 4 1 328 19 41 4 213 1 167 3 243 2 305 3 306 3 219 2 45 3 337 1 13 3 110 1 288 2 16 2 85 2 134 2 173 6 309 2 310 1 87 1 48 1 49 1 316 1 26 1 275 3 
96 14 298 1 235 2 278 12 236 3 328 26 240 1 211 1 41 6 167 2 213 2 243 3 305 3 306 2 219 3 45 3 337 1 13 2 65 1 288 3 16 3 85 1 173 4 134 2 309 4 310 2 87 2 48 1 49 1 26 1 118 2 29 1 275 2 93 1 
96 20 298 1 235 3 278 21 236 4 4 1 328 41 240 1 211 1 41 6 213 1 167 5 243 3 305 5 306 4 193 1 248 1 219 3 45 4 337 1 65 1 13 4 110 1 288 3 16 3 362 1 85 1 341 1 134 4 173 8 309 4 310 3 87 2 252 1 48 1 49 1 26 1 370 1 51 1 118 1 29 1 275 4 93 1 
96 20 298 1 235 3 278 18 236 4 4 1 328 38 240 1 211 1 41 8 213 1 167 4 243 4 305 5 306 3 193 1 248 1 219 4 45 4 337 1 65 1 13 4 110 1 288 4 16 4 362 1 85 1 341 1 134 4 173 7 309 4 310 3 87 2 252 1 48 1 49 1 26 1 370 1 51 1 118 2 29 1 275 3 93 1 
96 27 298 1 235 4 278 25 236 7 328 52 240 1 211 1 41 4 213 1 167 8 243 2 305 8 306 7 193 1 219 2 45 7 337 1 65 1 13 7 110 2 288 2 16 2 362 1 85 1 341 1 134 4 173 14 309 4 310 2 87 1 252 1 48 1 49 1 344 2 26 1 370 1 51 1 118 1 29 1 275 7 93 1 
96 1 323 2 278 1 325 1 237 2 79 1 124 2 280 2 328 2 150 1 126 1 41 2 9 1 243 1 82 1 334 1 307 1 219 1 288 1 16 1 224 2 366 1 312 1 138 1 293 1 25 1 345 1 372 1 141 2 296 1 122 2 
171 1 319 2 232 1 321 1 271 1 99 1 323 2 224 2 366 1 239 1 147 1 72 1 226 1 264 1 178 1 9 1 294 1 183 1 122 2 
171 1 319 2 232 1 271 1 323 1 224 1 366 1 239 1 147 1 226 1 264 1 178 1 9 1 191 1 294 1 183 1 122 1 
360 1 323 1 224 1 79 1 198 1 366 1 342 1 147 1 72 1 293 1 9 1 228 1 129 1 122 1 
171 1 319 2 232 1 271 1 99 1 323 1 224 1 366 1 239 1 147 1 72 1 226 1 264 1 178 1 9 1 294 1 183 1 122 1 
5 1 
157 1 177 1 73 1 332 1 214 1 145 1 209 1 
157 1 55 1 209 1 7 1 189 1 214 2 108 1 12 1 308 1 154 1 174 1 290 1 116 1 369 1 255 1 177 1 179 1 
186 1 277 1 321 1 55 4 98 1 323 3 236 2 6 2 7 12 281 1 189 4 332 1 9 3 244 2 11 3 335 1 108 5 249 1 12 5 154 4 67 2 116 4 255 3 293 10 73 1 348 6 122 3 349 2 157 8 351 2 299 2 79 3 78 3 37 2 262 2 209 9 300 6 167 2 129 1 214 8 305 2 217 2 45 2 224 3 174 6 366 4 272 2 177 2 179 5 182 1 275 2 229 2 184 2 52 2 
157 5 55 2 235 1 236 2 6 2 300 5 209 8 7 6 240 1 189 2 211 1 167 2 214 5 62 1 305 2 217 1 108 1 45 2 12 1 65 1 154 2 134 1 310 1 174 3 116 2 255 1 177 2 179 1 182 1 29 1 275 2 348 5 93 1 184 1 276 1 
157 2 55 1 206 1 2 1 6 2 124 1 280 1 209 2 189 1 167 1 43 1 305 2 108 1 194 1 169 1 336 1 12 1 172 1 68 1 154 1 341 1 252 1 116 1 370 1 371 1 141 1 184 1 
157 1 116 1 189 1 177 1 55 1 154 1 73 1 332 1 214 1 209 1 
157 5 236 2 174 5 6 2 300 5 209 5 7 10 167 2 214 5 305 2 275 2 348 5 184 1 349 1 45 2 
12 1 177 1 255 1 179 1 214 1 108 1 
157 2 277 1 55 2 143 1 323 4 78 1 79 2 163 1 263 1 187 1 209 2 353 1 189 1 9 2 129 2 217 2 335 2 108 3 170 1 12 3 154 2 224 4 198 1 366 3 342 1 115 1 116 2 117 1 156 1 255 2 293 2 179 4 182 2 122 4 
206 2 278 1 323 1 78 1 79 1 124 3 280 3 328 1 150 1 190 1 265 1 41 2 9 1 243 1 129 1 194 2 336 1 219 1 288 1 16 1 197 1 224 1 69 1 366 1 253 1 368 1 293 1 345 1 372 1 371 2 141 2 122 1 
157 2 154 1 55 1 362 1 174 2 300 2 209 1 7 4 116 1 189 1 177 2 214 4 182 1 217 1 348 2 
355 1 84 1 216 1 
355 1 84 1 216 1 
188 1 234 1 84 1 221 1 216 1 
355 1 84 1 216 1 
359 1 84 1 216 1 
359 1 84 1 216 1 
359 1 84 1 216 1 
84 1 216 1 
142 1 200 1 
13 2 96 4 288 2 16 2 362 1 341 1 278 4 173 3 252 1 328 8 41 4 167 1 243 2 51 1 370 1 118 1 305 1 306 1 193 1 219 2 
13 2 96 3 362 1 278 3 173 2 341 1 145 1 252 1 328 6 167 1 51 1 370 1 305 1 193 1 
13 1 96 2 288 1 16 1 278 2 173 2 236 1 328 4 41 2 167 1 243 1 305 1 275 1 306 1 295 1 219 1 45 1 
13 1 96 3 110 1 235 1 134 2 278 4 236 1 173 2 310 1 328 7 167 1 305 1 275 1 306 1 45 1 
96 11 235 2 236 2 278 12 328 23 41 4 167 3 243 2 305 3 306 4 193 1 45 2 219 2 13 5 110 1 288 2 16 2 155 1 362 1 341 1 173 9 134 2 252 2 24 1 344 1 370 2 51 1 118 2 275 2 
278 1 134 1 328 1 
96 1 235 1 328 1 
13 2 96 3 288 1 16 1 278 3 236 1 173 3 328 6 41 2 167 1 243 1 305 1 306 1 275 1 295 1 349 1 219 1 45 1 
96 6 235 1 278 6 236 2 328 12 240 1 211 1 41 2 167 2 243 1 305 2 306 1 219 1 45 2 337 1 65 1 13 1 288 1 16 1 134 1 173 2 310 1 29 1 275 2 93 1 
13 1 96 3 341 1 278 3 173 2 252 1 328 6 167 1 370 1 305 1 306 1 
13 1 96 1 288 1 155 1 16 1 173 2 278 2 252 1 328 3 41 2 370 1 243 1 51 1 118 1 306 1 193 1 219 1 
337 1 13 3 96 5 288 1 68 1 16 1 173 5 278 5 341 1 252 2 328 10 41 2 167 2 243 1 370 2 305 2 306 2 219 1 
337 1 96 2 288 1 16 1 173 1 328 2 41 2 243 1 305 1 306 1 219 1 45 1 
337 1 13 1 96 2 288 1 16 1 278 2 173 2 236 1 328 4 41 2 167 1 243 1 305 1 275 1 306 1 219 1 45 1 
337 1 13 1 96 1 288 3 155 1 16 3 278 2 173 2 4 1 252 1 328 3 41 6 243 3 370 1 118 1 306 1 219 3 
96 16 235 3 278 18 236 3 4 1 328 34 41 10 167 5 243 5 305 5 306 5 358 1 193 1 219 5 45 3 337 1 13 7 110 1 288 5 155 1 16 5 362 1 341 2 134 4 173 12 310 1 252 3 70 1 114 1 370 3 51 1 118 2 275 3 295 1 
96 4 235 1 278 4 328 8 41 2 167 1 243 1 305 1 193 1 219 1 337 1 65 1 13 2 288 1 16 1 362 1 134 1 173 2 341 1 310 1 252 1 51 1 370 1 
96 6 235 1 278 5 236 1 328 11 41 4 167 1 243 2 305 2 306 1 193 1 219 2 45 1 337 1 13 2 65 1 110 1 288 2 16 2 362 1 341 1 134 2 173 3 310 1 252 1 370 1 51 1 295 1 
96 9 235 1 278 10 236 2 328 19 240 1 211 1 41 6 167 3 243 3 305 3 306 1 193 1 219 3 45 2 337 1 65 1 13 3 288 3 16 3 362 1 341 1 134 1 173 4 310 1 252 1 370 1 51 1 118 1 29 1 275 2 93 1 295 1 
96 10 235 1 278 7 236 2 328 17 240 1 211 1 41 6 167 2 243 3 305 3 306 2 193 1 219 3 45 2 337 1 65 1 13 3 288 3 16 3 362 1 341 1 134 1 173 5 310 1 252 1 370 1 51 1 118 1 29 1 275 1 93 1 295 1 
96 4 235 1 278 4 328 8 41 2 167 1 243 1 305 1 193 1 219 1 337 1 65 1 13 2 288 1 16 1 362 1 134 1 173 2 341 1 310 1 252 1 51 1 370 1 
96 6 235 1 278 6 236 2 328 12 240 1 211 1 41 2 167 2 243 1 305 2 306 1 219 1 45 2 337 1 65 1 13 1 288 1 16 1 134 1 173 2 310 1 29 1 275 2 93 1 
96 10 235 1 278 8 236 2 328 18 240 1 211 1 41 8 167 2 243 4 305 3 306 2 193 1 219 4 45 2 337 1 65 1 13 3 288 4 16 4 362 1 341 1 134 1 173 5 310 1 252 1 370 1 51 1 118 2 29 1 275 1 93 1 295 1 
96 9 235 1 278 7 236 3 4 1 328 16 240 1 211 1 41 8 167 2 243 4 305 3 306 3 219 4 45 3 337 1 65 1 13 3 288 4 16 4 134 1 173 6 310 1 118 2 29 1 275 2 93 1 
13 3 96 3 278 4 173 6 341 1 252 3 328 7 167 1 51 1 370 3 305 1 306 3 193 2 
96 10 235 1 278 8 236 2 4 1 328 18 240 1 211 1 41 8 167 2 243 4 305 3 306 1 193 1 219 4 45 2 337 1 65 1 13 3 288 4 16 4 362 1 341 1 134 1 173 4 310 1 252 1 370 1 51 1 118 2 29 1 275 1 93 1 
190 1 267 1 141 1 121 1 124 1 280 1 131 1 
109 1 112 1 280 1 124 1 367 1 190 1 267 1 258 1 121 1 141 1 284 1 131 1 
293 1 323 1 9 1 224 1 129 1 79 1 198 1 145 1 366 1 342 1 122 1 
206 1 323 1 224 1 79 1 78 1 366 1 280 2 124 2 253 1 368 1 293 1 190 1 273 1 9 1 129 1 141 1 194 1 122 1 
206 2 323 1 78 2 79 2 37 1 124 2 280 2 149 1 190 1 9 1 335 1 194 1 220 1 224 1 366 1 175 1 253 1 368 1 293 3 273 1 141 2 122 1 52 1 
206 2 323 2 78 2 79 2 37 1 124 2 280 2 354 1 149 1 190 1 9 1 335 1 194 1 220 1 224 2 311 1 366 1 175 1 368 1 293 3 273 1 141 2 122 2 52 1 
12 2 67 1 299 1 323 3 224 3 79 1 78 1 37 1 366 1 354 1 177 1 293 4 241 1 179 1 9 1 129 1 214 1 11 1 335 1 108 2 122 3 52 1 64 1 
12 2 67 1 299 1 323 3 224 3 79 1 78 1 37 1 366 1 354 1 272 1 177 1 293 4 179 1 9 1 129 1 214 1 11 1 335 1 108 2 122 3 52 1 
56 1 323 1 9 1 224 1 366 1 122 1 
232 1 321 1 98 1 56 1 363 1 143 1 323 7 237 1 224 7 78 1 79 2 366 3 312 1 353 1 89 1 91 1 293 3 9 2 129 2 152 1 122 6 
96 3 321 1 206 1 278 3 323 1 79 1 78 1 124 2 280 2 328 6 301 1 150 2 190 2 41 4 167 1 9 1 243 2 82 1 305 1 285 1 193 1 194 1 219 2 13 2 153 1 288 2 16 2 132 1 362 1 18 1 341 1 173 2 197 1 224 1 69 1 252 1 366 1 253 1 368 1 293 1 345 2 273 1 370 1 51 1 141 1 296 1 122 1 
157 1 277 1 55 2 351 1 299 1 323 1 262 1 209 1 38 1 189 2 332 1 214 1 129 1 244 1 11 1 108 3 12 3 154 2 67 1 224 1 116 2 272 1 177 1 255 1 293 2 73 1 179 2 122 1 
321 1 299 1 98 1 56 1 323 2 224 2 78 1 79 1 366 2 293 2 9 1 122 2 249 1 
354 1 321 1 293 1 364 1 323 4 9 1 224 4 129 1 79 1 198 1 366 1 342 1 122 4 
143 1 323 2 224 2 78 1 79 1 366 2 187 1 353 1 117 1 201 1 293 1 9 1 335 1 122 2 
319 1 226 1 323 1 9 1 224 1 129 1 294 1 366 1 122 1 239 1 
232 1 321 1 293 1 323 2 9 1 325 1 224 2 79 1 366 1 312 1 122 2 
321 1 364 1 363 1 323 5 224 5 79 2 198 1 366 2 342 1 312 1 293 3 9 2 129 1 152 1 335 1 122 4 
321 1 364 1 323 5 224 5 79 2 198 1 366 2 342 1 312 1 293 3 9 2 129 1 269 1 152 1 335 1 122 4 
206 1 323 1 224 1 79 1 78 1 311 1 366 1 280 2 124 2 368 1 293 1 190 1 273 1 9 1 129 1 141 1 194 1 122 1 
98 1 143 1 323 1 224 1 78 1 79 1 366 2 353 1 91 1 293 1 9 1 335 1 122 1 
126 1 141 1 192 1 124 1 280 1 334 1 80 1 307 1 218 1 
71 1 223 1 218 1 
314 1 190 1 192 1 80 1 218 1 
12 2 67 1 220 1 196 1 223 1 175 1 80 2 103 1 38 1 71 1 177 1 149 1 314 2 190 1 266 1 214 1 192 2 218 1 108 2 
19 1 113 1 317 1 145 1 
19 1 113 1 317 1 327 1 374 1 60 1 260 1 
105 1 102 1 327 1 
19 1 113 1 208 2 327 3 59 1 60 3 210 1 317 1 203 1 247 1 374 1 260 1 
19 1 339 1 113 1 317 1 347 1 327 2 374 1 60 2 260 1 
319 1 171 1 350 1 210 1 294 1 317 1 161 1 327 1 374 1 60 1 260 1 
210 1 19 1 317 1 327 1 374 1 60 1 260 1 
210 1 19 2 113 1 327 1 374 1 60 1 260 1 
137 1 210 1 19 1 1 1 317 1 346 1 327 2 374 2 60 2 260 2 
350 1 19 1 113 1 327 3 60 3 136 1 210 1 27 1 317 2 347 2 31 1 374 1 260 1 
319 2 171 1 19 1 113 1 327 2 239 1 60 2 210 1 294 1 317 1 347 1 168 1 183 1 374 1 260 1 
350 1 19 1 339 1 113 1 327 4 60 4 210 1 274 1 317 2 347 2 31 1 374 2 260 2 
210 1 19 1 113 1 317 1 327 1 374 1 60 1 260 1 
350 1 19 2 113 2 208 1 327 4 60 4 259 1 317 3 203 1 347 2 31 1 247 1 374 1 260 1 
210 1 19 1 113 1 3 1 317 1 347 1 327 2 88 1 374 1 164 1 60 2 260 1 
19 1 113 1 208 2 327 3 60 3 210 1 50 1 317 1 203 1 247 2 374 1 260 1 
230 1 10 1 180 2 317 2 
210 1 257 1 327 1 374 1 60 1 260 1 
210 1 19 1 27 1 113 1 317 1 347 1 327 2 374 1 60 2 260 1 
28 1 
210 1 19 1 113 1 317 1 327 1 374 1 60 1 260 1 
19 1 113 1 208 1 327 3 60 3 210 1 27 1 317 1 347 1 374 1 260 1 
350 1 259 1 317 1 31 1 
19 1 317 1 

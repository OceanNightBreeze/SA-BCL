#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 269 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 182 277 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 343 25 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 343 25 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 253 204 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 253 204 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 253 204 164 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 253 204 164 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 253 204 164 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 182 277 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
274 1 194 2 195 3 202 1 166 1 4 1 38 2 271 1 6 2 139 3 352 1 177 1 41 1 
344 1 274 1 194 2 172 1 195 9 156 1 320 2 245 1 69 1 292 2 202 6 296 1 4 3 160 2 139 9 6 2 162 1 352 1 177 1 31 1 304 2 166 4 38 5 271 1 152 1 170 1 82 1 41 2 
344 1 274 1 194 2 172 1 195 9 156 1 320 2 245 1 69 1 292 2 202 6 296 1 4 3 160 2 139 9 6 2 162 1 352 1 177 1 31 1 304 2 166 4 38 5 271 1 152 1 170 1 82 1 41 2 
344 1 274 1 194 2 172 1 195 10 156 1 320 2 245 1 69 1 292 2 202 7 296 1 4 4 160 2 139 10 6 2 162 1 352 1 177 1 31 1 304 2 166 5 38 6 271 1 152 1 170 1 82 1 41 2 
344 1 274 1 194 2 172 1 195 7 320 2 245 1 69 1 292 1 202 4 296 1 4 2 160 2 139 7 6 2 162 1 352 1 177 1 31 1 304 2 166 3 38 4 271 1 152 1 170 1 82 1 41 2 
274 1 194 1 195 4 156 1 304 1 320 1 292 2 202 3 166 2 4 1 296 1 160 1 38 3 271 1 6 1 139 4 162 1 352 1 
274 1 194 1 195 2 172 1 320 1 128 1 160 1 38 1 271 1 6 1 139 2 152 1 352 1 226 1 119 1 41 1 
274 1 194 2 195 9 22 1 156 1 320 1 69 1 292 2 202 7 4 3 296 1 160 1 139 9 6 2 162 1 352 1 177 1 304 1 166 4 63 1 38 5 271 1 170 1 41 1 
274 1 194 2 195 9 22 1 156 1 320 1 69 1 292 2 202 7 4 3 296 1 160 1 139 9 6 2 162 1 352 1 177 1 304 1 166 4 63 1 38 5 271 1 170 1 41 1 
0 1 220 1 34 1 254 1 185 1 198 1 262 1 135 1 264 1 267 1 283 1 140 1 120 1 83 1 
37 1 
0 1 37 1 298 1 34 2 148 1 175 1 198 2 334 1 
0 2 122 1 123 1 132 1 9 1 34 5 147 1 175 2 246 1 198 5 334 1 209 1 47 1 37 1 298 1 95 1 161 2 291 2 329 2 
37 1 298 1 316 1 
37 1 268 2 171 1 
135 2 220 2 267 2 283 2 140 2 54 1 185 1 83 2 
84 1 220 2 67 1 321 1 222 1 90 1 114 1 199 1 134 2 46 1 72 2 135 2 283 2 117 1 140 2 54 1 251 1 301 1 227 1 33 1 56 1 183 2 146 1 305 1 185 1 288 1 260 1 309 2 289 1 338 1 104 1 266 1 267 3 313 2 290 1 83 3 154 1 
135 1 264 1 220 1 254 1 267 1 283 1 140 1 185 1 83 1 120 1 
242 1 34 1 254 1 306 1 45 1 198 1 234 1 37 1 298 1 137 1 267 1 140 1 141 1 83 1 
242 1 220 1 34 2 254 1 45 1 198 2 234 1 135 1 37 1 298 1 137 1 267 1 283 1 140 1 83 1 
0 1 151 1 34 1 175 1 198 1 
0 1 37 1 298 1 181 1 34 2 175 1 198 2 334 1 
34 1 175 1 198 1 
220 1 23 1 135 1 281 1 267 2 283 1 140 2 54 2 83 2 
326 1 158 1 207 1 
227 1 146 1 222 1 288 1 260 1 114 1 46 1 309 1 249 1 72 1 289 1 338 1 267 1 313 1 54 1 83 1 
227 1 220 1 146 1 158 1 222 1 288 1 114 1 260 1 46 1 309 1 289 1 72 1 135 1 338 1 350 1 96 1 267 2 313 1 140 1 83 2 
54 1 316 1 
135 3 220 3 96 1 267 3 283 1 140 3 54 1 83 3 
135 1 264 1 220 1 254 1 267 1 140 1 83 1 
135 1 220 1 281 1 23 1 254 1 267 1 283 1 140 1 83 1 
84 1 242 1 220 3 67 1 23 1 222 1 45 1 114 1 198 1 199 1 134 2 46 1 72 1 135 3 350 1 96 1 137 1 117 1 283 2 140 3 54 1 251 1 354 1 227 1 33 1 183 1 146 1 34 1 305 1 254 1 185 1 288 1 260 1 234 1 309 1 289 1 338 1 104 1 212 1 267 4 313 1 290 1 83 4 154 1 
135 1 330 1 220 1 96 1 267 2 306 1 140 2 54 1 83 2 
242 1 220 3 23 1 34 1 254 1 45 1 198 1 28 1 234 1 135 3 37 1 212 1 350 1 96 2 137 1 267 3 283 1 140 3 83 3 
135 2 220 2 96 1 23 1 267 2 283 1 158 1 140 2 207 1 83 2 
227 1 146 1 222 1 288 1 260 1 114 1 46 1 309 1 72 1 289 1 338 1 267 1 313 1 54 1 83 1 
146 1 222 1 288 1 260 1 114 1 46 1 309 1 72 1 289 1 312 1 267 1 313 1 239 1 54 1 83 1 
84 1 108 1 67 1 348 1 158 2 90 2 134 2 199 2 29 1 326 2 225 1 251 1 252 1 33 1 302 1 183 4 79 1 207 2 263 1 104 1 169 1 290 1 
135 1 220 1 137 1 254 1 267 1 140 1 40 1 83 1 
330 1 220 4 127 1 23 1 306 1 135 4 48 1 350 1 96 2 267 5 283 1 140 5 54 1 83 5 
135 2 264 1 220 2 254 1 267 2 140 2 40 1 83 2 
109 1 131 1 101 1 
109 2 111 1 73 1 101 2 163 1 107 1 
109 1 101 1 
109 1 101 1 
111 1 107 1 
111 1 107 1 
111 1 107 1 
109 1 76 1 101 1 
109 1 76 1 101 1 
109 1 76 1 101 1 
109 1 101 1 314 1 
109 1 101 1 314 1 
109 1 101 1 314 1 
130 2 109 2 124 3 34 2 184 1 43 2 87 2 101 2 278 1 198 2 323 1 261 1 93 1 14 2 203 1 37 1 15 1 73 1 284 2 
109 1 130 1 220 2 131 1 276 1 174 1 87 1 43 1 278 1 198 1 135 2 136 1 140 2 54 1 178 1 124 1 303 1 34 1 101 1 165 1 14 1 267 2 83 2 217 1 
160 2 304 1 145 1 119 1 200 2 
160 1 304 1 320 1 
160 1 320 1 119 1 
160 3 304 2 145 1 255 1 119 1 200 1 
160 2 304 1 145 1 157 1 119 1 200 1 
0 4 220 1 132 3 88 2 175 1 135 1 283 1 140 1 329 1 9 2 147 1 185 1 334 1 233 2 291 1 191 1 240 1 244 1 348 1 294 1 198 5 29 1 298 1 161 1 30 2 120 1 34 5 254 1 79 1 258 1 36 1 262 1 264 1 37 2 267 1 268 3 169 1 83 1 217 1 171 1 
0 4 220 1 132 3 88 2 175 3 135 1 283 1 140 1 329 1 9 2 147 1 185 1 334 1 151 2 291 1 191 1 244 1 348 1 294 1 198 5 29 1 298 1 161 1 30 2 120 1 34 5 254 1 79 1 258 1 359 2 262 1 264 1 37 2 265 1 267 1 268 3 169 1 39 1 83 1 217 1 171 1 
0 2 220 1 132 1 88 1 294 1 198 3 135 1 29 1 298 1 283 1 161 1 30 1 140 1 120 1 329 1 123 1 9 2 34 3 254 1 79 1 258 1 185 1 36 1 233 1 262 1 264 1 37 2 267 1 268 2 291 1 191 1 240 1 83 1 171 1 217 1 
0 1 132 1 88 1 294 1 198 2 29 1 30 1 161 1 329 1 123 1 9 2 34 2 79 1 258 1 36 1 233 1 37 1 268 2 269 1 291 1 191 1 240 1 171 1 217 1 
65 1 
146 1 216 1 316 1 
1 1 146 1 
146 1 222 1 
143 1 146 3 216 2 190 1 222 1 289 1 
146 1 222 1 289 1 
146 1 286 1 
180 1 75 1 183 7 80 1 357 3 229 1 176 1 90 4 208 1 199 3 70 2 279 2 29 1 5 1 213 1 168 1 169 1 18 1 
243 1 84 1 21 1 348 3 89 3 176 1 90 16 134 2 199 15 70 3 279 3 29 4 50 1 5 2 251 1 180 1 33 1 144 1 183 31 80 2 79 3 206 4 357 8 258 3 229 5 208 1 104 1 189 1 213 1 168 2 167 1 169 4 18 2 153 1 
84 2 180 1 205 1 33 2 183 9 80 1 357 4 2 1 229 1 176 1 90 5 199 4 134 4 70 3 279 2 29 1 104 2 5 1 213 1 167 1 168 1 169 1 18 1 251 2 
180 1 183 7 80 1 357 3 229 1 90 4 176 1 208 1 199 3 70 2 279 2 29 1 5 1 213 1 168 1 169 1 18 1 
180 1 183 7 80 1 357 3 229 1 90 4 176 1 208 1 199 3 70 2 279 2 29 1 5 1 213 1 168 1 169 1 18 1 
194 1 195 1 345 2 347 2 222 1 114 1 72 1 139 1 6 1 328 1 97 1 146 1 332 1 288 1 358 1 232 1 260 1 309 1 310 2 365 1 313 1 270 1 41 2 
194 1 195 1 345 1 347 1 320 1 114 1 72 1 159 1 160 2 224 1 139 1 6 1 119 1 304 1 331 1 255 1 356 1 11 1 260 1 309 1 310 1 364 1 313 1 105 1 271 1 41 1 
274 1 194 1 195 2 345 1 347 1 320 1 114 1 202 1 72 1 159 1 160 2 139 2 6 1 352 1 119 1 304 1 331 1 255 1 356 1 11 1 308 1 260 1 309 1 310 1 364 1 38 1 313 1 105 1 271 1 41 1 
274 1 194 1 195 3 345 1 347 1 320 1 114 1 202 2 72 1 159 1 160 2 224 1 139 3 6 1 352 1 119 1 304 1 331 1 255 1 356 1 232 1 260 1 309 1 310 1 364 1 236 1 38 1 313 1 105 1 41 1 
274 1 195 2 345 1 347 1 320 1 114 1 202 2 72 1 160 2 224 1 139 2 352 1 119 1 304 1 255 1 356 1 260 1 309 1 310 1 364 1 236 1 38 1 313 1 105 1 41 1 
210 1 
9 1 182 1 34 2 147 1 175 2 277 1 288 1 198 2 334 1 309 1 72 1 313 1 161 1 340 1 291 1 329 1 
242 1 175 2 27 1 45 1 198 3 201 1 280 2 137 1 140 1 141 1 57 1 34 3 254 1 306 1 148 1 360 1 334 1 234 1 211 1 267 1 106 1 83 1 
242 1 175 1 27 1 45 1 198 3 201 1 280 3 298 1 137 1 140 1 141 1 57 1 34 3 254 1 306 1 148 1 360 1 334 1 234 1 211 1 61 1 37 1 267 1 83 1 
242 1 175 2 27 1 45 1 198 3 201 1 280 3 298 1 137 1 299 1 140 1 141 1 57 1 34 3 254 1 148 1 306 1 360 1 334 1 234 1 211 1 61 1 37 1 267 1 106 1 83 1 
242 1 132 1 25 1 175 7 27 1 45 1 197 2 198 5 201 1 280 6 298 5 137 1 299 4 325 2 282 2 161 1 140 1 141 1 329 1 9 1 57 1 34 5 228 1 147 1 254 1 306 1 148 1 257 1 360 1 334 3 234 1 211 1 103 1 61 4 37 5 188 1 267 1 17 2 273 1 291 1 106 4 171 2 83 1 343 1 
132 1 175 4 45 1 280 4 137 1 282 2 325 2 140 1 141 1 329 1 9 1 57 1 147 1 149 1 334 2 234 1 103 1 61 2 17 2 291 1 106 2 242 1 27 1 198 4 197 2 201 1 298 1 299 2 161 1 34 4 254 1 306 1 257 1 360 1 211 1 37 2 267 1 268 2 83 1 171 2 
242 1 132 1 175 4 27 1 45 1 197 2 198 4 201 1 280 4 298 1 137 1 299 2 325 2 282 2 161 1 140 1 141 1 329 1 9 1 57 1 34 4 228 1 254 1 147 1 306 1 257 1 360 1 334 2 234 1 211 1 103 1 61 2 37 1 267 1 17 2 273 1 291 1 106 2 171 2 83 1 343 1 
242 1 132 1 175 4 27 1 45 1 197 2 198 4 201 1 280 4 298 1 137 1 299 2 325 2 282 2 161 1 140 1 141 1 329 1 9 1 57 1 34 4 228 1 254 1 147 1 306 1 257 1 360 1 334 2 234 1 211 1 103 1 61 2 37 1 267 1 17 2 273 1 291 1 106 2 171 2 83 1 343 1 
242 1 132 1 175 4 133 1 27 1 45 1 197 2 198 4 201 1 349 2 280 4 298 1 137 1 299 2 161 1 140 1 327 1 141 1 179 2 329 1 9 1 125 1 57 1 34 4 228 1 254 1 147 1 306 1 257 1 360 1 334 2 234 1 211 1 61 2 37 1 268 2 267 1 17 2 291 1 106 2 83 1 
242 1 34 2 57 1 25 1 254 1 306 1 175 1 45 1 27 1 198 2 360 1 211 1 201 1 234 1 280 3 61 1 137 1 299 1 267 1 140 1 141 1 106 1 83 1 343 1 
242 1 34 2 57 1 25 1 254 1 306 1 175 1 45 1 27 1 198 2 360 1 211 1 201 1 234 1 280 3 61 1 137 1 299 1 267 1 140 1 141 1 106 1 83 1 343 1 
132 1 175 4 45 1 280 4 137 1 140 1 141 1 329 1 179 2 9 1 57 1 147 1 149 1 334 2 234 1 61 2 17 2 291 1 106 2 242 1 27 1 198 4 197 2 201 1 349 2 298 1 299 2 161 1 125 1 34 4 254 1 306 1 257 1 360 1 211 1 37 1 267 1 268 2 83 1 
84 2 220 1 67 2 112 1 85 1 222 2 90 1 114 2 134 4 199 1 72 8 135 1 51 1 94 1 96 1 224 1 140 1 251 2 300 1 301 1 302 1 33 2 146 3 183 2 305 1 288 2 308 1 260 2 361 1 309 8 311 1 365 1 104 2 266 2 267 1 313 7 270 1 290 2 83 1 
84 1 220 1 67 1 23 1 348 1 158 1 90 1 134 2 199 2 70 1 135 1 29 1 52 1 326 1 283 1 140 1 251 1 33 1 183 3 79 1 357 1 207 1 258 1 231 1 104 1 267 1 169 1 290 1 83 1 
84 1 67 1 158 1 176 1 90 3 134 2 199 3 70 2 279 1 29 1 5 1 326 1 54 2 251 1 180 1 33 1 302 1 183 6 80 1 357 2 207 1 104 1 213 1 169 1 290 1 316 1 
218 1 84 2 243 1 67 2 158 10 89 3 90 8 199 4 134 4 29 2 49 1 52 1 326 10 54 1 251 2 301 1 355 1 33 2 144 1 183 12 305 1 79 2 357 1 206 3 258 2 207 3 229 1 104 2 214 1 290 1 
84 1 220 1 67 1 319 1 222 1 90 1 114 1 46 1 134 2 199 1 72 1 249 1 135 1 52 1 350 1 96 1 250 1 140 1 54 1 251 1 8 1 227 1 301 1 33 1 146 1 183 2 305 1 207 1 288 1 260 1 309 1 289 1 338 1 104 1 313 1 267 2 290 1 83 2 
84 2 220 1 86 1 222 1 90 3 223 1 134 4 46 1 135 1 52 1 96 1 326 2 140 1 227 1 183 5 146 1 59 1 288 1 289 1 338 1 104 2 290 2 67 2 158 2 114 1 199 2 70 1 72 1 29 1 116 1 350 1 117 1 251 2 33 2 305 1 79 1 357 1 207 2 258 1 260 1 362 1 309 1 313 1 267 2 83 2 
84 1 302 1 33 1 67 1 183 2 79 1 158 1 207 1 90 2 134 2 263 1 29 1 104 1 326 1 290 1 251 1 
84 1 302 1 33 1 67 1 183 2 348 1 357 1 158 1 207 1 134 2 199 2 70 1 104 1 326 1 169 1 290 1 251 1 252 1 
84 1 302 1 33 1 67 1 183 2 79 1 158 1 207 1 258 1 90 2 134 2 29 1 104 1 326 1 290 1 251 1 
84 1 33 1 67 1 183 2 79 1 158 1 207 1 90 2 134 2 311 1 263 1 29 1 104 1 326 1 290 1 251 1 
84 1 33 1 67 1 183 2 348 1 357 1 158 1 207 1 134 2 199 2 70 1 311 1 104 1 326 1 169 1 290 1 251 1 252 1 
84 1 33 1 67 1 183 2 79 1 158 1 207 1 258 1 90 2 134 2 311 1 29 1 104 1 326 1 290 1 251 1 
84 1 33 1 67 1 183 2 79 1 158 1 207 1 258 1 90 2 134 2 29 1 104 1 326 1 290 1 251 1 
84 1 67 1 222 1 90 1 114 1 46 1 134 2 199 1 72 1 117 1 54 1 251 1 301 1 227 1 33 1 183 2 146 1 305 1 288 1 260 1 309 1 289 1 338 1 104 1 313 1 267 1 290 1 83 1 
84 1 67 1 42 1 222 1 90 1 114 1 46 1 134 2 199 1 72 1 54 1 251 1 301 1 33 1 183 2 146 1 305 1 288 1 260 1 309 1 289 1 312 1 104 1 313 1 267 1 239 1 290 1 83 1 
84 1 33 1 67 1 183 2 79 1 158 1 207 1 258 1 90 2 134 2 29 1 104 1 52 1 326 1 290 1 251 1 
84 1 67 1 158 1 222 1 90 2 114 1 46 1 134 2 72 1 29 1 326 1 117 1 251 1 227 1 33 1 183 2 146 1 79 1 207 1 258 1 260 1 308 1 362 1 309 1 289 1 338 1 104 1 313 1 267 1 290 1 83 1 
84 1 220 1 67 1 23 1 348 1 158 1 90 2 199 1 134 2 135 1 29 1 52 1 283 1 326 1 140 1 251 1 33 1 183 3 79 1 258 1 12 1 104 1 267 1 169 1 290 1 83 1 
84 1 205 1 253 1 104 1 33 1 164 1 204 1 251 1 134 2 193 1 
84 1 205 1 253 1 104 1 33 1 164 1 204 1 251 1 134 2 193 1 
84 1 205 1 253 1 104 1 33 1 164 1 204 1 251 1 134 2 193 1 
84 1 205 1 253 1 104 1 33 1 164 1 204 1 251 1 134 2 193 1 
84 1 205 1 253 1 104 1 33 1 164 1 204 1 251 1 134 2 193 1 
275 1 14 1 109 1 130 1 203 1 73 1 87 1 43 1 101 1 261 1 
131 1 174 1 
219 1 14 1 109 1 130 1 346 1 237 1 87 1 43 1 101 1 
130 1 109 1 124 2 34 1 184 1 43 1 87 1 101 1 278 1 198 1 261 1 93 1 14 1 203 1 37 1 15 1 73 1 284 1 
130 1 109 1 124 2 34 1 184 1 43 1 87 1 101 1 278 1 198 1 261 1 93 1 14 1 203 1 37 1 15 1 73 1 284 1 
130 1 109 1 124 2 34 1 184 1 43 1 87 1 101 1 278 1 198 1 261 1 93 1 14 1 203 1 37 1 15 1 73 1 284 1 
76 1 293 1 163 1 
76 1 293 1 163 1 
314 1 248 1 
314 1 163 1 248 1 
136 1 165 1 
0 1 109 1 130 1 131 1 220 2 276 1 174 1 87 1 43 1 198 1 135 2 136 1 140 2 54 1 284 1 178 1 124 1 303 1 34 1 101 1 165 1 336 1 14 1 15 1 267 2 83 2 217 1 
76 1 293 1 
314 1 163 1 248 1 
84 1 67 1 222 1 90 1 114 1 134 2 199 1 72 2 51 1 52 1 140 2 251 1 300 1 301 1 33 1 77 1 146 1 183 2 305 1 259 1 260 1 309 2 337 1 104 1 266 2 267 2 313 2 339 1 290 1 19 1 83 2 
345 1 78 1 146 1 113 1 222 1 288 1 114 1 260 1 309 1 72 1 365 1 313 1 270 1 328 1 
173 1 345 1 304 1 78 1 331 1 320 1 255 1 356 1 114 1 260 1 309 1 72 1 364 1 160 2 224 1 313 1 16 1 119 1 
173 1 345 1 304 1 78 1 331 1 320 1 255 1 356 1 114 1 260 1 308 1 309 2 72 2 364 1 160 2 224 1 313 2 16 1 119 1 
32 1 173 1 345 1 304 1 331 1 320 1 255 1 356 1 260 1 114 1 309 1 72 1 364 1 160 2 224 1 313 1 119 1 
100 1 
122 1 9 1 132 1 147 1 47 1 298 1 37 1 161 1 291 1 329 1 
9 2 79 1 88 1 258 1 29 1 37 1 268 2 30 1 171 1 
37 1 298 1 34 1 175 1 198 1 334 1 
9 1 34 1 182 1 147 1 10 1 175 2 277 1 288 1 198 1 334 1 309 1 72 1 313 1 161 1 340 1 291 1 329 1 
37 1 298 1 122 1 132 1 9 1 316 1 47 1 
132 1 175 1 198 1 298 1 282 1 161 1 325 1 329 1 9 1 34 1 147 1 334 1 103 1 37 2 268 1 291 1 171 1 
242 1 1 2 132 2 24 1 88 2 175 2 222 1 294 1 198 2 114 2 71 1 72 1 29 1 30 2 161 2 353 1 98 1 55 1 329 2 143 1 9 3 34 2 146 4 79 1 147 2 258 1 59 1 150 1 307 1 288 1 260 1 334 1 309 1 289 1 235 1 37 2 268 4 313 1 216 1 291 2 171 2 
132 8 221 1 348 2 88 5 175 1 196 1 89 1 294 1 198 1 29 2 298 2 351 1 30 5 161 2 7 1 55 2 329 2 74 1 144 1 9 5 34 1 147 2 79 2 206 1 258 2 334 1 187 1 37 5 268 6 169 2 340 1 129 1 291 2 171 3 315 1 
220 1 132 2 198 1 29 2 135 1 324 1 5 1 161 1 283 1 140 1 7 1 55 2 329 1 120 1 9 2 34 1 254 1 80 1 147 1 185 1 262 1 264 1 213 1 267 1 169 1 273 1 291 1 83 1 
84 1 220 2 67 1 222 1 114 1 199 1 134 2 46 1 72 1 135 2 283 2 117 1 140 2 54 1 251 1 227 1 33 1 183 1 146 1 305 1 185 1 288 1 260 1 309 1 289 1 338 1 104 1 313 1 267 3 290 1 83 3 154 1 
9 2 132 1 147 1 88 2 294 1 279 1 298 2 37 4 268 4 30 2 161 1 291 1 340 1 171 2 329 1 
14 1 87 1 165 1 35 1 261 1 
115 1 14 1 87 1 
115 1 14 1 87 1 
115 1 14 1 87 1 
14 1 138 1 87 1 
14 1 138 1 87 1 
14 1 138 1 87 1 
14 1 87 1 
109 1 101 1 
84 1 89 1 90 4 176 1 199 4 134 2 279 1 70 2 29 1 5 1 251 1 205 1 180 1 33 1 144 1 183 8 80 1 206 1 357 2 104 1 213 1 169 1 129 1 
84 2 243 1 89 1 176 1 90 6 199 5 134 4 279 1 70 2 29 2 5 1 251 2 285 1 180 1 205 1 33 2 144 1 183 11 80 1 79 1 206 2 357 3 258 1 229 1 104 2 213 1 169 1 129 1 
84 3 221 1 348 1 89 1 176 1 90 9 199 8 134 6 279 1 70 3 29 3 5 1 351 1 251 3 285 1 180 1 205 1 33 3 144 1 183 17 80 1 79 2 206 1 357 4 258 2 229 1 187 1 104 3 213 1 167 1 169 2 129 1 315 1 
84 3 221 1 348 1 89 1 176 1 90 13 199 11 134 6 279 1 70 4 29 5 324 1 5 2 351 1 251 3 285 1 180 1 205 1 33 3 144 1 183 24 80 2 79 2 206 1 357 7 229 3 258 2 187 1 104 3 213 2 167 1 169 4 129 1 315 1 
84 1 89 1 90 4 176 1 199 4 134 2 279 1 70 2 29 1 5 1 251 1 205 1 180 1 33 1 144 1 183 8 80 1 206 1 357 2 104 1 213 1 169 1 129 1 
84 2 221 1 348 1 89 1 90 6 199 5 134 4 70 1 29 2 351 1 251 2 205 1 33 2 144 1 183 11 79 2 206 1 357 2 258 2 229 1 187 1 104 2 167 1 169 1 129 1 315 1 
84 3 221 1 348 1 89 1 90 6 199 5 134 6 70 1 29 2 351 1 251 3 285 1 205 1 33 3 144 1 183 11 79 2 206 1 357 1 258 2 187 1 104 3 167 1 169 1 129 1 315 1 
84 4 221 1 348 1 89 1 90 9 199 5 134 8 70 2 29 3 351 1 251 4 205 1 33 4 144 1 183 14 79 3 206 1 357 5 229 3 258 3 102 1 187 1 104 4 167 2 169 1 129 1 315 1 
180 1 183 7 80 3 357 6 229 3 176 2 90 3 199 4 70 3 29 1 5 3 213 1 169 1 
84 3 221 1 348 1 89 1 90 6 199 5 134 6 70 1 29 2 351 1 251 3 205 1 33 3 144 1 183 11 79 2 206 1 357 1 258 2 102 1 187 1 104 3 167 1 169 1 129 1 315 1 
84 1 205 1 33 1 183 10 80 2 357 5 229 2 90 5 134 2 199 5 70 3 29 2 324 1 104 1 5 2 213 1 169 2 251 1 
84 1 205 1 33 1 183 2 79 1 90 2 134 2 29 1 104 1 251 1 
84 1 205 1 33 1 183 2 79 1 258 1 90 2 134 2 29 1 104 1 251 1 
84 3 205 1 33 3 183 3 80 1 357 2 229 1 90 1 199 2 134 6 102 1 70 1 297 1 104 3 5 1 167 1 251 3 
84 5 243 1 21 1 348 3 89 3 176 1 90 16 199 18 134 10 279 1 70 4 29 5 297 1 50 1 5 3 251 5 285 1 180 1 205 1 33 5 144 1 183 34 80 3 79 3 206 4 357 9 258 3 229 5 102 1 104 5 189 1 213 2 167 2 169 5 
84 2 180 1 33 2 183 8 80 1 357 3 229 1 90 4 176 1 199 4 134 4 279 1 70 2 29 1 104 2 5 1 213 1 167 1 169 1 251 2 
180 1 183 6 80 1 357 2 176 1 90 3 199 3 279 1 70 2 29 1 5 1 213 1 169 1 316 1 
84 1 33 1 183 2 79 1 258 1 90 2 134 2 29 1 104 1 251 1 285 1 
243 1 144 1 183 7 348 1 79 1 206 2 357 1 258 1 229 1 89 1 90 3 199 4 29 1 169 1 
243 1 218 1 84 1 348 1 89 2 176 1 90 13 199 10 134 2 279 1 70 4 29 5 324 1 5 2 251 1 180 1 33 1 183 23 80 2 79 2 206 2 357 8 229 4 258 2 104 1 213 2 167 1 214 1 169 4 
183 1 206 1 199 1 
183 1 89 1 90 1 
183 6 79 1 348 1 357 1 59 1 258 1 229 1 90 3 199 3 29 1 169 1 
84 2 221 1 348 1 89 1 90 6 199 5 134 4 70 1 29 2 351 1 251 2 205 1 33 2 144 1 183 11 79 2 206 1 357 2 258 2 229 1 187 1 104 2 167 1 169 1 129 1 315 1 
183 6 80 1 357 2 229 1 90 3 199 3 70 1 29 1 5 1 213 1 169 1 
84 1 180 1 33 1 183 3 80 1 357 2 229 1 90 1 176 1 199 2 134 2 70 1 297 1 104 1 5 1 167 1 251 1 
121 1 330 1 267 1 306 1 140 1 54 1 83 1 
121 1 330 1 306 1 44 1 230 1 295 1 267 1 140 1 54 1 366 1 20 1 83 1 
146 1 222 1 186 1 288 1 114 1 308 1 260 1 309 4 72 4 365 1 313 4 270 1 99 1 
146 1 222 1 92 1 260 1 114 2 309 2 60 1 72 2 289 1 62 1 81 1 313 2 64 1 241 1 
160 1 320 1 313 1 288 1 119 1 114 1 260 1 309 1 364 1 72 1 
146 1 222 1 259 1 308 1 260 1 114 1 309 2 72 2 51 1 313 2 224 1 
112 1 146 3 222 2 288 1 308 1 260 2 114 2 361 1 309 5 72 5 365 1 51 1 270 1 313 4 99 1 241 1 
146 3 222 2 288 1 308 1 260 2 114 2 361 1 309 5 72 5 365 1 51 1 270 1 313 4 99 1 241 1 342 1 
365 1 146 1 270 1 313 1 222 1 288 1 114 1 260 1 316 1 309 1 72 1 
227 1 220 1 146 1 222 1 288 1 114 1 260 1 46 1 309 1 289 1 72 1 135 1 96 1 267 2 313 1 140 1 54 1 83 2 
227 1 220 1 146 3 254 1 45 1 222 2 114 1 260 1 46 1 322 1 309 1 289 2 72 1 135 2 137 1 96 1 267 2 313 1 140 2 54 1 83 2 241 1 286 1 
220 1 222 2 45 1 114 1 46 1 322 1 72 2 135 2 96 1 137 1 140 2 54 1 286 1 146 3 254 1 186 1 260 1 309 2 289 2 313 2 267 2 239 1 241 1 83 2 
242 1 317 1 1 1 175 1 3 1 222 1 198 2 114 1 322 1 72 3 298 1 286 1 146 4 34 2 186 1 288 1 260 1 309 3 289 1 37 1 313 3 216 1 241 1 
242 1 1 1 34 2 146 4 175 1 150 1 222 1 186 1 288 1 114 1 198 2 260 1 322 1 309 3 289 1 72 3 37 1 298 1 313 3 216 1 241 1 286 1 
94 1 313 1 114 1 260 1 309 1 72 1 
110 1 143 1 112 1 85 1 146 3 222 2 288 2 308 1 260 2 114 3 361 1 309 7 72 7 289 1 266 1 51 1 62 1 94 1 224 1 313 6 64 1 
84 2 220 1 67 2 86 1 158 1 222 1 90 3 176 1 114 1 199 3 46 1 134 4 279 1 70 2 72 1 29 1 135 1 5 1 52 1 96 1 326 1 117 1 140 1 54 2 251 2 180 1 227 1 33 2 77 1 183 6 146 1 80 1 357 2 207 1 260 1 308 1 362 1 309 1 289 1 338 1 104 2 213 1 267 2 313 1 169 1 290 2 83 2 
0 1 242 1 1 1 132 1 175 2 198 3 47 1 72 1 71 1 298 1 161 2 353 1 329 2 122 1 9 1 34 3 146 2 147 2 10 1 307 1 150 1 288 1 334 1 309 1 37 1 313 1 216 1 291 2 
143 1 146 2 24 1 222 1 308 1 260 1 114 2 309 2 72 2 289 1 94 1 313 2 216 1 
220 1 146 1 222 1 288 1 114 1 260 1 46 1 309 1 289 1 72 1 135 1 96 1 267 2 313 1 239 1 140 1 54 1 83 2 
110 1 143 1 146 1 222 1 260 1 114 2 309 1 72 1 289 1 62 1 313 1 64 1 241 1 
66 1 68 1 363 1 337 1 267 1 140 1 339 1 19 1 83 1 
66 1 126 1 215 1 
66 1 68 1 54 1 26 1 363 1 
242 1 0 1 66 1 34 2 126 1 68 2 254 1 45 1 26 2 198 2 335 1 363 2 234 1 37 1 298 1 212 1 137 1 54 1 215 1 
274 1 194 1 195 1 38 1 139 1 6 1 271 1 352 1 
274 2 194 1 195 4 287 1 333 1 202 2 166 1 4 1 238 1 38 3 139 4 6 1 152 1 352 2 
194 1 274 1 195 2 155 1 22 1 91 1 202 1 38 1 271 1 6 1 139 2 352 1 
194 1 274 1 195 3 58 1 333 2 238 1 38 1 271 1 6 1 139 3 152 2 352 1 
38 2 272 1 247 2 142 1 
194 1 318 1 195 1 139 1 6 1 271 1 
274 1 194 1 195 2 38 1 139 2 6 1 271 1 170 1 352 1 202 1 
13 1 
274 1 194 1 195 1 38 1 139 1 6 1 271 1 352 1 
274 1 38 1 352 1 316 1 
274 1 194 1 195 1 38 1 139 1 6 1 352 1 
195 1 347 1 41 1 
194 1 274 1 195 3 333 1 238 1 53 1 38 1 271 1 6 1 139 3 152 2 352 1 
274 1 194 1 195 2 38 1 139 2 6 1 352 1 292 1 202 1 
166 1 296 1 194 1 160 1 195 1 304 1 38 1 320 1 139 1 6 1 271 1 
194 1 195 1 38 1 139 1 6 1 271 1 352 1 
274 1 194 1 195 1 139 1 6 1 271 1 352 2 
194 2 195 2 256 1 38 1 271 1 6 2 139 2 352 1 341 1 192 1 
274 1 194 1 195 3 69 1 202 2 166 1 4 1 38 2 271 1 6 1 139 3 170 1 352 1 
274 1 194 1 195 2 304 1 255 1 320 1 202 1 160 2 38 1 271 1 6 1 139 2 352 1 118 1 119 1 
274 1 194 2 195 4 156 1 292 1 202 2 166 1 4 1 38 2 271 1 6 2 139 4 352 1 
274 1 194 1 195 3 38 1 139 3 6 1 271 1 170 1 152 1 352 1 202 1 
166 1 4 1 38 1 287 1 
38 1 352 1 

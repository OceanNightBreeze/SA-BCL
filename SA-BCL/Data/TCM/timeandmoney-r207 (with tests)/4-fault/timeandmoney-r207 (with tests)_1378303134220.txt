#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 119 2 210 9 7 1 185 2 367 1 214 9 348 1 271 1 286 4 82 3 125 2 274 1 323 5 226 1 295 2 37 2 129 1 356 1 298 1 327 2 21 1 109 1 89 1 379 2 305 1 357 1 236 6 
44 1 119 2 210 9 7 1 185 2 367 1 214 9 348 1 271 1 286 4 82 3 125 2 274 1 323 5 226 1 295 2 37 2 129 1 356 1 298 1 327 2 21 1 109 1 89 1 379 2 305 1 357 1 236 6 
44 1 119 2 210 10 7 1 185 2 367 1 214 10 348 1 271 1 286 5 82 4 125 2 274 1 323 6 226 1 295 2 37 2 129 1 356 1 298 1 327 2 21 1 109 1 89 1 379 2 305 1 357 1 236 7 
44 1 119 1 210 7 7 1 185 2 367 1 214 7 271 1 286 3 82 2 125 2 274 1 323 4 226 1 295 2 37 2 129 1 356 1 298 1 327 2 21 1 109 1 89 1 379 2 305 1 357 1 236 4 
274 1 125 1 323 3 295 1 37 1 298 1 327 1 119 2 210 4 7 1 109 1 185 1 214 4 348 1 305 1 236 3 286 2 82 1 
274 1 125 1 323 1 371 1 295 1 37 1 298 1 327 1 210 2 30 1 343 1 379 1 214 2 305 1 271 1 357 1 
274 1 125 2 323 2 226 1 37 2 298 1 210 3 379 1 214 3 305 1 236 1 286 1 82 1 
141 1 44 1 119 2 210 9 7 1 185 1 214 9 348 1 369 1 286 4 82 3 125 2 274 1 323 5 226 1 295 1 37 2 298 1 327 1 109 1 89 1 379 1 305 1 236 7 
141 1 44 1 119 2 210 9 7 1 185 1 214 9 348 1 369 1 286 4 82 3 125 2 274 1 323 5 226 1 295 1 37 2 298 1 327 1 109 1 89 1 379 1 305 1 236 7 
294 1 136 1 120 1 
175 2 294 1 349 1 
330 1 140 2 146 1 350 2 178 2 172 2 363 2 321 2 
113 1 115 1 140 2 114 2 339 1 178 3 363 2 143 1 180 1 28 1 50 1 364 1 183 1 146 1 122 1 213 2 345 1 270 1 12 1 350 2 34 1 287 1 321 3 60 2 197 1 15 1 229 1 170 1 230 1 87 1 330 1 157 1 377 2 231 1 41 1 42 2 172 2 
330 1 140 1 103 1 261 1 350 1 93 1 178 1 172 1 363 1 321 1 
294 1 140 1 176 1 178 1 93 1 8 1 108 1 121 1 132 1 136 1 217 1 218 1 56 1 321 1 
294 1 140 1 178 1 93 1 363 1 8 1 108 2 121 1 132 1 136 1 218 2 350 1 172 1 56 1 321 1 
108 1 278 1 234 1 218 1 262 1 
316 1 294 1 108 2 14 1 278 1 136 1 218 2 262 1 
108 1 278 1 218 1 
140 1 103 1 93 1 178 1 363 1 330 1 108 1 261 1 262 1 218 1 350 1 172 1 149 1 321 1 
294 1 
316 1 294 1 108 2 278 1 136 1 218 2 262 1 17 1 
43 1 293 1 280 2 338 1 294 1 282 1 47 1 299 1 155 2 211 1 316 1 108 5 318 1 133 2 278 2 136 1 262 2 218 5 272 1 
146 1 120 1 
140 2 276 1 178 2 312 1 363 1 146 2 350 1 172 1 321 2 
51 1 11 1 112 1 
114 1 45 1 178 1 230 1 180 1 28 1 377 1 50 1 41 1 183 1 146 1 122 1 42 1 12 1 34 1 321 1 
140 1 114 1 373 1 178 2 230 1 363 1 180 1 51 1 50 1 28 1 377 1 183 1 41 1 122 1 42 1 12 1 172 1 34 1 173 1 321 2 
140 3 146 1 373 1 350 1 178 3 172 3 363 3 321 3 
140 1 261 1 93 1 178 1 172 1 363 1 321 1 
140 1 276 1 350 1 93 1 178 1 172 1 312 1 363 1 321 1 
113 1 0 1 140 3 114 1 339 1 312 1 178 4 93 1 363 3 8 1 143 1 180 1 50 1 28 1 183 1 121 1 146 1 122 1 213 2 270 1 12 1 218 1 350 2 56 1 34 1 287 1 321 4 60 1 373 1 15 1 229 1 230 1 87 1 330 1 157 1 108 1 377 1 231 1 41 1 132 1 258 1 42 1 172 3 173 1 
140 2 146 1 373 1 303 1 217 1 178 2 172 1 363 1 321 2 
0 1 294 1 140 3 373 2 312 1 93 1 178 3 363 3 8 1 108 1 121 1 132 1 218 1 350 1 56 1 172 3 98 1 173 1 321 3 
51 1 140 2 373 1 350 1 178 2 172 2 312 1 112 1 363 2 321 2 
114 1 178 1 230 1 180 1 28 1 377 1 50 1 41 1 183 1 146 1 122 1 42 1 12 1 34 1 321 1 
114 1 178 1 230 1 28 1 377 1 378 1 41 1 183 1 146 1 122 1 42 1 12 1 220 1 34 1 321 1 
115 2 1 1 339 1 51 2 29 1 11 2 213 2 344 1 270 1 148 1 287 1 353 1 195 1 60 4 193 1 229 2 87 1 157 1 231 1 257 1 232 1 70 1 333 1 112 2 
140 1 132 1 216 1 93 1 178 1 172 1 363 1 321 1 
140 5 373 2 178 5 312 1 363 4 145 1 146 1 303 1 217 1 335 1 350 1 172 4 173 1 321 5 
140 2 216 1 261 1 93 1 178 2 172 2 363 2 321 2 
105 1 68 1 
105 1 68 1 
5 1 55 1 
5 1 55 1 
5 1 55 1 
105 1 68 1 142 1 
105 1 68 1 142 1 
105 1 68 1 238 1 
351 1 67 1 105 2 68 2 5 1 55 1 
105 1 68 1 142 1 
105 1 68 1 69 1 
105 1 68 1 69 1 
105 1 68 1 69 1 
101 2 35 1 294 1 105 2 311 2 284 1 315 1 254 2 200 3 27 1 76 2 317 1 156 2 108 2 67 1 10 1 68 2 135 1 218 2 
306 1 140 2 308 1 311 1 178 2 363 2 76 1 317 1 9 1 146 1 52 1 218 1 321 2 101 1 191 1 105 1 84 1 200 1 254 1 19 1 108 1 68 1 172 2 238 1 
295 1 185 1 327 1 
295 1 343 1 327 1 
96 1 295 3 343 1 185 2 320 1 158 1 
96 1 295 2 343 1 185 1 381 1 158 1 
96 2 295 2 343 1 185 1 158 1 
337 1 306 1 175 3 280 1 338 3 1 1 308 1 361 1 118 2 245 1 211 1 316 1 344 1 349 1 54 2 218 5 219 1 370 1 224 1 294 2 297 1 84 1 299 2 155 1 108 5 232 1 380 2 133 1 278 1 70 1 262 4 136 1 
337 3 175 9 280 2 338 8 242 1 1 3 361 1 283 1 162 1 211 1 316 1 344 3 349 3 54 6 218 9 224 2 293 1 294 5 297 2 374 1 153 5 84 4 299 6 18 1 155 2 107 1 108 9 232 3 380 6 133 2 278 6 70 3 234 5 262 7 136 1 
337 1 280 1 175 4 338 3 1 1 118 1 344 1 349 2 54 2 218 3 219 1 370 1 224 1 293 1 294 3 297 1 84 1 155 1 299 2 108 3 232 1 133 1 380 2 70 1 136 1 262 2 
337 2 175 7 280 1 338 5 242 1 1 2 118 2 162 1 344 2 349 3 54 4 218 4 219 1 370 1 224 1 293 1 294 4 297 1 374 1 84 2 155 1 299 4 108 4 232 2 380 4 133 1 70 2 136 1 262 3 
167 1 230 1 120 1 
372 1 230 1 
111 1 
12 1 230 1 
167 2 208 1 88 1 12 1 34 1 230 3 
12 1 34 1 230 1 
79 1 230 1 
249 1 1 1 115 4 193 2 60 7 229 3 39 1 86 1 253 1 182 1 257 3 97 1 344 1 203 1 164 1 221 2 189 1 
249 1 1 1 115 4 193 2 60 7 229 3 39 1 86 1 253 1 182 1 257 3 97 1 344 1 203 1 164 1 221 2 189 1 
249 1 1 1 115 4 193 2 60 7 229 3 39 1 253 1 86 1 182 1 257 3 97 1 344 1 203 1 164 1 368 1 221 2 189 1 
174 1 337 2 1 3 115 14 4 1 339 2 182 2 97 2 213 4 268 1 344 3 164 2 221 3 222 1 189 2 292 3 124 1 249 1 193 4 60 27 152 3 326 2 229 13 39 3 253 1 86 1 87 2 157 2 231 2 257 7 232 2 233 1 203 1 70 2 
1 1 115 5 339 2 182 1 213 4 97 1 344 1 319 1 164 1 57 1 221 2 189 1 249 1 60 9 193 3 326 1 229 4 39 1 253 1 87 2 157 2 231 2 257 4 203 1 
114 1 265 1 75 1 94 1 46 1 210 2 183 1 343 1 185 1 214 2 186 1 320 1 99 1 125 1 274 1 323 1 295 2 168 1 37 1 298 1 327 1 300 1 131 1 377 1 301 1 41 1 379 1 42 1 305 1 236 1 
114 1 265 1 75 1 46 1 210 3 49 1 183 1 343 1 185 1 214 3 320 1 186 1 99 1 125 1 323 1 225 1 295 2 168 1 37 1 298 1 327 1 131 1 377 1 301 1 41 1 379 1 42 1 305 1 237 1 236 2 
114 1 265 1 75 1 46 1 210 2 49 1 183 1 343 1 185 1 214 2 186 1 320 1 323 1 295 2 298 1 327 1 131 1 377 1 301 1 41 1 379 1 42 1 305 1 236 2 237 1 
114 1 75 2 265 2 46 2 210 1 285 1 28 1 183 1 214 1 12 1 32 1 188 1 33 1 125 1 225 1 37 1 198 1 230 1 377 1 41 1 379 2 42 1 110 1 
114 1 265 1 75 1 94 1 46 1 210 1 49 1 183 1 343 1 185 1 214 1 186 1 320 1 99 1 125 1 274 1 295 2 168 1 37 1 327 1 131 1 377 1 301 1 41 1 379 1 42 1 
59 1 
175 2 280 1 338 2 241 1 140 1 176 1 177 2 178 1 93 1 285 1 8 1 342 2 144 4 183 1 12 1 349 2 56 1 294 2 299 2 155 1 64 1 108 5 358 2 71 2 72 1 205 2 264 2 209 1 114 2 313 1 160 1 211 1 316 3 28 2 163 1 266 1 121 1 215 1 32 1 218 5 217 1 81 1 321 1 224 1 324 2 126 1 128 1 230 1 377 2 41 1 132 1 133 1 42 2 278 6 136 1 
241 1 209 1 140 1 176 1 93 1 313 1 178 1 17 1 8 1 316 1 342 1 144 2 108 3 266 1 121 1 132 1 278 2 215 1 218 3 217 1 56 1 321 1 
209 1 241 1 140 1 176 1 178 1 313 1 93 1 8 1 144 3 316 1 121 1 266 1 215 1 217 1 218 3 56 1 321 1 294 1 17 1 108 3 132 1 278 1 136 1 358 1 
209 1 241 1 140 1 176 1 178 1 313 1 93 1 8 1 316 1 144 3 342 1 121 1 266 1 215 1 217 1 218 3 56 1 321 1 324 1 294 1 17 1 108 3 132 1 278 2 136 1 358 1 
240 1 280 1 241 1 338 1 140 1 176 1 177 2 93 1 178 1 8 1 342 4 144 6 349 2 56 1 294 5 62 1 17 1 199 1 155 1 299 1 64 1 108 5 263 1 358 4 71 2 205 2 264 2 209 1 313 1 211 1 316 3 163 1 121 1 266 1 215 1 218 5 217 1 321 1 324 4 132 1 133 1 278 7 136 5 90 1 
280 1 175 2 241 1 338 1 140 1 176 1 177 2 93 1 178 1 8 1 144 4 342 2 349 2 56 1 294 2 155 1 299 1 64 1 108 4 71 2 358 2 205 2 72 1 264 2 209 1 313 1 211 1 316 2 163 1 121 1 266 1 215 1 217 1 218 4 321 1 324 2 132 1 133 1 278 4 136 1 
264 2 280 1 338 1 209 1 241 1 140 1 176 1 177 2 178 1 313 1 93 1 8 1 211 1 342 2 316 2 144 4 163 1 121 1 266 1 215 1 349 2 217 1 218 4 56 1 321 1 294 1 324 2 62 1 299 1 155 1 64 1 108 4 132 1 133 1 278 4 136 1 263 1 90 1 358 2 71 2 205 2 
264 2 280 1 338 1 209 1 241 1 140 1 176 1 177 2 178 1 313 1 93 1 8 1 211 1 342 2 316 2 144 4 163 1 121 1 266 1 215 1 349 2 217 1 218 4 56 1 321 1 294 1 324 2 62 1 299 1 155 1 64 1 108 4 132 1 133 1 278 4 136 1 263 1 90 1 358 2 71 2 205 2 
264 2 175 2 280 1 338 1 209 1 241 1 140 1 116 1 176 1 178 1 313 1 93 1 8 1 211 1 342 2 316 2 144 4 121 1 266 1 53 2 215 1 217 1 218 4 56 1 321 1 58 2 294 1 324 2 150 1 250 1 299 1 155 1 64 1 108 4 132 1 133 1 278 4 136 1 90 1 358 2 71 2 
264 2 240 1 280 1 338 1 209 1 241 1 140 1 176 1 177 2 178 1 313 1 93 1 211 1 8 1 316 2 144 5 342 3 163 1 121 1 266 1 215 1 349 2 217 1 218 4 56 1 321 1 294 1 324 3 62 1 299 1 155 1 64 1 108 4 132 1 133 1 278 5 136 1 263 1 90 1 71 2 358 3 205 2 
264 2 240 1 280 1 338 1 209 1 241 1 140 1 176 1 177 2 178 1 313 1 93 1 211 1 8 1 316 2 144 5 342 3 163 1 121 1 266 1 215 1 349 2 217 1 218 4 56 1 321 1 294 1 324 3 62 1 299 1 155 1 64 1 108 4 132 1 133 1 278 5 136 1 263 1 90 1 71 2 358 3 205 2 
264 2 175 2 280 1 338 1 209 1 241 1 140 1 176 1 313 1 178 1 93 1 211 1 8 1 342 2 316 2 144 4 266 1 121 1 53 2 215 1 218 4 217 1 56 1 321 1 58 2 294 1 324 2 150 1 299 1 155 1 64 1 108 4 132 1 133 1 278 4 136 1 358 2 71 2 72 1 
115 3 1 1 339 1 120 1 51 1 182 1 11 1 146 2 213 2 344 1 270 1 221 1 287 1 189 1 249 1 353 1 193 2 60 6 229 3 253 1 87 1 157 1 231 1 257 2 203 1 112 1 
337 2 115 8 1 1 243 1 362 1 339 2 143 1 51 11 11 11 146 1 213 4 345 1 184 1 344 2 270 1 287 2 124 1 292 3 61 1 193 1 60 14 152 3 229 6 39 1 87 2 65 1 157 2 257 2 231 2 232 1 70 2 138 1 112 4 
114 1 140 1 115 1 45 1 178 2 339 1 363 1 180 1 143 1 50 1 28 1 183 1 146 1 122 1 213 2 345 1 12 1 270 1 34 1 287 1 223 1 321 2 60 2 373 1 229 1 230 1 130 1 87 1 377 1 157 1 41 1 231 1 42 1 334 1 138 1 172 1 112 1 173 1 
337 2 1 3 140 1 2 2 339 3 178 3 49 1 143 1 180 2 182 1 50 2 51 7 183 2 11 7 146 2 345 1 344 3 12 2 248 1 287 3 189 1 249 1 193 4 194 1 60 20 15 2 253 1 157 3 257 8 202 2 203 1 70 2 112 7 114 3 115 10 74 1 363 1 28 1 122 2 78 2 213 6 270 3 221 1 34 2 321 3 373 1 229 10 230 2 39 4 87 3 377 3 40 2 231 3 41 2 232 2 42 3 172 1 138 1 173 1 
140 1 114 8 115 1 178 1 339 2 363 1 340 1 49 1 285 1 143 1 28 2 183 2 267 1 213 4 345 1 270 2 12 2 32 1 287 2 290 1 321 1 353 1 296 1 60 2 373 1 38 1 197 2 229 1 230 3 20 1 300 1 87 2 376 1 377 7 157 2 41 2 231 2 42 8 172 1 
337 1 140 1 115 1 1 1 312 1 339 1 178 1 363 1 161 1 51 1 11 1 213 2 344 1 270 1 350 1 287 1 321 1 193 1 60 3 229 2 87 1 157 1 257 1 231 1 232 1 70 1 138 1 172 1 112 1 
353 1 115 2 60 2 339 1 39 1 87 1 51 1 157 1 257 1 11 1 231 1 213 2 344 1 270 1 70 1 333 1 112 1 287 1 
353 1 1 1 193 1 60 2 195 1 339 1 229 2 87 1 51 1 157 1 257 1 11 1 231 1 213 2 232 1 270 1 112 1 287 1 
337 1 115 2 1 1 339 1 51 2 11 2 213 2 344 1 270 1 287 1 353 1 60 4 193 1 229 2 39 1 87 1 157 1 231 1 257 2 232 1 70 1 112 2 
115 2 60 2 339 1 39 1 340 1 87 1 51 1 157 1 257 1 11 1 231 1 213 2 344 1 270 1 70 1 333 1 112 1 287 1 
1 1 193 1 60 2 195 1 339 1 229 2 340 1 87 1 51 1 157 1 257 1 11 1 231 1 213 2 232 1 270 1 112 1 287 1 
337 1 115 2 1 1 339 1 340 1 51 2 11 2 213 2 344 1 270 1 287 1 60 4 193 1 229 2 39 1 87 1 157 1 231 1 257 2 232 1 70 1 112 2 
337 1 1 1 115 2 193 1 60 4 229 2 339 1 39 1 87 1 51 2 157 1 257 2 11 2 231 1 232 1 213 2 344 1 270 1 70 1 112 2 287 1 
115 1 114 1 178 1 339 1 180 1 143 1 50 1 28 1 183 1 146 1 122 1 213 2 345 1 12 1 270 1 34 1 287 1 321 1 60 2 15 1 229 1 230 1 87 1 377 1 157 1 41 1 231 1 42 1 
115 1 114 1 26 1 178 1 339 1 143 1 28 1 183 1 146 1 122 1 213 2 345 1 12 1 270 1 220 1 34 1 287 1 321 1 60 2 229 1 230 1 87 1 377 1 157 1 41 1 378 1 231 1 42 1 
337 1 115 2 1 1 339 1 51 2 11 2 213 2 344 1 270 1 287 1 60 4 193 1 229 2 39 1 87 1 157 1 231 1 257 2 232 1 70 1 138 1 112 2 
337 1 1 1 115 2 2 1 114 1 178 1 339 1 180 1 51 2 50 1 11 2 183 1 122 1 213 2 344 1 12 1 270 1 34 1 287 1 321 1 193 1 60 4 15 1 229 2 39 1 230 1 300 1 87 1 377 1 157 1 257 2 41 1 231 1 232 1 42 1 70 1 112 2 
207 1 337 1 1 1 140 1 115 2 312 1 339 1 178 1 363 1 51 1 11 1 213 2 344 1 270 1 350 1 287 1 321 1 60 3 229 1 39 1 87 1 157 1 257 1 231 1 232 1 70 1 138 1 172 1 112 1 
337 4 1 4 281 1 339 4 179 1 182 1 344 5 347 1 246 1 57 1 189 1 292 2 192 4 249 1 60 37 193 4 152 2 63 1 253 1 157 4 257 9 203 1 70 4 359 1 115 20 310 1 117 2 213 8 31 1 366 1 269 1 221 1 165 1 124 2 127 1 326 2 229 17 39 5 87 4 331 1 231 4 232 3 
337 3 1 2 115 14 281 1 310 1 117 1 339 3 179 1 31 1 213 6 269 1 344 3 347 1 246 1 57 1 124 2 292 2 192 4 193 2 60 26 127 1 152 2 326 2 229 12 39 2 63 2 331 2 87 3 157 3 257 4 231 3 232 2 70 3 359 1 
337 3 1 5 115 23 281 1 310 1 117 1 339 4 179 1 182 2 31 1 213 8 269 1 344 5 347 1 246 1 165 1 221 2 57 1 189 2 124 3 292 3 249 2 192 4 193 4 60 44 127 1 152 3 154 1 326 2 229 21 39 5 253 2 63 1 331 2 87 4 157 4 257 9 231 4 232 3 203 2 70 3 359 1 
337 3 1 4 115 22 281 1 310 1 117 1 339 4 179 1 182 2 31 1 213 8 269 1 344 5 347 1 246 1 165 1 221 2 57 1 189 2 124 3 292 3 249 2 192 4 193 4 60 40 127 1 152 3 154 1 326 2 229 18 39 4 253 2 63 1 331 2 87 4 157 4 257 8 231 4 232 2 203 2 70 3 359 1 
337 3 1 4 115 17 281 1 310 1 117 1 339 2 179 1 182 1 31 1 213 4 269 1 344 4 347 1 246 1 221 1 57 1 189 1 124 2 292 2 249 1 192 4 193 3 60 32 127 1 152 2 326 1 229 15 39 3 253 1 63 1 331 1 87 2 157 2 257 6 231 2 232 3 203 1 70 3 359 1 
101 1 35 1 76 1 67 1 105 1 68 1 134 1 311 1 284 1 254 1 
52 1 238 1 
101 1 76 1 105 1 68 1 16 1 311 1 252 1 85 1 254 1 
101 1 35 1 294 1 105 1 311 1 284 1 315 1 254 1 200 2 27 1 317 1 76 1 156 1 108 1 67 1 10 1 68 1 218 1 
101 1 35 1 294 1 105 1 311 1 284 1 315 1 254 1 200 2 27 1 317 1 76 1 156 1 108 1 67 1 10 1 68 1 218 1 
101 1 35 1 294 1 105 1 311 1 284 1 315 1 254 1 200 2 27 1 317 1 76 1 156 1 108 1 67 1 10 1 68 1 218 1 
351 1 227 1 142 1 
351 1 227 1 142 1 
255 1 69 1 
351 1 255 1 69 1 
19 1 9 1 
306 1 140 2 308 1 311 1 178 2 363 2 27 1 76 1 9 1 365 1 146 1 52 1 218 1 321 2 101 1 191 1 105 1 84 1 254 1 200 1 19 1 156 1 108 1 68 1 262 1 172 2 238 1 
227 1 142 1 
351 1 255 1 69 1 
114 2 3 1 140 2 115 1 307 1 178 2 339 1 143 1 183 1 213 2 345 1 12 1 270 1 346 1 287 1 290 1 321 2 104 1 60 2 197 2 375 1 229 1 230 1 87 1 376 1 157 1 377 2 41 1 231 1 42 2 138 1 
114 2 295 2 6 1 106 1 265 1 327 1 49 1 300 1 377 2 301 1 183 1 41 1 343 1 185 1 42 2 13 1 320 1 186 1 99 1 
92 1 114 1 295 2 265 1 327 1 49 1 377 1 301 1 41 1 183 1 343 1 185 1 42 1 13 1 320 1 186 1 99 1 
114 1 6 1 198 1 265 1 230 1 285 1 28 1 377 1 183 1 41 1 42 1 12 1 32 1 166 1 
114 1 295 2 6 1 106 1 265 1 327 1 49 1 377 1 301 1 183 1 41 1 343 1 185 1 42 1 13 1 320 1 186 1 99 1 
190 1 
43 1 338 1 294 1 136 1 282 1 120 1 299 1 
280 1 175 1 338 1 177 1 211 1 316 1 163 1 349 1 218 1 294 2 299 1 155 1 108 1 133 1 278 1 136 1 205 1 
337 2 43 1 280 4 175 12 338 9 1 2 282 1 181 2 183 4 344 2 12 3 54 6 349 6 56 2 288 1 352 1 294 8 155 4 299 8 300 1 108 5 259 1 70 2 204 2 23 1 360 2 208 1 24 1 114 3 211 4 316 3 28 1 78 2 79 2 218 5 81 1 34 3 224 2 167 2 372 3 228 2 325 2 329 2 230 10 328 2 171 2 377 3 41 3 232 2 133 4 42 3 380 6 278 5 136 2 
337 2 175 6 280 2 139 1 338 8 1 2 310 1 179 1 211 2 316 1 31 1 344 2 54 5 349 3 218 1 246 1 81 1 224 1 124 1 292 1 294 5 152 1 277 1 328 1 155 2 299 5 108 1 232 2 380 5 133 2 278 1 70 2 136 2 359 1 360 2 
280 1 338 2 1 1 140 1 93 1 178 1 363 1 211 1 182 1 344 2 218 1 350 1 149 1 321 1 189 1 103 1 328 1 155 1 299 2 330 1 108 1 133 1 203 1 261 1 263 1 172 1 206 1 360 2 
43 1 280 1 294 1 338 1 282 1 155 1 299 1 211 1 133 1 136 1 
337 2 175 10 294 5 338 5 1 2 328 1 299 5 78 1 232 2 344 2 380 5 70 2 54 5 349 5 360 2 
316 1 294 1 108 1 278 1 136 1 218 1 
280 2 338 2 24 2 114 4 160 1 212 1 211 1 285 1 316 2 77 1 28 2 183 3 80 1 12 2 32 1 218 3 247 1 34 1 81 2 288 1 224 2 293 1 128 1 251 1 230 2 155 2 299 2 22 1 377 4 108 3 41 2 133 2 42 4 278 4 
113 1 114 1 140 2 339 1 178 3 363 2 143 1 180 1 28 1 50 1 183 1 146 1 122 1 213 2 12 1 270 1 350 2 34 1 287 1 321 3 60 1 15 1 229 1 230 1 87 1 330 1 377 1 157 1 231 1 41 1 42 1 172 2 
224 1 175 4 280 1 338 1 294 4 299 2 155 1 211 1 380 2 133 1 54 2 349 2 136 2 221 1 81 1 
101 1 83 1 311 1 
101 1 83 1 311 1 
101 1 19 1 309 1 311 1 284 1 
101 1 83 1 311 1 
101 1 302 1 311 1 
101 1 302 1 311 1 
101 1 302 1 311 1 
101 1 311 1 
105 1 68 1 
249 1 1 1 115 4 60 8 193 2 326 1 229 4 339 2 39 1 253 1 87 2 157 2 182 1 257 3 231 2 213 4 344 1 203 1 221 1 189 1 
249 1 115 3 1 1 193 2 60 6 229 3 120 1 253 1 182 1 257 2 203 1 344 1 221 1 189 1 
337 1 1 1 115 2 193 1 60 4 229 2 339 1 39 1 87 1 157 1 257 2 231 1 232 1 213 2 344 1 70 1 273 1 
292 1 124 1 115 1 60 2 152 1 229 1 
337 2 115 11 1 3 362 1 339 2 182 2 213 4 344 3 221 1 222 1 189 2 292 2 249 1 60 23 193 5 61 1 152 2 326 2 229 12 39 4 253 1 87 2 65 1 157 2 257 9 231 2 232 2 203 1 70 2 
60 1 152 1 229 1 
292 1 115 1 60 1 
337 1 115 3 1 1 60 6 193 2 339 1 229 3 39 1 87 1 157 1 231 1 257 3 78 1 213 2 232 1 344 1 70 1 273 1 
337 2 115 6 1 2 310 1 339 1 179 1 213 2 31 1 344 2 246 1 57 1 292 1 124 1 60 12 193 1 152 1 229 6 39 1 87 1 157 1 231 1 257 2 232 2 70 2 359 1 
115 3 1 1 60 6 193 1 229 3 39 1 182 1 257 2 203 1 344 1 189 1 
249 1 115 1 193 1 60 3 326 1 229 2 339 1 39 1 253 1 87 1 182 1 157 1 257 2 231 1 213 2 222 1 189 1 
115 5 1 2 193 3 60 10 339 1 229 5 39 2 87 1 157 1 182 2 231 1 257 5 213 2 203 1 344 2 57 1 206 1 189 2 
115 2 60 2 339 1 39 1 87 1 157 1 231 1 257 1 213 2 344 1 70 1 57 1 
337 1 1 1 115 2 193 1 60 4 229 2 339 1 39 1 87 1 157 1 257 2 231 1 232 1 213 2 344 1 70 1 57 1 
115 1 60 3 193 1 326 1 229 2 339 3 39 1 87 3 157 3 182 1 231 3 257 2 213 6 165 1 57 1 222 1 189 1 
174 1 337 2 115 15 1 4 4 1 339 5 182 3 213 10 344 4 221 1 165 1 57 1 222 1 189 3 273 1 124 1 292 3 249 1 193 5 60 31 152 3 326 2 229 16 39 4 253 1 87 5 157 5 231 5 257 9 233 1 232 2 203 2 70 2 
337 2 115 7 1 1 310 1 339 2 179 1 213 4 31 1 344 2 246 1 57 1 292 1 124 1 60 11 193 1 152 1 326 1 229 4 39 1 87 2 157 2 231 2 257 2 232 1 70 2 359 1 
337 2 115 10 1 2 310 1 339 3 179 1 182 1 31 1 213 6 344 3 246 1 221 1 57 1 189 1 273 1 124 1 292 1 249 1 60 17 193 3 152 1 326 1 229 7 39 1 253 1 87 3 157 3 231 3 257 4 232 1 203 1 70 2 359 1 
337 2 115 9 1 3 310 1 339 3 179 1 182 1 31 1 213 6 344 3 246 1 221 1 57 1 189 1 273 1 292 1 124 1 249 1 60 19 193 3 152 1 326 1 229 10 39 1 253 1 87 3 157 3 231 3 257 4 232 2 203 1 70 2 359 1 
337 2 115 10 1 2 310 1 339 3 179 1 182 1 213 6 31 1 344 3 246 1 221 1 57 1 189 1 273 1 292 1 124 1 249 1 60 17 193 3 152 1 326 1 229 7 39 2 253 1 87 3 157 3 231 3 257 5 232 1 203 1 70 2 359 1 
337 2 115 7 1 1 310 1 339 2 179 1 213 4 31 1 344 2 246 1 57 1 292 1 124 1 60 11 193 1 152 1 326 1 229 4 39 1 87 2 157 2 231 2 257 2 232 1 70 2 359 1 
337 2 115 6 1 2 310 1 339 1 179 1 213 2 31 1 344 2 246 1 57 1 292 1 124 1 60 12 193 1 152 1 229 6 39 1 87 1 157 1 231 1 257 2 232 2 70 2 359 1 
337 2 115 10 1 2 310 1 339 4 179 1 182 1 31 1 213 8 344 3 246 1 221 1 57 1 189 1 273 1 124 1 292 1 249 1 60 18 193 3 152 1 326 2 229 8 39 2 253 1 87 4 157 4 231 4 257 5 232 1 203 1 70 2 359 1 
337 3 115 9 1 2 310 1 339 4 179 1 31 1 213 8 344 3 246 1 57 1 165 1 124 1 292 1 60 16 193 3 152 1 326 2 229 7 39 3 87 4 157 4 231 4 257 6 232 2 70 3 359 1 
249 1 1 1 115 3 60 7 193 3 229 4 39 3 253 2 182 3 257 6 203 1 344 1 189 3 
337 2 115 10 1 2 310 1 339 4 179 1 182 1 31 1 213 8 344 3 246 1 221 1 57 1 165 1 189 1 124 1 292 1 249 1 60 18 193 3 152 1 326 2 229 8 39 1 253 1 87 4 157 4 231 4 257 4 232 1 203 1 70 2 359 1 
140 1 146 1 151 1 303 1 217 1 178 1 321 1 
140 1 151 1 275 1 196 1 178 1 201 1 256 1 146 1 303 1 304 1 217 1 321 1 
285 1 377 1 28 1 183 1 41 1 114 1 42 1 12 1 32 1 230 1 120 1 
140 1 114 1 373 1 178 2 230 1 363 1 28 1 377 1 50 1 183 1 41 1 146 1 122 1 42 1 12 1 172 1 34 1 321 2 
114 1 24 1 140 2 178 2 93 1 363 1 8 1 181 1 50 1 183 1 146 1 122 1 79 1 12 2 34 2 321 2 373 1 230 3 377 1 41 1 132 1 42 1 172 2 
114 2 24 1 140 2 178 2 93 1 363 1 8 1 181 1 183 1 146 1 122 1 79 1 12 2 34 2 321 2 102 1 373 1 230 3 377 2 41 1 378 1 132 1 42 2 172 2 
239 1 167 1 102 1 294 1 24 1 114 3 372 1 230 4 181 1 28 1 108 2 377 3 183 1 332 1 41 1 79 1 42 3 12 1 278 1 136 1 218 2 56 1 34 1 
167 1 102 1 294 1 24 1 114 3 372 1 230 4 171 1 181 1 28 1 108 2 377 3 183 1 41 1 79 1 42 3 12 1 278 1 136 1 218 2 56 1 34 1 
377 1 183 1 41 1 114 1 42 1 38 1 
208 1 114 7 296 1 197 1 38 1 230 3 49 1 20 1 300 1 77 1 28 2 377 6 22 1 41 2 183 3 267 1 147 1 42 7 12 2 34 1 290 1 
1 1 115 3 140 1 114 1 2 1 178 2 339 2 363 1 180 1 51 1 182 1 50 1 11 1 183 1 146 2 122 1 213 4 344 1 12 1 270 2 221 1 34 1 287 2 189 1 321 2 249 1 60 6 193 2 373 1 15 1 229 3 375 1 230 1 253 1 87 2 300 1 157 2 377 1 40 1 257 2 41 1 231 2 203 1 42 1 138 1 172 1 112 1 
43 1 280 2 338 1 114 1 282 1 211 2 316 1 28 1 218 3 56 1 288 1 167 1 294 1 372 1 228 1 329 1 230 2 299 1 155 2 171 1 377 1 108 3 42 1 133 2 278 2 136 1 262 1 204 1 
167 1 352 1 208 1 114 2 38 1 230 2 300 1 377 2 41 1 183 2 42 2 12 1 34 1 
102 1 114 4 159 1 230 1 300 1 285 1 28 1 377 4 183 1 41 1 42 4 12 1 32 1 
24 1 114 2 251 1 74 1 230 1 212 1 77 1 377 2 22 1 41 1 183 2 42 2 12 1 34 1 
377 1 28 1 183 1 41 1 114 1 295 1 343 1 42 1 186 1 327 1 
114 2 104 1 230 1 49 1 300 1 377 2 41 1 183 1 42 2 12 1 290 1 
24 1 114 5 159 1 230 3 285 1 300 1 20 1 28 1 377 4 41 2 183 2 267 1 42 5 12 2 32 1 290 1 
24 1 114 5 159 1 230 3 285 1 300 1 20 1 28 1 377 4 41 2 183 2 42 5 12 2 32 1 100 1 290 1 
140 1 114 1 373 1 178 2 230 1 363 1 28 1 377 1 183 1 378 1 41 1 146 1 122 1 42 1 12 1 172 1 34 1 321 2 
208 1 24 1 114 1 230 1 77 1 377 1 22 1 41 1 183 2 147 1 42 1 12 1 34 1 
336 1 291 1 146 1 187 1 48 1 
336 2 291 2 0 1 322 1 294 1 93 1 314 1 48 1 8 1 108 2 66 1 121 1 146 1 132 1 136 1 262 1 218 2 187 2 56 1 
291 1 3 1 140 1 307 1 178 1 48 1 346 1 187 1 321 1 
322 1 314 1 48 1 
323 1 305 1 298 1 120 1 
125 1 323 1 37 1 214 1 305 1 298 1 210 1 
379 1 75 1 210 1 
274 1 125 1 323 1 37 1 298 1 210 3 214 3 279 1 235 1 305 1 137 1 357 2 
125 1 323 1 37 1 214 2 305 1 236 1 298 1 119 1 210 2 
7 1 125 1 274 1 323 1 295 1 185 1 37 1 214 1 286 1 327 1 210 1 
125 1 274 1 323 1 37 1 214 1 305 1 210 1 
125 1 274 1 37 1 214 1 305 2 298 1 210 1 
274 1 125 2 323 1 36 1 37 2 355 1 244 1 210 2 214 2 305 1 
274 1 125 1 323 2 37 1 44 1 298 1 210 3 89 1 214 3 305 1 236 2 286 1 82 1 
274 1 125 1 323 1 295 2 354 1 37 1 298 1 327 1 210 2 343 1 185 1 214 2 320 1 305 1 236 1 
274 1 125 2 323 2 37 2 298 1 119 1 210 4 214 4 348 1 305 1 236 2 286 1 82 1 
125 1 274 1 323 1 37 1 214 1 305 1 298 1 210 1 
91 1 125 1 323 3 37 1 298 2 210 4 214 4 279 1 235 1 305 2 357 1 236 2 286 1 82 1 
125 1 274 1 323 1 260 1 37 1 214 2 305 1 236 1 369 1 298 1 123 1 210 2 
125 1 274 1 95 1 323 1 37 1 214 3 279 2 235 1 305 1 357 2 298 1 210 3 
323 2 25 2 169 1 341 1 
125 1 274 1 37 1 214 1 289 1 210 1 
125 1 274 1 323 1 44 1 37 1 214 2 305 1 236 1 298 1 210 2 
73 1 
125 1 274 1 323 1 37 1 214 1 305 1 298 1 210 1 
274 1 125 1 323 1 37 1 44 1 298 1 210 3 214 3 305 1 236 1 357 1 
91 1 323 1 286 1 82 1 
323 1 305 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (211,223) 337 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (26,360) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (22,280,328) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (26,360) (26,360) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (211,223) 337 191 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 100 249 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (211,223) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (211,223) (211,223) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 233 279 300 52 248 128 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 233 279 300 52 248 128 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 233 279 300 52 248 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (26,360) (26,360) 84 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (211,223) 337 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 233 279 300 52 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
349 1 28 4 80 6 60 9 351 1 336 3 34 2 312 1 175 1 355 1 359 1 40 1 340 2 339 5 157 2 96 1 98 1 179 1 321 2 296 2 164 1 269 1 166 1 101 9 21 1 142 2 171 2 308 1 
349 1 28 4 80 6 60 9 351 1 336 3 34 2 312 1 175 1 355 1 359 1 40 1 340 2 339 5 157 2 96 1 98 1 179 1 321 2 296 2 164 1 269 1 166 1 101 9 21 1 142 2 171 2 308 1 
349 1 28 5 80 7 60 10 351 1 336 4 34 2 312 1 175 1 355 1 359 1 40 1 340 2 339 6 157 2 96 1 98 1 179 1 321 2 296 2 164 1 269 1 166 1 101 10 21 1 142 2 171 2 308 1 
349 1 28 3 80 4 60 7 351 1 336 2 34 2 312 1 175 1 355 1 359 1 40 1 340 2 339 4 157 2 96 1 179 1 321 2 296 2 164 1 269 1 166 1 101 7 21 1 142 2 171 1 308 1 
80 3 28 2 296 1 321 1 60 4 269 1 336 1 351 1 166 1 101 4 34 1 175 1 21 1 339 3 157 1 142 1 171 2 98 1 
349 1 60 2 321 1 296 1 164 1 269 1 101 2 34 1 175 1 21 1 182 1 339 1 340 1 157 1 201 1 240 1 
80 1 28 1 60 3 339 2 340 1 269 1 336 1 157 2 101 3 312 1 34 2 175 1 21 1 
80 7 28 4 296 1 321 1 60 9 269 1 351 1 336 3 166 1 101 9 34 2 312 1 175 1 21 1 40 1 339 5 340 1 157 2 200 1 142 1 171 2 115 1 98 1 179 1 
80 7 28 4 296 1 321 1 60 9 269 1 351 1 336 3 166 1 101 9 34 2 312 1 175 1 21 1 40 1 339 5 340 1 157 2 200 1 142 1 171 2 115 1 98 1 179 1 
235 1 199 1 227 1 
199 1 225 2 99 1 
76 1 144 2 
208 1 337 1 76 1 7 2 193 1 223 1 226 2 177 1 144 1 68 2 187 1 
76 1 360 1 144 1 
294 1 280 1 195 1 111 1 88 1 89 1 22 1 20 1 71 1 328 1 199 1 224 1 227 1 143 1 
328 1 144 1 
280 1 140 1 195 1 103 1 95 1 
199 1 280 2 42 1 140 1 227 1 195 2 95 1 56 1 
280 1 140 1 195 1 
76 1 280 1 26 1 360 1 195 1 95 1 144 1 
199 1 
199 1 280 2 92 1 42 1 140 1 227 1 195 2 95 1 
251 2 47 1 117 1 162 2 280 5 195 5 329 2 199 1 42 1 237 1 140 2 227 1 274 1 95 2 109 1 373 1 277 1 362 1 230 1 
294 2 58 1 133 1 267 1 217 1 132 1 281 1 69 1 313 1 89 1 71 2 137 1 7 1 139 1 41 1 77 1 226 1 177 1 68 1 186 1 
235 1 
294 1 350 1 87 1 144 1 88 1 89 1 71 1 145 1 73 1 
294 2 132 2 350 1 77 2 87 1 144 1 88 1 89 2 186 1 71 2 
294 1 132 1 77 1 371 1 88 1 89 1 71 1 
144 1 73 1 145 1 
280 1 281 1 111 1 354 1 88 1 191 1 89 1 337 1 7 1 177 1 68 1 294 1 132 1 195 1 71 1 328 1 76 1 77 1 223 1 224 1 226 1 143 1 144 2 186 1 145 1 
294 2 132 1 350 1 77 1 89 2 20 1 315 1 71 2 186 1 
294 2 132 2 280 1 281 1 195 1 111 1 88 1 354 1 89 2 71 2 328 1 199 1 77 2 224 1 143 1 144 1 186 2 145 1 45 1 
144 1 145 1 
7 1 226 1 177 1 68 1 
7 1 226 1 177 1 68 1 
129 1 173 2 63 1 170 1 264 1 159 1 241 1 366 1 
358 1 294 1 132 1 77 1 111 1 88 1 89 1 71 1 
294 1 132 1 350 1 77 1 87 1 144 1 88 1 89 1 71 1 186 1 145 1 
358 1 294 2 132 2 77 2 371 1 88 1 89 2 71 2 
123 1 172 1 
123 1 172 1 
13 1 205 1 
13 1 205 1 
13 1 205 1 
123 1 172 1 231 1 
123 1 348 1 172 1 
13 1 331 1 276 1 123 2 172 2 205 1 
123 1 172 1 231 1 
123 1 172 1 231 1 
247 1 123 1 172 1 
247 1 123 1 172 1 
247 1 123 1 172 1 
293 2 216 1 83 1 280 2 32 2 165 1 258 1 190 1 257 3 195 2 150 2 210 2 199 1 25 1 341 1 276 1 123 2 172 2 372 2 
59 1 294 2 132 2 350 1 126 1 280 1 134 1 32 1 165 1 257 1 195 1 89 2 71 2 150 1 357 1 210 1 287 1 24 1 77 2 238 1 123 1 348 1 172 1 372 1 
296 1 321 1 142 1 
296 1 321 1 201 1 
220 1 14 1 321 3 163 1 201 1 142 2 
220 1 152 1 14 1 321 2 201 1 142 1 
220 2 14 1 321 2 201 1 142 1 
59 1 279 1 309 1 251 1 253 2 126 1 280 5 86 1 65 1 233 1 285 1 287 1 42 1 95 4 213 1 99 1 47 3 162 1 297 1 135 1 195 5 167 1 70 2 329 1 199 2 140 1 225 3 274 1 227 1 27 1 229 2 230 2 
334 1 279 3 251 2 253 6 280 9 174 1 86 3 65 3 233 3 285 3 38 5 287 4 42 1 95 7 99 3 322 1 47 8 117 1 162 2 135 1 195 9 167 2 103 5 72 1 329 2 199 5 140 6 225 9 78 1 227 1 274 1 27 2 229 6 55 1 230 6 
309 1 251 1 279 1 253 2 280 3 86 1 65 1 233 1 285 1 287 1 95 2 99 2 47 3 162 1 117 1 297 1 195 3 167 1 70 1 329 1 199 3 225 4 227 1 27 1 229 2 230 2 
334 1 251 1 309 1 279 2 253 4 280 4 86 2 65 2 233 2 285 2 287 2 95 3 99 3 322 1 47 5 162 1 117 1 297 1 195 4 167 1 72 1 70 2 329 1 199 4 225 7 227 1 27 1 229 4 230 4 
235 1 267 1 33 1 
267 1 67 1 
180 1 
267 1 137 1 
267 3 137 1 207 1 0 1 33 2 313 1 
267 1 137 1 313 1 
267 1 146 1 
295 2 124 1 61 1 299 1 244 5 86 1 102 2 314 1 65 1 303 1 183 4 91 1 184 1 370 3 106 9 108 1 242 1 
295 2 124 1 61 1 299 1 244 5 86 1 102 2 314 1 65 1 303 1 183 4 91 1 184 1 370 3 106 9 108 1 242 1 
295 2 124 1 61 1 299 1 244 5 86 1 102 2 314 1 65 1 303 1 183 4 91 1 184 1 370 3 106 9 203 1 108 1 242 1 
232 1 124 2 279 3 61 1 173 2 63 1 282 1 86 3 314 2 65 4 233 3 285 2 91 1 317 1 264 1 159 1 242 2 295 5 325 3 244 16 299 5 181 1 102 3 366 1 303 2 183 13 184 1 105 1 370 10 106 29 108 1 202 4 306 1 228 1 
124 1 61 1 81 1 110 1 173 4 63 2 86 1 314 1 65 1 264 2 159 2 242 1 295 3 244 6 299 2 102 2 366 2 303 1 183 5 105 1 184 1 370 5 106 11 108 1 
80 1 250 1 60 2 209 1 34 1 175 1 64 1 35 1 284 1 339 1 7 1 340 1 157 1 178 1 68 1 296 1 345 1 217 1 321 2 163 1 269 1 101 2 21 1 368 1 139 1 222 1 226 1 333 1 201 1 142 1 
80 2 250 1 60 3 209 1 34 1 175 1 64 1 35 1 284 1 339 1 7 1 340 1 157 1 290 1 68 1 296 1 345 1 217 1 321 2 163 1 269 1 218 1 101 3 368 1 139 1 222 1 304 1 226 1 201 1 142 1 
80 2 250 1 60 2 209 1 175 1 64 1 35 1 284 1 339 1 340 1 7 1 290 1 68 1 217 1 321 2 296 1 163 1 269 1 101 2 368 1 139 1 304 1 226 1 201 1 142 1 
217 1 267 1 363 1 60 1 219 1 218 1 209 2 101 1 34 1 260 1 259 1 64 2 35 2 262 1 192 1 137 1 340 2 7 1 139 1 157 1 226 1 177 1 68 1 
250 1 60 1 209 1 34 1 64 1 35 1 284 1 7 1 340 1 157 1 290 1 178 1 68 1 296 1 345 1 217 1 321 2 163 1 101 1 21 1 368 1 139 1 222 1 226 1 201 1 142 1 
352 1 
280 5 111 1 66 1 151 1 192 1 7 2 113 4 11 1 68 2 294 1 243 2 162 1 195 5 302 2 22 1 20 1 71 1 198 1 199 2 27 1 251 1 125 1 256 2 85 1 260 1 88 1 89 1 37 2 42 3 265 2 361 1 177 2 97 2 99 2 215 1 47 2 267 1 217 1 266 1 327 2 328 1 329 1 137 1 139 1 332 1 53 1 140 6 225 2 226 2 224 1 227 1 274 1 143 1 230 2 278 1 
280 3 111 1 88 1 89 1 151 1 92 1 42 1 113 2 11 1 294 1 266 1 195 3 327 1 71 1 20 1 22 1 328 1 198 1 332 1 140 2 224 1 143 1 
280 3 256 1 111 1 88 1 89 1 151 1 92 1 42 1 113 3 11 1 294 1 266 1 195 3 71 1 20 1 22 1 328 1 198 1 199 1 332 1 140 1 224 1 143 1 227 1 
280 3 256 1 111 1 88 1 89 1 151 1 92 1 42 1 113 3 11 1 294 1 266 1 243 1 195 3 327 1 71 1 20 1 22 1 328 1 198 1 199 1 332 1 140 2 224 1 143 1 227 1 
280 5 111 1 151 1 113 6 11 1 12 1 294 1 243 4 162 1 245 1 195 5 120 1 71 1 22 1 20 1 302 2 198 1 199 5 251 1 256 4 311 1 88 1 89 1 37 2 92 1 42 3 361 1 265 2 97 2 99 2 215 1 266 1 47 1 323 1 327 4 328 1 329 1 332 1 140 7 224 1 143 1 227 5 274 1 230 1 
280 4 111 1 66 1 151 1 113 4 11 1 294 1 243 2 162 1 195 4 71 1 20 1 22 1 302 2 198 1 199 2 251 1 256 2 88 1 89 1 37 2 42 2 361 1 265 2 97 2 99 2 215 1 266 1 47 1 327 2 328 1 329 1 332 1 140 4 224 1 225 2 143 1 274 1 227 1 230 1 
251 1 280 4 256 2 111 1 88 1 89 1 37 2 151 1 42 2 113 4 12 1 11 1 265 2 361 1 97 2 99 2 215 1 294 1 243 2 47 1 266 1 323 1 162 1 195 4 327 2 120 1 302 2 71 1 20 1 22 1 328 1 198 1 329 1 199 1 332 1 140 4 224 1 227 1 143 1 274 1 230 1 
251 1 280 4 256 2 111 1 88 1 89 1 37 2 151 1 42 2 113 4 12 1 11 1 265 2 361 1 97 2 99 2 215 1 294 1 243 2 47 1 266 1 323 1 162 1 195 4 327 2 120 1 302 2 71 1 20 1 22 1 328 1 198 1 329 1 199 1 332 1 140 4 224 1 227 1 143 1 274 1 230 1 
251 1 280 4 256 2 111 1 148 2 112 1 88 1 89 1 37 2 151 1 39 2 42 2 113 4 12 1 11 1 361 1 114 1 97 2 294 1 243 2 47 1 266 1 162 1 364 1 195 4 327 2 71 1 20 1 22 1 328 1 198 1 329 1 199 1 332 1 140 4 225 2 224 1 227 1 143 1 274 1 230 1 
251 1 280 4 311 1 256 3 111 1 88 1 89 1 37 2 151 1 42 2 113 5 12 1 11 1 265 2 361 1 97 2 99 2 215 1 294 1 47 1 266 1 243 3 162 1 323 1 195 4 327 3 120 1 302 2 71 1 20 1 22 1 328 1 198 1 329 1 199 1 332 1 140 5 224 1 227 1 274 1 143 1 230 1 
251 1 280 4 311 1 256 3 111 1 88 1 89 1 37 2 151 1 42 2 113 5 12 1 11 1 265 2 361 1 97 2 99 2 215 1 294 1 47 1 266 1 243 3 162 1 323 1 195 4 327 3 120 1 302 2 71 1 20 1 22 1 328 1 198 1 329 1 199 1 332 1 140 5 224 1 227 1 274 1 143 1 230 1 
280 4 111 1 148 2 66 1 151 1 113 4 11 1 114 1 294 1 243 2 162 1 195 4 71 1 20 1 22 1 198 1 199 1 251 1 256 2 88 1 89 1 37 2 39 2 42 2 361 1 97 2 266 1 47 1 327 2 328 1 329 1 332 1 140 4 224 1 225 2 143 1 274 1 227 1 230 1 
295 1 124 1 244 1 299 1 173 2 63 1 366 1 303 1 235 1 183 1 129 1 184 1 370 2 106 2 170 1 264 1 108 1 241 1 159 1 
249 1 244 1 325 1 173 2 63 1 366 1 23 1 183 1 129 1 106 2 170 1 264 1 202 1 159 1 100 1 
58 1 350 1 281 1 173 2 63 1 313 1 89 1 149 1 286 1 7 1 129 1 155 1 41 1 264 1 177 1 292 1 159 1 68 1 214 1 294 2 267 1 217 1 132 1 244 1 69 1 366 1 71 2 23 1 137 1 183 1 139 1 77 1 226 1 141 1 170 1 106 2 347 1 186 1 
58 2 279 2 61 1 281 1 63 3 65 3 233 2 285 2 153 1 7 3 155 1 9 2 290 1 159 3 68 3 295 6 294 3 244 11 299 5 69 2 71 3 23 1 303 1 77 1 170 3 347 1 124 1 350 3 173 6 86 3 313 2 89 1 356 7 211 2 129 3 41 2 264 3 177 1 214 7 46 1 132 1 217 2 267 2 133 7 48 2 102 1 366 3 51 1 183 11 137 2 184 1 139 2 226 3 223 2 370 11 106 22 108 1 185 2 186 1 
15 1 244 1 173 2 63 1 366 1 129 1 7 1 8 1 155 1 226 1 106 1 170 1 264 1 177 1 159 1 68 1 
279 1 244 1 173 2 63 1 86 1 65 1 233 1 366 1 285 1 23 1 183 1 129 1 106 2 10 1 170 1 264 1 144 1 159 1 145 1 
244 1 173 2 63 1 65 1 366 1 233 1 129 1 156 1 106 1 170 1 264 1 241 1 159 1 
173 2 63 1 86 1 366 1 74 1 285 1 183 1 129 1 106 1 170 1 264 1 241 1 159 1 
279 1 244 1 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 1 129 1 106 2 170 1 264 1 241 1 159 1 
15 1 244 1 173 2 63 1 65 1 366 1 233 1 129 1 156 1 106 1 170 1 264 1 159 1 
15 1 173 2 63 1 86 1 366 1 74 1 285 1 183 1 129 1 106 1 170 1 264 1 159 1 
15 1 279 1 244 1 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 1 129 1 106 2 170 1 264 1 159 1 
279 1 244 1 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 1 129 1 170 1 106 2 264 1 159 1 
7 1 223 1 226 1 177 1 68 1 
7 1 226 1 177 1 131 1 68 1 
279 1 244 1 173 2 63 1 86 1 65 1 366 1 233 1 285 1 23 1 183 1 129 1 106 2 170 1 264 1 159 1 
211 1 7 1 223 1 226 1 333 1 68 1 
279 1 244 1 173 2 63 1 86 1 65 1 233 1 366 1 285 1 23 1 183 1 129 1 106 2 170 1 264 1 144 1 159 1 342 1 145 1 
279 3 29 3 110 1 82 1 173 4 63 2 282 1 86 1 36 1 65 3 233 3 285 1 128 1 317 3 158 1 264 2 159 2 325 3 244 12 299 2 248 1 300 1 136 1 366 2 330 1 183 10 169 2 52 1 272 1 370 2 106 22 202 4 
279 2 29 2 110 1 82 1 173 4 63 2 282 1 86 1 65 2 233 2 285 1 128 1 317 1 158 1 264 2 159 2 295 1 325 1 244 7 299 2 248 1 136 1 366 2 330 1 183 6 169 1 370 3 106 13 202 2 
124 1 29 2 279 2 61 1 110 1 82 1 173 2 63 1 282 1 86 2 65 3 233 2 285 1 128 1 317 2 264 1 159 1 295 2 299 1 325 2 244 12 102 1 248 1 300 1 366 1 303 1 183 11 169 1 184 1 52 1 272 1 370 3 106 23 108 1 202 3 
279 2 29 1 110 1 82 1 173 4 63 2 282 1 86 1 65 2 233 2 285 1 128 1 317 1 158 1 264 2 159 2 295 1 325 1 244 6 299 1 248 1 366 2 330 1 183 5 169 1 370 2 106 11 107 1 202 2 
279 1 29 2 82 1 110 1 325 2 244 6 173 2 63 1 248 2 300 1 65 1 233 1 366 1 128 1 183 5 169 2 52 1 317 2 272 1 106 11 264 1 202 2 159 1 
210 1 335 1 83 1 32 1 341 1 276 1 123 1 372 1 172 1 150 1 
134 1 348 1 
210 1 298 1 365 1 32 1 123 1 372 1 172 1 150 1 90 1 
293 1 216 1 83 1 280 1 32 1 165 1 190 1 257 2 195 1 150 1 210 1 199 1 25 1 341 1 276 1 123 1 172 1 372 1 
293 1 216 1 83 1 280 1 32 1 165 1 190 1 257 2 195 1 150 1 210 1 199 1 25 1 341 1 276 1 123 1 172 1 372 1 
293 1 216 1 83 1 280 1 32 1 165 1 190 1 257 2 195 1 150 1 210 1 199 1 25 1 341 1 276 1 123 1 172 1 372 1 
331 1 197 1 231 1 
331 1 197 1 231 1 
239 1 247 1 
331 1 239 1 247 1 
238 1 357 1 
59 1 350 1 280 1 126 1 32 1 257 1 89 2 150 1 357 1 210 1 287 1 238 1 95 1 293 1 294 2 216 1 344 1 132 2 134 1 195 1 71 2 24 1 77 2 123 1 372 1 172 1 348 1 
197 1 231 1 
331 1 239 1 247 1 
206 1 208 2 31 1 173 2 63 1 89 2 6 1 7 2 129 1 236 1 263 1 8 1 155 1 264 1 159 1 68 2 294 2 217 1 267 1 244 1 119 1 366 1 71 2 23 1 137 1 183 1 139 1 226 2 170 1 106 2 347 1 
296 1 321 2 217 1 163 1 35 1 284 1 7 2 316 1 368 1 139 1 288 1 222 1 201 1 226 2 333 1 142 1 94 1 290 1 68 2 
296 1 321 2 217 1 163 1 35 1 284 1 338 1 7 1 368 1 288 1 139 1 222 1 201 1 226 1 142 1 290 1 68 1 
217 1 267 1 324 1 259 1 260 1 35 1 192 1 137 1 7 1 316 1 139 1 226 1 177 1 68 1 
296 1 321 2 217 1 163 1 35 1 284 1 7 1 316 1 368 1 139 1 288 1 222 1 201 1 226 1 142 1 94 1 290 1 68 1 
93 1 
235 1 47 1 199 1 227 1 373 1 277 1 230 1 
251 1 280 1 42 1 265 1 99 1 215 1 47 1 162 1 195 1 302 1 329 1 199 2 140 1 225 1 274 1 227 1 230 1 
279 2 280 5 1 1 62 2 2 2 146 2 65 2 233 2 285 2 7 3 289 2 67 3 68 3 161 2 162 4 195 5 19 1 199 8 27 2 251 4 253 6 207 1 85 1 33 2 86 2 313 3 261 2 42 3 318 2 177 1 99 6 47 9 217 3 267 10 268 1 270 2 329 4 221 2 137 3 369 1 139 4 273 1 140 5 333 1 226 3 224 2 225 12 227 2 274 4 185 2 229 6 373 1 277 1 230 8 
57 1 251 1 279 2 253 4 189 1 86 2 65 2 233 2 285 2 317 1 99 1 47 6 162 1 325 1 300 1 329 1 199 1 52 1 272 1 225 2 274 1 202 1 229 4 230 4 
251 1 124 1 47 2 61 1 323 1 162 1 280 1 84 1 195 1 270 2 86 1 65 1 76 1 329 1 303 1 26 1 360 1 274 1 144 1 230 1 
251 1 47 1 162 1 329 1 199 1 274 1 227 1 277 1 373 1 230 1 
279 2 47 5 253 5 270 2 86 2 65 2 233 2 285 2 199 5 289 1 225 10 185 1 229 5 99 5 230 5 
199 1 280 1 42 1 140 1 227 1 195 1 
251 2 252 1 125 1 280 3 85 2 260 1 192 1 7 4 42 2 177 2 68 4 217 1 267 1 47 2 268 2 117 1 162 2 194 1 195 3 329 2 137 1 139 1 369 1 140 4 226 4 274 1 27 2 278 1 230 2 
76 1 7 1 223 1 226 1 177 1 144 1 68 1 337 1 
251 1 47 1 253 2 162 1 85 1 102 1 329 1 199 4 225 4 274 1 27 1 227 2 99 2 229 2 230 2 
305 1 372 1 150 1 
341 1 147 1 372 1 150 1 357 1 
305 1 372 1 150 1 
305 1 372 1 150 1 
283 1 372 1 150 1 
283 1 372 1 150 1 
283 1 372 1 150 1 
372 1 150 1 
123 1 172 1 
124 1 61 1 110 1 173 2 63 1 86 1 65 1 317 1 264 1 159 1 295 2 325 1 244 5 299 1 102 1 366 1 303 1 183 5 52 1 184 1 370 3 106 10 202 1 108 1 
124 1 279 1 61 1 110 1 173 4 63 2 282 1 86 1 65 2 233 1 317 1 264 2 212 1 159 2 295 2 325 1 244 7 299 2 102 1 366 2 303 1 183 6 184 1 52 1 370 4 106 13 108 1 202 2 
279 1 110 1 244 3 325 1 173 2 63 1 300 1 65 1 233 1 366 1 183 2 52 1 317 1 272 1 106 5 264 1 202 1 159 1 
279 1 110 1 244 3 325 1 173 2 63 1 300 1 65 1 233 1 366 1 183 2 52 1 317 1 272 1 106 5 264 1 202 1 159 1 
124 1 61 1 110 1 173 2 63 1 86 1 65 1 317 1 264 1 159 1 295 2 325 1 244 5 299 1 102 1 366 1 303 1 183 5 52 1 184 1 370 3 106 10 202 1 108 1 
279 1 110 1 244 3 325 1 173 2 63 1 300 1 65 1 233 1 366 1 183 2 52 1 317 1 272 1 106 5 264 1 202 1 159 1 
279 1 110 1 244 3 325 1 173 4 63 2 300 1 65 1 233 1 366 2 183 2 52 1 317 1 272 1 106 5 264 2 212 1 202 1 159 2 
279 1 110 1 244 3 325 1 173 4 63 2 300 1 65 1 233 1 366 2 183 2 52 1 317 1 158 1 272 1 106 5 264 2 202 1 159 2 
124 2 295 2 299 2 244 2 303 2 183 2 184 2 370 4 106 4 108 1 
279 1 110 1 244 3 325 1 173 4 63 2 300 1 65 1 233 1 366 2 183 2 52 1 317 1 158 1 272 1 106 5 264 2 202 1 159 2 
295 2 124 1 61 1 244 4 299 1 173 4 63 2 102 1 86 1 65 1 366 2 303 1 183 4 105 1 184 1 370 3 106 8 264 2 108 1 159 2 
124 1 295 2 61 1 299 1 244 4 102 1 86 1 65 1 235 1 303 1 183 4 184 1 370 3 106 8 108 1 
295 1 279 1 244 2 299 1 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 2 370 2 106 4 264 1 212 1 159 1 
295 1 279 1 325 1 244 3 299 1 282 1 86 1 65 1 233 1 285 1 183 4 317 1 370 2 106 7 202 2 
124 2 279 2 61 1 173 4 63 2 4 1 282 1 86 3 65 3 233 2 285 2 264 2 159 2 100 1 295 5 299 4 244 11 325 2 326 1 102 1 366 2 303 2 183 12 184 1 105 2 370 9 106 23 108 1 202 2 
183 1 106 1 202 1 
244 1 325 1 106 1 
279 1 295 2 244 3 299 2 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 3 370 4 106 6 264 1 212 1 185 1 159 1 
279 1 110 1 244 3 325 1 173 2 63 1 300 1 65 1 233 1 366 1 183 2 52 1 317 1 272 1 106 5 264 1 202 1 159 1 
124 1 295 1 61 1 244 3 299 1 86 1 65 1 303 1 183 3 370 2 106 6 
295 1 124 1 244 1 299 1 173 2 4 1 63 1 366 1 303 1 183 2 184 1 105 1 370 2 106 3 264 1 108 1 159 1 
124 1 295 2 61 1 299 2 244 5 84 1 86 2 65 2 303 1 183 5 370 4 106 10 
110 1 244 2 299 1 173 2 63 1 65 1 366 1 233 1 370 1 106 2 264 1 159 1 
295 1 279 1 110 1 244 2 173 2 63 1 86 1 65 1 366 1 233 1 285 1 183 2 370 1 106 4 264 1 159 1 
124 1 295 1 110 1 299 1 244 1 173 2 63 1 366 1 303 1 183 1 370 2 106 2 264 1 159 1 
232 1 124 3 279 3 61 2 110 1 173 10 4 1 63 5 282 1 86 4 65 5 233 3 285 2 317 1 158 1 264 5 212 1 159 5 295 6 325 3 244 17 299 6 181 1 102 1 366 5 303 3 183 17 184 1 105 2 370 12 106 34 108 1 202 4 228 1 
294 1 350 1 168 1 89 1 71 1 20 1 315 1 
343 1 294 1 350 1 168 1 121 1 89 1 315 1 20 1 71 1 154 1 319 1 188 1 
192 1 235 1 217 1 267 1 137 1 7 1 139 1 226 1 260 1 177 1 68 1 
294 2 267 1 132 1 217 1 350 1 69 1 313 1 89 1 71 2 137 1 7 1 139 1 41 1 77 1 226 1 177 1 68 1 186 1 
350 1 2 1 111 1 146 1 313 2 88 1 89 2 7 1 41 1 68 1 294 2 217 1 132 1 267 3 268 1 69 1 71 2 137 2 139 1 77 2 226 1 143 1 186 1 
350 1 2 1 111 1 146 1 313 2 88 1 89 2 176 1 7 2 68 2 294 2 217 1 132 1 267 3 268 1 69 1 50 1 71 2 137 2 139 1 77 2 226 2 143 1 186 1 
267 4 217 1 268 1 280 2 16 1 2 1 33 1 195 2 146 1 313 1 176 1 75 1 199 1 137 1 7 3 139 1 140 1 224 1 226 3 227 1 177 1 68 3 67 1 
267 4 217 1 268 1 280 2 2 1 33 1 195 2 146 1 313 1 261 1 176 1 199 1 137 1 7 3 139 1 140 1 224 1 226 3 227 1 177 1 68 3 67 1 
217 1 7 1 346 1 139 1 226 1 68 1 
267 3 217 2 206 1 208 1 207 1 353 1 313 1 104 1 367 1 137 2 7 7 346 1 139 3 44 1 333 1 226 7 290 1 291 1 177 2 307 1 68 6 
58 1 61 1 63 2 65 1 7 1 236 1 159 2 68 1 294 2 295 2 299 1 244 4 69 1 71 2 23 1 303 1 77 1 170 2 124 1 350 3 173 4 86 1 313 1 89 1 356 1 211 1 129 2 41 1 264 2 214 1 133 1 132 1 217 1 267 1 48 1 102 1 366 2 137 1 183 4 139 1 184 1 223 1 226 1 333 1 370 3 106 8 108 1 186 1 
251 2 280 3 33 1 261 1 7 1 42 1 318 1 95 1 177 1 68 1 67 1 161 1 47 1 267 2 162 2 195 3 329 2 199 1 221 1 369 1 140 2 226 1 224 1 227 1 274 2 373 1 277 1 230 1 
267 2 217 1 207 1 1 1 33 1 313 1 137 1 7 2 346 1 139 2 333 1 226 2 68 2 
192 1 217 1 267 1 137 1 7 4 139 1 17 1 333 1 226 4 260 1 177 1 68 4 176 1 
267 1 217 1 268 1 255 1 353 1 313 1 153 1 137 1 7 2 138 1 139 2 226 2 307 1 68 2 
296 1 321 1 217 1 7 1 368 1 139 1 201 1 226 1 177 1 68 1 
267 1 217 1 206 1 119 1 137 1 7 2 139 1 333 1 226 2 290 1 68 2 
267 3 217 2 268 1 206 1 17 1 260 1 192 1 137 2 7 5 139 2 44 1 226 5 333 1 291 1 177 1 68 4 
267 3 217 2 268 1 206 1 17 1 260 1 5 1 192 1 137 2 7 5 139 2 226 5 333 1 291 1 177 1 68 4 
294 2 267 1 132 1 217 1 350 1 69 1 313 1 50 1 89 1 71 2 137 1 7 1 139 1 77 1 226 1 177 1 68 1 186 1 
267 1 217 1 268 1 207 1 353 1 313 1 104 1 137 1 7 1 139 2 226 1 307 1 68 1 
294 1 310 1 31 1 49 1 89 1 71 1 6 1 263 1 320 1 
310 1 127 1 160 1 
350 1 310 1 49 1 204 1 320 1 
350 1 310 1 280 2 3 1 49 2 195 2 111 1 127 1 88 1 354 1 328 1 199 1 224 1 227 1 143 1 95 1 204 2 160 1 320 2 
235 1 339 1 269 1 175 1 
60 1 339 1 269 1 157 1 101 1 34 1 175 1 
60 1 340 1 209 1 
60 3 339 1 164 2 269 1 157 1 101 3 275 1 196 1 34 1 175 1 130 1 21 1 
80 1 60 2 339 1 269 1 157 1 101 2 34 1 175 1 171 1 
28 1 296 1 321 1 60 1 339 1 351 1 157 1 101 1 142 1 34 1 21 1 
60 1 339 1 269 1 157 1 101 1 34 1 21 1 
60 1 269 2 157 1 101 1 34 1 175 1 21 1 
60 2 339 1 269 1 157 2 118 1 101 2 122 1 34 2 21 1 234 1 
28 1 80 2 40 1 60 3 339 2 269 1 336 1 157 1 101 3 34 1 175 1 179 1 21 1 
80 1 321 2 60 2 296 1 163 1 269 1 101 2 34 1 175 1 21 1 339 1 157 1 43 1 201 1 142 1 
80 2 28 1 60 4 269 1 336 1 101 4 34 2 175 1 21 1 339 2 157 2 171 1 98 1 
60 1 339 1 269 1 157 1 101 1 34 1 175 1 21 1 
80 2 28 1 60 4 164 1 269 2 336 1 101 4 271 1 196 1 34 1 175 2 339 3 157 1 275 1 
80 1 60 2 339 1 269 1 200 1 157 1 101 2 34 1 175 1 301 1 116 1 21 1 
60 3 339 1 164 2 269 1 254 1 157 1 101 3 275 1 196 2 34 1 175 1 21 1 
30 1 339 2 246 1 79 2 
60 1 157 1 101 1 18 1 34 1 21 1 
80 1 40 1 60 2 339 1 269 1 157 1 101 2 34 1 175 1 21 1 
54 1 
60 1 339 1 269 1 157 1 101 1 34 1 175 1 21 1 
80 1 40 1 60 3 339 1 164 1 269 1 157 1 101 3 34 1 175 1 21 1 
28 1 339 1 336 1 271 1 
339 1 269 1 

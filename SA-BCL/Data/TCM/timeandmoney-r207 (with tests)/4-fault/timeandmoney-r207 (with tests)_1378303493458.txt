#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 166 315 227 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
230 1 186 2 138 1 28 1 281 1 304 2 70 1 282 1 42 9 192 6 167 1 310 1 46 2 47 1 78 1 312 3 335 1 241 2 370 2 84 9 10 4 55 1 244 1 173 5 318 2 134 1 229 2 65 1 
230 1 186 2 138 1 28 1 281 1 304 2 70 1 282 1 42 9 192 6 167 1 310 1 46 2 47 1 78 1 312 3 335 1 241 2 370 2 84 9 10 4 55 1 244 1 173 5 318 2 134 1 229 2 65 1 
230 1 186 2 138 1 28 1 281 1 304 2 70 1 282 1 42 10 192 7 167 1 310 1 46 2 47 1 78 1 312 4 335 1 241 2 370 2 84 10 10 5 55 1 244 1 173 6 318 2 134 1 229 2 65 1 
230 1 186 2 138 1 28 1 281 1 304 2 70 1 282 1 42 7 192 4 167 1 310 1 46 1 47 1 78 1 312 2 335 1 241 2 370 2 84 7 10 3 55 1 173 4 318 2 134 1 229 2 65 1 
84 4 10 2 186 1 244 1 70 1 173 3 282 1 42 4 192 3 318 1 46 2 310 1 47 1 312 1 335 1 229 1 241 1 370 1 
84 2 54 1 221 1 55 1 28 1 70 1 304 1 189 1 173 1 282 1 42 2 318 1 335 1 229 1 241 1 370 1 
84 3 10 1 70 1 304 1 173 2 282 1 42 3 192 1 78 1 312 1 335 1 229 2 241 2 
186 1 281 1 304 1 70 1 282 1 192 7 42 9 46 2 310 1 47 1 78 1 312 3 335 1 241 2 9 1 370 1 10 4 102 1 84 9 244 1 173 5 318 1 134 1 229 2 
186 1 281 1 304 1 70 1 282 1 192 7 42 9 46 2 310 1 47 1 78 1 312 3 335 1 241 2 9 1 370 1 10 4 102 1 84 9 244 1 173 5 318 1 134 1 229 2 
325 1 118 1 73 1 
363 1 118 1 197 2 
121 2 327 2 337 2 30 1 182 2 97 2 96 2 354 1 
24 1 327 2 92 1 139 1 116 1 162 1 140 1 360 1 97 2 96 2 121 3 364 1 30 1 51 1 286 2 100 1 145 1 168 1 8 1 289 1 337 2 338 1 202 1 224 1 296 1 376 1 345 2 59 1 15 2 180 1 273 1 182 3 64 1 110 2 113 1 276 2 354 1 
121 1 204 1 133 1 327 1 337 1 30 1 290 1 182 1 97 1 96 1 
212 1 327 1 278 1 87 1 290 1 118 1 121 1 178 1 349 1 285 1 16 1 325 1 182 1 210 1 
212 1 337 1 327 1 87 2 290 1 118 1 96 1 97 1 121 1 178 2 285 1 16 1 325 1 182 1 210 1 
284 1 86 1 87 1 178 1 67 1 
86 1 87 2 178 2 67 1 6 1 325 1 118 1 190 1 
87 1 178 1 67 1 
86 1 337 1 327 1 87 1 290 1 96 1 97 1 204 1 121 1 133 1 178 1 48 1 30 1 182 1 
118 1 
86 1 87 2 178 2 67 1 49 1 325 1 118 1 190 1 
250 1 85 1 86 2 87 5 67 2 118 1 190 1 266 1 128 1 268 1 375 1 178 5 366 1 324 1 325 1 299 2 184 2 198 1 336 2 
337 1 327 1 92 1 243 1 224 1 162 1 140 1 97 1 121 2 59 1 15 1 180 1 273 1 145 1 182 2 314 1 110 1 113 1 276 1 317 1 
73 1 354 1 
53 1 327 2 337 1 96 1 97 1 121 2 269 1 182 2 354 2 
159 1 247 1 314 1 
92 1 162 1 224 1 33 1 140 1 121 1 15 1 59 1 180 1 273 1 182 1 145 1 110 1 113 1 276 1 354 1 
121 3 327 3 337 3 182 3 96 1 97 3 354 1 317 1 
121 1 133 1 327 1 337 1 290 1 182 1 97 1 
53 1 121 1 269 1 327 1 337 1 290 1 182 1 97 1 96 1 
212 1 24 1 327 3 68 1 92 1 139 1 162 1 140 1 360 1 96 2 97 3 193 1 121 4 30 1 285 1 286 2 100 1 145 1 317 1 53 1 289 1 337 3 338 1 87 1 290 1 243 1 202 1 224 1 296 1 376 1 345 1 59 1 15 1 178 1 180 1 16 1 273 1 182 4 210 1 64 1 110 1 113 1 276 1 354 1 
121 2 327 2 337 1 349 1 188 1 182 2 97 1 354 1 317 1 
53 1 212 1 337 3 327 3 87 1 68 1 290 1 243 1 118 1 96 1 97 3 121 3 178 1 285 1 16 1 182 3 210 1 317 2 158 1 
159 1 53 1 337 2 327 2 96 1 97 2 121 2 182 2 314 1 317 1 
92 1 162 1 224 1 140 1 121 1 15 1 59 1 180 1 273 1 182 1 145 1 110 1 276 1 113 1 354 1 
162 1 224 1 306 1 140 1 121 1 15 1 59 1 180 1 273 1 182 1 35 1 110 1 276 1 113 1 354 1 
159 2 24 1 139 1 214 1 254 1 75 1 51 2 286 2 100 1 314 2 170 1 259 1 289 1 288 1 200 1 338 1 291 1 105 1 296 2 376 1 106 1 345 4 247 2 380 1 
121 1 45 1 327 1 337 1 290 1 16 1 182 1 97 1 
53 1 337 4 327 5 188 1 243 1 236 1 97 4 96 1 121 5 43 1 349 1 182 5 317 2 354 1 
45 1 121 2 133 1 327 2 337 2 290 1 182 2 97 2 
56 1 361 1 
56 1 361 1 
119 1 333 1 
119 1 333 1 
119 1 333 1 
56 1 253 1 361 1 
56 1 253 1 361 1 
56 1 361 1 245 1 
119 1 90 1 91 1 333 1 56 2 361 2 
56 1 253 1 361 1 
56 1 172 1 361 1 
56 1 172 1 361 1 
56 1 172 1 361 1 
87 2 261 2 69 1 234 1 56 2 11 2 263 3 118 1 374 1 149 1 319 2 361 2 151 1 205 1 91 1 332 2 178 2 7 1 62 2 
327 2 337 2 232 1 87 1 261 1 56 1 11 1 293 1 263 1 225 1 150 1 151 1 319 1 361 1 97 2 245 1 121 2 270 1 178 1 332 1 143 1 182 2 248 1 354 1 
186 1 318 1 370 1 
189 1 318 1 370 1 
186 2 144 1 12 1 58 1 189 1 318 3 
186 1 339 1 144 1 12 1 189 1 318 2 
186 1 12 1 144 2 189 1 318 2 
39 1 66 1 232 1 67 1 214 1 118 2 190 1 362 1 363 1 366 3 143 1 197 3 124 2 198 2 336 1 170 1 86 4 87 5 105 1 174 2 266 1 106 1 344 1 175 2 270 1 178 5 348 1 325 1 19 1 352 1 184 1 299 1 
39 2 67 6 214 3 118 5 190 1 164 5 362 2 284 5 44 1 363 3 330 1 141 1 74 1 143 4 366 8 197 9 124 6 198 6 336 2 170 3 85 1 86 7 87 9 105 3 294 1 174 6 266 1 106 3 178 9 348 3 325 1 352 1 299 2 184 2 112 1 
39 1 66 1 214 1 118 3 362 1 363 2 366 3 143 1 197 4 124 2 336 1 198 2 170 1 85 1 86 2 87 3 105 1 174 2 106 1 344 1 175 1 178 3 348 1 325 1 184 1 299 1 
39 1 66 1 214 2 118 4 362 1 363 3 141 1 74 1 366 5 143 2 197 7 124 4 336 1 198 4 170 2 85 1 86 3 87 4 105 2 174 4 106 2 344 1 175 2 178 4 348 2 325 1 184 1 299 1 112 1 
63 1 73 1 
355 1 113 1 
117 1 
224 1 113 1 
131 1 59 1 17 1 224 1 63 2 113 3 
59 1 224 1 113 1 
343 1 113 1 
22 1 219 1 288 2 161 1 115 2 262 1 296 3 120 1 106 1 345 7 258 1 323 1 51 4 380 3 217 1 80 1 170 1 
22 1 219 1 288 2 161 1 115 2 262 1 296 3 120 1 106 1 345 7 258 1 323 1 51 4 380 3 217 1 80 1 170 1 
22 1 219 1 288 2 161 1 115 2 262 1 296 3 120 1 106 1 345 7 258 1 323 1 51 4 380 3 217 1 80 1 208 1 170 1 
21 1 22 2 24 1 161 1 303 1 115 3 139 1 214 3 29 4 120 1 258 2 51 16 239 1 217 2 286 2 80 2 287 1 170 4 219 1 289 1 288 5 262 1 105 3 296 15 376 1 106 4 60 1 152 1 345 31 379 3 348 3 323 5 380 10 351 1 
22 1 288 3 24 2 289 2 161 1 303 1 115 2 93 1 262 1 139 2 3 1 296 4 120 1 376 2 106 1 345 9 258 1 323 1 51 5 217 1 380 4 80 1 286 4 170 1 
186 1 70 1 304 1 162 1 189 1 191 1 358 1 140 1 282 1 192 1 42 2 50 1 335 1 146 1 241 1 370 1 84 2 57 1 58 1 173 1 318 2 378 1 15 1 34 1 136 1 228 1 229 1 110 1 276 1 157 1 
186 1 304 1 162 1 189 1 191 1 358 1 140 1 282 1 42 3 192 2 194 1 31 1 50 1 335 1 146 1 241 1 370 1 84 3 58 1 173 1 318 2 378 1 15 1 34 1 136 1 228 1 229 1 110 1 276 1 211 1 
186 1 304 1 162 1 189 1 358 1 140 1 282 1 42 2 192 2 194 1 31 1 50 1 335 1 146 1 370 1 84 2 58 1 173 1 318 2 378 1 15 1 136 1 228 1 110 1 276 1 
304 2 162 1 140 1 358 2 42 1 122 1 146 2 241 1 32 1 148 1 84 1 260 1 220 1 224 1 15 1 273 1 228 2 229 1 156 1 110 1 276 1 113 1 211 1 
84 1 186 1 57 1 304 1 70 1 58 1 189 1 162 1 191 1 140 1 358 1 42 1 318 2 378 1 34 1 15 1 194 1 50 1 136 1 228 1 229 1 146 1 241 1 110 1 276 1 370 1 
183 1 
185 2 277 2 0 1 327 1 278 1 235 1 95 2 190 3 140 1 5 1 285 1 196 2 197 2 198 2 336 1 148 1 290 1 61 2 15 2 349 1 109 1 16 1 207 1 210 1 110 2 299 1 113 1 212 1 302 2 23 1 67 6 118 2 162 1 308 1 362 1 363 2 121 1 366 2 218 1 83 1 220 1 87 5 88 2 372 1 224 1 266 1 176 1 178 5 226 1 273 2 274 4 325 1 182 1 184 1 276 2 
212 1 0 1 327 1 87 3 278 1 67 2 290 1 235 1 190 1 95 1 308 1 121 1 178 3 285 1 349 1 49 1 274 2 16 1 109 1 182 1 218 1 210 1 
212 1 277 1 0 1 327 1 87 3 278 1 67 1 290 1 118 1 235 1 190 1 308 1 121 1 178 3 285 1 349 1 49 1 274 3 16 1 109 1 325 1 182 1 218 1 210 1 
212 1 0 1 277 1 327 1 278 1 67 2 235 1 118 1 190 1 95 1 308 1 121 1 285 1 49 1 218 1 87 3 290 1 61 1 178 3 349 1 109 1 16 1 274 3 182 1 325 1 210 1 
185 2 0 1 277 4 327 1 278 1 235 1 95 4 190 3 285 1 49 1 196 2 336 1 198 1 103 1 290 1 340 1 61 4 349 1 16 1 109 1 207 1 210 1 299 1 212 1 302 2 67 7 252 1 118 5 308 1 121 1 363 2 366 1 218 1 169 1 83 1 87 5 88 2 266 1 129 1 178 5 274 6 182 1 325 5 184 1 
185 2 0 1 277 2 327 1 278 1 235 1 190 2 95 2 285 1 196 2 197 2 336 1 198 1 290 1 61 2 349 1 207 1 16 1 109 1 210 1 299 1 212 1 302 2 67 4 118 2 308 1 121 1 363 2 366 1 218 1 83 1 87 4 88 2 266 1 176 1 178 4 274 4 182 1 325 1 184 1 
185 2 212 1 277 2 302 2 0 1 327 1 278 1 67 4 252 1 118 1 235 1 95 2 190 2 308 1 363 2 121 1 366 1 285 1 196 2 218 1 169 1 198 1 336 1 83 1 87 4 88 2 290 1 340 1 266 1 61 2 178 4 349 1 207 1 109 1 16 1 274 4 325 1 182 1 210 1 184 1 299 1 
185 2 212 1 277 2 302 2 0 1 327 1 278 1 67 4 252 1 118 1 235 1 95 2 190 2 308 1 363 2 121 1 366 1 285 1 196 2 218 1 169 1 198 1 336 1 83 1 87 4 88 2 290 1 340 1 266 1 61 2 178 4 349 1 207 1 109 1 16 1 274 4 325 1 182 1 210 1 184 1 299 1 
185 2 212 1 277 2 0 1 327 1 278 1 67 4 252 1 118 1 235 1 95 2 190 2 308 1 121 1 366 1 285 1 218 1 197 2 198 1 336 1 83 1 87 4 88 2 290 1 13 2 264 2 295 1 266 1 61 2 178 4 135 1 349 1 246 1 109 1 16 1 274 4 325 1 182 1 210 1 184 1 299 1 
185 2 212 1 302 2 0 1 277 3 327 1 278 1 252 1 67 5 118 1 235 1 190 2 95 3 308 1 363 2 121 1 366 1 285 1 196 2 218 1 169 1 198 1 336 1 83 1 103 1 87 4 88 2 290 1 340 1 266 1 61 3 178 4 349 1 207 1 109 1 16 1 274 5 325 1 182 1 210 1 184 1 299 1 
185 2 212 1 302 2 0 1 277 3 327 1 278 1 252 1 67 5 118 1 235 1 190 2 95 3 308 1 363 2 121 1 366 1 285 1 196 2 218 1 169 1 198 1 336 1 83 1 103 1 87 4 88 2 290 1 340 1 266 1 61 3 178 4 349 1 207 1 109 1 16 1 274 5 325 1 182 1 210 1 184 1 299 1 
185 2 212 1 277 2 0 1 327 1 278 1 67 4 118 1 235 1 95 2 190 2 308 1 121 1 366 1 285 1 218 1 197 2 198 1 336 1 83 1 87 4 88 2 290 1 13 2 264 2 295 1 266 1 176 1 61 2 178 4 349 1 109 1 16 1 274 4 325 1 182 1 210 1 184 1 299 1 
120 1 376 1 289 1 24 1 161 1 338 1 139 1 286 2 291 1 100 1 73 1 
159 4 24 2 139 2 214 2 29 3 51 8 286 4 100 1 368 1 314 11 287 1 8 1 199 1 170 2 288 1 289 2 338 2 105 1 265 1 296 6 376 2 106 1 60 1 345 14 346 1 179 1 323 1 379 3 348 2 247 11 380 2 64 1 354 1 
159 1 24 1 327 1 92 1 139 1 162 1 140 1 97 1 121 2 76 1 51 1 286 2 145 1 100 1 368 1 8 1 317 1 289 1 337 1 338 1 243 1 224 1 33 1 296 1 376 1 59 1 15 1 345 2 155 1 180 1 273 1 182 2 110 1 64 1 113 1 276 1 354 1 301 1 
327 1 92 2 1 2 139 3 140 2 97 1 142 1 194 1 51 10 286 6 100 3 145 2 240 1 8 1 101 2 288 4 289 3 337 1 338 3 243 1 105 2 296 10 106 3 15 3 345 20 59 2 107 1 348 2 108 2 247 7 64 1 110 3 113 2 354 2 159 7 24 3 161 1 115 1 214 2 162 2 360 2 120 1 121 3 365 2 258 1 217 1 368 1 314 7 317 1 170 3 262 1 224 2 376 3 180 2 323 4 273 1 380 8 182 3 276 3 
24 2 327 1 251 1 356 1 139 2 116 2 162 2 255 1 140 2 97 1 121 1 194 1 51 1 286 4 100 2 123 1 8 1 317 1 148 1 220 1 289 2 337 1 338 2 291 1 224 2 296 1 376 2 15 8 345 2 322 1 181 1 273 2 182 1 36 1 110 7 64 1 113 3 276 8 157 1 
159 1 24 1 327 1 139 1 214 1 215 1 96 1 97 1 121 1 51 1 286 2 100 1 368 1 314 1 170 1 53 1 288 1 289 1 337 1 338 1 105 1 296 2 376 1 106 1 345 3 348 1 247 1 380 1 182 1 
159 1 24 1 289 1 200 1 338 1 291 1 139 1 214 1 376 1 345 2 323 1 247 1 51 2 380 1 286 2 100 1 314 1 170 1 
159 1 288 1 24 1 289 1 338 1 291 1 139 1 105 1 296 2 376 1 106 1 345 2 75 1 247 1 380 1 286 2 100 1 314 1 
159 2 24 1 214 1 139 1 51 2 286 2 100 1 314 2 170 1 289 1 288 1 338 1 291 1 105 1 296 2 376 1 106 1 345 4 348 1 323 1 247 2 380 2 
159 1 24 1 289 1 200 1 338 1 139 1 214 1 376 1 345 2 322 1 323 1 247 1 51 2 380 1 286 2 100 1 314 1 170 1 
159 1 288 1 24 1 289 1 338 1 139 1 105 1 296 2 376 1 106 1 345 2 75 1 322 1 247 1 380 1 286 2 100 1 314 1 
159 2 24 1 214 1 139 1 51 2 286 2 100 1 314 2 170 1 289 1 288 1 338 1 105 1 296 2 376 1 106 1 345 4 322 1 348 1 323 1 247 2 380 2 
159 2 24 1 214 1 139 1 51 2 286 2 100 1 314 2 170 1 289 1 288 1 338 1 105 1 296 2 376 1 106 1 345 4 348 1 323 1 247 2 380 2 
24 1 92 1 139 1 162 1 140 1 360 1 121 1 51 1 286 2 145 1 100 1 8 1 289 1 338 1 224 1 296 1 376 1 345 2 59 1 15 1 180 1 273 1 182 1 110 1 64 1 276 1 113 1 354 1 
24 1 328 1 139 1 162 1 306 1 140 1 121 1 51 1 286 2 100 1 8 1 289 1 338 1 224 1 296 1 376 1 345 2 59 1 15 1 180 1 273 1 182 1 35 1 110 1 64 1 276 1 113 1 354 1 
159 2 24 1 214 1 139 1 51 2 286 2 100 1 368 1 314 2 170 1 289 1 288 1 338 1 105 1 296 2 376 1 106 1 345 4 348 1 323 1 247 2 380 2 
159 2 24 1 92 1 214 1 139 1 162 1 140 1 360 1 121 1 51 2 286 2 145 1 100 1 314 2 170 1 288 1 289 1 338 1 105 1 224 1 296 2 376 1 106 1 345 4 59 1 15 1 323 1 180 1 348 1 108 1 247 2 380 2 182 1 110 1 276 1 113 1 157 1 
159 1 24 1 327 1 139 1 214 1 96 1 97 1 121 1 216 1 51 2 286 2 100 1 368 1 314 1 170 1 53 1 289 1 337 1 338 1 105 1 296 1 376 1 106 1 345 3 323 1 348 1 247 1 380 1 182 1 
139 3 3 1 237 1 51 20 286 6 287 1 147 1 289 3 288 4 292 1 105 4 342 1 296 21 106 5 345 41 60 3 153 1 348 4 111 1 20 4 24 3 303 1 161 1 115 1 214 4 29 4 163 1 166 1 309 1 120 1 77 2 258 1 217 1 369 1 315 1 170 5 262 1 376 3 323 4 379 3 227 1 380 8 38 1 
24 4 161 1 303 2 115 1 139 4 214 4 29 4 163 1 166 1 3 1 309 1 120 1 237 1 258 1 77 2 51 20 217 1 286 8 369 1 147 1 287 1 315 1 170 5 288 4 289 4 262 1 292 1 105 3 342 1 296 18 376 4 106 4 60 3 345 38 153 1 379 3 348 4 323 3 227 1 380 7 111 1 38 1 20 4 
24 3 161 1 303 2 115 1 139 3 214 7 29 4 163 1 166 1 3 1 309 1 120 1 237 1 258 1 77 1 51 27 217 1 286 6 369 1 147 1 287 2 315 1 170 8 288 8 289 3 262 1 105 7 296 26 376 3 106 8 60 2 345 53 153 1 346 2 379 4 348 7 323 7 227 1 380 15 111 1 38 1 20 4 
24 2 231 1 139 2 214 3 29 2 3 1 309 1 77 1 51 9 286 4 369 1 147 1 287 1 170 3 288 3 289 2 292 1 105 3 296 10 376 2 106 3 60 1 345 19 379 1 348 3 323 3 380 6 111 1 38 2 20 2 
24 3 303 2 139 3 214 3 29 2 163 1 166 1 3 1 309 1 237 1 77 2 51 14 286 6 369 1 147 2 315 1 170 3 288 2 289 3 105 2 296 12 376 3 106 2 345 26 60 2 153 1 323 2 379 2 348 3 227 1 380 4 111 1 38 1 20 4 
132 1 91 1 332 1 261 1 69 1 7 1 56 1 11 1 361 1 319 1 
248 1 245 1 
377 1 272 1 332 1 261 1 56 1 11 1 165 1 361 1 319 1 
87 1 261 1 69 1 234 1 56 1 11 1 263 2 118 1 374 1 149 1 151 1 319 1 361 1 91 1 178 1 332 1 7 1 62 1 
87 1 261 1 69 1 234 1 56 1 11 1 263 2 118 1 374 1 149 1 151 1 319 1 361 1 91 1 178 1 332 1 7 1 62 1 
87 1 261 1 69 1 234 1 56 1 11 1 263 2 118 1 374 1 149 1 151 1 319 1 361 1 91 1 178 1 332 1 7 1 62 1 
90 1 253 1 127 1 
90 1 253 1 127 1 
171 1 172 1 
90 1 171 1 172 1 
293 1 225 1 
327 2 232 1 361 1 97 2 121 2 332 1 143 1 52 1 86 1 337 2 87 1 261 1 56 1 11 1 293 1 263 1 149 1 150 1 225 1 319 1 245 1 270 1 178 1 182 2 62 1 248 1 354 1 
253 1 127 1 
90 1 171 1 172 1 
24 1 40 1 327 2 356 1 139 1 116 2 162 1 140 1 329 1 121 2 51 1 286 2 100 1 368 1 123 1 8 1 371 1 289 1 338 1 224 1 296 1 376 1 15 2 345 2 182 2 18 1 64 1 110 2 113 1 276 2 249 1 
222 1 186 1 233 1 58 1 189 1 162 1 305 1 191 1 140 1 358 1 318 2 378 1 15 2 194 1 50 1 110 2 276 2 370 1 157 1 
222 1 186 1 58 1 189 1 162 1 191 1 358 1 140 1 318 2 378 1 15 1 194 1 79 1 50 1 110 1 276 1 370 1 
260 1 220 1 233 1 104 1 162 1 224 1 140 1 358 1 15 1 273 1 110 1 113 1 276 1 148 1 
222 1 186 1 233 1 58 1 189 1 305 1 162 1 191 1 140 1 358 1 318 2 378 1 15 1 194 1 50 1 110 1 276 1 370 1 
359 1 
375 1 324 1 73 1 
302 1 67 1 118 2 190 1 363 1 366 1 196 1 197 1 198 1 336 1 87 1 266 1 178 1 207 1 325 1 184 1 299 1 
279 2 190 3 140 4 238 1 197 12 336 4 198 8 101 2 105 2 14 2 343 2 106 2 59 3 15 3 348 2 63 2 210 2 110 3 299 4 113 10 157 1 23 1 355 3 67 5 214 2 162 3 118 8 72 1 362 2 256 2 363 6 366 9 313 2 124 6 170 2 125 2 126 2 87 5 224 3 266 4 174 6 267 2 375 1 130 1 131 1 320 2 271 1 178 5 273 1 324 1 325 2 184 4 276 3 275 1 
67 1 27 1 214 1 118 4 190 1 29 1 163 1 166 1 256 1 237 1 363 3 366 5 197 6 124 4 315 1 336 2 198 3 170 1 87 1 105 1 174 4 266 2 106 1 60 1 178 1 379 1 348 1 227 1 325 1 184 2 299 2 
327 1 96 1 97 1 256 2 121 1 48 1 258 1 366 2 30 1 217 1 169 1 336 1 198 2 170 2 337 1 87 1 290 1 262 1 266 1 267 1 106 1 204 1 133 1 178 1 182 1 209 1 184 1 299 1 
118 1 266 1 375 1 366 1 324 1 325 1 299 1 184 1 336 1 198 1 
214 2 105 2 118 5 174 5 267 1 256 2 363 5 106 2 366 5 348 2 197 10 124 5 198 5 101 1 170 2 
87 1 178 1 67 1 325 1 118 1 190 1 
23 2 67 4 41 1 162 2 72 2 190 2 140 3 362 2 238 1 366 2 334 1 336 2 198 2 148 1 220 1 85 1 87 3 372 1 224 2 89 1 266 1 59 1 15 4 178 3 206 1 226 1 273 2 137 1 298 1 110 4 184 2 299 2 113 2 276 4 
24 1 327 2 92 1 139 1 162 1 140 1 360 1 97 2 96 2 121 3 30 1 286 2 145 1 100 1 289 1 337 2 338 1 202 1 224 1 296 1 376 1 345 1 15 1 59 1 180 1 273 1 182 3 64 1 110 1 276 1 113 1 354 1 
23 1 115 1 118 4 174 2 266 1 362 1 363 2 366 1 325 2 197 4 124 2 299 1 184 1 198 2 336 1 
261 1 242 1 11 1 
261 1 242 1 11 1 
160 1 261 1 7 1 11 1 293 1 
261 1 242 1 11 1 
261 1 11 1 4 1 
261 1 11 1 4 1 
261 1 11 1 4 1 
261 1 11 1 
56 1 361 1 
288 2 24 1 289 1 161 1 115 1 262 1 139 1 29 1 3 1 296 4 120 1 376 1 106 1 60 1 345 8 258 1 379 1 227 1 51 4 380 2 217 1 286 2 170 1 
24 2 161 1 115 1 139 2 214 1 29 2 3 1 120 1 258 1 51 6 217 1 286 4 287 1 170 2 288 2 289 2 223 1 262 1 296 5 376 2 106 1 345 11 60 1 379 1 348 1 323 1 227 1 380 3 
24 3 161 1 303 1 115 1 139 3 214 2 29 1 163 1 166 1 3 1 120 1 237 1 258 1 51 9 217 1 286 6 315 1 170 3 289 3 288 3 223 1 262 1 105 2 296 10 376 3 106 3 345 19 60 1 323 1 379 1 348 2 227 1 380 4 
24 4 303 2 139 4 214 2 29 1 163 1 166 1 3 1 237 1 51 7 286 8 315 1 170 2 289 4 288 2 223 1 105 1 296 5 376 4 106 1 345 12 60 1 323 1 379 1 348 2 227 1 380 3 
288 2 24 1 289 1 161 1 115 1 262 1 139 1 29 1 3 1 296 4 120 1 376 1 106 1 60 1 345 8 258 1 379 1 227 1 51 4 380 2 217 1 286 2 170 1 
24 2 303 1 139 2 214 2 29 1 163 1 166 1 3 1 237 1 51 6 286 4 315 1 170 2 289 2 288 2 105 2 296 7 376 2 106 2 345 13 60 1 323 1 379 1 348 2 227 1 380 3 
24 4 161 1 303 2 115 1 139 4 214 2 29 1 163 1 166 1 3 1 120 1 237 1 258 1 51 10 217 1 286 8 315 1 170 3 289 4 288 3 223 1 262 1 105 1 296 8 376 4 106 2 345 18 60 1 323 2 379 1 348 2 227 1 380 5 
24 4 303 2 139 4 214 3 29 1 163 1 166 1 3 1 237 1 51 9 286 8 315 1 170 3 289 4 288 3 292 1 105 2 296 7 376 4 106 2 345 16 60 1 323 3 379 1 348 3 227 1 380 6 
288 3 161 1 262 1 296 4 120 2 106 1 345 7 258 3 323 3 51 3 217 3 380 6 170 1 
24 4 161 1 303 2 115 1 139 4 214 2 29 1 163 1 166 1 3 1 120 1 237 1 258 1 51 10 217 1 286 8 315 1 170 3 289 4 288 3 262 1 292 1 105 1 296 8 376 4 106 2 345 18 60 1 323 1 379 1 348 2 227 1 380 4 
288 2 24 2 289 2 303 1 161 1 115 1 262 1 139 2 296 4 376 2 120 1 106 1 345 8 258 1 323 1 51 4 380 3 286 4 217 1 170 1 
120 1 161 1 73 1 
288 1 24 1 289 1 223 1 139 1 214 1 105 1 296 2 376 1 106 1 345 4 348 1 323 1 51 2 380 2 286 2 170 1 
288 1 214 1 105 1 29 2 296 4 106 1 60 1 345 7 379 1 348 1 323 1 51 3 380 2 287 1 170 1 
24 2 161 1 303 2 115 1 214 2 139 2 29 2 94 1 120 1 258 2 51 11 217 2 286 4 287 1 170 3 288 5 289 2 262 1 105 2 296 12 376 2 106 3 345 23 346 1 179 1 323 4 348 2 379 2 380 9 
345 1 29 1 296 1 
345 1 379 1 51 1 
289 1 24 1 288 2 223 1 139 1 214 1 105 1 296 3 376 1 106 1 345 6 348 1 323 1 51 3 286 2 380 3 101 1 170 1 
24 2 303 1 139 2 214 2 29 1 163 1 166 1 3 1 237 1 51 6 286 4 315 1 170 2 289 2 288 2 105 2 296 7 376 2 106 2 345 13 60 1 323 1 379 1 348 2 227 1 380 3 
288 1 262 1 296 3 106 1 345 6 258 1 323 1 51 3 217 1 380 2 170 1 
288 1 24 1 289 1 303 1 161 1 139 1 94 1 296 2 120 1 376 1 345 3 258 1 323 1 51 1 380 2 217 1 286 2 
289 1 24 1 288 3 262 1 139 1 3 1 296 5 376 1 106 2 345 10 258 2 323 2 51 5 286 2 217 2 380 5 209 1 170 2 
24 1 289 1 139 1 214 1 3 1 376 1 345 2 323 1 51 2 286 2 380 1 170 1 
288 1 24 1 289 1 139 1 214 1 105 1 3 1 296 2 376 1 106 1 345 4 348 1 323 1 51 2 380 2 286 2 170 1 
24 3 289 3 288 1 303 1 292 1 139 3 94 1 3 1 296 2 376 3 345 3 258 1 323 1 51 1 286 6 217 1 380 2 
24 5 161 1 303 2 115 1 139 5 214 3 94 1 29 4 3 1 120 1 258 3 239 1 51 16 217 3 286 10 287 1 170 5 289 5 288 7 223 1 262 2 292 1 105 3 296 18 376 5 106 5 60 1 152 1 345 34 379 3 348 3 323 5 380 12 351 1 
121 1 327 1 349 1 188 1 373 1 182 1 354 1 
327 1 188 1 373 1 121 1 321 1 98 1 349 1 350 1 182 1 316 1 354 1 37 1 
220 1 15 1 273 1 73 1 110 1 276 1 
337 1 327 1 224 1 162 1 140 1 97 1 121 2 59 1 15 1 180 1 273 1 182 2 145 1 110 1 113 1 276 1 354 1 317 1 
327 2 279 1 162 1 72 1 140 1 97 2 121 2 285 1 145 1 317 1 337 1 290 1 224 2 343 1 15 1 59 2 180 1 16 1 182 2 110 1 276 1 113 3 354 1 
327 2 279 1 162 1 306 1 72 1 2 1 140 1 97 2 121 2 285 1 317 1 337 1 290 1 224 2 343 1 15 2 59 2 180 1 16 1 182 2 110 2 276 2 113 3 354 1 
355 1 279 1 67 1 162 1 118 1 72 1 2 1 140 1 257 1 87 2 201 1 224 1 343 1 15 3 59 1 178 2 273 1 325 1 63 1 210 1 110 3 113 4 276 3 
355 1 279 1 87 2 126 1 67 1 118 1 224 1 162 1 72 1 2 1 140 1 343 1 59 1 15 3 178 2 273 1 325 1 210 1 63 1 110 3 276 3 113 4 
15 1 181 1 162 1 140 1 110 1 276 1 
251 1 280 1 116 1 224 2 162 2 255 1 140 3 131 1 15 7 59 1 194 1 181 1 273 2 137 1 298 1 36 1 110 6 123 1 276 7 113 3 157 1 
159 1 24 2 40 1 327 1 161 1 115 1 92 1 1 1 139 2 162 1 140 1 360 1 97 1 120 1 121 2 258 1 51 3 217 1 286 4 100 2 145 1 368 1 314 1 170 1 317 1 288 2 289 2 337 1 338 2 262 1 224 1 296 3 376 2 106 1 345 6 59 1 15 1 180 1 108 1 247 1 380 2 182 2 110 1 113 1 276 1 354 2 157 1 
355 1 67 2 118 1 190 1 238 1 366 1 313 1 198 1 336 2 125 1 86 1 87 3 126 1 266 2 375 1 320 1 15 1 178 3 273 1 324 1 325 1 63 1 210 1 110 1 184 2 299 2 276 1 113 2 
131 1 130 1 59 1 15 2 181 1 162 1 224 1 63 1 140 2 110 2 113 2 276 2 157 1 
220 1 224 1 162 1 2 1 140 1 15 4 177 1 273 1 110 4 276 4 113 1 157 1 148 1 
41 1 224 1 162 1 72 1 89 1 140 2 15 2 59 1 107 1 137 1 298 1 110 2 276 2 113 1 
15 1 50 1 273 1 189 1 162 1 140 1 110 1 318 1 276 1 370 1 
224 1 162 1 140 1 15 2 194 1 110 2 123 1 276 2 113 1 157 1 371 1 
220 1 251 1 224 2 162 2 72 1 140 2 15 5 177 1 273 1 110 4 36 1 123 1 276 5 113 3 148 1 157 1 
220 1 251 1 224 2 162 2 72 1 140 2 307 1 15 5 177 1 273 1 110 4 123 1 276 5 113 3 148 1 157 1 
337 1 327 1 224 1 162 1 306 1 140 1 97 1 121 2 59 1 15 1 180 1 273 1 182 2 110 1 113 1 276 1 354 1 317 1 
280 1 224 1 162 1 72 1 140 2 131 1 15 1 59 1 137 1 298 1 110 1 276 1 113 1 
327 1 357 1 283 1 329 1 121 1 311 1 182 1 18 1 249 1 
311 1 195 1 367 1 
311 1 187 1 357 1 283 1 354 1 
212 1 86 1 87 2 68 1 290 1 26 1 357 2 187 2 118 1 283 2 178 2 285 1 311 1 195 1 16 1 325 1 367 1 210 1 354 1 
335 1 73 1 282 1 
84 1 335 1 229 1 173 1 241 1 282 1 42 1 
84 1 304 1 228 1 
84 3 213 1 28 2 70 1 173 1 42 3 282 1 331 1 297 1 229 1 335 1 241 1 
84 2 46 1 335 1 229 1 173 1 241 1 282 1 192 1 42 2 
10 1 84 1 310 1 186 1 70 1 229 1 173 1 241 1 42 1 318 1 370 1 
84 1 70 1 335 1 229 1 173 1 241 1 42 1 
84 1 70 1 335 2 229 1 241 1 282 1 42 1 
84 2 70 1 341 1 173 1 42 2 203 1 99 1 335 1 229 2 241 2 
84 3 10 1 281 1 70 1 173 2 282 1 42 3 192 2 134 1 312 1 335 1 229 1 241 1 
84 2 25 1 186 1 70 1 189 1 58 1 173 1 282 1 42 2 192 1 318 2 335 1 229 1 241 1 370 1 
84 4 10 1 244 1 70 1 173 2 282 1 42 4 192 2 46 1 312 1 335 1 229 2 241 2 
84 1 70 1 335 1 229 1 173 1 241 1 282 1 42 1 
84 4 10 1 213 1 28 1 173 3 282 2 192 2 42 4 331 1 312 1 335 2 229 1 81 1 241 1 
84 2 70 1 173 1 42 2 192 1 282 1 335 1 229 1 82 1 241 1 9 1 114 1 
84 3 213 2 28 2 70 1 173 1 42 3 282 1 331 1 347 1 229 1 335 1 241 1 
71 2 173 2 353 1 300 1 
84 1 154 1 70 1 229 1 241 1 42 1 
84 2 134 1 70 1 335 1 229 1 173 1 241 1 282 1 192 1 42 2 
326 1 
84 1 70 1 335 1 229 1 173 1 241 1 282 1 42 1 
84 3 28 1 70 1 173 1 192 1 42 3 282 1 134 1 229 1 335 1 241 1 
10 1 312 1 81 1 173 1 
335 1 173 1 

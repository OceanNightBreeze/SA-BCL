#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (241,244) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 156 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 1 336 1 1 2 180 1 2 1 361 2 301 1 158 5 89 2 58 1 132 2 367 6 323 3 229 1 207 9 67 1 287 2 329 1 121 2 191 4 74 1 238 2 375 1 79 1 380 1 269 1 150 1 357 9 
84 1 336 1 1 2 180 1 2 1 361 2 301 1 158 5 58 1 89 2 132 2 367 6 323 3 229 1 207 9 67 1 287 2 329 1 121 2 191 4 74 1 238 2 375 1 79 1 380 1 269 1 150 1 357 9 
84 1 336 1 1 2 180 1 2 1 361 2 301 1 158 6 58 1 89 2 132 2 367 7 323 4 229 1 207 10 67 1 287 2 329 1 121 2 191 5 74 1 238 2 375 1 79 1 380 1 269 1 150 1 357 10 
84 1 336 1 1 2 180 1 2 1 361 2 301 1 158 4 58 1 89 1 132 2 367 4 323 2 229 1 207 7 67 1 287 2 329 1 121 2 191 3 74 1 238 2 375 1 380 1 269 1 150 1 357 7 
1 1 180 1 287 1 329 1 121 1 191 2 158 3 89 2 132 1 74 1 238 1 367 3 323 1 79 1 229 1 380 1 207 4 357 4 
284 1 67 1 1 1 180 1 287 1 121 1 361 1 158 1 301 1 132 1 74 1 229 1 207 2 163 1 370 1 357 2 
180 1 287 2 2 1 361 1 191 1 158 2 132 2 74 1 367 1 323 1 229 1 207 3 357 3 
1 1 180 1 2 1 361 1 158 5 58 1 89 2 90 1 132 2 367 7 323 3 229 1 207 9 287 2 329 1 121 1 191 4 107 1 74 1 238 1 79 1 269 1 380 1 357 9 
1 1 180 1 2 1 361 1 158 5 58 1 89 2 90 1 132 2 367 7 323 3 229 1 207 9 287 2 329 1 121 1 191 4 107 1 74 1 238 1 79 1 269 1 380 1 357 9 
144 1 156 1 200 1 
162 2 200 1 307 1 
19 2 322 2 133 1 343 1 69 2 308 2 248 2 153 2 
316 1 154 2 317 1 223 1 248 3 276 2 341 1 342 1 322 2 133 1 252 1 343 1 366 2 326 1 96 1 308 2 120 1 259 1 347 1 100 1 19 2 288 1 37 1 69 3 105 1 293 1 374 1 125 2 76 1 146 1 148 1 128 2 196 1 335 1 149 1 82 1 153 2 
19 1 322 1 133 1 69 1 368 1 14 1 308 1 248 1 99 1 153 1 
0 1 165 1 69 1 200 1 290 1 248 1 142 1 193 1 144 1 322 1 13 1 138 1 99 1 260 1 
165 2 19 1 69 1 200 1 290 1 248 1 142 1 193 1 144 1 322 1 13 1 308 1 99 1 153 1 260 2 
165 1 213 1 257 1 81 1 260 1 
165 2 144 1 213 1 147 1 257 1 200 1 175 1 260 2 
165 1 213 1 260 1 
165 1 19 1 86 1 69 1 248 1 133 1 322 1 368 1 14 1 257 1 308 1 99 1 260 1 153 1 
200 1 
165 2 144 1 213 1 365 1 257 1 200 1 175 1 260 2 
283 1 165 5 213 2 39 1 200 1 340 1 144 1 313 2 134 2 324 1 354 1 257 2 242 1 15 1 64 1 113 2 175 1 260 5 233 1 
154 1 37 1 69 2 223 1 248 2 342 1 293 1 322 1 145 1 125 1 146 1 135 1 148 1 326 1 308 1 128 1 196 1 335 1 244 1 153 1 
343 1 156 1 
19 1 69 2 248 2 116 1 322 2 343 2 195 1 308 1 153 1 
280 1 17 1 244 1 
154 1 69 1 37 1 223 1 248 1 342 1 249 1 293 1 343 1 125 1 146 1 148 1 326 1 128 1 196 1 335 1 
19 1 322 3 343 1 145 1 69 3 308 3 248 3 153 3 
322 1 69 1 14 1 308 1 248 1 99 1 153 1 
19 1 322 1 69 1 195 1 308 1 248 1 99 1 116 1 153 1 
316 1 154 1 223 1 157 1 248 4 276 1 341 1 342 1 322 3 133 1 343 1 13 1 366 2 135 1 326 1 308 3 259 1 347 1 99 1 260 1 100 1 19 2 165 1 288 1 37 1 69 4 290 1 105 1 142 1 293 1 193 1 145 1 125 1 76 1 146 1 148 1 195 1 128 1 196 1 335 1 149 1 82 1 83 1 153 3 
0 1 322 2 343 1 25 1 145 1 69 2 308 1 248 2 153 1 
19 1 165 1 69 3 200 1 157 1 290 1 248 3 142 1 193 1 322 3 145 2 13 1 135 1 126 1 195 1 308 3 99 1 260 1 153 3 
19 1 322 2 145 1 69 2 195 1 308 2 248 2 280 1 244 1 153 2 
154 1 69 1 37 1 223 1 248 1 342 1 293 1 343 1 125 1 146 1 326 1 148 1 128 1 196 1 335 1 
154 1 69 1 37 1 223 1 360 1 248 1 343 1 125 1 146 1 219 1 326 1 148 1 128 1 196 1 335 1 
241 1 382 1 
304 1 322 1 69 1 308 1 248 1 142 1 99 1 153 1 
0 1 19 1 69 5 248 5 123 1 265 1 322 5 25 1 145 2 343 1 135 1 195 1 308 4 153 4 
304 1 322 2 69 2 14 1 308 2 248 2 99 1 153 2 
51 1 43 1 
51 1 43 1 
224 1 209 1 
224 1 209 1 
224 1 209 1 
51 1 43 1 194 1 
51 1 43 1 190 1 
51 2 43 2 173 1 224 1 379 1 209 1 
51 1 43 1 194 1 
51 1 43 1 194 1 
51 1 85 1 43 1 
51 1 85 1 43 1 
51 1 85 1 43 1 
51 2 165 2 246 1 55 2 200 1 310 1 215 1 339 1 225 1 91 1 7 1 41 2 43 2 173 1 306 3 47 2 137 2 271 2 260 2 
234 1 165 1 51 1 262 1 179 1 69 2 190 1 215 1 159 1 248 2 363 1 41 1 322 2 43 1 343 1 306 1 308 2 47 1 48 1 383 1 137 1 271 1 260 1 153 2 
238 1 1 1 121 1 
1 1 121 1 370 1 
238 2 172 1 121 3 356 1 370 1 210 1 
238 1 172 1 218 1 121 2 370 1 210 1 
238 1 172 1 121 2 370 1 210 2 
179 1 200 2 159 1 9 1 59 1 11 1 162 3 12 1 134 1 257 4 344 2 307 1 64 3 281 1 260 5 283 2 165 5 20 1 213 1 71 1 331 2 353 1 144 1 313 1 110 1 46 2 354 1 28 1 27 1 383 1 113 1 175 1 
53 5 200 5 340 1 59 3 11 3 251 1 162 9 12 2 93 1 61 1 134 2 257 7 307 3 64 8 281 3 260 9 283 6 165 9 213 6 38 1 373 1 71 3 331 6 353 3 144 1 313 2 110 2 46 6 354 1 80 1 81 5 383 4 28 1 113 2 175 1 
200 3 340 1 11 1 59 1 162 4 12 1 134 1 257 2 344 1 307 2 64 3 281 1 260 3 283 2 165 3 20 1 71 1 331 2 353 1 144 1 313 1 110 1 46 2 27 1 383 1 113 1 
200 4 340 1 11 2 59 2 162 7 12 1 93 1 134 1 344 2 257 3 307 3 64 5 281 2 260 4 283 4 165 4 20 1 38 1 373 1 71 2 331 4 353 2 144 1 313 1 110 1 46 4 27 1 383 2 113 1 
156 1 148 1 6 1 
148 1 122 1 
371 1 
148 1 326 1 
54 1 37 1 148 3 326 1 6 2 328 1 
37 1 148 1 326 1 
148 1 325 1 
359 1 129 1 57 2 276 7 71 1 106 1 160 1 332 1 353 1 227 1 117 1 205 1 206 1 149 3 120 4 186 3 152 2 
359 1 129 1 57 2 276 7 71 1 106 1 160 1 332 1 353 1 227 1 117 1 205 1 206 1 149 3 120 4 186 3 152 2 
359 1 129 1 372 1 57 2 276 7 71 1 106 1 160 1 332 1 353 1 227 1 117 1 205 1 206 1 149 3 120 4 186 3 152 2 
337 1 275 1 359 2 88 1 129 5 341 1 276 31 57 5 160 2 11 3 59 3 250 4 227 1 183 1 366 2 117 1 205 2 136 3 206 2 120 16 186 10 281 3 347 1 288 1 263 1 106 1 71 4 143 1 332 1 171 1 353 4 76 1 149 15 152 3 
298 1 359 2 129 1 181 1 341 1 276 14 57 3 160 1 227 1 366 2 205 2 206 1 120 8 186 4 347 1 288 1 106 1 71 3 332 2 353 3 239 1 76 1 149 6 152 2 
315 1 154 1 1 1 180 1 361 1 158 1 338 1 202 1 132 1 253 1 367 1 305 1 229 1 207 2 370 1 212 1 141 1 287 1 121 2 74 1 238 1 125 1 295 1 174 1 128 1 196 1 335 1 356 1 357 2 272 1 
315 1 154 1 1 1 180 1 247 1 361 1 158 1 338 1 202 1 132 1 253 1 184 1 367 2 256 1 207 3 370 1 141 1 287 1 121 2 74 1 238 1 125 1 295 1 174 1 128 1 196 1 356 1 335 1 357 3 272 1 
315 1 154 1 1 1 180 1 361 1 158 1 338 1 202 1 253 1 184 1 367 2 256 1 207 2 370 1 121 2 74 1 238 1 125 1 295 1 174 1 128 1 196 1 335 1 356 1 357 2 
154 1 358 1 247 1 287 1 236 1 361 2 5 1 132 1 254 1 125 1 253 2 146 1 295 2 148 1 326 1 279 1 174 2 128 1 196 1 207 1 335 1 119 1 357 1 
315 1 154 1 1 1 361 1 338 1 202 1 132 1 253 1 256 1 305 1 229 1 207 1 370 1 141 1 287 1 121 2 238 1 125 1 295 1 174 1 128 1 196 1 335 1 356 1 357 1 272 1 
52 1 
0 1 154 2 300 1 200 2 5 1 248 1 8 1 162 2 60 2 12 1 13 1 307 2 64 2 16 1 164 1 260 5 165 5 213 6 69 1 124 2 313 1 125 2 314 2 354 1 128 2 175 3 176 1 274 4 362 1 322 1 134 1 326 1 279 1 230 2 138 1 98 2 139 1 99 1 283 2 289 1 290 1 291 2 142 1 237 1 193 1 144 1 240 1 146 2 148 1 196 1 335 1 112 1 243 2 50 1 113 1 
0 1 165 3 213 2 274 2 69 1 362 1 289 1 290 1 248 1 142 1 237 1 8 1 193 1 322 1 365 1 13 1 314 1 138 1 99 1 175 1 260 3 176 1 
0 1 274 3 362 1 200 1 248 1 8 1 322 1 13 1 365 1 138 1 99 1 260 3 165 3 213 1 69 1 290 1 289 1 142 1 237 1 193 1 144 1 243 1 176 1 175 1 
0 1 274 3 362 1 200 1 248 1 8 1 322 1 365 1 13 1 138 1 99 1 260 3 165 3 213 2 69 1 290 1 289 1 142 1 237 1 124 1 193 1 144 1 314 1 243 1 175 1 176 1 
0 1 200 5 248 1 8 1 60 2 13 1 307 2 64 1 164 1 260 5 165 5 213 7 69 1 312 1 124 4 313 1 314 4 354 1 175 3 176 1 274 6 362 1 322 1 277 1 365 1 134 1 230 2 138 1 99 1 98 2 283 1 103 1 290 1 289 1 192 1 142 1 291 2 237 1 193 1 144 5 198 1 112 1 243 4 113 1 
0 1 274 4 200 2 362 1 248 1 8 1 162 2 60 2 322 1 13 1 134 1 307 2 230 2 64 1 138 1 98 2 164 1 99 1 260 4 283 1 165 4 213 4 69 1 289 1 290 1 291 2 142 1 237 1 124 2 193 1 144 1 313 1 314 2 354 1 112 1 243 2 50 1 113 1 175 2 176 1 
0 1 274 4 200 1 362 1 248 1 8 1 60 2 322 1 13 1 134 1 307 2 230 2 64 1 138 1 98 2 164 1 99 1 260 4 283 1 165 4 213 4 69 1 103 1 290 1 289 1 291 2 142 1 312 1 237 1 124 2 193 1 144 1 313 1 314 2 354 1 112 1 198 1 243 2 113 1 175 2 176 1 
0 1 274 4 200 1 362 1 248 1 8 1 60 2 322 1 13 1 134 1 307 2 230 2 64 1 138 1 98 2 164 1 99 1 260 4 283 1 165 4 213 4 69 1 103 1 290 1 289 1 291 2 142 1 312 1 237 1 124 2 193 1 144 1 313 1 314 2 354 1 112 1 198 1 243 2 113 1 175 2 176 1 
0 1 274 4 200 1 362 1 248 1 8 1 226 2 162 2 60 2 322 1 13 1 204 1 134 1 369 2 64 1 208 1 138 1 164 1 99 1 260 4 283 1 165 4 213 4 69 1 103 1 290 1 289 1 104 1 291 2 142 1 237 1 124 2 193 1 144 1 313 1 314 2 354 1 243 2 113 1 175 2 176 1 
0 1 274 5 200 1 362 1 248 1 8 1 60 2 322 1 13 1 134 1 307 2 230 2 64 1 138 1 98 2 164 1 99 1 260 4 283 1 165 4 213 5 69 1 103 1 290 1 289 1 192 1 291 2 142 1 312 1 237 1 124 3 193 1 144 1 313 1 314 3 354 1 112 1 198 1 243 3 113 1 175 2 176 1 
0 1 274 5 200 1 362 1 248 1 8 1 60 2 322 1 13 1 134 1 307 2 230 2 64 1 138 1 98 2 164 1 99 1 260 4 283 1 165 4 213 5 69 1 103 1 290 1 289 1 192 1 291 2 142 1 312 1 237 1 124 3 193 1 144 1 313 1 314 3 354 1 112 1 198 1 243 3 113 1 175 2 176 1 
0 1 274 4 200 1 362 1 248 1 8 1 226 2 162 2 60 2 322 1 13 1 134 1 369 2 64 1 208 1 138 1 164 1 99 1 260 4 283 1 165 4 213 4 69 1 289 1 290 1 291 2 142 1 237 1 124 2 193 1 144 1 313 1 314 2 354 1 243 2 50 1 113 1 175 2 176 1 
156 1 382 1 
337 1 129 1 30 1 57 1 341 2 276 14 11 2 59 2 250 3 183 1 228 1 343 1 366 4 96 1 136 3 17 11 120 8 280 4 186 2 281 1 347 2 100 2 288 2 105 1 351 1 71 2 353 1 76 2 26 1 78 1 82 1 149 6 244 11 
154 1 223 1 130 1 248 2 341 1 276 2 342 1 249 1 322 1 343 1 366 2 135 1 326 1 308 1 96 1 280 1 120 1 347 1 140 1 100 1 68 1 37 1 288 1 69 2 105 1 351 1 293 1 125 1 145 1 76 1 146 1 148 1 128 1 196 1 335 1 82 1 149 1 153 1 
154 3 3 2 248 3 57 4 341 3 342 2 302 2 11 2 59 2 343 2 256 1 205 1 308 1 259 2 17 7 120 10 18 1 347 3 349 2 69 3 351 1 71 3 353 3 125 3 76 3 128 3 82 1 359 1 223 2 129 4 276 20 32 1 364 1 227 1 322 1 366 6 135 1 326 2 96 1 280 7 186 8 281 2 100 3 288 3 37 2 105 3 106 1 332 1 293 2 376 2 145 1 146 1 148 2 196 2 335 2 149 10 244 7 152 1 153 1 
154 8 317 2 248 1 5 1 341 1 276 2 322 1 366 2 256 1 279 1 326 2 308 1 96 1 120 1 97 1 347 1 212 1 100 1 69 1 288 1 189 1 22 1 350 1 105 1 72 1 44 1 145 1 125 8 76 1 146 2 148 3 128 7 196 2 382 1 335 2 82 1 149 1 177 1 153 1 
248 1 57 1 341 1 276 3 11 1 59 1 322 1 366 2 308 1 280 1 17 1 120 1 186 1 281 1 347 1 100 1 19 1 288 1 69 1 105 1 351 1 71 1 23 1 353 1 76 1 195 1 149 2 244 1 153 1 
382 1 
382 1 
382 1 
100 1 288 1 129 1 22 1 105 1 276 2 341 1 131 1 71 1 59 1 76 1 366 2 280 1 17 1 120 2 186 1 244 1 347 1 
100 1 288 1 22 1 105 1 57 1 276 2 341 1 353 1 76 1 366 2 280 1 17 1 149 2 186 1 244 1 281 1 347 1 309 1 
100 1 288 1 129 1 22 1 105 1 57 1 276 4 341 1 71 1 353 1 11 1 59 1 76 1 366 2 149 2 280 2 17 2 120 2 281 1 186 2 244 2 347 1 
100 1 288 1 129 1 105 1 57 1 341 1 276 4 71 1 353 1 11 1 59 1 76 1 366 2 149 2 280 2 17 2 120 2 281 1 186 2 244 2 347 1 
154 1 223 1 248 1 276 2 341 1 342 1 343 1 366 2 326 1 96 1 120 1 259 1 347 1 100 1 37 1 69 1 288 1 105 1 293 1 125 1 76 1 146 1 148 1 128 1 196 1 335 1 82 1 149 1 
154 1 223 1 360 1 248 1 276 2 341 1 343 1 366 2 118 1 326 1 96 1 120 1 347 1 100 1 37 1 69 1 288 1 105 1 125 1 76 1 146 1 219 1 148 1 128 1 196 1 335 1 82 1 149 1 
100 1 288 1 129 1 351 1 105 1 57 1 276 4 341 1 71 1 353 1 11 1 59 1 76 1 366 2 149 2 280 2 17 2 120 2 281 1 186 2 244 2 347 1 
154 1 223 1 129 1 3 1 248 1 57 1 276 4 341 1 342 1 59 1 11 1 366 2 326 1 280 2 17 2 120 2 259 1 281 1 186 2 347 1 212 1 100 1 37 1 69 1 288 1 105 1 71 1 293 1 353 1 125 1 76 1 148 1 128 1 196 1 335 1 149 2 244 2 
129 1 248 1 341 1 276 3 11 1 59 1 322 1 366 2 308 1 120 2 17 1 280 1 281 1 186 1 347 1 100 1 19 1 288 1 69 1 105 1 351 1 71 1 353 1 76 1 45 1 195 1 149 1 244 1 153 1 
337 1 4 1 341 3 57 4 10 1 59 4 11 4 250 4 62 4 205 1 120 20 347 3 211 1 214 1 263 1 264 1 71 5 353 5 266 1 76 3 359 1 129 4 181 1 276 41 183 3 227 1 366 6 136 3 34 1 281 4 186 8 101 2 288 3 40 1 106 1 332 1 294 1 109 1 197 1 149 21 245 1 199 1 152 1 
337 1 359 1 129 3 4 1 181 1 57 4 341 4 276 38 10 1 11 4 59 4 250 4 227 1 183 3 366 8 62 4 205 1 136 3 34 1 120 20 186 7 281 3 211 1 347 4 101 2 288 4 40 1 214 1 263 2 264 1 106 1 71 5 332 1 294 1 353 4 266 1 109 1 76 4 197 1 149 18 245 1 152 1 199 1 
337 2 359 1 129 7 4 1 181 1 57 7 341 2 276 52 10 1 11 7 59 7 250 4 227 1 183 2 366 4 62 4 205 1 136 4 34 1 120 27 186 14 281 7 211 1 347 2 101 1 288 2 214 1 263 1 264 1 106 1 71 8 332 1 294 1 353 8 266 1 109 1 76 2 26 2 149 25 245 1 152 1 199 1 
337 1 129 3 4 1 181 1 57 3 341 2 276 19 10 1 11 3 59 3 250 2 183 1 366 4 62 2 136 1 34 1 120 9 186 6 281 3 347 2 66 1 101 1 288 2 264 1 71 3 294 2 353 3 76 2 197 1 149 10 
129 2 4 1 181 1 57 2 341 3 276 26 10 1 11 3 59 3 250 2 183 2 366 6 62 4 136 2 34 1 120 14 186 4 281 2 347 3 211 1 101 2 288 3 214 1 263 2 264 2 71 3 294 1 353 2 266 1 109 1 76 3 149 12 245 1 199 1 
51 1 36 1 330 1 41 1 43 1 111 1 47 1 137 1 271 1 49 1 
262 1 190 1 
42 1 51 1 43 1 77 1 47 1 271 1 137 1 169 1 41 1 
165 1 51 1 246 1 55 1 200 1 310 1 215 1 339 1 225 1 91 1 41 1 43 1 173 1 306 2 47 1 137 1 271 1 260 1 
165 1 51 1 246 1 55 1 200 1 310 1 215 1 339 1 225 1 91 1 41 1 43 1 173 1 306 2 47 1 137 1 271 1 260 1 
165 1 51 1 246 1 55 1 200 1 310 1 215 1 339 1 225 1 91 1 41 1 43 1 173 1 306 2 47 1 137 1 271 1 260 1 
194 1 379 1 381 1 
194 1 379 1 381 1 
85 1 261 1 
85 1 261 1 379 1 
234 1 363 1 
51 1 55 1 179 1 155 1 339 1 159 1 248 2 363 1 322 2 343 1 257 1 306 1 308 2 137 1 260 1 234 1 165 1 262 1 69 2 190 1 41 1 43 1 47 1 48 1 271 1 383 1 153 2 
194 1 381 1 
85 1 261 1 379 1 
154 2 299 1 317 2 248 2 341 1 276 2 322 2 366 2 326 1 96 1 35 1 120 1 97 1 347 1 100 1 69 2 288 1 105 1 351 1 73 1 44 1 125 2 24 1 76 1 148 1 128 2 196 1 335 1 82 1 149 1 273 1 
212 1 315 1 154 2 1 1 121 2 202 1 292 1 238 1 125 2 256 1 174 1 128 2 196 1 33 1 356 1 335 1 370 1 272 1 348 1 
315 1 154 1 1 1 235 1 121 2 202 1 238 1 125 1 256 1 174 1 128 1 196 1 356 1 335 1 370 1 272 1 348 1 
154 1 5 1 292 1 125 1 254 1 146 1 95 1 148 1 326 1 174 1 279 1 128 1 196 1 335 1 
315 1 154 1 1 1 121 2 202 1 292 1 238 1 125 1 256 1 174 1 128 1 33 1 196 1 356 1 335 1 370 1 272 1 348 1 
161 1 
283 1 144 1 324 1 156 1 200 1 242 1 64 1 
200 2 162 1 134 1 307 1 64 1 230 1 98 1 260 1 283 1 165 1 213 1 144 1 313 1 354 1 112 1 113 1 175 1 
154 3 200 8 6 2 302 2 11 2 59 2 162 12 12 2 255 1 345 2 307 6 64 9 260 5 212 1 165 5 213 5 122 3 311 1 71 2 168 2 170 2 353 2 313 4 125 3 354 4 128 3 175 3 178 1 222 2 318 2 87 2 134 4 278 1 324 1 326 3 325 2 328 1 281 2 231 2 283 8 188 1 37 3 331 6 193 2 144 2 240 1 146 1 333 2 46 6 242 1 148 10 196 3 335 4 113 4 
222 1 318 2 200 5 203 1 11 2 59 2 162 6 250 1 12 1 183 1 134 2 307 3 64 8 136 1 281 2 211 1 260 1 283 5 165 1 213 1 214 1 71 2 331 5 353 2 266 1 109 1 144 2 313 2 240 1 355 1 46 5 354 2 113 2 175 1 199 1 
86 1 222 1 318 2 359 1 248 1 133 1 322 1 134 1 368 1 14 1 205 1 308 1 64 2 99 1 260 1 283 2 165 1 19 1 69 1 71 2 332 1 353 1 313 1 239 1 354 1 198 1 113 1 153 1 
283 1 200 1 144 1 313 1 134 1 324 1 354 1 242 1 64 1 113 1 
283 5 222 1 318 2 200 5 302 1 71 2 331 5 11 2 59 2 353 2 162 10 46 5 307 5 64 5 281 2 
165 1 144 1 213 1 200 1 260 1 175 1 
154 4 300 1 340 1 5 1 12 2 255 2 134 2 326 1 279 1 64 2 139 1 260 3 283 2 165 3 213 4 286 1 188 1 352 1 313 2 125 4 146 2 240 2 354 1 148 1 128 4 196 1 335 1 113 2 175 2 
316 1 154 1 223 1 248 3 276 1 341 1 342 1 322 2 133 1 343 1 366 2 326 1 308 2 259 1 347 1 100 1 19 2 288 1 69 3 37 1 105 1 293 1 125 1 76 1 146 1 148 1 128 1 196 1 335 1 149 1 82 1 153 2 
283 2 200 4 331 2 162 4 12 1 144 2 313 1 134 1 240 1 46 2 354 1 307 2 64 1 113 1 152 1 
267 1 271 1 41 1 
234 1 378 1 271 1 91 1 41 1 
267 1 271 1 41 1 
267 1 271 1 41 1 
56 1 271 1 41 1 
56 1 271 1 41 1 
56 1 271 1 41 1 
271 1 41 1 
51 1 43 1 
359 1 181 1 276 8 341 1 57 2 250 1 183 1 227 1 366 2 205 1 136 1 120 4 186 2 347 1 288 1 71 1 106 1 332 1 353 1 76 1 149 4 152 1 199 1 
337 1 359 1 129 1 181 1 57 2 276 11 341 2 115 1 11 1 59 1 250 2 227 1 183 1 366 4 205 1 136 1 120 6 186 3 347 2 288 2 106 1 71 2 332 1 353 1 76 2 149 5 152 1 199 1 
359 1 129 1 181 1 276 19 341 3 57 3 115 1 11 2 59 2 250 1 227 1 183 1 366 6 205 1 136 1 120 9 281 2 186 4 347 3 211 1 288 3 214 1 263 1 106 1 71 3 332 1 353 3 266 1 109 1 76 3 149 10 152 1 199 1 
359 1 129 2 181 1 276 17 341 3 57 3 115 1 11 2 59 2 250 1 227 1 183 1 366 6 205 1 136 1 120 10 281 1 186 5 347 3 211 1 288 3 214 1 263 1 106 1 71 3 332 1 353 2 109 1 266 1 76 3 149 7 152 1 199 1 
359 1 181 1 276 8 341 1 57 2 250 1 183 1 227 1 366 2 205 1 136 1 120 4 186 2 347 1 288 1 71 1 106 1 332 1 353 1 76 1 149 4 152 1 199 1 
129 1 181 1 276 12 341 1 57 1 11 2 59 2 250 1 183 1 366 2 136 1 120 6 281 2 186 2 347 1 211 1 288 1 214 1 71 2 353 2 109 1 266 1 76 1 149 6 199 1 
359 1 129 2 181 1 276 18 341 4 57 3 115 1 11 2 59 2 250 1 227 1 183 1 366 8 205 1 136 1 120 10 281 1 186 5 347 4 211 1 288 4 214 1 263 2 106 1 71 3 332 1 353 2 266 1 109 1 76 4 149 8 152 1 199 1 
129 3 181 1 276 16 341 4 57 3 11 3 59 3 250 1 183 1 366 8 136 1 120 9 281 2 186 6 347 4 211 1 288 4 214 1 263 2 71 3 353 2 266 1 109 1 76 4 197 1 149 7 199 1 
359 3 129 3 276 7 57 3 106 1 71 1 332 1 353 1 227 2 205 3 149 4 120 3 186 6 
359 1 129 1 181 1 276 18 341 4 57 3 11 2 59 2 250 1 227 1 183 1 366 8 205 1 136 1 120 10 281 1 186 4 347 4 211 1 288 4 214 1 263 2 106 1 71 3 332 1 353 2 266 1 109 1 76 4 197 1 149 8 152 1 199 1 
288 2 359 1 129 1 263 1 276 8 57 2 341 2 71 1 106 1 332 1 353 1 227 1 76 2 366 4 205 1 149 4 120 4 186 3 347 2 152 1 
359 1 156 1 57 2 276 6 106 1 71 1 332 1 353 1 227 1 205 1 149 3 120 3 186 2 152 1 
288 1 129 1 57 1 341 1 276 4 71 1 115 1 353 1 11 1 59 1 76 1 366 2 149 2 120 2 281 1 186 2 347 1 
337 1 129 1 57 1 276 7 71 1 353 1 11 1 59 1 250 2 183 1 136 1 149 4 120 3 281 1 186 2 
337 1 359 2 129 4 276 23 57 5 341 2 59 2 11 2 250 2 227 1 228 1 366 4 205 2 136 2 120 11 186 9 281 2 347 2 288 2 263 2 106 1 71 3 332 1 353 3 76 2 26 1 149 12 151 1 152 1 
250 1 276 1 149 1 
136 1 276 1 120 1 
288 1 129 1 341 1 276 6 57 2 302 1 71 1 115 1 11 1 59 1 353 1 366 2 76 1 149 3 120 3 186 3 281 1 347 1 
129 1 181 1 276 12 341 1 57 1 11 2 59 2 250 1 183 1 366 2 136 1 120 6 281 2 186 2 347 1 211 1 288 1 214 1 71 2 353 2 109 1 266 1 76 1 149 6 199 1 
353 1 359 1 129 1 205 1 57 1 276 6 149 3 120 3 71 1 186 2 332 1 
288 1 359 1 129 1 263 1 57 1 276 3 341 1 106 1 227 1 76 1 366 2 205 1 120 1 149 2 186 2 151 1 347 1 
288 1 359 2 129 2 181 1 341 1 57 3 276 10 71 2 332 1 353 2 366 2 76 1 239 1 205 2 120 5 149 5 186 5 347 1 
288 1 129 1 181 1 341 1 276 2 71 1 59 1 76 1 366 2 120 2 186 1 347 1 
288 1 129 1 181 1 57 1 341 1 276 4 71 1 353 1 11 1 59 1 76 1 366 2 149 2 120 2 281 1 186 2 347 1 
288 3 359 1 129 1 263 1 181 1 276 3 341 3 57 1 76 3 366 6 205 1 197 1 149 2 120 1 186 2 151 1 347 3 
337 1 359 3 88 1 129 5 181 1 341 5 276 34 57 7 115 1 11 3 59 3 250 4 227 1 183 1 366 10 205 3 136 3 120 16 186 12 281 3 347 5 288 5 263 2 106 1 71 5 143 1 332 2 171 1 353 5 76 5 197 1 149 18 151 1 152 1 
0 1 322 1 343 1 25 1 69 1 248 1 296 1 
0 1 69 1 320 1 248 1 108 1 182 1 322 1 343 1 25 1 346 1 296 1 187 1 
154 1 125 1 146 1 156 1 148 1 326 1 279 1 128 1 196 1 5 1 335 1 
154 1 37 1 69 2 223 1 248 2 293 1 322 1 343 1 145 1 125 1 146 1 148 1 326 1 308 1 128 1 196 1 335 1 153 1 
154 1 223 1 248 2 322 2 343 1 13 1 255 1 326 2 325 1 308 1 99 1 69 2 37 2 142 1 293 1 125 1 145 1 333 1 148 3 128 1 196 1 335 1 153 2 
154 2 223 1 360 1 248 2 322 2 343 1 13 1 255 1 326 2 325 1 308 1 185 1 99 1 69 2 37 2 142 1 125 2 145 1 333 1 148 3 128 2 196 1 335 1 153 2 
154 3 200 1 29 1 6 1 255 1 326 1 325 1 185 1 65 1 260 2 165 2 213 1 37 1 122 1 193 1 144 1 125 3 333 1 146 1 148 4 128 3 196 1 335 1 
165 2 154 3 213 1 37 1 200 1 122 1 6 1 170 1 193 1 144 1 125 3 255 1 146 1 333 1 325 1 326 1 148 4 128 3 196 1 185 1 335 1 260 2 
154 1 125 1 350 1 128 1 196 1 335 1 
212 1 154 7 317 1 37 1 189 1 350 1 72 1 303 1 125 7 146 2 256 1 63 1 326 2 148 3 128 6 196 2 297 1 328 1 335 3 97 1 177 1 
154 1 299 1 3 1 248 2 341 2 57 2 342 1 343 2 308 1 205 1 259 1 120 3 17 1 347 2 212 1 69 2 351 1 71 1 353 1 125 1 76 2 128 1 223 1 359 1 276 6 322 1 227 1 366 4 326 1 280 1 186 2 100 2 288 2 37 1 105 2 106 1 293 1 332 1 376 1 145 1 148 1 196 1 335 1 149 3 244 1 153 1 152 1 
154 1 200 1 6 1 134 2 324 1 257 1 345 1 64 1 231 1 260 3 283 1 165 3 213 2 188 1 122 1 168 1 170 1 193 1 144 1 125 1 313 2 146 1 354 2 242 1 148 2 128 1 113 2 175 1 
212 1 154 2 37 1 350 1 6 1 125 2 278 1 326 1 148 2 128 2 196 1 328 1 335 2 
212 1 154 4 114 1 5 1 125 4 146 1 279 1 326 1 148 1 128 4 196 1 185 1 335 1 
154 2 37 1 166 1 32 1 303 1 321 1 125 2 255 1 63 1 326 1 148 1 128 2 196 1 335 2 
154 1 1 1 125 1 146 1 121 1 128 1 196 1 335 1 202 1 370 1 
212 1 154 2 125 2 256 1 326 1 148 1 128 2 196 1 335 1 97 1 273 1 
212 1 154 5 189 1 114 1 5 1 125 5 255 1 146 1 279 1 326 2 148 3 128 4 196 2 335 2 97 1 177 1 
212 1 154 5 189 1 114 1 5 1 125 5 255 1 146 1 279 1 268 1 326 2 148 3 128 4 196 2 335 2 97 1 
154 1 37 1 69 2 223 1 360 1 248 2 322 1 343 1 145 1 125 1 146 1 148 1 326 1 308 1 128 1 196 1 335 1 153 1 
154 1 37 1 303 1 125 1 255 1 63 1 326 1 148 1 128 1 196 1 297 1 328 1 335 2 
343 1 21 1 127 1 70 1 327 1 
165 2 21 1 200 1 157 1 70 2 290 1 142 1 193 1 144 1 343 1 13 1 94 1 217 1 257 1 127 2 327 2 334 1 99 1 260 2 
73 1 322 1 24 1 69 1 21 1 70 1 327 1 248 1 35 1 
217 1 94 1 21 1 
74 1 180 1 156 1 158 1 
132 1 74 1 180 1 287 1 158 1 207 1 357 1 
361 1 295 1 207 1 
67 2 287 1 180 1 158 1 319 1 132 1 74 1 258 1 229 1 207 3 282 1 357 3 
132 1 74 1 180 1 287 1 367 1 158 1 207 2 89 1 357 2 
1 1 287 1 121 1 191 1 158 1 132 1 238 1 229 1 380 1 207 1 357 1 
132 1 180 1 287 1 158 1 229 1 207 1 357 1 
132 1 74 1 180 2 287 1 229 1 207 1 357 1 
180 1 287 2 158 1 167 1 31 1 132 2 229 1 207 2 357 2 232 1 
180 1 287 1 191 1 158 2 58 1 132 1 74 1 367 2 323 1 229 1 269 1 207 3 357 3 
1 1 180 1 287 1 121 2 158 1 201 1 132 1 74 1 238 1 367 1 229 1 207 2 356 1 370 1 357 2 
180 1 287 2 191 1 158 2 89 1 132 2 74 1 367 2 323 1 79 1 229 1 207 4 357 4 
132 1 74 1 180 1 287 1 158 1 229 1 207 1 357 1 
67 1 180 2 287 1 319 1 191 1 158 3 132 1 74 2 75 1 367 2 323 1 207 4 282 1 357 4 
285 1 180 1 287 1 158 1 107 1 132 1 74 1 367 1 229 1 220 1 207 2 357 2 
67 2 287 1 180 1 158 1 319 2 132 1 74 1 377 1 229 1 207 3 282 1 357 3 
102 1 158 2 216 1 92 2 
132 1 287 1 229 1 221 1 207 1 357 1 
132 1 74 1 180 1 287 1 367 1 158 1 229 1 207 2 58 1 357 2 
270 1 
132 1 74 1 180 1 287 1 158 1 229 1 207 1 357 1 
132 1 74 1 67 1 180 1 287 1 367 1 158 1 229 1 207 3 58 1 357 3 
75 1 323 1 158 1 191 1 
180 1 158 1 

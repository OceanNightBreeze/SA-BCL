#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (224,367) 237 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (224,367) 151 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (224,367) 151 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (224,367) 237 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 2 288 1 171 1 75 2 3 1 128 1 46 1 106 1 290 1 336 1 177 9 5 5 178 2 30 1 363 2 112 3 315 4 295 1 249 2 83 1 277 1 319 6 185 9 123 1 188 1 214 2 306 2 144 1 
330 2 288 1 171 1 3 1 75 2 128 1 46 1 106 1 290 1 336 1 177 9 5 5 178 2 30 1 363 2 112 3 315 4 295 1 249 2 83 1 277 1 319 6 185 9 123 1 188 1 214 2 306 2 144 1 
330 2 288 1 171 1 3 1 75 2 128 1 46 1 106 1 290 1 336 1 177 10 5 6 178 2 30 1 363 2 112 4 315 5 295 1 249 2 83 1 277 1 319 7 185 10 123 1 188 1 214 2 306 2 144 1 
330 2 171 1 3 1 75 1 128 1 46 1 106 1 290 1 336 1 177 7 5 4 178 2 30 1 363 2 112 2 315 3 295 1 249 2 83 1 277 1 319 4 185 7 123 1 188 1 214 2 306 2 144 1 
330 1 288 1 75 2 290 1 319 3 185 4 336 1 177 4 5 3 178 1 30 1 188 1 363 1 112 1 306 1 315 2 295 1 249 1 
148 1 347 1 106 1 290 1 185 2 339 1 5 1 123 1 177 2 178 1 188 1 363 1 214 1 306 1 295 1 249 1 
171 1 290 1 319 1 185 3 177 3 5 2 178 2 188 1 363 2 214 1 112 1 315 1 295 1 
330 1 171 1 265 1 288 1 75 2 128 1 290 1 336 1 177 9 5 5 178 2 362 1 30 1 363 2 112 3 315 4 295 1 249 1 319 7 185 9 188 1 214 1 306 1 144 1 
330 1 171 1 265 1 288 1 75 2 128 1 290 1 336 1 177 9 5 5 178 2 362 1 30 1 363 2 112 3 315 4 295 1 249 1 319 7 185 9 188 1 214 1 306 1 144 1 
32 1 
116 1 24 1 25 2 
108 2 320 1 28 2 182 2 259 2 173 1 53 2 360 2 
328 1 104 1 264 2 170 1 173 1 308 1 223 1 149 1 360 2 108 2 28 3 81 2 9 1 316 1 53 2 341 1 35 1 182 3 85 1 253 2 11 1 162 2 92 1 12 1 370 1 94 1 320 1 212 1 373 1 259 2 285 1 67 2 286 1 98 1 41 1 352 1 102 1 
103 1 108 1 28 1 182 1 259 1 173 1 82 1 53 1 65 1 360 1 
116 1 182 1 72 1 368 1 160 1 360 1 14 1 283 1 28 1 167 1 6 1 140 1 40 1 82 1 
116 1 182 1 160 2 360 1 14 2 108 1 283 1 28 1 167 1 6 1 140 1 259 1 40 1 82 1 53 1 
331 1 233 1 160 1 38 1 14 1 
116 1 331 1 233 1 40 1 160 2 225 1 376 1 14 2 
331 1 160 1 14 1 
103 1 182 1 173 1 233 1 160 1 280 1 65 1 14 1 360 1 108 1 28 1 259 1 82 1 53 1 
116 1 
116 1 331 1 233 1 40 1 33 1 160 2 225 1 14 2 
116 1 71 1 331 2 233 2 87 1 89 1 309 1 160 5 47 1 359 2 282 1 225 1 14 5 301 2 40 1 34 1 68 1 232 1 54 2 
32 1 
182 2 348 1 360 2 108 1 320 2 28 2 259 1 53 1 142 1 
340 1 229 1 325 1 
104 1 264 1 182 1 85 1 223 1 162 1 92 1 149 1 94 1 320 1 28 1 81 1 286 1 98 1 204 1 41 1 
182 5 368 1 13 1 360 5 198 1 108 4 320 1 28 5 259 4 284 1 97 2 53 1 142 1 216 1 
103 1 108 2 28 2 182 2 259 2 82 1 300 1 360 2 
104 1 264 1 182 2 85 1 223 1 149 1 92 1 162 1 360 1 108 1 340 1 94 1 28 2 259 1 81 1 97 1 286 1 98 1 41 1 216 1 
108 3 320 1 28 3 182 3 259 3 97 1 53 1 360 3 
103 1 108 1 28 1 182 1 259 1 82 1 360 1 
108 1 28 1 182 1 259 1 82 1 348 1 53 1 360 1 142 1 
328 1 104 1 264 1 170 1 173 1 308 1 223 1 149 1 360 3 108 3 28 4 6 1 81 1 82 1 53 2 341 1 35 1 182 4 85 1 253 2 160 1 92 1 162 1 12 1 14 1 370 1 93 1 94 1 283 1 320 1 212 1 167 1 373 1 140 1 259 3 323 1 97 1 67 1 286 1 98 1 41 1 142 1 216 1 102 1 
108 1 320 1 28 2 182 2 259 1 97 1 368 1 360 2 198 1 
116 1 182 3 44 1 160 1 14 1 360 3 108 3 93 1 283 1 28 3 167 1 140 1 6 1 259 3 97 2 82 1 53 1 142 1 216 1 
182 2 360 2 108 2 340 1 28 2 229 1 259 2 97 1 53 1 142 1 
264 1 104 1 182 1 85 1 223 1 162 1 92 1 149 1 94 1 320 1 28 1 81 1 286 1 98 1 41 1 
264 1 104 1 182 1 85 1 162 1 92 1 149 1 94 1 320 1 28 1 81 1 314 1 141 1 98 1 41 1 
328 1 42 1 356 1 358 1 338 1 340 2 229 2 80 1 365 1 316 2 341 1 253 2 184 1 12 2 370 1 212 1 322 1 373 1 169 1 67 4 325 2 191 1 327 1 102 1 
108 1 283 1 28 1 182 1 259 1 82 1 300 1 360 1 
84 1 155 1 
84 1 155 1 
222 1 353 1 
222 1 353 1 
222 1 353 1 
84 1 155 1 226 1 
84 2 367 1 222 1 155 2 224 1 353 1 
84 1 155 1 276 1 
84 1 155 1 226 1 
84 1 155 1 226 1 
297 1 84 1 155 1 
297 1 84 1 155 1 
297 1 84 1 155 1 
360 2 108 2 111 1 28 2 273 1 155 1 247 1 52 1 115 1 276 1 84 1 158 1 117 1 182 2 252 1 160 1 255 1 299 1 14 1 257 1 320 1 258 1 259 2 189 1 
116 1 240 1 84 2 158 1 172 1 86 2 160 2 255 2 224 1 130 1 14 2 258 3 364 1 155 2 189 2 247 2 55 1 115 2 326 1 
330 1 306 1 249 1 
339 1 306 1 249 1 
176 1 339 1 330 2 267 1 306 3 250 1 
339 1 49 1 330 1 267 1 306 2 250 1 
339 1 330 1 267 2 306 2 250 1 
331 1 47 2 358 1 359 1 24 1 225 1 25 3 311 2 338 1 109 1 111 1 361 2 50 1 313 1 157 1 54 1 232 1 116 2 252 1 233 4 87 3 160 5 299 1 301 1 14 5 187 1 372 2 349 1 40 1 190 1 191 1 327 1 
19 1 331 6 73 1 333 1 107 1 47 6 358 3 359 2 24 3 225 1 25 9 311 6 338 3 26 1 361 6 50 2 313 1 157 2 232 1 54 2 116 5 233 7 87 8 160 9 299 4 38 5 14 9 301 2 40 1 190 3 68 1 191 3 327 3 126 5 17 1 
359 1 358 1 47 2 24 2 311 2 25 4 338 1 109 1 361 2 50 1 157 1 54 1 116 3 233 2 87 3 160 3 299 1 301 1 14 3 187 1 372 1 40 1 190 1 68 1 191 1 327 1 
73 1 333 1 107 1 359 1 358 2 47 4 24 3 25 7 311 4 338 2 109 1 361 4 50 1 157 1 54 1 116 4 233 3 87 5 160 4 299 2 301 1 14 4 187 1 372 2 40 1 190 2 68 1 191 2 327 2 
32 1 
104 1 195 1 
268 1 
104 1 85 1 149 1 
104 1 192 1 
104 1 149 1 
104 3 85 1 334 2 149 1 287 1 274 1 
207 1 118 1 21 2 278 1 244 1 358 1 291 1 12 3 338 1 166 1 228 1 80 2 179 1 31 1 67 7 365 3 316 4 
207 1 118 1 21 2 278 1 244 1 358 1 291 1 12 3 338 1 166 1 228 1 80 2 179 1 31 1 67 7 365 3 316 4 
207 1 118 1 21 2 278 1 74 1 244 1 358 1 291 1 12 3 338 1 166 1 228 1 80 2 179 1 31 1 67 7 365 3 316 4 
328 1 194 3 21 3 244 2 358 4 291 2 338 4 228 2 179 1 230 1 80 5 31 1 365 10 316 16 36 1 207 2 118 5 278 1 253 2 64 4 234 1 12 15 318 1 166 1 212 1 373 1 213 1 67 31 190 3 238 1 350 1 191 3 102 1 327 3 
328 2 21 2 289 1 244 1 358 1 129 1 291 1 338 1 228 1 80 3 179 1 31 1 365 4 316 5 207 1 118 1 253 4 234 1 12 4 212 2 166 1 373 2 67 9 102 2 
264 1 217 1 330 1 1 1 20 1 290 1 199 1 339 1 176 1 5 1 177 2 178 1 81 1 363 1 153 1 132 1 295 1 249 1 114 1 61 1 162 1 92 1 319 1 185 2 163 1 188 1 214 1 98 1 306 2 100 1 
264 1 330 1 1 1 20 1 199 1 176 1 339 1 5 1 177 3 178 1 7 1 81 1 363 1 153 1 132 1 295 1 249 1 114 1 57 1 162 1 92 1 319 2 185 3 163 1 188 1 214 1 98 1 306 2 100 1 379 1 
264 1 330 1 20 1 199 1 339 1 176 1 5 1 177 2 81 1 153 1 132 1 295 1 249 1 114 1 57 1 162 1 92 1 319 2 185 2 188 1 214 1 98 1 306 2 100 1 379 1 
264 1 104 1 149 1 199 2 177 1 178 1 7 1 81 1 363 1 312 1 114 2 137 1 317 1 344 1 92 1 162 1 185 1 164 1 15 1 214 2 98 1 41 1 100 2 
217 1 57 1 264 1 330 1 1 1 20 1 290 1 92 1 162 1 163 1 185 1 199 1 176 1 339 1 177 1 178 1 153 1 363 1 81 1 214 1 98 1 132 1 306 2 249 1 114 1 100 1 
58 1 
104 1 329 2 331 6 241 2 242 1 47 2 149 1 152 1 6 1 246 2 157 1 8 1 54 1 296 1 116 2 119 1 160 5 162 2 14 5 301 1 165 2 164 1 167 1 215 1 261 2 351 1 262 1 264 2 127 2 72 1 359 1 23 2 24 2 225 3 360 1 25 2 79 1 28 1 81 2 312 1 82 1 232 1 182 1 138 1 87 2 368 1 92 1 186 1 283 1 140 1 40 1 98 1 239 1 374 4 41 2 
331 2 72 1 127 1 360 1 225 1 152 1 28 1 79 1 6 1 33 1 82 1 8 1 182 1 138 1 119 1 368 1 160 3 14 3 283 1 167 1 140 1 374 2 
331 1 72 1 360 1 225 1 152 1 28 1 79 1 6 1 33 1 82 1 8 1 116 1 182 1 138 1 119 1 368 1 160 3 14 3 283 1 167 1 140 1 40 1 374 3 261 1 
331 2 241 1 72 1 127 1 225 1 360 1 152 1 28 1 79 1 6 1 33 1 82 1 8 1 116 1 182 1 138 1 119 1 368 1 160 3 14 3 283 1 167 1 140 1 40 1 374 3 261 1 
329 2 331 7 241 4 242 1 47 1 48 1 152 1 6 1 246 2 8 1 294 1 54 1 116 5 119 1 160 5 161 1 209 1 14 5 301 1 165 2 167 1 261 4 262 1 127 4 72 1 76 1 359 1 23 2 225 3 360 1 24 2 28 1 79 1 33 1 82 1 232 1 182 1 138 1 368 1 87 1 283 1 140 1 40 5 374 6 
329 2 331 4 242 1 241 2 47 1 152 1 6 1 246 2 8 1 54 1 116 2 119 1 160 4 14 4 301 1 165 2 167 1 215 1 261 2 262 1 72 1 127 2 359 1 23 2 360 1 24 2 225 2 25 2 28 1 79 1 82 1 232 1 182 1 138 1 368 1 87 1 283 1 140 1 40 1 374 4 
329 2 331 4 241 2 242 1 127 2 72 1 47 1 359 1 23 2 225 2 24 2 48 1 360 1 152 1 28 1 79 1 6 1 246 2 82 1 8 1 294 1 232 1 54 1 116 1 182 1 138 1 119 1 87 1 368 1 160 4 161 1 301 1 14 4 165 2 283 1 167 1 140 1 40 1 261 2 374 4 262 1 
329 2 331 4 241 2 242 1 127 2 72 1 47 1 359 1 23 2 225 2 24 2 48 1 360 1 152 1 28 1 79 1 6 1 246 2 82 1 8 1 294 1 232 1 54 1 116 1 182 1 138 1 119 1 87 1 368 1 160 4 161 1 301 1 14 4 165 2 283 1 167 1 140 1 40 1 261 2 374 4 262 1 
331 4 241 2 242 1 2 1 127 2 72 1 47 1 359 1 225 2 48 1 360 1 25 2 337 2 152 1 28 1 79 1 6 1 246 2 82 1 8 1 232 1 54 1 116 1 182 1 138 1 119 1 87 1 368 1 160 4 301 1 14 4 165 2 139 1 283 1 167 1 140 1 304 1 40 1 261 2 374 4 101 2 
329 2 331 5 242 1 241 3 72 1 127 3 47 1 359 1 23 2 225 2 24 2 48 1 360 1 152 1 28 1 79 1 6 1 246 2 82 1 8 1 54 1 232 1 294 1 116 1 182 1 138 1 119 1 87 1 368 1 160 4 161 1 209 1 301 1 14 4 165 2 283 1 167 1 140 1 40 1 374 5 261 3 262 1 
329 2 331 5 242 1 241 3 72 1 127 3 47 1 359 1 23 2 225 2 24 2 48 1 360 1 152 1 28 1 79 1 6 1 246 2 82 1 8 1 54 1 232 1 294 1 116 1 182 1 138 1 119 1 87 1 368 1 160 4 161 1 209 1 301 1 14 4 165 2 283 1 167 1 140 1 40 1 374 5 261 3 262 1 
331 4 242 1 241 2 47 1 337 2 152 1 6 1 246 2 8 1 54 1 116 1 119 1 160 4 14 4 301 1 165 2 167 1 215 1 261 2 72 1 127 2 359 1 360 1 225 2 25 2 28 1 79 1 82 1 232 1 182 1 138 1 368 1 87 1 139 1 283 1 140 1 40 1 374 4 101 2 
328 1 212 1 42 1 373 1 32 1 253 2 341 1 102 1 370 1 
328 2 194 3 221 1 308 1 358 2 338 1 271 1 292 1 340 11 229 4 230 1 80 1 365 2 316 8 341 1 118 1 253 4 64 3 12 6 370 2 320 1 212 2 124 1 373 2 260 1 213 1 67 14 325 11 190 2 191 2 352 1 102 2 327 1 
104 1 264 1 328 1 308 1 223 1 4 1 149 1 360 1 108 1 28 2 229 1 81 1 203 1 316 1 204 1 341 1 182 2 85 1 253 2 92 1 162 1 12 1 370 1 94 1 320 1 212 1 373 1 96 1 260 1 259 1 97 1 286 1 67 2 98 1 41 1 216 1 352 1 102 1 
328 3 104 2 244 1 291 1 149 2 338 3 108 1 340 7 154 2 341 3 56 2 57 1 345 2 118 4 253 6 122 2 162 3 12 10 166 1 212 3 259 1 260 1 67 20 352 1 216 1 264 3 21 1 308 1 357 1 223 2 358 3 360 1 77 1 28 3 229 7 179 1 80 4 31 1 81 3 365 8 316 10 35 2 182 3 85 2 92 2 39 1 370 3 94 2 320 2 373 3 97 1 286 2 325 7 190 2 98 2 191 2 41 1 102 3 327 2 
104 3 264 7 328 2 42 1 308 1 149 2 360 1 108 1 28 1 81 8 51 1 312 1 231 1 248 1 316 1 341 2 57 1 182 1 60 1 61 1 253 4 121 1 281 1 92 2 162 8 12 1 370 2 164 1 212 2 373 2 303 1 259 1 97 1 285 2 67 2 98 2 41 2 352 1 102 2 
328 1 193 1 358 1 360 1 338 1 108 1 340 1 28 1 229 1 80 1 365 1 53 1 316 1 341 1 182 1 253 2 12 2 370 1 212 1 373 1 260 1 259 1 325 1 67 3 190 1 191 1 142 1 102 1 327 1 
328 1 42 1 118 1 253 2 184 1 358 1 370 1 340 1 212 1 229 1 373 1 325 1 67 2 365 1 191 1 316 2 341 1 102 1 
328 1 42 1 253 2 12 2 370 1 338 1 340 1 212 1 229 1 373 1 322 1 80 1 325 1 67 2 365 1 341 1 102 1 327 1 
328 1 42 1 358 1 338 1 340 2 229 2 80 1 365 2 316 2 341 1 118 1 253 2 12 2 370 1 212 1 373 1 67 4 325 2 190 1 191 1 102 1 327 1 
328 1 118 1 121 1 253 2 184 1 358 1 370 1 340 1 212 1 229 1 373 1 325 1 67 2 365 1 191 1 316 2 341 1 102 1 
328 1 121 1 253 2 12 2 370 1 338 1 340 1 212 1 229 1 373 1 322 1 80 1 325 1 67 2 365 1 341 1 102 1 327 1 
328 1 358 1 338 1 340 2 229 2 80 1 365 2 316 2 341 1 118 1 253 2 121 1 12 2 370 1 212 1 373 1 67 4 325 2 190 1 191 1 102 1 327 1 
328 1 118 1 253 2 358 1 12 2 338 1 370 1 340 2 212 1 229 2 373 1 80 1 325 2 67 4 190 1 365 2 191 1 316 2 341 1 327 1 102 1 
264 1 104 1 328 1 308 1 223 1 149 1 28 1 81 1 316 1 35 1 341 1 182 1 85 1 253 2 92 1 162 1 12 1 370 1 94 1 320 1 212 1 373 1 67 2 286 1 98 1 41 1 352 1 102 1 
264 1 104 1 328 1 308 1 149 1 28 1 81 1 314 1 316 1 341 1 59 1 182 1 85 1 253 2 92 1 162 1 12 1 370 1 94 1 320 1 212 1 373 1 67 2 98 1 141 1 41 1 352 1 102 1 
328 1 358 1 338 1 340 2 229 2 80 1 365 2 316 2 341 1 118 1 253 2 12 2 370 1 212 1 373 1 260 1 67 4 325 2 190 1 191 1 102 1 327 1 
264 1 104 1 328 1 223 1 358 1 149 1 338 1 340 2 28 1 229 2 80 1 81 1 154 1 365 2 316 2 35 1 341 1 182 1 118 1 85 1 61 1 253 2 92 1 162 1 12 2 370 1 94 1 212 1 373 1 325 2 67 4 286 1 190 1 98 1 191 1 327 1 102 1 
328 1 147 1 358 1 360 1 338 1 108 1 340 1 28 1 229 1 365 1 53 1 316 2 341 1 182 1 118 1 253 2 12 1 370 1 212 1 373 1 260 1 259 1 67 3 325 1 190 1 191 1 142 1 327 1 102 1 
328 2 194 3 219 1 243 1 358 4 129 1 338 4 245 1 27 3 131 1 80 2 230 3 156 1 365 5 316 15 342 1 118 3 253 4 10 1 62 1 254 2 64 4 12 16 66 1 210 1 371 1 212 2 168 1 373 2 213 1 67 31 190 4 191 4 143 1 102 2 327 4 
328 3 194 3 219 1 243 1 358 4 129 1 338 3 245 1 27 4 131 1 80 3 230 3 156 1 365 6 316 17 342 1 118 3 253 6 10 1 62 1 254 2 64 4 234 1 12 15 66 1 210 1 371 1 212 3 168 1 373 3 213 1 67 32 190 4 191 4 143 1 102 3 327 3 
328 2 194 4 21 1 219 1 244 1 358 8 291 1 129 1 338 8 245 1 271 2 27 4 179 1 131 1 80 7 230 2 31 1 156 1 365 15 316 27 118 8 253 4 10 1 62 1 254 1 64 4 234 1 12 25 66 1 210 1 371 1 166 1 212 2 168 1 373 2 213 2 67 52 190 7 191 7 143 1 102 2 327 7 
328 2 266 1 194 1 243 1 358 3 129 1 338 3 27 2 80 3 230 1 365 6 316 9 118 3 253 4 10 2 254 1 64 2 12 10 66 1 210 1 371 1 212 2 373 2 213 1 67 19 190 3 191 3 143 1 102 2 327 3 
328 2 194 2 219 1 358 3 129 1 338 2 245 1 27 3 131 1 80 1 230 2 156 1 365 2 316 13 118 1 253 4 10 1 62 1 254 2 64 2 234 1 12 10 66 1 210 1 371 1 212 2 168 1 373 2 67 23 190 3 191 3 143 2 102 2 327 2 
84 1 172 1 189 1 155 1 247 1 255 1 224 1 134 1 55 1 115 1 
52 1 276 1 
251 1 84 1 324 1 189 1 155 1 247 1 255 1 375 1 115 1 
226 1 151 1 
297 1 367 1 237 1 
116 1 158 1 84 1 172 1 86 1 160 1 255 1 224 1 130 1 14 1 258 2 364 1 155 1 189 1 247 1 55 1 115 1 326 1 
116 1 158 1 84 1 172 1 86 1 160 1 255 1 224 1 130 1 14 1 258 2 364 1 155 1 189 1 247 1 55 1 115 1 326 1 
116 1 158 1 84 1 172 1 86 1 160 1 255 1 224 1 130 1 14 1 258 2 364 1 155 1 189 1 247 1 55 1 115 1 326 1 
367 1 226 1 151 1 
367 1 226 1 151 1 
297 1 237 1 
297 1 367 1 237 1 
257 1 117 1 
360 2 108 2 111 1 28 2 273 1 155 1 247 1 52 1 115 1 276 1 84 1 117 1 182 2 252 1 233 1 86 1 160 1 255 1 299 1 14 1 257 1 320 1 258 1 259 2 236 1 189 1 326 1 
104 1 328 1 264 2 218 1 175 1 332 1 308 1 149 1 360 2 28 2 81 2 316 1 341 1 298 1 182 2 60 1 253 2 281 1 92 1 162 2 12 1 370 1 212 1 321 1 373 1 260 1 285 2 67 2 98 1 352 1 102 1 
57 1 264 2 330 1 61 1 22 1 92 1 162 2 269 1 163 1 176 1 339 1 81 2 153 1 98 1 132 1 306 2 249 1 378 1 100 1 
57 1 264 1 330 1 197 1 162 1 92 1 269 1 163 1 176 1 339 1 81 1 153 1 132 1 98 1 306 2 249 1 100 1 
104 1 264 1 92 1 149 1 162 1 164 1 15 1 81 1 312 1 98 1 16 1 41 1 378 1 100 1 
57 1 264 1 330 1 22 1 92 1 162 1 269 1 163 1 176 1 339 1 81 1 153 1 132 1 98 1 306 2 249 1 378 1 100 1 
220 1 
32 1 
329 1 331 1 47 1 359 1 23 1 24 1 225 1 25 1 54 1 232 1 116 2 87 1 160 1 301 1 14 1 40 1 262 1 
104 10 192 2 145 1 331 5 195 3 334 2 47 8 149 3 338 2 157 2 113 2 54 4 56 2 116 8 61 1 346 2 160 5 256 2 162 3 301 4 14 5 351 1 264 3 18 2 310 1 359 4 358 2 225 3 24 6 311 6 25 12 227 1 361 6 81 3 34 1 180 2 232 4 136 1 181 2 85 3 87 9 88 2 92 4 282 1 140 2 40 2 190 2 98 3 99 1 287 1 191 2 41 1 377 2 327 2 
194 1 219 1 359 1 47 4 358 2 24 3 25 6 311 5 338 2 245 1 131 1 361 5 230 1 180 1 54 1 232 1 116 3 87 6 62 1 64 1 301 1 168 1 190 2 191 2 327 2 
103 1 173 1 244 1 359 1 358 2 47 2 291 1 360 1 338 1 108 1 28 1 31 1 82 1 180 2 54 1 232 1 294 1 53 1 181 1 182 1 87 2 160 1 280 1 91 1 65 1 301 1 14 1 259 1 
116 1 87 1 359 1 47 1 301 1 282 1 40 1 34 1 232 1 54 1 
56 1 116 5 181 1 87 5 358 2 47 5 24 5 311 5 25 10 338 2 361 5 190 2 180 2 191 2 327 2 
116 1 331 1 40 1 160 1 14 1 225 1 
104 1 264 4 331 4 335 1 310 1 359 2 47 2 149 1 225 2 227 2 81 4 312 1 157 2 54 2 232 1 206 1 296 1 87 2 160 3 92 1 162 4 301 2 14 3 186 1 164 1 98 1 68 1 41 2 351 2 
328 1 264 1 104 1 170 1 173 1 308 1 223 1 149 1 360 2 108 2 28 3 81 1 53 2 35 1 341 1 182 3 85 1 253 2 162 1 92 1 12 1 370 1 94 1 320 1 212 1 373 1 259 2 67 1 286 1 98 1 41 1 102 1 
116 4 21 1 87 1 47 2 359 1 24 2 301 1 25 4 311 2 361 2 40 2 157 1 232 1 54 1 351 1 
120 1 189 1 115 1 
117 1 172 1 189 1 293 1 115 1 
120 1 189 1 115 1 
120 1 189 1 115 1 
355 1 189 1 115 1 
355 1 189 1 115 1 
355 1 189 1 115 1 
189 1 115 1 
84 1 155 1 
328 1 194 1 21 1 244 1 358 1 129 1 291 1 338 1 230 1 179 1 80 2 31 1 365 2 316 4 253 2 62 1 64 1 12 4 212 1 166 1 373 1 67 8 102 1 
328 2 194 1 21 1 244 1 358 2 291 1 129 1 338 1 80 2 179 1 230 1 31 1 365 3 316 6 208 1 118 1 253 4 62 1 64 2 12 5 166 1 212 2 373 2 213 1 67 11 190 1 191 1 102 2 
328 2 194 1 219 1 358 2 129 1 338 2 245 1 230 1 80 1 131 1 365 2 316 6 208 1 118 1 253 4 62 1 64 1 12 6 212 2 168 1 373 2 67 12 190 2 191 2 102 2 327 2 
328 3 194 1 21 1 219 1 244 1 358 3 291 1 129 1 338 2 245 1 80 2 179 1 230 1 131 1 31 1 365 4 316 10 208 1 118 2 253 6 62 1 64 1 234 1 12 7 166 1 212 3 168 1 373 3 67 17 190 2 191 2 102 3 327 1 
328 1 194 1 21 1 244 1 358 1 129 1 291 1 338 1 230 1 179 1 80 2 31 1 365 2 316 4 253 2 62 1 64 1 12 4 212 1 166 1 373 1 67 8 102 1 
328 1 194 1 219 1 358 2 129 1 338 2 245 1 230 1 131 1 365 1 316 6 118 1 253 2 62 1 64 1 12 6 212 1 168 1 373 1 67 12 190 2 191 2 102 1 327 2 
328 3 194 1 219 1 358 2 129 1 338 1 245 1 230 1 80 1 131 1 365 2 316 7 208 1 118 1 253 6 62 1 64 1 234 1 12 4 212 3 168 1 373 3 67 11 190 2 191 2 102 3 327 1 
328 4 194 1 219 1 243 1 358 3 129 1 338 2 245 1 131 1 230 1 80 3 365 6 316 9 118 3 253 8 62 1 64 1 234 2 12 7 212 4 168 1 373 4 67 16 190 3 191 3 102 4 327 2 
118 3 244 3 358 1 291 3 12 4 338 1 166 2 179 1 80 3 31 1 67 7 365 6 316 3 
328 4 194 1 21 1 219 1 243 1 244 1 358 3 291 1 129 1 338 2 245 1 179 1 131 1 230 1 80 4 31 1 365 5 316 10 118 1 253 8 62 1 64 1 234 2 12 8 166 1 212 4 168 1 373 4 67 18 190 2 191 2 102 4 327 1 
328 2 118 1 21 1 253 4 244 1 358 1 234 1 291 1 12 4 338 1 212 2 166 1 373 2 80 2 179 1 31 1 67 8 365 3 316 4 102 2 
32 1 
328 1 208 1 118 1 253 2 358 1 12 2 338 1 212 1 373 1 80 1 67 4 190 1 365 2 191 1 316 2 327 1 102 1 
194 1 118 1 64 2 358 1 12 4 338 1 80 1 230 1 213 1 67 7 190 1 365 2 316 3 191 1 327 1 
328 2 194 2 21 1 244 2 358 3 291 2 338 3 292 1 271 1 179 1 80 5 31 1 365 9 316 11 118 4 253 4 64 2 234 2 12 12 166 1 212 2 373 2 213 1 67 23 190 2 191 2 125 1 327 2 102 2 
67 1 64 1 12 1 
194 1 67 1 316 1 
56 1 328 1 208 1 118 1 253 2 358 1 12 3 338 1 212 1 373 1 80 2 67 6 190 1 365 3 191 1 316 3 102 1 327 1 
328 1 194 1 219 1 358 2 129 1 338 2 245 1 230 1 80 1 131 1 365 2 316 6 118 1 253 2 62 1 64 1 12 6 212 1 168 1 373 1 67 12 190 2 191 2 102 1 327 2 
118 1 244 1 358 1 291 1 12 3 338 1 80 1 31 1 67 6 365 2 316 3 
328 1 118 1 253 2 244 1 234 1 291 1 12 2 166 1 212 1 373 1 80 1 179 1 67 3 365 2 316 1 125 1 102 1 
328 1 118 2 253 2 244 2 91 1 358 2 129 1 291 2 12 5 338 2 212 1 373 1 80 3 31 1 67 10 365 5 316 5 102 1 
328 1 118 1 253 2 358 1 129 1 212 1 373 1 67 2 365 1 191 1 316 2 102 1 
328 1 118 1 253 2 358 1 129 1 12 2 338 1 212 1 373 1 80 1 67 4 190 1 365 2 191 1 316 2 327 1 102 1 
328 3 118 1 243 1 253 6 244 1 234 1 129 1 291 1 12 2 212 3 373 3 80 1 67 3 365 2 316 1 125 1 102 3 
328 5 194 3 21 1 243 1 244 3 358 5 291 3 129 1 338 5 179 1 230 1 80 7 31 2 365 12 316 16 36 1 208 1 118 5 253 10 64 4 234 2 12 18 318 1 166 1 212 5 373 5 213 1 67 34 190 3 238 1 191 3 125 1 102 5 327 3 
320 1 28 1 182 1 368 1 360 1 198 1 354 1 
182 1 307 1 368 1 360 1 198 1 235 1 320 1 211 1 95 1 28 1 133 1 354 1 
264 1 32 1 81 1 162 1 41 1 
104 1 264 1 182 2 85 1 223 1 149 1 92 1 162 1 360 1 108 1 94 1 320 1 28 2 259 1 81 1 97 1 98 1 41 1 
104 3 264 1 192 1 182 2 85 2 88 1 223 1 149 2 92 1 162 1 360 2 108 1 283 1 94 1 227 1 320 1 167 1 28 2 259 2 81 1 97 1 82 1 98 1 
104 3 264 2 192 1 182 2 85 2 88 1 149 2 92 1 162 2 360 2 108 1 283 1 94 1 227 1 320 1 167 1 28 2 259 2 81 2 97 1 82 1 141 1 98 1 263 1 
116 1 264 3 104 4 192 1 331 1 85 1 279 1 88 1 63 1 195 1 334 1 160 2 149 1 92 1 162 3 14 2 227 1 140 1 81 3 40 1 98 1 41 1 263 1 
116 1 264 3 104 4 192 1 331 1 85 1 88 1 195 1 334 1 160 2 149 1 92 1 162 3 14 2 227 1 140 1 81 3 40 1 98 1 113 1 41 1 263 1 
264 1 81 1 98 1 231 1 92 1 162 1 
57 1 264 6 104 3 105 1 60 1 85 1 61 1 162 7 149 2 92 3 270 1 110 1 303 1 81 7 285 1 51 1 231 1 98 2 248 1 287 1 41 2 
104 1 328 2 264 1 21 1 244 1 223 1 358 1 291 1 149 1 360 1 338 1 108 1 340 1 28 2 229 1 80 2 179 1 31 1 81 1 154 1 365 2 316 3 341 2 35 1 298 1 182 2 85 1 253 4 61 1 122 1 92 1 162 1 12 3 370 2 94 1 320 2 166 1 212 2 373 2 260 1 259 1 97 1 325 1 67 6 286 1 98 1 102 2 
264 1 18 1 104 2 331 2 195 1 334 1 310 1 47 1 359 2 225 1 81 1 34 1 113 1 54 2 232 2 116 1 233 1 87 1 346 1 160 3 162 1 256 1 282 1 301 2 14 3 140 1 40 1 41 1 
104 2 264 2 85 1 81 2 61 1 334 1 98 1 231 1 92 2 149 1 287 1 99 1 162 2 
264 4 104 1 61 1 196 1 92 1 162 4 149 1 164 1 81 4 312 1 98 1 41 1 263 1 
264 2 104 1 37 1 85 1 162 2 150 1 149 1 92 2 39 1 270 1 227 1 110 1 81 2 98 1 
339 1 264 1 81 1 98 1 132 1 306 1 92 1 162 1 249 1 41 1 
104 1 57 1 264 2 60 1 81 2 175 1 61 1 98 1 92 1 149 1 162 2 
264 4 104 3 60 1 61 1 196 1 162 5 149 2 92 2 164 1 227 1 303 1 81 5 312 1 98 2 248 1 41 1 
264 4 104 3 60 1 61 1 196 1 90 1 162 5 149 2 92 2 164 1 227 1 303 1 81 5 312 1 98 2 41 1 
104 1 264 1 182 2 85 1 149 1 92 1 162 1 360 1 108 1 94 1 320 1 28 2 259 1 81 1 97 1 141 1 98 1 41 1 
270 1 104 1 264 1 227 1 110 1 105 1 85 1 81 1 98 1 92 2 149 1 287 1 162 1 
320 1 174 1 45 1 135 1 205 1 
116 1 233 1 174 2 45 2 160 2 14 2 93 1 283 1 320 1 167 1 272 1 140 1 6 1 40 1 82 1 275 1 135 2 205 1 69 1 
218 1 28 1 321 1 182 1 332 1 45 1 135 1 360 1 205 1 
275 1 205 1 69 1 
32 1 
5 1 177 1 178 1 188 1 363 1 295 1 185 1 
177 1 214 1 114 1 
366 1 183 1 159 1 290 1 185 3 5 1 177 3 123 2 178 1 363 1 188 1 295 1 
5 1 177 2 178 1 188 1 363 1 75 1 295 1 319 1 185 2 
330 1 290 1 185 1 177 1 5 1 178 1 30 1 363 1 315 1 306 1 249 1 
5 1 177 1 178 1 188 1 363 1 290 1 185 1 
177 1 178 1 188 2 363 1 290 1 295 1 185 1 
343 1 290 1 369 1 185 2 5 1 177 2 178 2 188 1 363 2 201 1 
128 1 290 1 319 2 185 3 177 3 5 2 178 1 188 1 363 1 112 1 315 1 295 1 144 1 
330 1 43 1 290 1 319 1 185 2 339 1 176 1 5 1 177 2 178 1 188 1 363 1 306 2 295 1 249 1 
288 1 75 1 290 1 319 2 185 4 177 4 5 2 178 2 188 1 363 2 112 1 315 1 295 1 
5 1 177 1 178 1 188 1 363 1 290 1 295 1 185 1 
366 1 159 1 319 2 200 1 185 4 123 1 177 4 5 3 178 1 188 2 363 1 112 1 315 1 295 2 
290 1 319 1 185 2 5 1 177 2 78 1 178 1 362 1 188 1 363 1 295 1 70 1 
366 2 159 1 290 1 185 3 5 1 177 3 123 2 178 1 363 1 188 1 202 1 295 1 
302 2 0 1 5 2 29 1 
177 1 178 1 146 1 363 1 290 1 185 1 
5 1 177 2 178 1 188 1 363 1 290 1 295 1 319 1 144 1 185 2 
305 1 
5 1 177 1 178 1 188 1 363 1 290 1 295 1 185 1 
290 1 319 1 185 3 177 3 123 1 5 1 178 1 363 1 188 1 295 1 144 1 
5 1 112 1 315 1 200 1 
5 1 188 1 
